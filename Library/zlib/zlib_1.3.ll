; ModuleID = 'zlib_1.3.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.config_s = type { i16, i16, i16, i16, i32 (%struct.internal_state*, i32)* }
%struct.internal_state = type { %struct.z_stream_s*, i32, i8*, i64, i8*, i64, i32, %struct.gz_header_s*, i64, i8, i32, i32, i32, i32, i8*, i64, i16*, i16*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [573 x %struct.ct_data_s], [61 x %struct.ct_data_s], [39 x %struct.ct_data_s], %struct.tree_desc_s, %struct.tree_desc_s, %struct.tree_desc_s, [16 x i16], [573 x i32], i32, i32, [573 x i8], i8*, i32, i32, i32, i64, i64, i32, i32, i16, i32, i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.gz_header_s = type { i32, i64, i32, i32, i8*, i32, i32, i8*, i32, i8*, i32, i32, i32 }
%struct.ct_data_s = type { %union.anon, %union.anon }
%union.anon = type { i16 }
%struct.tree_desc_s = type { %struct.ct_data_s*, i32, %struct.static_tree_desc_s* }
%struct.static_tree_desc_s = type { %struct.ct_data_s*, i32*, i32, i32, i32 }
%struct.code = type { i8, i8, i16 }
%struct.inflate_state = type { %struct.z_stream_s*, i32, i32, i32, i32, i32, i32, i64, i64, %struct.gz_header_s*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, %struct.code*, %struct.code*, i32, i32, i32, i32, i32, i32, %struct.code*, [320 x i16], [288 x i16], [1444 x %struct.code], i32, i32, i32 }
%struct.gzFile_s = type { i32, i8*, i64 }
%struct.gz_state = type { %struct.gzFile_s, i32, i32, i8*, i32, i32, i8*, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i64, i32, i32, i8*, %struct.z_stream_s }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@crc_table = internal constant [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], align 16
@crc_braid_table = internal unnamed_addr constant [8 x [256 x i32]] [[256 x i32] [i32 0, i32 -1354460601, i32 -2047335729, i32 717009032, i32 -796834849, i32 2143670680, i32 1434018064, i32 -96603305, i32 2054390271, i32 -717810760, i32 -7625936, i32 1355755895, i32 -1426931168, i32 95834215, i32 789242095, i32 -2142342488, i32 -186186754, i32 1537446329, i32 1897865521, i32 -564415626, i32 610680865, i32 -1960652186, i32 -1583455506, i32 249229481, i32 -1902870015, i32 567283782, i32 191668430, i32 -1540869495, i32 1578484190, i32 -246328423, i32 -605166831, i32 1957261654, i32 851378621, i32 -1644456966, i32 -1220074638, i32 402895157, i32 -499236254, i32 1299894309, i32 1741054125, i32 -930942230, i32 1221361730, i32 -410512891, i32 -852188531, i32 1651519690, i32 -1739734115, i32 923357658, i32 498458962, i32 -1292799211, i32 -967310781, i32 1763479556, i32 1134567564, i32 -320556341, i32 383336860, i32 -1180838949, i32 -1826528429, i32 1013313812, i32 -1137998916, i32 326046203, i32 970170739, i32 -1768475852, i32 1823129699, i32 -1007791580, i32 -380443988, i32 1175875819, i32 1702757242, i32 -902131395, i32 -528080459, i32 1338160114, i32 -1241562971, i32 448516834, i32 805790314, i32 -1622937555, i32 520979077, i32 -1337388862, i32 -1695178678, i32 900805133, i32 -812859046, i32 1623741213, i32 1249174421, i32 -449809966, i32 -1852243836, i32 1054708419, i32 341910091, i32 -1155158004, i32 1092109147, i32 -295907044, i32 -991927916, i32 1805972435, i32 -336952965, i32 1152258876, i32 1846715316, i32 -1051315725, i32 996917924, i32 -1808838429, i32 -1097605013, i32 299332140, i32 1472266951, i32 -125464448, i32 -768008184, i32 2105389647, i32 -2025832168, i32 671404895, i32 45638615, i32 -1375932016, i32 766673720, i32 -2097802881, i32 -1471503881, i32 118371248, i32 -46939929, i32 1383551648, i32 2026627624, i32 -678465425, i32 -1557790407, i32 207786878, i32 652092406, i32 -1986350671, i32 1940341478, i32 -589049695, i32 -161521623, i32 1495003758, i32 -648707898, i32 1980830337, i32 1554883081, i32 -202821554, i32 164938521, i32 -1500491426, i32 -1943215658, i32 594047889, i32 -889452812, i32 1706595507, i32 1325671483, i32 -532629892, i32 444417323, i32 -1254500500, i32 -1618647068, i32 818017699, i32 -1332771061, i32 533402956, i32 897033668, i32 -1707919485, i32 1611580628, i32 -817211757, i32 -436804069, i32 1253209180, i32 1041958154, i32 -1856006323, i32 -1142741051, i32 346535298, i32 -291879211, i32 1105122450, i32 1801610266, i32 -1004079523, i32 1147700469, i32 -349432142, i32 -1047484870, i32 1859400829, i32 -1796618454, i32 1001215341, i32 286385637, i32 -1101695070, i32 -129824951, i32 1460114702, i32 2109416838, i32 -754993215, i32 683820182, i32 -2021206319, i32 -1388681639, i32 41874462, i32 -2110749002, i32 762582257, i32 130589817, i32 -1467206082, i32 1387382121, i32 -34253010, i32 -683022426, i32 2014148065, i32 212075703, i32 -1545562384, i32 -1990449544, i32 639153215, i32 -601536664, i32 1935791407, i32 1507681703, i32 -157681696, i32 1993835848, i32 -644671729, i32 -214980729, i32 1550529984, i32 -1504262505, i32 152196304, i32 598664280, i32 -1930791393, i32 -1350433394, i32 13014985, i32 712648513, i32 -2059487994, i32 2130921041, i32 -800599018, i32 -84188002, i32 1438643929, i32 -705592207, i32 2058688054, i32 1342809790, i32 -11717383, i32 91277230, i32 -1439410711, i32 -2138512031, i32 801928998, i32 1533347440, i32 -199125961, i32 -560126785, i32 1910093560, i32 -1947974225, i32 614520808, i32 236742496, i32 -1588005593, i32 555124623, i32 -1907223096, i32 -1527864000, i32 195704583, i32 -241712048, i32 1590908439, i32 1953490591, i32 -617909032, i32 -1656945613, i32 846829172, i32 415573756, i32 -1216236357, i32 1304184812, i32 -487008853, i32 -935041757, i32 1728116580, i32 -414284340, i32 1208620939, i32 1656137475, i32 -839764668, i32 936363539, i32 -1735699372, i32 -1304959780, i32 494106267, i32 1775896525, i32 -962685558, i32 -333306622, i32 1130805061, i32 -1185201134, i32 371185237, i32 1017341661, i32 -1813515110, i32 329877042, i32 -1125313419, i32 -1773034243, i32 957691578, i32 -1020738067, i32 1819039658, i32 1188095778, i32 -376146587], [256 x i32] [i32 0, i32 1317604265, i32 -1659758766, i32 -744809221, i32 -514512667, i32 -1344527540, i32 2085044151, i32 852374558, i32 433805195, i32 1465015330, i32 -2067185447, i32 -901756048, i32 -124878994, i32 -1241025337, i32 1704749116, i32 722822037, i32 867610390, i32 2101322943, i32 -1364936636, i32 -533875731, i32 -756840461, i32 -1670738854, i32 1341231265, i32 24681224, i32 711850141, i32 1692726068, i32 -1216352305, i32 -101260186, i32 -885469064, i32 -2051941423, i32 1445644074, i32 413387907, i32 1735220780, i32 702829957, i32 -92321410, i32 -1258929449, i32 -2043119927, i32 -927892128, i32 455762331, i32 1436772914, i32 2125859239, i32 809435662, i32 -475783435, i32 -1389554340, i32 -1612504766, i32 -781571349, i32 49362448, i32 1282948537, i32 1423700282, i32 441645715, i32 -909515160, i32 -2025787967, i32 -1248929313, i32 -83373450, i32 681365133, i32 1712702756, i32 1291888305, i32 59354392, i32 -804081181, i32 -1633961398, i32 -1403679148, i32 -488864259, i32 826775814, i32 2144244399, i32 -824525736, i32 -2141997071, i32 1405659914, i32 490840227, i32 797938877, i32 1627823892, i32 -1298299921, i32 -65763258, i32 -687739949, i32 -1719082886, i32 1242823809, i32 77264680, i32 911524662, i32 2027800735, i32 -1421421468, i32 -439361587, i32 -43248818, i32 -1276831513, i32 1618871324, i32 787943349, i32 473512875, i32 1387278338, i32 -2127876871, i32 -811456688, i32 -457751355, i32 -1438757012, i32 2040877975, i32 925653054, i32 98724896, i32 1265330057, i32 -1729070222, i32 -696684325, i32 -1447566732, i32 -415307299, i32 883291430, i32 2049769103, i32 1222822545, i32 107725112, i32 -705634877, i32 -1686514070, i32 -1335052801, i32 -18497962, i32 763273901, i32 1677175044, i32 1362730266, i32 531666611, i32 -869561784, i32 -2103279135, i32 -1711190686, i32 -729266485, i32 118708784, i32 1234850201, i32 2069128583, i32 903704110, i32 -431590699, i32 -1462797956, i32 -2082858263, i32 -850194112, i32 516427195, i32 1346438674, i32 1653551628, i32 738605477, i32 -6478498, i32 -1324077321, i32 1187282673, i32 139294040, i32 -606705245, i32 -1788911094, i32 -1483647468, i32 -384279107, i32 981680454, i32 1946831599, i32 1595877754, i32 295051987, i32 -1039319512, i32 -1937492607, i32 -1102446177, i32 -255653322, i32 592975565, i32 1842421092, i32 1970459111, i32 1006361166, i32 -396310859, i32 -1494627044, i32 -1809319678, i32 -626068821, i32 154529360, i32 1203561977, i32 1823049324, i32 572558789, i32 -239365826, i32 -1087202665, i32 -1912820087, i32 -1015700192, i32 284080603, i32 1583854194, i32 564732125, i32 1864379252, i32 -1128581233, i32 -231588826, i32 -1057224648, i32 -1904933999, i32 1575886698, i32 325522627, i32 947025750, i32 1996193023, i32 -1520410620, i32 -337024083, i32 -651731021, i32 -1750182886, i32 1144342753, i32 180110152, i32 304058315, i32 1553368162, i32 -1894934375, i32 -1048276176, i32 -213211346, i32 -1111249785, i32 1851306108, i32 550616021, i32 197449792, i32 1162728425, i32 -1764307182, i32 -664812357, i32 -359534427, i32 -1541866740, i32 2005133303, i32 957017182, i32 -2011250007, i32 -963131136, i32 353162747, i32 1535499858, i32 1766582860, i32 667083237, i32 -195429090, i32 -1160710473, i32 -1849322206, i32 -548626805, i32 215450224, i32 1113491929, i32 1888533959, i32 1041872494, i32 -310203755, i32 -1559518916, i32 -1146589761, i32 -182360554, i32 649755373, i32 1748201796, i32 1526547802, i32 343166707, i32 -940617208, i32 -1989781087, i32 -1569506764, i32 -319147619, i32 1063333222, i32 1911039695, i32 1126568657, i32 229579128, i32 -567016061, i32 -1866658262, i32 -277635963, i32 -1577412820, i32 1918995415, i32 1021870206, i32 237417568, i32 1085259721, i32 -1825266894, i32 -574773093, i32 -156710130, i32 -1205747545, i32 1807408220, i32 624154613, i32 402514923, i32 1500833858, i32 -1963985735, i32 -999882992, i32 -591055981, i32 -1840498630, i32 1104618689, i32 257830760, i32 1032854390, i32 1931022559, i32 -1602089948, i32 -301267059, i32 -987864040, i32 -1953009743, i32 1477210954, i32 377845987, i32 608914685, i32 1791117140, i32 -1185326161, i32 -137342970], [256 x i32] [i32 0, i32 -1920401950, i32 -1067385467, i32 1307050087, i32 1538325835, i32 -700972887, i32 -1680867122, i32 374930732, i32 -1218315626, i32 988350324, i32 1996556051, i32 -91620623, i32 -321845283, i32 1633286719, i32 749861464, i32 -1590097990, i32 -1246563475, i32 943328911, i32 1976700648, i32 -128257270, i32 -301855194, i32 1670050756, i32 778236835, i32 -1544942015, i32 47385083, i32 -1889799143, i32 -1028393858, i32 1329269148, i32 1499722928, i32 -722794158, i32 -1727854283, i32 344716503, i32 -1340809061, i32 1033641337, i32 1886657822, i32 -33758980, i32 -341566000, i32 1714217010, i32 734322773, i32 -1504961097, i32 125114893, i32 -1963071505, i32 -954865784, i32 1251809898, i32 1556473670, i32 -783476060, i32 -1666901309, i32 288220961, i32 94770166, i32 -2010190316, i32 -976818573, i32 1213076369, i32 1578561213, i32 -744615073, i32 -1636429000, i32 335474394, i32 -1295521440, i32 1062147202, i32 1923552485, i32 -13637369, i32 -378072021, i32 1694493129, i32 689433006, i32 -1533078452, i32 -1151809673, i32 919616149, i32 2067282674, i32 -156186864, i32 -521651652, i32 1835059166, i32 545834937, i32 -1392493989, i32 205077985, i32 -2119057405, i32 -866533276, i32 1104231814, i32 1468645546, i32 -637452984, i32 -1746322129, i32 442613965, i32 250229786, i32 -2090677768, i32 -829765217, i32 1124217981, i32 1432013137, i32 -657312589, i32 -1791347500, i32 414370102, i32 -1182019956, i32 872625006, i32 2045457161, i32 -194785557, i32 -499436601, i32 1874054693, i32 576441922, i32 -1345113184, i32 189540332, i32 -2033919474, i32 -886252951, i32 1185163147, i32 1358748327, i32 -579590331, i32 -1868814558, i32 487905984, i32 -1137844870, i32 832905368, i32 2085429503, i32 -238691043, i32 -409133007, i32 1779817939, i32 670948788, i32 -1435164586, i32 -1090595711, i32 863381859, i32 2124294404, i32 -216607514, i32 -447862326, i32 1757860904, i32 623825999, i32 -1465505363, i32 161426967, i32 -2078813195, i32 -905981038, i32 1148661360, i32 1378866012, i32 -542691650, i32 -1840304423, i32 533189435, i32 -1379891025, i32 541619533, i32 1839232298, i32 -534214456, i32 -160401948, i32 2079885318, i32 907053153, i32 -1147636349, i32 446788153, i32 -1758883877, i32 -624848964, i32 1464431198, i32 1091669874, i32 -862358896, i32 -2123271433, i32 217681685, i32 410155970, i32 -1778743776, i32 -669874617, i32 1436187557, i32 1136821897, i32 -833979541, i32 -2086503668, i32 237668078, i32 -1357676204, i32 580615350, i32 1869839569, i32 -486833869, i32 -190612449, i32 2032894461, i32 885227930, i32 -1186235272, i32 500459572, i32 -1872980522, i32 -575367759, i32 1346136147, i32 1180996991, i32 -873699171, i32 -2046531334, i32 193762584, i32 -1430941022, i32 658337600, i32 1792372519, i32 -413297979, i32 -251301911, i32 2089652747, i32 828740204, i32 -1125290098, i32 -1469670567, i32 636380859, i32 1745250012, i32 -443638978, i32 -204052974, i32 2120129520, i32 867605399, i32 -1103206795, i32 520577487, i32 -1836082131, i32 -546857910, i32 1391419816, i32 1152883844, i32 -918593178, i32 -2066259711, i32 157261027, i32 379080664, i32 -1693404614, i32 -688344483, i32 1534087103, i32 1294512787, i32 -1063235727, i32 -1924641002, i32 12628724, i32 -1577470642, i32 745621676, i32 1637435595, i32 -334383831, i32 -95860731, i32 2009183719, i32 975811968, i32 -1214166942, i32 -1557480267, i32 782385495, i32 1665810736, i32 -289227566, i32 -124108290, i32 1964162076, i32 955956347, i32 -1250803303, i32 340477475, i32 -1715225663, i32 -735331418, i32 1503872580, i32 1341897576, i32 -1032632694, i32 -1885649171, i32 34847503, i32 -1500729533, i32 721703585, i32 1726763718, i32 -345723100, i32 -46378488, i32 1890889706, i32 1029484429, i32 -1328262545, i32 300766677, i32 -1671059401, i32 -779245488, i32 1543853490, i32 1247651998, i32 -942320260, i32 -1975692005, i32 129345785, i32 322853934, i32 -1632198196, i32 -748772949, i32 1591106633, i32 1217306981, i32 -989438841, i32 -1997644576, i32 90611970, i32 -1537235272, i32 701979482, i32 1681873725, i32 -373840161, i32 -1090573, i32 1919395345, i32 1066378870, i32 -1308140652], [256 x i32] [i32 0, i32 -2131749089, i32 -628021121, i32 1516322656, i32 1850955455, i32 -291290720, i32 -1262321984, i32 875719135, i32 -593056386, i32 1549187681, i32 104301825, i32 -2033741282, i32 -1292502079, i32 839249118, i32 1751438270, i32 -392903519, i32 1648123069, i32 -489927774, i32 -1196591934, i32 945644509, i32 208603650, i32 -1935729379, i32 -687988099, i32 1443771746, i32 -1097141821, i32 1047193308, i32 1678498236, i32 -453259613, i32 -792090756, i32 1345957987, i32 173575939, i32 -1968662500, i32 -998721158, i32 1149808229, i32 518623493, i32 -1642494438, i32 -1439961147, i32 719059162, i32 1891289018, i32 -263532379, i32 417207300, i32 -1741815013, i32 -1034994565, i32 1119824740, i32 1988969147, i32 -159558236, i32 -1407423804, i32 753696219, i32 -1505434169, i32 649392856, i32 2094386616, i32 -64628057, i32 -937970824, i32 1223140455, i32 310811399, i32 -1837724648, i32 2061650105, i32 -99459162, i32 -1603051322, i32 545486809, i32 347151878, i32 -1807677159, i32 -836749703, i32 1322262886, i32 1400927413, i32 -747609174, i32 -1995350838, i32 165759957, i32 1037246986, i32 -1121766123, i32 -415102347, i32 1739726186, i32 -1893279285, i32 265735892, i32 1438118324, i32 -716708181, i32 -512389260, i32 1636145259, i32 1004840715, i32 -1156272108, i32 834414600, i32 -1320403177, i32 -349372297, i32 1809651560, i32 1609531063, i32 -551589464, i32 -2055317816, i32 93209047, i32 -317029002, i32 1844089449, i32 931900681, i32 -1216628202, i32 -2092313655, i32 62506198, i32 1507392438, i32 -651629399, i32 -1745302065, i32 386456272, i32 1298785712, i32 -845548881, i32 -106194064, i32 2036042863, i32 591049487, i32 -1547000816, i32 1264476337, i32 -877758546, i32 -1848686386, i32 289365969, i32 621622798, i32 -1510137583, i32 -6545807, i32 2137786734, i32 -171667086, i32 1966376557, i32 794147085, i32 -1348096494, i32 -1684551731, i32 459788498, i32 1090973618, i32 -1040779091, i32 694303756, i32 -1450038509, i32 -202173325, i32 1929577324, i32 1194420915, i32 -943620692, i32 -1650441524, i32 491804115, i32 -1493112470, i32 670105205, i32 2106704149, i32 -43919862, i32 -917258283, i32 1235462346, i32 331519914, i32 -1825406795, i32 2074493972, i32 -78228725, i32 -1590203285, i32 566721396, i32 368382635, i32 -1794832972, i32 -815514924, i32 1335111115, i32 -985877033, i32 1171038920, i32 531471784, i32 -1621259593, i32 -1418730648, i32 731903095, i32 1912523543, i32 -250684408, i32 429529257, i32 -1721102410, i32 -1022676778, i32 1140533193, i32 2009681430, i32 -147236599, i32 -1386715543, i32 766013814, i32 1668829200, i32 -477608177, i32 -1175881617, i32 957968240, i32 220923567, i32 -1915022928, i32 -675664176, i32 1464482255, i32 -1075905170, i32 1060039281, i32 1699730705, i32 -440417778, i32 -779244591, i32 1367194830, i32 186418094, i32 -1947429711, i32 21236909, i32 -2118902862, i32 -606788398, i32 1529164749, i32 1863801362, i32 -270054131, i32 -1249480083, i32 896951666, i32 -572349997, i32 1561507532, i32 125012396, i32 -2021417293, i32 -1280182420, i32 859955315, i32 1763761939, i32 -372193268, i32 -192897569, i32 1953532608, i32 772912544, i32 -1360944449, i32 -1697395872, i32 438557823, i32 1078125343, i32 -1062013952, i32 673591457, i32 -1462360130, i32 -222881570, i32 1917259713, i32 1182098974, i32 -964333311, i32 -1662759327, i32 471095678, i32 -1766014622, i32 374134397, i32 1278077213, i32 -857866750, i32 -118515747, i32 2015330498, i32 578731938, i32 -1567708995, i32 1243245596, i32 -890602749, i32 -1869921181, i32 276517756, i32 608778915, i32 -1531368004, i32 -19393828, i32 2116552131, i32 821568677, i32 -1341639750, i32 -362214182, i32 1788419013, i32 1588294170, i32 -564435707, i32 -2076550555, i32 80366970, i32 -329348645, i32 1823383236, i32 919576996, i32 -1237338437, i32 -2113020060, i32 50186363, i32 1486681883, i32 -663953404, i32 1388607512, i32 -768315641, i32 -2007674777, i32 145049464, i32 1016540839, i32 -1134085704, i32 -435812648, i32 1727402439, i32 -1906125466, i32 244499065, i32 1425276185, i32 -737940986, i32 -533625895, i32 1623299270, i32 983608230, i32 -1169113927], [256 x i32] [i32 0, i32 -1787767659, i32 -242176149, i32 1692433406, i32 944789655, i32 -1390375934, i32 -910100484, i32 1555047273, i32 1889579310, i32 -439327301, i32 -2127552955, i32 339790544, i32 1223748025, i32 -578798292, i32 -1184872750, i32 739283527, i32 -515808676, i32 1949415113, i32 282185015, i32 -2053039710, i32 -653182261, i32 1281486430, i32 679581088, i32 -1108262603, i32 -1847471246, i32 76613607, i32 1618050073, i32 -184440692, i32 -1447982107, i32 1019305840, i32 1478567054, i32 -850268133, i32 435405561, i32 -1937566100, i32 -396137070, i32 2098444551, i32 564370030, i32 -1261220101, i32 -801950459, i32 1162076560, i32 1767076823, i32 -64772286, i32 -1731994436, i32 229836841, i32 1359162176, i32 -999030827, i32 -1600945109, i32 904089790, i32 -122511195, i32 1841460272, i32 153227214, i32 -1672291493, i32 -1058867150, i32 1435643047, i32 829577049, i32 -1543339060, i32 -2012081781, i32 493012254, i32 2038611680, i32 -319657355, i32 -1337833188, i32 624074121, i32 1104340599, i32 -727567646, i32 870811122, i32 -1500032665, i32 -1032377703, i32 1460141580, i32 196599141, i32 -1631122960, i32 -98078194, i32 1868015259, i32 1128740060, i32 -700981175, i32 -1294492745, i32 665276194, i32 2065132619, i32 -295192354, i32 -1970814176, i32 536287157, i32 -760813650, i32 1205220155, i32 590760133, i32 -1236886448, i32 -352927943, i32 2139515820, i32 459673682, i32 -1911110457, i32 -1576642944, i32 930513429, i32 1402403307, i32 -957993602, i32 -1705636329, i32 254204546, i32 1808179580, i32 -21596695, i32 705971979, i32 -1083927650, i32 -612046752, i32 1324629237, i32 306454428, i32 -2026583287, i32 -472600329, i32 1990485090, i32 1521808933, i32 -809229648, i32 -1423681202, i32 1045728731, i32 1659154098, i32 -141264345, i32 -1821113895, i32 100980044, i32 -883612329, i32 1579545026, i32 986024508, i32 -1347068247, i32 -217743936, i32 1718987093, i32 43373227, i32 -1746598338, i32 -1141533575, i32 780484844, i32 1248148242, i32 -552210553, i32 -2086286098, i32 383064187, i32 1916101509, i32 -414861552, i32 1741622244, i32 -222306447, i32 -1772116849, i32 53440538, i32 1604277107, i32 -890271770, i32 -1374684136, i32 998189197, i32 393198282, i32 -2111869345, i32 -419490399, i32 1938800948, i32 792715869, i32 -1169213752, i32 -558936778, i32 1272945059, i32 -2037487176, i32 335461677, i32 1998505683, i32 -496102842, i32 -1092734673, i32 732882362, i32 1330552388, i32 -633451823, i32 -164702058, i32 1667107843, i32 129923069, i32 -1831951512, i32 -830570495, i32 1527665812, i32 1072574314, i32 -1432421377, i32 2117912861, i32 -347333240, i32 -1884526986, i32 450671331, i32 1181520266, i32 -753122017, i32 -1208205599, i32 579660404, i32 245135411, i32 -1678988122, i32 -15935656, i32 1786512333, i32 919347364, i32 -1547897807, i32 -950235185, i32 1378638682, i32 -1619154111, i32 168656852, i32 1861026858, i32 -73543489, i32 -1490160682, i32 844965699, i32 1455250621, i32 -1009940440, i32 -270722449, i32 2058211066, i32 508409092, i32 -1958911599, i32 -678608136, i32 1123915373, i32 639495571, i32 -1284687610, i32 1411943958, i32 -1051174269, i32 -1514659459, i32 818476520, i32 1819858561, i32 -116915692, i32 -1645708822, i32 144223615, i32 612908856, i32 -1309086803, i32 -719810477, i32 1080575174, i32 483944367, i32 -1985432774, i32 -313997116, i32 2016943185, i32 -1251349430, i32 538523871, i32 1157186337, i32 -779511884, i32 -1925597987, i32 407461960, i32 2091457462, i32 -371601629, i32 -976659100, i32 1354336753, i32 878309903, i32 -1591138662, i32 -40303117, i32 1760153958, i32 201960088, i32 -1720091123, i32 1306217711, i32 -659842950, i32 -1135877244, i32 691746577, i32 1972049016, i32 -520371987, i32 -2078557421, i32 292253574, i32 1031536065, i32 -1475663532, i32 -856993110, i32 1503364671, i32 86746454, i32 -1873055293, i32 -189068739, i32 1640750760, i32 -1399181645, i32 971700774, i32 1560969688, i32 -931506867, i32 -1798670812, i32 29008561, i32 1700452687, i32 -265679398, i32 -600137827, i32 1229605640, i32 766128374, i32 -1193614237, i32 -462764278, i32 1897534367, i32 368732257, i32 -2138391308], [256 x i32] [i32 0, i32 -811722808, i32 1145907665, i32 -1949090279, i32 -2003151966, i32 1191461994, i32 -858293645, i32 55143867, i32 -901406459, i32 98285261, i32 -1912043308, i32 1100390172, i32 1121972903, i32 -1925061265, i32 110287734, i32 -921908034, i32 1341801547, i32 -2140908669, i32 196570522, i32 -1003914670, i32 -950003735, i32 150863905, i32 -2094186952, i32 1286810096, i32 -2051021490, i32 1243738758, i32 -1041052513, i32 242015063, i32 220575468, i32 -1027890908, i32 1231593277, i32 -2030663435, i32 -1611364202, i32 1349164894, i32 -608591545, i32 338146959, i32 393141044, i32 -655307524, i32 1394864869, i32 -1665276627, i32 1437673875, i32 -1708179877, i32 301727810, i32 -563996790, i32 -584353231, i32 313880057, i32 -1721347104, i32 1459110952, i32 -804336419, i32 529586965, i32 -1807489780, i32 1541272260, i32 1486135167, i32 -1760917321, i32 484030126, i32 -750280346, i32 441150936, i32 -707429872, i32 1577468937, i32 -1852288063, i32 -1831780742, i32 1565469106, i32 -694413397, i32 419561571, i32 -459794579, i32 721813669, i32 -1596637508, i32 1867196788, i32 1812088015, i32 -1550036217, i32 676293918, i32 -405701930, i32 786282088, i32 -515661408, i32 1787862969, i32 -1525774223, i32 -1505237558, i32 1775890946, i32 -502608869, i32 764730323, i32 -1419619546, i32 1694254318, i32 -282101001, i32 548498751, i32 603455620, i32 -328853684, i32 1739925845, i32 -1473560931, i32 1630007843, i32 -1363548693, i32 627760114, i32 -353055686, i32 -373448319, i32 639874633, i32 -1376745392, i32 1651416984, i32 2070716411, i32 -1259173837, i32 1059173930, i32 -255876638, i32 -201929639, i32 1013504913, i32 -1212422776, i32 2015752768, i32 -1322696962, i32 2125932854, i32 -177989841, i32 989462759, i32 968060252, i32 -164791660, i32 2113815693, i32 -1302310075, i32 882301872, i32 -83309448, i32 1893462625, i32 -1085938263, i32 -1140029422, i32 1938989018, i32 -129916477, i32 937408011, i32 -19694923, i32 827157885, i32 -1164029084, i32 1962951852, i32 1984506135, i32 -1177076001, i32 839123142, i32 -40233202, i32 306260123, i32 -572571821, i32 1443627338, i32 -1718479230, i32 -1696892103, i32 1430613233, i32 -560573720, i32 285754656, i32 -670791266, i32 396009046, i32 -1672896433, i32 1406646151, i32 1352587836, i32 -1627337228, i32 349434861, i32 -615652315, i32 1572564176, i32 -1843037416, i32 435569921, i32 -697806135, i32 -719241358, i32 448735418, i32 -1855187293, i32 1592918379, i32 -1744908843, i32 1482742301, i32 -743185404, i32 472773580, i32 526687863, i32 -788887105, i32 1529460646, i32 -1799905170, i32 -1917476851, i32 1110161349, i32 -906458660, i32 107388436, i32 87028655, i32 -894311321, i32 1096997502, i32 -1896034890, i32 1206911240, i32 -2006051136, i32 62728409, i32 -870105327, i32 -815115606, i32 16008546, i32 -1960346757, i32 1153002675, i32 -1034951610, i32 231863182, i32 -2046636649, i32 1235016287, i32 1255520228, i32 -2058641364, i32 244882997, i32 -1056536067, i32 134890819, i32 -946580853, i32 1279749266, i32 -2082899110, i32 -2138040607, i32 1326317865, i32 -992133328, i32 188950776, i32 -153534474, i32 960964670, i32 -1298917849, i32 2097807855, i32 2118347860, i32 -1310884964, i32 974013829, i32 -175091123, i32 1016897267, i32 -217937605, i32 2027009826, i32 -1219518230, i32 -1274622639, i32 2073615001, i32 -263461760, i32 1070986056, i32 -1188856899, i32 1992125557, i32 -43101588, i32 854607268, i32 834218015, i32 -30982185, i32 1978925518, i32 -1167452666, i32 1936120504, i32 -1124545168, i32 925627241, i32 -122297183, i32 -67335910, i32 878878418, i32 -1078878005, i32 1882175235, i32 1764603744, i32 -1498177368, i32 761306801, i32 -486635143, i32 -508042046, i32 774501130, i32 -1510290157, i32 1784994523, i32 -1553459611, i32 1828061613, i32 -416989260, i32 683354236, i32 737297863, i32 -462663153, i32 1874816022, i32 -1608418338, i32 651686699, i32 -381033245, i32 1654315770, i32 -1392194254, i32 -1370644343, i32 1641264961, i32 -369063592, i32 631152272, i32 -325955026, i32 588006886, i32 -1461748737, i32 1732340791, i32 1678246284, i32 -1416227260, i32 541403229, i32 -270844011], [256 x i32] [i32 0, i32 612520246, i32 1225040492, i32 1837560666, i32 -1844886312, i32 -1232398866, i32 -619845964, i32 -7358590, i32 -10252303, i32 -605954361, i32 -1234752099, i32 -1830454101, i32 1835715369, i32 1239980575, i32 611215685, i32 15480947, i32 632691107, i32 20203669, i32 1823652815, i32 1211165433, i32 -1212195461, i32 -1824715699, i32 -21233897, i32 -633754079, i32 -623536558, i32 -27801756, i32 -1815006146, i32 -1219271416, i32 1222431370, i32 1818133436, i32 30961894, i32 626663888, i32 1265382214, i32 1877893744, i32 40407338, i32 652918812, i32 -647661666, i32 -35182936, i32 -1872636430, i32 -1260157756, i32 -1274037065, i32 -1869746815, i32 -49602853, i32 -645312531, i32 637991023, i32 42248537, i32 1862425091, i32 1266682677, i32 1859791589, i32 1247312851, i32 668895369, i32 56416703, i32 -53252547, i32 -665764085, i32 -1244148655, i32 -1856660121, i32 -1850104556, i32 -1254362078, i32 -658700424, i32 -62958002, i32 61923788, i32 657633530, i32 1253327776, i32 1849037462, i32 -1764202868, i32 -1302710342, i32 -539179808, i32 -77687338, i32 80814676, i32 542339938, i32 1305837624, i32 1767362830, i32 1773922685, i32 1295628363, i32 549407505, i32 71113255, i32 -72176219, i32 -550437741, i32 -1296691255, i32 -1774952705, i32 -1284604113, i32 -1746129383, i32 -93659837, i32 -555185035, i32 560413687, i32 98921153, i32 1751357851, i32 1289865389, i32 1275982046, i32 1754243560, i32 84497074, i32 562758532, i32 -570117114, i32 -91822800, i32 -1761601942, i32 -1283307684, i32 -575384118, i32 -113900292, i32 -1800341594, i32 -1338857840, i32 1337790738, i32 1799307300, i32 112833406, i32 574349896, i32 584571451, i32 106269453, i32 1809021015, i32 1330719073, i32 -1327587613, i32 -1805856811, i32 -103138161, i32 -581407303, i32 -134067095, i32 -595583649, i32 -1324945915, i32 -1786462413, i32 1779108017, i32 1317624199, i32 588229341, i32 126745579, i32 123847576, i32 602116782, i32 1315267060, i32 1793536194, i32 -1788311744, i32 -1310009738, i32 -596892372, i32 -118590438, i32 -155071655, i32 -767321489, i32 -1077581515, i32 -1689831421, i32 1690865537, i32 1078648503, i32 768355821, i32 156138715, i32 161629352, i32 757077406, i32 1084679876, i32 1680127986, i32 -1683292048, i32 -1087811258, i32 -760241636, i32 -164760790, i32 -747121926, i32 -134904884, i32 -1703710570, i32 -1091493472, i32 1098815010, i32 1711064852, i32 142226510, i32 754476408, i32 739532043, i32 144051261, i32 1695612775, i32 1100131921, i32 -1105389101, i32 -1700837147, i32 -149308481, i32 -744756599, i32 -1112672225, i32 -1724929751, i32 -190227853, i32 -802485435, i32 799325383, i32 187100657, i32 1721769643, i32 1109544861, i32 1120827374, i32 1716266712, i32 197842306, i32 793281716, i32 -792251594, i32 -196779520, i32 -1715236518, i32 -1119764372, i32 -1743003204, i32 -1130778486, i32 -786480176, i32 -174255386, i32 168994148, i32 781251666, i32 1125517064, i32 1737774654, i32 1735945805, i32 1140473723, i32 779930657, i32 184458519, i32 -177132907, i32 -772572253, i32 -1133147911, i32 -1728587313, i32 1612295637, i32 1151073507, i32 689770425, i32 228548239, i32 -233772787, i32 -695027653, i32 -1156297887, i32 -1617552809, i32 -1619385820, i32 -1141345518, i32 -696352696, i32 -218312322, i32 225666812, i32 703674314, i32 1148699792, i32 1626707366, i32 1169142902, i32 1630397760, i32 212538906, i32 673793836, i32 -676925266, i32 -215703144, i32 -1633529150, i32 -1172306956, i32 -1161020537, i32 -1639028047, i32 -204957205, i32 -682964771, i32 684031839, i32 205991529, i32 1640095027, i32 1162054661, i32 729128595, i32 267898789, i32 1651588351, i32 1190358473, i32 -1182999989, i32 -1644262531, i32 -260540377, i32 -721802991, i32 -736751262, i32 -258719660, i32 -1659718898, i32 -1181687240, i32 1176458682, i32 1654457484, i32 253491158, i32 731490016, i32 247695152, i32 708957702, i32 1204233564, i32 1665496170, i32 -1664433176, i32 -1203203362, i32 -707894908, i32 -246665038, i32 -241170239, i32 -719169033, i32 -1197167955, i32 -1675166821, i32 1672039449, i32 1194007855, i32 716041845, i32 238010179], [256 x i32] [i32 0, i32 921866483, i32 1843732966, i32 1528279317, i32 -607501364, i32 -315043009, i32 -1238408662, i32 -2132938023, i32 1826980313, i32 1511461162, i32 16818239, i32 938619084, i32 -1221606891, i32 -2116201754, i32 -624237581, i32 -331844864, i32 -641006670, i32 -281439423, i32 -1272044972, i32 -2099465561, i32 33636478, i32 888393869, i32 1877238168, i32 1494675819, i32 -1255243157, i32 -2082729320, i32 -657742963, i32 -298241154, i32 1860485543, i32 1477857620, i32 50454593, i32 905146546, i32 1759969573, i32 1578471894, i32 84025539, i32 871411760, i32 -1288879383, i32 -2048929254, i32 -557292785, i32 -398789636, i32 67272956, i32 854593551, i32 1776787738, i32 1595224553, i32 -540490960, i32 -382053437, i32 -1305615658, i32 -2065731035, i32 -1322515817, i32 -2015456668, i32 -590797967, i32 -365186174, i32 1793474907, i32 1544868264, i32 117661885, i32 837939278, i32 -573996210, i32 -348449859, i32 -1339252056, i32 -2032258469, i32 100909186, i32 821121137, i32 1810293092, i32 1561620887, i32 -775028150, i32 -415460679, i32 -1138023508, i32 -1965444257, i32 168051078, i32 1022808437, i32 1742823520, i32 1360261267, i32 -1121221741, i32 -1948708000, i32 -791764363, i32 -432262522, i32 1726070879, i32 1343443116, i32 184869305, i32 1039561034, i32 134545912, i32 1056411915, i32 1709187102, i32 1393733869, i32 -741391820, i32 -448933177, i32 -1104518190, i32 -1999047903, i32 1692434465, i32 1376915666, i32 151364039, i32 1073164596, i32 -1087716371, i32 -1982311650, i32 -758128117, i32 -465734920, i32 -1188494481, i32 -1881435236, i32 -724819319, i32 -499207558, i32 1659060387, i32 1410453584, i32 252076357, i32 972353974, i32 -708017482, i32 -482471355, i32 -1205230768, i32 -1898237021, i32 235323770, i32 955535753, i32 1675878556, i32 1427206255, i32 1625424093, i32 1443926062, i32 218571067, i32 1005957576, i32 -1154989295, i32 -1915038750, i32 -691182857, i32 -532680188, i32 201818372, i32 989139447, i32 1642242274, i32 1460678673, i32 -674381112, i32 -515943877, i32 -1171725522, i32 -1931840547, i32 2028798677, i32 1310691878, i32 352854835, i32 603632576, i32 -1557708519, i32 -1781149206, i32 -826121985, i32 -131010548, i32 336102156, i32 586814463, i32 2045616874, i32 1327444505, i32 -809320256, i32 -114274253, i32 -1574444762, i32 -1797951019, i32 -1591344793, i32 -1747676780, i32 -859627391, i32 -97406862, i32 2062303915, i32 1277088344, i32 386491213, i32 570160062, i32 -842825538, i32 -80670643, i32 -1608081064, i32 -1764478549, i32 369738610, i32 553341825, i32 2079122068, i32 1293840999, i32 269091824, i32 653824771, i32 2112823830, i32 1260237541, i32 -876593092, i32 -47001393, i32 -1507499558, i32 -1864896215, i32 2096071209, i32 1243419354, i32 285909967, i32 670577468, i32 -1490697755, i32 -1848159978, i32 -893329405, i32 -63803152, i32 -910098366, i32 -13397839, i32 -1541135964, i32 -1831423657, i32 302728078, i32 620352381, i32 2146329192, i32 1226633883, i32 -1524334181, i32 -1814687384, i32 -926834563, i32 -30199666, i32 2129576535, i32 1209815716, i32 319546289, i32 637104962, i32 -1457323873, i32 -1613655956, i32 -993648263, i32 -231427702, i32 1927889747, i32 1142674336, i32 520905397, i32 704574022, i32 -976846522, i32 -214691403, i32 -1474060128, i32 -1630457773, i32 504152714, i32 687755897, i32 1944707948, i32 1159426975, i32 1894253357, i32 1176146910, i32 487400139, i32 738177592, i32 -1423818527, i32 -1647259630, i32 -960012025, i32 -264900108, i32 470647540, i32 721359367, i32 1911071506, i32 1192899553, i32 -943210184, i32 -248163893, i32 -1440554786, i32 -1664061395, i32 -1044119110, i32 -147418807, i32 -1407115172, i32 -1697402705, i32 437142134, i32 754766469, i32 2011915152, i32 1092219747, i32 -1390313373, i32 -1680666480, i32 -1060855419, i32 -164220554, i32 1995162543, i32 1075401564, i32 453960265, i32 771519162, i32 403636744, i32 788370171, i32 1978278894, i32 1125692189, i32 -1010482748, i32 -180891337, i32 -1373609950, i32 -1731006255, i32 1961526225, i32 1108874018, i32 420454967, i32 805122756, i32 -1356808163, i32 -1714269970, i32 -1027218949, i32 -197693176]], align 16
@x2n_table = internal unnamed_addr constant [32 x i32] [i32 1073741824, i32 536870912, i32 134217728, i32 8388608, i32 32768, i32 -306674912, i32 -1310281582, i32 -1603656425, i32 -312312402, i32 -1999551385, i32 -675545494, i32 -331055343, i32 -1904303760, i32 1680310286, i32 1296546528, i32 167662735, i32 -2088424177, i32 808857370, i32 2069535939, i32 838779241, i32 -1611922902, i32 1821240772, i32 366380877, i32 1608415822, i32 -1160180169, i32 776888047, i32 1319870996, i32 -1465617728, i32 1117427358, i32 344797226, i32 -1005869360, i32 -991810500], align 16
@deflate_copyright = local_unnamed_addr constant [66 x i8] c" deflate 1.3 Copyright 1995-2023 Jean-loup Gailly and Mark Adler \00", align 16
@configuration_table = internal unnamed_addr constant [10 x %struct.config_s] [%struct.config_s { i16 0, i16 0, i16 0, i16 0, i32 (%struct.internal_state*, i32)* @deflate_stored }, %struct.config_s { i16 4, i16 4, i16 8, i16 4, i32 (%struct.internal_state*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 5, i16 16, i16 8, i32 (%struct.internal_state*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 6, i16 32, i16 32, i32 (%struct.internal_state*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 4, i16 16, i16 16, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 16, i16 32, i16 32, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 16, i16 128, i16 128, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 32, i16 128, i16 256, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 32, i16 128, i16 258, i16 1024, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 32, i16 258, i16 258, i16 4096, i32 (%struct.internal_state*, i32)* @deflate_slow }], align 16
@inflateBack.order = internal unnamed_addr constant [19 x i16] [i16 16, i16 17, i16 18, i16 0, i16 8, i16 7, i16 9, i16 6, i16 10, i16 5, i16 11, i16 4, i16 12, i16 3, i16 13, i16 2, i16 14, i16 1, i16 15], align 16
@.str.1 = private unnamed_addr constant [19 x i8] c"invalid block type\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"invalid stored block lengths\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"too many length or distance symbols\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"invalid code lengths set\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"invalid bit length repeat\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"invalid code -- missing end-of-block\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"invalid literal/lengths set\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"invalid distances set\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"invalid literal/length code\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"invalid distance code\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"invalid distance too far back\00", align 1
@fixedtables.lenfix = internal constant [512 x %struct.code] [%struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 80 }, %struct.code { i8 0, i8 8, i16 16 }, %struct.code { i8 20, i8 8, i16 115 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 112 }, %struct.code { i8 0, i8 8, i16 48 }, %struct.code { i8 0, i8 9, i16 192 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 96 }, %struct.code { i8 0, i8 8, i16 32 }, %struct.code { i8 0, i8 9, i16 160 }, %struct.code { i8 0, i8 8, i16 0 }, %struct.code { i8 0, i8 8, i16 128 }, %struct.code { i8 0, i8 8, i16 64 }, %struct.code { i8 0, i8 9, i16 224 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 88 }, %struct.code { i8 0, i8 8, i16 24 }, %struct.code { i8 0, i8 9, i16 144 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 120 }, %struct.code { i8 0, i8 8, i16 56 }, %struct.code { i8 0, i8 9, i16 208 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 104 }, %struct.code { i8 0, i8 8, i16 40 }, %struct.code { i8 0, i8 9, i16 176 }, %struct.code { i8 0, i8 8, i16 8 }, %struct.code { i8 0, i8 8, i16 136 }, %struct.code { i8 0, i8 8, i16 72 }, %struct.code { i8 0, i8 9, i16 240 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 84 }, %struct.code { i8 0, i8 8, i16 20 }, %struct.code { i8 21, i8 8, i16 227 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 116 }, %struct.code { i8 0, i8 8, i16 52 }, %struct.code { i8 0, i8 9, i16 200 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 100 }, %struct.code { i8 0, i8 8, i16 36 }, %struct.code { i8 0, i8 9, i16 168 }, %struct.code { i8 0, i8 8, i16 4 }, %struct.code { i8 0, i8 8, i16 132 }, %struct.code { i8 0, i8 8, i16 68 }, %struct.code { i8 0, i8 9, i16 232 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 92 }, %struct.code { i8 0, i8 8, i16 28 }, %struct.code { i8 0, i8 9, i16 152 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 124 }, %struct.code { i8 0, i8 8, i16 60 }, %struct.code { i8 0, i8 9, i16 216 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 108 }, %struct.code { i8 0, i8 8, i16 44 }, %struct.code { i8 0, i8 9, i16 184 }, %struct.code { i8 0, i8 8, i16 12 }, %struct.code { i8 0, i8 8, i16 140 }, %struct.code { i8 0, i8 8, i16 76 }, %struct.code { i8 0, i8 9, i16 248 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 82 }, %struct.code { i8 0, i8 8, i16 18 }, %struct.code { i8 21, i8 8, i16 163 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 114 }, %struct.code { i8 0, i8 8, i16 50 }, %struct.code { i8 0, i8 9, i16 196 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 98 }, %struct.code { i8 0, i8 8, i16 34 }, %struct.code { i8 0, i8 9, i16 164 }, %struct.code { i8 0, i8 8, i16 2 }, %struct.code { i8 0, i8 8, i16 130 }, %struct.code { i8 0, i8 8, i16 66 }, %struct.code { i8 0, i8 9, i16 228 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 90 }, %struct.code { i8 0, i8 8, i16 26 }, %struct.code { i8 0, i8 9, i16 148 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 122 }, %struct.code { i8 0, i8 8, i16 58 }, %struct.code { i8 0, i8 9, i16 212 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 106 }, %struct.code { i8 0, i8 8, i16 42 }, %struct.code { i8 0, i8 9, i16 180 }, %struct.code { i8 0, i8 8, i16 10 }, %struct.code { i8 0, i8 8, i16 138 }, %struct.code { i8 0, i8 8, i16 74 }, %struct.code { i8 0, i8 9, i16 244 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 86 }, %struct.code { i8 0, i8 8, i16 22 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 118 }, %struct.code { i8 0, i8 8, i16 54 }, %struct.code { i8 0, i8 9, i16 204 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 102 }, %struct.code { i8 0, i8 8, i16 38 }, %struct.code { i8 0, i8 9, i16 172 }, %struct.code { i8 0, i8 8, i16 6 }, %struct.code { i8 0, i8 8, i16 134 }, %struct.code { i8 0, i8 8, i16 70 }, %struct.code { i8 0, i8 9, i16 236 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 94 }, %struct.code { i8 0, i8 8, i16 30 }, %struct.code { i8 0, i8 9, i16 156 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 126 }, %struct.code { i8 0, i8 8, i16 62 }, %struct.code { i8 0, i8 9, i16 220 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 110 }, %struct.code { i8 0, i8 8, i16 46 }, %struct.code { i8 0, i8 9, i16 188 }, %struct.code { i8 0, i8 8, i16 14 }, %struct.code { i8 0, i8 8, i16 142 }, %struct.code { i8 0, i8 8, i16 78 }, %struct.code { i8 0, i8 9, i16 252 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 81 }, %struct.code { i8 0, i8 8, i16 17 }, %struct.code { i8 21, i8 8, i16 131 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 113 }, %struct.code { i8 0, i8 8, i16 49 }, %struct.code { i8 0, i8 9, i16 194 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 97 }, %struct.code { i8 0, i8 8, i16 33 }, %struct.code { i8 0, i8 9, i16 162 }, %struct.code { i8 0, i8 8, i16 1 }, %struct.code { i8 0, i8 8, i16 129 }, %struct.code { i8 0, i8 8, i16 65 }, %struct.code { i8 0, i8 9, i16 226 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 89 }, %struct.code { i8 0, i8 8, i16 25 }, %struct.code { i8 0, i8 9, i16 146 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 121 }, %struct.code { i8 0, i8 8, i16 57 }, %struct.code { i8 0, i8 9, i16 210 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 105 }, %struct.code { i8 0, i8 8, i16 41 }, %struct.code { i8 0, i8 9, i16 178 }, %struct.code { i8 0, i8 8, i16 9 }, %struct.code { i8 0, i8 8, i16 137 }, %struct.code { i8 0, i8 8, i16 73 }, %struct.code { i8 0, i8 9, i16 242 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 85 }, %struct.code { i8 0, i8 8, i16 21 }, %struct.code { i8 16, i8 8, i16 258 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 117 }, %struct.code { i8 0, i8 8, i16 53 }, %struct.code { i8 0, i8 9, i16 202 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 101 }, %struct.code { i8 0, i8 8, i16 37 }, %struct.code { i8 0, i8 9, i16 170 }, %struct.code { i8 0, i8 8, i16 5 }, %struct.code { i8 0, i8 8, i16 133 }, %struct.code { i8 0, i8 8, i16 69 }, %struct.code { i8 0, i8 9, i16 234 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 93 }, %struct.code { i8 0, i8 8, i16 29 }, %struct.code { i8 0, i8 9, i16 154 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 125 }, %struct.code { i8 0, i8 8, i16 61 }, %struct.code { i8 0, i8 9, i16 218 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 109 }, %struct.code { i8 0, i8 8, i16 45 }, %struct.code { i8 0, i8 9, i16 186 }, %struct.code { i8 0, i8 8, i16 13 }, %struct.code { i8 0, i8 8, i16 141 }, %struct.code { i8 0, i8 8, i16 77 }, %struct.code { i8 0, i8 9, i16 250 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 83 }, %struct.code { i8 0, i8 8, i16 19 }, %struct.code { i8 21, i8 8, i16 195 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 115 }, %struct.code { i8 0, i8 8, i16 51 }, %struct.code { i8 0, i8 9, i16 198 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 99 }, %struct.code { i8 0, i8 8, i16 35 }, %struct.code { i8 0, i8 9, i16 166 }, %struct.code { i8 0, i8 8, i16 3 }, %struct.code { i8 0, i8 8, i16 131 }, %struct.code { i8 0, i8 8, i16 67 }, %struct.code { i8 0, i8 9, i16 230 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 91 }, %struct.code { i8 0, i8 8, i16 27 }, %struct.code { i8 0, i8 9, i16 150 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 123 }, %struct.code { i8 0, i8 8, i16 59 }, %struct.code { i8 0, i8 9, i16 214 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 107 }, %struct.code { i8 0, i8 8, i16 43 }, %struct.code { i8 0, i8 9, i16 182 }, %struct.code { i8 0, i8 8, i16 11 }, %struct.code { i8 0, i8 8, i16 139 }, %struct.code { i8 0, i8 8, i16 75 }, %struct.code { i8 0, i8 9, i16 246 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 87 }, %struct.code { i8 0, i8 8, i16 23 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 119 }, %struct.code { i8 0, i8 8, i16 55 }, %struct.code { i8 0, i8 9, i16 206 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 103 }, %struct.code { i8 0, i8 8, i16 39 }, %struct.code { i8 0, i8 9, i16 174 }, %struct.code { i8 0, i8 8, i16 7 }, %struct.code { i8 0, i8 8, i16 135 }, %struct.code { i8 0, i8 8, i16 71 }, %struct.code { i8 0, i8 9, i16 238 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 95 }, %struct.code { i8 0, i8 8, i16 31 }, %struct.code { i8 0, i8 9, i16 158 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 127 }, %struct.code { i8 0, i8 8, i16 63 }, %struct.code { i8 0, i8 9, i16 222 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 111 }, %struct.code { i8 0, i8 8, i16 47 }, %struct.code { i8 0, i8 9, i16 190 }, %struct.code { i8 0, i8 8, i16 15 }, %struct.code { i8 0, i8 8, i16 143 }, %struct.code { i8 0, i8 8, i16 79 }, %struct.code { i8 0, i8 9, i16 254 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 80 }, %struct.code { i8 0, i8 8, i16 16 }, %struct.code { i8 20, i8 8, i16 115 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 112 }, %struct.code { i8 0, i8 8, i16 48 }, %struct.code { i8 0, i8 9, i16 193 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 96 }, %struct.code { i8 0, i8 8, i16 32 }, %struct.code { i8 0, i8 9, i16 161 }, %struct.code { i8 0, i8 8, i16 0 }, %struct.code { i8 0, i8 8, i16 128 }, %struct.code { i8 0, i8 8, i16 64 }, %struct.code { i8 0, i8 9, i16 225 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 88 }, %struct.code { i8 0, i8 8, i16 24 }, %struct.code { i8 0, i8 9, i16 145 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 120 }, %struct.code { i8 0, i8 8, i16 56 }, %struct.code { i8 0, i8 9, i16 209 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 104 }, %struct.code { i8 0, i8 8, i16 40 }, %struct.code { i8 0, i8 9, i16 177 }, %struct.code { i8 0, i8 8, i16 8 }, %struct.code { i8 0, i8 8, i16 136 }, %struct.code { i8 0, i8 8, i16 72 }, %struct.code { i8 0, i8 9, i16 241 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 84 }, %struct.code { i8 0, i8 8, i16 20 }, %struct.code { i8 21, i8 8, i16 227 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 116 }, %struct.code { i8 0, i8 8, i16 52 }, %struct.code { i8 0, i8 9, i16 201 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 100 }, %struct.code { i8 0, i8 8, i16 36 }, %struct.code { i8 0, i8 9, i16 169 }, %struct.code { i8 0, i8 8, i16 4 }, %struct.code { i8 0, i8 8, i16 132 }, %struct.code { i8 0, i8 8, i16 68 }, %struct.code { i8 0, i8 9, i16 233 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 92 }, %struct.code { i8 0, i8 8, i16 28 }, %struct.code { i8 0, i8 9, i16 153 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 124 }, %struct.code { i8 0, i8 8, i16 60 }, %struct.code { i8 0, i8 9, i16 217 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 108 }, %struct.code { i8 0, i8 8, i16 44 }, %struct.code { i8 0, i8 9, i16 185 }, %struct.code { i8 0, i8 8, i16 12 }, %struct.code { i8 0, i8 8, i16 140 }, %struct.code { i8 0, i8 8, i16 76 }, %struct.code { i8 0, i8 9, i16 249 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 82 }, %struct.code { i8 0, i8 8, i16 18 }, %struct.code { i8 21, i8 8, i16 163 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 114 }, %struct.code { i8 0, i8 8, i16 50 }, %struct.code { i8 0, i8 9, i16 197 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 98 }, %struct.code { i8 0, i8 8, i16 34 }, %struct.code { i8 0, i8 9, i16 165 }, %struct.code { i8 0, i8 8, i16 2 }, %struct.code { i8 0, i8 8, i16 130 }, %struct.code { i8 0, i8 8, i16 66 }, %struct.code { i8 0, i8 9, i16 229 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 90 }, %struct.code { i8 0, i8 8, i16 26 }, %struct.code { i8 0, i8 9, i16 149 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 122 }, %struct.code { i8 0, i8 8, i16 58 }, %struct.code { i8 0, i8 9, i16 213 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 106 }, %struct.code { i8 0, i8 8, i16 42 }, %struct.code { i8 0, i8 9, i16 181 }, %struct.code { i8 0, i8 8, i16 10 }, %struct.code { i8 0, i8 8, i16 138 }, %struct.code { i8 0, i8 8, i16 74 }, %struct.code { i8 0, i8 9, i16 245 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 86 }, %struct.code { i8 0, i8 8, i16 22 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 118 }, %struct.code { i8 0, i8 8, i16 54 }, %struct.code { i8 0, i8 9, i16 205 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 102 }, %struct.code { i8 0, i8 8, i16 38 }, %struct.code { i8 0, i8 9, i16 173 }, %struct.code { i8 0, i8 8, i16 6 }, %struct.code { i8 0, i8 8, i16 134 }, %struct.code { i8 0, i8 8, i16 70 }, %struct.code { i8 0, i8 9, i16 237 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 94 }, %struct.code { i8 0, i8 8, i16 30 }, %struct.code { i8 0, i8 9, i16 157 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 126 }, %struct.code { i8 0, i8 8, i16 62 }, %struct.code { i8 0, i8 9, i16 221 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 110 }, %struct.code { i8 0, i8 8, i16 46 }, %struct.code { i8 0, i8 9, i16 189 }, %struct.code { i8 0, i8 8, i16 14 }, %struct.code { i8 0, i8 8, i16 142 }, %struct.code { i8 0, i8 8, i16 78 }, %struct.code { i8 0, i8 9, i16 253 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 81 }, %struct.code { i8 0, i8 8, i16 17 }, %struct.code { i8 21, i8 8, i16 131 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 113 }, %struct.code { i8 0, i8 8, i16 49 }, %struct.code { i8 0, i8 9, i16 195 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 97 }, %struct.code { i8 0, i8 8, i16 33 }, %struct.code { i8 0, i8 9, i16 163 }, %struct.code { i8 0, i8 8, i16 1 }, %struct.code { i8 0, i8 8, i16 129 }, %struct.code { i8 0, i8 8, i16 65 }, %struct.code { i8 0, i8 9, i16 227 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 89 }, %struct.code { i8 0, i8 8, i16 25 }, %struct.code { i8 0, i8 9, i16 147 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 121 }, %struct.code { i8 0, i8 8, i16 57 }, %struct.code { i8 0, i8 9, i16 211 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 105 }, %struct.code { i8 0, i8 8, i16 41 }, %struct.code { i8 0, i8 9, i16 179 }, %struct.code { i8 0, i8 8, i16 9 }, %struct.code { i8 0, i8 8, i16 137 }, %struct.code { i8 0, i8 8, i16 73 }, %struct.code { i8 0, i8 9, i16 243 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 85 }, %struct.code { i8 0, i8 8, i16 21 }, %struct.code { i8 16, i8 8, i16 258 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 117 }, %struct.code { i8 0, i8 8, i16 53 }, %struct.code { i8 0, i8 9, i16 203 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 101 }, %struct.code { i8 0, i8 8, i16 37 }, %struct.code { i8 0, i8 9, i16 171 }, %struct.code { i8 0, i8 8, i16 5 }, %struct.code { i8 0, i8 8, i16 133 }, %struct.code { i8 0, i8 8, i16 69 }, %struct.code { i8 0, i8 9, i16 235 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 93 }, %struct.code { i8 0, i8 8, i16 29 }, %struct.code { i8 0, i8 9, i16 155 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 125 }, %struct.code { i8 0, i8 8, i16 61 }, %struct.code { i8 0, i8 9, i16 219 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 109 }, %struct.code { i8 0, i8 8, i16 45 }, %struct.code { i8 0, i8 9, i16 187 }, %struct.code { i8 0, i8 8, i16 13 }, %struct.code { i8 0, i8 8, i16 141 }, %struct.code { i8 0, i8 8, i16 77 }, %struct.code { i8 0, i8 9, i16 251 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 83 }, %struct.code { i8 0, i8 8, i16 19 }, %struct.code { i8 21, i8 8, i16 195 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 115 }, %struct.code { i8 0, i8 8, i16 51 }, %struct.code { i8 0, i8 9, i16 199 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 99 }, %struct.code { i8 0, i8 8, i16 35 }, %struct.code { i8 0, i8 9, i16 167 }, %struct.code { i8 0, i8 8, i16 3 }, %struct.code { i8 0, i8 8, i16 131 }, %struct.code { i8 0, i8 8, i16 67 }, %struct.code { i8 0, i8 9, i16 231 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 91 }, %struct.code { i8 0, i8 8, i16 27 }, %struct.code { i8 0, i8 9, i16 151 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 123 }, %struct.code { i8 0, i8 8, i16 59 }, %struct.code { i8 0, i8 9, i16 215 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 107 }, %struct.code { i8 0, i8 8, i16 43 }, %struct.code { i8 0, i8 9, i16 183 }, %struct.code { i8 0, i8 8, i16 11 }, %struct.code { i8 0, i8 8, i16 139 }, %struct.code { i8 0, i8 8, i16 75 }, %struct.code { i8 0, i8 9, i16 247 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 87 }, %struct.code { i8 0, i8 8, i16 23 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 119 }, %struct.code { i8 0, i8 8, i16 55 }, %struct.code { i8 0, i8 9, i16 207 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 103 }, %struct.code { i8 0, i8 8, i16 39 }, %struct.code { i8 0, i8 9, i16 175 }, %struct.code { i8 0, i8 8, i16 7 }, %struct.code { i8 0, i8 8, i16 135 }, %struct.code { i8 0, i8 8, i16 71 }, %struct.code { i8 0, i8 9, i16 239 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 95 }, %struct.code { i8 0, i8 8, i16 31 }, %struct.code { i8 0, i8 9, i16 159 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 127 }, %struct.code { i8 0, i8 8, i16 63 }, %struct.code { i8 0, i8 9, i16 223 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 111 }, %struct.code { i8 0, i8 8, i16 47 }, %struct.code { i8 0, i8 9, i16 191 }, %struct.code { i8 0, i8 8, i16 15 }, %struct.code { i8 0, i8 8, i16 143 }, %struct.code { i8 0, i8 8, i16 79 }, %struct.code { i8 0, i8 9, i16 255 }], align 16
@fixedtables.distfix = internal constant [32 x %struct.code] [%struct.code { i8 16, i8 5, i16 1 }, %struct.code { i8 23, i8 5, i16 257 }, %struct.code { i8 19, i8 5, i16 17 }, %struct.code { i8 27, i8 5, i16 4097 }, %struct.code { i8 17, i8 5, i16 5 }, %struct.code { i8 25, i8 5, i16 1025 }, %struct.code { i8 21, i8 5, i16 65 }, %struct.code { i8 29, i8 5, i16 16385 }, %struct.code { i8 16, i8 5, i16 3 }, %struct.code { i8 24, i8 5, i16 513 }, %struct.code { i8 20, i8 5, i16 33 }, %struct.code { i8 28, i8 5, i16 8193 }, %struct.code { i8 18, i8 5, i16 9 }, %struct.code { i8 26, i8 5, i16 2049 }, %struct.code { i8 22, i8 5, i16 129 }, %struct.code { i8 64, i8 5, i16 0 }, %struct.code { i8 16, i8 5, i16 2 }, %struct.code { i8 23, i8 5, i16 385 }, %struct.code { i8 19, i8 5, i16 25 }, %struct.code { i8 27, i8 5, i16 6145 }, %struct.code { i8 17, i8 5, i16 7 }, %struct.code { i8 25, i8 5, i16 1537 }, %struct.code { i8 21, i8 5, i16 97 }, %struct.code { i8 29, i8 5, i16 24577 }, %struct.code { i8 16, i8 5, i16 4 }, %struct.code { i8 24, i8 5, i16 769 }, %struct.code { i8 20, i8 5, i16 49 }, %struct.code { i8 28, i8 5, i16 12289 }, %struct.code { i8 18, i8 5, i16 13 }, %struct.code { i8 26, i8 5, i16 3073 }, %struct.code { i8 22, i8 5, i16 193 }, %struct.code { i8 64, i8 5, i16 0 }], align 16
@.str = private unnamed_addr constant [30 x i8] c"invalid distance too far back\00", align 1
@.str.1.4 = private unnamed_addr constant [22 x i8] c"invalid distance code\00", align 1
@.str.2.3 = private unnamed_addr constant [28 x i8] c"invalid literal/length code\00", align 1
@inflate.order = internal unnamed_addr constant [19 x i16] [i16 16, i16 17, i16 18, i16 0, i16 8, i16 7, i16 9, i16 6, i16 10, i16 5, i16 11, i16 4, i16 12, i16 3, i16 13, i16 2, i16 14, i16 1, i16 15], align 16
@.str.1.5 = private unnamed_addr constant [23 x i8] c"incorrect header check\00", align 1
@.str.2.6 = private unnamed_addr constant [27 x i8] c"unknown compression method\00", align 1
@.str.3.7 = private unnamed_addr constant [20 x i8] c"invalid window size\00", align 1
@.str.4.8 = private unnamed_addr constant [25 x i8] c"unknown header flags set\00", align 1
@.str.5.9 = private unnamed_addr constant [20 x i8] c"header crc mismatch\00", align 1
@.str.6.12 = private unnamed_addr constant [19 x i8] c"invalid block type\00", align 1
@.str.7.13 = private unnamed_addr constant [29 x i8] c"invalid stored block lengths\00", align 1
@.str.8.14 = private unnamed_addr constant [36 x i8] c"too many length or distance symbols\00", align 1
@.str.9.15 = private unnamed_addr constant [25 x i8] c"invalid code lengths set\00", align 1
@.str.10.16 = private unnamed_addr constant [26 x i8] c"invalid bit length repeat\00", align 1
@.str.11.17 = private unnamed_addr constant [37 x i8] c"invalid code -- missing end-of-block\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"invalid literal/lengths set\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"invalid distances set\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"invalid literal/length code\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"invalid distance code\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"invalid distance too far back\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"incorrect data check\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"incorrect length check\00", align 1
@fixedtables.lenfix.10 = internal constant [512 x %struct.code] [%struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 80 }, %struct.code { i8 0, i8 8, i16 16 }, %struct.code { i8 20, i8 8, i16 115 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 112 }, %struct.code { i8 0, i8 8, i16 48 }, %struct.code { i8 0, i8 9, i16 192 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 96 }, %struct.code { i8 0, i8 8, i16 32 }, %struct.code { i8 0, i8 9, i16 160 }, %struct.code { i8 0, i8 8, i16 0 }, %struct.code { i8 0, i8 8, i16 128 }, %struct.code { i8 0, i8 8, i16 64 }, %struct.code { i8 0, i8 9, i16 224 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 88 }, %struct.code { i8 0, i8 8, i16 24 }, %struct.code { i8 0, i8 9, i16 144 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 120 }, %struct.code { i8 0, i8 8, i16 56 }, %struct.code { i8 0, i8 9, i16 208 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 104 }, %struct.code { i8 0, i8 8, i16 40 }, %struct.code { i8 0, i8 9, i16 176 }, %struct.code { i8 0, i8 8, i16 8 }, %struct.code { i8 0, i8 8, i16 136 }, %struct.code { i8 0, i8 8, i16 72 }, %struct.code { i8 0, i8 9, i16 240 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 84 }, %struct.code { i8 0, i8 8, i16 20 }, %struct.code { i8 21, i8 8, i16 227 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 116 }, %struct.code { i8 0, i8 8, i16 52 }, %struct.code { i8 0, i8 9, i16 200 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 100 }, %struct.code { i8 0, i8 8, i16 36 }, %struct.code { i8 0, i8 9, i16 168 }, %struct.code { i8 0, i8 8, i16 4 }, %struct.code { i8 0, i8 8, i16 132 }, %struct.code { i8 0, i8 8, i16 68 }, %struct.code { i8 0, i8 9, i16 232 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 92 }, %struct.code { i8 0, i8 8, i16 28 }, %struct.code { i8 0, i8 9, i16 152 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 124 }, %struct.code { i8 0, i8 8, i16 60 }, %struct.code { i8 0, i8 9, i16 216 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 108 }, %struct.code { i8 0, i8 8, i16 44 }, %struct.code { i8 0, i8 9, i16 184 }, %struct.code { i8 0, i8 8, i16 12 }, %struct.code { i8 0, i8 8, i16 140 }, %struct.code { i8 0, i8 8, i16 76 }, %struct.code { i8 0, i8 9, i16 248 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 82 }, %struct.code { i8 0, i8 8, i16 18 }, %struct.code { i8 21, i8 8, i16 163 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 114 }, %struct.code { i8 0, i8 8, i16 50 }, %struct.code { i8 0, i8 9, i16 196 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 98 }, %struct.code { i8 0, i8 8, i16 34 }, %struct.code { i8 0, i8 9, i16 164 }, %struct.code { i8 0, i8 8, i16 2 }, %struct.code { i8 0, i8 8, i16 130 }, %struct.code { i8 0, i8 8, i16 66 }, %struct.code { i8 0, i8 9, i16 228 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 90 }, %struct.code { i8 0, i8 8, i16 26 }, %struct.code { i8 0, i8 9, i16 148 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 122 }, %struct.code { i8 0, i8 8, i16 58 }, %struct.code { i8 0, i8 9, i16 212 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 106 }, %struct.code { i8 0, i8 8, i16 42 }, %struct.code { i8 0, i8 9, i16 180 }, %struct.code { i8 0, i8 8, i16 10 }, %struct.code { i8 0, i8 8, i16 138 }, %struct.code { i8 0, i8 8, i16 74 }, %struct.code { i8 0, i8 9, i16 244 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 86 }, %struct.code { i8 0, i8 8, i16 22 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 118 }, %struct.code { i8 0, i8 8, i16 54 }, %struct.code { i8 0, i8 9, i16 204 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 102 }, %struct.code { i8 0, i8 8, i16 38 }, %struct.code { i8 0, i8 9, i16 172 }, %struct.code { i8 0, i8 8, i16 6 }, %struct.code { i8 0, i8 8, i16 134 }, %struct.code { i8 0, i8 8, i16 70 }, %struct.code { i8 0, i8 9, i16 236 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 94 }, %struct.code { i8 0, i8 8, i16 30 }, %struct.code { i8 0, i8 9, i16 156 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 126 }, %struct.code { i8 0, i8 8, i16 62 }, %struct.code { i8 0, i8 9, i16 220 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 110 }, %struct.code { i8 0, i8 8, i16 46 }, %struct.code { i8 0, i8 9, i16 188 }, %struct.code { i8 0, i8 8, i16 14 }, %struct.code { i8 0, i8 8, i16 142 }, %struct.code { i8 0, i8 8, i16 78 }, %struct.code { i8 0, i8 9, i16 252 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 81 }, %struct.code { i8 0, i8 8, i16 17 }, %struct.code { i8 21, i8 8, i16 131 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 113 }, %struct.code { i8 0, i8 8, i16 49 }, %struct.code { i8 0, i8 9, i16 194 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 97 }, %struct.code { i8 0, i8 8, i16 33 }, %struct.code { i8 0, i8 9, i16 162 }, %struct.code { i8 0, i8 8, i16 1 }, %struct.code { i8 0, i8 8, i16 129 }, %struct.code { i8 0, i8 8, i16 65 }, %struct.code { i8 0, i8 9, i16 226 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 89 }, %struct.code { i8 0, i8 8, i16 25 }, %struct.code { i8 0, i8 9, i16 146 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 121 }, %struct.code { i8 0, i8 8, i16 57 }, %struct.code { i8 0, i8 9, i16 210 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 105 }, %struct.code { i8 0, i8 8, i16 41 }, %struct.code { i8 0, i8 9, i16 178 }, %struct.code { i8 0, i8 8, i16 9 }, %struct.code { i8 0, i8 8, i16 137 }, %struct.code { i8 0, i8 8, i16 73 }, %struct.code { i8 0, i8 9, i16 242 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 85 }, %struct.code { i8 0, i8 8, i16 21 }, %struct.code { i8 16, i8 8, i16 258 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 117 }, %struct.code { i8 0, i8 8, i16 53 }, %struct.code { i8 0, i8 9, i16 202 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 101 }, %struct.code { i8 0, i8 8, i16 37 }, %struct.code { i8 0, i8 9, i16 170 }, %struct.code { i8 0, i8 8, i16 5 }, %struct.code { i8 0, i8 8, i16 133 }, %struct.code { i8 0, i8 8, i16 69 }, %struct.code { i8 0, i8 9, i16 234 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 93 }, %struct.code { i8 0, i8 8, i16 29 }, %struct.code { i8 0, i8 9, i16 154 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 125 }, %struct.code { i8 0, i8 8, i16 61 }, %struct.code { i8 0, i8 9, i16 218 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 109 }, %struct.code { i8 0, i8 8, i16 45 }, %struct.code { i8 0, i8 9, i16 186 }, %struct.code { i8 0, i8 8, i16 13 }, %struct.code { i8 0, i8 8, i16 141 }, %struct.code { i8 0, i8 8, i16 77 }, %struct.code { i8 0, i8 9, i16 250 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 83 }, %struct.code { i8 0, i8 8, i16 19 }, %struct.code { i8 21, i8 8, i16 195 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 115 }, %struct.code { i8 0, i8 8, i16 51 }, %struct.code { i8 0, i8 9, i16 198 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 99 }, %struct.code { i8 0, i8 8, i16 35 }, %struct.code { i8 0, i8 9, i16 166 }, %struct.code { i8 0, i8 8, i16 3 }, %struct.code { i8 0, i8 8, i16 131 }, %struct.code { i8 0, i8 8, i16 67 }, %struct.code { i8 0, i8 9, i16 230 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 91 }, %struct.code { i8 0, i8 8, i16 27 }, %struct.code { i8 0, i8 9, i16 150 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 123 }, %struct.code { i8 0, i8 8, i16 59 }, %struct.code { i8 0, i8 9, i16 214 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 107 }, %struct.code { i8 0, i8 8, i16 43 }, %struct.code { i8 0, i8 9, i16 182 }, %struct.code { i8 0, i8 8, i16 11 }, %struct.code { i8 0, i8 8, i16 139 }, %struct.code { i8 0, i8 8, i16 75 }, %struct.code { i8 0, i8 9, i16 246 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 87 }, %struct.code { i8 0, i8 8, i16 23 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 119 }, %struct.code { i8 0, i8 8, i16 55 }, %struct.code { i8 0, i8 9, i16 206 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 103 }, %struct.code { i8 0, i8 8, i16 39 }, %struct.code { i8 0, i8 9, i16 174 }, %struct.code { i8 0, i8 8, i16 7 }, %struct.code { i8 0, i8 8, i16 135 }, %struct.code { i8 0, i8 8, i16 71 }, %struct.code { i8 0, i8 9, i16 238 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 95 }, %struct.code { i8 0, i8 8, i16 31 }, %struct.code { i8 0, i8 9, i16 158 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 127 }, %struct.code { i8 0, i8 8, i16 63 }, %struct.code { i8 0, i8 9, i16 222 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 111 }, %struct.code { i8 0, i8 8, i16 47 }, %struct.code { i8 0, i8 9, i16 190 }, %struct.code { i8 0, i8 8, i16 15 }, %struct.code { i8 0, i8 8, i16 143 }, %struct.code { i8 0, i8 8, i16 79 }, %struct.code { i8 0, i8 9, i16 254 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 80 }, %struct.code { i8 0, i8 8, i16 16 }, %struct.code { i8 20, i8 8, i16 115 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 112 }, %struct.code { i8 0, i8 8, i16 48 }, %struct.code { i8 0, i8 9, i16 193 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 96 }, %struct.code { i8 0, i8 8, i16 32 }, %struct.code { i8 0, i8 9, i16 161 }, %struct.code { i8 0, i8 8, i16 0 }, %struct.code { i8 0, i8 8, i16 128 }, %struct.code { i8 0, i8 8, i16 64 }, %struct.code { i8 0, i8 9, i16 225 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 88 }, %struct.code { i8 0, i8 8, i16 24 }, %struct.code { i8 0, i8 9, i16 145 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 120 }, %struct.code { i8 0, i8 8, i16 56 }, %struct.code { i8 0, i8 9, i16 209 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 104 }, %struct.code { i8 0, i8 8, i16 40 }, %struct.code { i8 0, i8 9, i16 177 }, %struct.code { i8 0, i8 8, i16 8 }, %struct.code { i8 0, i8 8, i16 136 }, %struct.code { i8 0, i8 8, i16 72 }, %struct.code { i8 0, i8 9, i16 241 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 84 }, %struct.code { i8 0, i8 8, i16 20 }, %struct.code { i8 21, i8 8, i16 227 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 116 }, %struct.code { i8 0, i8 8, i16 52 }, %struct.code { i8 0, i8 9, i16 201 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 100 }, %struct.code { i8 0, i8 8, i16 36 }, %struct.code { i8 0, i8 9, i16 169 }, %struct.code { i8 0, i8 8, i16 4 }, %struct.code { i8 0, i8 8, i16 132 }, %struct.code { i8 0, i8 8, i16 68 }, %struct.code { i8 0, i8 9, i16 233 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 92 }, %struct.code { i8 0, i8 8, i16 28 }, %struct.code { i8 0, i8 9, i16 153 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 124 }, %struct.code { i8 0, i8 8, i16 60 }, %struct.code { i8 0, i8 9, i16 217 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 108 }, %struct.code { i8 0, i8 8, i16 44 }, %struct.code { i8 0, i8 9, i16 185 }, %struct.code { i8 0, i8 8, i16 12 }, %struct.code { i8 0, i8 8, i16 140 }, %struct.code { i8 0, i8 8, i16 76 }, %struct.code { i8 0, i8 9, i16 249 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 82 }, %struct.code { i8 0, i8 8, i16 18 }, %struct.code { i8 21, i8 8, i16 163 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 114 }, %struct.code { i8 0, i8 8, i16 50 }, %struct.code { i8 0, i8 9, i16 197 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 98 }, %struct.code { i8 0, i8 8, i16 34 }, %struct.code { i8 0, i8 9, i16 165 }, %struct.code { i8 0, i8 8, i16 2 }, %struct.code { i8 0, i8 8, i16 130 }, %struct.code { i8 0, i8 8, i16 66 }, %struct.code { i8 0, i8 9, i16 229 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 90 }, %struct.code { i8 0, i8 8, i16 26 }, %struct.code { i8 0, i8 9, i16 149 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 122 }, %struct.code { i8 0, i8 8, i16 58 }, %struct.code { i8 0, i8 9, i16 213 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 106 }, %struct.code { i8 0, i8 8, i16 42 }, %struct.code { i8 0, i8 9, i16 181 }, %struct.code { i8 0, i8 8, i16 10 }, %struct.code { i8 0, i8 8, i16 138 }, %struct.code { i8 0, i8 8, i16 74 }, %struct.code { i8 0, i8 9, i16 245 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 86 }, %struct.code { i8 0, i8 8, i16 22 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 118 }, %struct.code { i8 0, i8 8, i16 54 }, %struct.code { i8 0, i8 9, i16 205 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 102 }, %struct.code { i8 0, i8 8, i16 38 }, %struct.code { i8 0, i8 9, i16 173 }, %struct.code { i8 0, i8 8, i16 6 }, %struct.code { i8 0, i8 8, i16 134 }, %struct.code { i8 0, i8 8, i16 70 }, %struct.code { i8 0, i8 9, i16 237 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 94 }, %struct.code { i8 0, i8 8, i16 30 }, %struct.code { i8 0, i8 9, i16 157 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 126 }, %struct.code { i8 0, i8 8, i16 62 }, %struct.code { i8 0, i8 9, i16 221 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 110 }, %struct.code { i8 0, i8 8, i16 46 }, %struct.code { i8 0, i8 9, i16 189 }, %struct.code { i8 0, i8 8, i16 14 }, %struct.code { i8 0, i8 8, i16 142 }, %struct.code { i8 0, i8 8, i16 78 }, %struct.code { i8 0, i8 9, i16 253 }, %struct.code { i8 96, i8 7, i16 0 }, %struct.code { i8 0, i8 8, i16 81 }, %struct.code { i8 0, i8 8, i16 17 }, %struct.code { i8 21, i8 8, i16 131 }, %struct.code { i8 18, i8 7, i16 31 }, %struct.code { i8 0, i8 8, i16 113 }, %struct.code { i8 0, i8 8, i16 49 }, %struct.code { i8 0, i8 9, i16 195 }, %struct.code { i8 16, i8 7, i16 10 }, %struct.code { i8 0, i8 8, i16 97 }, %struct.code { i8 0, i8 8, i16 33 }, %struct.code { i8 0, i8 9, i16 163 }, %struct.code { i8 0, i8 8, i16 1 }, %struct.code { i8 0, i8 8, i16 129 }, %struct.code { i8 0, i8 8, i16 65 }, %struct.code { i8 0, i8 9, i16 227 }, %struct.code { i8 16, i8 7, i16 6 }, %struct.code { i8 0, i8 8, i16 89 }, %struct.code { i8 0, i8 8, i16 25 }, %struct.code { i8 0, i8 9, i16 147 }, %struct.code { i8 19, i8 7, i16 59 }, %struct.code { i8 0, i8 8, i16 121 }, %struct.code { i8 0, i8 8, i16 57 }, %struct.code { i8 0, i8 9, i16 211 }, %struct.code { i8 17, i8 7, i16 17 }, %struct.code { i8 0, i8 8, i16 105 }, %struct.code { i8 0, i8 8, i16 41 }, %struct.code { i8 0, i8 9, i16 179 }, %struct.code { i8 0, i8 8, i16 9 }, %struct.code { i8 0, i8 8, i16 137 }, %struct.code { i8 0, i8 8, i16 73 }, %struct.code { i8 0, i8 9, i16 243 }, %struct.code { i8 16, i8 7, i16 4 }, %struct.code { i8 0, i8 8, i16 85 }, %struct.code { i8 0, i8 8, i16 21 }, %struct.code { i8 16, i8 8, i16 258 }, %struct.code { i8 19, i8 7, i16 43 }, %struct.code { i8 0, i8 8, i16 117 }, %struct.code { i8 0, i8 8, i16 53 }, %struct.code { i8 0, i8 9, i16 203 }, %struct.code { i8 17, i8 7, i16 13 }, %struct.code { i8 0, i8 8, i16 101 }, %struct.code { i8 0, i8 8, i16 37 }, %struct.code { i8 0, i8 9, i16 171 }, %struct.code { i8 0, i8 8, i16 5 }, %struct.code { i8 0, i8 8, i16 133 }, %struct.code { i8 0, i8 8, i16 69 }, %struct.code { i8 0, i8 9, i16 235 }, %struct.code { i8 16, i8 7, i16 8 }, %struct.code { i8 0, i8 8, i16 93 }, %struct.code { i8 0, i8 8, i16 29 }, %struct.code { i8 0, i8 9, i16 155 }, %struct.code { i8 20, i8 7, i16 83 }, %struct.code { i8 0, i8 8, i16 125 }, %struct.code { i8 0, i8 8, i16 61 }, %struct.code { i8 0, i8 9, i16 219 }, %struct.code { i8 18, i8 7, i16 23 }, %struct.code { i8 0, i8 8, i16 109 }, %struct.code { i8 0, i8 8, i16 45 }, %struct.code { i8 0, i8 9, i16 187 }, %struct.code { i8 0, i8 8, i16 13 }, %struct.code { i8 0, i8 8, i16 141 }, %struct.code { i8 0, i8 8, i16 77 }, %struct.code { i8 0, i8 9, i16 251 }, %struct.code { i8 16, i8 7, i16 3 }, %struct.code { i8 0, i8 8, i16 83 }, %struct.code { i8 0, i8 8, i16 19 }, %struct.code { i8 21, i8 8, i16 195 }, %struct.code { i8 19, i8 7, i16 35 }, %struct.code { i8 0, i8 8, i16 115 }, %struct.code { i8 0, i8 8, i16 51 }, %struct.code { i8 0, i8 9, i16 199 }, %struct.code { i8 17, i8 7, i16 11 }, %struct.code { i8 0, i8 8, i16 99 }, %struct.code { i8 0, i8 8, i16 35 }, %struct.code { i8 0, i8 9, i16 167 }, %struct.code { i8 0, i8 8, i16 3 }, %struct.code { i8 0, i8 8, i16 131 }, %struct.code { i8 0, i8 8, i16 67 }, %struct.code { i8 0, i8 9, i16 231 }, %struct.code { i8 16, i8 7, i16 7 }, %struct.code { i8 0, i8 8, i16 91 }, %struct.code { i8 0, i8 8, i16 27 }, %struct.code { i8 0, i8 9, i16 151 }, %struct.code { i8 20, i8 7, i16 67 }, %struct.code { i8 0, i8 8, i16 123 }, %struct.code { i8 0, i8 8, i16 59 }, %struct.code { i8 0, i8 9, i16 215 }, %struct.code { i8 18, i8 7, i16 19 }, %struct.code { i8 0, i8 8, i16 107 }, %struct.code { i8 0, i8 8, i16 43 }, %struct.code { i8 0, i8 9, i16 183 }, %struct.code { i8 0, i8 8, i16 11 }, %struct.code { i8 0, i8 8, i16 139 }, %struct.code { i8 0, i8 8, i16 75 }, %struct.code { i8 0, i8 9, i16 247 }, %struct.code { i8 16, i8 7, i16 5 }, %struct.code { i8 0, i8 8, i16 87 }, %struct.code { i8 0, i8 8, i16 23 }, %struct.code { i8 64, i8 8, i16 0 }, %struct.code { i8 19, i8 7, i16 51 }, %struct.code { i8 0, i8 8, i16 119 }, %struct.code { i8 0, i8 8, i16 55 }, %struct.code { i8 0, i8 9, i16 207 }, %struct.code { i8 17, i8 7, i16 15 }, %struct.code { i8 0, i8 8, i16 103 }, %struct.code { i8 0, i8 8, i16 39 }, %struct.code { i8 0, i8 9, i16 175 }, %struct.code { i8 0, i8 8, i16 7 }, %struct.code { i8 0, i8 8, i16 135 }, %struct.code { i8 0, i8 8, i16 71 }, %struct.code { i8 0, i8 9, i16 239 }, %struct.code { i8 16, i8 7, i16 9 }, %struct.code { i8 0, i8 8, i16 95 }, %struct.code { i8 0, i8 8, i16 31 }, %struct.code { i8 0, i8 9, i16 159 }, %struct.code { i8 20, i8 7, i16 99 }, %struct.code { i8 0, i8 8, i16 127 }, %struct.code { i8 0, i8 8, i16 63 }, %struct.code { i8 0, i8 9, i16 223 }, %struct.code { i8 18, i8 7, i16 27 }, %struct.code { i8 0, i8 8, i16 111 }, %struct.code { i8 0, i8 8, i16 47 }, %struct.code { i8 0, i8 9, i16 191 }, %struct.code { i8 0, i8 8, i16 15 }, %struct.code { i8 0, i8 8, i16 143 }, %struct.code { i8 0, i8 8, i16 79 }, %struct.code { i8 0, i8 9, i16 255 }], align 16
@fixedtables.distfix.11 = internal constant [32 x %struct.code] [%struct.code { i8 16, i8 5, i16 1 }, %struct.code { i8 23, i8 5, i16 257 }, %struct.code { i8 19, i8 5, i16 17 }, %struct.code { i8 27, i8 5, i16 4097 }, %struct.code { i8 17, i8 5, i16 5 }, %struct.code { i8 25, i8 5, i16 1025 }, %struct.code { i8 21, i8 5, i16 65 }, %struct.code { i8 29, i8 5, i16 16385 }, %struct.code { i8 16, i8 5, i16 3 }, %struct.code { i8 24, i8 5, i16 513 }, %struct.code { i8 20, i8 5, i16 33 }, %struct.code { i8 28, i8 5, i16 8193 }, %struct.code { i8 18, i8 5, i16 9 }, %struct.code { i8 26, i8 5, i16 2049 }, %struct.code { i8 22, i8 5, i16 129 }, %struct.code { i8 64, i8 5, i16 0 }, %struct.code { i8 16, i8 5, i16 2 }, %struct.code { i8 23, i8 5, i16 385 }, %struct.code { i8 19, i8 5, i16 25 }, %struct.code { i8 27, i8 5, i16 6145 }, %struct.code { i8 17, i8 5, i16 7 }, %struct.code { i8 25, i8 5, i16 1537 }, %struct.code { i8 21, i8 5, i16 97 }, %struct.code { i8 29, i8 5, i16 24577 }, %struct.code { i8 16, i8 5, i16 4 }, %struct.code { i8 24, i8 5, i16 769 }, %struct.code { i8 20, i8 5, i16 49 }, %struct.code { i8 28, i8 5, i16 12289 }, %struct.code { i8 18, i8 5, i16 13 }, %struct.code { i8 26, i8 5, i16 3073 }, %struct.code { i8 22, i8 5, i16 193 }, %struct.code { i8 64, i8 5, i16 0 }], align 16
@inflate_copyright = local_unnamed_addr constant [45 x i8] c" inflate 1.3 Copyright 1995-2023 Mark Adler \00", align 16
@inflate_table.lbase = internal unnamed_addr constant [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 16
@inflate_table.lext = internal unnamed_addr constant [31 x i16] [i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 17, i16 17, i16 17, i16 17, i16 18, i16 18, i16 18, i16 18, i16 19, i16 19, i16 19, i16 19, i16 20, i16 20, i16 20, i16 20, i16 21, i16 21, i16 21, i16 21, i16 16, i16 198, i16 203], align 16
@inflate_table.dbase = internal unnamed_addr constant [32 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577, i16 0, i16 0], align 16
@inflate_table.dext = internal unnamed_addr constant [32 x i16] [i16 16, i16 16, i16 16, i16 16, i16 17, i16 17, i16 18, i16 18, i16 19, i16 19, i16 20, i16 20, i16 21, i16 21, i16 22, i16 22, i16 23, i16 23, i16 24, i16 24, i16 25, i16 25, i16 26, i16 26, i16 27, i16 27, i16 28, i16 28, i16 29, i16 29, i16 64, i16 64], align 16
@_dist_code = hidden local_unnamed_addr constant [512 x i8] calign 16
@_length_code = hidden local_unnamed_addr constant [256 x i8] calign 16
@static_l_desc = internal constant %struct.static_tree_desc_s { %struct.ct_data_s* getelementptr inbounds ([288 x %struct.ct_data_s], [288 x %struct.ct_data_s]* @static_ltree, i32 0, i32 0), i32* getelementptr inbounds ([29 x i32], [29 x i32]* @extra_lbits, i32 0, i32 0), i32 257, i32 286, i32 15 }, align 8
@static_d_desc = internal constant %struct.static_tree_desc_s { %struct.ct_data_s* getelementptr inbounds ([30 x %struct.ct_data_s], [30 x %struct.ct_data_s]* @static_dtree, i32 0, i32 0), i32* getelementptr inbounds ([30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 0), i32 0, i32 30, i32 15 }, align 8
@static_bl_desc = internal constant %struct.static_tree_desc_s { %struct.ct_data_s* null, i32* getelementptr inbounds ([19 x i32], [19 x i32]* @extra_blbits, i32 0, i32 0), i32 0, i32 19, i32 7 }, align 8
@static_ltree = internal constant [288 x %struct.ct_data_s] [%struct.ct_data_s { %union.anon { i16 12 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 140 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 76 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 204 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 44 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 172 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 108 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 236 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 28 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 156 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 92 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 220 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 60 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 188 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 124 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 252 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 2 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 130 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 66 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 194 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 34 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 162 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 98 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 226 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 18 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 146 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 82 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 210 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 50 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 178 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 114 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 242 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 10 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 138 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 74 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 202 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 42 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 170 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 106 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 234 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 26 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 154 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 90 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 218 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 58 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 186 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 122 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 250 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 6 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 134 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 70 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 198 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 38 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 166 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 102 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 230 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 22 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 150 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 86 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 214 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 54 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 182 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 118 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 246 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 14 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 142 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 78 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 206 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 46 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 174 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 110 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 238 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 30 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 158 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 94 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 222 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 62 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 190 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 126 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 254 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 1 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 129 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 65 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 193 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 33 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 161 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 97 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 225 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 17 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 145 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 81 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 209 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 49 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 177 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 113 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 241 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 9 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 137 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 73 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 201 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 41 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 169 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 105 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 233 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 25 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 153 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 89 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 217 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 57 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 185 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 121 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 249 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 5 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 133 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 69 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 197 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 37 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 165 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 101 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 229 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 21 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 149 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 85 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 213 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 53 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 181 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 117 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 245 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 13 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 141 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 77 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 205 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 45 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 173 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 109 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 237 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 29 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 157 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 93 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 221 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 61 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 189 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 125 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 253 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 19 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 275 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 147 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 403 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 83 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 339 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 211 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 467 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 51 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 307 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 179 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 435 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 115 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 371 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 243 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 499 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 11 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 267 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 139 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 395 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 75 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 331 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 203 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 459 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 43 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 299 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 171 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 427 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 107 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 363 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 235 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 491 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 27 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 283 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 155 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 411 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 91 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 347 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 219 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 475 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 59 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 315 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 187 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 443 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 123 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 379 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 251 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 507 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 7 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 263 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 135 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 391 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 71 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 327 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 199 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 455 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 39 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 295 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 167 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 423 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 103 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 359 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 231 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 487 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 23 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 279 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 151 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 407 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 87 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 343 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 215 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 471 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 55 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 311 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 183 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 439 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 119 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 375 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 247 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 503 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 15 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 271 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 143 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 399 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 79 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 335 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 207 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 463 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 47 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 303 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 175 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 431 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 111 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 367 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 239 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 495 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 31 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 287 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 159 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 415 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 95 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 351 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 223 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 479 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 63 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 319 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 191 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 447 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 127 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 383 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 255 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon { i16 511 }, %union.anon { i16 9 } }, %struct.ct_data_s { %union.anon zeroinitializer, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 64 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 32 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 96 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 16 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 80 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 48 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 112 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 8 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 72 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 40 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 104 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 24 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 88 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 56 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 120 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 4 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 68 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 36 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 100 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 20 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 84 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 52 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 116 }, %union.anon { i16 7 } }, %struct.ct_data_s { %union.anon { i16 3 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 131 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 67 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 195 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 35 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 163 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 99 }, %union.anon { i16 8 } }, %struct.ct_data_s { %union.anon { i16 227 }, %union.anon { i16 8 } }], align 16
@static_dtree = internal constant [30 x %struct.ct_data_s] [%struct.ct_data_s { %union.anon zeroinitializer, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 16 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 8 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 24 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 4 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 20 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 12 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 28 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 2 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 18 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 10 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 26 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 6 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 22 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 14 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 30 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 1 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 17 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 9 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 25 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 5 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 21 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 13 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 29 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 3 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 19 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 11 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 27 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 7 }, %union.anon { i16 5 } }, %struct.ct_data_s { %union.anon { i16 23 }, %union.anon { i16 5 } }], align 16
@extra_lbits = internal constant [29 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 0], align 16
@extra_dbits = internal constant [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13], align 16
@extra_blbits = internal constant [19 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 3, i32 7], align 16
@bl_order = internal unnamed_addr constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@base_length = internal unnamed_addr constant [29 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 10, i32 12, i32 14, i32 16, i32 20, i32 24, i32 28, i32 32, i32 40, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 160, i32 192, i32 224, i32 0], align 16
@base_dist = internal unnamed_addr constant [30 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 12, i32 16, i32 24, i32 32, i32 48, i32 64, i32 96, i32 128, i32 192, i32 256, i32 384, i32 512, i32 768, i32 1024, i32 1536, i32 2048, i32 3072, i32 4096, i32 6144, i32 8192, i32 12288, i32 16384, i32 24576], align 16
@.str.36 = private unnamed_addr constant [16 x i8] c"need dictionary\00", align 1
@.str.1.37 = private unnamed_addr constant [11 x i8] c"stream end\00", align 1
@.str.2.38 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3.39 = private unnamed_addr constant [11 x i8] c"file error\00", align 1
@.str.4.40 = private unnamed_addr constant [13 x i8] c"stream error\00", align 1
@.str.5.41 = private unnamed_addr constant [11 x i8] c"data error\00", align 1
@.str.6.42 = private unnamed_addr constant [20 x i8] c"insufficient memory\00", align 1
@.str.7.43 = private unnamed_addr constant [13 x i8] c"buffer error\00", align 1
@.str.8.44 = private unnamed_addr constant [21 x i8] c"incompatible version\00", align 1
@z_errmsg = local_unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.37, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.39, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.41, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.43, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.44, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.38, i32 0, i32 0)], align 16
@.str.9.45 = private unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"<fd:%d>\00", align 1
@.str.1.57 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.2.56 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3.54 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str.4.55 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.5.52 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.58 = private unnamed_addr constant [31 x i8] c"request does not fit in an int\00", align 1
@.str.1.64 = private unnamed_addr constant [33 x i8] c"request does not fit in a size_t\00", align 1
@.str.2.65 = private unnamed_addr constant [31 x i8] c"out of room to push characters\00", align 1
@.str.3.59 = private unnamed_addr constant [23 x i8] c"unexpected end of file\00", align 1
@.str.4.60 = private unnamed_addr constant [39 x i8] c"internal error: inflate stream corrupt\00", align 1
@.str.5.61 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.6.62 = private unnamed_addr constant [22 x i8] c"compressed data error\00", align 1
@.str.7.63 = private unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str.68 = private unnamed_addr constant [37 x i8] c"requested length does not fit in int\00", align 1
@.str.1.72 = private unnamed_addr constant [33 x i8] c"request does not fit in a size_t\00", align 1
@.str.2.73 = private unnamed_addr constant [34 x i8] c"string length does not fit in int\00", align 1
@.str.3.70 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.4.71 = private unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str.5.69 = private unnamed_addr constant [39 x i8] c"internal error: deflate stream corrupt\00", align 1

; Function Attrs: nofree norecurse nosync nounwind readonly uwtable
define i64 @adler32_z(i64 noundef %0, i8* noundef readonly %1, i64 noundef %2) local_unnamed_addr #0 {
  %4 = lshr i64 %0, 16
  %5 = and i64 %4, 65535
  %6 = and i64 %0, 65535
  %7 = icmp eq i64 %2, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = load i8, i8* %1, align 1, !tbaa !4
  %10 = zext i8 %9 to i64
  %11 = add nuw nsw i64 %6, %10
  %12 = icmp ugt i64 %11, 65520
  %13 = add nsw i64 %11, -65521
  %14 = select i1 %12, i64 %13, i64 %11
  %15 = add nuw nsw i64 %14, %5
  %16 = icmp ugt i64 %15, 65520
  %17 = shl nuw nsw i64 %15, 16
  %18 = add nsw i64 %17, -4293984256
  %19 = select i1 %16, i64 %18, i64 %17
  %20 = or i64 %19, %14
  br label %354

21:                                               ; preds = %3
  %22 = icmp eq i8* %1, null
  br i1 %22, label %354, label %23

23:                                               ; preds = %21
  %24 = icmp ult i64 %2, 16
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = icmp ugt i64 %2, 5551
  br i1 %26, label %91, label %193

27:                                               ; preds = %23
  %28 = icmp eq i64 %2, 0
  br i1 %28, label %82, label %29

29:                                               ; preds = %27
  %30 = add i64 %2, -1
  %31 = and i64 %2, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %29, %33
  %34 = phi i64 [ %44, %33 ], [ %5, %29 ]
  %35 = phi i64 [ %39, %33 ], [ %2, %29 ]
  %36 = phi i8* [ %40, %33 ], [ %1, %29 ]
  %37 = phi i64 [ %43, %33 ], [ %6, %29 ]
  %38 = phi i64 [ %45, %33 ], [ 0, %29 ]
  %39 = add i64 %35, -1
  %40 = getelementptr inbounds i8, i8* %36, i64 1
  %41 = load i8, i8* %36, align 1, !tbaa !4
  %42 = zext i8 %41 to i64
  %43 = add i64 %37, %42
  %44 = add i64 %43, %34
  %45 = add i64 %38, 1
  %46 = icmp eq i64 %45, %31
  br i1 %46, label %47, label %33, !llvm.loop !7

47:                                               ; preds = %33, %29
  %48 = phi i64 [ undef, %29 ], [ %43, %33 ]
  %49 = phi i64 [ undef, %29 ], [ %44, %33 ]
  %50 = phi i64 [ %5, %29 ], [ %44, %33 ]
  %51 = phi i64 [ %2, %29 ], [ %39, %33 ]
  %52 = phi i8* [ %1, %29 ], [ %40, %33 ]
  %53 = phi i64 [ %6, %29 ], [ %43, %33 ]
  %54 = icmp ult i64 %30, 3
  br i1 %54, label %82, label %55

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %80, %55 ], [ %50, %47 ]
  %57 = phi i64 [ %75, %55 ], [ %51, %47 ]
  %58 = phi i8* [ %76, %55 ], [ %52, %47 ]
  %59 = phi i64 [ %79, %55 ], [ %53, %47 ]
  %60 = getelementptr inbounds i8, i8* %58, i64 1
  %61 = load i8, i8* %58, align 1, !tbaa !4
  %62 = zext i8 %61 to i64
  %63 = add i64 %59, %62
  %64 = add i64 %63, %56
  %65 = getelementptr inbounds i8, i8* %58, i64 2
  %66 = load i8, i8* %60, align 1, !tbaa !4
  %67 = zext i8 %66 to i64
  %68 = add i64 %63, %67
  %69 = add i64 %68, %64
  %70 = getelementptr inbounds i8, i8* %58, i64 3
  %71 = load i8, i8* %65, align 1, !tbaa !4
  %72 = zext i8 %71 to i64
  %73 = add i64 %68, %72
  %74 = add i64 %73, %69
  %75 = add i64 %57, -4
  %76 = getelementptr inbounds i8, i8* %58, i64 4
  %77 = load i8, i8* %70, align 1, !tbaa !4
  %78 = zext i8 %77 to i64
  %79 = add i64 %73, %78
  %80 = add i64 %79, %74
  %81 = icmp eq i64 %75, 0
  br i1 %81, label %82, label %55, !llvm.loop !9

82:                                               ; preds = %47, %55, %27
  %83 = phi i64 [ %6, %27 ], [ %48, %47 ], [ %79, %55 ]
  %84 = phi i64 [ %5, %27 ], [ %49, %47 ], [ %80, %55 ]
  %85 = icmp ugt i64 %83, 65520
  %86 = add i64 %83, -65521
  %87 = select i1 %85, i64 %86, i64 %83
  %88 = urem i64 %84, 65521
  %89 = shl nuw nsw i64 %88, 16
  %90 = or i64 %89, %87
  br label %354

91:                                               ; preds = %25, %184
  %92 = phi i64 [ %187, %184 ], [ %5, %25 ]
  %93 = phi i64 [ %96, %184 ], [ %2, %25 ]
  %94 = phi i8* [ %185, %184 ], [ %1, %25 ]
  %95 = phi i64 [ %186, %184 ], [ %6, %25 ]
  %96 = add i64 %93, -5552
  br label %97

97:                                               ; preds = %97, %91
  %98 = phi i64 [ %95, %91 ], [ %179, %97 ]
  %99 = phi i8* [ %94, %91 ], [ %181, %97 ]
  %100 = phi i64 [ %92, %91 ], [ %180, %97 ]
  %101 = phi i32 [ 347, %91 ], [ %182, %97 ]
  %102 = load i8, i8* %99, align 1, !tbaa !4
  %103 = zext i8 %102 to i64
  %104 = add i64 %98, %103
  %105 = add i64 %104, %100
  %106 = getelementptr inbounds i8, i8* %99, i64 1
  %107 = load i8, i8* %106, align 1, !tbaa !4
  %108 = zext i8 %107 to i64
  %109 = add i64 %104, %108
  %110 = add i64 %105, %109
  %111 = getelementptr inbounds i8, i8* %99, i64 2
  %112 = load i8, i8* %111, align 1, !tbaa !4
  %113 = zext i8 %112 to i64
  %114 = add i64 %109, %113
  %115 = add i64 %110, %114
  %116 = getelementptr inbounds i8, i8* %99, i64 3
  %117 = load i8, i8* %116, align 1, !tbaa !4
  %118 = zext i8 %117 to i64
  %119 = add i64 %114, %118
  %120 = add i64 %115, %119
  %121 = getelementptr inbounds i8, i8* %99, i64 4
  %122 = load i8, i8* %121, align 1, !tbaa !4
  %123 = zext i8 %122 to i64
  %124 = add i64 %119, %123
  %125 = add i64 %120, %124
  %126 = getelementptr inbounds i8, i8* %99, i64 5
  %127 = load i8, i8* %126, align 1, !tbaa !4
  %128 = zext i8 %127 to i64
  %129 = add i64 %124, %128
  %130 = add i64 %125, %129
  %131 = getelementptr inbounds i8, i8* %99, i64 6
  %132 = load i8, i8* %131, align 1, !tbaa !4
  %133 = zext i8 %132 to i64
  %134 = add i64 %129, %133
  %135 = add i64 %130, %134
  %136 = getelementptr inbounds i8, i8* %99, i64 7
  %137 = load i8, i8* %136, align 1, !tbaa !4
  %138 = zext i8 %137 to i64
  %139 = add i64 %134, %138
  %140 = add i64 %135, %139
  %141 = getelementptr inbounds i8, i8* %99, i64 8
  %142 = load i8, i8* %141, align 1, !tbaa !4
  %143 = zext i8 %142 to i64
  %144 = add i64 %139, %143
  %145 = add i64 %140, %144
  %146 = getelementptr inbounds i8, i8* %99, i64 9
  %147 = load i8, i8* %146, align 1, !tbaa !4
  %148 = zext i8 %147 to i64
  %149 = add i64 %144, %148
  %150 = add i64 %145, %149
  %151 = getelementptr inbounds i8, i8* %99, i64 10
  %152 = load i8, i8* %151, align 1, !tbaa !4
  %153 = zext i8 %152 to i64
  %154 = add i64 %149, %153
  %155 = add i64 %150, %154
  %156 = getelementptr inbounds i8, i8* %99, i64 11
  %157 = load i8, i8* %156, align 1, !tbaa !4
  %158 = zext i8 %157 to i64
  %159 = add i64 %154, %158
  %160 = add i64 %155, %159
  %161 = getelementptr inbounds i8, i8* %99, i64 12
  %162 = load i8, i8* %161, align 1, !tbaa !4
  %163 = zext i8 %162 to i64
  %164 = add i64 %159, %163
  %165 = add i64 %160, %164
  %166 = getelementptr inbounds i8, i8* %99, i64 13
  %167 = load i8, i8* %166, align 1, !tbaa !4
  %168 = zext i8 %167 to i64
  %169 = add i64 %164, %168
  %170 = add i64 %165, %169
  %171 = getelementptr inbounds i8, i8* %99, i64 14
  %172 = load i8, i8* %171, align 1, !tbaa !4
  %173 = zext i8 %172 to i64
  %174 = add i64 %169, %173
  %175 = add i64 %170, %174
  %176 = getelementptr inbounds i8, i8* %99, i64 15
  %177 = load i8, i8* %176, align 1, !tbaa !4
  %178 = zext i8 %177 to i64
  %179 = add i64 %174, %178
  %180 = add i64 %175, %179
  %181 = getelementptr inbounds i8, i8* %99, i64 16
  %182 = add nsw i32 %101, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %97, !llvm.loop !11

184:                                              ; preds = %97
  %185 = getelementptr i8, i8* %94, i64 5552
  %186 = urem i64 %179, 65521
  %187 = urem i64 %180, 65521
  %188 = icmp ugt i64 %96, 5551
  br i1 %188, label %91, label %189, !llvm.loop !12

189:                                              ; preds = %184
  %190 = icmp eq i64 %96, 0
  br i1 %190, label %349, label %191

191:                                              ; preds = %189
  %192 = icmp ugt i64 %96, 15
  br i1 %192, label %193, label %200

193:                                              ; preds = %25, %191
  %194 = phi i64 [ %5, %25 ], [ %187, %191 ]
  %195 = phi i64 [ %2, %25 ], [ %96, %191 ]
  %196 = phi i8* [ %1, %25 ], [ %185, %191 ]
  %197 = phi i64 [ %6, %25 ], [ %186, %191 ]
  br label %230

198:                                              ; preds = %230
  %199 = icmp eq i64 %235, 0
  br i1 %199, label %344, label %200

200:                                              ; preds = %191, %198
  %201 = phi i64 [ %187, %191 ], [ %314, %198 ]
  %202 = phi i64 [ %96, %191 ], [ %235, %198 ]
  %203 = phi i8* [ %185, %191 ], [ %315, %198 ]
  %204 = phi i64 [ %186, %191 ], [ %313, %198 ]
  %205 = add i64 %202, -1
  %206 = and i64 %202, 3
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %222, label %208

208:                                              ; preds = %200, %208
  %209 = phi i64 [ %219, %208 ], [ %201, %200 ]
  %210 = phi i64 [ %214, %208 ], [ %202, %200 ]
  %211 = phi i8* [ %215, %208 ], [ %203, %200 ]
  %212 = phi i64 [ %218, %208 ], [ %204, %200 ]
  %213 = phi i64 [ %220, %208 ], [ 0, %200 ]
  %214 = add i64 %210, -1
  %215 = getelementptr inbounds i8, i8* %211, i64 1
  %216 = load i8, i8* %211, align 1, !tbaa !4
  %217 = zext i8 %216 to i64
  %218 = add i64 %212, %217
  %219 = add i64 %218, %209
  %220 = add i64 %213, 1
  %221 = icmp eq i64 %220, %206
  br i1 %221, label %222, label %208, !llvm.loop !13

222:                                              ; preds = %208, %200
  %223 = phi i64 [ undef, %200 ], [ %218, %208 ]
  %224 = phi i64 [ undef, %200 ], [ %219, %208 ]
  %225 = phi i64 [ %201, %200 ], [ %219, %208 ]
  %226 = phi i64 [ %202, %200 ], [ %214, %208 ]
  %227 = phi i8* [ %203, %200 ], [ %215, %208 ]
  %228 = phi i64 [ %204, %200 ], [ %218, %208 ]
  %229 = icmp ult i64 %205, 3
  br i1 %229, label %344, label %317

230:                                              ; preds = %193, %230
  %231 = phi i64 [ %314, %230 ], [ %194, %193 ]
  %232 = phi i64 [ %235, %230 ], [ %195, %193 ]
  %233 = phi i8* [ %315, %230 ], [ %196, %193 ]
  %234 = phi i64 [ %313, %230 ], [ %197, %193 ]
  %235 = add i64 %232, -16
  %236 = load i8, i8* %233, align 1, !tbaa !4
  %237 = zext i8 %236 to i64
  %238 = add i64 %234, %237
  %239 = add i64 %238, %231
  %240 = getelementptr inbounds i8, i8* %233, i64 1
  %241 = load i8, i8* %240, align 1, !tbaa !4
  %242 = zext i8 %241 to i64
  %243 = add i64 %238, %242
  %244 = add i64 %239, %243
  %245 = getelementptr inbounds i8, i8* %233, i64 2
  %246 = load i8, i8* %245, align 1, !tbaa !4
  %247 = zext i8 %246 to i64
  %248 = add i64 %243, %247
  %249 = add i64 %244, %248
  %250 = getelementptr inbounds i8, i8* %233, i64 3
  %251 = load i8, i8* %250, align 1, !tbaa !4
  %252 = zext i8 %251 to i64
  %253 = add i64 %248, %252
  %254 = add i64 %249, %253
  %255 = getelementptr inbounds i8, i8* %233, i64 4
  %256 = load i8, i8* %255, align 1, !tbaa !4
  %257 = zext i8 %256 to i64
  %258 = add i64 %253, %257
  %259 = add i64 %254, %258
  %260 = getelementptr inbounds i8, i8* %233, i64 5
  %261 = load i8, i8* %260, align 1, !tbaa !4
  %262 = zext i8 %261 to i64
  %263 = add i64 %258, %262
  %264 = add i64 %259, %263
  %265 = getelementptr inbounds i8, i8* %233, i64 6
  %266 = load i8, i8* %265, align 1, !tbaa !4
  %267 = zext i8 %266 to i64
  %268 = add i64 %263, %267
  %269 = add i64 %264, %268
  %270 = getelementptr inbounds i8, i8* %233, i64 7
  %271 = load i8, i8* %270, align 1, !tbaa !4
  %272 = zext i8 %271 to i64
  %273 = add i64 %268, %272
  %274 = add i64 %269, %273
  %275 = getelementptr inbounds i8, i8* %233, i64 8
  %276 = load i8, i8* %275, align 1, !tbaa !4
  %277 = zext i8 %276 to i64
  %278 = add i64 %273, %277
  %279 = add i64 %274, %278
  %280 = getelementptr inbounds i8, i8* %233, i64 9
  %281 = load i8, i8* %280, align 1, !tbaa !4
  %282 = zext i8 %281 to i64
  %283 = add i64 %278, %282
  %284 = add i64 %279, %283
  %285 = getelementptr inbounds i8, i8* %233, i64 10
  %286 = load i8, i8* %285, align 1, !tbaa !4
  %287 = zext i8 %286 to i64
  %288 = add i64 %283, %287
  %289 = add i64 %284, %288
  %290 = getelementptr inbounds i8, i8* %233, i64 11
  %291 = load i8, i8* %290, align 1, !tbaa !4
  %292 = zext i8 %291 to i64
  %293 = add i64 %288, %292
  %294 = add i64 %289, %293
  %295 = getelementptr inbounds i8, i8* %233, i64 12
  %296 = load i8, i8* %295, align 1, !tbaa !4
  %297 = zext i8 %296 to i64
  %298 = add i64 %293, %297
  %299 = add i64 %294, %298
  %300 = getelementptr inbounds i8, i8* %233, i64 13
  %301 = load i8, i8* %300, align 1, !tbaa !4
  %302 = zext i8 %301 to i64
  %303 = add i64 %298, %302
  %304 = add i64 %299, %303
  %305 = getelementptr inbounds i8, i8* %233, i64 14
  %306 = load i8, i8* %305, align 1, !tbaa !4
  %307 = zext i8 %306 to i64
  %308 = add i64 %303, %307
  %309 = add i64 %304, %308
  %310 = getelementptr inbounds i8, i8* %233, i64 15
  %311 = load i8, i8* %310, align 1, !tbaa !4
  %312 = zext i8 %311 to i64
  %313 = add i64 %308, %312
  %314 = add i64 %309, %313
  %315 = getelementptr inbounds i8, i8* %233, i64 16
  %316 = icmp ugt i64 %235, 15
  br i1 %316, label %230, label %198, !llvm.loop !14

317:                                              ; preds = %222, %317
  %318 = phi i64 [ %342, %317 ], [ %225, %222 ]
  %319 = phi i64 [ %337, %317 ], [ %226, %222 ]
  %320 = phi i8* [ %338, %317 ], [ %227, %222 ]
  %321 = phi i64 [ %341, %317 ], [ %228, %222 ]
  %322 = getelementptr inbounds i8, i8* %320, i64 1
  %323 = load i8, i8* %320, align 1, !tbaa !4
  %324 = zext i8 %323 to i64
  %325 = add i64 %321, %324
  %326 = add i64 %325, %318
  %327 = getelementptr inbounds i8, i8* %320, i64 2
  %328 = load i8, i8* %322, align 1, !tbaa !4
  %329 = zext i8 %328 to i64
  %330 = add i64 %325, %329
  %331 = add i64 %330, %326
  %332 = getelementptr inbounds i8, i8* %320, i64 3
  %333 = load i8, i8* %327, align 1, !tbaa !4
  %334 = zext i8 %333 to i64
  %335 = add i64 %330, %334
  %336 = add i64 %335, %331
  %337 = add i64 %319, -4
  %338 = getelementptr inbounds i8, i8* %320, i64 4
  %339 = load i8, i8* %332, align 1, !tbaa !4
  %340 = zext i8 %339 to i64
  %341 = add i64 %335, %340
  %342 = add i64 %341, %336
  %343 = icmp eq i64 %337, 0
  br i1 %343, label %344, label %317, !llvm.loop !15

344:                                              ; preds = %222, %317, %198
  %345 = phi i64 [ %313, %198 ], [ %223, %222 ], [ %341, %317 ]
  %346 = phi i64 [ %314, %198 ], [ %224, %222 ], [ %342, %317 ]
  %347 = urem i64 %345, 65521
  %348 = urem i64 %346, 65521
  br label %349

349:                                              ; preds = %344, %189
  %350 = phi i64 [ %347, %344 ], [ %186, %189 ]
  %351 = phi i64 [ %348, %344 ], [ %187, %189 ]
  %352 = shl nuw nsw i64 %351, 16
  %353 = or i64 %352, %350
  br label %354

354:                                              ; preds = %21, %349, %82, %8
  %355 = phi i64 [ %20, %8 ], [ %90, %82 ], [ %353, %349 ], [ 1, %21 ]
  ret i64 %355
}

; Function Attrs: nofree norecurse nosync nounwind readonly uwtable
define i64 @adler32(i64 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = zext i32 %2 to i64
  %5 = tail call i64 @adler32_z(i64 noundef %0, i8* noundef %1, i64 noundef %4)
  ret i64 %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i64 @adler32_combine(i64 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = icmp slt i64 %2, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = urem i64 %2, 65521
  %7 = and i64 %0, 65535
  %8 = mul nuw nsw i64 %6, %7
  %9 = trunc i64 %8 to i32
  %10 = urem i32 %9, 65521
  %11 = zext i32 %10 to i64
  %12 = and i64 %1, 65535
  %13 = add nuw nsw i64 %7, 65520
  %14 = add nuw nsw i64 %13, %12
  %15 = lshr i64 %0, 16
  %16 = and i64 %15, 65535
  %17 = lshr i64 %1, 16
  %18 = and i64 %17, 65535
  %19 = add nuw nsw i64 %16, 65521
  %20 = add nuw nsw i64 %19, %18
  %21 = sub nuw nsw i64 %20, %6
  %22 = add nuw nsw i64 %21, %11
  %23 = icmp ugt i64 %14, 65520
  %24 = add nsw i64 %14, -65521
  %25 = select i1 %23, i64 %24, i64 65520
  %26 = icmp ugt i64 %25, 65520
  %27 = add nsw i64 %25, -65521
  %28 = select i1 %26, i64 %27, i64 %25
  %29 = icmp ugt i64 %22, 131041
  %30 = add nsw i64 %22, -131042
  %31 = select i1 %29, i64 %30, i64 %22
  %32 = icmp ugt i64 %31, 65520
  %33 = shl nuw nsw i64 %31, 16
  %34 = add nsw i64 %33, -4293984256
  %35 = select i1 %32, i64 %34, i64 %33
  %36 = or i64 %35, %28
  br label %37

37:                                               ; preds = %3, %5
  %38 = phi i64 [ %36, %5 ], [ 4294967295, %3 ]
  ret i64 %38
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i64 @adler32_combine64(i64 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = icmp slt i64 %2, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = urem i64 %2, 65521
  %7 = and i64 %0, 65535
  %8 = mul nuw nsw i64 %6, %7
  %9 = trunc i64 %8 to i32
  %10 = urem i32 %9, 65521
  %11 = zext i32 %10 to i64
  %12 = and i64 %1, 65535
  %13 = add nuw nsw i64 %7, 65520
  %14 = add nuw nsw i64 %13, %12
  %15 = lshr i64 %0, 16
  %16 = and i64 %15, 65535
  %17 = lshr i64 %1, 16
  %18 = and i64 %17, 65535
  %19 = add nuw nsw i64 %16, 65521
  %20 = add nuw nsw i64 %19, %18
  %21 = sub nuw nsw i64 %20, %6
  %22 = add nuw nsw i64 %21, %11
  %23 = icmp ugt i64 %14, 65520
  %24 = add nsw i64 %14, -65521
  %25 = select i1 %23, i64 %24, i64 65520
  %26 = icmp ugt i64 %25, 65520
  %27 = add nsw i64 %25, -65521
  %28 = select i1 %26, i64 %27, i64 %25
  %29 = icmp ugt i64 %22, 131041
  %30 = add nsw i64 %22, -131042
  %31 = select i1 %29, i64 %30, i64 %22
  %32 = icmp ugt i64 %31, 65520
  %33 = shl nuw nsw i64 %31, 16
  %34 = add nsw i64 %33, -4293984256
  %35 = select i1 %32, i64 %34, i64 %33
  %36 = or i64 %35, %28
  br label %37

37:                                               ; preds = %3, %5
  %38 = phi i64 [ %36, %5 ], [ 4294967295, %3 ]
  ret i64 %38
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i32* @get_crc_table() local_unnamed_addr #1 {
  ret i32* getelementptr inbounds ([256 x i32], [256 x i32]* @crc_table, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nosync nounwind readonly uwtable
define i64 @crc32_z(i64 noundef %0, i8* noundef %1, i64 noundef %2) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %799, label %5

5:                                                ; preds = %3
  %6 = and i64 %0, 4294967295
  %7 = xor i64 %6, 4294967295
  %8 = icmp ugt i64 %2, 46
  br i1 %8, label %9, label %653

9:                                                ; preds = %5
  %10 = ptrtoint i8* %1 to i64
  %11 = and i64 %10, 7
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %144, label %13

13:                                               ; preds = %9
  %14 = add i64 %2, -1
  %15 = lshr i64 %7, 8
  %16 = getelementptr inbounds i8, i8* %1, i64 1
  %17 = load i8, i8* %1, align 1, !tbaa !4
  %18 = zext i8 %17 to i64
  %19 = and i64 %7, 255
  %20 = xor i64 %19, %18
  %21 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4, !tbaa !16
  %23 = zext i32 %22 to i64
  %24 = xor i64 %15, %23
  %25 = icmp ne i64 %14, 0
  %26 = ptrtoint i8* %16 to i64
  %27 = and i64 %26, 7
  %28 = icmp ne i64 %27, 0
  %29 = select i1 %25, i1 %28, i1 false
  br i1 %29, label %30, label %144, !llvm.loop !18

30:                                               ; preds = %13
  %31 = add i64 %2, -2
  %32 = lshr i64 %24, 8
  %33 = getelementptr inbounds i8, i8* %1, i64 2
  %34 = load i8, i8* %16, align 1, !tbaa !4
  %35 = zext i8 %34 to i64
  %36 = and i64 %24, 255
  %37 = xor i64 %36, %35
  %38 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4, !tbaa !16
  %40 = zext i32 %39 to i64
  %41 = xor i64 %32, %40
  %42 = icmp ne i64 %31, 0
  %43 = ptrtoint i8* %33 to i64
  %44 = and i64 %43, 7
  %45 = icmp ne i64 %44, 0
  %46 = select i1 %42, i1 %45, i1 false
  br i1 %46, label %47, label %144, !llvm.loop !18

47:                                               ; preds = %30
  %48 = add i64 %2, -3
  %49 = lshr i64 %41, 8
  %50 = getelementptr inbounds i8, i8* %1, i64 3
  %51 = load i8, i8* %33, align 1, !tbaa !4
  %52 = zext i8 %51 to i64
  %53 = and i64 %41, 255
  %54 = xor i64 %53, %52
  %55 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4, !tbaa !16
  %57 = zext i32 %56 to i64
  %58 = xor i64 %49, %57
  %59 = icmp ne i64 %48, 0
  %60 = ptrtoint i8* %50 to i64
  %61 = and i64 %60, 7
  %62 = icmp ne i64 %61, 0
  %63 = select i1 %59, i1 %62, i1 false
  br i1 %63, label %64, label %144, !llvm.loop !18

64:                                               ; preds = %47
  %65 = add i64 %2, -4
  %66 = lshr i64 %58, 8
  %67 = getelementptr inbounds i8, i8* %1, i64 4
  %68 = load i8, i8* %50, align 1, !tbaa !4
  %69 = zext i8 %68 to i64
  %70 = and i64 %58, 255
  %71 = xor i64 %70, %69
  %72 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4, !tbaa !16
  %74 = zext i32 %73 to i64
  %75 = xor i64 %66, %74
  %76 = icmp ne i64 %65, 0
  %77 = ptrtoint i8* %67 to i64
  %78 = and i64 %77, 7
  %79 = icmp ne i64 %78, 0
  %80 = select i1 %76, i1 %79, i1 false
  br i1 %80, label %81, label %144, !llvm.loop !18

81:                                               ; preds = %64
  %82 = add i64 %2, -5
  %83 = lshr i64 %75, 8
  %84 = getelementptr inbounds i8, i8* %1, i64 5
  %85 = load i8, i8* %67, align 1, !tbaa !4
  %86 = zext i8 %85 to i64
  %87 = and i64 %75, 255
  %88 = xor i64 %87, %86
  %89 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4, !tbaa !16
  %91 = zext i32 %90 to i64
  %92 = xor i64 %83, %91
  %93 = icmp ne i64 %82, 0
  %94 = ptrtoint i8* %84 to i64
  %95 = and i64 %94, 7
  %96 = icmp ne i64 %95, 0
  %97 = select i1 %93, i1 %96, i1 false
  br i1 %97, label %98, label %144, !llvm.loop !18

98:                                               ; preds = %81
  %99 = add i64 %2, -6
  %100 = lshr i64 %92, 8
  %101 = getelementptr inbounds i8, i8* %1, i64 6
  %102 = load i8, i8* %84, align 1, !tbaa !4
  %103 = zext i8 %102 to i64
  %104 = and i64 %92, 255
  %105 = xor i64 %104, %103
  %106 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4, !tbaa !16
  %108 = zext i32 %107 to i64
  %109 = xor i64 %100, %108
  %110 = icmp ne i64 %99, 0
  %111 = ptrtoint i8* %101 to i64
  %112 = and i64 %111, 7
  %113 = icmp ne i64 %112, 0
  %114 = select i1 %110, i1 %113, i1 false
  br i1 %114, label %115, label %144, !llvm.loop !18

115:                                              ; preds = %98
  %116 = add i64 %2, -7
  %117 = lshr i64 %109, 8
  %118 = getelementptr inbounds i8, i8* %1, i64 7
  %119 = load i8, i8* %101, align 1, !tbaa !4
  %120 = zext i8 %119 to i64
  %121 = and i64 %109, 255
  %122 = xor i64 %121, %120
  %123 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %122
  %124 = load i32, i32* %123, align 4, !tbaa !16
  %125 = zext i32 %124 to i64
  %126 = xor i64 %117, %125
  %127 = icmp ne i64 %116, 0
  %128 = ptrtoint i8* %118 to i64
  %129 = and i64 %128, 7
  %130 = icmp ne i64 %129, 0
  %131 = select i1 %127, i1 %130, i1 false
  br i1 %131, label %132, label %144, !llvm.loop !18

132:                                              ; preds = %115
  %133 = add i64 %2, -8
  %134 = lshr i64 %126, 8
  %135 = getelementptr inbounds i8, i8* %1, i64 8
  %136 = load i8, i8* %118, align 1, !tbaa !4
  %137 = zext i8 %136 to i64
  %138 = and i64 %126, 255
  %139 = xor i64 %138, %137
  %140 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4, !tbaa !16
  %142 = zext i32 %141 to i64
  %143 = xor i64 %134, %142
  br label %144

144:                                              ; preds = %13, %30, %47, %64, %81, %98, %115, %132, %9
  %145 = phi i64 [ %2, %9 ], [ %14, %13 ], [ %31, %30 ], [ %48, %47 ], [ %65, %64 ], [ %82, %81 ], [ %99, %98 ], [ %116, %115 ], [ %133, %132 ]
  %146 = phi i8* [ %1, %9 ], [ %16, %13 ], [ %33, %30 ], [ %50, %47 ], [ %67, %64 ], [ %84, %81 ], [ %101, %98 ], [ %118, %115 ], [ %135, %132 ]
  %147 = phi i64 [ %7, %9 ], [ %24, %13 ], [ %41, %30 ], [ %58, %47 ], [ %75, %64 ], [ %92, %81 ], [ %109, %98 ], [ %126, %115 ], [ %143, %132 ]
  %148 = udiv i64 %145, 40
  %149 = mul i64 %148, -40
  %150 = add i64 %149, %145
  %151 = bitcast i8* %146 to i64*
  %152 = trunc i64 %147 to i32
  %153 = add nsw i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %380, label %155

155:                                              ; preds = %144
  %156 = mul nuw i64 %148, 40
  %157 = add i64 %156, -40
  %158 = getelementptr i8, i8* %146, i64 %157
  br label %159

159:                                              ; preds = %155, %159
  %160 = phi i64 [ %372, %159 ], [ %153, %155 ]
  %161 = phi i64* [ %371, %159 ], [ %151, %155 ]
  %162 = phi i32 [ %370, %159 ], [ 0, %155 ]
  %163 = phi i32 [ %354, %159 ], [ %152, %155 ]
  %164 = phi i32 [ %366, %159 ], [ 0, %155 ]
  %165 = phi i32 [ %358, %159 ], [ 0, %155 ]
  %166 = phi i32 [ %362, %159 ], [ 0, %155 ]
  %167 = zext i32 %163 to i64
  %168 = load i64, i64* %161, align 8, !tbaa !19
  %169 = xor i64 %168, %167
  %170 = zext i32 %165 to i64
  %171 = getelementptr inbounds i64, i64* %161, i64 1
  %172 = load i64, i64* %171, align 8, !tbaa !19
  %173 = xor i64 %172, %170
  %174 = zext i32 %166 to i64
  %175 = getelementptr inbounds i64, i64* %161, i64 2
  %176 = load i64, i64* %175, align 8, !tbaa !19
  %177 = xor i64 %176, %174
  %178 = zext i32 %164 to i64
  %179 = getelementptr inbounds i64, i64* %161, i64 3
  %180 = load i64, i64* %179, align 8, !tbaa !19
  %181 = xor i64 %180, %178
  %182 = zext i32 %162 to i64
  %183 = getelementptr inbounds i64, i64* %161, i64 4
  %184 = load i64, i64* %183, align 8, !tbaa !19
  %185 = xor i64 %184, %182
  %186 = and i64 %169, 255
  %187 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4, !tbaa !16
  %189 = and i64 %173, 255
  %190 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 0, i64 %189
  %191 = load i32, i32* %190, align 4, !tbaa !16
  %192 = and i64 %177, 255
  %193 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 0, i64 %192
  %194 = load i32, i32* %193, align 4, !tbaa !16
  %195 = and i64 %181, 255
  %196 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 0, i64 %195
  %197 = load i32, i32* %196, align 4, !tbaa !16
  %198 = and i64 %185, 255
  %199 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4, !tbaa !16
  %201 = lshr i64 %169, 8
  %202 = and i64 %201, 255
  %203 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 1, i64 %202
  %204 = load i32, i32* %203, align 4, !tbaa !16
  %205 = xor i32 %204, %188
  %206 = lshr i64 %173, 8
  %207 = and i64 %206, 255
  %208 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 1, i64 %207
  %209 = load i32, i32* %208, align 4, !tbaa !16
  %210 = xor i32 %209, %191
  %211 = lshr i64 %177, 8
  %212 = and i64 %211, 255
  %213 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 1, i64 %212
  %214 = load i32, i32* %213, align 4, !tbaa !16
  %215 = xor i32 %214, %194
  %216 = lshr i64 %181, 8
  %217 = and i64 %216, 255
  %218 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 1, i64 %217
  %219 = load i32, i32* %218, align 4, !tbaa !16
  %220 = xor i32 %219, %197
  %221 = lshr i64 %185, 8
  %222 = and i64 %221, 255
  %223 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 1, i64 %222
  %224 = load i32, i32* %223, align 4, !tbaa !16
  %225 = xor i32 %224, %200
  %226 = lshr i64 %169, 16
  %227 = and i64 %226, 255
  %228 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 2, i64 %227
  %229 = load i32, i32* %228, align 4, !tbaa !16
  %230 = xor i32 %229, %205
  %231 = lshr i64 %173, 16
  %232 = and i64 %231, 255
  %233 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 2, i64 %232
  %234 = load i32, i32* %233, align 4, !tbaa !16
  %235 = xor i32 %234, %210
  %236 = lshr i64 %177, 16
  %237 = and i64 %236, 255
  %238 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 2, i64 %237
  %239 = load i32, i32* %238, align 4, !tbaa !16
  %240 = xor i32 %239, %215
  %241 = lshr i64 %181, 16
  %242 = and i64 %241, 255
  %243 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 2, i64 %242
  %244 = load i32, i32* %243, align 4, !tbaa !16
  %245 = xor i32 %244, %220
  %246 = lshr i64 %185, 16
  %247 = and i64 %246, 255
  %248 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 2, i64 %247
  %249 = load i32, i32* %248, align 4, !tbaa !16
  %250 = xor i32 %249, %225
  %251 = lshr i64 %169, 24
  %252 = and i64 %251, 255
  %253 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 3, i64 %252
  %254 = load i32, i32* %253, align 4, !tbaa !16
  %255 = xor i32 %254, %230
  %256 = lshr i64 %173, 24
  %257 = and i64 %256, 255
  %258 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 3, i64 %257
  %259 = load i32, i32* %258, align 4, !tbaa !16
  %260 = xor i32 %259, %235
  %261 = lshr i64 %177, 24
  %262 = and i64 %261, 255
  %263 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 3, i64 %262
  %264 = load i32, i32* %263, align 4, !tbaa !16
  %265 = xor i32 %264, %240
  %266 = lshr i64 %181, 24
  %267 = and i64 %266, 255
  %268 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 3, i64 %267
  %269 = load i32, i32* %268, align 4, !tbaa !16
  %270 = xor i32 %269, %245
  %271 = lshr i64 %185, 24
  %272 = and i64 %271, 255
  %273 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 3, i64 %272
  %274 = load i32, i32* %273, align 4, !tbaa !16
  %275 = xor i32 %274, %250
  %276 = lshr i64 %168, 32
  %277 = and i64 %276, 255
  %278 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 4, i64 %277
  %279 = load i32, i32* %278, align 4, !tbaa !16
  %280 = xor i32 %279, %255
  %281 = lshr i64 %172, 32
  %282 = and i64 %281, 255
  %283 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 4, i64 %282
  %284 = load i32, i32* %283, align 4, !tbaa !16
  %285 = xor i32 %284, %260
  %286 = lshr i64 %176, 32
  %287 = and i64 %286, 255
  %288 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 4, i64 %287
  %289 = load i32, i32* %288, align 4, !tbaa !16
  %290 = xor i32 %289, %265
  %291 = lshr i64 %180, 32
  %292 = and i64 %291, 255
  %293 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 4, i64 %292
  %294 = load i32, i32* %293, align 4, !tbaa !16
  %295 = xor i32 %294, %270
  %296 = lshr i64 %184, 32
  %297 = and i64 %296, 255
  %298 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 4, i64 %297
  %299 = load i32, i32* %298, align 4, !tbaa !16
  %300 = xor i32 %299, %275
  %301 = lshr i64 %168, 40
  %302 = and i64 %301, 255
  %303 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 5, i64 %302
  %304 = load i32, i32* %303, align 4, !tbaa !16
  %305 = xor i32 %304, %280
  %306 = lshr i64 %172, 40
  %307 = and i64 %306, 255
  %308 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 5, i64 %307
  %309 = load i32, i32* %308, align 4, !tbaa !16
  %310 = xor i32 %309, %285
  %311 = lshr i64 %176, 40
  %312 = and i64 %311, 255
  %313 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 5, i64 %312
  %314 = load i32, i32* %313, align 4, !tbaa !16
  %315 = xor i32 %314, %290
  %316 = lshr i64 %180, 40
  %317 = and i64 %316, 255
  %318 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 5, i64 %317
  %319 = load i32, i32* %318, align 4, !tbaa !16
  %320 = xor i32 %319, %295
  %321 = lshr i64 %184, 40
  %322 = and i64 %321, 255
  %323 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 5, i64 %322
  %324 = load i32, i32* %323, align 4, !tbaa !16
  %325 = xor i32 %324, %300
  %326 = lshr i64 %168, 48
  %327 = and i64 %326, 255
  %328 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 6, i64 %327
  %329 = load i32, i32* %328, align 4, !tbaa !16
  %330 = xor i32 %329, %305
  %331 = lshr i64 %172, 48
  %332 = and i64 %331, 255
  %333 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 6, i64 %332
  %334 = load i32, i32* %333, align 4, !tbaa !16
  %335 = xor i32 %334, %310
  %336 = lshr i64 %176, 48
  %337 = and i64 %336, 255
  %338 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 6, i64 %337
  %339 = load i32, i32* %338, align 4, !tbaa !16
  %340 = xor i32 %339, %315
  %341 = lshr i64 %180, 48
  %342 = and i64 %341, 255
  %343 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 6, i64 %342
  %344 = load i32, i32* %343, align 4, !tbaa !16
  %345 = xor i32 %344, %320
  %346 = lshr i64 %184, 48
  %347 = and i64 %346, 255
  %348 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 6, i64 %347
  %349 = load i32, i32* %348, align 4, !tbaa !16
  %350 = xor i32 %349, %325
  %351 = lshr i64 %168, 56
  %352 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 7, i64 %351
  %353 = load i32, i32* %352, align 4, !tbaa !16
  %354 = xor i32 %353, %330
  %355 = lshr i64 %172, 56
  %356 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 7, i64 %355
  %357 = load i32, i32* %356, align 4, !tbaa !16
  %358 = xor i32 %357, %335
  %359 = lshr i64 %176, 56
  %360 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 7, i64 %359
  %361 = load i32, i32* %360, align 4, !tbaa !16
  %362 = xor i32 %361, %340
  %363 = lshr i64 %180, 56
  %364 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 7, i64 %363
  %365 = load i32, i32* %364, align 4, !tbaa !16
  %366 = xor i32 %365, %345
  %367 = lshr i64 %184, 56
  %368 = getelementptr inbounds [8 x [256 x i32]], [8 x [256 x i32]]* @crc_braid_table, i64 0, i64 7, i64 %367
  %369 = load i32, i32* %368, align 4, !tbaa !16
  %370 = xor i32 %369, %350
  %371 = getelementptr inbounds i64, i64* %161, i64 5
  %372 = add i64 %160, -1
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %159, !llvm.loop !21

374:                                              ; preds = %159
  %375 = bitcast i8* %158 to i64*
  %376 = zext i32 %358 to i64
  %377 = zext i32 %362 to i64
  %378 = zext i32 %366 to i64
  %379 = zext i32 %370 to i64
  br label %380

380:                                              ; preds = %374, %144
  %381 = phi i64 [ 0, %144 ], [ %377, %374 ]
  %382 = phi i64 [ 0, %144 ], [ %376, %374 ]
  %383 = phi i64 [ 0, %144 ], [ %378, %374 ]
  %384 = phi i32 [ %152, %144 ], [ %354, %374 ]
  %385 = phi i64 [ 0, %144 ], [ %379, %374 ]
  %386 = phi i64* [ %151, %144 ], [ %375, %374 ]
  %387 = zext i32 %384 to i64
  %388 = load i64, i64* %386, align 8, !tbaa !19
  %389 = xor i64 %388, %387
  %390 = lshr i64 %389, 8
  %391 = and i64 %389, 255
  %392 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %391
  %393 = load i32, i32* %392, align 4, !tbaa !16
  %394 = zext i32 %393 to i64
  %395 = xor i64 %390, %394
  %396 = lshr i64 %395, 8
  %397 = and i64 %395, 255
  %398 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %397
  %399 = load i32, i32* %398, align 4, !tbaa !16
  %400 = zext i32 %399 to i64
  %401 = xor i64 %396, %400
  %402 = lshr i64 %401, 8
  %403 = and i64 %401, 255
  %404 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %403
  %405 = load i32, i32* %404, align 4, !tbaa !16
  %406 = zext i32 %405 to i64
  %407 = xor i64 %402, %406
  %408 = lshr i64 %407, 8
  %409 = and i64 %407, 255
  %410 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %409
  %411 = load i32, i32* %410, align 4, !tbaa !16
  %412 = zext i32 %411 to i64
  %413 = xor i64 %408, %412
  %414 = lshr i64 %413, 8
  %415 = and i64 %413, 255
  %416 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %415
  %417 = load i32, i32* %416, align 4, !tbaa !16
  %418 = zext i32 %417 to i64
  %419 = xor i64 %414, %418
  %420 = lshr i64 %419, 8
  %421 = and i64 %419, 255
  %422 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %421
  %423 = load i32, i32* %422, align 4, !tbaa !16
  %424 = zext i32 %423 to i64
  %425 = xor i64 %420, %424
  %426 = lshr i64 %425, 8
  %427 = and i64 %425, 255
  %428 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %427
  %429 = load i32, i32* %428, align 4, !tbaa !16
  %430 = zext i32 %429 to i64
  %431 = xor i64 %426, %430
  %432 = lshr i64 %431, 8
  %433 = and i64 %431, 255
  %434 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %433
  %435 = load i32, i32* %434, align 4, !tbaa !16
  %436 = trunc i64 %432 to i32
  %437 = xor i32 %435, %436
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds i64, i64* %386, i64 1
  %440 = load i64, i64* %439, align 8, !tbaa !19
  %441 = xor i64 %440, %382
  %442 = xor i64 %441, %438
  %443 = lshr i64 %442, 8
  %444 = and i64 %442, 255
  %445 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %444
  %446 = load i32, i32* %445, align 4, !tbaa !16
  %447 = zext i32 %446 to i64
  %448 = xor i64 %443, %447
  %449 = lshr i64 %448, 8
  %450 = and i64 %448, 255
  %451 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %450
  %452 = load i32, i32* %451, align 4, !tbaa !16
  %453 = zext i32 %452 to i64
  %454 = xor i64 %449, %453
  %455 = lshr i64 %454, 8
  %456 = and i64 %454, 255
  %457 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %456
  %458 = load i32, i32* %457, align 4, !tbaa !16
  %459 = zext i32 %458 to i64
  %460 = xor i64 %455, %459
  %461 = lshr i64 %460, 8
  %462 = and i64 %460, 255
  %463 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %462
  %464 = load i32, i32* %463, align 4, !tbaa !16
  %465 = zext i32 %464 to i64
  %466 = xor i64 %461, %465
  %467 = lshr i64 %466, 8
  %468 = and i64 %466, 255
  %469 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %468
  %470 = load i32, i32* %469, align 4, !tbaa !16
  %471 = zext i32 %470 to i64
  %472 = xor i64 %467, %471
  %473 = lshr i64 %472, 8
  %474 = and i64 %472, 255
  %475 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %474
  %476 = load i32, i32* %475, align 4, !tbaa !16
  %477 = zext i32 %476 to i64
  %478 = xor i64 %473, %477
  %479 = lshr i64 %478, 8
  %480 = and i64 %478, 255
  %481 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %480
  %482 = load i32, i32* %481, align 4, !tbaa !16
  %483 = zext i32 %482 to i64
  %484 = xor i64 %479, %483
  %485 = lshr i64 %484, 8
  %486 = and i64 %484, 255
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4, !tbaa !16
  %489 = trunc i64 %485 to i32
  %490 = xor i32 %488, %489
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds i64, i64* %386, i64 2
  %493 = load i64, i64* %492, align 8, !tbaa !19
  %494 = xor i64 %493, %381
  %495 = xor i64 %494, %491
  %496 = lshr i64 %495, 8
  %497 = and i64 %495, 255
  %498 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4, !tbaa !16
  %500 = zext i32 %499 to i64
  %501 = xor i64 %496, %500
  %502 = lshr i64 %501, 8
  %503 = and i64 %501, 255
  %504 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %503
  %505 = load i32, i32* %504, align 4, !tbaa !16
  %506 = zext i32 %505 to i64
  %507 = xor i64 %502, %506
  %508 = lshr i64 %507, 8
  %509 = and i64 %507, 255
  %510 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %509
  %511 = load i32, i32* %510, align 4, !tbaa !16
  %512 = zext i32 %511 to i64
  %513 = xor i64 %508, %512
  %514 = lshr i64 %513, 8
  %515 = and i64 %513, 255
  %516 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %515
  %517 = load i32, i32* %516, align 4, !tbaa !16
  %518 = zext i32 %517 to i64
  %519 = xor i64 %514, %518
  %520 = lshr i64 %519, 8
  %521 = and i64 %519, 255
  %522 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4, !tbaa !16
  %524 = zext i32 %523 to i64
  %525 = xor i64 %520, %524
  %526 = lshr i64 %525, 8
  %527 = and i64 %525, 255
  %528 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %527
  %529 = load i32, i32* %528, align 4, !tbaa !16
  %530 = zext i32 %529 to i64
  %531 = xor i64 %526, %530
  %532 = lshr i64 %531, 8
  %533 = and i64 %531, 255
  %534 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %533
  %535 = load i32, i32* %534, align 4, !tbaa !16
  %536 = zext i32 %535 to i64
  %537 = xor i64 %532, %536
  %538 = lshr i64 %537, 8
  %539 = and i64 %537, 255
  %540 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %539
  %541 = load i32, i32* %540, align 4, !tbaa !16
  %542 = trunc i64 %538 to i32
  %543 = xor i32 %541, %542
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds i64, i64* %386, i64 3
  %546 = load i64, i64* %545, align 8, !tbaa !19
  %547 = xor i64 %546, %383
  %548 = xor i64 %547, %544
  %549 = lshr i64 %548, 8
  %550 = and i64 %548, 255
  %551 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4, !tbaa !16
  %553 = zext i32 %552 to i64
  %554 = xor i64 %549, %553
  %555 = lshr i64 %554, 8
  %556 = and i64 %554, 255
  %557 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %556
  %558 = load i32, i32* %557, align 4, !tbaa !16
  %559 = zext i32 %558 to i64
  %560 = xor i64 %555, %559
  %561 = lshr i64 %560, 8
  %562 = and i64 %560, 255
  %563 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %562
  %564 = load i32, i32* %563, align 4, !tbaa !16
  %565 = zext i32 %564 to i64
  %566 = xor i64 %561, %565
  %567 = lshr i64 %566, 8
  %568 = and i64 %566, 255
  %569 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4, !tbaa !16
  %571 = zext i32 %570 to i64
  %572 = xor i64 %567, %571
  %573 = lshr i64 %572, 8
  %574 = and i64 %572, 255
  %575 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %574
  %576 = load i32, i32* %575, align 4, !tbaa !16
  %577 = zext i32 %576 to i64
  %578 = xor i64 %573, %577
  %579 = lshr i64 %578, 8
  %580 = and i64 %578, 255
  %581 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %580
  %582 = load i32, i32* %581, align 4, !tbaa !16
  %583 = zext i32 %582 to i64
  %584 = xor i64 %579, %583
  %585 = lshr i64 %584, 8
  %586 = and i64 %584, 255
  %587 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %586
  %588 = load i32, i32* %587, align 4, !tbaa !16
  %589 = zext i32 %588 to i64
  %590 = xor i64 %585, %589
  %591 = lshr i64 %590, 8
  %592 = and i64 %590, 255
  %593 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %592
  %594 = load i32, i32* %593, align 4, !tbaa !16
  %595 = trunc i64 %591 to i32
  %596 = xor i32 %594, %595
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds i64, i64* %386, i64 4
  %599 = load i64, i64* %598, align 8, !tbaa !19
  %600 = xor i64 %599, %385
  %601 = xor i64 %600, %597
  %602 = lshr i64 %601, 8
  %603 = and i64 %601, 255
  %604 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %603
  %605 = load i32, i32* %604, align 4, !tbaa !16
  %606 = zext i32 %605 to i64
  %607 = xor i64 %602, %606
  %608 = lshr i64 %607, 8
  %609 = and i64 %607, 255
  %610 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %609
  %611 = load i32, i32* %610, align 4, !tbaa !16
  %612 = zext i32 %611 to i64
  %613 = xor i64 %608, %612
  %614 = lshr i64 %613, 8
  %615 = and i64 %613, 255
  %616 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %615
  %617 = load i32, i32* %616, align 4, !tbaa !16
  %618 = zext i32 %617 to i64
  %619 = xor i64 %614, %618
  %620 = lshr i64 %619, 8
  %621 = and i64 %619, 255
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %621
  %623 = load i32, i32* %622, align 4, !tbaa !16
  %624 = zext i32 %623 to i64
  %625 = xor i64 %620, %624
  %626 = lshr i64 %625, 8
  %627 = and i64 %625, 255
  %628 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %627
  %629 = load i32, i32* %628, align 4, !tbaa !16
  %630 = zext i32 %629 to i64
  %631 = xor i64 %626, %630
  %632 = lshr i64 %631, 8
  %633 = and i64 %631, 255
  %634 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %633
  %635 = load i32, i32* %634, align 4, !tbaa !16
  %636 = zext i32 %635 to i64
  %637 = xor i64 %632, %636
  %638 = lshr i64 %637, 8
  %639 = and i64 %637, 255
  %640 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %639
  %641 = load i32, i32* %640, align 4, !tbaa !16
  %642 = zext i32 %641 to i64
  %643 = xor i64 %638, %642
  %644 = lshr i64 %643, 8
  %645 = and i64 %643, 255
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %645
  %647 = load i32, i32* %646, align 4, !tbaa !16
  %648 = trunc i64 %644 to i32
  %649 = xor i32 %647, %648
  %650 = getelementptr inbounds i64, i64* %386, i64 5
  %651 = zext i32 %649 to i64
  %652 = bitcast i64* %650 to i8*
  br label %653

653:                                              ; preds = %380, %5
  %654 = phi i64 [ %150, %380 ], [ %2, %5 ]
  %655 = phi i8* [ %652, %380 ], [ %1, %5 ]
  %656 = phi i64 [ %651, %380 ], [ %7, %5 ]
  %657 = icmp ugt i64 %654, 7
  br i1 %657, label %684, label %658

658:                                              ; preds = %684, %653
  %659 = phi i64 [ %654, %653 ], [ %688, %684 ]
  %660 = phi i8* [ %655, %653 ], [ %760, %684 ]
  %661 = phi i64 [ %656, %653 ], [ %768, %684 ]
  %662 = icmp eq i64 %659, 0
  br i1 %662, label %796, label %663

663:                                              ; preds = %658
  %664 = and i64 %659, 1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %678, label %666

666:                                              ; preds = %663
  %667 = add i64 %659, -1
  %668 = lshr i64 %661, 8
  %669 = getelementptr inbounds i8, i8* %660, i64 1
  %670 = load i8, i8* %660, align 1, !tbaa !4
  %671 = zext i8 %670 to i64
  %672 = and i64 %661, 255
  %673 = xor i64 %672, %671
  %674 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %673
  %675 = load i32, i32* %674, align 4, !tbaa !16
  %676 = zext i32 %675 to i64
  %677 = xor i64 %668, %676
  br label %678

678:                                              ; preds = %666, %663
  %679 = phi i64 [ undef, %663 ], [ %677, %666 ]
  %680 = phi i64 [ %661, %663 ], [ %677, %666 ]
  %681 = phi i8* [ %660, %663 ], [ %669, %666 ]
  %682 = phi i64 [ %659, %663 ], [ %667, %666 ]
  %683 = icmp eq i64 %659, 1
  br i1 %683, label %796, label %770

684:                                              ; preds = %653, %684
  %685 = phi i64 [ %768, %684 ], [ %656, %653 ]
  %686 = phi i8* [ %760, %684 ], [ %655, %653 ]
  %687 = phi i64 [ %688, %684 ], [ %654, %653 ]
  %688 = add i64 %687, -8
  %689 = lshr i64 %685, 8
  %690 = getelementptr inbounds i8, i8* %686, i64 1
  %691 = load i8, i8* %686, align 1, !tbaa !4
  %692 = zext i8 %691 to i64
  %693 = and i64 %685, 255
  %694 = xor i64 %693, %692
  %695 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %694
  %696 = load i32, i32* %695, align 4, !tbaa !16
  %697 = zext i32 %696 to i64
  %698 = xor i64 %689, %697
  %699 = lshr i64 %698, 8
  %700 = getelementptr inbounds i8, i8* %686, i64 2
  %701 = load i8, i8* %690, align 1, !tbaa !4
  %702 = zext i8 %701 to i64
  %703 = and i64 %698, 255
  %704 = xor i64 %703, %702
  %705 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %704
  %706 = load i32, i32* %705, align 4, !tbaa !16
  %707 = zext i32 %706 to i64
  %708 = xor i64 %699, %707
  %709 = lshr i64 %708, 8
  %710 = getelementptr inbounds i8, i8* %686, i64 3
  %711 = load i8, i8* %700, align 1, !tbaa !4
  %712 = zext i8 %711 to i64
  %713 = and i64 %708, 255
  %714 = xor i64 %713, %712
  %715 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %714
  %716 = load i32, i32* %715, align 4, !tbaa !16
  %717 = zext i32 %716 to i64
  %718 = xor i64 %709, %717
  %719 = lshr i64 %718, 8
  %720 = getelementptr inbounds i8, i8* %686, i64 4
  %721 = load i8, i8* %710, align 1, !tbaa !4
  %722 = zext i8 %721 to i64
  %723 = and i64 %718, 255
  %724 = xor i64 %723, %722
  %725 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %724
  %726 = load i32, i32* %725, align 4, !tbaa !16
  %727 = zext i32 %726 to i64
  %728 = xor i64 %719, %727
  %729 = lshr i64 %728, 8
  %730 = getelementptr inbounds i8, i8* %686, i64 5
  %731 = load i8, i8* %720, align 1, !tbaa !4
  %732 = zext i8 %731 to i64
  %733 = and i64 %728, 255
  %734 = xor i64 %733, %732
  %735 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %734
  %736 = load i32, i32* %735, align 4, !tbaa !16
  %737 = zext i32 %736 to i64
  %738 = xor i64 %729, %737
  %739 = lshr i64 %738, 8
  %740 = getelementptr inbounds i8, i8* %686, i64 6
  %741 = load i8, i8* %730, align 1, !tbaa !4
  %742 = zext i8 %741 to i64
  %743 = and i64 %738, 255
  %744 = xor i64 %743, %742
  %745 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %744
  %746 = load i32, i32* %745, align 4, !tbaa !16
  %747 = zext i32 %746 to i64
  %748 = xor i64 %739, %747
  %749 = lshr i64 %748, 8
  %750 = getelementptr inbounds i8, i8* %686, i64 7
  %751 = load i8, i8* %740, align 1, !tbaa !4
  %752 = zext i8 %751 to i64
  %753 = and i64 %748, 255
  %754 = xor i64 %753, %752
  %755 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %754
  %756 = load i32, i32* %755, align 4, !tbaa !16
  %757 = zext i32 %756 to i64
  %758 = xor i64 %749, %757
  %759 = lshr i64 %758, 8
  %760 = getelementptr inbounds i8, i8* %686, i64 8
  %761 = load i8, i8* %750, align 1, !tbaa !4
  %762 = zext i8 %761 to i64
  %763 = and i64 %758, 255
  %764 = xor i64 %763, %762
  %765 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %764
  %766 = load i32, i32* %765, align 4, !tbaa !16
  %767 = zext i32 %766 to i64
  %768 = xor i64 %759, %767
  %769 = icmp ugt i64 %688, 7
  br i1 %769, label %684, label %658, !llvm.loop !22

770:                                              ; preds = %678, %770
  %771 = phi i64 [ %794, %770 ], [ %680, %678 ]
  %772 = phi i8* [ %786, %770 ], [ %681, %678 ]
  %773 = phi i64 [ %784, %770 ], [ %682, %678 ]
  %774 = lshr i64 %771, 8
  %775 = getelementptr inbounds i8, i8* %772, i64 1
  %776 = load i8, i8* %772, align 1, !tbaa !4
  %777 = zext i8 %776 to i64
  %778 = and i64 %771, 255
  %779 = xor i64 %778, %777
  %780 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %779
  %781 = load i32, i32* %780, align 4, !tbaa !16
  %782 = zext i32 %781 to i64
  %783 = xor i64 %774, %782
  %784 = add i64 %773, -2
  %785 = lshr i64 %783, 8
  %786 = getelementptr inbounds i8, i8* %772, i64 2
  %787 = load i8, i8* %775, align 1, !tbaa !4
  %788 = zext i8 %787 to i64
  %789 = and i64 %783, 255
  %790 = xor i64 %789, %788
  %791 = getelementptr inbounds [256 x i32], [256 x i32]* @crc_table, i64 0, i64 %790
  %792 = load i32, i32* %791, align 4, !tbaa !16
  %793 = zext i32 %792 to i64
  %794 = xor i64 %785, %793
  %795 = icmp eq i64 %784, 0
  br i1 %795, label %796, label %770, !llvm.loop !23

796:                                              ; preds = %678, %770, %658
  %797 = phi i64 [ %661, %658 ], [ %679, %678 ], [ %794, %770 ]
  %798 = xor i64 %797, 4294967295
  br label %799

799:                                              ; preds = %3, %796
  %800 = phi i64 [ %798, %796 ], [ 0, %3 ]
  ret i64 %800
}

; Function Attrs: nofree norecurse nosync nounwind readonly uwtable
define i64 @crc32(i64 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = zext i32 %2 to i64
  %5 = tail call i64 @crc32_z(i64 noundef %0, i8* noundef %1, i64 noundef %4)
  ret i64 %5
}

; Function Attrs: nofree norecurse nosync nounwind readnone uwtable
define i64 @crc32_combine64(i64 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %3, %35
  %6 = phi i32 [ %36, %35 ], [ -2147483648, %3 ]
  %7 = phi i32 [ %38, %35 ], [ 3, %3 ]
  %8 = phi i64 [ %37, %35 ], [ %2, %3 ]
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %5
  %12 = and i32 %7, 31
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [32 x i32], [32 x i32]* @x2n_table, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4, !tbaa !16
  br label %16

16:                                               ; preds = %27, %11
  %17 = phi i32 [ %6, %11 ], [ %34, %27 ]
  %18 = phi i32 [ -2147483648, %11 ], [ %29, %27 ]
  %19 = phi i32 [ 0, %11 ], [ %28, %27 ]
  %20 = and i32 %18, %15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = xor i32 %19, %17
  %24 = add i32 %18, -1
  %25 = and i32 %24, %15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22, %16
  %28 = phi i32 [ %23, %22 ], [ %19, %16 ]
  %29 = lshr i32 %18, 1
  %30 = and i32 %17, 1
  %31 = icmp eq i32 %30, 0
  %32 = lshr i32 %17, 1
  %33 = xor i32 %32, -306674912
  %34 = select i1 %31, i32 %32, i32 %33
  br label %16

35:                                               ; preds = %22, %5
  %36 = phi i32 [ %6, %5 ], [ %23, %22 ]
  %37 = ashr i64 %8, 1
  %38 = add i32 %7, 1
  %39 = icmp ult i64 %8, 2
  br i1 %39, label %40, label %5, !llvm.loop !24

40:                                               ; preds = %35, %3
  %41 = phi i32 [ -2147483648, %3 ], [ %36, %35 ]
  %42 = trunc i64 %0 to i32
  br label %43

43:                                               ; preds = %54, %40
  %44 = phi i32 [ %42, %40 ], [ %61, %54 ]
  %45 = phi i32 [ -2147483648, %40 ], [ %56, %54 ]
  %46 = phi i32 [ 0, %40 ], [ %55, %54 ]
  %47 = and i32 %45, %41
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = xor i32 %46, %44
  %51 = add i32 %45, -1
  %52 = and i32 %51, %41
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49, %43
  %55 = phi i32 [ %50, %49 ], [ %46, %43 ]
  %56 = lshr i32 %45, 1
  %57 = and i32 %44, 1
  %58 = icmp eq i32 %57, 0
  %59 = lshr i32 %44, 1
  %60 = xor i32 %59, -306674912
  %61 = select i1 %58, i32 %59, i32 %60
  br label %43

62:                                               ; preds = %49
  %63 = zext i32 %50 to i64
  %64 = and i64 %1, 4294967295
  %65 = xor i64 %64, %63
  ret i64 %65
}

; Function Attrs: nofree norecurse nosync nounwind readnone uwtable
define i64 @crc32_combine(i64 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %3, %35
  %6 = phi i32 [ %36, %35 ], [ -2147483648, %3 ]
  %7 = phi i32 [ %38, %35 ], [ 3, %3 ]
  %8 = phi i64 [ %37, %35 ], [ %2, %3 ]
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %5
  %12 = and i32 %7, 31
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [32 x i32], [32 x i32]* @x2n_table, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4, !tbaa !16
  br label %16

16:                                               ; preds = %27, %11
  %17 = phi i32 [ %6, %11 ], [ %34, %27 ]
  %18 = phi i32 [ -2147483648, %11 ], [ %29, %27 ]
  %19 = phi i32 [ 0, %11 ], [ %28, %27 ]
  %20 = and i32 %18, %15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = xor i32 %19, %17
  %24 = add i32 %18, -1
  %25 = and i32 %24, %15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22, %16
  %28 = phi i32 [ %23, %22 ], [ %19, %16 ]
  %29 = lshr i32 %18, 1
  %30 = and i32 %17, 1
  %31 = icmp eq i32 %30, 0
  %32 = lshr i32 %17, 1
  %33 = xor i32 %32, -306674912
  %34 = select i1 %31, i32 %32, i32 %33
  br label %16

35:                                               ; preds = %22, %5
  %36 = phi i32 [ %6, %5 ], [ %23, %22 ]
  %37 = ashr i64 %8, 1
  %38 = add i32 %7, 1
  %39 = icmp ult i64 %8, 2
  br i1 %39, label %40, label %5, !llvm.loop !24

40:                                               ; preds = %35, %3
  %41 = phi i32 [ -2147483648, %3 ], [ %36, %35 ]
  %42 = trunc i64 %0 to i32
  br label %43

43:                                               ; preds = %54, %40
  %44 = phi i32 [ %42, %40 ], [ %61, %54 ]
  %45 = phi i32 [ -2147483648, %40 ], [ %56, %54 ]
  %46 = phi i32 [ 0, %40 ], [ %55, %54 ]
  %47 = and i32 %45, %41
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = xor i32 %46, %44
  %51 = add i32 %45, -1
  %52 = and i32 %51, %41
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49, %43
  %55 = phi i32 [ %50, %49 ], [ %46, %43 ]
  %56 = lshr i32 %45, 1
  %57 = and i32 %44, 1
  %58 = icmp eq i32 %57, 0
  %59 = lshr i32 %44, 1
  %60 = xor i32 %59, -306674912
  %61 = select i1 %58, i32 %59, i32 %60
  br label %43

62:                                               ; preds = %49
  %63 = zext i32 %50 to i64
  %64 = and i64 %1, 4294967295
  %65 = xor i64 %64, %63
  ret i64 %65
}

; Function Attrs: nofree norecurse nosync nounwind readnone uwtable
define i64 @crc32_combine_gen64(i64 noundef %0) local_unnamed_addr #2 {
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %38, label %3

3:                                                ; preds = %1, %33
  %4 = phi i32 [ %34, %33 ], [ -2147483648, %1 ]
  %5 = phi i32 [ %36, %33 ], [ 3, %1 ]
  %6 = phi i64 [ %35, %33 ], [ %0, %1 ]
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %33, label %9

9:                                                ; preds = %3
  %10 = and i32 %5, 31
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [32 x i32], [32 x i32]* @x2n_table, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4, !tbaa !16
  br label %14

14:                                               ; preds = %25, %9
  %15 = phi i32 [ %4, %9 ], [ %32, %25 ]
  %16 = phi i32 [ -2147483648, %9 ], [ %27, %25 ]
  %17 = phi i32 [ 0, %9 ], [ %26, %25 ]
  %18 = and i32 %16, %13
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = xor i32 %17, %15
  %22 = add i32 %16, -1
  %23 = and i32 %22, %13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %20, %14
  %26 = phi i32 [ %21, %20 ], [ %17, %14 ]
  %27 = lshr i32 %16, 1
  %28 = and i32 %15, 1
  %29 = icmp eq i32 %28, 0
  %30 = lshr i32 %15, 1
  %31 = xor i32 %30, -306674912
  %32 = select i1 %29, i32 %30, i32 %31
  br label %14

33:                                               ; preds = %20, %3
  %34 = phi i32 [ %4, %3 ], [ %21, %20 ]
  %35 = ashr i64 %6, 1
  %36 = add i32 %5, 1
  %37 = icmp ult i64 %6, 2
  br i1 %37, label %38, label %3, !llvm.loop !24

38:                                               ; preds = %33, %1
  %39 = phi i32 [ -2147483648, %1 ], [ %34, %33 ]
  %40 = zext i32 %39 to i64
  ret i64 %40
}

; Function Attrs: nofree norecurse nosync nounwind readnone uwtable
define i64 @crc32_combine_gen(i64 noundef %0) local_unnamed_addr #2 {
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %38, label %3

3:                                                ; preds = %1, %33
  %4 = phi i32 [ %34, %33 ], [ -2147483648, %1 ]
  %5 = phi i32 [ %36, %33 ], [ 3, %1 ]
  %6 = phi i64 [ %35, %33 ], [ %0, %1 ]
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %33, label %9

9:                                                ; preds = %3
  %10 = and i32 %5, 31
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [32 x i32], [32 x i32]* @x2n_table, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4, !tbaa !16
  br label %14

14:                                               ; preds = %25, %9
  %15 = phi i32 [ %4, %9 ], [ %32, %25 ]
  %16 = phi i32 [ -2147483648, %9 ], [ %27, %25 ]
  %17 = phi i32 [ 0, %9 ], [ %26, %25 ]
  %18 = and i32 %16, %13
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = xor i32 %17, %15
  %22 = add i32 %16, -1
  %23 = and i32 %22, %13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %20, %14
  %26 = phi i32 [ %21, %20 ], [ %17, %14 ]
  %27 = lshr i32 %16, 1
  %28 = and i32 %15, 1
  %29 = icmp eq i32 %28, 0
  %30 = lshr i32 %15, 1
  %31 = xor i32 %30, -306674912
  %32 = select i1 %29, i32 %30, i32 %31
  br label %14

33:                                               ; preds = %20, %3
  %34 = phi i32 [ %4, %3 ], [ %21, %20 ]
  %35 = ashr i64 %6, 1
  %36 = add i32 %5, 1
  %37 = icmp ult i64 %6, 2
  br i1 %37, label %38, label %3, !llvm.loop !24

38:                                               ; preds = %33, %1
  %39 = phi i32 [ -2147483648, %1 ], [ %34, %33 ]
  %40 = zext i32 %39 to i64
  ret i64 %40
}

; Function Attrs: nofree norecurse nosync nounwind readnone uwtable
define i64 @crc32_combine_op(i64 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #2 {
  %4 = trunc i64 %2 to i32
  %5 = trunc i64 %0 to i32
  br label %6

6:                                                ; preds = %17, %3
  %7 = phi i32 [ %5, %3 ], [ %24, %17 ]
  %8 = phi i32 [ -2147483648, %3 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %3 ], [ %18, %17 ]
  %10 = and i32 %8, %4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = xor i32 %9, %7
  %14 = add i32 %8, -1
  %15 = and i32 %14, %4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %12, %6
  %18 = phi i32 [ %13, %12 ], [ %9, %6 ]
  %19 = lshr i32 %8, 1
  %20 = and i32 %7, 1
  %21 = icmp eq i32 %20, 0
  %22 = lshr i32 %7, 1
  %23 = xor i32 %22, -306674912
  %24 = select i1 %21, i32 %22, i32 %23
  br label %6

25:                                               ; preds = %12
  %26 = zext i32 %13 to i64
  %27 = and i64 %1, 4294967295
  %28 = xor i64 %27, %26
  ret i64 %28
}

; Function Attrs: nounwind uwtable
define i32 @deflateInit_(%struct.z_stream_s* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #3 {
  %5 = tail call i32 @deflateInit2_(%struct.z_stream_s* noundef %0, i32 noundef %1, i32 noundef 8, i32 noundef 15, i32 noundef 8, i32 noundef 0, i8* noundef %2, i32 noundef %3)
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define i32 @deflateInit2_(%struct.z_stream_s* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i8* noundef readonly %6, i32 noundef %7) local_unnamed_addr #3 {
  %9 = icmp eq i8* %6, null
  br i1 %9, label %162, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %6, align 1, !tbaa !4
  %12 = icmp ne i8 %11, 49
  %13 = icmp ne i32 %7, 112
  %14 = or i1 %13, %12
  br i1 %14, label %162, label %15

15:                                               ; preds = %10
  %16 = icmp eq %struct.z_stream_s* %0, null
  br i1 %16, label %162, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* null, i8** %18, align 8, !tbaa !25
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %20 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %21 = icmp eq i8* (i8*, i32, i32)* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  store i8* null, i8** %23, align 8, !tbaa !29
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* (i8*, i32, i32)* [ @zcalloc, %22 ], [ %20, %17 ]
  %26 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %27 = load void (i8*, i8*)*, void (i8*, i8*)** %26, align 8, !tbaa !30
  %28 = icmp eq void (i8*, i8*)* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %26, align 8, !tbaa !30
  br label %30

30:                                               ; preds = %29, %24
  %31 = icmp eq i32 %1, -1
  %32 = select i1 %31, i32 6, i32 %1
  %33 = icmp slt i32 %3, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = icmp ult i32 %3, -15
  br i1 %35, label %162, label %36

36:                                               ; preds = %34
  %37 = sub nsw i32 0, %3
  br label %42

38:                                               ; preds = %30
  %39 = icmp ugt i32 %3, 15
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = add nsw i32 %3, -16
  br label %42

42:                                               ; preds = %38, %40, %36
  %43 = phi i32 [ %37, %36 ], [ %41, %40 ], [ %3, %38 ]
  %44 = phi i1 [ true, %36 ], [ true, %40 ], [ false, %38 ]
  %45 = phi i32 [ 0, %36 ], [ 2, %40 ], [ 1, %38 ]
  %46 = add i32 %4, -10
  %47 = icmp ult i32 %46, -9
  %48 = icmp ne i32 %2, 8
  %49 = or i1 %48, %47
  %50 = icmp ult i32 %43, 8
  %51 = select i1 %49, i1 true, i1 %50
  %52 = icmp ugt i32 %43, 15
  %53 = select i1 %51, i1 true, i1 %52
  %54 = icmp ugt i32 %32, 9
  %55 = or i1 %54, %53
  %56 = icmp ugt i32 %5, 4
  %57 = or i1 %56, %55
  br i1 %57, label %162, label %58

58:                                               ; preds = %42
  %59 = icmp eq i32 %43, 8
  %60 = and i1 %59, %44
  br i1 %60, label %162, label %61

61:                                               ; preds = %58
  %62 = select i1 %59, i32 9, i32 %43
  %63 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %64 = load i8*, i8** %63, align 8, !tbaa !29
  %65 = tail call i8* %25(i8* noundef %64, i32 noundef 1, i32 noundef 5952) #25
  %66 = icmp eq i8* %65, null
  br i1 %66, label %162, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %69 = bitcast %struct.internal_state** %68 to i8**
  store i8* %65, i8** %69, align 8, !tbaa !31
  %70 = bitcast i8* %65 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %70, align 8, !tbaa !32
  %71 = getelementptr inbounds i8, i8* %65, i64 8
  %72 = bitcast i8* %71 to i32*
  store i32 42, i32* %72, align 8, !tbaa !36
  %73 = getelementptr inbounds i8, i8* %65, i64 48
  %74 = bitcast i8* %73 to i32*
  store i32 %45, i32* %74, align 8, !tbaa !37
  %75 = getelementptr inbounds i8, i8* %65, i64 56
  %76 = bitcast i8* %75 to %struct.gz_header_s**
  store %struct.gz_header_s* null, %struct.gz_header_s** %76, align 8, !tbaa !38
  %77 = getelementptr inbounds i8, i8* %65, i64 84
  %78 = bitcast i8* %77 to i32*
  store i32 %62, i32* %78, align 4, !tbaa !39
  %79 = shl nuw nsw i32 1, %62
  %80 = getelementptr inbounds i8, i8* %65, i64 80
  %81 = bitcast i8* %80 to i32*
  store i32 %79, i32* %81, align 8, !tbaa !40
  %82 = add nsw i32 %79, -1
  %83 = getelementptr inbounds i8, i8* %65, i64 88
  %84 = bitcast i8* %83 to i32*
  store i32 %82, i32* %84, align 8, !tbaa !41
  %85 = add nuw nsw i32 %4, 7
  %86 = getelementptr inbounds i8, i8* %65, i64 136
  %87 = bitcast i8* %86 to i32*
  store i32 %85, i32* %87, align 8, !tbaa !42
  %88 = shl nuw nsw i32 1, %85
  %89 = getelementptr inbounds i8, i8* %65, i64 132
  %90 = bitcast i8* %89 to i32*
  store i32 %88, i32* %90, align 4, !tbaa !43
  %91 = add nsw i32 %88, -1
  %92 = getelementptr inbounds i8, i8* %65, i64 140
  %93 = bitcast i8* %92 to i32*
  store i32 %91, i32* %93, align 4, !tbaa !44
  %94 = trunc i32 %4 to i8
  %95 = add nuw nsw i8 %94, 9
  %96 = udiv i8 %95, 3
  %97 = zext i8 %96 to i32
  %98 = getelementptr inbounds i8, i8* %65, i64 144
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 8, !tbaa !45
  %100 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %101 = load i8*, i8** %63, align 8, !tbaa !29
  %102 = tail call i8* %100(i8* noundef %101, i32 noundef %79, i32 noundef 2) #25
  %103 = getelementptr inbounds i8, i8* %65, i64 96
  %104 = bitcast i8* %103 to i8**
  store i8* %102, i8** %104, align 8, !tbaa !46
  %105 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %106 = load i8*, i8** %63, align 8, !tbaa !29
  %107 = load i32, i32* %81, align 8, !tbaa !40
  %108 = tail call i8* %105(i8* noundef %106, i32 noundef %107, i32 noundef 2) #25
  %109 = getelementptr inbounds i8, i8* %65, i64 112
  %110 = bitcast i8* %109 to i8**
  store i8* %108, i8** %110, align 8, !tbaa !47
  %111 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %112 = load i8*, i8** %63, align 8, !tbaa !29
  %113 = load i32, i32* %90, align 4, !tbaa !43
  %114 = tail call i8* %111(i8* noundef %112, i32 noundef %113, i32 noundef 2) #25
  %115 = getelementptr inbounds i8, i8* %65, i64 120
  %116 = bitcast i8* %115 to i16**
  %117 = bitcast i8* %115 to i8**
  store i8* %114, i8** %117, align 8, !tbaa !48
  %118 = getelementptr inbounds i8, i8* %65, i64 5944
  %119 = bitcast i8* %118 to i64*
  store i64 0, i64* %119, align 8, !tbaa !49
  %120 = add nuw nsw i32 %4, 6
  %121 = shl nuw nsw i32 1, %120
  %122 = getelementptr inbounds i8, i8* %65, i64 5896
  %123 = bitcast i8* %122 to i32*
  store i32 %121, i32* %123, align 8, !tbaa !50
  %124 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %125 = load i8*, i8** %63, align 8, !tbaa !29
  %126 = tail call i8* %124(i8* noundef %125, i32 noundef %121, i32 noundef 4) #25
  %127 = getelementptr inbounds i8, i8* %65, i64 16
  %128 = bitcast i8* %127 to i8**
  store i8* %126, i8** %128, align 8, !tbaa !51
  %129 = load i32, i32* %123, align 8, !tbaa !50
  %130 = zext i32 %129 to i64
  %131 = shl nuw nsw i64 %130, 2
  %132 = getelementptr inbounds i8, i8* %65, i64 24
  %133 = bitcast i8* %132 to i64*
  store i64 %131, i64* %133, align 8, !tbaa !52
  %134 = load i8*, i8** %104, align 8, !tbaa !46
  %135 = icmp eq i8* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %67
  %137 = bitcast i8* %109 to i16**
  %138 = load i16*, i16** %137, align 8, !tbaa !47
  %139 = icmp eq i16* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = load i16*, i16** %116, align 8, !tbaa !48
  %142 = icmp eq i16* %141, null
  %143 = icmp eq i8* %126, null
  %144 = select i1 %142, i1 true, i1 %143
  br i1 %144, label %145, label %148

145:                                              ; preds = %140, %136, %67
  store i32 666, i32* %72, align 8, !tbaa !36
  %146 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @z_errmsg, i64 0, i64 6), align 16, !tbaa !53
  store i8* %146, i8** %18, align 8, !tbaa !25
  %147 = tail call i32 @deflateEnd(%struct.z_stream_s* noundef nonnull %0)
  br label %162

148:                                              ; preds = %140
  %149 = getelementptr inbounds i8, i8* %126, i64 %130
  %150 = getelementptr inbounds i8, i8* %65, i64 5888
  %151 = bitcast i8* %150 to i8**
  store i8* %149, i8** %151, align 8, !tbaa !54
  %152 = mul i32 %129, 3
  %153 = add i32 %152, -3
  %154 = getelementptr inbounds i8, i8* %65, i64 5904
  %155 = bitcast i8* %154 to i32*
  store i32 %153, i32* %155, align 8, !tbaa !55
  %156 = getelementptr inbounds i8, i8* %65, i64 196
  %157 = bitcast i8* %156 to i32*
  store i32 %32, i32* %157, align 4, !tbaa !56
  %158 = getelementptr inbounds i8, i8* %65, i64 200
  %159 = bitcast i8* %158 to i32*
  store i32 %5, i32* %159, align 8, !tbaa !57
  %160 = getelementptr inbounds i8, i8* %65, i64 72
  store i8 8, i8* %160, align 8, !tbaa !58
  %161 = tail call i32 @deflateReset(%struct.z_stream_s* noundef nonnull %0)
  br label %162

162:                                              ; preds = %61, %42, %58, %34, %15, %8, %10, %148, %145
  %163 = phi i32 [ -4, %145 ], [ %161, %148 ], [ -6, %10 ], [ -6, %8 ], [ -2, %15 ], [ -2, %34 ], [ -2, %58 ], [ -2, %42 ], [ -4, %61 ]
  ret i32 %163
}

; Function Attrs: nounwind uwtable
define i32 @deflateEnd(%struct.z_stream_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %72, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %72, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = load %struct.internal_state*, %struct.internal_state** %12, align 8, !tbaa !31
  %14 = icmp eq %struct.internal_state* %13, null
  br i1 %14, label %72, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 0
  %17 = load %struct.z_stream_s*, %struct.z_stream_s** %16, align 8, !tbaa !32
  %18 = icmp eq %struct.z_stream_s* %17, %0
  br i1 %18, label %19, label %72

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 8, !tbaa !36
  switch i32 %21, label %72 [
    i32 42, label %22
    i32 57, label %22
    i32 69, label %22
    i32 73, label %22
    i32 91, label %22
    i32 103, label %22
    i32 113, label %22
    i32 666, label %22
  ]

22:                                               ; preds = %19, %19, %19, %19, %19, %19, %19, %19
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8, !tbaa !51
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %28 = load i8*, i8** %27, align 8, !tbaa !29
  tail call void %9(i8* noundef %28, i8* noundef nonnull %24) #25
  %29 = load %struct.internal_state*, %struct.internal_state** %12, align 8, !tbaa !31
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi %struct.internal_state* [ %29, %26 ], [ %13, %22 ]
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %31, i64 0, i32 17
  %33 = load i16*, i16** %32, align 8, !tbaa !48
  %34 = icmp eq i16* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %37 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %38 = load i8*, i8** %37, align 8, !tbaa !29
  %39 = bitcast i16* %33 to i8*
  tail call void %36(i8* noundef %38, i8* noundef nonnull %39) #25
  %40 = load %struct.internal_state*, %struct.internal_state** %12, align 8, !tbaa !31
  br label %41

41:                                               ; preds = %35, %30
  %42 = phi %struct.internal_state* [ %40, %35 ], [ %31, %30 ]
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %42, i64 0, i32 16
  %44 = load i16*, i16** %43, align 8, !tbaa !47
  %45 = icmp eq i16* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %48 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %49 = load i8*, i8** %48, align 8, !tbaa !29
  %50 = bitcast i16* %44 to i8*
  tail call void %47(i8* noundef %49, i8* noundef nonnull %50) #25
  %51 = load %struct.internal_state*, %struct.internal_state** %12, align 8, !tbaa !31
  br label %52

52:                                               ; preds = %46, %41
  %53 = phi %struct.internal_state* [ %51, %46 ], [ %42, %41 ]
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %53, i64 0, i32 14
  %55 = load i8*, i8** %54, align 8, !tbaa !46
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = bitcast %struct.internal_state* %53 to i8*
  br label %65

59:                                               ; preds = %52
  %60 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %61 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %62 = load i8*, i8** %61, align 8, !tbaa !29
  tail call void %60(i8* noundef %62, i8* noundef nonnull %55) #25
  %63 = bitcast %struct.internal_state** %12 to i8**
  %64 = load i8*, i8** %63, align 8, !tbaa !31
  br label %65

65:                                               ; preds = %57, %59
  %66 = phi i8* [ %64, %59 ], [ %58, %57 ]
  %67 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %68 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %69 = load i8*, i8** %68, align 8, !tbaa !29
  tail call void %67(i8* noundef %69, i8* noundef %66) #25
  store %struct.internal_state* null, %struct.internal_state** %12, align 8, !tbaa !31
  %70 = icmp eq i32 %21, 113
  %71 = select i1 %70, i32 -3, i32 0
  br label %72

72:                                               ; preds = %11, %15, %19, %1, %3, %7, %65
  %73 = phi i32 [ %71, %65 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %19 ], [ -2, %15 ], [ -2, %11 ]
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define i32 @deflateReset(%struct.z_stream_s* noundef %0) local_unnamed_addr #3 {
  %2 = tail call i32 @deflateResetKeep(%struct.z_stream_s* noundef %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %48

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %6 = load %struct.internal_state*, %struct.internal_state** %5, align 8, !tbaa !31
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8, !tbaa !40
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 1
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 15
  store i64 %10, i64* %11, align 8, !tbaa !59
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 17
  %13 = load i16*, i16** %12, align 8, !tbaa !48
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 19
  %15 = load i32, i32* %14, align 4, !tbaa !43
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i16, i16* %13, i64 %17
  store i16 0, i16* %18, align 2, !tbaa !60
  %19 = bitcast i16* %13 to i8*
  %20 = shl nuw nsw i64 %17, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 %20, i1 false) #25
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 33
  %22 = load i32, i32* %21, align 4, !tbaa !56
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %23, i32 1
  %25 = load i16, i16* %24, align 2, !tbaa !61
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 32
  store i32 %26, i32* %27, align 8, !tbaa !63
  %28 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %23, i32 0
  %29 = load i16, i16* %28, align 16, !tbaa !64
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 35
  store i32 %30, i32* %31, align 4, !tbaa !65
  %32 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %23, i32 2
  %33 = load i16, i16* %32, align 4, !tbaa !66
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 36
  store i32 %34, i32* %35, align 8, !tbaa !67
  %36 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %23, i32 3
  %37 = load i16, i16* %36, align 2, !tbaa !68
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 31
  store i32 %38, i32* %39, align 4, !tbaa !69
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 27
  store i32 0, i32* %40, align 4, !tbaa !70
  %41 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 23
  store i64 0, i64* %41, align 8, !tbaa !71
  %42 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 29
  store i32 0, i32* %42, align 4, !tbaa !72
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 55
  store i32 0, i32* %43, align 4, !tbaa !73
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 30
  store i32 2, i32* %44, align 8, !tbaa !74
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 24
  store i32 2, i32* %45, align 8, !tbaa !75
  %46 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 26
  store i32 0, i32* %46, align 8, !tbaa !76
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 18
  store i32 0, i32* %47, align 8, !tbaa !77
  br label %48

48:                                               ; preds = %4, %1
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define i32 @deflateResetKeep(%struct.z_stream_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %48, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %48, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %48, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = load %struct.internal_state*, %struct.internal_state** %12, align 8, !tbaa !31
  %14 = icmp eq %struct.internal_state* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 0
  %17 = load %struct.z_stream_s*, %struct.z_stream_s** %16, align 8, !tbaa !32
  %18 = icmp eq %struct.z_stream_s* %17, %0
  br i1 %18, label %19, label %48

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 8, !tbaa !36
  switch i32 %21, label %48 [
    i32 42, label %22
    i32 57, label %22
    i32 69, label %22
    i32 73, label %22
    i32 91, label %22
    i32 103, label %22
    i32 113, label %22
    i32 666, label %22
  ]

22:                                               ; preds = %19, %19, %19, %19, %19, %19, %19, %19
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  store i64 0, i64* %24, align 8, !tbaa !78
  %25 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 11
  %26 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %26, i8 0, i64 16, i1 false)
  store i32 2, i32* %25, align 8, !tbaa !79
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 5
  store i64 0, i64* %27, align 8, !tbaa !80
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8, !tbaa !51
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 4
  store i8* %29, i8** %30, align 8, !tbaa !81
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 6
  %32 = load i32, i32* %31, align 8, !tbaa !37
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %22
  %35 = sub nsw i32 0, %32
  store i32 %35, i32* %31, align 8, !tbaa !37
  br label %36

36:                                               ; preds = %34, %22
  %37 = phi i32 [ %35, %34 ], [ %32, %22 ]
  %38 = icmp eq i32 %37, 2
  %39 = select i1 %38, i32 57, i32 42
  store i32 %39, i32* %20, align 8, !tbaa !36
  br i1 %38, label %40, label %42

40:                                               ; preds = %36
  %41 = tail call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  br label %44

42:                                               ; preds = %36
  %43 = tail call i64 @adler32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %41, %40 ], [ %43, %42 ]
  %46 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %45, i64* %46, align 8, !tbaa !82
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 10
  store i32 -2, i32* %47, align 4, !tbaa !83
  tail call void @_tr_init(%struct.internal_state* noundef nonnull %13) #25
  br label %48

48:                                               ; preds = %11, %15, %19, %1, %3, %7, %44
  %49 = phi i32 [ 0, %44 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %19 ], [ -2, %15 ], [ -2, %11 ]
  ret i32 %49
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal i32 @deflate_stored(%struct.internal_state* noundef %0, i32 noundef %1) #3 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8, !tbaa !52
  %5 = add i64 %4, -5
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 8, !tbaa !40
  %8 = zext i32 %7 to i64
  %9 = icmp ugt i64 %5, %8
  %10 = select i1 %9, i64 %8, i64 %5
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %13 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8, !tbaa !84
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %19 = icmp ne i32 %1, 4
  %20 = icmp eq i32 %1, 0
  %21 = icmp eq i32 %1, 4
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  br label %25

25:                                               ; preds = %191, %2
  %26 = phi %struct.z_stream_s* [ %13, %2 ], [ %192, %191 ]
  %27 = load i32, i32* %16, align 4, !tbaa !85
  %28 = add nsw i32 %27, 42
  %29 = ashr i32 %28, 3
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %26, i64 0, i32 4
  %31 = load i32, i32* %30, align 8, !tbaa !86
  %32 = icmp ult i32 %31, %29
  br i1 %32, label %193, label %33

33:                                               ; preds = %25
  %34 = sub i32 %31, %29
  %35 = load i32, i32* %17, align 4, !tbaa !70
  %36 = load i64, i64* %18, align 8, !tbaa !71
  %37 = trunc i64 %36 to i32
  %38 = sub i32 %35, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %26, i64 0, i32 1
  %41 = load i32, i32* %40, align 8, !tbaa !84
  %42 = zext i32 %41 to i64
  %43 = add nuw nsw i64 %39, %42
  %44 = icmp ult i64 %43, 65535
  %45 = add i32 %38, %41
  %46 = select i1 %44, i32 %45, i32 65535
  %47 = icmp ugt i32 %46, %34
  %48 = select i1 %47, i32 %34, i32 %46
  %49 = icmp ult i32 %48, %11
  br i1 %49, label %50, label %57

50:                                               ; preds = %33
  %51 = icmp eq i32 %48, 0
  %52 = and i1 %19, %51
  %53 = or i1 %20, %52
  %54 = xor i1 %53, true
  %55 = icmp eq i32 %48, %45
  %56 = select i1 %54, i1 %55, i1 false
  br i1 %56, label %57, label %193

57:                                               ; preds = %50, %33
  %58 = icmp eq i32 %48, %45
  %59 = select i1 %21, i1 %58, i1 false
  %60 = zext i1 %59 to i32
  tail call void @_tr_stored_block(%struct.internal_state* noundef nonnull %0, i8* noundef null, i64 noundef 0, i32 noundef %60) #25
  %61 = trunc i32 %48 to i8
  %62 = load i8*, i8** %22, align 8, !tbaa !51
  %63 = load i64, i64* %23, align 8, !tbaa !80
  %64 = add i64 %63, -4
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  store i8 %61, i8* %65, align 1, !tbaa !4
  %66 = lshr i32 %48, 8
  %67 = trunc i32 %66 to i8
  %68 = load i8*, i8** %22, align 8, !tbaa !51
  %69 = load i64, i64* %23, align 8, !tbaa !80
  %70 = add i64 %69, -3
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8 %67, i8* %71, align 1, !tbaa !4
  %72 = xor i32 %48, -1
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %22, align 8, !tbaa !51
  %75 = load i64, i64* %23, align 8, !tbaa !80
  %76 = add i64 %75, -2
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  store i8 %73, i8* %77, align 1, !tbaa !4
  %78 = lshr i32 %72, 8
  %79 = trunc i32 %78 to i8
  %80 = load i8*, i8** %22, align 8, !tbaa !51
  %81 = load i64, i64* %23, align 8, !tbaa !80
  %82 = add i64 %81, -1
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  store i8 %79, i8* %83, align 1, !tbaa !4
  %84 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %85 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 7
  %86 = load %struct.internal_state*, %struct.internal_state** %85, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %86) #25
  %87 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %86, i64 0, i32 5
  %88 = load i64, i64* %87, align 8, !tbaa !80
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 4
  %91 = load i32, i32* %90, align 8, !tbaa !86
  %92 = icmp ult i32 %91, %89
  %93 = select i1 %92, i32 %91, i32 %89
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %116, label %95

95:                                               ; preds = %57
  %96 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 3
  %97 = load i8*, i8** %96, align 8, !tbaa !87
  %98 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %86, i64 0, i32 4
  %99 = load i8*, i8** %98, align 8, !tbaa !81
  %100 = zext i32 %93 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %99, i64 %100, i1 false) #25
  %101 = load i8*, i8** %96, align 8, !tbaa !87
  %102 = getelementptr inbounds i8, i8* %101, i64 %100
  store i8* %102, i8** %96, align 8, !tbaa !87
  %103 = load i8*, i8** %98, align 8, !tbaa !81
  %104 = getelementptr inbounds i8, i8* %103, i64 %100
  store i8* %104, i8** %98, align 8, !tbaa !81
  %105 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 5
  %106 = load i64, i64* %105, align 8, !tbaa !88
  %107 = add i64 %106, %100
  store i64 %107, i64* %105, align 8, !tbaa !88
  %108 = load i32, i32* %90, align 8, !tbaa !86
  %109 = sub i32 %108, %93
  store i32 %109, i32* %90, align 8, !tbaa !86
  %110 = load i64, i64* %87, align 8, !tbaa !80
  %111 = sub i64 %110, %100
  store i64 %111, i64* %87, align 8, !tbaa !80
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %95
  %114 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %86, i64 0, i32 2
  %115 = load i8*, i8** %114, align 8, !tbaa !51
  store i8* %115, i8** %98, align 8, !tbaa !81
  br label %116

116:                                              ; preds = %57, %95, %113
  %117 = icmp eq i32 %38, 0
  br i1 %117, label %141, label %118

118:                                              ; preds = %116
  %119 = icmp ugt i32 %38, %48
  %120 = select i1 %119, i32 %48, i32 %38
  %121 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %122 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %121, i64 0, i32 3
  %123 = load i8*, i8** %122, align 8, !tbaa !87
  %124 = load i8*, i8** %24, align 8, !tbaa !46
  %125 = load i64, i64* %18, align 8, !tbaa !71
  %126 = getelementptr inbounds i8, i8* %124, i64 %125
  %127 = zext i32 %120 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 %126, i64 %127, i1 false)
  %128 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %129 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %128, i64 0, i32 3
  %130 = load i8*, i8** %129, align 8, !tbaa !87
  %131 = getelementptr inbounds i8, i8* %130, i64 %127
  store i8* %131, i8** %129, align 8, !tbaa !87
  %132 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %128, i64 0, i32 4
  %133 = load i32, i32* %132, align 8, !tbaa !86
  %134 = sub i32 %133, %120
  store i32 %134, i32* %132, align 8, !tbaa !86
  %135 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %128, i64 0, i32 5
  %136 = load i64, i64* %135, align 8, !tbaa !88
  %137 = add i64 %136, %127
  store i64 %137, i64* %135, align 8, !tbaa !88
  %138 = load i64, i64* %18, align 8, !tbaa !71
  %139 = add nsw i64 %138, %127
  store i64 %139, i64* %18, align 8, !tbaa !71
  %140 = sub i32 %48, %120
  br label %141

141:                                              ; preds = %118, %116
  %142 = phi i32 [ %140, %118 ], [ %48, %116 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %191, label %144

144:                                              ; preds = %141
  %145 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %146 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 3
  %147 = load i8*, i8** %146, align 8, !tbaa !87
  %148 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 1
  %149 = load i32, i32* %148, align 8, !tbaa !84
  %150 = icmp ugt i32 %149, %142
  %151 = select i1 %150, i32 %142, i32 %149
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %179, label %153

153:                                              ; preds = %144
  %154 = sub i32 %149, %151
  store i32 %154, i32* %148, align 8, !tbaa !84
  %155 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 0
  %156 = load i8*, i8** %155, align 8, !tbaa !89
  %157 = zext i32 %151 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 1 %156, i64 %157, i1 false) #25
  %158 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 7
  %159 = load %struct.internal_state*, %struct.internal_state** %158, align 8, !tbaa !31
  %160 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %159, i64 0, i32 6
  %161 = load i32, i32* %160, align 8, !tbaa !37
  switch i32 %161, label %170 [
    i32 1, label %162
    i32 2, label %166
  ]

162:                                              ; preds = %153
  %163 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 12
  %164 = load i64, i64* %163, align 8, !tbaa !82
  %165 = tail call i64 @adler32(i64 noundef %164, i8* noundef %147, i32 noundef %151) #25
  store i64 %165, i64* %163, align 8, !tbaa !82
  br label %170

166:                                              ; preds = %153
  %167 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 12
  %168 = load i64, i64* %167, align 8, !tbaa !82
  %169 = tail call i64 @crc32(i64 noundef %168, i8* noundef %147, i32 noundef %151) #25
  store i64 %169, i64* %167, align 8, !tbaa !82
  br label %170

170:                                              ; preds = %166, %162, %153
  %171 = load i8*, i8** %155, align 8, !tbaa !89
  %172 = getelementptr inbounds i8, i8* %171, i64 %157
  store i8* %172, i8** %155, align 8, !tbaa !89
  %173 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %145, i64 0, i32 2
  %174 = load i64, i64* %173, align 8, !tbaa !78
  %175 = add i64 %174, %157
  store i64 %175, i64* %173, align 8, !tbaa !78
  %176 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %177 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %176, i64 0, i32 3
  %178 = load i8*, i8** %177, align 8, !tbaa !87
  br label %179

179:                                              ; preds = %144, %170
  %180 = phi i8* [ %147, %144 ], [ %178, %170 ]
  %181 = phi %struct.z_stream_s* [ %145, %144 ], [ %176, %170 ]
  %182 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %181, i64 0, i32 3
  %183 = zext i32 %142 to i64
  %184 = getelementptr inbounds i8, i8* %180, i64 %183
  store i8* %184, i8** %182, align 8, !tbaa !87
  %185 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %181, i64 0, i32 4
  %186 = load i32, i32* %185, align 8, !tbaa !86
  %187 = sub i32 %186, %142
  store i32 %187, i32* %185, align 8, !tbaa !86
  %188 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %181, i64 0, i32 5
  %189 = load i64, i64* %188, align 8, !tbaa !88
  %190 = add i64 %189, %183
  store i64 %190, i64* %188, align 8, !tbaa !88
  br label %191

191:                                              ; preds = %141, %179
  %192 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  br i1 %59, label %193, label %25, !llvm.loop !90

193:                                              ; preds = %50, %25, %191
  %194 = phi %struct.z_stream_s* [ %192, %191 ], [ %26, %25 ], [ %26, %50 ]
  %195 = phi i1 [ false, %191 ], [ true, %25 ], [ true, %50 ]
  %196 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %194, i64 0, i32 1
  %197 = load i32, i32* %196, align 8, !tbaa !84
  %198 = sub i32 %15, %197
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %193
  %201 = load i32, i32* %17, align 4, !tbaa !70
  %202 = zext i32 %201 to i64
  br label %263

203:                                              ; preds = %193
  %204 = load i32, i32* %6, align 8, !tbaa !40
  %205 = icmp ult i32 %198, %204
  br i1 %205, label %216, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  store i32 2, i32* %207, align 8, !tbaa !91
  %208 = load i8*, i8** %24, align 8, !tbaa !46
  %209 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %194, i64 0, i32 0
  %210 = load i8*, i8** %209, align 8, !tbaa !89
  %211 = zext i32 %204 to i64
  %212 = sub nsw i64 0, %211
  %213 = getelementptr inbounds i8, i8* %210, i64 %212
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* align 1 %213, i64 %211, i1 false)
  %214 = load i32, i32* %6, align 8, !tbaa !40
  store i32 %214, i32* %17, align 4, !tbaa !70
  %215 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  store i32 %214, i32* %215, align 4, !tbaa !73
  br label %260

216:                                              ; preds = %203
  %217 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %218 = load i64, i64* %217, align 8, !tbaa !59
  %219 = load i32, i32* %17, align 4, !tbaa !70
  %220 = zext i32 %219 to i64
  %221 = sub i64 %218, %220
  %222 = zext i32 %198 to i64
  %223 = icmp ugt i64 %221, %222
  br i1 %223, label %241, label %224

224:                                              ; preds = %216
  %225 = sub i32 %219, %204
  store i32 %225, i32* %17, align 4, !tbaa !70
  %226 = load i8*, i8** %24, align 8, !tbaa !46
  %227 = zext i32 %204 to i64
  %228 = getelementptr inbounds i8, i8* %226, i64 %227
  %229 = zext i32 %225 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %226, i8* nonnull align 1 %228, i64 %229, i1 false)
  %230 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  %231 = load i32, i32* %230, align 8, !tbaa !91
  %232 = icmp ult i32 %231, 2
  br i1 %232, label %233, label %235

233:                                              ; preds = %224
  %234 = add nuw nsw i32 %231, 1
  store i32 %234, i32* %230, align 8, !tbaa !91
  br label %235

235:                                              ; preds = %233, %224
  %236 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %237 = load i32, i32* %236, align 4, !tbaa !73
  %238 = load i32, i32* %17, align 4, !tbaa !70
  %239 = icmp ugt i32 %237, %238
  br i1 %239, label %240, label %241

240:                                              ; preds = %235
  store i32 %238, i32* %236, align 4, !tbaa !73
  br label %241

241:                                              ; preds = %235, %240, %216
  %242 = phi i32 [ %238, %235 ], [ %238, %240 ], [ %219, %216 ]
  %243 = load i8*, i8** %24, align 8, !tbaa !46
  %244 = zext i32 %242 to i64
  %245 = getelementptr inbounds i8, i8* %243, i64 %244
  %246 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %247 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %246, i64 0, i32 0
  %248 = load i8*, i8** %247, align 8, !tbaa !89
  %249 = sub nsw i64 0, %222
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %245, i8* align 1 %250, i64 %222, i1 false)
  %251 = load i32, i32* %17, align 4, !tbaa !70
  %252 = add i32 %251, %198
  store i32 %252, i32* %17, align 4, !tbaa !70
  %253 = load i32, i32* %6, align 8, !tbaa !40
  %254 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %255 = load i32, i32* %254, align 4, !tbaa !73
  %256 = sub i32 %253, %255
  %257 = icmp ugt i32 %198, %256
  %258 = select i1 %257, i32 %256, i32 %198
  %259 = add i32 %258, %255
  store i32 %259, i32* %254, align 4, !tbaa !73
  br label %260

260:                                              ; preds = %241, %206
  %261 = phi i32 [ %252, %241 ], [ %214, %206 ]
  %262 = zext i32 %261 to i64
  store i64 %262, i64* %18, align 8, !tbaa !71
  br label %263

263:                                              ; preds = %200, %260
  %264 = phi i64 [ %202, %200 ], [ %262, %260 ]
  %265 = phi i32 [ %201, %200 ], [ %261, %260 ]
  %266 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %267 = load i64, i64* %266, align 8, !tbaa !49
  %268 = icmp ult i64 %267, %264
  br i1 %268, label %269, label %270

269:                                              ; preds = %263
  store i64 %264, i64* %266, align 8, !tbaa !49
  br label %270

270:                                              ; preds = %269, %263
  br i1 %195, label %271, label %448

271:                                              ; preds = %270
  %272 = icmp ne i32 %1, 0
  %273 = and i32 %1, -5
  %274 = icmp ne i32 %273, 0
  %275 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %276 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %275, i64 0, i32 1
  %277 = load i32, i32* %276, align 8, !tbaa !84
  %278 = icmp eq i32 %277, 0
  %279 = select i1 %274, i1 %278, i1 false
  br i1 %279, label %280, label %288

280:                                              ; preds = %271
  %281 = load i64, i64* %18, align 8, !tbaa !71
  %282 = icmp eq i64 %281, %264
  br i1 %282, label %448, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %285 = load i64, i64* %284, align 8, !tbaa !59
  %286 = trunc i64 %285 to i32
  %287 = sub i32 %286, %265
  br label %318

288:                                              ; preds = %271
  %289 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %290 = load i64, i64* %289, align 8, !tbaa !59
  %291 = trunc i64 %290 to i32
  %292 = sub i32 %291, %265
  %293 = icmp ugt i32 %277, %292
  br i1 %293, label %294, label %318

294:                                              ; preds = %288
  %295 = load i64, i64* %18, align 8, !tbaa !71
  %296 = load i32, i32* %6, align 8, !tbaa !40
  %297 = zext i32 %296 to i64
  %298 = icmp slt i64 %295, %297
  br i1 %298, label %318, label %299

299:                                              ; preds = %294
  %300 = sub nsw i64 %295, %297
  store i64 %300, i64* %18, align 8, !tbaa !71
  %301 = sub i32 %265, %296
  store i32 %301, i32* %17, align 4, !tbaa !70
  %302 = load i8*, i8** %24, align 8, !tbaa !46
  %303 = getelementptr inbounds i8, i8* %302, i64 %297
  %304 = zext i32 %301 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %302, i8* align 1 %303, i64 %304, i1 false)
  %305 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  %306 = load i32, i32* %305, align 8, !tbaa !91
  %307 = icmp ult i32 %306, 2
  br i1 %307, label %308, label %310

308:                                              ; preds = %299
  %309 = add nuw nsw i32 %306, 1
  store i32 %309, i32* %305, align 8, !tbaa !91
  br label %310

310:                                              ; preds = %308, %299
  %311 = load i32, i32* %6, align 8, !tbaa !40
  %312 = add i32 %311, %292
  %313 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %314 = load i32, i32* %313, align 4, !tbaa !73
  %315 = load i32, i32* %17, align 4, !tbaa !70
  %316 = icmp ugt i32 %314, %315
  br i1 %316, label %317, label %318

317:                                              ; preds = %310
  store i32 %315, i32* %313, align 4, !tbaa !73
  br label %318

318:                                              ; preds = %283, %310, %317, %294, %288
  %319 = phi i32 [ %315, %317 ], [ %315, %310 ], [ %265, %294 ], [ %265, %288 ], [ %265, %283 ]
  %320 = phi i32 [ %312, %317 ], [ %312, %310 ], [ %292, %294 ], [ %292, %288 ], [ %287, %283 ]
  %321 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %322 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %321, i64 0, i32 1
  %323 = load i32, i32* %322, align 8, !tbaa !84
  %324 = icmp ugt i32 %320, %323
  %325 = select i1 %324, i32 %323, i32 %320
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %362, label %327

327:                                              ; preds = %318
  %328 = load i8*, i8** %24, align 8, !tbaa !46
  %329 = zext i32 %319 to i64
  %330 = getelementptr inbounds i8, i8* %328, i64 %329
  %331 = sub i32 %323, %325
  store i32 %331, i32* %322, align 8, !tbaa !84
  %332 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %321, i64 0, i32 0
  %333 = load i8*, i8** %332, align 8, !tbaa !89
  %334 = zext i32 %325 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %330, i8* align 1 %333, i64 %334, i1 false) #25
  %335 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %321, i64 0, i32 7
  %336 = load %struct.internal_state*, %struct.internal_state** %335, align 8, !tbaa !31
  %337 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %336, i64 0, i32 6
  %338 = load i32, i32* %337, align 8, !tbaa !37
  switch i32 %338, label %347 [
    i32 1, label %339
    i32 2, label %343
  ]

339:                                              ; preds = %327
  %340 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %321, i64 0, i32 12
  %341 = load i64, i64* %340, align 8, !tbaa !82
  %342 = tail call i64 @adler32(i64 noundef %341, i8* noundef %330, i32 noundef %325) #25
  store i64 %342, i64* %340, align 8, !tbaa !82
  br label %347

343:                                              ; preds = %327
  %344 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %321, i64 0, i32 12
  %345 = load i64, i64* %344, align 8, !tbaa !82
  %346 = tail call i64 @crc32(i64 noundef %345, i8* noundef %330, i32 noundef %325) #25
  store i64 %346, i64* %344, align 8, !tbaa !82
  br label %347

347:                                              ; preds = %343, %339, %327
  %348 = load i8*, i8** %332, align 8, !tbaa !89
  %349 = getelementptr inbounds i8, i8* %348, i64 %334
  store i8* %349, i8** %332, align 8, !tbaa !89
  %350 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %321, i64 0, i32 2
  %351 = load i64, i64* %350, align 8, !tbaa !78
  %352 = add i64 %351, %334
  store i64 %352, i64* %350, align 8, !tbaa !78
  %353 = load i32, i32* %17, align 4, !tbaa !70
  %354 = add i32 %353, %325
  store i32 %354, i32* %17, align 4, !tbaa !70
  %355 = load i32, i32* %6, align 8, !tbaa !40
  %356 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %357 = load i32, i32* %356, align 4, !tbaa !73
  %358 = sub i32 %355, %357
  %359 = icmp ugt i32 %325, %358
  %360 = select i1 %359, i32 %358, i32 %325
  %361 = add i32 %360, %357
  store i32 %361, i32* %356, align 4, !tbaa !73
  br label %362

362:                                              ; preds = %347, %318
  %363 = phi i32 [ %354, %347 ], [ %319, %318 ]
  %364 = load i64, i64* %266, align 8, !tbaa !49
  %365 = zext i32 %363 to i64
  %366 = icmp ult i64 %364, %365
  br i1 %366, label %367, label %368

367:                                              ; preds = %362
  store i64 %365, i64* %266, align 8, !tbaa !49
  br label %368

368:                                              ; preds = %367, %362
  %369 = load i32, i32* %16, align 4, !tbaa !85
  %370 = add nsw i32 %369, 42
  %371 = ashr i32 %370, 3
  %372 = load i64, i64* %3, align 8, !tbaa !52
  %373 = zext i32 %371 to i64
  %374 = sub i64 %372, %373
  %375 = icmp ult i64 %374, 65535
  %376 = select i1 %375, i64 %374, i64 65535
  %377 = trunc i64 %376 to i32
  %378 = load i32, i32* %6, align 8, !tbaa !40
  %379 = icmp ult i32 %378, %377
  %380 = select i1 %379, i32 %378, i32 %377
  %381 = load i64, i64* %18, align 8, !tbaa !71
  %382 = trunc i64 %381 to i32
  %383 = sub i32 %363, %382
  %384 = icmp ult i32 %383, %380
  br i1 %384, label %385, label %396

385:                                              ; preds = %368
  %386 = icmp ne i32 %383, 0
  %387 = or i1 %21, %386
  %388 = and i1 %272, %387
  br i1 %388, label %389, label %448

389:                                              ; preds = %385
  %390 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %391 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %390, i64 0, i32 1
  %392 = load i32, i32* %391, align 8, !tbaa !84
  %393 = icmp ne i32 %392, 0
  %394 = icmp ugt i32 %383, %377
  %395 = select i1 %393, i1 true, i1 %394
  br i1 %395, label %448, label %396

396:                                              ; preds = %389, %368
  %397 = icmp ugt i32 %383, %377
  %398 = select i1 %397, i32 %377, i32 %383
  br i1 %21, label %399, label %406

399:                                              ; preds = %396
  %400 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %401 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %400, i64 0, i32 1
  %402 = load i32, i32* %401, align 8, !tbaa !84
  %403 = icmp eq i32 %402, 0
  %404 = icmp ule i32 %383, %377
  %405 = select i1 %403, i1 %404, i1 false
  br label %406

406:                                              ; preds = %399, %396
  %407 = phi i1 [ false, %396 ], [ %405, %399 ]
  %408 = zext i1 %407 to i32
  %409 = load i8*, i8** %24, align 8, !tbaa !46
  %410 = getelementptr inbounds i8, i8* %409, i64 %381
  %411 = zext i32 %398 to i64
  tail call void @_tr_stored_block(%struct.internal_state* noundef nonnull %0, i8* noundef %410, i64 noundef %411, i32 noundef %408) #25
  %412 = load i64, i64* %18, align 8, !tbaa !71
  %413 = add nsw i64 %412, %411
  store i64 %413, i64* %18, align 8, !tbaa !71
  %414 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %415 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %414, i64 0, i32 7
  %416 = load %struct.internal_state*, %struct.internal_state** %415, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %416) #25
  %417 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %416, i64 0, i32 5
  %418 = load i64, i64* %417, align 8, !tbaa !80
  %419 = trunc i64 %418 to i32
  %420 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %414, i64 0, i32 4
  %421 = load i32, i32* %420, align 8, !tbaa !86
  %422 = icmp ult i32 %421, %419
  %423 = select i1 %422, i32 %421, i32 %419
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %446, label %425

425:                                              ; preds = %406
  %426 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %414, i64 0, i32 3
  %427 = load i8*, i8** %426, align 8, !tbaa !87
  %428 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %416, i64 0, i32 4
  %429 = load i8*, i8** %428, align 8, !tbaa !81
  %430 = zext i32 %423 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %427, i8* align 1 %429, i64 %430, i1 false) #25
  %431 = load i8*, i8** %426, align 8, !tbaa !87
  %432 = getelementptr inbounds i8, i8* %431, i64 %430
  store i8* %432, i8** %426, align 8, !tbaa !87
  %433 = load i8*, i8** %428, align 8, !tbaa !81
  %434 = getelementptr inbounds i8, i8* %433, i64 %430
  store i8* %434, i8** %428, align 8, !tbaa !81
  %435 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %414, i64 0, i32 5
  %436 = load i64, i64* %435, align 8, !tbaa !88
  %437 = add i64 %436, %430
  store i64 %437, i64* %435, align 8, !tbaa !88
  %438 = load i32, i32* %420, align 8, !tbaa !86
  %439 = sub i32 %438, %423
  store i32 %439, i32* %420, align 8, !tbaa !86
  %440 = load i64, i64* %417, align 8, !tbaa !80
  %441 = sub i64 %440, %430
  store i64 %441, i64* %417, align 8, !tbaa !80
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %443, label %446

443:                                              ; preds = %425
  %444 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %416, i64 0, i32 2
  %445 = load i8*, i8** %444, align 8, !tbaa !51
  store i8* %445, i8** %428, align 8, !tbaa !81
  br label %446

446:                                              ; preds = %406, %425, %443
  %447 = select i1 %407, i32 2, i32 0
  br label %448

448:                                              ; preds = %389, %446, %385, %280, %270
  %449 = phi i32 [ 3, %270 ], [ 1, %280 ], [ %447, %446 ], [ 0, %389 ], [ 0, %385 ]
  ret i32 %449
}

; Function Attrs: nounwind uwtable
define internal i32 @deflate_fast(%struct.internal_state* noundef %0, i32 noundef %1) #3 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 21
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 13
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 11
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 32
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  br label %22

22:                                               ; preds = %178, %2
  %23 = load i32, i32* %3, align 4, !tbaa !72
  %24 = icmp ult i32 %23, 262
  br i1 %24, label %25, label %33

25:                                               ; preds = %22
  tail call fastcc void @fill_window(%struct.internal_state* noundef nonnull %0)
  %26 = load i32, i32* %3, align 4, !tbaa !72
  %27 = icmp ult i32 %26, 262
  %28 = and i1 %4, %27
  br i1 %28, label %373, label %29

29:                                               ; preds = %25
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %262, label %31

31:                                               ; preds = %29
  %32 = icmp ugt i32 %26, 2
  br i1 %32, label %33, label %66

33:                                               ; preds = %22, %31
  %34 = load i32, i32* %5, align 8, !tbaa !77
  %35 = load i32, i32* %6, align 8, !tbaa !45
  %36 = shl i32 %34, %35
  %37 = load i8*, i8** %7, align 8, !tbaa !46
  %38 = load i32, i32* %8, align 4, !tbaa !70
  %39 = add i32 %38, 2
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %37, i64 %40
  %42 = load i8, i8* %41, align 1, !tbaa !4
  %43 = zext i8 %42 to i32
  %44 = xor i32 %36, %43
  %45 = load i32, i32* %9, align 4, !tbaa !44
  %46 = and i32 %44, %45
  store i32 %46, i32* %5, align 8, !tbaa !77
  %47 = load i16*, i16** %10, align 8, !tbaa !48
  %48 = zext i32 %46 to i64
  %49 = getelementptr inbounds i16, i16* %47, i64 %48
  %50 = load i16, i16* %49, align 2, !tbaa !60
  %51 = load i16*, i16** %11, align 8, !tbaa !47
  %52 = load i32, i32* %12, align 8, !tbaa !41
  %53 = and i32 %52, %38
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %51, i64 %54
  store i16 %50, i16* %55, align 2, !tbaa !60
  %56 = zext i16 %50 to i32
  %57 = trunc i32 %38 to i16
  store i16 %57, i16* %49, align 2, !tbaa !60
  %58 = icmp eq i16 %50, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %33
  %60 = sub i32 %38, %56
  %61 = load i32, i32* %13, align 8, !tbaa !40
  %62 = add i32 %61, -262
  %63 = icmp ugt i32 %60, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = tail call fastcc i32 @longest_match(%struct.internal_state* noundef nonnull %0, i32 noundef %56)
  store i32 %65, i32* %14, align 8, !tbaa !75
  br label %68

66:                                               ; preds = %33, %59, %31
  %67 = load i32, i32* %14, align 8, !tbaa !75
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i32 [ %67, %66 ], [ %65, %64 ]
  %70 = icmp ugt i32 %69, 2
  br i1 %70, label %71, label %179

71:                                               ; preds = %68
  %72 = trunc i32 %69 to i8
  %73 = add i8 %72, -3
  %74 = load i32, i32* %8, align 4, !tbaa !70
  %75 = load i32, i32* %18, align 8, !tbaa !92
  %76 = sub i32 %74, %75
  %77 = trunc i32 %76 to i16
  %78 = trunc i32 %76 to i8
  %79 = load i8*, i8** %15, align 8, !tbaa !54
  %80 = load i32, i32* %16, align 4, !tbaa !93
  %81 = add i32 %80, 1
  store i32 %81, i32* %16, align 4, !tbaa !93
  %82 = zext i32 %80 to i64
  %83 = getelementptr inbounds i8, i8* %79, i64 %82
  store i8 %78, i8* %83, align 1, !tbaa !4
  %84 = lshr i32 %76, 8
  %85 = trunc i32 %84 to i8
  %86 = load i8*, i8** %15, align 8, !tbaa !54
  %87 = load i32, i32* %16, align 4, !tbaa !93
  %88 = add i32 %87, 1
  store i32 %88, i32* %16, align 4, !tbaa !93
  %89 = zext i32 %87 to i64
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  store i8 %85, i8* %90, align 1, !tbaa !4
  %91 = load i8*, i8** %15, align 8, !tbaa !54
  %92 = load i32, i32* %16, align 4, !tbaa !93
  %93 = add i32 %92, 1
  store i32 %93, i32* %16, align 4, !tbaa !93
  %94 = zext i32 %92 to i64
  %95 = getelementptr inbounds i8, i8* %91, i64 %94
  store i8 %73, i8* %95, align 1, !tbaa !4
  %96 = add i16 %77, -1
  %97 = zext i8 %73 to i64
  %98 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([256 x i8]* @_length_code to [0 x i8]*), i64 0, i64 %97
  %99 = load i8, i8* %98, align 1, !tbaa !4
  %100 = zext i8 %99 to i64
  %101 = add nuw nsw i64 %100, 257
  %102 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %101, i32 0, i32 0
  %103 = load i16, i16* %102, align 4, !tbaa !4
  %104 = add i16 %103, 1
  store i16 %104, i16* %102, align 4, !tbaa !4
  %105 = icmp ult i16 %96, 256
  %106 = lshr i16 %96, 7
  %107 = add nuw nsw i16 %106, 256
  %108 = select i1 %105, i16 %96, i16 %107
  %109 = zext i16 %108 to i64
  %110 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([512 x i8]* @_dist_code to [0 x i8]*), i64 0, i64 %109
  %111 = load i8, i8* %110, align 1, !tbaa !4
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %112, i32 0, i32 0
  %114 = load i16, i16* %113, align 4, !tbaa !4
  %115 = add i16 %114, 1
  store i16 %115, i16* %113, align 4, !tbaa !4
  %116 = load i32, i32* %16, align 4, !tbaa !93
  %117 = load i32, i32* %17, align 8, !tbaa !55
  %118 = icmp eq i32 %116, %117
  %119 = load i32, i32* %14, align 8, !tbaa !75
  %120 = load i32, i32* %3, align 4, !tbaa !72
  %121 = sub i32 %120, %119
  store i32 %121, i32* %3, align 4, !tbaa !72
  %122 = load i32, i32* %19, align 8, !tbaa !63
  %123 = icmp ule i32 %119, %122
  %124 = icmp ugt i32 %121, 2
  %125 = select i1 %123, i1 %124, i1 false
  br i1 %125, label %126, label %160

126:                                              ; preds = %71
  %127 = add i32 %119, -1
  store i32 %127, i32* %14, align 8, !tbaa !75
  %128 = load i32, i32* %6, align 8, !tbaa !45
  %129 = load i8*, i8** %7, align 8, !tbaa !46
  %130 = load i32, i32* %9, align 4, !tbaa !44
  %131 = load i16*, i16** %10, align 8, !tbaa !48
  %132 = load i16*, i16** %11, align 8, !tbaa !47
  %133 = load i32, i32* %12, align 8, !tbaa !41
  %134 = load i32, i32* %8, align 4, !tbaa !70
  %135 = load i32, i32* %5, align 8, !tbaa !77
  br label %136

136:                                              ; preds = %136, %126
  %137 = phi i32 [ %156, %136 ], [ %127, %126 ]
  %138 = phi i32 [ %148, %136 ], [ %135, %126 ]
  %139 = phi i32 [ %140, %136 ], [ %134, %126 ]
  %140 = add i32 %139, 1
  store i32 %140, i32* %8, align 4, !tbaa !70
  %141 = shl i32 %138, %128
  %142 = add i32 %139, 3
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i8, i8* %129, i64 %143
  %145 = load i8, i8* %144, align 1, !tbaa !4
  %146 = zext i8 %145 to i32
  %147 = xor i32 %141, %146
  %148 = and i32 %147, %130
  store i32 %148, i32* %5, align 8, !tbaa !77
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i16, i16* %131, i64 %149
  %151 = load i16, i16* %150, align 2, !tbaa !60
  %152 = and i32 %133, %140
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i16, i16* %132, i64 %153
  store i16 %151, i16* %154, align 2, !tbaa !60
  %155 = trunc i32 %140 to i16
  store i16 %155, i16* %150, align 2, !tbaa !60
  %156 = add i32 %137, -1
  store i32 %156, i32* %14, align 8, !tbaa !75
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %136, !llvm.loop !94

158:                                              ; preds = %136
  %159 = add i32 %139, 2
  store i32 %159, i32* %8, align 4, !tbaa !70
  br i1 %118, label %211, label %178

160:                                              ; preds = %71
  %161 = load i32, i32* %8, align 4, !tbaa !70
  %162 = add i32 %161, %119
  store i32 %162, i32* %8, align 4, !tbaa !70
  store i32 0, i32* %14, align 8, !tbaa !75
  %163 = load i8*, i8** %7, align 8, !tbaa !46
  %164 = zext i32 %162 to i64
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  %166 = load i8, i8* %165, align 1, !tbaa !4
  %167 = zext i8 %166 to i32
  store i32 %167, i32* %5, align 8, !tbaa !77
  %168 = load i32, i32* %6, align 8, !tbaa !45
  %169 = shl i32 %167, %168
  %170 = add i32 %162, 1
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %163, i64 %171
  %173 = load i8, i8* %172, align 1, !tbaa !4
  %174 = zext i8 %173 to i32
  %175 = xor i32 %169, %174
  %176 = load i32, i32* %9, align 4, !tbaa !44
  %177 = and i32 %175, %176
  store i32 %177, i32* %5, align 8, !tbaa !77
  br i1 %118, label %211, label %178

178:                                              ; preds = %160, %158, %257, %179
  br label %22

179:                                              ; preds = %68
  %180 = load i8*, i8** %7, align 8, !tbaa !46
  %181 = load i32, i32* %8, align 4, !tbaa !70
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %180, i64 %182
  %184 = load i8, i8* %183, align 1, !tbaa !4
  %185 = load i8*, i8** %15, align 8, !tbaa !54
  %186 = load i32, i32* %16, align 4, !tbaa !93
  %187 = add i32 %186, 1
  store i32 %187, i32* %16, align 4, !tbaa !93
  %188 = zext i32 %186 to i64
  %189 = getelementptr inbounds i8, i8* %185, i64 %188
  store i8 0, i8* %189, align 1, !tbaa !4
  %190 = load i8*, i8** %15, align 8, !tbaa !54
  %191 = load i32, i32* %16, align 4, !tbaa !93
  %192 = add i32 %191, 1
  store i32 %192, i32* %16, align 4, !tbaa !93
  %193 = zext i32 %191 to i64
  %194 = getelementptr inbounds i8, i8* %190, i64 %193
  store i8 0, i8* %194, align 1, !tbaa !4
  %195 = load i8*, i8** %15, align 8, !tbaa !54
  %196 = load i32, i32* %16, align 4, !tbaa !93
  %197 = add i32 %196, 1
  store i32 %197, i32* %16, align 4, !tbaa !93
  %198 = zext i32 %196 to i64
  %199 = getelementptr inbounds i8, i8* %195, i64 %198
  store i8 %184, i8* %199, align 1, !tbaa !4
  %200 = zext i8 %184 to i64
  %201 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %200, i32 0, i32 0
  %202 = load i16, i16* %201, align 4, !tbaa !4
  %203 = add i16 %202, 1
  store i16 %203, i16* %201, align 4, !tbaa !4
  %204 = load i32, i32* %16, align 4, !tbaa !93
  %205 = load i32, i32* %17, align 8, !tbaa !55
  %206 = icmp eq i32 %204, %205
  %207 = load i32, i32* %3, align 4, !tbaa !72
  %208 = add i32 %207, -1
  store i32 %208, i32* %3, align 4, !tbaa !72
  %209 = load i32, i32* %8, align 4, !tbaa !70
  %210 = add i32 %209, 1
  store i32 %210, i32* %8, align 4, !tbaa !70
  br i1 %206, label %211, label %178

211:                                              ; preds = %160, %158, %179
  %212 = phi i32 [ %162, %160 ], [ %159, %158 ], [ %210, %179 ]
  %213 = load i64, i64* %20, align 8, !tbaa !71
  %214 = icmp sgt i64 %213, -1
  br i1 %214, label %215, label %219

215:                                              ; preds = %211
  %216 = load i8*, i8** %7, align 8, !tbaa !46
  %217 = and i64 %213, 4294967295
  %218 = getelementptr inbounds i8, i8* %216, i64 %217
  br label %219

219:                                              ; preds = %211, %215
  %220 = phi i8* [ %218, %215 ], [ null, %211 ]
  %221 = zext i32 %212 to i64
  %222 = sub nsw i64 %221, %213
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %220, i64 noundef %222, i32 noundef 0) #25
  %223 = load i32, i32* %8, align 4, !tbaa !70
  %224 = zext i32 %223 to i64
  store i64 %224, i64* %20, align 8, !tbaa !71
  %225 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8, !tbaa !32
  %226 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %225, i64 0, i32 7
  %227 = load %struct.internal_state*, %struct.internal_state** %226, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %227) #25
  %228 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %227, i64 0, i32 5
  %229 = load i64, i64* %228, align 8, !tbaa !80
  %230 = trunc i64 %229 to i32
  %231 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %225, i64 0, i32 4
  %232 = load i32, i32* %231, align 8, !tbaa !86
  %233 = icmp ult i32 %232, %230
  %234 = select i1 %233, i32 %232, i32 %230
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %257, label %236

236:                                              ; preds = %219
  %237 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %225, i64 0, i32 3
  %238 = load i8*, i8** %237, align 8, !tbaa !87
  %239 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %227, i64 0, i32 4
  %240 = load i8*, i8** %239, align 8, !tbaa !81
  %241 = zext i32 %234 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %238, i8* align 1 %240, i64 %241, i1 false) #25
  %242 = load i8*, i8** %237, align 8, !tbaa !87
  %243 = getelementptr inbounds i8, i8* %242, i64 %241
  store i8* %243, i8** %237, align 8, !tbaa !87
  %244 = load i8*, i8** %239, align 8, !tbaa !81
  %245 = getelementptr inbounds i8, i8* %244, i64 %241
  store i8* %245, i8** %239, align 8, !tbaa !81
  %246 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %225, i64 0, i32 5
  %247 = load i64, i64* %246, align 8, !tbaa !88
  %248 = add i64 %247, %241
  store i64 %248, i64* %246, align 8, !tbaa !88
  %249 = load i32, i32* %231, align 8, !tbaa !86
  %250 = sub i32 %249, %234
  store i32 %250, i32* %231, align 8, !tbaa !86
  %251 = load i64, i64* %228, align 8, !tbaa !80
  %252 = sub i64 %251, %241
  store i64 %252, i64* %228, align 8, !tbaa !80
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %236
  %255 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %227, i64 0, i32 2
  %256 = load i8*, i8** %255, align 8, !tbaa !51
  store i8* %256, i8** %239, align 8, !tbaa !81
  br label %257

257:                                              ; preds = %219, %236, %254
  %258 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8, !tbaa !32
  %259 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %258, i64 0, i32 4
  %260 = load i32, i32* %259, align 8, !tbaa !86
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %373, label %178

262:                                              ; preds = %29
  %263 = load i32, i32* %8, align 4, !tbaa !70
  %264 = icmp ult i32 %263, 2
  %265 = select i1 %264, i32 %263, i32 2
  %266 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  store i32 %265, i32* %266, align 4, !tbaa !73
  %267 = icmp eq i32 %1, 4
  br i1 %267, label %268, label %319

268:                                              ; preds = %262
  %269 = load i64, i64* %20, align 8, !tbaa !71
  %270 = icmp sgt i64 %269, -1
  br i1 %270, label %271, label %275

271:                                              ; preds = %268
  %272 = load i8*, i8** %7, align 8, !tbaa !46
  %273 = and i64 %269, 4294967295
  %274 = getelementptr inbounds i8, i8* %272, i64 %273
  br label %275

275:                                              ; preds = %268, %271
  %276 = phi i8* [ %274, %271 ], [ null, %268 ]
  %277 = zext i32 %263 to i64
  %278 = sub nsw i64 %277, %269
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %276, i64 noundef %278, i32 noundef 1) #25
  %279 = load i32, i32* %8, align 4, !tbaa !70
  %280 = zext i32 %279 to i64
  store i64 %280, i64* %20, align 8, !tbaa !71
  %281 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8, !tbaa !32
  %282 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %281, i64 0, i32 7
  %283 = load %struct.internal_state*, %struct.internal_state** %282, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %283) #25
  %284 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %283, i64 0, i32 5
  %285 = load i64, i64* %284, align 8, !tbaa !80
  %286 = trunc i64 %285 to i32
  %287 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %281, i64 0, i32 4
  %288 = load i32, i32* %287, align 8, !tbaa !86
  %289 = icmp ult i32 %288, %286
  %290 = select i1 %289, i32 %288, i32 %286
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %313, label %292

292:                                              ; preds = %275
  %293 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %281, i64 0, i32 3
  %294 = load i8*, i8** %293, align 8, !tbaa !87
  %295 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %283, i64 0, i32 4
  %296 = load i8*, i8** %295, align 8, !tbaa !81
  %297 = zext i32 %290 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 %297, i1 false) #25
  %298 = load i8*, i8** %293, align 8, !tbaa !87
  %299 = getelementptr inbounds i8, i8* %298, i64 %297
  store i8* %299, i8** %293, align 8, !tbaa !87
  %300 = load i8*, i8** %295, align 8, !tbaa !81
  %301 = getelementptr inbounds i8, i8* %300, i64 %297
  store i8* %301, i8** %295, align 8, !tbaa !81
  %302 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %281, i64 0, i32 5
  %303 = load i64, i64* %302, align 8, !tbaa !88
  %304 = add i64 %303, %297
  store i64 %304, i64* %302, align 8, !tbaa !88
  %305 = load i32, i32* %287, align 8, !tbaa !86
  %306 = sub i32 %305, %290
  store i32 %306, i32* %287, align 8, !tbaa !86
  %307 = load i64, i64* %284, align 8, !tbaa !80
  %308 = sub i64 %307, %297
  store i64 %308, i64* %284, align 8, !tbaa !80
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %313

310:                                              ; preds = %292
  %311 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %283, i64 0, i32 2
  %312 = load i8*, i8** %311, align 8, !tbaa !51
  store i8* %312, i8** %295, align 8, !tbaa !81
  br label %313

313:                                              ; preds = %275, %292, %310
  %314 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8, !tbaa !32
  %315 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %314, i64 0, i32 4
  %316 = load i32, i32* %315, align 8, !tbaa !86
  %317 = icmp eq i32 %316, 0
  %318 = select i1 %317, i32 2, i32 3
  br label %373

319:                                              ; preds = %262
  %320 = load i32, i32* %16, align 4, !tbaa !93
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %372, label %322

322:                                              ; preds = %319
  %323 = load i64, i64* %20, align 8, !tbaa !71
  %324 = icmp sgt i64 %323, -1
  br i1 %324, label %325, label %329

325:                                              ; preds = %322
  %326 = load i8*, i8** %7, align 8, !tbaa !46
  %327 = and i64 %323, 4294967295
  %328 = getelementptr inbounds i8, i8* %326, i64 %327
  br label %329

329:                                              ; preds = %322, %325
  %330 = phi i8* [ %328, %325 ], [ null, %322 ]
  %331 = zext i32 %263 to i64
  %332 = sub nsw i64 %331, %323
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %330, i64 noundef %332, i32 noundef 0) #25
  %333 = load i32, i32* %8, align 4, !tbaa !70
  %334 = zext i32 %333 to i64
  store i64 %334, i64* %20, align 8, !tbaa !71
  %335 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8, !tbaa !32
  %336 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %335, i64 0, i32 7
  %337 = load %struct.internal_state*, %struct.internal_state** %336, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %337) #25
  %338 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %337, i64 0, i32 5
  %339 = load i64, i64* %338, align 8, !tbaa !80
  %340 = trunc i64 %339 to i32
  %341 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %335, i64 0, i32 4
  %342 = load i32, i32* %341, align 8, !tbaa !86
  %343 = icmp ult i32 %342, %340
  %344 = select i1 %343, i32 %342, i32 %340
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %367, label %346

346:                                              ; preds = %329
  %347 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %335, i64 0, i32 3
  %348 = load i8*, i8** %347, align 8, !tbaa !87
  %349 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %337, i64 0, i32 4
  %350 = load i8*, i8** %349, align 8, !tbaa !81
  %351 = zext i32 %344 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %348, i8* align 1 %350, i64 %351, i1 false) #25
  %352 = load i8*, i8** %347, align 8, !tbaa !87
  %353 = getelementptr inbounds i8, i8* %352, i64 %351
  store i8* %353, i8** %347, align 8, !tbaa !87
  %354 = load i8*, i8** %349, align 8, !tbaa !81
  %355 = getelementptr inbounds i8, i8* %354, i64 %351
  store i8* %355, i8** %349, align 8, !tbaa !81
  %356 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %335, i64 0, i32 5
  %357 = load i64, i64* %356, align 8, !tbaa !88
  %358 = add i64 %357, %351
  store i64 %358, i64* %356, align 8, !tbaa !88
  %359 = load i32, i32* %341, align 8, !tbaa !86
  %360 = sub i32 %359, %344
  store i32 %360, i32* %341, align 8, !tbaa !86
  %361 = load i64, i64* %338, align 8, !tbaa !80
  %362 = sub i64 %361, %351
  store i64 %362, i64* %338, align 8, !tbaa !80
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %346
  %365 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %337, i64 0, i32 2
  %366 = load i8*, i8** %365, align 8, !tbaa !51
  store i8* %366, i8** %349, align 8, !tbaa !81
  br label %367

367:                                              ; preds = %329, %346, %364
  %368 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8, !tbaa !32
  %369 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %368, i64 0, i32 4
  %370 = load i32, i32* %369, align 8, !tbaa !86
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %373, label %372

372:                                              ; preds = %367, %319
  br label %373

373:                                              ; preds = %257, %25, %367, %313, %372
  %374 = phi i32 [ 1, %372 ], [ %318, %313 ], [ 0, %367 ], [ 0, %25 ], [ 0, %257 ]
  ret i32 %374
}

; Function Attrs: nounwind uwtable
define internal i32 @deflate_slow(%struct.internal_state* noundef %0, i32 noundef %1) #3 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 25
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 21
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 13
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 32
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 11
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 34
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 26
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  br label %26

26:                                               ; preds = %190, %2
  %27 = load i32, i32* %3, align 4, !tbaa !72
  %28 = icmp ult i32 %27, 262
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  tail call fastcc void @fill_window(%struct.internal_state* noundef nonnull %0)
  %30 = load i32, i32* %3, align 4, !tbaa !72
  %31 = icmp ult i32 %30, 262
  %32 = and i1 %4, %31
  br i1 %32, label %473, label %33

33:                                               ; preds = %29
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %333, label %35

35:                                               ; preds = %33
  %36 = icmp ugt i32 %30, 2
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %5, align 8, !tbaa !75
  store i32 %38, i32* %6, align 8, !tbaa !74
  %39 = load i32, i32* %7, align 8, !tbaa !92
  store i32 %39, i32* %8, align 4, !tbaa !95
  store i32 2, i32* %5, align 8, !tbaa !75
  br label %93

40:                                               ; preds = %26, %35
  %41 = load i32, i32* %9, align 8, !tbaa !77
  %42 = load i32, i32* %10, align 8, !tbaa !45
  %43 = shl i32 %41, %42
  %44 = load i8*, i8** %11, align 8, !tbaa !46
  %45 = load i32, i32* %12, align 4, !tbaa !70
  %46 = add i32 %45, 2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = load i8, i8* %48, align 1, !tbaa !4
  %50 = zext i8 %49 to i32
  %51 = xor i32 %43, %50
  %52 = load i32, i32* %13, align 4, !tbaa !44
  %53 = and i32 %51, %52
  store i32 %53, i32* %9, align 8, !tbaa !77
  %54 = load i16*, i16** %14, align 8, !tbaa !48
  %55 = zext i32 %53 to i64
  %56 = getelementptr inbounds i16, i16* %54, i64 %55
  %57 = load i16, i16* %56, align 2, !tbaa !60
  %58 = load i16*, i16** %15, align 8, !tbaa !47
  %59 = load i32, i32* %16, align 8, !tbaa !41
  %60 = and i32 %59, %45
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %58, i64 %61
  store i16 %57, i16* %62, align 2, !tbaa !60
  %63 = zext i16 %57 to i32
  %64 = trunc i32 %45 to i16
  store i16 %64, i16* %56, align 2, !tbaa !60
  %65 = load i32, i32* %5, align 8, !tbaa !75
  store i32 %65, i32* %6, align 8, !tbaa !74
  %66 = load i32, i32* %7, align 8, !tbaa !92
  store i32 %66, i32* %8, align 4, !tbaa !95
  store i32 2, i32* %5, align 8, !tbaa !75
  %67 = icmp eq i16 %57, 0
  br i1 %67, label %93, label %68

68:                                               ; preds = %40
  %69 = load i32, i32* %17, align 8, !tbaa !63
  %70 = icmp ult i32 %65, %69
  br i1 %70, label %71, label %90

71:                                               ; preds = %68
  %72 = sub i32 %45, %63
  %73 = load i32, i32* %18, align 8, !tbaa !40
  %74 = add i32 %73, -262
  %75 = icmp ugt i32 %72, %74
  br i1 %75, label %90, label %76

76:                                               ; preds = %71
  %77 = tail call fastcc i32 @longest_match(%struct.internal_state* noundef nonnull %0, i32 noundef %63)
  store i32 %77, i32* %5, align 8, !tbaa !75
  %78 = icmp ult i32 %77, 6
  br i1 %78, label %79, label %90

79:                                               ; preds = %76
  %80 = load i32, i32* %19, align 8, !tbaa !57
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %89, label %82

82:                                               ; preds = %79
  %83 = icmp eq i32 %77, 3
  br i1 %83, label %84, label %90

84:                                               ; preds = %82
  %85 = load i32, i32* %12, align 4, !tbaa !70
  %86 = load i32, i32* %7, align 8, !tbaa !92
  %87 = sub i32 %85, %86
  %88 = icmp ugt i32 %87, 4096
  br i1 %88, label %89, label %90

89:                                               ; preds = %84, %79
  store i32 2, i32* %5, align 8, !tbaa !75
  br label %90

90:                                               ; preds = %68, %71, %89, %84, %82, %76
  %91 = phi i32 [ 2, %68 ], [ 2, %71 ], [ 2, %89 ], [ 3, %84 ], [ %77, %82 ], [ %77, %76 ]
  %92 = load i32, i32* %6, align 8, !tbaa !74
  br label %93

93:                                               ; preds = %90, %37, %40
  %94 = phi i32 [ %92, %90 ], [ %38, %37 ], [ %65, %40 ]
  %95 = phi i32 [ %91, %90 ], [ 2, %37 ], [ 2, %40 ]
  %96 = icmp ult i32 %94, 3
  %97 = icmp ugt i32 %95, %94
  %98 = select i1 %96, i1 true, i1 %97
  br i1 %98, label %241, label %99

99:                                               ; preds = %93
  %100 = load i32, i32* %12, align 4, !tbaa !70
  %101 = load i32, i32* %3, align 4, !tbaa !72
  %102 = add i32 %100, -3
  %103 = add i32 %102, %101
  %104 = trunc i32 %94 to i8
  %105 = add i8 %104, -3
  %106 = load i32, i32* %8, align 4, !tbaa !95
  %107 = xor i32 %106, -1
  %108 = add i32 %100, %107
  %109 = trunc i32 %108 to i16
  %110 = trunc i32 %108 to i8
  %111 = load i8*, i8** %20, align 8, !tbaa !54
  %112 = load i32, i32* %21, align 4, !tbaa !93
  %113 = add i32 %112, 1
  store i32 %113, i32* %21, align 4, !tbaa !93
  %114 = zext i32 %112 to i64
  %115 = getelementptr inbounds i8, i8* %111, i64 %114
  store i8 %110, i8* %115, align 1, !tbaa !4
  %116 = lshr i32 %108, 8
  %117 = trunc i32 %116 to i8
  %118 = load i8*, i8** %20, align 8, !tbaa !54
  %119 = load i32, i32* %21, align 4, !tbaa !93
  %120 = add i32 %119, 1
  store i32 %120, i32* %21, align 4, !tbaa !93
  %121 = zext i32 %119 to i64
  %122 = getelementptr inbounds i8, i8* %118, i64 %121
  store i8 %117, i8* %122, align 1, !tbaa !4
  %123 = load i8*, i8** %20, align 8, !tbaa !54
  %124 = load i32, i32* %21, align 4, !tbaa !93
  %125 = add i32 %124, 1
  store i32 %125, i32* %21, align 4, !tbaa !93
  %126 = zext i32 %124 to i64
  %127 = getelementptr inbounds i8, i8* %123, i64 %126
  store i8 %105, i8* %127, align 1, !tbaa !4
  %128 = add i16 %109, -1
  %129 = zext i8 %105 to i64
  %130 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([256 x i8]* @_length_code to [0 x i8]*), i64 0, i64 %129
  %131 = load i8, i8* %130, align 1, !tbaa !4
  %132 = zext i8 %131 to i64
  %133 = add nuw nsw i64 %132, 257
  %134 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %133, i32 0, i32 0
  %135 = load i16, i16* %134, align 4, !tbaa !4
  %136 = add i16 %135, 1
  store i16 %136, i16* %134, align 4, !tbaa !4
  %137 = icmp ult i16 %128, 256
  %138 = lshr i16 %128, 7
  %139 = add nuw nsw i16 %138, 256
  %140 = select i1 %137, i16 %128, i16 %139
  %141 = zext i16 %140 to i64
  %142 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([512 x i8]* @_dist_code to [0 x i8]*), i64 0, i64 %141
  %143 = load i8, i8* %142, align 1, !tbaa !4
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %144, i32 0, i32 0
  %146 = load i16, i16* %145, align 4, !tbaa !4
  %147 = add i16 %146, 1
  store i16 %147, i16* %145, align 4, !tbaa !4
  %148 = load i32, i32* %21, align 4, !tbaa !93
  %149 = load i32, i32* %22, align 8, !tbaa !55
  %150 = load i32, i32* %6, align 8, !tbaa !74
  %151 = load i32, i32* %3, align 4, !tbaa !72
  %152 = sub i32 1, %150
  %153 = add i32 %152, %151
  store i32 %153, i32* %3, align 4, !tbaa !72
  %154 = add i32 %150, -2
  store i32 %154, i32* %6, align 8, !tbaa !74
  %155 = load i32, i32* %12, align 4, !tbaa !70
  br label %156

156:                                              ; preds = %184, %99
  %157 = phi i32 [ %185, %184 ], [ %154, %99 ]
  %158 = phi i32 [ %159, %184 ], [ %155, %99 ]
  %159 = add i32 %158, 1
  store i32 %159, i32* %12, align 4, !tbaa !70
  %160 = icmp ugt i32 %159, %103
  br i1 %160, label %184, label %161

161:                                              ; preds = %156
  %162 = load i32, i32* %9, align 8, !tbaa !77
  %163 = load i32, i32* %10, align 8, !tbaa !45
  %164 = shl i32 %162, %163
  %165 = load i8*, i8** %11, align 8, !tbaa !46
  %166 = add i32 %158, 3
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %165, i64 %167
  %169 = load i8, i8* %168, align 1, !tbaa !4
  %170 = zext i8 %169 to i32
  %171 = xor i32 %164, %170
  %172 = load i32, i32* %13, align 4, !tbaa !44
  %173 = and i32 %171, %172
  store i32 %173, i32* %9, align 8, !tbaa !77
  %174 = load i16*, i16** %14, align 8, !tbaa !48
  %175 = zext i32 %173 to i64
  %176 = getelementptr inbounds i16, i16* %174, i64 %175
  %177 = load i16, i16* %176, align 2, !tbaa !60
  %178 = load i16*, i16** %15, align 8, !tbaa !47
  %179 = load i32, i32* %16, align 8, !tbaa !41
  %180 = and i32 %179, %159
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i16, i16* %178, i64 %181
  store i16 %177, i16* %182, align 2, !tbaa !60
  %183 = trunc i32 %159 to i16
  store i16 %183, i16* %176, align 2, !tbaa !60
  br label %184

184:                                              ; preds = %156, %161
  %185 = add i32 %157, -1
  store i32 %185, i32* %6, align 8, !tbaa !74
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %156, !llvm.loop !96

187:                                              ; preds = %184
  %188 = icmp eq i32 %148, %149
  store i32 0, i32* %23, align 8, !tbaa !76
  store i32 2, i32* %5, align 8, !tbaa !75
  %189 = add i32 %158, 2
  store i32 %189, i32* %12, align 4, !tbaa !70
  br i1 %188, label %191, label %190

190:                                              ; preds = %187, %236, %328, %319
  br label %26

191:                                              ; preds = %187
  %192 = load i64, i64* %24, align 8, !tbaa !71
  %193 = icmp sgt i64 %192, -1
  br i1 %193, label %194, label %198

194:                                              ; preds = %191
  %195 = load i8*, i8** %11, align 8, !tbaa !46
  %196 = and i64 %192, 4294967295
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  br label %198

198:                                              ; preds = %191, %194
  %199 = phi i8* [ %197, %194 ], [ null, %191 ]
  %200 = zext i32 %189 to i64
  %201 = sub nsw i64 %200, %192
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %199, i64 noundef %201, i32 noundef 0) #25
  %202 = load i32, i32* %12, align 4, !tbaa !70
  %203 = zext i32 %202 to i64
  store i64 %203, i64* %24, align 8, !tbaa !71
  %204 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %205 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %204, i64 0, i32 7
  %206 = load %struct.internal_state*, %struct.internal_state** %205, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %206) #25
  %207 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %206, i64 0, i32 5
  %208 = load i64, i64* %207, align 8, !tbaa !80
  %209 = trunc i64 %208 to i32
  %210 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %204, i64 0, i32 4
  %211 = load i32, i32* %210, align 8, !tbaa !86
  %212 = icmp ult i32 %211, %209
  %213 = select i1 %212, i32 %211, i32 %209
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %236, label %215

215:                                              ; preds = %198
  %216 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %204, i64 0, i32 3
  %217 = load i8*, i8** %216, align 8, !tbaa !87
  %218 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %206, i64 0, i32 4
  %219 = load i8*, i8** %218, align 8, !tbaa !81
  %220 = zext i32 %213 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %217, i8* align 1 %219, i64 %220, i1 false) #25
  %221 = load i8*, i8** %216, align 8, !tbaa !87
  %222 = getelementptr inbounds i8, i8* %221, i64 %220
  store i8* %222, i8** %216, align 8, !tbaa !87
  %223 = load i8*, i8** %218, align 8, !tbaa !81
  %224 = getelementptr inbounds i8, i8* %223, i64 %220
  store i8* %224, i8** %218, align 8, !tbaa !81
  %225 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %204, i64 0, i32 5
  %226 = load i64, i64* %225, align 8, !tbaa !88
  %227 = add i64 %226, %220
  store i64 %227, i64* %225, align 8, !tbaa !88
  %228 = load i32, i32* %210, align 8, !tbaa !86
  %229 = sub i32 %228, %213
  store i32 %229, i32* %210, align 8, !tbaa !86
  %230 = load i64, i64* %207, align 8, !tbaa !80
  %231 = sub i64 %230, %220
  store i64 %231, i64* %207, align 8, !tbaa !80
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %215
  %234 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %206, i64 0, i32 2
  %235 = load i8*, i8** %234, align 8, !tbaa !51
  store i8* %235, i8** %218, align 8, !tbaa !81
  br label %236

236:                                              ; preds = %198, %215, %233
  %237 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %238 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %237, i64 0, i32 4
  %239 = load i32, i32* %238, align 8, !tbaa !86
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %473, label %190

241:                                              ; preds = %93
  %242 = load i32, i32* %23, align 8, !tbaa !76
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %328, label %244

244:                                              ; preds = %241
  %245 = load i8*, i8** %11, align 8, !tbaa !46
  %246 = load i32, i32* %12, align 4, !tbaa !70
  %247 = add i32 %246, -1
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %245, i64 %248
  %250 = load i8, i8* %249, align 1, !tbaa !4
  %251 = load i8*, i8** %20, align 8, !tbaa !54
  %252 = load i32, i32* %21, align 4, !tbaa !93
  %253 = add i32 %252, 1
  store i32 %253, i32* %21, align 4, !tbaa !93
  %254 = zext i32 %252 to i64
  %255 = getelementptr inbounds i8, i8* %251, i64 %254
  store i8 0, i8* %255, align 1, !tbaa !4
  %256 = load i8*, i8** %20, align 8, !tbaa !54
  %257 = load i32, i32* %21, align 4, !tbaa !93
  %258 = add i32 %257, 1
  store i32 %258, i32* %21, align 4, !tbaa !93
  %259 = zext i32 %257 to i64
  %260 = getelementptr inbounds i8, i8* %256, i64 %259
  store i8 0, i8* %260, align 1, !tbaa !4
  %261 = load i8*, i8** %20, align 8, !tbaa !54
  %262 = load i32, i32* %21, align 4, !tbaa !93
  %263 = add i32 %262, 1
  store i32 %263, i32* %21, align 4, !tbaa !93
  %264 = zext i32 %262 to i64
  %265 = getelementptr inbounds i8, i8* %261, i64 %264
  store i8 %250, i8* %265, align 1, !tbaa !4
  %266 = zext i8 %250 to i64
  %267 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %266, i32 0, i32 0
  %268 = load i16, i16* %267, align 4, !tbaa !4
  %269 = add i16 %268, 1
  store i16 %269, i16* %267, align 4, !tbaa !4
  %270 = load i32, i32* %21, align 4, !tbaa !93
  %271 = load i32, i32* %22, align 8, !tbaa !55
  %272 = icmp eq i32 %270, %271
  br i1 %272, label %273, label %319

273:                                              ; preds = %244
  %274 = load i64, i64* %24, align 8, !tbaa !71
  %275 = icmp sgt i64 %274, -1
  br i1 %275, label %276, label %280

276:                                              ; preds = %273
  %277 = load i8*, i8** %11, align 8, !tbaa !46
  %278 = and i64 %274, 4294967295
  %279 = getelementptr inbounds i8, i8* %277, i64 %278
  br label %280

280:                                              ; preds = %273, %276
  %281 = phi i8* [ %279, %276 ], [ null, %273 ]
  %282 = load i32, i32* %12, align 4, !tbaa !70
  %283 = zext i32 %282 to i64
  %284 = sub nsw i64 %283, %274
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %281, i64 noundef %284, i32 noundef 0) #25
  %285 = load i32, i32* %12, align 4, !tbaa !70
  %286 = zext i32 %285 to i64
  store i64 %286, i64* %24, align 8, !tbaa !71
  %287 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %288 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %287, i64 0, i32 7
  %289 = load %struct.internal_state*, %struct.internal_state** %288, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %289) #25
  %290 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %289, i64 0, i32 5
  %291 = load i64, i64* %290, align 8, !tbaa !80
  %292 = trunc i64 %291 to i32
  %293 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %287, i64 0, i32 4
  %294 = load i32, i32* %293, align 8, !tbaa !86
  %295 = icmp ult i32 %294, %292
  %296 = select i1 %295, i32 %294, i32 %292
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %319, label %298

298:                                              ; preds = %280
  %299 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %287, i64 0, i32 3
  %300 = load i8*, i8** %299, align 8, !tbaa !87
  %301 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %289, i64 0, i32 4
  %302 = load i8*, i8** %301, align 8, !tbaa !81
  %303 = zext i32 %296 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %300, i8* align 1 %302, i64 %303, i1 false) #25
  %304 = load i8*, i8** %299, align 8, !tbaa !87
  %305 = getelementptr inbounds i8, i8* %304, i64 %303
  store i8* %305, i8** %299, align 8, !tbaa !87
  %306 = load i8*, i8** %301, align 8, !tbaa !81
  %307 = getelementptr inbounds i8, i8* %306, i64 %303
  store i8* %307, i8** %301, align 8, !tbaa !81
  %308 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %287, i64 0, i32 5
  %309 = load i64, i64* %308, align 8, !tbaa !88
  %310 = add i64 %309, %303
  store i64 %310, i64* %308, align 8, !tbaa !88
  %311 = load i32, i32* %293, align 8, !tbaa !86
  %312 = sub i32 %311, %296
  store i32 %312, i32* %293, align 8, !tbaa !86
  %313 = load i64, i64* %290, align 8, !tbaa !80
  %314 = sub i64 %313, %303
  store i64 %314, i64* %290, align 8, !tbaa !80
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %316, label %319

316:                                              ; preds = %298
  %317 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %289, i64 0, i32 2
  %318 = load i8*, i8** %317, align 8, !tbaa !51
  store i8* %318, i8** %301, align 8, !tbaa !81
  br label %319

319:                                              ; preds = %316, %298, %280, %244
  %320 = load i32, i32* %12, align 4, !tbaa !70
  %321 = add i32 %320, 1
  store i32 %321, i32* %12, align 4, !tbaa !70
  %322 = load i32, i32* %3, align 4, !tbaa !72
  %323 = add i32 %322, -1
  store i32 %323, i32* %3, align 4, !tbaa !72
  %324 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %325 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %324, i64 0, i32 4
  %326 = load i32, i32* %325, align 8, !tbaa !86
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %473, label %190

328:                                              ; preds = %241
  store i32 1, i32* %23, align 8, !tbaa !76
  %329 = load i32, i32* %12, align 4, !tbaa !70
  %330 = add i32 %329, 1
  store i32 %330, i32* %12, align 4, !tbaa !70
  %331 = load i32, i32* %3, align 4, !tbaa !72
  %332 = add i32 %331, -1
  store i32 %332, i32* %3, align 4, !tbaa !72
  br label %190

333:                                              ; preds = %33
  %334 = load i32, i32* %23, align 8, !tbaa !76
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %362, label %336

336:                                              ; preds = %333
  %337 = load i8*, i8** %11, align 8, !tbaa !46
  %338 = load i32, i32* %12, align 4, !tbaa !70
  %339 = add i32 %338, -1
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %337, i64 %340
  %342 = load i8, i8* %341, align 1, !tbaa !4
  %343 = load i8*, i8** %20, align 8, !tbaa !54
  %344 = load i32, i32* %21, align 4, !tbaa !93
  %345 = add i32 %344, 1
  store i32 %345, i32* %21, align 4, !tbaa !93
  %346 = zext i32 %344 to i64
  %347 = getelementptr inbounds i8, i8* %343, i64 %346
  store i8 0, i8* %347, align 1, !tbaa !4
  %348 = load i8*, i8** %20, align 8, !tbaa !54
  %349 = load i32, i32* %21, align 4, !tbaa !93
  %350 = add i32 %349, 1
  store i32 %350, i32* %21, align 4, !tbaa !93
  %351 = zext i32 %349 to i64
  %352 = getelementptr inbounds i8, i8* %348, i64 %351
  store i8 0, i8* %352, align 1, !tbaa !4
  %353 = load i8*, i8** %20, align 8, !tbaa !54
  %354 = load i32, i32* %21, align 4, !tbaa !93
  %355 = add i32 %354, 1
  store i32 %355, i32* %21, align 4, !tbaa !93
  %356 = zext i32 %354 to i64
  %357 = getelementptr inbounds i8, i8* %353, i64 %356
  store i8 %342, i8* %357, align 1, !tbaa !4
  %358 = zext i8 %342 to i64
  %359 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %358, i32 0, i32 0
  %360 = load i16, i16* %359, align 4, !tbaa !4
  %361 = add i16 %360, 1
  store i16 %361, i16* %359, align 4, !tbaa !4
  store i32 0, i32* %23, align 8, !tbaa !76
  br label %362

362:                                              ; preds = %336, %333
  %363 = load i32, i32* %12, align 4, !tbaa !70
  %364 = icmp ult i32 %363, 2
  %365 = select i1 %364, i32 %363, i32 2
  %366 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  store i32 %365, i32* %366, align 4, !tbaa !73
  %367 = icmp eq i32 %1, 4
  br i1 %367, label %368, label %419

368:                                              ; preds = %362
  %369 = load i64, i64* %24, align 8, !tbaa !71
  %370 = icmp sgt i64 %369, -1
  br i1 %370, label %371, label %375

371:                                              ; preds = %368
  %372 = load i8*, i8** %11, align 8, !tbaa !46
  %373 = and i64 %369, 4294967295
  %374 = getelementptr inbounds i8, i8* %372, i64 %373
  br label %375

375:                                              ; preds = %368, %371
  %376 = phi i8* [ %374, %371 ], [ null, %368 ]
  %377 = zext i32 %363 to i64
  %378 = sub nsw i64 %377, %369
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %376, i64 noundef %378, i32 noundef 1) #25
  %379 = load i32, i32* %12, align 4, !tbaa !70
  %380 = zext i32 %379 to i64
  store i64 %380, i64* %24, align 8, !tbaa !71
  %381 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %382 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %381, i64 0, i32 7
  %383 = load %struct.internal_state*, %struct.internal_state** %382, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %383) #25
  %384 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %383, i64 0, i32 5
  %385 = load i64, i64* %384, align 8, !tbaa !80
  %386 = trunc i64 %385 to i32
  %387 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %381, i64 0, i32 4
  %388 = load i32, i32* %387, align 8, !tbaa !86
  %389 = icmp ult i32 %388, %386
  %390 = select i1 %389, i32 %388, i32 %386
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %413, label %392

392:                                              ; preds = %375
  %393 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %381, i64 0, i32 3
  %394 = load i8*, i8** %393, align 8, !tbaa !87
  %395 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %383, i64 0, i32 4
  %396 = load i8*, i8** %395, align 8, !tbaa !81
  %397 = zext i32 %390 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %394, i8* align 1 %396, i64 %397, i1 false) #25
  %398 = load i8*, i8** %393, align 8, !tbaa !87
  %399 = getelementptr inbounds i8, i8* %398, i64 %397
  store i8* %399, i8** %393, align 8, !tbaa !87
  %400 = load i8*, i8** %395, align 8, !tbaa !81
  %401 = getelementptr inbounds i8, i8* %400, i64 %397
  store i8* %401, i8** %395, align 8, !tbaa !81
  %402 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %381, i64 0, i32 5
  %403 = load i64, i64* %402, align 8, !tbaa !88
  %404 = add i64 %403, %397
  store i64 %404, i64* %402, align 8, !tbaa !88
  %405 = load i32, i32* %387, align 8, !tbaa !86
  %406 = sub i32 %405, %390
  store i32 %406, i32* %387, align 8, !tbaa !86
  %407 = load i64, i64* %384, align 8, !tbaa !80
  %408 = sub i64 %407, %397
  store i64 %408, i64* %384, align 8, !tbaa !80
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %413

410:                                              ; preds = %392
  %411 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %383, i64 0, i32 2
  %412 = load i8*, i8** %411, align 8, !tbaa !51
  store i8* %412, i8** %395, align 8, !tbaa !81
  br label %413

413:                                              ; preds = %375, %392, %410
  %414 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %415 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %414, i64 0, i32 4
  %416 = load i32, i32* %415, align 8, !tbaa !86
  %417 = icmp eq i32 %416, 0
  %418 = select i1 %417, i32 2, i32 3
  br label %473

419:                                              ; preds = %362
  %420 = load i32, i32* %21, align 4, !tbaa !93
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %472, label %422

422:                                              ; preds = %419
  %423 = load i64, i64* %24, align 8, !tbaa !71
  %424 = icmp sgt i64 %423, -1
  br i1 %424, label %425, label %429

425:                                              ; preds = %422
  %426 = load i8*, i8** %11, align 8, !tbaa !46
  %427 = and i64 %423, 4294967295
  %428 = getelementptr inbounds i8, i8* %426, i64 %427
  br label %429

429:                                              ; preds = %422, %425
  %430 = phi i8* [ %428, %425 ], [ null, %422 ]
  %431 = zext i32 %363 to i64
  %432 = sub nsw i64 %431, %423
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %430, i64 noundef %432, i32 noundef 0) #25
  %433 = load i32, i32* %12, align 4, !tbaa !70
  %434 = zext i32 %433 to i64
  store i64 %434, i64* %24, align 8, !tbaa !71
  %435 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %436 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %435, i64 0, i32 7
  %437 = load %struct.internal_state*, %struct.internal_state** %436, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %437) #25
  %438 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %437, i64 0, i32 5
  %439 = load i64, i64* %438, align 8, !tbaa !80
  %440 = trunc i64 %439 to i32
  %441 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %435, i64 0, i32 4
  %442 = load i32, i32* %441, align 8, !tbaa !86
  %443 = icmp ult i32 %442, %440
  %444 = select i1 %443, i32 %442, i32 %440
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %467, label %446

446:                                              ; preds = %429
  %447 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %435, i64 0, i32 3
  %448 = load i8*, i8** %447, align 8, !tbaa !87
  %449 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %437, i64 0, i32 4
  %450 = load i8*, i8** %449, align 8, !tbaa !81
  %451 = zext i32 %444 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %448, i8* align 1 %450, i64 %451, i1 false) #25
  %452 = load i8*, i8** %447, align 8, !tbaa !87
  %453 = getelementptr inbounds i8, i8* %452, i64 %451
  store i8* %453, i8** %447, align 8, !tbaa !87
  %454 = load i8*, i8** %449, align 8, !tbaa !81
  %455 = getelementptr inbounds i8, i8* %454, i64 %451
  store i8* %455, i8** %449, align 8, !tbaa !81
  %456 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %435, i64 0, i32 5
  %457 = load i64, i64* %456, align 8, !tbaa !88
  %458 = add i64 %457, %451
  store i64 %458, i64* %456, align 8, !tbaa !88
  %459 = load i32, i32* %441, align 8, !tbaa !86
  %460 = sub i32 %459, %444
  store i32 %460, i32* %441, align 8, !tbaa !86
  %461 = load i64, i64* %438, align 8, !tbaa !80
  %462 = sub i64 %461, %451
  store i64 %462, i64* %438, align 8, !tbaa !80
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %467

464:                                              ; preds = %446
  %465 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %437, i64 0, i32 2
  %466 = load i8*, i8** %465, align 8, !tbaa !51
  store i8* %466, i8** %449, align 8, !tbaa !81
  br label %467

467:                                              ; preds = %429, %446, %464
  %468 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8, !tbaa !32
  %469 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %468, i64 0, i32 4
  %470 = load i32, i32* %469, align 8, !tbaa !86
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %473, label %472

472:                                              ; preds = %467, %419
  br label %473

473:                                              ; preds = %319, %236, %29, %467, %413, %472
  %474 = phi i32 [ 1, %472 ], [ %418, %413 ], [ 0, %467 ], [ 0, %29 ], [ 0, %236 ], [ 0, %319 ]
  ret i32 %474
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fill_window(%struct.internal_state* noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8, !tbaa !40
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %7 = add i32 %3, -262
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %10 = zext i32 %3 to i64
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 19
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 21
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 13
  %21 = load i32, i32* %5, align 4, !tbaa !72
  br label %22

22:                                               ; preds = %246, %1
  %23 = phi i32 [ %247, %246 ], [ %3, %1 ]
  %24 = phi i32 [ %189, %246 ], [ %21, %1 ]
  %25 = load i64, i64* %4, align 8, !tbaa !59
  %26 = zext i32 %24 to i64
  %27 = load i32, i32* %6, align 4, !tbaa !70
  %28 = zext i32 %27 to i64
  %29 = add nuw nsw i64 %26, %28
  %30 = sub i64 %25, %29
  %31 = trunc i64 %30 to i32
  %32 = add i32 %7, %23
  %33 = icmp ult i32 %27, %32
  br i1 %33, label %146, label %34

34:                                               ; preds = %22
  %35 = load i8*, i8** %9, align 8, !tbaa !46
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  %37 = sub i32 %3, %31
  %38 = zext i32 %37 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %36, i64 %38, i1 false)
  %39 = load i32, i32* %11, align 8, !tbaa !92
  %40 = sub i32 %39, %3
  store i32 %40, i32* %11, align 8, !tbaa !92
  %41 = load i32, i32* %6, align 4, !tbaa !70
  %42 = sub i32 %41, %3
  store i32 %42, i32* %6, align 4, !tbaa !70
  %43 = load i64, i64* %12, align 8, !tbaa !71
  %44 = sub nsw i64 %43, %10
  store i64 %44, i64* %12, align 8, !tbaa !71
  %45 = load i32, i32* %13, align 4, !tbaa !73
  %46 = icmp ugt i32 %45, %42
  br i1 %46, label %47, label %48

47:                                               ; preds = %34
  store i32 %42, i32* %13, align 4, !tbaa !73
  br label %48

48:                                               ; preds = %47, %34
  %49 = load i32, i32* %2, align 8, !tbaa !40
  %50 = load i32, i32* %14, align 4, !tbaa !43
  %51 = load i16*, i16** %15, align 8, !tbaa !48
  %52 = zext i32 %50 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = add i32 %50, -1
  %55 = zext i32 %54 to i64
  %56 = add nuw nsw i64 %55, 1
  %57 = icmp ult i32 %54, 7
  br i1 %57, label %84, label %58

58:                                               ; preds = %48
  %59 = and i64 %56, 8589934584
  %60 = sub nsw i64 0, %59
  %61 = getelementptr i16, i16* %53, i64 %60
  %62 = trunc i64 %59 to i32
  %63 = sub i32 %50, %62
  %64 = insertelement <8 x i32> poison, i32 %49, i64 0
  %65 = shufflevector <8 x i32> %64, <8 x i32> poison, <8 x i32> zeroinitializer
  %66 = getelementptr i16, i16* %53, i64 -1
  %67 = getelementptr inbounds i16, i16* %66, i64 -7
  br label %68

68:                                               ; preds = %68, %58
  %69 = phi i64 [ 0, %58 ], [ %80, %68 ]
  %70 = sub i64 0, %69
  %71 = getelementptr inbounds i16, i16* %67, i64 %70
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !tbaa !60
  %74 = shufflevector <8 x i16> %73, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %75, <8 x i32> %65)
  %77 = trunc <8 x i32> %76 to <8 x i16>
  %78 = shufflevector <8 x i16> %77, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %79 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %79, align 2, !tbaa !60
  %80 = add nuw i64 %69, 8
  %81 = icmp eq i64 %80, %59
  br i1 %81, label %82, label %68, !llvm.loop !97

82:                                               ; preds = %68
  %83 = icmp eq i64 %56, %59
  br i1 %83, label %97, label %84

84:                                               ; preds = %48, %82
  %85 = phi i16* [ %53, %48 ], [ %61, %82 ]
  %86 = phi i32 [ %50, %48 ], [ %63, %82 ]
  br label %87

87:                                               ; preds = %84, %87
  %88 = phi i16* [ %90, %87 ], [ %85, %84 ]
  %89 = phi i32 [ %95, %87 ], [ %86, %84 ]
  %90 = getelementptr inbounds i16, i16* %88, i64 -1
  %91 = load i16, i16* %90, align 2, !tbaa !60
  %92 = zext i16 %91 to i32
  %93 = tail call i32 @llvm.usub.sat.i32(i32 %92, i32 %49) #25
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %90, align 2, !tbaa !60
  %95 = add i32 %89, -1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %87, !llvm.loop !99

97:                                               ; preds = %87, %82
  %98 = load i16*, i16** %16, align 8, !tbaa !47
  %99 = zext i32 %49 to i64
  %100 = getelementptr inbounds i16, i16* %98, i64 %99
  %101 = add i32 %49, -1
  %102 = zext i32 %101 to i64
  %103 = add nuw nsw i64 %102, 1
  %104 = icmp ult i32 %101, 7
  br i1 %104, label %131, label %105

105:                                              ; preds = %97
  %106 = and i64 %103, 8589934584
  %107 = sub nsw i64 0, %106
  %108 = getelementptr i16, i16* %100, i64 %107
  %109 = trunc i64 %106 to i32
  %110 = sub i32 %49, %109
  %111 = insertelement <8 x i32> poison, i32 %49, i64 0
  %112 = shufflevector <8 x i32> %111, <8 x i32> poison, <8 x i32> zeroinitializer
  %113 = getelementptr i16, i16* %100, i64 -1
  %114 = getelementptr inbounds i16, i16* %113, i64 -7
  br label %115

115:                                              ; preds = %115, %105
  %116 = phi i64 [ 0, %105 ], [ %127, %115 ]
  %117 = sub i64 0, %116
  %118 = getelementptr inbounds i16, i16* %114, i64 %117
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !tbaa !60
  %121 = shufflevector <8 x i16> %120, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %122 = zext <8 x i16> %121 to <8 x i32>
  %123 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %122, <8 x i32> %112)
  %124 = trunc <8 x i32> %123 to <8 x i16>
  %125 = shufflevector <8 x i16> %124, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %126 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %126, align 2, !tbaa !60
  %127 = add nuw i64 %116, 8
  %128 = icmp eq i64 %127, %106
  br i1 %128, label %129, label %115, !llvm.loop !101

129:                                              ; preds = %115
  %130 = icmp eq i64 %103, %106
  br i1 %130, label %144, label %131

131:                                              ; preds = %97, %129
  %132 = phi i16* [ %100, %97 ], [ %108, %129 ]
  %133 = phi i32 [ %49, %97 ], [ %110, %129 ]
  br label %134

134:                                              ; preds = %131, %134
  %135 = phi i16* [ %137, %134 ], [ %132, %131 ]
  %136 = phi i32 [ %142, %134 ], [ %133, %131 ]
  %137 = getelementptr inbounds i16, i16* %135, i64 -1
  %138 = load i16, i16* %137, align 2, !tbaa !60
  %139 = zext i16 %138 to i32
  %140 = tail call i32 @llvm.usub.sat.i32(i32 %139, i32 %49) #25
  %141 = trunc i32 %140 to i16
  store i16 %141, i16* %137, align 2, !tbaa !60
  %142 = add i32 %136, -1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %134, !llvm.loop !102

144:                                              ; preds = %134, %129
  %145 = add i32 %3, %31
  br label %146

146:                                              ; preds = %144, %22
  %147 = phi i32 [ %42, %144 ], [ %27, %22 ]
  %148 = phi i32 [ %145, %144 ], [ %31, %22 ]
  %149 = load %struct.z_stream_s*, %struct.z_stream_s** %8, align 8, !tbaa !32
  %150 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 1
  %151 = load i32, i32* %150, align 8, !tbaa !84
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %248, label %153

153:                                              ; preds = %146
  %154 = load i8*, i8** %9, align 8, !tbaa !46
  %155 = zext i32 %147 to i64
  %156 = getelementptr inbounds i8, i8* %154, i64 %155
  %157 = load i32, i32* %5, align 4, !tbaa !72
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %156, i64 %158
  %160 = icmp ugt i32 %151, %148
  %161 = select i1 %160, i32 %148, i32 %151
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %187, label %163

163:                                              ; preds = %153
  %164 = sub i32 %151, %161
  store i32 %164, i32* %150, align 8, !tbaa !84
  %165 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 0
  %166 = load i8*, i8** %165, align 8, !tbaa !89
  %167 = zext i32 %161 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* align 1 %166, i64 %167, i1 false) #25
  %168 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 7
  %169 = load %struct.internal_state*, %struct.internal_state** %168, align 8, !tbaa !31
  %170 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %169, i64 0, i32 6
  %171 = load i32, i32* %170, align 8, !tbaa !37
  switch i32 %171, label %180 [
    i32 1, label %172
    i32 2, label %176
  ]

172:                                              ; preds = %163
  %173 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 12
  %174 = load i64, i64* %173, align 8, !tbaa !82
  %175 = tail call i64 @adler32(i64 noundef %174, i8* noundef %159, i32 noundef %161) #25
  store i64 %175, i64* %173, align 8, !tbaa !82
  br label %180

176:                                              ; preds = %163
  %177 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 12
  %178 = load i64, i64* %177, align 8, !tbaa !82
  %179 = tail call i64 @crc32(i64 noundef %178, i8* noundef %159, i32 noundef %161) #25
  store i64 %179, i64* %177, align 8, !tbaa !82
  br label %180

180:                                              ; preds = %176, %172, %163
  %181 = load i8*, i8** %165, align 8, !tbaa !89
  %182 = getelementptr inbounds i8, i8* %181, i64 %167
  store i8* %182, i8** %165, align 8, !tbaa !89
  %183 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 2
  %184 = load i64, i64* %183, align 8, !tbaa !78
  %185 = add i64 %184, %167
  store i64 %185, i64* %183, align 8, !tbaa !78
  %186 = load i32, i32* %5, align 4, !tbaa !72
  br label %187

187:                                              ; preds = %153, %180
  %188 = phi i32 [ %157, %153 ], [ %186, %180 ]
  %189 = add i32 %188, %161
  store i32 %189, i32* %5, align 4, !tbaa !72
  %190 = load i32, i32* %13, align 4, !tbaa !73
  %191 = add i32 %190, %189
  %192 = icmp ugt i32 %191, 2
  br i1 %192, label %193, label %239

193:                                              ; preds = %187
  %194 = load i32, i32* %6, align 4, !tbaa !70
  %195 = sub i32 %194, %190
  %196 = load i8*, i8** %9, align 8, !tbaa !46
  %197 = zext i32 %195 to i64
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  %199 = load i8, i8* %198, align 1, !tbaa !4
  %200 = zext i8 %199 to i32
  store i32 %200, i32* %17, align 8, !tbaa !77
  %201 = load i32, i32* %18, align 8, !tbaa !45
  %202 = shl i32 %200, %201
  %203 = add i32 %195, 1
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %196, i64 %204
  %206 = load i8, i8* %205, align 1, !tbaa !4
  %207 = zext i8 %206 to i32
  %208 = xor i32 %202, %207
  %209 = load i32, i32* %19, align 4, !tbaa !44
  %210 = and i32 %208, %209
  store i32 %210, i32* %17, align 8, !tbaa !77
  br label %211

211:                                              ; preds = %216, %193
  %212 = phi i32 [ %224, %216 ], [ %210, %193 ]
  %213 = phi i32 [ %236, %216 ], [ %190, %193 ]
  %214 = phi i32 [ %235, %216 ], [ %195, %193 ]
  %215 = icmp eq i32 %213, 0
  br i1 %215, label %239, label %216

216:                                              ; preds = %211
  %217 = shl i32 %212, %201
  %218 = add i32 %214, 2
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %196, i64 %219
  %221 = load i8, i8* %220, align 1, !tbaa !4
  %222 = zext i8 %221 to i32
  %223 = xor i32 %217, %222
  %224 = and i32 %223, %209
  store i32 %224, i32* %17, align 8, !tbaa !77
  %225 = load i16*, i16** %15, align 8, !tbaa !48
  %226 = zext i32 %224 to i64
  %227 = getelementptr inbounds i16, i16* %225, i64 %226
  %228 = load i16, i16* %227, align 2, !tbaa !60
  %229 = load i16*, i16** %16, align 8, !tbaa !47
  %230 = load i32, i32* %20, align 8, !tbaa !41
  %231 = and i32 %230, %214
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i16, i16* %229, i64 %232
  store i16 %228, i16* %233, align 2, !tbaa !60
  %234 = trunc i32 %214 to i16
  store i16 %234, i16* %227, align 2, !tbaa !60
  %235 = add i32 %214, 1
  %236 = add i32 %213, -1
  store i32 %236, i32* %13, align 4, !tbaa !73
  %237 = add i32 %236, %189
  %238 = icmp ult i32 %237, 3
  br i1 %238, label %239, label %211, !llvm.loop !103

239:                                              ; preds = %211, %216, %187
  %240 = icmp ult i32 %189, 262
  br i1 %240, label %241, label %248

241:                                              ; preds = %239
  %242 = load %struct.z_stream_s*, %struct.z_stream_s** %8, align 8, !tbaa !32
  %243 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %242, i64 0, i32 1
  %244 = load i32, i32* %243, align 8, !tbaa !84
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %248, label %246, !llvm.loop !104

246:                                              ; preds = %241
  %247 = load i32, i32* %2, align 8, !tbaa !40
  br label %22

248:                                              ; preds = %239, %146, %241
  %249 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %250 = load i64, i64* %249, align 8, !tbaa !49
  %251 = load i64, i64* %4, align 8, !tbaa !59
  %252 = icmp ugt i64 %251, %250
  br i1 %252, label %253, label %282

253:                                              ; preds = %248
  %254 = load i32, i32* %6, align 4, !tbaa !70
  %255 = zext i32 %254 to i64
  %256 = load i32, i32* %5, align 4, !tbaa !72
  %257 = zext i32 %256 to i64
  %258 = add nuw nsw i64 %257, %255
  %259 = icmp ult i64 %250, %258
  br i1 %259, label %260, label %267

260:                                              ; preds = %253
  %261 = sub i64 %251, %258
  %262 = icmp ult i64 %261, 258
  %263 = select i1 %262, i64 %261, i64 258
  %264 = load i8*, i8** %9, align 8, !tbaa !46
  %265 = getelementptr inbounds i8, i8* %264, i64 %258
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %265, i8 0, i64 %263, i1 false)
  %266 = add nuw nsw i64 %263, %258
  br label %280

267:                                              ; preds = %253
  %268 = add nuw nsw i64 %258, 258
  %269 = icmp ugt i64 %268, %250
  br i1 %269, label %270, label %282

270:                                              ; preds = %267
  %271 = sub i64 %268, %250
  %272 = sub i64 %251, %250
  %273 = icmp ugt i64 %271, %272
  %274 = select i1 %273, i64 %272, i64 %271
  %275 = load i8*, i8** %9, align 8, !tbaa !46
  %276 = getelementptr inbounds i8, i8* %275, i64 %250
  %277 = and i64 %274, 4294967295
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %276, i8 0, i64 %277, i1 false)
  %278 = load i64, i64* %249, align 8, !tbaa !49
  %279 = add i64 %278, %274
  br label %280

280:                                              ; preds = %270, %260
  %281 = phi i64 [ %266, %260 ], [ %279, %270 ]
  store i64 %281, i64* %249, align 8, !tbaa !49
  br label %282

282:                                              ; preds = %280, %267, %248
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal fastcc i32 @longest_match(%struct.internal_state* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 31
  %4 = load i32, i32* %3, align 4, !tbaa !69
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %6 = load i8*, i8** %5, align 8, !tbaa !46
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %8 = load i32, i32* %7, align 4, !tbaa !70
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %6, i64 %9
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %12 = load i32, i32* %11, align 8, !tbaa !74
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 36
  %14 = load i32, i32* %13, align 8, !tbaa !67
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 11
  %16 = load i32, i32* %15, align 8, !tbaa !40
  %17 = add i32 %16, -262
  %18 = tail call i32 @llvm.usub.sat.i32(i32 %8, i32 %17)
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %20 = load i16*, i16** %19, align 8, !tbaa !47
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 13
  %22 = load i32, i32* %21, align 8, !tbaa !41
  %23 = getelementptr inbounds i8, i8* %10, i64 258
  %24 = add nsw i32 %12, -1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %10, i64 %25
  %27 = load i8, i8* %26, align 1, !tbaa !4
  %28 = sext i32 %12 to i64
  %29 = getelementptr inbounds i8, i8* %10, i64 %28
  %30 = load i8, i8* %29, align 1, !tbaa !4
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 35
  %32 = load i32, i32* %31, align 4, !tbaa !65
  %33 = icmp ult i32 %12, %32
  %34 = lshr i32 %4, 2
  %35 = select i1 %33, i32 %4, i32 %34
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %37 = load i32, i32* %36, align 4, !tbaa !72
  %38 = icmp ugt i32 %14, %37
  %39 = select i1 %38, i32 %37, i32 %14
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %41 = getelementptr inbounds i8, i8* %10, i64 1
  %42 = ptrtoint i8* %23 to i64
  br label %43

43:                                               ; preds = %160, %2
  %44 = phi i32 [ %12, %2 ], [ %161, %160 ]
  %45 = phi i32 [ %35, %2 ], [ %170, %160 ]
  %46 = phi i32 [ %1, %2 ], [ %168, %160 ]
  %47 = phi i8 [ %27, %2 ], [ %162, %160 ]
  %48 = phi i8 [ %30, %2 ], [ %163, %160 ]
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds i8, i8* %6, i64 %49
  %51 = sext i32 %44 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = load i8, i8* %52, align 1, !tbaa !4
  %54 = icmp eq i8 %53, %48
  br i1 %54, label %55, label %160

55:                                               ; preds = %43
  %56 = add nsw i32 %44, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %50, i64 %57
  %59 = load i8, i8* %58, align 1, !tbaa !4
  %60 = icmp eq i8 %59, %47
  br i1 %60, label %61, label %160

61:                                               ; preds = %55
  %62 = load i8, i8* %50, align 1, !tbaa !4
  %63 = load i8, i8* %10, align 1, !tbaa !4
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %65, label %160

65:                                               ; preds = %61
  %66 = getelementptr inbounds i8, i8* %50, i64 1
  %67 = load i8, i8* %66, align 1, !tbaa !4
  %68 = load i8, i8* %41, align 1, !tbaa !4
  %69 = icmp eq i8 %67, %68
  br i1 %69, label %70, label %160

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, i8* %66, i64 1
  br label %72

72:                                               ; preds = %117, %70
  %73 = phi i8* [ %71, %70 ], [ %121, %117 ]
  %74 = phi i64 [ 2, %70 ], [ %118, %117 ]
  %75 = getelementptr inbounds i8, i8* %10, i64 %74
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = load i8, i8* %76, align 1, !tbaa !4
  %78 = getelementptr inbounds i8, i8* %73, i64 1
  %79 = load i8, i8* %78, align 1, !tbaa !4
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %81, label %140

81:                                               ; preds = %72
  %82 = getelementptr inbounds i8, i8* %75, i64 2
  %83 = load i8, i8* %82, align 1, !tbaa !4
  %84 = getelementptr inbounds i8, i8* %73, i64 2
  %85 = load i8, i8* %84, align 1, !tbaa !4
  %86 = icmp eq i8 %83, %85
  br i1 %86, label %87, label %138

87:                                               ; preds = %81
  %88 = getelementptr inbounds i8, i8* %75, i64 3
  %89 = load i8, i8* %88, align 1, !tbaa !4
  %90 = getelementptr inbounds i8, i8* %73, i64 3
  %91 = load i8, i8* %90, align 1, !tbaa !4
  %92 = icmp eq i8 %89, %91
  br i1 %92, label %93, label %136

93:                                               ; preds = %87
  %94 = getelementptr inbounds i8, i8* %75, i64 4
  %95 = load i8, i8* %94, align 1, !tbaa !4
  %96 = getelementptr inbounds i8, i8* %73, i64 4
  %97 = load i8, i8* %96, align 1, !tbaa !4
  %98 = icmp eq i8 %95, %97
  br i1 %98, label %99, label %134

99:                                               ; preds = %93
  %100 = getelementptr inbounds i8, i8* %75, i64 5
  %101 = load i8, i8* %100, align 1, !tbaa !4
  %102 = getelementptr inbounds i8, i8* %73, i64 5
  %103 = load i8, i8* %102, align 1, !tbaa !4
  %104 = icmp eq i8 %101, %103
  br i1 %104, label %105, label %132

105:                                              ; preds = %99
  %106 = getelementptr inbounds i8, i8* %75, i64 6
  %107 = load i8, i8* %106, align 1, !tbaa !4
  %108 = getelementptr inbounds i8, i8* %73, i64 6
  %109 = load i8, i8* %108, align 1, !tbaa !4
  %110 = icmp eq i8 %107, %109
  br i1 %110, label %111, label %130

111:                                              ; preds = %105
  %112 = getelementptr inbounds i8, i8* %75, i64 7
  %113 = load i8, i8* %112, align 1, !tbaa !4
  %114 = getelementptr inbounds i8, i8* %73, i64 7
  %115 = load i8, i8* %114, align 1, !tbaa !4
  %116 = icmp eq i8 %113, %115
  br i1 %116, label %117, label %128

117:                                              ; preds = %111
  %118 = add nuw nsw i64 %74, 8
  %119 = getelementptr inbounds i8, i8* %10, i64 %118
  %120 = load i8, i8* %119, align 1, !tbaa !4
  %121 = getelementptr inbounds i8, i8* %73, i64 8
  %122 = load i8, i8* %121, align 1, !tbaa !4
  %123 = icmp eq i8 %120, %122
  %124 = icmp ult i64 %74, 250
  %125 = select i1 %123, i1 %124, i1 false
  br i1 %125, label %72, label %126, !llvm.loop !105

126:                                              ; preds = %117
  %127 = getelementptr inbounds i8, i8* %10, i64 %118
  br label %142

128:                                              ; preds = %111
  %129 = getelementptr inbounds i8, i8* %75, i64 7
  br label %142

130:                                              ; preds = %105
  %131 = getelementptr inbounds i8, i8* %75, i64 6
  br label %142

132:                                              ; preds = %99
  %133 = getelementptr inbounds i8, i8* %75, i64 5
  br label %142

134:                                              ; preds = %93
  %135 = getelementptr inbounds i8, i8* %75, i64 4
  br label %142

136:                                              ; preds = %87
  %137 = getelementptr inbounds i8, i8* %75, i64 3
  br label %142

138:                                              ; preds = %81
  %139 = getelementptr inbounds i8, i8* %75, i64 2
  br label %142

140:                                              ; preds = %72
  %141 = getelementptr inbounds i8, i8* %75, i64 1
  br label %142

142:                                              ; preds = %140, %138, %136, %134, %132, %130, %128, %126
  %143 = phi i8* [ %127, %126 ], [ %129, %128 ], [ %131, %130 ], [ %133, %132 ], [ %135, %134 ], [ %137, %136 ], [ %139, %138 ], [ %141, %140 ]
  %144 = ptrtoint i8* %143 to i64
  %145 = sub i64 %144, %42
  %146 = trunc i64 %145 to i32
  %147 = add i32 %146, 258
  %148 = icmp sgt i32 %147, %44
  br i1 %148, label %149, label %160

149:                                              ; preds = %142
  store i32 %46, i32* %40, align 8, !tbaa !92
  %150 = icmp slt i32 %147, %39
  br i1 %150, label %151, label %173

151:                                              ; preds = %149
  %152 = shl i64 %145, 32
  %153 = add i64 %152, 1103806595072
  %154 = ashr exact i64 %153, 32
  %155 = getelementptr inbounds i8, i8* %10, i64 %154
  %156 = load i8, i8* %155, align 1, !tbaa !4
  %157 = sext i32 %147 to i64
  %158 = getelementptr inbounds i8, i8* %10, i64 %157
  %159 = load i8, i8* %158, align 1, !tbaa !4
  br label %160

160:                                              ; preds = %142, %151, %43, %55, %61, %65
  %161 = phi i32 [ %44, %43 ], [ %44, %55 ], [ %44, %61 ], [ %44, %65 ], [ %147, %151 ], [ %44, %142 ]
  %162 = phi i8 [ %47, %43 ], [ %47, %55 ], [ %47, %61 ], [ %47, %65 ], [ %156, %151 ], [ %47, %142 ]
  %163 = phi i8 [ %48, %43 ], [ %48, %55 ], [ %48, %61 ], [ %48, %65 ], [ %159, %151 ], [ %48, %142 ]
  %164 = and i32 %46, %22
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i16, i16* %20, i64 %165
  %167 = load i16, i16* %166, align 2, !tbaa !60
  %168 = zext i16 %167 to i32
  %169 = icmp uge i32 %18, %168
  %170 = add i32 %45, -1
  %171 = icmp eq i32 %170, 0
  %172 = select i1 %169, i1 true, i1 %171
  br i1 %172, label %173, label %43, !llvm.loop !106

173:                                              ; preds = %160, %149
  %174 = phi i32 [ %161, %160 ], [ %147, %149 ]
  %175 = icmp ugt i32 %174, %37
  %176 = select i1 %175, i32 %37, i32 %174
  ret i32 %176
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i32> @llvm.usub.sat.v8i32(<8 x i32>, <8 x i32>) #7

; Function Attrs: nounwind uwtable
define i32 @deflateSetDictionary(%struct.z_stream_s* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %138, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %138, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %138, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %138, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !32
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %138

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !36
  switch i32 %23, label %138 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp eq i8* %1, null
  br i1 %25, label %138, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 6
  %28 = load i32, i32* %27, align 8, !tbaa !37
  switch i32 %28, label %35 [
    i32 2, label %138
    i32 1, label %29
  ]

29:                                               ; preds = %26
  %30 = icmp eq i32 %23, 42
  br i1 %30, label %31, label %138

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 29
  %33 = load i32, i32* %32, align 4, !tbaa !72
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %43, label %138

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 29
  %37 = load i32, i32* %36, align 4, !tbaa !72
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %138

39:                                               ; preds = %35
  store i32 0, i32* %27, align 8, !tbaa !37
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 11
  %41 = load i32, i32* %40, align 8, !tbaa !40
  %42 = icmp ugt i32 %41, %2
  br i1 %42, label %72, label %50

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %45 = load i64, i64* %44, align 8, !tbaa !82
  %46 = tail call i64 @adler32(i64 noundef %45, i8* noundef nonnull %1, i32 noundef %2) #25
  store i64 %46, i64* %44, align 8, !tbaa !82
  store i32 0, i32* %27, align 8, !tbaa !37
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 11
  %48 = load i32, i32* %47, align 8, !tbaa !40
  %49 = icmp ugt i32 %48, %2
  br i1 %49, label %72, label %66

50:                                               ; preds = %39
  %51 = icmp eq i32 %28, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 17
  %54 = load i16*, i16** %53, align 8, !tbaa !48
  %55 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 19
  %56 = load i32, i32* %55, align 4, !tbaa !43
  %57 = add i32 %56, -1
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i16, i16* %54, i64 %58
  store i16 0, i16* %59, align 2, !tbaa !60
  %60 = bitcast i16* %54 to i8*
  %61 = shl nuw nsw i64 %58, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %60, i8 0, i64 %61, i1 false)
  %62 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 27
  store i32 0, i32* %62, align 4, !tbaa !70
  %63 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 23
  store i64 0, i64* %63, align 8, !tbaa !71
  %64 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 55
  store i32 0, i32* %64, align 4, !tbaa !73
  %65 = load i32, i32* %40, align 8, !tbaa !40
  br label %66

66:                                               ; preds = %43, %52, %50
  %67 = phi i32* [ %36, %52 ], [ %36, %50 ], [ %32, %43 ]
  %68 = phi i32 [ %65, %52 ], [ %41, %50 ], [ %48, %43 ]
  %69 = sub i32 %2, %68
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %1, i64 %70
  br label %72

72:                                               ; preds = %43, %66, %39
  %73 = phi i32* [ %67, %66 ], [ %36, %39 ], [ %32, %43 ]
  %74 = phi i32 [ %68, %66 ], [ %2, %39 ], [ %2, %43 ]
  %75 = phi i8* [ %71, %66 ], [ %1, %39 ], [ %1, %43 ]
  %76 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 8, !tbaa !84
  %78 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8, !tbaa !89
  store i32 %74, i32* %76, align 8, !tbaa !84
  store i8* %75, i8** %78, align 8, !tbaa !89
  tail call fastcc void @fill_window(%struct.internal_state* noundef nonnull %15)
  %80 = load i32, i32* %73, align 4, !tbaa !72
  %81 = icmp ugt i32 %80, 2
  br i1 %81, label %82, label %127

82:                                               ; preds = %72
  %83 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 27
  %84 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 18
  %85 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 22
  %86 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 14
  %87 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 21
  %88 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 17
  %89 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 16
  %90 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 13
  br label %91

91:                                               ; preds = %82, %124
  %92 = phi i32 [ %80, %82 ], [ %125, %124 ]
  %93 = load i32, i32* %83, align 4, !tbaa !70
  %94 = add i32 %92, -2
  %95 = load i32, i32* %85, align 8, !tbaa !45
  %96 = load i8*, i8** %86, align 8, !tbaa !46
  %97 = load i32, i32* %87, align 4, !tbaa !44
  %98 = load i16*, i16** %88, align 8, !tbaa !48
  %99 = load i16*, i16** %89, align 8, !tbaa !47
  %100 = load i32, i32* %90, align 8, !tbaa !41
  %101 = load i32, i32* %84, align 8, !tbaa !77
  br label %102

102:                                              ; preds = %102, %91
  %103 = phi i32 [ %101, %91 ], [ %113, %102 ]
  %104 = phi i32 [ %93, %91 ], [ %121, %102 ]
  %105 = phi i32 [ %94, %91 ], [ %122, %102 ]
  %106 = shl i32 %103, %95
  %107 = add i32 %104, 2
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %96, i64 %108
  %110 = load i8, i8* %109, align 1, !tbaa !4
  %111 = zext i8 %110 to i32
  %112 = xor i32 %106, %111
  %113 = and i32 %112, %97
  store i32 %113, i32* %84, align 8, !tbaa !77
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i16, i16* %98, i64 %114
  %116 = load i16, i16* %115, align 2, !tbaa !60
  %117 = and i32 %100, %104
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %99, i64 %118
  store i16 %116, i16* %119, align 2, !tbaa !60
  %120 = trunc i32 %104 to i16
  store i16 %120, i16* %115, align 2, !tbaa !60
  %121 = add i32 %104, 1
  %122 = add i32 %105, -1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %102, !llvm.loop !107

124:                                              ; preds = %102
  store i32 %121, i32* %83, align 4, !tbaa !70
  store i32 2, i32* %73, align 4, !tbaa !72
  tail call fastcc void @fill_window(%struct.internal_state* noundef nonnull %15)
  %125 = load i32, i32* %73, align 4, !tbaa !72
  %126 = icmp ugt i32 %125, 2
  br i1 %126, label %91, label %127, !llvm.loop !108

127:                                              ; preds = %124, %72
  %128 = phi i32 [ %80, %72 ], [ %125, %124 ]
  %129 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 27
  %130 = load i32, i32* %129, align 4, !tbaa !70
  %131 = add i32 %130, %128
  store i32 %131, i32* %129, align 4, !tbaa !70
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 23
  store i64 %132, i64* %133, align 8, !tbaa !71
  %134 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 55
  store i32 %128, i32* %134, align 4, !tbaa !73
  store i32 0, i32* %73, align 4, !tbaa !72
  %135 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 30
  store i32 2, i32* %135, align 8, !tbaa !74
  %136 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 24
  store i32 2, i32* %136, align 8, !tbaa !75
  %137 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 26
  store i32 0, i32* %137, align 8, !tbaa !76
  store i8* %79, i8** %78, align 8, !tbaa !89
  store i32 %77, i32* %76, align 8, !tbaa !84
  store i32 %28, i32* %27, align 8, !tbaa !37
  br label %138

138:                                              ; preds = %26, %13, %17, %21, %3, %5, %9, %35, %29, %31, %24, %127
  %139 = phi i32 [ 0, %127 ], [ -2, %24 ], [ -2, %31 ], [ -2, %29 ], [ -2, %26 ], [ -2, %35 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ]
  ret i32 %139
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define i32 @deflateGetDictionary(%struct.z_stream_s* noundef readonly %0, i8* noundef writeonly %1, i32* noundef writeonly %2) local_unnamed_addr #8 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %50, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !32
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %50

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !36
  switch i32 %23, label %50 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 27
  %26 = load i32, i32* %25, align 4, !tbaa !70
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 29
  %28 = load i32, i32* %27, align 4, !tbaa !72
  %29 = add i32 %28, %26
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 11
  %31 = load i32, i32* %30, align 8, !tbaa !40
  %32 = icmp ugt i32 %29, %31
  %33 = select i1 %32, i32 %31, i32 %29
  %34 = icmp ne i8* %1, null
  %35 = icmp ne i32 %33, 0
  %36 = select i1 %34, i1 %35, i1 false
  br i1 %36, label %37, label %47

37:                                               ; preds = %24
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 14
  %39 = load i8*, i8** %38, align 8, !tbaa !46
  %40 = zext i32 %26 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = zext i32 %28 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = zext i32 %33 to i64
  %45 = sub nsw i64 0, %44
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %46, i64 %44, i1 false)
  br label %47

47:                                               ; preds = %37, %24
  %48 = icmp eq i32* %2, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  store i32 %33, i32* %2, align 4, !tbaa !16
  br label %50

50:                                               ; preds = %13, %17, %21, %3, %5, %9, %47, %49
  %51 = phi i32 [ 0, %49 ], [ 0, %47 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ]
  ret i32 %51
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @deflateSetHeader(%struct.z_stream_s* noundef readonly %0, %struct.gz_header_s* noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = load %struct.internal_state*, %struct.internal_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.internal_state* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !32
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !36
  switch i32 %22, label %29 [
    i32 42, label %23
    i32 57, label %23
    i32 69, label %23
    i32 73, label %23
    i32 91, label %23
    i32 103, label %23
    i32 113, label %23
    i32 666, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 6
  %25 = load i32, i32* %24, align 8, !tbaa !37
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  store %struct.gz_header_s* %1, %struct.gz_header_s** %28, align 8, !tbaa !38
  br label %29

29:                                               ; preds = %12, %16, %20, %2, %4, %8, %23, %27
  %30 = phi i32 [ 0, %27 ], [ -2, %23 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %20 ], [ -2, %16 ], [ -2, %12 ]
  ret i32 %30
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @deflatePending(%struct.z_stream_s* noundef readonly %0, i32* noundef writeonly %1, i32* noundef writeonly %2) local_unnamed_addr #9 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !32
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %35

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !36
  switch i32 %23, label %35 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp eq i32* %1, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 5
  %28 = load i64, i64* %27, align 8, !tbaa !80
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %1, align 4, !tbaa !16
  br label %30

30:                                               ; preds = %26, %24
  %31 = icmp eq i32* %2, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 57
  %34 = load i32, i32* %33, align 4, !tbaa !85
  store i32 %34, i32* %2, align 4, !tbaa !16
  br label %35

35:                                               ; preds = %13, %17, %21, %3, %5, %9, %30, %32
  %36 = phi i32 [ 0, %32 ], [ 0, %30 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ]
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define i32 @deflatePrime(%struct.z_stream_s* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %54, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %54, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !32
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %54

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !36
  switch i32 %23, label %54 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp ugt i32 %1, 16
  br i1 %25, label %54, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 48
  %28 = load i8*, i8** %27, align 8, !tbaa !54
  %29 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 4
  %30 = load i8*, i8** %29, align 8, !tbaa !81
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  %32 = icmp ult i8* %28, %31
  br i1 %32, label %54, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 57
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 56
  br label %36

36:                                               ; preds = %33, %36
  %37 = phi i32 [ %52, %36 ], [ %1, %33 ]
  %38 = phi i32 [ %51, %36 ], [ %2, %33 ]
  %39 = load i32, i32* %34, align 4, !tbaa !85
  %40 = sub nsw i32 16, %39
  %41 = icmp sgt i32 %40, %37
  %42 = select i1 %41, i32 %37, i32 %40
  %43 = shl nsw i32 -1, %42
  %44 = xor i32 %43, -1
  %45 = and i32 %38, %44
  %46 = shl i32 %45, %39
  %47 = load i16, i16* %35, align 8, !tbaa !109
  %48 = trunc i32 %46 to i16
  %49 = or i16 %47, %48
  store i16 %49, i16* %35, align 8, !tbaa !109
  %50 = add nsw i32 %42, %39
  store i32 %50, i32* %34, align 4, !tbaa !85
  tail call void @_tr_flush_bits(%struct.internal_state* noundef nonnull %15) #25
  %51 = ashr i32 %38, %42
  %52 = sub nsw i32 %37, %42
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %36, !llvm.loop !110

54:                                               ; preds = %36, %13, %17, %21, %3, %5, %9, %24, %26
  %55 = phi i32 [ -5, %26 ], [ -5, %24 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ], [ 0, %36 ]
  ret i32 %55
}

; Function Attrs: nounwind uwtable
define i32 @deflateParams(%struct.z_stream_s* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %106, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %106, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %106, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %106, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !32
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %106

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !36
  switch i32 %23, label %106 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp eq i32 %1, -1
  %26 = select i1 %25, i32 6, i32 %1
  %27 = icmp ugt i32 %26, 9
  %28 = icmp ugt i32 %2, 4
  %29 = or i1 %28, %27
  br i1 %29, label %106, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 33
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 34
  %33 = load i32, i32* %32, align 8, !tbaa !57
  %34 = icmp eq i32 %33, %2
  br i1 %34, label %35, label %44

35:                                               ; preds = %30
  %36 = load i32, i32* %31, align 4, !tbaa !56
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %37, i32 4
  %39 = load i32 (%struct.internal_state*, i32)*, i32 (%struct.internal_state*, i32)** %38, align 8, !tbaa !111
  %40 = zext i32 %26 to i64
  %41 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %40, i32 4
  %42 = load i32 (%struct.internal_state*, i32)*, i32 (%struct.internal_state*, i32)** %41, align 8, !tbaa !111
  %43 = icmp eq i32 (%struct.internal_state*, i32)* %39, %42
  br i1 %43, label %67, label %44

44:                                               ; preds = %35, %30
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 10
  %46 = load i32, i32* %45, align 4, !tbaa !83
  %47 = icmp eq i32 %46, -2
  br i1 %47, label %67, label %48

48:                                               ; preds = %44
  %49 = tail call i32 @deflate(%struct.z_stream_s* noundef nonnull %0, i32 noundef 5)
  %50 = icmp eq i32 %49, -2
  br i1 %50, label %106, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %53 = load i32, i32* %52, align 8, !tbaa !84
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %106

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 27
  %57 = load i32, i32* %56, align 4, !tbaa !70
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 23
  %60 = load i64, i64* %59, align 8, !tbaa !71
  %61 = sub nsw i64 %58, %60
  %62 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 29
  %63 = load i32, i32* %62, align 4, !tbaa !72
  %64 = zext i32 %63 to i64
  %65 = sub nsw i64 0, %64
  %66 = icmp eq i64 %61, %65
  br i1 %66, label %67, label %106

67:                                               ; preds = %55, %44, %35
  %68 = load i32, i32* %31, align 4, !tbaa !56
  %69 = icmp eq i32 %68, %26
  br i1 %69, label %105, label %70

70:                                               ; preds = %67
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %72, label %87

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 54
  %74 = load i32, i32* %73, align 8, !tbaa !91
  switch i32 %74, label %76 [
    i32 0, label %87
    i32 1, label %75
  ]

75:                                               ; preds = %72
  tail call fastcc void @slide_hash(%struct.internal_state* noundef nonnull %15)
  br label %86

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 17
  %78 = load i16*, i16** %77, align 8, !tbaa !48
  %79 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 19
  %80 = load i32, i32* %79, align 4, !tbaa !43
  %81 = add i32 %80, -1
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i16, i16* %78, i64 %82
  store i16 0, i16* %83, align 2, !tbaa !60
  %84 = bitcast i16* %78 to i8*
  %85 = shl nuw nsw i64 %82, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %84, i8 0, i64 %85, i1 false)
  br label %86

86:                                               ; preds = %76, %75
  store i32 0, i32* %73, align 8, !tbaa !91
  br label %87

87:                                               ; preds = %72, %86, %70
  store i32 %26, i32* %31, align 4, !tbaa !56
  %88 = zext i32 %26 to i64
  %89 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %88, i32 1
  %90 = load i16, i16* %89, align 2, !tbaa !61
  %91 = zext i16 %90 to i32
  %92 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 32
  store i32 %91, i32* %92, align 8, !tbaa !63
  %93 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %88, i32 0
  %94 = load i16, i16* %93, align 16, !tbaa !64
  %95 = zext i16 %94 to i32
  %96 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 35
  store i32 %95, i32* %96, align 4, !tbaa !65
  %97 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %88, i32 2
  %98 = load i16, i16* %97, align 4, !tbaa !66
  %99 = zext i16 %98 to i32
  %100 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 36
  store i32 %99, i32* %100, align 8, !tbaa !67
  %101 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %88, i32 3
  %102 = load i16, i16* %101, align 2, !tbaa !68
  %103 = zext i16 %102 to i32
  %104 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 31
  store i32 %103, i32* %104, align 4, !tbaa !69
  br label %105

105:                                              ; preds = %87, %67
  store i32 %2, i32* %32, align 8, !tbaa !57
  br label %106

106:                                              ; preds = %51, %48, %13, %17, %21, %3, %5, %9, %24, %55, %105
  %107 = phi i32 [ 0, %105 ], [ -5, %55 ], [ -2, %24 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ], [ -5, %51 ], [ -2, %48 ]
  ret i32 %107
}

; Function Attrs: nounwind uwtable
define i32 @deflate(%struct.z_stream_s* noundef %0, i32 noundef %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %915, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %915, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %915, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = load %struct.internal_state*, %struct.internal_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.internal_state* %14, null
  br i1 %15, label %915, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !32
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %915

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !36
  switch i32 %22, label %915 [
    i32 42, label %23
    i32 57, label %23
    i32 69, label %23
    i32 73, label %23
    i32 91, label %23
    i32 103, label %23
    i32 113, label %23
    i32 666, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20
  %24 = icmp ugt i32 %1, 5
  br i1 %24, label %915, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8, !tbaa !87
  %28 = icmp eq i8* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8, !tbaa !84
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8, !tbaa !89
  %36 = icmp eq i8* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33, %29
  %38 = icmp eq i32 %22, 666
  %39 = icmp ne i32 %1, 4
  %40 = and i1 %39, %38
  br i1 %40, label %41, label %44

41:                                               ; preds = %37, %33, %25
  %42 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @z_errmsg, i64 0, i64 4), align 16, !tbaa !53
  %43 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* %42, i8** %43, align 8, !tbaa !25
  br label %915

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 8, !tbaa !86
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @z_errmsg, i64 0, i64 7), align 8, !tbaa !53
  %50 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* %49, i8** %50, align 8, !tbaa !25
  br label %915

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 10
  %53 = load i32, i32* %52, align 4, !tbaa !83
  store i32 %1, i32* %52, align 4, !tbaa !83
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 5
  %55 = load i64, i64* %54, align 8, !tbaa !80
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %91, label %57

57:                                               ; preds = %51
  tail call void @_tr_flush_bits(%struct.internal_state* noundef nonnull %14) #25
  %58 = load i64, i64* %54, align 8, !tbaa !80
  %59 = trunc i64 %58 to i32
  %60 = load i32, i32* %45, align 8, !tbaa !86
  %61 = icmp ult i32 %60, %59
  %62 = select i1 %61, i32 %60, i32 %59
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %84, label %64

64:                                               ; preds = %57
  %65 = load i8*, i8** %26, align 8, !tbaa !87
  %66 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 4
  %67 = load i8*, i8** %66, align 8, !tbaa !81
  %68 = zext i32 %62 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %67, i64 %68, i1 false) #25
  %69 = load i8*, i8** %26, align 8, !tbaa !87
  %70 = getelementptr inbounds i8, i8* %69, i64 %68
  store i8* %70, i8** %26, align 8, !tbaa !87
  %71 = load i8*, i8** %66, align 8, !tbaa !81
  %72 = getelementptr inbounds i8, i8* %71, i64 %68
  store i8* %72, i8** %66, align 8, !tbaa !81
  %73 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %74 = load i64, i64* %73, align 8, !tbaa !88
  %75 = add i64 %74, %68
  store i64 %75, i64* %73, align 8, !tbaa !88
  %76 = load i32, i32* %45, align 8, !tbaa !86
  %77 = sub i32 %76, %62
  store i32 %77, i32* %45, align 8, !tbaa !86
  %78 = load i64, i64* %54, align 8, !tbaa !80
  %79 = sub i64 %78, %68
  store i64 %79, i64* %54, align 8, !tbaa !80
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %64
  %82 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %83 = load i8*, i8** %82, align 8, !tbaa !51
  store i8* %83, i8** %66, align 8, !tbaa !81
  br label %84

84:                                               ; preds = %57, %64, %81
  %85 = phi i64 [ %58, %57 ], [ %79, %64 ], [ 0, %81 ]
  %86 = phi i32 [ %60, %57 ], [ %77, %64 ], [ %77, %81 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = load i32, i32* %21, align 8, !tbaa !36
  br label %106

90:                                               ; preds = %84
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

91:                                               ; preds = %51
  br i1 %32, label %92, label %106

92:                                               ; preds = %91
  %93 = shl nuw nsw i32 %1, 1
  %94 = icmp ugt i32 %1, 4
  %95 = select i1 %94, i32 -9, i32 0
  %96 = add nsw i32 %95, %93
  %97 = shl nsw i32 %53, 1
  %98 = icmp sgt i32 %53, 4
  %99 = select i1 %98, i32 -9, i32 0
  %100 = add i32 %99, %97
  %101 = icmp sle i32 %96, %100
  %102 = and i1 %39, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %92
  %104 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @z_errmsg, i64 0, i64 7), align 8, !tbaa !53
  %105 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* %104, i8** %105, align 8, !tbaa !25
  br label %915

106:                                              ; preds = %88, %91, %92
  %107 = phi i64 [ %85, %88 ], [ 0, %91 ], [ 0, %92 ]
  %108 = phi i32 [ %89, %88 ], [ %22, %91 ], [ %22, %92 ]
  switch i32 %108, label %196 [
    i32 666, label %109
    i32 42, label %115
  ]

109:                                              ; preds = %106
  %110 = load i32, i32* %30, align 8, !tbaa !84
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %749, label %112

112:                                              ; preds = %109
  %113 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @z_errmsg, i64 0, i64 7), align 8, !tbaa !53
  %114 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* %113, i8** %114, align 8, !tbaa !25
  br label %915

115:                                              ; preds = %106
  %116 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 6
  %117 = load i32, i32* %116, align 8, !tbaa !37
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  store i32 113, i32* %21, align 8, !tbaa !36
  br label %746

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 12
  %122 = load i32, i32* %121, align 4, !tbaa !39
  %123 = shl i32 %122, 12
  %124 = add i32 %123, -30720
  %125 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %126 = load i32, i32* %125, align 8, !tbaa !57
  %127 = icmp sgt i32 %126, 1
  br i1 %127, label %137, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 33
  %130 = load i32, i32* %129, align 4, !tbaa !56
  %131 = icmp slt i32 %130, 2
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = icmp ult i32 %130, 6
  br i1 %133, label %137, label %134

134:                                              ; preds = %132
  %135 = icmp eq i32 %130, 6
  %136 = select i1 %135, i32 128, i32 192
  br label %137

137:                                              ; preds = %134, %132, %120, %128
  %138 = phi i32 [ 0, %128 ], [ 0, %120 ], [ 64, %132 ], [ %136, %134 ]
  %139 = or i32 %138, %124
  %140 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 27
  %141 = load i32, i32* %140, align 4, !tbaa !70
  %142 = icmp eq i32 %141, 0
  %143 = or i32 %139, 32
  %144 = select i1 %142, i32 %139, i32 %143
  %145 = urem i32 %144, 31
  %146 = or i32 %145, %144
  %147 = lshr i32 %144, 8
  %148 = trunc i32 %147 to i8
  %149 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %150 = load i8*, i8** %149, align 8, !tbaa !51
  %151 = add i64 %107, 1
  store i64 %151, i64* %54, align 8, !tbaa !80
  %152 = getelementptr inbounds i8, i8* %150, i64 %107
  store i8 %148, i8* %152, align 1, !tbaa !4
  %153 = trunc i32 %146 to i8
  %154 = xor i8 %153, 31
  %155 = load i8*, i8** %149, align 8, !tbaa !51
  %156 = load i64, i64* %54, align 8, !tbaa !80
  %157 = add i64 %156, 1
  store i64 %157, i64* %54, align 8, !tbaa !80
  %158 = getelementptr inbounds i8, i8* %155, i64 %156
  store i8 %154, i8* %158, align 1, !tbaa !4
  %159 = load i32, i32* %140, align 4, !tbaa !70
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %188, label %161

161:                                              ; preds = %137
  %162 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %163 = load i64, i64* %162, align 8, !tbaa !82
  %164 = lshr i64 %163, 16
  %165 = lshr i64 %163, 24
  %166 = trunc i64 %165 to i8
  %167 = load i8*, i8** %149, align 8, !tbaa !51
  %168 = load i64, i64* %54, align 8, !tbaa !80
  %169 = add i64 %168, 1
  store i64 %169, i64* %54, align 8, !tbaa !80
  %170 = getelementptr inbounds i8, i8* %167, i64 %168
  store i8 %166, i8* %170, align 1, !tbaa !4
  %171 = trunc i64 %164 to i8
  %172 = load i8*, i8** %149, align 8, !tbaa !51
  %173 = load i64, i64* %54, align 8, !tbaa !80
  %174 = add i64 %173, 1
  store i64 %174, i64* %54, align 8, !tbaa !80
  %175 = getelementptr inbounds i8, i8* %172, i64 %173
  store i8 %171, i8* %175, align 1, !tbaa !4
  %176 = load i64, i64* %162, align 8, !tbaa !82
  %177 = trunc i64 %176 to i8
  %178 = lshr i64 %176, 8
  %179 = trunc i64 %178 to i8
  %180 = load i8*, i8** %149, align 8, !tbaa !51
  %181 = load i64, i64* %54, align 8, !tbaa !80
  %182 = add i64 %181, 1
  store i64 %182, i64* %54, align 8, !tbaa !80
  %183 = getelementptr inbounds i8, i8* %180, i64 %181
  store i8 %179, i8* %183, align 1, !tbaa !4
  %184 = load i8*, i8** %149, align 8, !tbaa !51
  %185 = load i64, i64* %54, align 8, !tbaa !80
  %186 = add i64 %185, 1
  store i64 %186, i64* %54, align 8, !tbaa !80
  %187 = getelementptr inbounds i8, i8* %184, i64 %185
  store i8 %177, i8* %187, align 1, !tbaa !4
  br label %188

188:                                              ; preds = %161, %137
  %189 = tail call i64 @adler32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  %190 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %189, i64* %190, align 8, !tbaa !82
  store i32 113, i32* %21, align 8, !tbaa !36
  tail call fastcc void @flush_pending(%struct.z_stream_s* noundef nonnull %0)
  %191 = load i64, i64* %54, align 8, !tbaa !80
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = load i32, i32* %21, align 8, !tbaa !36
  br label %196

195:                                              ; preds = %188
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

196:                                              ; preds = %106, %193
  %197 = phi i32 [ %194, %193 ], [ %108, %106 ]
  %198 = icmp eq i32 %197, 57
  br i1 %198, label %199, label %387

199:                                              ; preds = %196
  %200 = tail call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  %201 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %200, i64* %201, align 8, !tbaa !82
  %202 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %203 = load i8*, i8** %202, align 8, !tbaa !51
  %204 = load i64, i64* %54, align 8, !tbaa !80
  %205 = add i64 %204, 1
  store i64 %205, i64* %54, align 8, !tbaa !80
  %206 = getelementptr inbounds i8, i8* %203, i64 %204
  store i8 31, i8* %206, align 1, !tbaa !4
  %207 = load i8*, i8** %202, align 8, !tbaa !51
  %208 = load i64, i64* %54, align 8, !tbaa !80
  %209 = add i64 %208, 1
  store i64 %209, i64* %54, align 8, !tbaa !80
  %210 = getelementptr inbounds i8, i8* %207, i64 %208
  store i8 -117, i8* %210, align 1, !tbaa !4
  %211 = load i8*, i8** %202, align 8, !tbaa !51
  %212 = load i64, i64* %54, align 8, !tbaa !80
  %213 = add i64 %212, 1
  store i64 %213, i64* %54, align 8, !tbaa !80
  %214 = getelementptr inbounds i8, i8* %211, i64 %212
  store i8 8, i8* %214, align 1, !tbaa !4
  %215 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %216 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %217 = icmp eq %struct.gz_header_s* %216, null
  br i1 %217, label %218, label %262

218:                                              ; preds = %199
  %219 = load i8*, i8** %202, align 8, !tbaa !51
  %220 = load i64, i64* %54, align 8, !tbaa !80
  %221 = add i64 %220, 1
  store i64 %221, i64* %54, align 8, !tbaa !80
  %222 = getelementptr inbounds i8, i8* %219, i64 %220
  store i8 0, i8* %222, align 1, !tbaa !4
  %223 = load i8*, i8** %202, align 8, !tbaa !51
  %224 = load i64, i64* %54, align 8, !tbaa !80
  %225 = add i64 %224, 1
  store i64 %225, i64* %54, align 8, !tbaa !80
  %226 = getelementptr inbounds i8, i8* %223, i64 %224
  store i8 0, i8* %226, align 1, !tbaa !4
  %227 = load i8*, i8** %202, align 8, !tbaa !51
  %228 = load i64, i64* %54, align 8, !tbaa !80
  %229 = add i64 %228, 1
  store i64 %229, i64* %54, align 8, !tbaa !80
  %230 = getelementptr inbounds i8, i8* %227, i64 %228
  store i8 0, i8* %230, align 1, !tbaa !4
  %231 = load i8*, i8** %202, align 8, !tbaa !51
  %232 = load i64, i64* %54, align 8, !tbaa !80
  %233 = add i64 %232, 1
  store i64 %233, i64* %54, align 8, !tbaa !80
  %234 = getelementptr inbounds i8, i8* %231, i64 %232
  store i8 0, i8* %234, align 1, !tbaa !4
  %235 = load i8*, i8** %202, align 8, !tbaa !51
  %236 = load i64, i64* %54, align 8, !tbaa !80
  %237 = add i64 %236, 1
  store i64 %237, i64* %54, align 8, !tbaa !80
  %238 = getelementptr inbounds i8, i8* %235, i64 %236
  store i8 0, i8* %238, align 1, !tbaa !4
  %239 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 33
  %240 = load i32, i32* %239, align 4, !tbaa !56
  %241 = icmp eq i32 %240, 9
  br i1 %241, label %249, label %242

242:                                              ; preds = %218
  %243 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %244 = load i32, i32* %243, align 8, !tbaa !57
  %245 = icmp sgt i32 %244, 1
  %246 = icmp slt i32 %240, 2
  %247 = select i1 %245, i1 true, i1 %246
  %248 = select i1 %247, i8 4, i8 0
  br label %249

249:                                              ; preds = %218, %242
  %250 = phi i8 [ %248, %242 ], [ 2, %218 ]
  %251 = load i8*, i8** %202, align 8, !tbaa !51
  %252 = load i64, i64* %54, align 8, !tbaa !80
  %253 = add i64 %252, 1
  store i64 %253, i64* %54, align 8, !tbaa !80
  %254 = getelementptr inbounds i8, i8* %251, i64 %252
  store i8 %250, i8* %254, align 1, !tbaa !4
  %255 = load i8*, i8** %202, align 8, !tbaa !51
  %256 = load i64, i64* %54, align 8, !tbaa !80
  %257 = add i64 %256, 1
  store i64 %257, i64* %54, align 8, !tbaa !80
  %258 = getelementptr inbounds i8, i8* %255, i64 %256
  store i8 3, i8* %258, align 1, !tbaa !4
  store i32 113, i32* %21, align 8, !tbaa !36
  tail call fastcc void @flush_pending(%struct.z_stream_s* noundef nonnull %0)
  %259 = load i64, i64* %54, align 8, !tbaa !80
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %385, label %261

261:                                              ; preds = %249
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

262:                                              ; preds = %199
  %263 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %216, i64 0, i32 0
  %264 = load i32, i32* %263, align 8, !tbaa !112
  %265 = icmp ne i32 %264, 0
  %266 = zext i1 %265 to i8
  %267 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %216, i64 0, i32 11
  %268 = load i32, i32* %267, align 4, !tbaa !114
  %269 = icmp eq i32 %268, 0
  %270 = select i1 %269, i8 0, i8 2
  %271 = or i8 %270, %266
  %272 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %216, i64 0, i32 4
  %273 = load i8*, i8** %272, align 8, !tbaa !115
  %274 = icmp eq i8* %273, null
  %275 = select i1 %274, i8 0, i8 4
  %276 = or i8 %271, %275
  %277 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %216, i64 0, i32 7
  %278 = load i8*, i8** %277, align 8, !tbaa !116
  %279 = icmp eq i8* %278, null
  %280 = select i1 %279, i8 0, i8 8
  %281 = or i8 %276, %280
  %282 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %216, i64 0, i32 9
  %283 = load i8*, i8** %282, align 8, !tbaa !117
  %284 = icmp eq i8* %283, null
  %285 = select i1 %284, i8 0, i8 16
  %286 = or i8 %281, %285
  %287 = load i8*, i8** %202, align 8, !tbaa !51
  %288 = load i64, i64* %54, align 8, !tbaa !80
  %289 = add i64 %288, 1
  store i64 %289, i64* %54, align 8, !tbaa !80
  %290 = getelementptr inbounds i8, i8* %287, i64 %288
  store i8 %286, i8* %290, align 1, !tbaa !4
  %291 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %292 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %291, i64 0, i32 1
  %293 = load i64, i64* %292, align 8, !tbaa !118
  %294 = trunc i64 %293 to i8
  %295 = load i8*, i8** %202, align 8, !tbaa !51
  %296 = load i64, i64* %54, align 8, !tbaa !80
  %297 = add i64 %296, 1
  store i64 %297, i64* %54, align 8, !tbaa !80
  %298 = getelementptr inbounds i8, i8* %295, i64 %296
  store i8 %294, i8* %298, align 1, !tbaa !4
  %299 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %300 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %299, i64 0, i32 1
  %301 = load i64, i64* %300, align 8, !tbaa !118
  %302 = lshr i64 %301, 8
  %303 = trunc i64 %302 to i8
  %304 = load i8*, i8** %202, align 8, !tbaa !51
  %305 = load i64, i64* %54, align 8, !tbaa !80
  %306 = add i64 %305, 1
  store i64 %306, i64* %54, align 8, !tbaa !80
  %307 = getelementptr inbounds i8, i8* %304, i64 %305
  store i8 %303, i8* %307, align 1, !tbaa !4
  %308 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %309 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %308, i64 0, i32 1
  %310 = load i64, i64* %309, align 8, !tbaa !118
  %311 = lshr i64 %310, 16
  %312 = trunc i64 %311 to i8
  %313 = load i8*, i8** %202, align 8, !tbaa !51
  %314 = load i64, i64* %54, align 8, !tbaa !80
  %315 = add i64 %314, 1
  store i64 %315, i64* %54, align 8, !tbaa !80
  %316 = getelementptr inbounds i8, i8* %313, i64 %314
  store i8 %312, i8* %316, align 1, !tbaa !4
  %317 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %318 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %317, i64 0, i32 1
  %319 = load i64, i64* %318, align 8, !tbaa !118
  %320 = lshr i64 %319, 24
  %321 = trunc i64 %320 to i8
  %322 = load i8*, i8** %202, align 8, !tbaa !51
  %323 = load i64, i64* %54, align 8, !tbaa !80
  %324 = add i64 %323, 1
  store i64 %324, i64* %54, align 8, !tbaa !80
  %325 = getelementptr inbounds i8, i8* %322, i64 %323
  store i8 %321, i8* %325, align 1, !tbaa !4
  %326 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 33
  %327 = load i32, i32* %326, align 4, !tbaa !56
  %328 = icmp eq i32 %327, 9
  br i1 %328, label %336, label %329

329:                                              ; preds = %262
  %330 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %331 = load i32, i32* %330, align 8, !tbaa !57
  %332 = icmp sgt i32 %331, 1
  %333 = icmp slt i32 %327, 2
  %334 = select i1 %332, i1 true, i1 %333
  %335 = select i1 %334, i8 4, i8 0
  br label %336

336:                                              ; preds = %262, %329
  %337 = phi i8 [ %335, %329 ], [ 2, %262 ]
  %338 = load i8*, i8** %202, align 8, !tbaa !51
  %339 = load i64, i64* %54, align 8, !tbaa !80
  %340 = add i64 %339, 1
  store i64 %340, i64* %54, align 8, !tbaa !80
  %341 = getelementptr inbounds i8, i8* %338, i64 %339
  store i8 %337, i8* %341, align 1, !tbaa !4
  %342 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %343 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %342, i64 0, i32 3
  %344 = load i32, i32* %343, align 4, !tbaa !119
  %345 = trunc i32 %344 to i8
  %346 = load i8*, i8** %202, align 8, !tbaa !51
  %347 = load i64, i64* %54, align 8, !tbaa !80
  %348 = add i64 %347, 1
  store i64 %348, i64* %54, align 8, !tbaa !80
  %349 = getelementptr inbounds i8, i8* %346, i64 %347
  store i8 %345, i8* %349, align 1, !tbaa !4
  %350 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %351 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %350, i64 0, i32 4
  %352 = load i8*, i8** %351, align 8, !tbaa !115
  %353 = icmp eq i8* %352, null
  br i1 %353, label %372, label %354

354:                                              ; preds = %336
  %355 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %350, i64 0, i32 5
  %356 = load i32, i32* %355, align 8, !tbaa !120
  %357 = trunc i32 %356 to i8
  %358 = load i8*, i8** %202, align 8, !tbaa !51
  %359 = load i64, i64* %54, align 8, !tbaa !80
  %360 = add i64 %359, 1
  store i64 %360, i64* %54, align 8, !tbaa !80
  %361 = getelementptr inbounds i8, i8* %358, i64 %359
  store i8 %357, i8* %361, align 1, !tbaa !4
  %362 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  %363 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %362, i64 0, i32 5
  %364 = load i32, i32* %363, align 8, !tbaa !120
  %365 = lshr i32 %364, 8
  %366 = trunc i32 %365 to i8
  %367 = load i8*, i8** %202, align 8, !tbaa !51
  %368 = load i64, i64* %54, align 8, !tbaa !80
  %369 = add i64 %368, 1
  store i64 %369, i64* %54, align 8, !tbaa !80
  %370 = getelementptr inbounds i8, i8* %367, i64 %368
  store i8 %366, i8* %370, align 1, !tbaa !4
  %371 = load %struct.gz_header_s*, %struct.gz_header_s** %215, align 8, !tbaa !38
  br label %372

372:                                              ; preds = %354, %336
  %373 = phi %struct.gz_header_s* [ %371, %354 ], [ %350, %336 ]
  %374 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %373, i64 0, i32 11
  %375 = load i32, i32* %374, align 4, !tbaa !114
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %383, label %377

377:                                              ; preds = %372
  %378 = load i64, i64* %201, align 8, !tbaa !82
  %379 = load i8*, i8** %202, align 8, !tbaa !51
  %380 = load i64, i64* %54, align 8, !tbaa !80
  %381 = trunc i64 %380 to i32
  %382 = tail call i64 @crc32(i64 noundef %378, i8* noundef %379, i32 noundef %381) #25
  store i64 %382, i64* %201, align 8, !tbaa !82
  br label %383

383:                                              ; preds = %372, %377
  %384 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  store i64 0, i64* %384, align 8, !tbaa !121
  store i32 69, i32* %21, align 8, !tbaa !36
  br label %389

385:                                              ; preds = %249
  %386 = load i32, i32* %21, align 8, !tbaa !36
  br label %387

387:                                              ; preds = %385, %196
  %388 = phi i32 [ %386, %385 ], [ %197, %196 ]
  switch i32 %388, label %746 [
    i32 69, label %389
    i32 73, label %516
    i32 91, label %613
    i32 103, label %709
  ]

389:                                              ; preds = %387, %383
  %390 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %391 = load %struct.gz_header_s*, %struct.gz_header_s** %390, align 8, !tbaa !38
  %392 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %391, i64 0, i32 4
  %393 = load i8*, i8** %392, align 8, !tbaa !115
  %394 = icmp eq i8* %393, null
  br i1 %394, label %515, label %395

395:                                              ; preds = %389
  %396 = load i64, i64* %54, align 8, !tbaa !80
  %397 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %391, i64 0, i32 5
  %398 = load i32, i32* %397, align 8, !tbaa !120
  %399 = and i32 %398, 65535
  %400 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  %401 = load i64, i64* %400, align 8, !tbaa !121
  %402 = trunc i64 %401 to i32
  %403 = sub i32 %399, %402
  %404 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %405 = zext i32 %403 to i64
  %406 = add i64 %396, %405
  %407 = load i64, i64* %404, align 8, !tbaa !52
  %408 = icmp ugt i64 %406, %407
  br i1 %408, label %409, label %489

409:                                              ; preds = %395
  %410 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %411 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %412 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  br label %413

413:                                              ; preds = %478, %409
  %414 = phi i64 [ %401, %409 ], [ %482, %478 ]
  %415 = phi i8* [ %393, %409 ], [ %481, %478 ]
  %416 = phi i64 [ %407, %409 ], [ %476, %478 ]
  %417 = phi i64 [ %396, %409 ], [ 0, %478 ]
  %418 = phi i32 [ %403, %409 ], [ %474, %478 ]
  %419 = sub i64 %416, %417
  %420 = trunc i64 %419 to i32
  %421 = load i8*, i8** %410, align 8, !tbaa !51
  %422 = getelementptr inbounds i8, i8* %421, i64 %417
  %423 = getelementptr inbounds i8, i8* %415, i64 %414
  %424 = and i64 %419, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %422, i8* align 1 %423, i64 %424, i1 false)
  %425 = load i64, i64* %404, align 8, !tbaa !52
  store i64 %425, i64* %54, align 8, !tbaa !80
  %426 = load %struct.gz_header_s*, %struct.gz_header_s** %390, align 8, !tbaa !38
  %427 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %426, i64 0, i32 11
  %428 = load i32, i32* %427, align 4, !tbaa !114
  %429 = icmp ne i32 %428, 0
  %430 = icmp ugt i64 %425, %417
  %431 = select i1 %429, i1 %430, i1 false
  br i1 %431, label %432, label %439

432:                                              ; preds = %413
  %433 = load i64, i64* %411, align 8, !tbaa !82
  %434 = load i8*, i8** %410, align 8, !tbaa !51
  %435 = getelementptr inbounds i8, i8* %434, i64 %417
  %436 = sub i64 %425, %417
  %437 = trunc i64 %436 to i32
  %438 = tail call i64 @crc32(i64 noundef %433, i8* noundef %435, i32 noundef %437) #25
  store i64 %438, i64* %411, align 8, !tbaa !82
  br label %439

439:                                              ; preds = %432, %413
  %440 = load i64, i64* %400, align 8, !tbaa !121
  %441 = add i64 %440, %424
  store i64 %441, i64* %400, align 8, !tbaa !121
  %442 = load %struct.internal_state*, %struct.internal_state** %13, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %442) #25
  %443 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %442, i64 0, i32 5
  %444 = load i64, i64* %443, align 8, !tbaa !80
  %445 = trunc i64 %444 to i32
  %446 = load i32, i32* %45, align 8, !tbaa !86
  %447 = icmp ult i32 %446, %445
  %448 = select i1 %447, i32 %446, i32 %445
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %469, label %450

450:                                              ; preds = %439
  %451 = load i8*, i8** %26, align 8, !tbaa !87
  %452 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %442, i64 0, i32 4
  %453 = load i8*, i8** %452, align 8, !tbaa !81
  %454 = zext i32 %448 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %451, i8* align 1 %453, i64 %454, i1 false) #25
  %455 = load i8*, i8** %26, align 8, !tbaa !87
  %456 = getelementptr inbounds i8, i8* %455, i64 %454
  store i8* %456, i8** %26, align 8, !tbaa !87
  %457 = load i8*, i8** %452, align 8, !tbaa !81
  %458 = getelementptr inbounds i8, i8* %457, i64 %454
  store i8* %458, i8** %452, align 8, !tbaa !81
  %459 = load i64, i64* %412, align 8, !tbaa !88
  %460 = add i64 %459, %454
  store i64 %460, i64* %412, align 8, !tbaa !88
  %461 = load i32, i32* %45, align 8, !tbaa !86
  %462 = sub i32 %461, %448
  store i32 %462, i32* %45, align 8, !tbaa !86
  %463 = load i64, i64* %443, align 8, !tbaa !80
  %464 = sub i64 %463, %454
  store i64 %464, i64* %443, align 8, !tbaa !80
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %469

466:                                              ; preds = %450
  %467 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %442, i64 0, i32 2
  %468 = load i8*, i8** %467, align 8, !tbaa !51
  store i8* %468, i8** %452, align 8, !tbaa !81
  br label %469

469:                                              ; preds = %439, %450, %466
  %470 = load i64, i64* %54, align 8, !tbaa !80
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %473, label %472

472:                                              ; preds = %469
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

473:                                              ; preds = %469
  %474 = sub i32 %418, %420
  %475 = zext i32 %474 to i64
  %476 = load i64, i64* %404, align 8, !tbaa !52
  %477 = icmp ult i64 %476, %475
  br i1 %477, label %478, label %483

478:                                              ; preds = %473
  %479 = load %struct.gz_header_s*, %struct.gz_header_s** %390, align 8, !tbaa !38
  %480 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %479, i64 0, i32 4
  %481 = load i8*, i8** %480, align 8, !tbaa !115
  %482 = load i64, i64* %400, align 8, !tbaa !121
  br label %413

483:                                              ; preds = %473
  %484 = zext i32 %474 to i64
  %485 = load %struct.gz_header_s*, %struct.gz_header_s** %390, align 8, !tbaa !38
  %486 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %485, i64 0, i32 4
  %487 = load i8*, i8** %486, align 8, !tbaa !115
  %488 = load i64, i64* %400, align 8, !tbaa !121
  br label %489

489:                                              ; preds = %483, %395
  %490 = phi i64 [ %484, %483 ], [ %405, %395 ]
  %491 = phi i64 [ %488, %483 ], [ %401, %395 ]
  %492 = phi i8* [ %487, %483 ], [ %393, %395 ]
  %493 = phi i64 [ 0, %483 ], [ %396, %395 ]
  %494 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %495 = load i8*, i8** %494, align 8, !tbaa !51
  %496 = getelementptr inbounds i8, i8* %495, i64 %493
  %497 = getelementptr inbounds i8, i8* %492, i64 %491
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %496, i8* align 1 %497, i64 %490, i1 false)
  %498 = load i64, i64* %54, align 8, !tbaa !80
  %499 = add i64 %498, %490
  store i64 %499, i64* %54, align 8, !tbaa !80
  %500 = load %struct.gz_header_s*, %struct.gz_header_s** %390, align 8, !tbaa !38
  %501 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %500, i64 0, i32 11
  %502 = load i32, i32* %501, align 4, !tbaa !114
  %503 = icmp ne i32 %502, 0
  %504 = icmp ugt i64 %499, %493
  %505 = select i1 %503, i1 %504, i1 false
  br i1 %505, label %506, label %514

506:                                              ; preds = %489
  %507 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %508 = load i64, i64* %507, align 8, !tbaa !82
  %509 = load i8*, i8** %494, align 8, !tbaa !51
  %510 = getelementptr inbounds i8, i8* %509, i64 %493
  %511 = sub i64 %499, %493
  %512 = trunc i64 %511 to i32
  %513 = tail call i64 @crc32(i64 noundef %508, i8* noundef %510, i32 noundef %512) #25
  store i64 %513, i64* %507, align 8, !tbaa !82
  br label %514

514:                                              ; preds = %489, %506
  store i64 0, i64* %400, align 8, !tbaa !121
  br label %515

515:                                              ; preds = %389, %514
  store i32 73, i32* %21, align 8, !tbaa !36
  br label %516

516:                                              ; preds = %387, %515
  %517 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %518 = load %struct.gz_header_s*, %struct.gz_header_s** %517, align 8, !tbaa !38
  %519 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %518, i64 0, i32 7
  %520 = load i8*, i8** %519, align 8, !tbaa !116
  %521 = icmp eq i8* %520, null
  br i1 %521, label %612, label %522

522:                                              ; preds = %516
  %523 = load i64, i64* %54, align 8, !tbaa !80
  %524 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %525 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %526 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %527 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %528 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  br label %529

529:                                              ; preds = %594, %522
  %530 = phi i64 [ %523, %522 ], [ %595, %594 ]
  %531 = phi i64 [ %523, %522 ], [ %582, %594 ]
  %532 = load i64, i64* %524, align 8, !tbaa !52
  %533 = icmp eq i64 %530, %532
  br i1 %533, label %534, label %580

534:                                              ; preds = %529
  %535 = load %struct.gz_header_s*, %struct.gz_header_s** %517, align 8, !tbaa !38
  %536 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %535, i64 0, i32 11
  %537 = load i32, i32* %536, align 4, !tbaa !114
  %538 = icmp ne i32 %537, 0
  %539 = icmp ugt i64 %530, %531
  %540 = select i1 %538, i1 %539, i1 false
  br i1 %540, label %541, label %548

541:                                              ; preds = %534
  %542 = load i64, i64* %525, align 8, !tbaa !82
  %543 = load i8*, i8** %526, align 8, !tbaa !51
  %544 = getelementptr inbounds i8, i8* %543, i64 %531
  %545 = sub i64 %530, %531
  %546 = trunc i64 %545 to i32
  %547 = tail call i64 @crc32(i64 noundef %542, i8* noundef %544, i32 noundef %546) #25
  store i64 %547, i64* %525, align 8, !tbaa !82
  br label %548

548:                                              ; preds = %541, %534
  %549 = load %struct.internal_state*, %struct.internal_state** %13, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %549) #25
  %550 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %549, i64 0, i32 5
  %551 = load i64, i64* %550, align 8, !tbaa !80
  %552 = trunc i64 %551 to i32
  %553 = load i32, i32* %45, align 8, !tbaa !86
  %554 = icmp ult i32 %553, %552
  %555 = select i1 %554, i32 %553, i32 %552
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %576, label %557

557:                                              ; preds = %548
  %558 = load i8*, i8** %26, align 8, !tbaa !87
  %559 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %549, i64 0, i32 4
  %560 = load i8*, i8** %559, align 8, !tbaa !81
  %561 = zext i32 %555 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %558, i8* align 1 %560, i64 %561, i1 false) #25
  %562 = load i8*, i8** %26, align 8, !tbaa !87
  %563 = getelementptr inbounds i8, i8* %562, i64 %561
  store i8* %563, i8** %26, align 8, !tbaa !87
  %564 = load i8*, i8** %559, align 8, !tbaa !81
  %565 = getelementptr inbounds i8, i8* %564, i64 %561
  store i8* %565, i8** %559, align 8, !tbaa !81
  %566 = load i64, i64* %527, align 8, !tbaa !88
  %567 = add i64 %566, %561
  store i64 %567, i64* %527, align 8, !tbaa !88
  %568 = load i32, i32* %45, align 8, !tbaa !86
  %569 = sub i32 %568, %555
  store i32 %569, i32* %45, align 8, !tbaa !86
  %570 = load i64, i64* %550, align 8, !tbaa !80
  %571 = sub i64 %570, %561
  store i64 %571, i64* %550, align 8, !tbaa !80
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %576

573:                                              ; preds = %557
  %574 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %549, i64 0, i32 2
  %575 = load i8*, i8** %574, align 8, !tbaa !51
  store i8* %575, i8** %559, align 8, !tbaa !81
  br label %576

576:                                              ; preds = %548, %557, %573
  %577 = load i64, i64* %54, align 8, !tbaa !80
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %580, label %579

579:                                              ; preds = %576
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

580:                                              ; preds = %576, %529
  %581 = phi i64 [ %530, %529 ], [ 0, %576 ]
  %582 = phi i64 [ %531, %529 ], [ 0, %576 ]
  %583 = load %struct.gz_header_s*, %struct.gz_header_s** %517, align 8, !tbaa !38
  %584 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %583, i64 0, i32 7
  %585 = load i8*, i8** %584, align 8, !tbaa !116
  %586 = load i64, i64* %528, align 8, !tbaa !121
  %587 = add i64 %586, 1
  store i64 %587, i64* %528, align 8, !tbaa !121
  %588 = getelementptr inbounds i8, i8* %585, i64 %586
  %589 = load i8, i8* %588, align 1, !tbaa !4
  %590 = load i8*, i8** %526, align 8, !tbaa !51
  %591 = add i64 %581, 1
  store i64 %591, i64* %54, align 8, !tbaa !80
  %592 = getelementptr inbounds i8, i8* %590, i64 %581
  store i8 %589, i8* %592, align 1, !tbaa !4
  %593 = icmp eq i8 %589, 0
  br i1 %593, label %596, label %594, !llvm.loop !122

594:                                              ; preds = %580
  %595 = load i64, i64* %54, align 8, !tbaa !80
  br label %529

596:                                              ; preds = %580
  %597 = load %struct.gz_header_s*, %struct.gz_header_s** %517, align 8, !tbaa !38
  %598 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %597, i64 0, i32 11
  %599 = load i32, i32* %598, align 4, !tbaa !114
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %611, label %601

601:                                              ; preds = %596
  %602 = load i64, i64* %54, align 8, !tbaa !80
  %603 = icmp ugt i64 %602, %582
  br i1 %603, label %604, label %611

604:                                              ; preds = %601
  %605 = load i64, i64* %525, align 8, !tbaa !82
  %606 = load i8*, i8** %526, align 8, !tbaa !51
  %607 = getelementptr inbounds i8, i8* %606, i64 %582
  %608 = sub i64 %602, %582
  %609 = trunc i64 %608 to i32
  %610 = tail call i64 @crc32(i64 noundef %605, i8* noundef %607, i32 noundef %609) #25
  store i64 %610, i64* %525, align 8, !tbaa !82
  br label %611

611:                                              ; preds = %604, %601, %596
  store i64 0, i64* %528, align 8, !tbaa !121
  br label %612

612:                                              ; preds = %516, %611
  store i32 91, i32* %21, align 8, !tbaa !36
  br label %613

613:                                              ; preds = %387, %612
  %614 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %615 = load %struct.gz_header_s*, %struct.gz_header_s** %614, align 8, !tbaa !38
  %616 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %615, i64 0, i32 9
  %617 = load i8*, i8** %616, align 8, !tbaa !117
  %618 = icmp eq i8* %617, null
  br i1 %618, label %708, label %619

619:                                              ; preds = %613
  %620 = load i64, i64* %54, align 8, !tbaa !80
  %621 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %622 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %623 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %624 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %625 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  br label %626

626:                                              ; preds = %691, %619
  %627 = phi i64 [ %620, %619 ], [ %692, %691 ]
  %628 = phi i64 [ %620, %619 ], [ %679, %691 ]
  %629 = load i64, i64* %621, align 8, !tbaa !52
  %630 = icmp eq i64 %627, %629
  br i1 %630, label %631, label %677

631:                                              ; preds = %626
  %632 = load %struct.gz_header_s*, %struct.gz_header_s** %614, align 8, !tbaa !38
  %633 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %632, i64 0, i32 11
  %634 = load i32, i32* %633, align 4, !tbaa !114
  %635 = icmp ne i32 %634, 0
  %636 = icmp ugt i64 %627, %628
  %637 = select i1 %635, i1 %636, i1 false
  br i1 %637, label %638, label %645

638:                                              ; preds = %631
  %639 = load i64, i64* %622, align 8, !tbaa !82
  %640 = load i8*, i8** %623, align 8, !tbaa !51
  %641 = getelementptr inbounds i8, i8* %640, i64 %628
  %642 = sub i64 %627, %628
  %643 = trunc i64 %642 to i32
  %644 = tail call i64 @crc32(i64 noundef %639, i8* noundef %641, i32 noundef %643) #25
  store i64 %644, i64* %622, align 8, !tbaa !82
  br label %645

645:                                              ; preds = %638, %631
  %646 = load %struct.internal_state*, %struct.internal_state** %13, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %646) #25
  %647 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %646, i64 0, i32 5
  %648 = load i64, i64* %647, align 8, !tbaa !80
  %649 = trunc i64 %648 to i32
  %650 = load i32, i32* %45, align 8, !tbaa !86
  %651 = icmp ult i32 %650, %649
  %652 = select i1 %651, i32 %650, i32 %649
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %673, label %654

654:                                              ; preds = %645
  %655 = load i8*, i8** %26, align 8, !tbaa !87
  %656 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %646, i64 0, i32 4
  %657 = load i8*, i8** %656, align 8, !tbaa !81
  %658 = zext i32 %652 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %655, i8* align 1 %657, i64 %658, i1 false) #25
  %659 = load i8*, i8** %26, align 8, !tbaa !87
  %660 = getelementptr inbounds i8, i8* %659, i64 %658
  store i8* %660, i8** %26, align 8, !tbaa !87
  %661 = load i8*, i8** %656, align 8, !tbaa !81
  %662 = getelementptr inbounds i8, i8* %661, i64 %658
  store i8* %662, i8** %656, align 8, !tbaa !81
  %663 = load i64, i64* %624, align 8, !tbaa !88
  %664 = add i64 %663, %658
  store i64 %664, i64* %624, align 8, !tbaa !88
  %665 = load i32, i32* %45, align 8, !tbaa !86
  %666 = sub i32 %665, %652
  store i32 %666, i32* %45, align 8, !tbaa !86
  %667 = load i64, i64* %647, align 8, !tbaa !80
  %668 = sub i64 %667, %658
  store i64 %668, i64* %647, align 8, !tbaa !80
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %670, label %673

670:                                              ; preds = %654
  %671 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %646, i64 0, i32 2
  %672 = load i8*, i8** %671, align 8, !tbaa !51
  store i8* %672, i8** %656, align 8, !tbaa !81
  br label %673

673:                                              ; preds = %645, %654, %670
  %674 = load i64, i64* %54, align 8, !tbaa !80
  %675 = icmp eq i64 %674, 0
  br i1 %675, label %677, label %676

676:                                              ; preds = %673
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

677:                                              ; preds = %673, %626
  %678 = phi i64 [ %627, %626 ], [ 0, %673 ]
  %679 = phi i64 [ %628, %626 ], [ 0, %673 ]
  %680 = load %struct.gz_header_s*, %struct.gz_header_s** %614, align 8, !tbaa !38
  %681 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %680, i64 0, i32 9
  %682 = load i8*, i8** %681, align 8, !tbaa !117
  %683 = load i64, i64* %625, align 8, !tbaa !121
  %684 = add i64 %683, 1
  store i64 %684, i64* %625, align 8, !tbaa !121
  %685 = getelementptr inbounds i8, i8* %682, i64 %683
  %686 = load i8, i8* %685, align 1, !tbaa !4
  %687 = load i8*, i8** %623, align 8, !tbaa !51
  %688 = add i64 %678, 1
  store i64 %688, i64* %54, align 8, !tbaa !80
  %689 = getelementptr inbounds i8, i8* %687, i64 %678
  store i8 %686, i8* %689, align 1, !tbaa !4
  %690 = icmp eq i8 %686, 0
  br i1 %690, label %693, label %691, !llvm.loop !123

691:                                              ; preds = %677
  %692 = load i64, i64* %54, align 8, !tbaa !80
  br label %626

693:                                              ; preds = %677
  %694 = load %struct.gz_header_s*, %struct.gz_header_s** %614, align 8, !tbaa !38
  %695 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %694, i64 0, i32 11
  %696 = load i32, i32* %695, align 4, !tbaa !114
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %708, label %698

698:                                              ; preds = %693
  %699 = load i64, i64* %54, align 8, !tbaa !80
  %700 = icmp ugt i64 %699, %679
  br i1 %700, label %701, label %708

701:                                              ; preds = %698
  %702 = load i64, i64* %622, align 8, !tbaa !82
  %703 = load i8*, i8** %623, align 8, !tbaa !51
  %704 = getelementptr inbounds i8, i8* %703, i64 %679
  %705 = sub i64 %699, %679
  %706 = trunc i64 %705 to i32
  %707 = tail call i64 @crc32(i64 noundef %702, i8* noundef %704, i32 noundef %706) #25
  store i64 %707, i64* %622, align 8, !tbaa !82
  br label %708

708:                                              ; preds = %613, %693, %698, %701
  store i32 103, i32* %21, align 8, !tbaa !36
  br label %709

709:                                              ; preds = %387, %708
  %710 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %711 = load %struct.gz_header_s*, %struct.gz_header_s** %710, align 8, !tbaa !38
  %712 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %711, i64 0, i32 11
  %713 = load i32, i32* %712, align 4, !tbaa !114
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %742, label %715

715:                                              ; preds = %709
  %716 = load i64, i64* %54, align 8, !tbaa !80
  %717 = add i64 %716, 2
  %718 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %719 = load i64, i64* %718, align 8, !tbaa !52
  %720 = icmp ugt i64 %717, %719
  br i1 %720, label %721, label %725

721:                                              ; preds = %715
  tail call fastcc void @flush_pending(%struct.z_stream_s* noundef nonnull %0)
  %722 = load i64, i64* %54, align 8, !tbaa !80
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %725, label %724

724:                                              ; preds = %721
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

725:                                              ; preds = %721, %715
  %726 = phi i64 [ 0, %721 ], [ %716, %715 ]
  %727 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %728 = load i64, i64* %727, align 8, !tbaa !82
  %729 = trunc i64 %728 to i8
  %730 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %731 = load i8*, i8** %730, align 8, !tbaa !51
  %732 = add i64 %726, 1
  store i64 %732, i64* %54, align 8, !tbaa !80
  %733 = getelementptr inbounds i8, i8* %731, i64 %726
  store i8 %729, i8* %733, align 1, !tbaa !4
  %734 = load i64, i64* %727, align 8, !tbaa !82
  %735 = lshr i64 %734, 8
  %736 = trunc i64 %735 to i8
  %737 = load i8*, i8** %730, align 8, !tbaa !51
  %738 = load i64, i64* %54, align 8, !tbaa !80
  %739 = add i64 %738, 1
  store i64 %739, i64* %54, align 8, !tbaa !80
  %740 = getelementptr inbounds i8, i8* %737, i64 %738
  store i8 %736, i8* %740, align 1, !tbaa !4
  %741 = tail call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  store i64 %741, i64* %727, align 8, !tbaa !82
  br label %742

742:                                              ; preds = %725, %709
  store i32 113, i32* %21, align 8, !tbaa !36
  tail call fastcc void @flush_pending(%struct.z_stream_s* noundef nonnull %0)
  %743 = load i64, i64* %54, align 8, !tbaa !80
  %744 = icmp eq i64 %743, 0
  br i1 %744, label %746, label %745

745:                                              ; preds = %742
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

746:                                              ; preds = %387, %119, %742
  %747 = load i32, i32* %30, align 8, !tbaa !84
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %758

749:                                              ; preds = %109, %746
  %750 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 29
  %751 = load i32, i32* %750, align 4, !tbaa !72
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %753, label %758

753:                                              ; preds = %749
  %754 = icmp eq i32 %1, 0
  br i1 %754, label %815, label %755

755:                                              ; preds = %753
  %756 = load i32, i32* %21, align 8, !tbaa !36
  %757 = icmp eq i32 %756, 666
  br i1 %757, label %815, label %758

758:                                              ; preds = %755, %749, %746
  %759 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 33
  %760 = load i32, i32* %759, align 4, !tbaa !56
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %764

762:                                              ; preds = %758
  %763 = tail call i32 @deflate_stored(%struct.internal_state* noundef nonnull %14, i32 noundef %1)
  br label %776

764:                                              ; preds = %758
  %765 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %766 = load i32, i32* %765, align 8, !tbaa !57
  switch i32 %766, label %771 [
    i32 2, label %767
    i32 3, label %769
  ]

767:                                              ; preds = %764
  %768 = tail call fastcc i32 @deflate_huff(%struct.internal_state* noundef nonnull %14, i32 noundef %1)
  br label %776

769:                                              ; preds = %764
  %770 = tail call fastcc i32 @deflate_rle(%struct.internal_state* noundef nonnull %14, i32 noundef %1)
  br label %776

771:                                              ; preds = %764
  %772 = sext i32 %760 to i64
  %773 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %772, i32 4
  %774 = load i32 (%struct.internal_state*, i32)*, i32 (%struct.internal_state*, i32)** %773, align 8, !tbaa !111
  %775 = tail call i32 %774(%struct.internal_state* noundef nonnull %14, i32 noundef %1) #25
  br label %776

776:                                              ; preds = %767, %771, %769, %762
  %777 = phi i32 [ %763, %762 ], [ %768, %767 ], [ %770, %769 ], [ %775, %771 ]
  %778 = and i32 %777, -2
  %779 = icmp eq i32 %778, 2
  br i1 %779, label %780, label %781

780:                                              ; preds = %776
  store i32 666, i32* %21, align 8, !tbaa !36
  br label %781

781:                                              ; preds = %776, %780
  %782 = and i32 %777, -3
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %784, label %788

784:                                              ; preds = %781
  %785 = load i32, i32* %45, align 8, !tbaa !86
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %787, label %915

787:                                              ; preds = %784
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

788:                                              ; preds = %781
  %789 = icmp eq i32 %777, 1
  br i1 %789, label %790, label %815

790:                                              ; preds = %788
  switch i32 %1, label %792 [
    i32 1, label %791
    i32 5, label %811
  ]

791:                                              ; preds = %790
  tail call void @_tr_align(%struct.internal_state* noundef nonnull %14) #25
  br label %811

792:                                              ; preds = %790
  tail call void @_tr_stored_block(%struct.internal_state* noundef nonnull %14, i8* noundef null, i64 noundef 0, i32 noundef 0) #25
  %793 = icmp eq i32 %1, 3
  br i1 %793, label %794, label %811

794:                                              ; preds = %792
  %795 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 17
  %796 = load i16*, i16** %795, align 8, !tbaa !48
  %797 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 19
  %798 = load i32, i32* %797, align 4, !tbaa !43
  %799 = add i32 %798, -1
  %800 = zext i32 %799 to i64
  %801 = getelementptr inbounds i16, i16* %796, i64 %800
  store i16 0, i16* %801, align 2, !tbaa !60
  %802 = bitcast i16* %796 to i8*
  %803 = shl nuw nsw i64 %800, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %802, i8 0, i64 %803, i1 false)
  %804 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 29
  %805 = load i32, i32* %804, align 4, !tbaa !72
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %811

807:                                              ; preds = %794
  %808 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 27
  store i32 0, i32* %808, align 4, !tbaa !70
  %809 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 23
  store i64 0, i64* %809, align 8, !tbaa !71
  %810 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 55
  store i32 0, i32* %810, align 4, !tbaa !73
  br label %811

811:                                              ; preds = %790, %794, %807, %792, %791
  tail call fastcc void @flush_pending(%struct.z_stream_s* noundef nonnull %0)
  %812 = load i32, i32* %45, align 8, !tbaa !86
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %814, label %815

814:                                              ; preds = %811
  store i32 -1, i32* %52, align 4, !tbaa !83
  br label %915

815:                                              ; preds = %811, %788, %755, %753
  br i1 %39, label %915, label %816

816:                                              ; preds = %815
  %817 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 6
  %818 = load i32, i32* %817, align 8, !tbaa !37
  %819 = icmp slt i32 %818, 1
  br i1 %819, label %915, label %820

820:                                              ; preds = %816
  %821 = icmp eq i32 %818, 2
  %822 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %823 = load i64, i64* %822, align 8, !tbaa !82
  br i1 %821, label %824, label %880

824:                                              ; preds = %820
  %825 = trunc i64 %823 to i8
  %826 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %827 = load i8*, i8** %826, align 8, !tbaa !51
  %828 = load i64, i64* %54, align 8, !tbaa !80
  %829 = add i64 %828, 1
  store i64 %829, i64* %54, align 8, !tbaa !80
  %830 = getelementptr inbounds i8, i8* %827, i64 %828
  store i8 %825, i8* %830, align 1, !tbaa !4
  %831 = load i64, i64* %822, align 8, !tbaa !82
  %832 = lshr i64 %831, 8
  %833 = trunc i64 %832 to i8
  %834 = load i8*, i8** %826, align 8, !tbaa !51
  %835 = load i64, i64* %54, align 8, !tbaa !80
  %836 = add i64 %835, 1
  store i64 %836, i64* %54, align 8, !tbaa !80
  %837 = getelementptr inbounds i8, i8* %834, i64 %835
  store i8 %833, i8* %837, align 1, !tbaa !4
  %838 = load i64, i64* %822, align 8, !tbaa !82
  %839 = lshr i64 %838, 16
  %840 = trunc i64 %839 to i8
  %841 = load i8*, i8** %826, align 8, !tbaa !51
  %842 = load i64, i64* %54, align 8, !tbaa !80
  %843 = add i64 %842, 1
  store i64 %843, i64* %54, align 8, !tbaa !80
  %844 = getelementptr inbounds i8, i8* %841, i64 %842
  store i8 %840, i8* %844, align 1, !tbaa !4
  %845 = load i64, i64* %822, align 8, !tbaa !82
  %846 = lshr i64 %845, 24
  %847 = trunc i64 %846 to i8
  %848 = load i8*, i8** %826, align 8, !tbaa !51
  %849 = load i64, i64* %54, align 8, !tbaa !80
  %850 = add i64 %849, 1
  store i64 %850, i64* %54, align 8, !tbaa !80
  %851 = getelementptr inbounds i8, i8* %848, i64 %849
  store i8 %847, i8* %851, align 1, !tbaa !4
  %852 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  %853 = load i64, i64* %852, align 8, !tbaa !78
  %854 = trunc i64 %853 to i8
  %855 = load i8*, i8** %826, align 8, !tbaa !51
  %856 = load i64, i64* %54, align 8, !tbaa !80
  %857 = add i64 %856, 1
  store i64 %857, i64* %54, align 8, !tbaa !80
  %858 = getelementptr inbounds i8, i8* %855, i64 %856
  store i8 %854, i8* %858, align 1, !tbaa !4
  %859 = load i64, i64* %852, align 8, !tbaa !78
  %860 = lshr i64 %859, 8
  %861 = trunc i64 %860 to i8
  %862 = load i8*, i8** %826, align 8, !tbaa !51
  %863 = load i64, i64* %54, align 8, !tbaa !80
  %864 = add i64 %863, 1
  store i64 %864, i64* %54, align 8, !tbaa !80
  %865 = getelementptr inbounds i8, i8* %862, i64 %863
  store i8 %861, i8* %865, align 1, !tbaa !4
  %866 = load i64, i64* %852, align 8, !tbaa !78
  %867 = lshr i64 %866, 16
  %868 = trunc i64 %867 to i8
  %869 = load i8*, i8** %826, align 8, !tbaa !51
  %870 = load i64, i64* %54, align 8, !tbaa !80
  %871 = add i64 %870, 1
  store i64 %871, i64* %54, align 8, !tbaa !80
  %872 = getelementptr inbounds i8, i8* %869, i64 %870
  store i8 %868, i8* %872, align 1, !tbaa !4
  %873 = load i64, i64* %852, align 8, !tbaa !78
  %874 = lshr i64 %873, 24
  %875 = trunc i64 %874 to i8
  %876 = load i8*, i8** %826, align 8, !tbaa !51
  %877 = load i64, i64* %54, align 8, !tbaa !80
  %878 = add i64 %877, 1
  store i64 %878, i64* %54, align 8, !tbaa !80
  %879 = getelementptr inbounds i8, i8* %876, i64 %877
  store i8 %875, i8* %879, align 1, !tbaa !4
  br label %906

880:                                              ; preds = %820
  %881 = lshr i64 %823, 16
  %882 = lshr i64 %823, 24
  %883 = trunc i64 %882 to i8
  %884 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %885 = load i8*, i8** %884, align 8, !tbaa !51
  %886 = load i64, i64* %54, align 8, !tbaa !80
  %887 = add i64 %886, 1
  store i64 %887, i64* %54, align 8, !tbaa !80
  %888 = getelementptr inbounds i8, i8* %885, i64 %886
  store i8 %883, i8* %888, align 1, !tbaa !4
  %889 = trunc i64 %881 to i8
  %890 = load i8*, i8** %884, align 8, !tbaa !51
  %891 = load i64, i64* %54, align 8, !tbaa !80
  %892 = add i64 %891, 1
  store i64 %892, i64* %54, align 8, !tbaa !80
  %893 = getelementptr inbounds i8, i8* %890, i64 %891
  store i8 %889, i8* %893, align 1, !tbaa !4
  %894 = load i64, i64* %822, align 8, !tbaa !82
  %895 = trunc i64 %894 to i8
  %896 = lshr i64 %894, 8
  %897 = trunc i64 %896 to i8
  %898 = load i8*, i8** %884, align 8, !tbaa !51
  %899 = load i64, i64* %54, align 8, !tbaa !80
  %900 = add i64 %899, 1
  store i64 %900, i64* %54, align 8, !tbaa !80
  %901 = getelementptr inbounds i8, i8* %898, i64 %899
  store i8 %897, i8* %901, align 1, !tbaa !4
  %902 = load i8*, i8** %884, align 8, !tbaa !51
  %903 = load i64, i64* %54, align 8, !tbaa !80
  %904 = add i64 %903, 1
  store i64 %904, i64* %54, align 8, !tbaa !80
  %905 = getelementptr inbounds i8, i8* %902, i64 %903
  store i8 %895, i8* %905, align 1, !tbaa !4
  br label %906

906:                                              ; preds = %880, %824
  tail call fastcc void @flush_pending(%struct.z_stream_s* noundef nonnull %0)
  %907 = load i32, i32* %817, align 8, !tbaa !37
  %908 = icmp sgt i32 %907, 0
  br i1 %908, label %909, label %911

909:                                              ; preds = %906
  %910 = sub nsw i32 0, %907
  store i32 %910, i32* %817, align 8, !tbaa !37
  br label %911

911:                                              ; preds = %909, %906
  %912 = load i64, i64* %54, align 8, !tbaa !80
  %913 = icmp eq i64 %912, 0
  %914 = zext i1 %913 to i32
  br label %915

915:                                              ; preds = %12, %16, %20, %2, %4, %8, %472, %195, %784, %816, %815, %787, %814, %676, %579, %23, %911, %745, %724, %261, %112, %103, %90, %48, %41
  %916 = phi i32 [ -2, %41 ], [ -5, %48 ], [ 0, %90 ], [ -5, %112 ], [ 0, %261 ], [ 0, %724 ], [ 0, %745 ], [ %914, %911 ], [ 0, %579 ], [ 0, %195 ], [ -5, %103 ], [ -2, %23 ], [ 0, %676 ], [ 0, %814 ], [ 0, %787 ], [ 0, %815 ], [ 1, %816 ], [ 0, %784 ], [ 0, %472 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %20 ], [ -2, %16 ], [ -2, %12 ]
  ret i32 %916
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @slide_hash(%struct.internal_state* nocapture noundef readonly %0) unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8, !tbaa !40
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 19
  %5 = load i32, i32* %4, align 4, !tbaa !43
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %7 = load i16*, i16** %6, align 8, !tbaa !48
  %8 = zext i32 %5 to i64
  %9 = getelementptr inbounds i16, i16* %7, i64 %8
  %10 = add i32 %5, -1
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %13 = icmp ult i32 %10, 7
  br i1 %13, label %40, label %14

14:                                               ; preds = %1
  %15 = and i64 %12, 8589934584
  %16 = sub nsw i64 0, %15
  %17 = getelementptr i16, i16* %9, i64 %16
  %18 = trunc i64 %15 to i32
  %19 = sub i32 %5, %18
  %20 = insertelement <8 x i32> poison, i32 %3, i64 0
  %21 = shufflevector <8 x i32> %20, <8 x i32> poison, <8 x i32> zeroinitializer
  %22 = getelementptr i16, i16* %9, i64 -1
  %23 = getelementptr inbounds i16, i16* %22, i64 -7
  br label %24

24:                                               ; preds = %24, %14
  %25 = phi i64 [ 0, %14 ], [ %36, %24 ]
  %26 = sub i64 0, %25
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = bitcast i16* %27 to <8 x i16>*
  %29 = load <8 x i16>, <8 x i16>* %28, align 2, !tbaa !60
  %30 = shufflevector <8 x i16> %29, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %31 = zext <8 x i16> %30 to <8 x i32>
  %32 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %31, <8 x i32> %21)
  %33 = trunc <8 x i32> %32 to <8 x i16>
  %34 = shufflevector <8 x i16> %33, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %35 = bitcast i16* %27 to <8 x i16>*
  store <8 x i16> %34, <8 x i16>* %35, align 2, !tbaa !60
  %36 = add nuw i64 %25, 8
  %37 = icmp eq i64 %36, %15
  br i1 %37, label %38, label %24, !llvm.loop !124

38:                                               ; preds = %24
  %39 = icmp eq i64 %12, %15
  br i1 %39, label %53, label %40

40:                                               ; preds = %1, %38
  %41 = phi i16* [ %9, %1 ], [ %17, %38 ]
  %42 = phi i32 [ %5, %1 ], [ %19, %38 ]
  br label %43

43:                                               ; preds = %40, %43
  %44 = phi i16* [ %46, %43 ], [ %41, %40 ]
  %45 = phi i32 [ %51, %43 ], [ %42, %40 ]
  %46 = getelementptr inbounds i16, i16* %44, i64 -1
  %47 = load i16, i16* %46, align 2, !tbaa !60
  %48 = zext i16 %47 to i32
  %49 = tail call i32 @llvm.usub.sat.i32(i32 %48, i32 %3)
  %50 = trunc i32 %49 to i16
  store i16 %50, i16* %46, align 2, !tbaa !60
  %51 = add i32 %45, -1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %43, !llvm.loop !125

53:                                               ; preds = %43, %38
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %55 = load i16*, i16** %54, align 8, !tbaa !47
  %56 = zext i32 %3 to i64
  %57 = getelementptr inbounds i16, i16* %55, i64 %56
  %58 = add i32 %3, -1
  %59 = zext i32 %58 to i64
  %60 = add nuw nsw i64 %59, 1
  %61 = icmp ult i32 %58, 7
  br i1 %61, label %88, label %62

62:                                               ; preds = %53
  %63 = and i64 %60, 8589934584
  %64 = sub nsw i64 0, %63
  %65 = getelementptr i16, i16* %57, i64 %64
  %66 = trunc i64 %63 to i32
  %67 = sub i32 %3, %66
  %68 = insertelement <8 x i32> poison, i32 %3, i64 0
  %69 = shufflevector <8 x i32> %68, <8 x i32> poison, <8 x i32> zeroinitializer
  %70 = getelementptr i16, i16* %57, i64 -1
  %71 = getelementptr inbounds i16, i16* %70, i64 -7
  br label %72

72:                                               ; preds = %72, %62
  %73 = phi i64 [ 0, %62 ], [ %84, %72 ]
  %74 = sub i64 0, %73
  %75 = getelementptr inbounds i16, i16* %71, i64 %74
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !tbaa !60
  %78 = shufflevector <8 x i16> %77, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %79 = zext <8 x i16> %78 to <8 x i32>
  %80 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %79, <8 x i32> %69)
  %81 = trunc <8 x i32> %80 to <8 x i16>
  %82 = shufflevector <8 x i16> %81, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %83 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %83, align 2, !tbaa !60
  %84 = add nuw i64 %73, 8
  %85 = icmp eq i64 %84, %63
  br i1 %85, label %86, label %72, !llvm.loop !126

86:                                               ; preds = %72
  %87 = icmp eq i64 %60, %63
  br i1 %87, label %101, label %88

88:                                               ; preds = %53, %86
  %89 = phi i16* [ %57, %53 ], [ %65, %86 ]
  %90 = phi i32 [ %3, %53 ], [ %67, %86 ]
  br label %91

91:                                               ; preds = %88, %91
  %92 = phi i16* [ %94, %91 ], [ %89, %88 ]
  %93 = phi i32 [ %99, %91 ], [ %90, %88 ]
  %94 = getelementptr inbounds i16, i16* %92, i64 -1
  %95 = load i16, i16* %94, align 2, !tbaa !60
  %96 = zext i16 %95 to i32
  %97 = tail call i32 @llvm.usub.sat.i32(i32 %96, i32 %3)
  %98 = trunc i32 %97 to i16
  store i16 %98, i16* %94, align 2, !tbaa !60
  %99 = add i32 %93, -1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !127

101:                                              ; preds = %91, %86
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @flush_pending(%struct.z_stream_s* nocapture noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %3 = load %struct.internal_state*, %struct.internal_state** %2, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %3) #25
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %3, i64 0, i32 5
  %5 = load i64, i64* %4, align 8, !tbaa !80
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8, !tbaa !86
  %9 = icmp ult i32 %8, %6
  %10 = select i1 %9, i32 %8, i32 %6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8, !tbaa !87
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %3, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !81
  %17 = zext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %16, i64 %17, i1 false)
  %18 = load i8*, i8** %13, align 8, !tbaa !87
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  store i8* %19, i8** %13, align 8, !tbaa !87
  %20 = load i8*, i8** %15, align 8, !tbaa !81
  %21 = getelementptr inbounds i8, i8* %20, i64 %17
  store i8* %21, i8** %15, align 8, !tbaa !81
  %22 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8, !tbaa !88
  %24 = add i64 %23, %17
  store i64 %24, i64* %22, align 8, !tbaa !88
  %25 = load i32, i32* %7, align 8, !tbaa !86
  %26 = sub i32 %25, %10
  store i32 %26, i32* %7, align 8, !tbaa !86
  %27 = load i64, i64* %4, align 8, !tbaa !80
  %28 = sub i64 %27, %17
  store i64 %28, i64* %4, align 8, !tbaa !80
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %12
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %3, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8, !tbaa !51
  store i8* %32, i8** %15, align 8, !tbaa !81
  br label %33

33:                                               ; preds = %12, %30, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @deflate_huff(%struct.internal_state* noundef %0, i32 noundef %1) unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  br label %12

12:                                               ; preds = %102, %2
  %13 = load i32, i32* %3, align 4, !tbaa !72
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  tail call fastcc void @fill_window(%struct.internal_state* noundef nonnull %0)
  %16 = load i32, i32* %3, align 4, !tbaa !72
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %213, label %103

20:                                               ; preds = %15, %12
  store i32 0, i32* %4, align 8, !tbaa !75
  %21 = load i8*, i8** %5, align 8, !tbaa !46
  %22 = load i32, i32* %6, align 4, !tbaa !70
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = load i8, i8* %24, align 1, !tbaa !4
  %26 = load i8*, i8** %7, align 8, !tbaa !54
  %27 = load i32, i32* %8, align 4, !tbaa !93
  %28 = add i32 %27, 1
  store i32 %28, i32* %8, align 4, !tbaa !93
  %29 = zext i32 %27 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  store i8 0, i8* %30, align 1, !tbaa !4
  %31 = load i8*, i8** %7, align 8, !tbaa !54
  %32 = load i32, i32* %8, align 4, !tbaa !93
  %33 = add i32 %32, 1
  store i32 %33, i32* %8, align 4, !tbaa !93
  %34 = zext i32 %32 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  store i8 0, i8* %35, align 1, !tbaa !4
  %36 = load i8*, i8** %7, align 8, !tbaa !54
  %37 = load i32, i32* %8, align 4, !tbaa !93
  %38 = add i32 %37, 1
  store i32 %38, i32* %8, align 4, !tbaa !93
  %39 = zext i32 %37 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  store i8 %25, i8* %40, align 1, !tbaa !4
  %41 = zext i8 %25 to i64
  %42 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %41, i32 0, i32 0
  %43 = load i16, i16* %42, align 4, !tbaa !4
  %44 = add i16 %43, 1
  store i16 %44, i16* %42, align 4, !tbaa !4
  %45 = load i32, i32* %8, align 4, !tbaa !93
  %46 = load i32, i32* %9, align 8, !tbaa !55
  %47 = icmp eq i32 %45, %46
  %48 = load i32, i32* %3, align 4, !tbaa !72
  %49 = add i32 %48, -1
  store i32 %49, i32* %3, align 4, !tbaa !72
  %50 = load i32, i32* %6, align 4, !tbaa !70
  %51 = add i32 %50, 1
  store i32 %51, i32* %6, align 4, !tbaa !70
  br i1 %47, label %52, label %102

52:                                               ; preds = %20
  %53 = load i64, i64* %10, align 8, !tbaa !71
  %54 = icmp sgt i64 %53, -1
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = load i8*, i8** %5, align 8, !tbaa !46
  %57 = and i64 %53, 4294967295
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  br label %59

59:                                               ; preds = %52, %55
  %60 = phi i8* [ %58, %55 ], [ null, %52 ]
  %61 = zext i32 %51 to i64
  %62 = sub nsw i64 %61, %53
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %60, i64 noundef %62, i32 noundef 0) #25
  %63 = load i32, i32* %6, align 4, !tbaa !70
  %64 = zext i32 %63 to i64
  store i64 %64, i64* %10, align 8, !tbaa !71
  %65 = load %struct.z_stream_s*, %struct.z_stream_s** %11, align 8, !tbaa !32
  %66 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %65, i64 0, i32 7
  %67 = load %struct.internal_state*, %struct.internal_state** %66, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %67) #25
  %68 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %67, i64 0, i32 5
  %69 = load i64, i64* %68, align 8, !tbaa !80
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %65, i64 0, i32 4
  %72 = load i32, i32* %71, align 8, !tbaa !86
  %73 = icmp ult i32 %72, %70
  %74 = select i1 %73, i32 %72, i32 %70
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %97, label %76

76:                                               ; preds = %59
  %77 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %65, i64 0, i32 3
  %78 = load i8*, i8** %77, align 8, !tbaa !87
  %79 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %67, i64 0, i32 4
  %80 = load i8*, i8** %79, align 8, !tbaa !81
  %81 = zext i32 %74 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %80, i64 %81, i1 false) #25
  %82 = load i8*, i8** %77, align 8, !tbaa !87
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8* %83, i8** %77, align 8, !tbaa !87
  %84 = load i8*, i8** %79, align 8, !tbaa !81
  %85 = getelementptr inbounds i8, i8* %84, i64 %81
  store i8* %85, i8** %79, align 8, !tbaa !81
  %86 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %65, i64 0, i32 5
  %87 = load i64, i64* %86, align 8, !tbaa !88
  %88 = add i64 %87, %81
  store i64 %88, i64* %86, align 8, !tbaa !88
  %89 = load i32, i32* %71, align 8, !tbaa !86
  %90 = sub i32 %89, %74
  store i32 %90, i32* %71, align 8, !tbaa !86
  %91 = load i64, i64* %68, align 8, !tbaa !80
  %92 = sub i64 %91, %81
  store i64 %92, i64* %68, align 8, !tbaa !80
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %76
  %95 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %67, i64 0, i32 2
  %96 = load i8*, i8** %95, align 8, !tbaa !51
  store i8* %96, i8** %79, align 8, !tbaa !81
  br label %97

97:                                               ; preds = %59, %76, %94
  %98 = load %struct.z_stream_s*, %struct.z_stream_s** %11, align 8, !tbaa !32
  %99 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %98, i64 0, i32 4
  %100 = load i32, i32* %99, align 8, !tbaa !86
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %213, label %102

102:                                              ; preds = %97, %20
  br label %12

103:                                              ; preds = %18
  %104 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  store i32 0, i32* %104, align 4, !tbaa !73
  %105 = icmp eq i32 %1, 4
  br i1 %105, label %106, label %158

106:                                              ; preds = %103
  %107 = load i64, i64* %10, align 8, !tbaa !71
  %108 = icmp sgt i64 %107, -1
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load i8*, i8** %5, align 8, !tbaa !46
  %111 = and i64 %107, 4294967295
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  br label %113

113:                                              ; preds = %106, %109
  %114 = phi i8* [ %112, %109 ], [ null, %106 ]
  %115 = load i32, i32* %6, align 4, !tbaa !70
  %116 = zext i32 %115 to i64
  %117 = sub nsw i64 %116, %107
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %114, i64 noundef %117, i32 noundef 1) #25
  %118 = load i32, i32* %6, align 4, !tbaa !70
  %119 = zext i32 %118 to i64
  store i64 %119, i64* %10, align 8, !tbaa !71
  %120 = load %struct.z_stream_s*, %struct.z_stream_s** %11, align 8, !tbaa !32
  %121 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %120, i64 0, i32 7
  %122 = load %struct.internal_state*, %struct.internal_state** %121, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %122) #25
  %123 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %122, i64 0, i32 5
  %124 = load i64, i64* %123, align 8, !tbaa !80
  %125 = trunc i64 %124 to i32
  %126 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %120, i64 0, i32 4
  %127 = load i32, i32* %126, align 8, !tbaa !86
  %128 = icmp ult i32 %127, %125
  %129 = select i1 %128, i32 %127, i32 %125
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %152, label %131

131:                                              ; preds = %113
  %132 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %120, i64 0, i32 3
  %133 = load i8*, i8** %132, align 8, !tbaa !87
  %134 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %122, i64 0, i32 4
  %135 = load i8*, i8** %134, align 8, !tbaa !81
  %136 = zext i32 %129 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %133, i8* align 1 %135, i64 %136, i1 false) #25
  %137 = load i8*, i8** %132, align 8, !tbaa !87
  %138 = getelementptr inbounds i8, i8* %137, i64 %136
  store i8* %138, i8** %132, align 8, !tbaa !87
  %139 = load i8*, i8** %134, align 8, !tbaa !81
  %140 = getelementptr inbounds i8, i8* %139, i64 %136
  store i8* %140, i8** %134, align 8, !tbaa !81
  %141 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %120, i64 0, i32 5
  %142 = load i64, i64* %141, align 8, !tbaa !88
  %143 = add i64 %142, %136
  store i64 %143, i64* %141, align 8, !tbaa !88
  %144 = load i32, i32* %126, align 8, !tbaa !86
  %145 = sub i32 %144, %129
  store i32 %145, i32* %126, align 8, !tbaa !86
  %146 = load i64, i64* %123, align 8, !tbaa !80
  %147 = sub i64 %146, %136
  store i64 %147, i64* %123, align 8, !tbaa !80
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %131
  %150 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %122, i64 0, i32 2
  %151 = load i8*, i8** %150, align 8, !tbaa !51
  store i8* %151, i8** %134, align 8, !tbaa !81
  br label %152

152:                                              ; preds = %113, %131, %149
  %153 = load %struct.z_stream_s*, %struct.z_stream_s** %11, align 8, !tbaa !32
  %154 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %153, i64 0, i32 4
  %155 = load i32, i32* %154, align 8, !tbaa !86
  %156 = icmp eq i32 %155, 0
  %157 = select i1 %156, i32 2, i32 3
  br label %213

158:                                              ; preds = %103
  %159 = load i32, i32* %8, align 4, !tbaa !93
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %212, label %161

161:                                              ; preds = %158
  %162 = load i64, i64* %10, align 8, !tbaa !71
  %163 = icmp sgt i64 %162, -1
  br i1 %163, label %164, label %168

164:                                              ; preds = %161
  %165 = load i8*, i8** %5, align 8, !tbaa !46
  %166 = and i64 %162, 4294967295
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  br label %168

168:                                              ; preds = %161, %164
  %169 = phi i8* [ %167, %164 ], [ null, %161 ]
  %170 = load i32, i32* %6, align 4, !tbaa !70
  %171 = zext i32 %170 to i64
  %172 = sub nsw i64 %171, %162
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %169, i64 noundef %172, i32 noundef 0) #25
  %173 = load i32, i32* %6, align 4, !tbaa !70
  %174 = zext i32 %173 to i64
  store i64 %174, i64* %10, align 8, !tbaa !71
  %175 = load %struct.z_stream_s*, %struct.z_stream_s** %11, align 8, !tbaa !32
  %176 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %175, i64 0, i32 7
  %177 = load %struct.internal_state*, %struct.internal_state** %176, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %177) #25
  %178 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %177, i64 0, i32 5
  %179 = load i64, i64* %178, align 8, !tbaa !80
  %180 = trunc i64 %179 to i32
  %181 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %175, i64 0, i32 4
  %182 = load i32, i32* %181, align 8, !tbaa !86
  %183 = icmp ult i32 %182, %180
  %184 = select i1 %183, i32 %182, i32 %180
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %207, label %186

186:                                              ; preds = %168
  %187 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %175, i64 0, i32 3
  %188 = load i8*, i8** %187, align 8, !tbaa !87
  %189 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %177, i64 0, i32 4
  %190 = load i8*, i8** %189, align 8, !tbaa !81
  %191 = zext i32 %184 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %188, i8* align 1 %190, i64 %191, i1 false) #25
  %192 = load i8*, i8** %187, align 8, !tbaa !87
  %193 = getelementptr inbounds i8, i8* %192, i64 %191
  store i8* %193, i8** %187, align 8, !tbaa !87
  %194 = load i8*, i8** %189, align 8, !tbaa !81
  %195 = getelementptr inbounds i8, i8* %194, i64 %191
  store i8* %195, i8** %189, align 8, !tbaa !81
  %196 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %175, i64 0, i32 5
  %197 = load i64, i64* %196, align 8, !tbaa !88
  %198 = add i64 %197, %191
  store i64 %198, i64* %196, align 8, !tbaa !88
  %199 = load i32, i32* %181, align 8, !tbaa !86
  %200 = sub i32 %199, %184
  store i32 %200, i32* %181, align 8, !tbaa !86
  %201 = load i64, i64* %178, align 8, !tbaa !80
  %202 = sub i64 %201, %191
  store i64 %202, i64* %178, align 8, !tbaa !80
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %186
  %205 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %177, i64 0, i32 2
  %206 = load i8*, i8** %205, align 8, !tbaa !51
  store i8* %206, i8** %189, align 8, !tbaa !81
  br label %207

207:                                              ; preds = %168, %186, %204
  %208 = load %struct.z_stream_s*, %struct.z_stream_s** %11, align 8, !tbaa !32
  %209 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %208, i64 0, i32 4
  %210 = load i32, i32* %209, align 8, !tbaa !86
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %213, label %212

212:                                              ; preds = %207, %158
  br label %213

213:                                              ; preds = %97, %207, %152, %18, %212
  %214 = phi i32 [ 1, %212 ], [ 0, %18 ], [ %157, %152 ], [ 0, %207 ], [ 0, %97 ]
  ret i32 %214
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @deflate_rle(%struct.internal_state* noundef %0, i32 noundef %1) unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %5 = icmp eq i32 %1, 0
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  br label %13

13:                                               ; preds = %151, %2
  %14 = load i32, i32* %3, align 4, !tbaa !72
  %15 = icmp ult i32 %14, 259
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 0, i32* %4, align 8, !tbaa !75
  br label %27

17:                                               ; preds = %13
  tail call fastcc void @fill_window(%struct.internal_state* noundef nonnull %0)
  %18 = load i32, i32* %3, align 4, !tbaa !72
  %19 = icmp ult i32 %18, 259
  %20 = and i1 %5, %19
  br i1 %20, label %345, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %235, label %23

23:                                               ; preds = %21
  store i32 0, i32* %4, align 8, !tbaa !75
  %24 = icmp ugt i32 %18, 2
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %6, align 4, !tbaa !70
  br label %152

27:                                               ; preds = %16, %23
  %28 = phi i32 [ %14, %16 ], [ %18, %23 ]
  %29 = load i32, i32* %6, align 4, !tbaa !70
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %152, label %31

31:                                               ; preds = %27
  %32 = load i8*, i8** %7, align 8, !tbaa !46
  %33 = zext i32 %29 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 -1
  %36 = load i8, i8* %35, align 1, !tbaa !4
  %37 = load i8, i8* %34, align 1, !tbaa !4
  %38 = icmp eq i8 %36, %37
  br i1 %38, label %39, label %152

39:                                               ; preds = %31
  %40 = getelementptr inbounds i8, i8* %34, i64 1
  %41 = load i8, i8* %40, align 1, !tbaa !4
  %42 = icmp eq i8 %36, %41
  br i1 %42, label %43, label %152

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %34, i64 2
  %45 = load i8, i8* %44, align 1, !tbaa !4
  %46 = icmp eq i8 %36, %45
  br i1 %46, label %47, label %152

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %34, i64 258
  br label %49

49:                                               ; preds = %79, %47
  %50 = phi i64 [ 2, %47 ], [ %80, %79 ]
  %51 = getelementptr inbounds i8, i8* %34, i64 %50
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  %53 = load i8, i8* %52, align 1, !tbaa !4
  %54 = icmp eq i8 %36, %53
  br i1 %54, label %55, label %86

55:                                               ; preds = %49
  %56 = getelementptr inbounds i8, i8* %51, i64 2
  %57 = load i8, i8* %56, align 1, !tbaa !4
  %58 = icmp eq i8 %36, %57
  br i1 %58, label %59, label %88

59:                                               ; preds = %55
  %60 = getelementptr inbounds i8, i8* %51, i64 3
  %61 = load i8, i8* %60, align 1, !tbaa !4
  %62 = icmp eq i8 %36, %61
  br i1 %62, label %63, label %90

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %51, i64 4
  %65 = load i8, i8* %64, align 1, !tbaa !4
  %66 = icmp eq i8 %36, %65
  br i1 %66, label %67, label %92

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %51, i64 5
  %69 = load i8, i8* %68, align 1, !tbaa !4
  %70 = icmp eq i8 %36, %69
  br i1 %70, label %71, label %94

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %51, i64 6
  %73 = load i8, i8* %72, align 1, !tbaa !4
  %74 = icmp eq i8 %36, %73
  br i1 %74, label %75, label %96

75:                                               ; preds = %71
  %76 = getelementptr inbounds i8, i8* %51, i64 7
  %77 = load i8, i8* %76, align 1, !tbaa !4
  %78 = icmp eq i8 %36, %77
  br i1 %78, label %79, label %98

79:                                               ; preds = %75
  %80 = add nuw nsw i64 %50, 8
  %81 = getelementptr inbounds i8, i8* %34, i64 %80
  %82 = load i8, i8* %81, align 1, !tbaa !4
  %83 = icmp eq i8 %36, %82
  %84 = icmp ult i64 %50, 250
  %85 = select i1 %83, i1 %84, i1 false
  br i1 %85, label %49, label %100, !llvm.loop !128

86:                                               ; preds = %49
  %87 = getelementptr inbounds i8, i8* %51, i64 1
  br label %102

88:                                               ; preds = %55
  %89 = getelementptr inbounds i8, i8* %51, i64 2
  br label %102

90:                                               ; preds = %59
  %91 = getelementptr inbounds i8, i8* %51, i64 3
  br label %102

92:                                               ; preds = %63
  %93 = getelementptr inbounds i8, i8* %51, i64 4
  br label %102

94:                                               ; preds = %67
  %95 = getelementptr inbounds i8, i8* %51, i64 5
  br label %102

96:                                               ; preds = %71
  %97 = getelementptr inbounds i8, i8* %51, i64 6
  br label %102

98:                                               ; preds = %75
  %99 = getelementptr inbounds i8, i8* %51, i64 7
  br label %102

100:                                              ; preds = %79
  %101 = getelementptr inbounds i8, i8* %34, i64 %80
  br label %102

102:                                              ; preds = %100, %98, %96, %94, %92, %90, %88, %86
  %103 = phi i8* [ %87, %86 ], [ %89, %88 ], [ %91, %90 ], [ %93, %92 ], [ %95, %94 ], [ %97, %96 ], [ %99, %98 ], [ %101, %100 ]
  %104 = ptrtoint i8* %48 to i64
  %105 = ptrtoint i8* %103 to i64
  %106 = sub i64 %105, %104
  %107 = trunc i64 %106 to i32
  %108 = add i32 %107, 258
  %109 = icmp ugt i32 %108, %28
  %110 = select i1 %109, i32 %28, i32 %108
  store i32 %110, i32* %4, align 8
  %111 = icmp ugt i32 %110, 2
  br i1 %111, label %112, label %152

112:                                              ; preds = %102
  %113 = trunc i32 %110 to i8
  %114 = add i8 %113, -3
  %115 = load i8*, i8** %8, align 8, !tbaa !54
  %116 = load i32, i32* %9, align 4, !tbaa !93
  %117 = add i32 %116, 1
  store i32 %117, i32* %9, align 4, !tbaa !93
  %118 = zext i32 %116 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 %118
  store i8 1, i8* %119, align 1, !tbaa !4
  %120 = load i8*, i8** %8, align 8, !tbaa !54
  %121 = load i32, i32* %9, align 4, !tbaa !93
  %122 = add i32 %121, 1
  store i32 %122, i32* %9, align 4, !tbaa !93
  %123 = zext i32 %121 to i64
  %124 = getelementptr inbounds i8, i8* %120, i64 %123
  store i8 0, i8* %124, align 1, !tbaa !4
  %125 = load i8*, i8** %8, align 8, !tbaa !54
  %126 = load i32, i32* %9, align 4, !tbaa !93
  %127 = add i32 %126, 1
  store i32 %127, i32* %9, align 4, !tbaa !93
  %128 = zext i32 %126 to i64
  %129 = getelementptr inbounds i8, i8* %125, i64 %128
  store i8 %114, i8* %129, align 1, !tbaa !4
  %130 = zext i8 %114 to i64
  %131 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([256 x i8]* @_length_code to [0 x i8]*), i64 0, i64 %130
  %132 = load i8, i8* %131, align 1, !tbaa !4
  %133 = zext i8 %132 to i64
  %134 = add nuw nsw i64 %133, 257
  %135 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %134, i32 0, i32 0
  %136 = load i16, i16* %135, align 4, !tbaa !4
  %137 = add i16 %136, 1
  store i16 %137, i16* %135, align 4, !tbaa !4
  %138 = load i8, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_dist_code, i64 0, i64 0), align 1, !tbaa !4
  %139 = zext i8 %138 to i64
  %140 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %139, i32 0, i32 0
  %141 = load i16, i16* %140, align 4, !tbaa !4
  %142 = add i16 %141, 1
  store i16 %142, i16* %140, align 4, !tbaa !4
  %143 = load i32, i32* %9, align 4, !tbaa !93
  %144 = load i32, i32* %10, align 8, !tbaa !55
  %145 = icmp eq i32 %143, %144
  %146 = load i32, i32* %4, align 8, !tbaa !75
  %147 = load i32, i32* %3, align 4, !tbaa !72
  %148 = sub i32 %147, %146
  store i32 %148, i32* %3, align 4, !tbaa !72
  %149 = load i32, i32* %6, align 4, !tbaa !70
  %150 = add i32 %149, %146
  store i32 %150, i32* %6, align 4, !tbaa !70
  store i32 0, i32* %4, align 8, !tbaa !75
  br i1 %145, label %184, label %151

151:                                              ; preds = %112, %230, %152
  br label %13

152:                                              ; preds = %31, %39, %43, %27, %25, %102
  %153 = phi i32 [ %26, %25 ], [ %29, %102 ], [ 0, %27 ], [ %29, %43 ], [ %29, %39 ], [ %29, %31 ]
  %154 = load i8*, i8** %7, align 8, !tbaa !46
  %155 = zext i32 %153 to i64
  %156 = getelementptr inbounds i8, i8* %154, i64 %155
  %157 = load i8, i8* %156, align 1, !tbaa !4
  %158 = load i8*, i8** %8, align 8, !tbaa !54
  %159 = load i32, i32* %9, align 4, !tbaa !93
  %160 = add i32 %159, 1
  store i32 %160, i32* %9, align 4, !tbaa !93
  %161 = zext i32 %159 to i64
  %162 = getelementptr inbounds i8, i8* %158, i64 %161
  store i8 0, i8* %162, align 1, !tbaa !4
  %163 = load i8*, i8** %8, align 8, !tbaa !54
  %164 = load i32, i32* %9, align 4, !tbaa !93
  %165 = add i32 %164, 1
  store i32 %165, i32* %9, align 4, !tbaa !93
  %166 = zext i32 %164 to i64
  %167 = getelementptr inbounds i8, i8* %163, i64 %166
  store i8 0, i8* %167, align 1, !tbaa !4
  %168 = load i8*, i8** %8, align 8, !tbaa !54
  %169 = load i32, i32* %9, align 4, !tbaa !93
  %170 = add i32 %169, 1
  store i32 %170, i32* %9, align 4, !tbaa !93
  %171 = zext i32 %169 to i64
  %172 = getelementptr inbounds i8, i8* %168, i64 %171
  store i8 %157, i8* %172, align 1, !tbaa !4
  %173 = zext i8 %157 to i64
  %174 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %173, i32 0, i32 0
  %175 = load i16, i16* %174, align 4, !tbaa !4
  %176 = add i16 %175, 1
  store i16 %176, i16* %174, align 4, !tbaa !4
  %177 = load i32, i32* %9, align 4, !tbaa !93
  %178 = load i32, i32* %10, align 8, !tbaa !55
  %179 = icmp eq i32 %177, %178
  %180 = load i32, i32* %3, align 4, !tbaa !72
  %181 = add i32 %180, -1
  store i32 %181, i32* %3, align 4, !tbaa !72
  %182 = load i32, i32* %6, align 4, !tbaa !70
  %183 = add i32 %182, 1
  store i32 %183, i32* %6, align 4, !tbaa !70
  br i1 %179, label %184, label %151

184:                                              ; preds = %112, %152
  %185 = phi i32 [ %150, %112 ], [ %183, %152 ]
  %186 = load i64, i64* %11, align 8, !tbaa !71
  %187 = icmp sgt i64 %186, -1
  br i1 %187, label %188, label %192

188:                                              ; preds = %184
  %189 = load i8*, i8** %7, align 8, !tbaa !46
  %190 = and i64 %186, 4294967295
  %191 = getelementptr inbounds i8, i8* %189, i64 %190
  br label %192

192:                                              ; preds = %184, %188
  %193 = phi i8* [ %191, %188 ], [ null, %184 ]
  %194 = zext i32 %185 to i64
  %195 = sub nsw i64 %194, %186
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %193, i64 noundef %195, i32 noundef 0) #25
  %196 = load i32, i32* %6, align 4, !tbaa !70
  %197 = zext i32 %196 to i64
  store i64 %197, i64* %11, align 8, !tbaa !71
  %198 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %199 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %198, i64 0, i32 7
  %200 = load %struct.internal_state*, %struct.internal_state** %199, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %200) #25
  %201 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %200, i64 0, i32 5
  %202 = load i64, i64* %201, align 8, !tbaa !80
  %203 = trunc i64 %202 to i32
  %204 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %198, i64 0, i32 4
  %205 = load i32, i32* %204, align 8, !tbaa !86
  %206 = icmp ult i32 %205, %203
  %207 = select i1 %206, i32 %205, i32 %203
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %230, label %209

209:                                              ; preds = %192
  %210 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %198, i64 0, i32 3
  %211 = load i8*, i8** %210, align 8, !tbaa !87
  %212 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %200, i64 0, i32 4
  %213 = load i8*, i8** %212, align 8, !tbaa !81
  %214 = zext i32 %207 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %213, i64 %214, i1 false) #25
  %215 = load i8*, i8** %210, align 8, !tbaa !87
  %216 = getelementptr inbounds i8, i8* %215, i64 %214
  store i8* %216, i8** %210, align 8, !tbaa !87
  %217 = load i8*, i8** %212, align 8, !tbaa !81
  %218 = getelementptr inbounds i8, i8* %217, i64 %214
  store i8* %218, i8** %212, align 8, !tbaa !81
  %219 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %198, i64 0, i32 5
  %220 = load i64, i64* %219, align 8, !tbaa !88
  %221 = add i64 %220, %214
  store i64 %221, i64* %219, align 8, !tbaa !88
  %222 = load i32, i32* %204, align 8, !tbaa !86
  %223 = sub i32 %222, %207
  store i32 %223, i32* %204, align 8, !tbaa !86
  %224 = load i64, i64* %201, align 8, !tbaa !80
  %225 = sub i64 %224, %214
  store i64 %225, i64* %201, align 8, !tbaa !80
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %209
  %228 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %200, i64 0, i32 2
  %229 = load i8*, i8** %228, align 8, !tbaa !51
  store i8* %229, i8** %212, align 8, !tbaa !81
  br label %230

230:                                              ; preds = %192, %209, %227
  %231 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %232 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %231, i64 0, i32 4
  %233 = load i32, i32* %232, align 8, !tbaa !86
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %345, label %151

235:                                              ; preds = %21
  %236 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  store i32 0, i32* %236, align 4, !tbaa !73
  %237 = icmp eq i32 %1, 4
  br i1 %237, label %238, label %290

238:                                              ; preds = %235
  %239 = load i64, i64* %11, align 8, !tbaa !71
  %240 = icmp sgt i64 %239, -1
  br i1 %240, label %241, label %245

241:                                              ; preds = %238
  %242 = load i8*, i8** %7, align 8, !tbaa !46
  %243 = and i64 %239, 4294967295
  %244 = getelementptr inbounds i8, i8* %242, i64 %243
  br label %245

245:                                              ; preds = %238, %241
  %246 = phi i8* [ %244, %241 ], [ null, %238 ]
  %247 = load i32, i32* %6, align 4, !tbaa !70
  %248 = zext i32 %247 to i64
  %249 = sub nsw i64 %248, %239
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %246, i64 noundef %249, i32 noundef 1) #25
  %250 = load i32, i32* %6, align 4, !tbaa !70
  %251 = zext i32 %250 to i64
  store i64 %251, i64* %11, align 8, !tbaa !71
  %252 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %253 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %252, i64 0, i32 7
  %254 = load %struct.internal_state*, %struct.internal_state** %253, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %254) #25
  %255 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %254, i64 0, i32 5
  %256 = load i64, i64* %255, align 8, !tbaa !80
  %257 = trunc i64 %256 to i32
  %258 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %252, i64 0, i32 4
  %259 = load i32, i32* %258, align 8, !tbaa !86
  %260 = icmp ult i32 %259, %257
  %261 = select i1 %260, i32 %259, i32 %257
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %284, label %263

263:                                              ; preds = %245
  %264 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %252, i64 0, i32 3
  %265 = load i8*, i8** %264, align 8, !tbaa !87
  %266 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %254, i64 0, i32 4
  %267 = load i8*, i8** %266, align 8, !tbaa !81
  %268 = zext i32 %261 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %265, i8* align 1 %267, i64 %268, i1 false) #25
  %269 = load i8*, i8** %264, align 8, !tbaa !87
  %270 = getelementptr inbounds i8, i8* %269, i64 %268
  store i8* %270, i8** %264, align 8, !tbaa !87
  %271 = load i8*, i8** %266, align 8, !tbaa !81
  %272 = getelementptr inbounds i8, i8* %271, i64 %268
  store i8* %272, i8** %266, align 8, !tbaa !81
  %273 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %252, i64 0, i32 5
  %274 = load i64, i64* %273, align 8, !tbaa !88
  %275 = add i64 %274, %268
  store i64 %275, i64* %273, align 8, !tbaa !88
  %276 = load i32, i32* %258, align 8, !tbaa !86
  %277 = sub i32 %276, %261
  store i32 %277, i32* %258, align 8, !tbaa !86
  %278 = load i64, i64* %255, align 8, !tbaa !80
  %279 = sub i64 %278, %268
  store i64 %279, i64* %255, align 8, !tbaa !80
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %284

281:                                              ; preds = %263
  %282 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %254, i64 0, i32 2
  %283 = load i8*, i8** %282, align 8, !tbaa !51
  store i8* %283, i8** %266, align 8, !tbaa !81
  br label %284

284:                                              ; preds = %245, %263, %281
  %285 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %286 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %285, i64 0, i32 4
  %287 = load i32, i32* %286, align 8, !tbaa !86
  %288 = icmp eq i32 %287, 0
  %289 = select i1 %288, i32 2, i32 3
  br label %345

290:                                              ; preds = %235
  %291 = load i32, i32* %9, align 4, !tbaa !93
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %344, label %293

293:                                              ; preds = %290
  %294 = load i64, i64* %11, align 8, !tbaa !71
  %295 = icmp sgt i64 %294, -1
  br i1 %295, label %296, label %300

296:                                              ; preds = %293
  %297 = load i8*, i8** %7, align 8, !tbaa !46
  %298 = and i64 %294, 4294967295
  %299 = getelementptr inbounds i8, i8* %297, i64 %298
  br label %300

300:                                              ; preds = %293, %296
  %301 = phi i8* [ %299, %296 ], [ null, %293 ]
  %302 = load i32, i32* %6, align 4, !tbaa !70
  %303 = zext i32 %302 to i64
  %304 = sub nsw i64 %303, %294
  tail call void @_tr_flush_block(%struct.internal_state* noundef nonnull %0, i8* noundef %301, i64 noundef %304, i32 noundef 0) #25
  %305 = load i32, i32* %6, align 4, !tbaa !70
  %306 = zext i32 %305 to i64
  store i64 %306, i64* %11, align 8, !tbaa !71
  %307 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %308 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %307, i64 0, i32 7
  %309 = load %struct.internal_state*, %struct.internal_state** %308, align 8, !tbaa !31
  tail call void @_tr_flush_bits(%struct.internal_state* noundef %309) #25
  %310 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %309, i64 0, i32 5
  %311 = load i64, i64* %310, align 8, !tbaa !80
  %312 = trunc i64 %311 to i32
  %313 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %307, i64 0, i32 4
  %314 = load i32, i32* %313, align 8, !tbaa !86
  %315 = icmp ult i32 %314, %312
  %316 = select i1 %315, i32 %314, i32 %312
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %339, label %318

318:                                              ; preds = %300
  %319 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %307, i64 0, i32 3
  %320 = load i8*, i8** %319, align 8, !tbaa !87
  %321 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %309, i64 0, i32 4
  %322 = load i8*, i8** %321, align 8, !tbaa !81
  %323 = zext i32 %316 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %320, i8* align 1 %322, i64 %323, i1 false) #25
  %324 = load i8*, i8** %319, align 8, !tbaa !87
  %325 = getelementptr inbounds i8, i8* %324, i64 %323
  store i8* %325, i8** %319, align 8, !tbaa !87
  %326 = load i8*, i8** %321, align 8, !tbaa !81
  %327 = getelementptr inbounds i8, i8* %326, i64 %323
  store i8* %327, i8** %321, align 8, !tbaa !81
  %328 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %307, i64 0, i32 5
  %329 = load i64, i64* %328, align 8, !tbaa !88
  %330 = add i64 %329, %323
  store i64 %330, i64* %328, align 8, !tbaa !88
  %331 = load i32, i32* %313, align 8, !tbaa !86
  %332 = sub i32 %331, %316
  store i32 %332, i32* %313, align 8, !tbaa !86
  %333 = load i64, i64* %310, align 8, !tbaa !80
  %334 = sub i64 %333, %323
  store i64 %334, i64* %310, align 8, !tbaa !80
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %339

336:                                              ; preds = %318
  %337 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %309, i64 0, i32 2
  %338 = load i8*, i8** %337, align 8, !tbaa !51
  store i8* %338, i8** %321, align 8, !tbaa !81
  br label %339

339:                                              ; preds = %300, %318, %336
  %340 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8, !tbaa !32
  %341 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %340, i64 0, i32 4
  %342 = load i32, i32* %341, align 8, !tbaa !86
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %345, label %344

344:                                              ; preds = %339, %290
  br label %345

345:                                              ; preds = %230, %17, %339, %284, %344
  %346 = phi i32 [ 1, %344 ], [ %289, %284 ], [ 0, %339 ], [ 0, %17 ], [ 0, %230 ]
  ret i32 %346
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @deflateTune(%struct.z_stream_s* noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 {
  %6 = icmp eq %struct.z_stream_s* %0, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %9 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %8, align 8, !tbaa !28
  %10 = icmp eq i8* (i8*, i32, i32)* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %13 = load void (i8*, i8*)*, void (i8*, i8*)** %12, align 8, !tbaa !30
  %14 = icmp eq void (i8*, i8*)* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %17 = load %struct.internal_state*, %struct.internal_state** %16, align 8, !tbaa !31
  %18 = icmp eq %struct.internal_state* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 0
  %21 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8, !tbaa !32
  %22 = icmp eq %struct.z_stream_s* %21, %0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 1
  %25 = load i32, i32* %24, align 8, !tbaa !36
  switch i32 %25, label %31 [
    i32 42, label %26
    i32 57, label %26
    i32 69, label %26
    i32 73, label %26
    i32 91, label %26
    i32 103, label %26
    i32 113, label %26
    i32 666, label %26
  ]

26:                                               ; preds = %23, %23, %23, %23, %23, %23, %23, %23
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 35
  store i32 %1, i32* %27, align 4, !tbaa !65
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 32
  store i32 %2, i32* %28, align 8, !tbaa !63
  %29 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 36
  store i32 %3, i32* %29, align 8, !tbaa !67
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 31
  store i32 %4, i32* %30, align 4, !tbaa !69
  br label %31

31:                                               ; preds = %15, %19, %23, %5, %7, %11, %26
  %32 = phi i32 [ 0, %26 ], [ -2, %11 ], [ -2, %7 ], [ -2, %5 ], [ -2, %23 ], [ -2, %19 ], [ -2, %15 ]
  ret i32 %32
}

; Function Attrs: nofree norecurse nosync nounwind readonly uwtable
define i64 @deflateBound(%struct.z_stream_s* noundef readonly %0, i64 noundef %1) local_unnamed_addr #0 {
  %3 = lshr i64 %1, 3
  %4 = lshr i64 %1, 8
  %5 = lshr i64 %1, 9
  %6 = add i64 %1, 4
  %7 = add i64 %6, %3
  %8 = add i64 %7, %4
  %9 = add i64 %8, %5
  %10 = lshr i64 %1, 5
  %11 = lshr i64 %1, 7
  %12 = lshr i64 %1, 11
  %13 = add i64 %1, 7
  %14 = add i64 %13, %10
  %15 = add i64 %14, %11
  %16 = add i64 %15, %12
  %17 = icmp eq %struct.z_stream_s* %0, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %20 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8, !tbaa !28
  %21 = icmp eq i8* (i8*, i32, i32)* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %23, align 8, !tbaa !30
  %25 = icmp eq void (i8*, i8*)* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %28 = load %struct.internal_state*, %struct.internal_state** %27, align 8, !tbaa !31
  %29 = icmp eq %struct.internal_state* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 0
  %32 = load %struct.z_stream_s*, %struct.z_stream_s** %31, align 8, !tbaa !32
  %33 = icmp eq %struct.z_stream_s* %32, %0
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 1
  %36 = load i32, i32* %35, align 8, !tbaa !36
  switch i32 %36, label %37 [
    i32 42, label %41
    i32 57, label %41
    i32 69, label %41
    i32 73, label %41
    i32 91, label %41
    i32 103, label %41
    i32 113, label %41
    i32 666, label %41
  ]

37:                                               ; preds = %22, %18, %2, %34, %30, %26
  %38 = icmp ugt i64 %9, %16
  %39 = select i1 %38, i64 %9, i64 %16
  %40 = add i64 %39, 6
  br label %122

41:                                               ; preds = %34, %34, %34, %34, %34, %34, %34, %34
  %42 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 6
  %43 = load i32, i32* %42, align 8, !tbaa !37
  switch i32 %43, label %94 [
    i32 0, label %95
    i32 1, label %44
    i32 2, label %49
  ]

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 27
  %46 = load i32, i32* %45, align 4, !tbaa !70
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, i64 6, i64 10
  br label %95

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 7
  %51 = load %struct.gz_header_s*, %struct.gz_header_s** %50, align 8, !tbaa !38
  %52 = icmp eq %struct.gz_header_s* %51, null
  br i1 %52, label %95, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %51, i64 0, i32 4
  %55 = load i8*, i8** %54, align 8, !tbaa !115
  %56 = icmp eq i8* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %51, i64 0, i32 5
  %59 = load i32, i32* %58, align 8, !tbaa !120
  %60 = add i32 %59, 2
  %61 = zext i32 %60 to i64
  %62 = add nuw nsw i64 %61, 18
  br label %63

63:                                               ; preds = %57, %53
  %64 = phi i64 [ %62, %57 ], [ 18, %53 ]
  %65 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %51, i64 0, i32 7
  %66 = load i8*, i8** %65, align 8, !tbaa !116
  %67 = icmp eq i8* %66, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %63, %68
  %69 = phi i64 [ %71, %68 ], [ %64, %63 ]
  %70 = phi i8* [ %72, %68 ], [ %66, %63 ]
  %71 = add i64 %69, 1
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = load i8, i8* %70, align 1, !tbaa !4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %68, !llvm.loop !129

75:                                               ; preds = %68, %63
  %76 = phi i64 [ %64, %63 ], [ %71, %68 ]
  %77 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %51, i64 0, i32 9
  %78 = load i8*, i8** %77, align 8, !tbaa !117
  %79 = icmp eq i8* %78, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %75, %80
  %81 = phi i64 [ %83, %80 ], [ %76, %75 ]
  %82 = phi i8* [ %84, %80 ], [ %78, %75 ]
  %83 = add i64 %81, 1
  %84 = getelementptr inbounds i8, i8* %82, i64 1
  %85 = load i8, i8* %82, align 1, !tbaa !4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %80, !llvm.loop !130

87:                                               ; preds = %80, %75
  %88 = phi i64 [ %76, %75 ], [ %83, %80 ]
  %89 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %51, i64 0, i32 11
  %90 = load i32, i32* %89, align 4, !tbaa !114
  %91 = icmp eq i32 %90, 0
  %92 = add i64 %88, 2
  %93 = select i1 %91, i64 %88, i64 %92
  br label %95

94:                                               ; preds = %41
  br label %95

95:                                               ; preds = %41, %49, %87, %94, %44
  %96 = phi i64 [ 6, %94 ], [ %93, %87 ], [ 18, %49 ], [ %48, %44 ], [ 0, %41 ]
  %97 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 12
  %98 = load i32, i32* %97, align 4, !tbaa !39
  %99 = icmp eq i32 %98, 15
  %100 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 20
  %101 = load i32, i32* %100, align 8, !tbaa !42
  %102 = icmp eq i32 %101, 15
  %103 = select i1 %99, i1 %102, i1 false
  br i1 %103, label %114, label %104

104:                                              ; preds = %95
  %105 = icmp ugt i32 %98, %101
  br i1 %105, label %110, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %28, i64 0, i32 33
  %108 = load i32, i32* %107, align 4, !tbaa !56
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %106, %104
  br label %111

111:                                              ; preds = %106, %110
  %112 = phi i64 [ %16, %110 ], [ %9, %106 ]
  %113 = add i64 %112, %96
  br label %122

114:                                              ; preds = %95
  %115 = lshr i64 %1, 12
  %116 = lshr i64 %1, 14
  %117 = lshr i64 %1, 25
  %118 = add i64 %13, %115
  %119 = add i64 %118, %116
  %120 = add i64 %119, %117
  %121 = add i64 %120, %96
  br label %122

122:                                              ; preds = %114, %111, %37
  %123 = phi i64 [ %40, %37 ], [ %113, %111 ], [ %121, %114 ]
  ret i64 %123
}

; Function Attrs: nounwind uwtable
define i32 @deflateCopy(%struct.z_stream_s* noundef %0, %struct.z_stream_s* noundef readonly %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.z_stream_s* %1, null
  br i1 %3, label %134, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %134, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %134, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 7
  %14 = load %struct.internal_state*, %struct.internal_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.internal_state* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !32
  %19 = icmp eq %struct.z_stream_s* %18, %1
  br i1 %19, label %20, label %134

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !36
  switch i32 %22, label %134 [
    i32 42, label %23
    i32 57, label %23
    i32 69, label %23
    i32 73, label %23
    i32 91, label %23
    i32 103, label %23
    i32 113, label %23
    i32 666, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20
  %24 = icmp eq %struct.z_stream_s* %0, null
  br i1 %24, label %134, label %25

25:                                               ; preds = %23
  %26 = bitcast %struct.z_stream_s* %0 to i8*
  %27 = bitcast %struct.z_stream_s* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(112) %26, i8* noundef nonnull align 1 dereferenceable(112) %27, i64 112, i1 false)
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %29 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8, !tbaa !28
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %31 = load i8*, i8** %30, align 8, !tbaa !29
  %32 = tail call i8* %29(i8* noundef %31, i32 noundef 1, i32 noundef 5952) #25
  %33 = icmp eq i8* %32, null
  br i1 %33, label %134, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %36 = bitcast %struct.internal_state** %35 to i8**
  store i8* %32, i8** %36, align 8, !tbaa !31
  %37 = bitcast %struct.internal_state* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(5952) %32, i8* noundef nonnull align 1 dereferenceable(5952) %37, i64 5952, i1 false)
  %38 = bitcast i8* %32 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %38, align 8, !tbaa !32
  %39 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8, !tbaa !28
  %40 = load i8*, i8** %30, align 8, !tbaa !29
  %41 = getelementptr inbounds i8, i8* %32, i64 80
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 8, !tbaa !40
  %44 = tail call i8* %39(i8* noundef %40, i32 noundef %43, i32 noundef 2) #25
  %45 = getelementptr inbounds i8, i8* %32, i64 96
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8, !tbaa !46
  %47 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8, !tbaa !28
  %48 = load i8*, i8** %30, align 8, !tbaa !29
  %49 = load i32, i32* %42, align 8, !tbaa !40
  %50 = tail call i8* %47(i8* noundef %48, i32 noundef %49, i32 noundef 2) #25
  %51 = getelementptr inbounds i8, i8* %32, i64 112
  %52 = bitcast i8* %51 to i8**
  store i8* %50, i8** %52, align 8, !tbaa !47
  %53 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8, !tbaa !28
  %54 = load i8*, i8** %30, align 8, !tbaa !29
  %55 = getelementptr inbounds i8, i8* %32, i64 132
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4, !tbaa !43
  %58 = tail call i8* %53(i8* noundef %54, i32 noundef %57, i32 noundef 2) #25
  %59 = getelementptr inbounds i8, i8* %32, i64 120
  %60 = bitcast i8* %59 to i16**
  %61 = bitcast i8* %59 to i8**
  store i8* %58, i8** %61, align 8, !tbaa !48
  %62 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8, !tbaa !28
  %63 = load i8*, i8** %30, align 8, !tbaa !29
  %64 = getelementptr inbounds i8, i8* %32, i64 5896
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 8, !tbaa !50
  %67 = tail call i8* %62(i8* noundef %63, i32 noundef %66, i32 noundef 4) #25
  %68 = getelementptr inbounds i8, i8* %32, i64 16
  %69 = bitcast i8* %68 to i8**
  store i8* %67, i8** %69, align 8, !tbaa !51
  %70 = load i8*, i8** %46, align 8, !tbaa !46
  %71 = icmp eq i8* %70, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %34
  %73 = bitcast i8* %51 to i16**
  %74 = load i16*, i16** %73, align 8, !tbaa !47
  %75 = icmp eq i16* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = load i16*, i16** %60, align 8, !tbaa !48
  %78 = icmp eq i16* %77, null
  %79 = icmp eq i8* %67, null
  %80 = select i1 %78, i1 true, i1 %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %76, %72, %34
  %82 = tail call i32 @deflateEnd(%struct.z_stream_s* noundef nonnull %0)
  br label %134

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 14
  %85 = load i8*, i8** %84, align 8, !tbaa !46
  %86 = load i32, i32* %42, align 8, !tbaa !40
  %87 = shl i32 %86, 1
  %88 = zext i32 %87 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %70, i8* align 1 %85, i64 %88, i1 false)
  %89 = load i8*, i8** %52, align 8, !tbaa !47
  %90 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 16
  %91 = bitcast i16** %90 to i8**
  %92 = load i8*, i8** %91, align 8, !tbaa !47
  %93 = load i32, i32* %42, align 8, !tbaa !40
  %94 = zext i32 %93 to i64
  %95 = shl nuw nsw i64 %94, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %92, i64 %95, i1 false)
  %96 = load i8*, i8** %61, align 8, !tbaa !48
  %97 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 17
  %98 = bitcast i16** %97 to i8**
  %99 = load i8*, i8** %98, align 8, !tbaa !48
  %100 = load i32, i32* %56, align 4, !tbaa !43
  %101 = zext i32 %100 to i64
  %102 = shl nuw nsw i64 %101, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %99, i64 %102, i1 false)
  %103 = load i8*, i8** %69, align 8, !tbaa !51
  %104 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %105 = load i8*, i8** %104, align 8, !tbaa !51
  %106 = getelementptr inbounds i8, i8* %32, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8, !tbaa !52
  %109 = and i64 %108, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %105, i64 %109, i1 false)
  %110 = load i8*, i8** %69, align 8, !tbaa !51
  %111 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 4
  %112 = load i8*, i8** %111, align 8, !tbaa !81
  %113 = load i8*, i8** %104, align 8, !tbaa !51
  %114 = ptrtoint i8* %112 to i64
  %115 = ptrtoint i8* %113 to i64
  %116 = sub i64 %114, %115
  %117 = getelementptr inbounds i8, i8* %110, i64 %116
  %118 = getelementptr inbounds i8, i8* %32, i64 32
  %119 = bitcast i8* %118 to i8**
  store i8* %117, i8** %119, align 8, !tbaa !81
  %120 = load i32, i32* %65, align 8, !tbaa !50
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %110, i64 %121
  %123 = getelementptr inbounds i8, i8* %32, i64 5888
  %124 = bitcast i8* %123 to i8**
  store i8* %122, i8** %124, align 8, !tbaa !54
  %125 = getelementptr inbounds i8, i8* %32, i64 212
  %126 = getelementptr inbounds i8, i8* %32, i64 2904
  %127 = bitcast i8* %126 to i8**
  store i8* %125, i8** %127, align 8, !tbaa !131
  %128 = getelementptr inbounds i8, i8* %32, i64 2504
  %129 = getelementptr inbounds i8, i8* %32, i64 2928
  %130 = bitcast i8* %129 to i8**
  store i8* %128, i8** %130, align 8, !tbaa !132
  %131 = getelementptr inbounds i8, i8* %32, i64 2748
  %132 = getelementptr inbounds i8, i8* %32, i64 2952
  %133 = bitcast i8* %132 to i8**
  store i8* %131, i8** %133, align 8, !tbaa !133
  br label %134

134:                                              ; preds = %12, %16, %20, %2, %4, %8, %25, %23, %83, %81
  %135 = phi i32 [ -4, %81 ], [ 0, %83 ], [ -2, %23 ], [ -4, %25 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %20 ], [ -2, %16 ], [ -2, %12 ]
  ret i32 %135
}

; Function Attrs: nounwind uwtable
define i32 @inflateBackInit_(%struct.z_stream_s* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef readonly %3, i32 noundef %4) local_unnamed_addr #3 {
  %6 = icmp eq i8* %3, null
  br i1 %6, label %55, label %7

7:                                                ; preds = %5
  %8 = load i8, i8* %3, align 1, !tbaa !4
  %9 = icmp ne i8 %8, 49
  %10 = icmp ne i32 %4, 112
  %11 = or i1 %10, %9
  br i1 %11, label %55, label %12

12:                                               ; preds = %7
  %13 = icmp eq %struct.z_stream_s* %0, null
  %14 = icmp eq i8* %2, null
  %15 = or i1 %13, %14
  %16 = add i32 %1, -16
  %17 = icmp ult i32 %16, -8
  %18 = or i1 %17, %15
  br i1 %18, label %55, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* null, i8** %20, align 8, !tbaa !25
  %21 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %22 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %21, align 8, !tbaa !28
  %23 = icmp eq i8* (i8*, i32, i32)* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %21, align 8, !tbaa !28
  %25 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  store i8* null, i8** %25, align 8, !tbaa !29
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* (i8*, i32, i32)* [ @zcalloc, %24 ], [ %22, %19 ]
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %28, align 8, !tbaa !30
  %30 = icmp eq void (i8*, i8*)* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %28, align 8, !tbaa !30
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %34 = load i8*, i8** %33, align 8, !tbaa !29
  %35 = tail call i8* %27(i8* noundef %34, i32 noundef 1, i32 noundef 7160) #25
  %36 = icmp eq i8* %35, null
  br i1 %36, label %55, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %39 = bitcast %struct.internal_state** %38 to i8**
  store i8* %35, i8** %39, align 8, !tbaa !31
  %40 = getelementptr inbounds i8, i8* %35, i64 28
  %41 = bitcast i8* %40 to i32*
  store i32 32768, i32* %41, align 4, !tbaa !134
  %42 = getelementptr inbounds i8, i8* %35, i64 56
  %43 = bitcast i8* %42 to i32*
  store i32 %1, i32* %43, align 8, !tbaa !136
  %44 = shl nuw nsw i32 1, %1
  %45 = getelementptr inbounds i8, i8* %35, i64 60
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 4, !tbaa !137
  %47 = getelementptr inbounds i8, i8* %35, i64 72
  %48 = bitcast i8* %47 to i8**
  store i8* %2, i8** %48, align 8, !tbaa !138
  %49 = getelementptr inbounds i8, i8* %35, i64 68
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4, !tbaa !139
  %51 = getelementptr inbounds i8, i8* %35, i64 64
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 8, !tbaa !140
  %53 = getelementptr inbounds i8, i8* %35, i64 7144
  %54 = bitcast i8* %53 to i32*
  store i32 1, i32* %54, align 8, !tbaa !141
  br label %55

55:                                               ; preds = %32, %12, %5, %7, %37
  %56 = phi i32 [ 0, %37 ], [ -6, %7 ], [ -6, %5 ], [ -2, %12 ], [ -4, %32 ]
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define i32 @inflateBack(%struct.z_stream_s* noundef %0, i32 (i8*, i8**)* nocapture noundef readonly %1, i8* noundef %2, i32 (i8*, i8*, i32)* nocapture noundef readonly %3, i8* noundef %4) local_unnamed_addr #3 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #25
  %8 = icmp eq %struct.z_stream_s* %0, null
  br i1 %8, label %1379, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %11 = load %struct.internal_state*, %struct.internal_state** %10, align 8, !tbaa !31
  %12 = icmp eq %struct.internal_state* %11, null
  br i1 %12, label %1379, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.internal_state* %11 to %struct.inflate_state*
  %15 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* null, i8** %15, align 8, !tbaa !25
  %16 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  store i32 16191, i32* %16, align 8, !tbaa !142
  %17 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 2
  store i32 0, i32* %17, align 4, !tbaa !143
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 12
  store i32 0, i32* %18, align 8, !tbaa !140
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !89
  store i8* %20, i8** %6, align 8, !tbaa !53
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8, !tbaa !84
  br label %25

25:                                               ; preds = %13, %22
  %26 = phi i32 [ %24, %22 ], [ 0, %13 ]
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 14
  %28 = load i8*, i8** %27, align 8, !tbaa !138
  %29 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 11
  %30 = load i32, i32* %29, align 4, !tbaa !137
  %31 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 25
  %32 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 26
  %33 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 24
  %34 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 27
  %35 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 31, i64 0
  %36 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 28
  %37 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 20
  %38 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 22
  %39 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 0
  %40 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 30, i64 0
  %41 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 256
  %42 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 21
  %43 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 23
  %44 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 17
  %45 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 19
  %46 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 18
  %47 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 3
  %48 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %49 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %50 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 15
  %51 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 16
  br label %52

52:                                               ; preds = %1349, %25
  %53 = phi i32 [ 16191, %25 ], [ %1355, %1349 ]
  %54 = phi i8* [ %28, %25 ], [ %1350, %1349 ]
  %55 = phi i32 [ %26, %25 ], [ %1351, %1349 ]
  %56 = phi i32 [ %30, %25 ], [ %1352, %1349 ]
  %57 = phi i64 [ 0, %25 ], [ %1353, %1349 ]
  %58 = phi i32 [ 0, %25 ], [ %1354, %1349 ]
  switch i32 %53, label %1362 [
    i32 16191, label %63
    i32 16193, label %106
    i32 16196, label %59
    i32 16200, label %704
    i32 16208, label %1356
    i32 16209, label %1361
  ]

59:                                               ; preds = %52
  %60 = icmp ult i32 %58, 14
  br i1 %60, label %61, label %211

61:                                               ; preds = %59
  %62 = zext i32 %58 to i64
  br label %189

63:                                               ; preds = %52
  %64 = load i32, i32* %17, align 4, !tbaa !143
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = icmp ult i32 %58, 3
  br i1 %67, label %73, label %90

68:                                               ; preds = %63
  %69 = and i32 %58, 7
  %70 = zext i32 %69 to i64
  %71 = lshr i64 %57, %70
  %72 = and i32 %58, -8
  store i32 16208, i32* %16, align 8, !tbaa !142
  br label %1349

73:                                               ; preds = %66
  %74 = icmp eq i32 %55, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %73
  %76 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

79:                                               ; preds = %75, %73
  %80 = phi i32 [ %76, %75 ], [ %55, %73 ]
  %81 = add i32 %80, -1
  %82 = load i8*, i8** %6, align 8, !tbaa !53
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  store i8* %83, i8** %6, align 8, !tbaa !53
  %84 = load i8, i8* %82, align 1, !tbaa !4
  %85 = zext i8 %84 to i64
  %86 = zext i32 %58 to i64
  %87 = shl nuw nsw i64 %85, %86
  %88 = add i64 %87, %57
  %89 = add nuw nsw i32 %58, 8
  br label %90

90:                                               ; preds = %79, %66
  %91 = phi i32 [ %81, %79 ], [ %55, %66 ]
  %92 = phi i64 [ %88, %79 ], [ %57, %66 ]
  %93 = phi i32 [ %89, %79 ], [ %58, %66 ]
  %94 = trunc i64 %92 to i32
  %95 = and i32 %94, 1
  store i32 %95, i32* %17, align 4, !tbaa !143
  %96 = lshr i32 %94, 1
  %97 = and i32 %96, 3
  switch i32 %97, label %101 [
    i32 0, label %102
    i32 1, label %98
    i32 2, label %99
    i32 3, label %100
  ]

98:                                               ; preds = %90
  store %struct.code* getelementptr inbounds ([512 x %struct.code], [512 x %struct.code]* @fixedtables.lenfix, i64 0, i64 0), %struct.code** %37, align 8, !tbaa !144
  store i32 9, i32* %38, align 8, !tbaa !145
  store %struct.code* getelementptr inbounds ([32 x %struct.code], [32 x %struct.code]* @fixedtables.distfix, i64 0, i64 0), %struct.code** %42, align 8, !tbaa !146
  store i32 5, i32* %43, align 4, !tbaa !147
  br label %102

99:                                               ; preds = %90
  br label %102

100:                                              ; preds = %90
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  br label %102

101:                                              ; preds = %90
  unreachable

102:                                              ; preds = %90, %98, %99, %100
  %103 = phi i32 [ 16200, %98 ], [ 16196, %99 ], [ 16209, %100 ], [ 16193, %90 ]
  store i32 %103, i32* %16, align 8, !tbaa !142
  %104 = lshr i64 %92, 3
  %105 = add i32 %93, -3
  br label %1349

106:                                              ; preds = %52
  %107 = and i32 %58, 7
  %108 = zext i32 %107 to i64
  %109 = lshr i64 %57, %108
  %110 = and i32 %58, -8
  %111 = icmp ult i32 %110, 32
  br i1 %111, label %112, label %137

112:                                              ; preds = %106
  %113 = and i32 %58, -8
  %114 = zext i32 %113 to i64
  br label %115

115:                                              ; preds = %112, %124
  %116 = phi i64 [ %114, %112 ], [ %133, %124 ]
  %117 = phi i64 [ %109, %112 ], [ %132, %124 ]
  %118 = phi i32 [ %55, %112 ], [ %126, %124 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %115
  %121 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

124:                                              ; preds = %120, %115
  %125 = phi i32 [ %121, %120 ], [ %118, %115 ]
  %126 = add i32 %125, -1
  %127 = load i8*, i8** %6, align 8, !tbaa !53
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  store i8* %128, i8** %6, align 8, !tbaa !53
  %129 = load i8, i8* %127, align 1, !tbaa !4
  %130 = zext i8 %129 to i64
  %131 = shl nuw nsw i64 %130, %116
  %132 = add i64 %131, %117
  %133 = add nuw nsw i64 %116, 8
  %134 = icmp ult i64 %116, 24
  br i1 %134, label %115, label %135, !llvm.loop !148

135:                                              ; preds = %124
  %136 = trunc i64 %133 to i32
  br label %137

137:                                              ; preds = %135, %106
  %138 = phi i32 [ %55, %106 ], [ %126, %135 ]
  %139 = phi i64 [ %109, %106 ], [ %132, %135 ]
  %140 = phi i32 [ %110, %106 ], [ %136, %135 ]
  %141 = and i64 %139, 65535
  %142 = lshr i64 %139, 16
  %143 = xor i64 %142, 65535
  %144 = icmp eq i64 %141, %143
  br i1 %144, label %146, label %145

145:                                              ; preds = %137
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

146:                                              ; preds = %137
  %147 = trunc i64 %139 to i32
  %148 = and i32 %147, 65535
  store i32 %148, i32* %44, align 4, !tbaa !149
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %185, label %150

150:                                              ; preds = %146, %168
  %151 = phi i32 [ %180, %168 ], [ %56, %146 ]
  %152 = phi i32 [ %177, %168 ], [ %138, %146 ]
  %153 = phi i8* [ %181, %168 ], [ %54, %146 ]
  %154 = phi i32 [ %183, %168 ], [ %148, %146 ]
  %155 = icmp eq i32 %152, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %150
  %157 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

160:                                              ; preds = %150, %156
  %161 = phi i32 [ %157, %156 ], [ %152, %150 ]
  %162 = icmp eq i32 %151, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %160
  %164 = load i8*, i8** %27, align 8, !tbaa !138
  %165 = load i32, i32* %29, align 4, !tbaa !137
  store i32 %165, i32* %18, align 8, !tbaa !140
  %166 = call i32 %3(i8* noundef %4, i8* noundef %164, i32 noundef %165) #25
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %1362

168:                                              ; preds = %163, %160
  %169 = phi i8* [ %164, %163 ], [ %153, %160 ]
  %170 = phi i32 [ %165, %163 ], [ %151, %160 ]
  %171 = icmp ugt i32 %154, %161
  %172 = select i1 %171, i32 %161, i32 %154
  %173 = icmp ugt i32 %172, %170
  %174 = select i1 %173, i32 %170, i32 %172
  %175 = load i8*, i8** %6, align 8, !tbaa !53
  %176 = zext i32 %174 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %175, i64 %176, i1 false)
  %177 = sub i32 %161, %174
  %178 = load i8*, i8** %6, align 8, !tbaa !53
  %179 = getelementptr inbounds i8, i8* %178, i64 %176
  store i8* %179, i8** %6, align 8, !tbaa !53
  %180 = sub i32 %170, %174
  %181 = getelementptr inbounds i8, i8* %169, i64 %176
  %182 = load i32, i32* %44, align 4, !tbaa !149
  %183 = sub i32 %182, %174
  store i32 %183, i32* %44, align 4, !tbaa !149
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %150, !llvm.loop !150

185:                                              ; preds = %168, %146
  %186 = phi i8* [ %54, %146 ], [ %181, %168 ]
  %187 = phi i32 [ %138, %146 ], [ %177, %168 ]
  %188 = phi i32 [ %56, %146 ], [ %180, %168 ]
  store i32 16191, i32* %16, align 8, !tbaa !142
  br label %1349

189:                                              ; preds = %61, %198
  %190 = phi i64 [ %62, %61 ], [ %207, %198 ]
  %191 = phi i64 [ %57, %61 ], [ %206, %198 ]
  %192 = phi i32 [ %55, %61 ], [ %200, %198 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %198

194:                                              ; preds = %189
  %195 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

198:                                              ; preds = %194, %189
  %199 = phi i32 [ %195, %194 ], [ %192, %189 ]
  %200 = add i32 %199, -1
  %201 = load i8*, i8** %6, align 8, !tbaa !53
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  store i8* %202, i8** %6, align 8, !tbaa !53
  %203 = load i8, i8* %201, align 1, !tbaa !4
  %204 = zext i8 %203 to i64
  %205 = shl nuw nsw i64 %204, %190
  %206 = add i64 %205, %191
  %207 = add nuw nsw i64 %190, 8
  %208 = icmp ult i64 %190, 6
  br i1 %208, label %189, label %209, !llvm.loop !151

209:                                              ; preds = %198
  %210 = trunc i64 %207 to i32
  br label %211

211:                                              ; preds = %209, %59
  %212 = phi i32 [ %55, %59 ], [ %200, %209 ]
  %213 = phi i64 [ %57, %59 ], [ %206, %209 ]
  %214 = phi i32 [ %58, %59 ], [ %210, %209 ]
  %215 = trunc i64 %213 to i32
  %216 = and i32 %215, 31
  %217 = add nuw nsw i32 %216, 257
  store i32 %217, i32* %31, align 4, !tbaa !152
  %218 = lshr i32 %215, 5
  %219 = and i32 %218, 31
  %220 = add nuw nsw i32 %219, 1
  store i32 %220, i32* %32, align 8, !tbaa !153
  %221 = lshr i32 %215, 10
  %222 = and i32 %221, 15
  %223 = add nuw nsw i32 %222, 4
  store i32 %223, i32* %33, align 8, !tbaa !154
  %224 = lshr i64 %213, 14
  %225 = add i32 %214, -14
  %226 = icmp ugt i32 %216, 29
  %227 = icmp ugt i32 %219, 29
  %228 = select i1 %226, i1 true, i1 %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %211
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

230:                                              ; preds = %211
  store i32 0, i32* %34, align 4, !tbaa !155
  br label %252

231:                                              ; preds = %282
  %232 = icmp ult i32 %291, 19
  br i1 %232, label %233, label %325

233:                                              ; preds = %231
  %234 = zext i32 %291 to i64
  %235 = sub i32 2, %285
  %236 = and i32 %235, 3
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %248, label %238

238:                                              ; preds = %233, %238
  %239 = phi i64 [ %241, %238 ], [ %234, %233 ]
  %240 = phi i32 [ %246, %238 ], [ 0, %233 ]
  %241 = add nuw nsw i64 %239, 1
  %242 = getelementptr inbounds [19 x i16], [19 x i16]* @inflateBack.order, i64 0, i64 %239
  %243 = load i16, i16* %242, align 2, !tbaa !60
  %244 = zext i16 %243 to i64
  %245 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %244
  store i16 0, i16* %245, align 2, !tbaa !60
  %246 = add i32 %240, 1
  %247 = icmp eq i32 %246, %236
  br i1 %247, label %248, label %238, !llvm.loop !156

248:                                              ; preds = %238, %233
  %249 = phi i64 [ %234, %233 ], [ %241, %238 ]
  %250 = add i32 %285, -15
  %251 = icmp ult i32 %250, 3
  br i1 %251, label %324, label %300

252:                                              ; preds = %230, %282
  %253 = phi i32 [ %283, %282 ], [ %223, %230 ]
  %254 = phi i32 [ %284, %282 ], [ %223, %230 ]
  %255 = phi i32 [ %291, %282 ], [ 0, %230 ]
  %256 = phi i32 [ %298, %282 ], [ %225, %230 ]
  %257 = phi i64 [ %297, %282 ], [ %224, %230 ]
  %258 = phi i32 [ %286, %282 ], [ %212, %230 ]
  %259 = icmp ult i32 %256, 3
  br i1 %259, label %260, label %282

260:                                              ; preds = %252
  %261 = icmp eq i32 %258, 0
  br i1 %261, label %262, label %269

262:                                              ; preds = %260
  %263 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %262
  %266 = load i32, i32* %34, align 4, !tbaa !155
  %267 = load i32, i32* %33, align 8, !tbaa !154
  br label %269

268:                                              ; preds = %262
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

269:                                              ; preds = %265, %260
  %270 = phi i32 [ %267, %265 ], [ %253, %260 ]
  %271 = phi i32 [ %266, %265 ], [ %255, %260 ]
  %272 = phi i32 [ %263, %265 ], [ %258, %260 ]
  %273 = add i32 %272, -1
  %274 = load i8*, i8** %6, align 8, !tbaa !53
  %275 = getelementptr inbounds i8, i8* %274, i64 1
  store i8* %275, i8** %6, align 8, !tbaa !53
  %276 = load i8, i8* %274, align 1, !tbaa !4
  %277 = zext i8 %276 to i64
  %278 = zext i32 %256 to i64
  %279 = shl nuw nsw i64 %277, %278
  %280 = add i64 %279, %257
  %281 = add nuw nsw i32 %256, 8
  br label %282

282:                                              ; preds = %269, %252
  %283 = phi i32 [ %270, %269 ], [ %253, %252 ]
  %284 = phi i32 [ %270, %269 ], [ %254, %252 ]
  %285 = phi i32 [ %271, %269 ], [ %255, %252 ]
  %286 = phi i32 [ %273, %269 ], [ %258, %252 ]
  %287 = phi i64 [ %280, %269 ], [ %257, %252 ]
  %288 = phi i32 [ %281, %269 ], [ %256, %252 ]
  %289 = trunc i64 %287 to i16
  %290 = and i16 %289, 7
  %291 = add i32 %285, 1
  store i32 %291, i32* %34, align 4, !tbaa !155
  %292 = zext i32 %285 to i64
  %293 = getelementptr inbounds [19 x i16], [19 x i16]* @inflateBack.order, i64 0, i64 %292
  %294 = load i16, i16* %293, align 2, !tbaa !60
  %295 = zext i16 %294 to i64
  %296 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %295
  store i16 %290, i16* %296, align 2, !tbaa !60
  %297 = lshr i64 %287, 3
  %298 = add i32 %288, -3
  %299 = icmp ult i32 %291, %284
  br i1 %299, label %252, label %231, !llvm.loop !157

300:                                              ; preds = %248, %300
  %301 = phi i64 [ %317, %300 ], [ %249, %248 ]
  %302 = add nuw nsw i64 %301, 1
  %303 = getelementptr inbounds [19 x i16], [19 x i16]* @inflateBack.order, i64 0, i64 %301
  %304 = load i16, i16* %303, align 2, !tbaa !60
  %305 = zext i16 %304 to i64
  %306 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %305
  store i16 0, i16* %306, align 2, !tbaa !60
  %307 = add nuw nsw i64 %301, 2
  %308 = getelementptr inbounds [19 x i16], [19 x i16]* @inflateBack.order, i64 0, i64 %302
  %309 = load i16, i16* %308, align 2, !tbaa !60
  %310 = zext i16 %309 to i64
  %311 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %310
  store i16 0, i16* %311, align 2, !tbaa !60
  %312 = add nuw nsw i64 %301, 3
  %313 = getelementptr inbounds [19 x i16], [19 x i16]* @inflateBack.order, i64 0, i64 %307
  %314 = load i16, i16* %313, align 2, !tbaa !60
  %315 = zext i16 %314 to i64
  %316 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %315
  store i16 0, i16* %316, align 2, !tbaa !60
  %317 = add nuw nsw i64 %301, 4
  %318 = getelementptr inbounds [19 x i16], [19 x i16]* @inflateBack.order, i64 0, i64 %312
  %319 = load i16, i16* %318, align 2, !tbaa !60
  %320 = zext i16 %319 to i64
  %321 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %320
  store i16 0, i16* %321, align 2, !tbaa !60
  %322 = trunc i64 %317 to i32
  %323 = icmp eq i32 %322, 19
  br i1 %323, label %324, label %300, !llvm.loop !158

324:                                              ; preds = %300, %248
  store i32 19, i32* %34, align 4, !tbaa !155
  br label %325

325:                                              ; preds = %324, %231
  store %struct.code* %35, %struct.code** %36, align 8, !tbaa !159
  store %struct.code* %35, %struct.code** %37, align 8, !tbaa !144
  store i32 7, i32* %38, align 8, !tbaa !145
  %326 = call i32 @inflate_table(i32 noundef 0, i16* noundef nonnull %39, i32 noundef 19, %struct.code** noundef nonnull %36, i32* noundef nonnull %38, i16* noundef nonnull %40) #25
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %325
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

329:                                              ; preds = %325
  store i32 0, i32* %34, align 4, !tbaa !155
  %330 = load i32, i32* %31, align 4, !tbaa !152
  %331 = load i32, i32* %32, align 8, !tbaa !153
  %332 = sub i32 0, %330
  %333 = icmp eq i32 %331, %332
  br i1 %333, label %679, label %334

334:                                              ; preds = %329, %671
  %335 = phi i32 [ %677, %671 ], [ %298, %329 ]
  %336 = phi i64 [ %676, %671 ], [ %297, %329 ]
  %337 = phi i32 [ %675, %671 ], [ %286, %329 ]
  %338 = load %struct.code*, %struct.code** %37, align 8, !tbaa !144
  %339 = trunc i64 %336 to i32
  %340 = load i32, i32* %38, align 8, !tbaa !145
  %341 = shl nsw i32 -1, %340
  %342 = xor i32 %341, -1
  %343 = and i32 %342, %339
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %struct.code, %struct.code* %338, i64 %344, i32 1
  %346 = load i8, i8* %345, align 1, !tbaa.struct !160
  %347 = getelementptr inbounds %struct.code, %struct.code* %338, i64 %344, i32 2
  %348 = zext i8 %346 to i32
  %349 = icmp ult i32 %335, %348
  br i1 %349, label %350, label %392

350:                                              ; preds = %334
  %351 = zext i32 %335 to i64
  br label %352

352:                                              ; preds = %350, %366
  %353 = phi i32 [ %340, %350 ], [ %367, %366 ]
  %354 = phi %struct.code* [ %338, %350 ], [ %368, %366 ]
  %355 = phi i64 [ %351, %350 ], [ %377, %366 ]
  %356 = phi i64 [ %336, %350 ], [ %376, %366 ]
  %357 = phi i32 [ %337, %350 ], [ %370, %366 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %366

359:                                              ; preds = %352
  %360 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %359
  %363 = load %struct.code*, %struct.code** %37, align 8, !tbaa !144
  %364 = load i32, i32* %38, align 8, !tbaa !145
  br label %366

365:                                              ; preds = %359
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

366:                                              ; preds = %362, %352
  %367 = phi i32 [ %364, %362 ], [ %353, %352 ]
  %368 = phi %struct.code* [ %363, %362 ], [ %354, %352 ]
  %369 = phi i32 [ %360, %362 ], [ %357, %352 ]
  %370 = add i32 %369, -1
  %371 = load i8*, i8** %6, align 8, !tbaa !53
  %372 = getelementptr inbounds i8, i8* %371, i64 1
  store i8* %372, i8** %6, align 8, !tbaa !53
  %373 = load i8, i8* %371, align 1, !tbaa !4
  %374 = zext i8 %373 to i64
  %375 = shl i64 %374, %355
  %376 = add i64 %375, %356
  %377 = add nuw nsw i64 %355, 8
  %378 = trunc i64 %376 to i32
  %379 = shl nsw i32 -1, %367
  %380 = xor i32 %379, -1
  %381 = and i32 %380, %378
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds %struct.code, %struct.code* %368, i64 %382, i32 1
  %384 = load i8, i8* %383, align 1, !tbaa.struct !160
  %385 = zext i8 %384 to i64
  %386 = icmp ult i64 %377, %385
  br i1 %386, label %352, label %387

387:                                              ; preds = %366
  %388 = zext i32 %381 to i64
  %389 = zext i8 %384 to i32
  %390 = getelementptr inbounds %struct.code, %struct.code* %368, i64 %388, i32 2
  %391 = trunc i64 %377 to i32
  br label %392

392:                                              ; preds = %387, %334
  %393 = phi i32 [ %389, %387 ], [ %348, %334 ]
  %394 = phi i8 [ %384, %387 ], [ %346, %334 ]
  %395 = phi i32 [ %370, %387 ], [ %337, %334 ]
  %396 = phi i64 [ %376, %387 ], [ %336, %334 ]
  %397 = phi i32 [ %391, %387 ], [ %335, %334 ]
  %398 = phi i16* [ %390, %387 ], [ %347, %334 ]
  %399 = load i16, i16* %398, align 2
  %400 = icmp ult i16 %399, 16
  br i1 %400, label %401, label %412

401:                                              ; preds = %392
  %402 = zext i8 %394 to i64
  %403 = lshr i64 %396, %402
  %404 = sub i32 %397, %393
  %405 = load i32, i32* %34, align 4, !tbaa !155
  %406 = add i32 %405, 1
  store i32 %406, i32* %34, align 4, !tbaa !155
  %407 = zext i32 %405 to i64
  %408 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %407
  store i16 %399, i16* %408, align 2, !tbaa !60
  %409 = load i32, i32* %31, align 4, !tbaa !152
  %410 = load i32, i32* %32, align 8, !tbaa !153
  %411 = add i32 %410, %409
  br label %671

412:                                              ; preds = %392
  switch i16 %399, label %425 [
    i16 16, label %419
    i16 17, label %413
  ]

413:                                              ; preds = %412
  %414 = add nuw nsw i32 %393, 3
  %415 = icmp ult i32 %397, %414
  br i1 %415, label %416, label %495

416:                                              ; preds = %413
  %417 = zext i32 %397 to i64
  %418 = zext i32 %414 to i64
  br label %473

419:                                              ; preds = %412
  %420 = add nuw nsw i32 %393, 2
  %421 = icmp ult i32 %397, %420
  br i1 %421, label %422, label %453

422:                                              ; preds = %419
  %423 = zext i32 %397 to i64
  %424 = zext i32 %420 to i64
  br label %431

425:                                              ; preds = %412
  %426 = add nuw nsw i32 %393, 7
  %427 = icmp ult i32 %397, %426
  br i1 %427, label %428, label %529

428:                                              ; preds = %425
  %429 = zext i32 %397 to i64
  %430 = zext i32 %426 to i64
  br label %507

431:                                              ; preds = %422, %440
  %432 = phi i64 [ %423, %422 ], [ %449, %440 ]
  %433 = phi i64 [ %396, %422 ], [ %448, %440 ]
  %434 = phi i32 [ %395, %422 ], [ %442, %440 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %440

436:                                              ; preds = %431
  %437 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %440

439:                                              ; preds = %436
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

440:                                              ; preds = %436, %431
  %441 = phi i32 [ %437, %436 ], [ %434, %431 ]
  %442 = add i32 %441, -1
  %443 = load i8*, i8** %6, align 8, !tbaa !53
  %444 = getelementptr inbounds i8, i8* %443, i64 1
  store i8* %444, i8** %6, align 8, !tbaa !53
  %445 = load i8, i8* %443, align 1, !tbaa !4
  %446 = zext i8 %445 to i64
  %447 = shl i64 %446, %432
  %448 = add i64 %447, %433
  %449 = add nuw nsw i64 %432, 8
  %450 = icmp ult i64 %449, %424
  br i1 %450, label %431, label %451, !llvm.loop !161

451:                                              ; preds = %440
  %452 = trunc i64 %449 to i32
  br label %453

453:                                              ; preds = %451, %419
  %454 = phi i32 [ %395, %419 ], [ %442, %451 ]
  %455 = phi i64 [ %396, %419 ], [ %448, %451 ]
  %456 = phi i32 [ %397, %419 ], [ %452, %451 ]
  %457 = zext i8 %394 to i64
  %458 = lshr i64 %455, %457
  %459 = sub i32 %456, %393
  %460 = load i32, i32* %34, align 4, !tbaa !155
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %463

462:                                              ; preds = %453
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

463:                                              ; preds = %453
  %464 = add i32 %460, -1
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %465
  %467 = load i16, i16* %466, align 2, !tbaa !60
  %468 = trunc i64 %458 to i32
  %469 = and i32 %468, 3
  %470 = add nuw nsw i32 %469, 3
  %471 = lshr i64 %458, 2
  %472 = add i32 %459, -2
  br label %541

473:                                              ; preds = %416, %482
  %474 = phi i64 [ %417, %416 ], [ %491, %482 ]
  %475 = phi i64 [ %396, %416 ], [ %490, %482 ]
  %476 = phi i32 [ %395, %416 ], [ %484, %482 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %482

478:                                              ; preds = %473
  %479 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

482:                                              ; preds = %478, %473
  %483 = phi i32 [ %479, %478 ], [ %476, %473 ]
  %484 = add i32 %483, -1
  %485 = load i8*, i8** %6, align 8, !tbaa !53
  %486 = getelementptr inbounds i8, i8* %485, i64 1
  store i8* %486, i8** %6, align 8, !tbaa !53
  %487 = load i8, i8* %485, align 1, !tbaa !4
  %488 = zext i8 %487 to i64
  %489 = shl i64 %488, %474
  %490 = add i64 %489, %475
  %491 = add nuw nsw i64 %474, 8
  %492 = icmp ult i64 %491, %418
  br i1 %492, label %473, label %493, !llvm.loop !162

493:                                              ; preds = %482
  %494 = trunc i64 %491 to i32
  br label %495

495:                                              ; preds = %493, %413
  %496 = phi i32 [ %395, %413 ], [ %484, %493 ]
  %497 = phi i64 [ %396, %413 ], [ %490, %493 ]
  %498 = phi i32 [ %397, %413 ], [ %494, %493 ]
  %499 = zext i8 %394 to i64
  %500 = lshr i64 %497, %499
  %501 = trunc i64 %500 to i32
  %502 = and i32 %501, 7
  %503 = add nuw nsw i32 %502, 3
  %504 = lshr i64 %500, 3
  %505 = sub nuw nsw i32 -3, %393
  %506 = add i32 %505, %498
  br label %541

507:                                              ; preds = %428, %516
  %508 = phi i64 [ %429, %428 ], [ %525, %516 ]
  %509 = phi i64 [ %396, %428 ], [ %524, %516 ]
  %510 = phi i32 [ %395, %428 ], [ %518, %516 ]
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %516

512:                                              ; preds = %507
  %513 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

516:                                              ; preds = %512, %507
  %517 = phi i32 [ %513, %512 ], [ %510, %507 ]
  %518 = add i32 %517, -1
  %519 = load i8*, i8** %6, align 8, !tbaa !53
  %520 = getelementptr inbounds i8, i8* %519, i64 1
  store i8* %520, i8** %6, align 8, !tbaa !53
  %521 = load i8, i8* %519, align 1, !tbaa !4
  %522 = zext i8 %521 to i64
  %523 = shl i64 %522, %508
  %524 = add i64 %523, %509
  %525 = add nuw nsw i64 %508, 8
  %526 = icmp ult i64 %525, %430
  br i1 %526, label %507, label %527, !llvm.loop !163

527:                                              ; preds = %516
  %528 = trunc i64 %525 to i32
  br label %529

529:                                              ; preds = %527, %425
  %530 = phi i32 [ %395, %425 ], [ %518, %527 ]
  %531 = phi i64 [ %396, %425 ], [ %524, %527 ]
  %532 = phi i32 [ %397, %425 ], [ %528, %527 ]
  %533 = zext i8 %394 to i64
  %534 = lshr i64 %531, %533
  %535 = trunc i64 %534 to i32
  %536 = and i32 %535, 127
  %537 = add nuw nsw i32 %536, 11
  %538 = lshr i64 %534, 7
  %539 = sub nuw nsw i32 -7, %393
  %540 = add i32 %539, %532
  br label %541

541:                                              ; preds = %495, %529, %463
  %542 = phi i32 [ %454, %463 ], [ %496, %495 ], [ %530, %529 ]
  %543 = phi i64 [ %471, %463 ], [ %504, %495 ], [ %538, %529 ]
  %544 = phi i32 [ %472, %463 ], [ %506, %495 ], [ %540, %529 ]
  %545 = phi i32 [ %470, %463 ], [ %503, %495 ], [ %537, %529 ]
  %546 = phi i16 [ %467, %463 ], [ 0, %495 ], [ 0, %529 ]
  %547 = load i32, i32* %34, align 4, !tbaa !155
  %548 = add i32 %547, %545
  %549 = load i32, i32* %31, align 4, !tbaa !152
  %550 = load i32, i32* %32, align 8, !tbaa !153
  %551 = add i32 %550, %549
  %552 = icmp ugt i32 %548, %551
  br i1 %552, label %651, label %553

553:                                              ; preds = %541
  %554 = icmp ult i32 %545, 16
  br i1 %554, label %630, label %555

555:                                              ; preds = %553
  %556 = add nsw i32 %545, -1
  %557 = xor i32 %547, -1
  %558 = icmp ugt i32 %556, %557
  br i1 %558, label %630, label %559

559:                                              ; preds = %555
  %560 = and i32 %545, -16
  %561 = and i32 %545, 15
  %562 = add i32 %547, %560
  %563 = insertelement <8 x i16> poison, i16 %546, i64 0
  %564 = shufflevector <8 x i16> %563, <8 x i16> poison, <8 x i32> zeroinitializer
  %565 = insertelement <8 x i16> poison, i16 %546, i64 0
  %566 = shufflevector <8 x i16> %565, <8 x i16> poison, <8 x i32> zeroinitializer
  %567 = zext i32 %547 to i64
  %568 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %567
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !tbaa !60
  %570 = getelementptr inbounds i16, i16* %568, i64 8
  %571 = bitcast i16* %570 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %571, align 2, !tbaa !60
  %572 = icmp eq i32 %560, 16
  br i1 %572, label %628, label %573, !llvm.loop !164

573:                                              ; preds = %559
  %574 = add i32 %547, 16
  %575 = zext i32 %574 to i64
  %576 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %575
  %577 = bitcast i16* %576 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %577, align 2, !tbaa !60
  %578 = getelementptr inbounds i16, i16* %576, i64 8
  %579 = bitcast i16* %578 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %579, align 2, !tbaa !60
  %580 = icmp eq i32 %560, 32
  br i1 %580, label %628, label %581, !llvm.loop !164

581:                                              ; preds = %573
  %582 = add i32 %547, 32
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %583
  %585 = bitcast i16* %584 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %585, align 2, !tbaa !60
  %586 = getelementptr inbounds i16, i16* %584, i64 8
  %587 = bitcast i16* %586 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %587, align 2, !tbaa !60
  %588 = icmp eq i32 %560, 48
  br i1 %588, label %628, label %589, !llvm.loop !164

589:                                              ; preds = %581
  %590 = add i32 %547, 48
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %591
  %593 = bitcast i16* %592 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %593, align 2, !tbaa !60
  %594 = getelementptr inbounds i16, i16* %592, i64 8
  %595 = bitcast i16* %594 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %595, align 2, !tbaa !60
  %596 = icmp eq i32 %560, 64
  br i1 %596, label %628, label %597, !llvm.loop !164

597:                                              ; preds = %589
  %598 = add i32 %547, 64
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %599
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %601, align 2, !tbaa !60
  %602 = getelementptr inbounds i16, i16* %600, i64 8
  %603 = bitcast i16* %602 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %603, align 2, !tbaa !60
  %604 = icmp eq i32 %560, 80
  br i1 %604, label %628, label %605, !llvm.loop !164

605:                                              ; preds = %597
  %606 = add i32 %547, 80
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %607
  %609 = bitcast i16* %608 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %609, align 2, !tbaa !60
  %610 = getelementptr inbounds i16, i16* %608, i64 8
  %611 = bitcast i16* %610 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %611, align 2, !tbaa !60
  %612 = icmp eq i32 %560, 96
  br i1 %612, label %628, label %613, !llvm.loop !164

613:                                              ; preds = %605
  %614 = add i32 %547, 96
  %615 = zext i32 %614 to i64
  %616 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %615
  %617 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %617, align 2, !tbaa !60
  %618 = getelementptr inbounds i16, i16* %616, i64 8
  %619 = bitcast i16* %618 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %619, align 2, !tbaa !60
  %620 = icmp eq i32 %560, 112
  br i1 %620, label %628, label %621, !llvm.loop !164

621:                                              ; preds = %613
  %622 = add i32 %547, 112
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %623
  %625 = bitcast i16* %624 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %625, align 2, !tbaa !60
  %626 = getelementptr inbounds i16, i16* %624, i64 8
  %627 = bitcast i16* %626 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %627, align 2, !tbaa !60
  br label %628

628:                                              ; preds = %621, %613, %605, %597, %589, %581, %573, %559
  %629 = icmp eq i32 %545, %560
  br i1 %629, label %669, label %630

630:                                              ; preds = %555, %553, %628
  %631 = phi i32 [ %545, %555 ], [ %545, %553 ], [ %561, %628 ]
  %632 = phi i32 [ %547, %555 ], [ %547, %553 ], [ %562, %628 ]
  %633 = add nsw i32 %631, -1
  %634 = and i32 %631, 3
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %646, label %636

636:                                              ; preds = %630, %636
  %637 = phi i32 [ %640, %636 ], [ %631, %630 ]
  %638 = phi i32 [ %641, %636 ], [ %632, %630 ]
  %639 = phi i32 [ %644, %636 ], [ 0, %630 ]
  %640 = add nsw i32 %637, -1
  %641 = add i32 %638, 1
  %642 = zext i32 %638 to i64
  %643 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %642
  store i16 %546, i16* %643, align 2, !tbaa !60
  %644 = add i32 %639, 1
  %645 = icmp eq i32 %644, %634
  br i1 %645, label %646, label %636, !llvm.loop !165

646:                                              ; preds = %636, %630
  %647 = phi i32 [ undef, %630 ], [ %641, %636 ]
  %648 = phi i32 [ %631, %630 ], [ %640, %636 ]
  %649 = phi i32 [ %632, %630 ], [ %641, %636 ]
  %650 = icmp ult i32 %633, 3
  br i1 %650, label %669, label %652

651:                                              ; preds = %541
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

652:                                              ; preds = %646, %652
  %653 = phi i32 [ %664, %652 ], [ %648, %646 ]
  %654 = phi i32 [ %665, %652 ], [ %649, %646 ]
  %655 = add i32 %654, 1
  %656 = zext i32 %654 to i64
  %657 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %656
  store i16 %546, i16* %657, align 2, !tbaa !60
  %658 = add i32 %654, 2
  %659 = zext i32 %655 to i64
  %660 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %659
  store i16 %546, i16* %660, align 2, !tbaa !60
  %661 = add i32 %654, 3
  %662 = zext i32 %658 to i64
  %663 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %662
  store i16 %546, i16* %663, align 2, !tbaa !60
  %664 = add nsw i32 %653, -4
  %665 = add i32 %654, 4
  %666 = zext i32 %661 to i64
  %667 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %666
  store i16 %546, i16* %667, align 2, !tbaa !60
  %668 = icmp eq i32 %664, 0
  br i1 %668, label %669, label %652, !llvm.loop !166

669:                                              ; preds = %646, %652, %628
  %670 = phi i32 [ %562, %628 ], [ %647, %646 ], [ %665, %652 ]
  store i32 %670, i32* %34, align 4, !tbaa !155
  br label %671

671:                                              ; preds = %669, %401
  %672 = phi i32 [ %551, %669 ], [ %411, %401 ]
  %673 = phi i32 [ %549, %669 ], [ %409, %401 ]
  %674 = phi i32 [ %670, %669 ], [ %406, %401 ]
  %675 = phi i32 [ %542, %669 ], [ %395, %401 ]
  %676 = phi i64 [ %543, %669 ], [ %403, %401 ]
  %677 = phi i32 [ %544, %669 ], [ %404, %401 ]
  %678 = icmp ult i32 %674, %672
  br i1 %678, label %334, label %679, !llvm.loop !167

679:                                              ; preds = %671, %329
  %680 = phi i32 [ %330, %329 ], [ %673, %671 ]
  %681 = phi i32 [ %286, %329 ], [ %675, %671 ]
  %682 = phi i64 [ %297, %329 ], [ %676, %671 ]
  %683 = phi i32 [ %298, %329 ], [ %677, %671 ]
  %684 = load i32, i32* %16, align 8, !tbaa !142
  %685 = icmp eq i32 %684, 16209
  br i1 %685, label %1349, label %686

686:                                              ; preds = %679
  %687 = load i16, i16* %41, align 8, !tbaa !60
  %688 = icmp eq i16 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

690:                                              ; preds = %686
  store %struct.code* %35, %struct.code** %36, align 8, !tbaa !159
  store %struct.code* %35, %struct.code** %37, align 8, !tbaa !144
  store i32 9, i32* %38, align 8, !tbaa !145
  %691 = call i32 @inflate_table(i32 noundef 1, i16* noundef nonnull %39, i32 noundef %680, %struct.code** noundef nonnull %36, i32* noundef nonnull %38, i16* noundef nonnull %40) #25
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %694, label %693

693:                                              ; preds = %690
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

694:                                              ; preds = %690
  %695 = load %struct.code*, %struct.code** %36, align 8, !tbaa !159
  store %struct.code* %695, %struct.code** %42, align 8, !tbaa !146
  store i32 6, i32* %43, align 4, !tbaa !147
  %696 = load i32, i32* %31, align 4, !tbaa !152
  %697 = zext i32 %696 to i64
  %698 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 29, i64 %697
  %699 = load i32, i32* %32, align 8, !tbaa !153
  %700 = call i32 @inflate_table(i32 noundef 2, i16* noundef nonnull %698, i32 noundef %699, %struct.code** noundef nonnull %36, i32* noundef nonnull %43, i16* noundef nonnull %40) #25
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %703, label %702

702:                                              ; preds = %694
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

703:                                              ; preds = %694
  store i32 16200, i32* %16, align 8, !tbaa !142
  br label %704

704:                                              ; preds = %52, %703
  %705 = phi i32 [ %55, %52 ], [ %681, %703 ]
  %706 = phi i64 [ %57, %52 ], [ %682, %703 ]
  %707 = phi i32 [ %58, %52 ], [ %683, %703 ]
  %708 = icmp ugt i32 %705, 5
  %709 = icmp ugt i32 %56, 257
  %710 = select i1 %708, i1 %709, i1 false
  br i1 %710, label %727, label %711

711:                                              ; preds = %704
  %712 = load %struct.code*, %struct.code** %37, align 8, !tbaa !144
  %713 = trunc i64 %706 to i32
  %714 = load i32, i32* %38, align 8, !tbaa !145
  %715 = shl nsw i32 -1, %714
  %716 = xor i32 %715, -1
  %717 = and i32 %716, %713
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds %struct.code, %struct.code* %712, i64 %718, i32 0
  %720 = getelementptr inbounds %struct.code, %struct.code* %712, i64 %718, i32 1
  %721 = load i8, i8* %720, align 1, !tbaa.struct !160
  %722 = getelementptr inbounds %struct.code, %struct.code* %712, i64 %718, i32 2
  %723 = zext i8 %721 to i32
  %724 = icmp ult i32 %707, %723
  br i1 %724, label %725, label %782

725:                                              ; preds = %711
  %726 = zext i32 %707 to i64
  br label %741

727:                                              ; preds = %704
  store i8* %54, i8** %47, align 8, !tbaa !87
  store i32 %56, i32* %48, align 8, !tbaa !86
  %728 = load i8*, i8** %6, align 8, !tbaa !53
  store i8* %728, i8** %19, align 8, !tbaa !89
  store i32 %705, i32* %49, align 8, !tbaa !84
  store i64 %706, i64* %50, align 8, !tbaa !168
  store i32 %707, i32* %51, align 8, !tbaa !169
  %729 = load i32, i32* %18, align 8, !tbaa !140
  %730 = load i32, i32* %29, align 4, !tbaa !137
  %731 = icmp ult i32 %729, %730
  br i1 %731, label %732, label %734

732:                                              ; preds = %727
  %733 = sub i32 %730, %56
  store i32 %733, i32* %18, align 8, !tbaa !140
  br label %734

734:                                              ; preds = %732, %727
  call void @inflate_fast(%struct.z_stream_s* noundef nonnull %0, i32 noundef %730) #25
  %735 = load i8*, i8** %47, align 8, !tbaa !87
  %736 = load i32, i32* %48, align 8, !tbaa !86
  %737 = load i8*, i8** %19, align 8, !tbaa !89
  store i8* %737, i8** %6, align 8, !tbaa !53
  %738 = load i32, i32* %49, align 8, !tbaa !84
  %739 = load i64, i64* %50, align 8, !tbaa !168
  %740 = load i32, i32* %51, align 8, !tbaa !169
  br label %1349

741:                                              ; preds = %725, %755
  %742 = phi i32 [ %714, %725 ], [ %756, %755 ]
  %743 = phi %struct.code* [ %712, %725 ], [ %757, %755 ]
  %744 = phi i64 [ %726, %725 ], [ %766, %755 ]
  %745 = phi i64 [ %706, %725 ], [ %765, %755 ]
  %746 = phi i32 [ %705, %725 ], [ %759, %755 ]
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %748, label %755

748:                                              ; preds = %741
  %749 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %754, label %751

751:                                              ; preds = %748
  %752 = load %struct.code*, %struct.code** %37, align 8, !tbaa !144
  %753 = load i32, i32* %38, align 8, !tbaa !145
  br label %755

754:                                              ; preds = %748
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

755:                                              ; preds = %751, %741
  %756 = phi i32 [ %753, %751 ], [ %742, %741 ]
  %757 = phi %struct.code* [ %752, %751 ], [ %743, %741 ]
  %758 = phi i32 [ %749, %751 ], [ %746, %741 ]
  %759 = add i32 %758, -1
  %760 = load i8*, i8** %6, align 8, !tbaa !53
  %761 = getelementptr inbounds i8, i8* %760, i64 1
  store i8* %761, i8** %6, align 8, !tbaa !53
  %762 = load i8, i8* %760, align 1, !tbaa !4
  %763 = zext i8 %762 to i64
  %764 = shl i64 %763, %744
  %765 = add i64 %764, %745
  %766 = add nuw nsw i64 %744, 8
  %767 = trunc i64 %765 to i32
  %768 = shl nsw i32 -1, %756
  %769 = xor i32 %768, -1
  %770 = and i32 %769, %767
  %771 = zext i32 %770 to i64
  %772 = getelementptr inbounds %struct.code, %struct.code* %757, i64 %771, i32 1
  %773 = load i8, i8* %772, align 1, !tbaa.struct !160
  %774 = zext i8 %773 to i64
  %775 = icmp ult i64 %766, %774
  br i1 %775, label %741, label %776

776:                                              ; preds = %755
  %777 = zext i32 %770 to i64
  %778 = zext i8 %773 to i32
  %779 = getelementptr inbounds %struct.code, %struct.code* %757, i64 %777, i32 2
  %780 = getelementptr inbounds %struct.code, %struct.code* %757, i64 %777, i32 0
  %781 = trunc i64 %766 to i32
  br label %782

782:                                              ; preds = %776, %711
  %783 = phi i32 [ %778, %776 ], [ %723, %711 ]
  %784 = phi %struct.code* [ %757, %776 ], [ %712, %711 ]
  %785 = phi i8 [ %773, %776 ], [ %721, %711 ]
  %786 = phi i32 [ %759, %776 ], [ %705, %711 ]
  %787 = phi i64 [ %765, %776 ], [ %706, %711 ]
  %788 = phi i32 [ %781, %776 ], [ %707, %711 ]
  %789 = phi i8* [ %780, %776 ], [ %719, %711 ]
  %790 = phi i16* [ %779, %776 ], [ %722, %711 ]
  %791 = load i16, i16* %790, align 2
  %792 = load i8, i8* %789, align 2
  %793 = zext i8 %792 to i32
  %794 = icmp ne i8 %792, 0
  %795 = and i32 %793, 240
  %796 = icmp eq i32 %795, 0
  %797 = select i1 %794, i1 %796, i1 false
  br i1 %797, label %798, label %866

798:                                              ; preds = %782
  %799 = zext i16 %791 to i32
  %800 = add nuw nsw i32 %783, %793
  %801 = shl nsw i32 -1, %800
  %802 = xor i32 %801, -1
  %803 = trunc i64 %787 to i32
  %804 = and i32 %803, %802
  %805 = lshr i32 %804, %783
  %806 = add i32 %805, %799
  %807 = zext i32 %806 to i64
  %808 = getelementptr inbounds %struct.code, %struct.code* %784, i64 %807, i32 1
  %809 = load i8, i8* %808, align 1, !tbaa.struct !160
  %810 = zext i8 %809 to i32
  %811 = add nuw nsw i32 %783, %810
  %812 = icmp ugt i32 %811, %788
  br i1 %812, label %813, label %850

813:                                              ; preds = %798, %825
  %814 = phi %struct.code* [ %826, %825 ], [ %784, %798 ]
  %815 = phi i32 [ %836, %825 ], [ %788, %798 ]
  %816 = phi i64 [ %835, %825 ], [ %787, %798 ]
  %817 = phi i32 [ %828, %825 ], [ %786, %798 ]
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %825

819:                                              ; preds = %813
  %820 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %824, label %822

822:                                              ; preds = %819
  %823 = load %struct.code*, %struct.code** %37, align 8, !tbaa !144
  br label %825

824:                                              ; preds = %819
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

825:                                              ; preds = %822, %813
  %826 = phi %struct.code* [ %823, %822 ], [ %814, %813 ]
  %827 = phi i32 [ %820, %822 ], [ %817, %813 ]
  %828 = add i32 %827, -1
  %829 = load i8*, i8** %6, align 8, !tbaa !53
  %830 = getelementptr inbounds i8, i8* %829, i64 1
  store i8* %830, i8** %6, align 8, !tbaa !53
  %831 = load i8, i8* %829, align 1, !tbaa !4
  %832 = zext i8 %831 to i64
  %833 = zext i32 %815 to i64
  %834 = shl i64 %832, %833
  %835 = add i64 %834, %816
  %836 = add i32 %815, 8
  %837 = trunc i64 %835 to i32
  %838 = and i32 %837, %802
  %839 = lshr i32 %838, %783
  %840 = add i32 %839, %799
  %841 = zext i32 %840 to i64
  %842 = getelementptr inbounds %struct.code, %struct.code* %826, i64 %841, i32 1
  %843 = load i8, i8* %842, align 1, !tbaa.struct !160
  %844 = zext i8 %843 to i32
  %845 = add nuw nsw i32 %783, %844
  %846 = icmp ugt i32 %845, %836
  br i1 %846, label %813, label %847

847:                                              ; preds = %825
  %848 = zext i32 %840 to i64
  %849 = zext i8 %843 to i32
  br label %850

850:                                              ; preds = %847, %798
  %851 = phi i32 [ %810, %798 ], [ %849, %847 ]
  %852 = phi i64 [ %807, %798 ], [ %848, %847 ]
  %853 = phi i32 [ %786, %798 ], [ %828, %847 ]
  %854 = phi i64 [ %787, %798 ], [ %835, %847 ]
  %855 = phi i32 [ %788, %798 ], [ %836, %847 ]
  %856 = phi %struct.code* [ %784, %798 ], [ %826, %847 ]
  %857 = phi i8 [ %809, %798 ], [ %843, %847 ]
  %858 = getelementptr inbounds %struct.code, %struct.code* %856, i64 %852, i32 2
  %859 = load i16, i16* %858, align 2, !tbaa.struct !170
  %860 = getelementptr inbounds %struct.code, %struct.code* %856, i64 %852, i32 0
  %861 = load i8, i8* %860, align 2, !tbaa.struct !171
  %862 = zext i8 %785 to i64
  %863 = lshr i64 %854, %862
  %864 = sub i32 %855, %783
  %865 = zext i8 %861 to i32
  br label %866

866:                                              ; preds = %782, %850
  %867 = phi i32 [ %793, %782 ], [ %865, %850 ]
  %868 = phi i32 [ %783, %782 ], [ %851, %850 ]
  %869 = phi i32 [ %786, %782 ], [ %853, %850 ]
  %870 = phi i64 [ %787, %782 ], [ %863, %850 ]
  %871 = phi i32 [ %788, %782 ], [ %864, %850 ]
  %872 = phi i16 [ %791, %782 ], [ %859, %850 ]
  %873 = phi i8 [ %785, %782 ], [ %857, %850 ]
  %874 = phi i8 [ %792, %782 ], [ %861, %850 ]
  %875 = zext i8 %873 to i64
  %876 = lshr i64 %870, %875
  %877 = sub i32 %871, %868
  %878 = zext i16 %872 to i32
  store i32 %878, i32* %44, align 4, !tbaa !149
  %879 = icmp eq i8 %874, 0
  br i1 %879, label %880, label %896

880:                                              ; preds = %866
  %881 = icmp eq i32 %56, 0
  br i1 %881, label %882, label %889

882:                                              ; preds = %880
  %883 = load i8*, i8** %27, align 8, !tbaa !138
  %884 = load i32, i32* %29, align 4, !tbaa !137
  store i32 %884, i32* %18, align 8, !tbaa !140
  %885 = call i32 %3(i8* noundef %4, i8* noundef %883, i32 noundef %884) #25
  %886 = icmp eq i32 %885, 0
  br i1 %886, label %887, label %1356

887:                                              ; preds = %882
  %888 = load i32, i32* %44, align 4, !tbaa !149
  br label %889

889:                                              ; preds = %887, %880
  %890 = phi i32 [ %888, %887 ], [ %878, %880 ]
  %891 = phi i8* [ %883, %887 ], [ %54, %880 ]
  %892 = phi i32 [ %884, %887 ], [ %56, %880 ]
  %893 = trunc i32 %890 to i8
  %894 = getelementptr inbounds i8, i8* %891, i64 1
  store i8 %893, i8* %891, align 1, !tbaa !4
  %895 = add i32 %892, -1
  store i32 16200, i32* %16, align 8, !tbaa !142
  br label %1349

896:                                              ; preds = %866
  %897 = and i32 %867, 32
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %900, label %899

899:                                              ; preds = %896
  store i32 16191, i32* %16, align 8, !tbaa !142
  br label %1349

900:                                              ; preds = %896
  %901 = and i32 %867, 64
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %904, label %903

903:                                              ; preds = %900
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

904:                                              ; preds = %900
  %905 = and i32 %867, 15
  store i32 %905, i32* %45, align 4, !tbaa !172
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %950, label %907

907:                                              ; preds = %904
  %908 = icmp ult i32 %877, %905
  br i1 %908, label %909, label %936

909:                                              ; preds = %907, %921
  %910 = phi i32 [ %922, %921 ], [ %905, %907 ]
  %911 = phi i32 [ %932, %921 ], [ %877, %907 ]
  %912 = phi i64 [ %931, %921 ], [ %876, %907 ]
  %913 = phi i32 [ %924, %921 ], [ %869, %907 ]
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %921

915:                                              ; preds = %909
  %916 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %920, label %918

918:                                              ; preds = %915
  %919 = load i32, i32* %45, align 4, !tbaa !172
  br label %921

920:                                              ; preds = %915
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

921:                                              ; preds = %918, %909
  %922 = phi i32 [ %919, %918 ], [ %910, %909 ]
  %923 = phi i32 [ %916, %918 ], [ %913, %909 ]
  %924 = add i32 %923, -1
  %925 = load i8*, i8** %6, align 8, !tbaa !53
  %926 = getelementptr inbounds i8, i8* %925, i64 1
  store i8* %926, i8** %6, align 8, !tbaa !53
  %927 = load i8, i8* %925, align 1, !tbaa !4
  %928 = zext i8 %927 to i64
  %929 = zext i32 %911 to i64
  %930 = shl i64 %928, %929
  %931 = add i64 %930, %912
  %932 = add i32 %911, 8
  %933 = icmp ult i32 %932, %922
  br i1 %933, label %909, label %934, !llvm.loop !173

934:                                              ; preds = %921
  %935 = load i32, i32* %44, align 4, !tbaa !149
  br label %936

936:                                              ; preds = %934, %907
  %937 = phi i32 [ %878, %907 ], [ %935, %934 ]
  %938 = phi i32 [ %869, %907 ], [ %924, %934 ]
  %939 = phi i64 [ %876, %907 ], [ %931, %934 ]
  %940 = phi i32 [ %877, %907 ], [ %932, %934 ]
  %941 = phi i32 [ %905, %907 ], [ %922, %934 ]
  %942 = trunc i64 %939 to i32
  %943 = shl nsw i32 -1, %941
  %944 = xor i32 %943, -1
  %945 = and i32 %944, %942
  %946 = add i32 %937, %945
  store i32 %946, i32* %44, align 4, !tbaa !149
  %947 = zext i32 %941 to i64
  %948 = lshr i64 %939, %947
  %949 = sub i32 %940, %941
  br label %950

950:                                              ; preds = %936, %904
  %951 = phi i32 [ %938, %936 ], [ %869, %904 ]
  %952 = phi i64 [ %948, %936 ], [ %876, %904 ]
  %953 = phi i32 [ %949, %936 ], [ %877, %904 ]
  %954 = load %struct.code*, %struct.code** %42, align 8, !tbaa !146
  %955 = trunc i64 %952 to i32
  %956 = load i32, i32* %43, align 4, !tbaa !147
  %957 = shl nsw i32 -1, %956
  %958 = xor i32 %957, -1
  %959 = and i32 %958, %955
  %960 = zext i32 %959 to i64
  %961 = getelementptr inbounds %struct.code, %struct.code* %954, i64 %960, i32 0
  %962 = getelementptr inbounds %struct.code, %struct.code* %954, i64 %960, i32 1
  %963 = load i8, i8* %962, align 1, !tbaa.struct !160
  %964 = getelementptr inbounds %struct.code, %struct.code* %954, i64 %960, i32 2
  %965 = zext i8 %963 to i32
  %966 = icmp ult i32 %953, %965
  br i1 %966, label %967, label %1010

967:                                              ; preds = %950
  %968 = zext i32 %953 to i64
  br label %969

969:                                              ; preds = %967, %983
  %970 = phi i32 [ %956, %967 ], [ %984, %983 ]
  %971 = phi %struct.code* [ %954, %967 ], [ %985, %983 ]
  %972 = phi i64 [ %968, %967 ], [ %994, %983 ]
  %973 = phi i64 [ %952, %967 ], [ %993, %983 ]
  %974 = phi i32 [ %951, %967 ], [ %987, %983 ]
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %983

976:                                              ; preds = %969
  %977 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %982, label %979

979:                                              ; preds = %976
  %980 = load %struct.code*, %struct.code** %42, align 8, !tbaa !146
  %981 = load i32, i32* %43, align 4, !tbaa !147
  br label %983

982:                                              ; preds = %976
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

983:                                              ; preds = %979, %969
  %984 = phi i32 [ %981, %979 ], [ %970, %969 ]
  %985 = phi %struct.code* [ %980, %979 ], [ %971, %969 ]
  %986 = phi i32 [ %977, %979 ], [ %974, %969 ]
  %987 = add i32 %986, -1
  %988 = load i8*, i8** %6, align 8, !tbaa !53
  %989 = getelementptr inbounds i8, i8* %988, i64 1
  store i8* %989, i8** %6, align 8, !tbaa !53
  %990 = load i8, i8* %988, align 1, !tbaa !4
  %991 = zext i8 %990 to i64
  %992 = shl i64 %991, %972
  %993 = add i64 %992, %973
  %994 = add nuw nsw i64 %972, 8
  %995 = trunc i64 %993 to i32
  %996 = shl nsw i32 -1, %984
  %997 = xor i32 %996, -1
  %998 = and i32 %997, %995
  %999 = zext i32 %998 to i64
  %1000 = getelementptr inbounds %struct.code, %struct.code* %985, i64 %999, i32 1
  %1001 = load i8, i8* %1000, align 1, !tbaa.struct !160
  %1002 = zext i8 %1001 to i64
  %1003 = icmp ult i64 %994, %1002
  br i1 %1003, label %969, label %1004

1004:                                             ; preds = %983
  %1005 = zext i32 %998 to i64
  %1006 = zext i8 %1001 to i32
  %1007 = getelementptr inbounds %struct.code, %struct.code* %985, i64 %1005, i32 2
  %1008 = getelementptr inbounds %struct.code, %struct.code* %985, i64 %1005, i32 0
  %1009 = trunc i64 %994 to i32
  br label %1010

1010:                                             ; preds = %1004, %950
  %1011 = phi i32 [ %1006, %1004 ], [ %965, %950 ]
  %1012 = phi %struct.code* [ %985, %1004 ], [ %954, %950 ]
  %1013 = phi i8 [ %1001, %1004 ], [ %963, %950 ]
  %1014 = phi i32 [ %987, %1004 ], [ %951, %950 ]
  %1015 = phi i64 [ %993, %1004 ], [ %952, %950 ]
  %1016 = phi i32 [ %1009, %1004 ], [ %953, %950 ]
  %1017 = phi i8* [ %1008, %1004 ], [ %961, %950 ]
  %1018 = phi i16* [ %1007, %1004 ], [ %964, %950 ]
  %1019 = load i16, i16* %1018, align 2
  %1020 = load i8, i8* %1017, align 2
  %1021 = zext i8 %1020 to i32
  %1022 = and i32 %1021, 240
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1024, label %1092

1024:                                             ; preds = %1010
  %1025 = zext i16 %1019 to i32
  %1026 = add nuw nsw i32 %1011, %1021
  %1027 = shl nsw i32 -1, %1026
  %1028 = xor i32 %1027, -1
  %1029 = trunc i64 %1015 to i32
  %1030 = and i32 %1029, %1028
  %1031 = lshr i32 %1030, %1011
  %1032 = add i32 %1031, %1025
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds %struct.code, %struct.code* %1012, i64 %1033, i32 1
  %1035 = load i8, i8* %1034, align 1, !tbaa.struct !160
  %1036 = zext i8 %1035 to i32
  %1037 = add nuw nsw i32 %1011, %1036
  %1038 = icmp ugt i32 %1037, %1016
  br i1 %1038, label %1039, label %1076

1039:                                             ; preds = %1024, %1051
  %1040 = phi %struct.code* [ %1052, %1051 ], [ %1012, %1024 ]
  %1041 = phi i32 [ %1062, %1051 ], [ %1016, %1024 ]
  %1042 = phi i64 [ %1061, %1051 ], [ %1015, %1024 ]
  %1043 = phi i32 [ %1054, %1051 ], [ %1014, %1024 ]
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1045, label %1051

1045:                                             ; preds = %1039
  %1046 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1050, label %1048

1048:                                             ; preds = %1045
  %1049 = load %struct.code*, %struct.code** %42, align 8, !tbaa !146
  br label %1051

1050:                                             ; preds = %1045
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

1051:                                             ; preds = %1048, %1039
  %1052 = phi %struct.code* [ %1049, %1048 ], [ %1040, %1039 ]
  %1053 = phi i32 [ %1046, %1048 ], [ %1043, %1039 ]
  %1054 = add i32 %1053, -1
  %1055 = load i8*, i8** %6, align 8, !tbaa !53
  %1056 = getelementptr inbounds i8, i8* %1055, i64 1
  store i8* %1056, i8** %6, align 8, !tbaa !53
  %1057 = load i8, i8* %1055, align 1, !tbaa !4
  %1058 = zext i8 %1057 to i64
  %1059 = zext i32 %1041 to i64
  %1060 = shl i64 %1058, %1059
  %1061 = add i64 %1060, %1042
  %1062 = add i32 %1041, 8
  %1063 = trunc i64 %1061 to i32
  %1064 = and i32 %1063, %1028
  %1065 = lshr i32 %1064, %1011
  %1066 = add i32 %1065, %1025
  %1067 = zext i32 %1066 to i64
  %1068 = getelementptr inbounds %struct.code, %struct.code* %1052, i64 %1067, i32 1
  %1069 = load i8, i8* %1068, align 1, !tbaa.struct !160
  %1070 = zext i8 %1069 to i32
  %1071 = add nuw nsw i32 %1011, %1070
  %1072 = icmp ugt i32 %1071, %1062
  br i1 %1072, label %1039, label %1073

1073:                                             ; preds = %1051
  %1074 = zext i32 %1066 to i64
  %1075 = zext i8 %1069 to i32
  br label %1076

1076:                                             ; preds = %1073, %1024
  %1077 = phi i32 [ %1036, %1024 ], [ %1075, %1073 ]
  %1078 = phi i64 [ %1033, %1024 ], [ %1074, %1073 ]
  %1079 = phi i32 [ %1014, %1024 ], [ %1054, %1073 ]
  %1080 = phi i64 [ %1015, %1024 ], [ %1061, %1073 ]
  %1081 = phi i32 [ %1016, %1024 ], [ %1062, %1073 ]
  %1082 = phi %struct.code* [ %1012, %1024 ], [ %1052, %1073 ]
  %1083 = phi i8 [ %1035, %1024 ], [ %1069, %1073 ]
  %1084 = getelementptr inbounds %struct.code, %struct.code* %1082, i64 %1078, i32 2
  %1085 = load i16, i16* %1084, align 2, !tbaa.struct !170
  %1086 = getelementptr inbounds %struct.code, %struct.code* %1082, i64 %1078, i32 0
  %1087 = load i8, i8* %1086, align 2, !tbaa.struct !171
  %1088 = zext i8 %1013 to i64
  %1089 = lshr i64 %1080, %1088
  %1090 = sub i32 %1081, %1011
  %1091 = zext i8 %1087 to i32
  br label %1092

1092:                                             ; preds = %1010, %1076
  %1093 = phi i32 [ %1021, %1010 ], [ %1091, %1076 ]
  %1094 = phi i32 [ %1011, %1010 ], [ %1077, %1076 ]
  %1095 = phi i32 [ %1014, %1010 ], [ %1079, %1076 ]
  %1096 = phi i64 [ %1015, %1010 ], [ %1089, %1076 ]
  %1097 = phi i32 [ %1016, %1010 ], [ %1090, %1076 ]
  %1098 = phi i16 [ %1019, %1010 ], [ %1085, %1076 ]
  %1099 = phi i8 [ %1013, %1010 ], [ %1083, %1076 ]
  %1100 = zext i8 %1099 to i64
  %1101 = lshr i64 %1096, %1100
  %1102 = sub i32 %1097, %1094
  %1103 = and i32 %1093, 64
  %1104 = icmp eq i32 %1103, 0
  br i1 %1104, label %1106, label %1105

1105:                                             ; preds = %1092
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

1106:                                             ; preds = %1092
  %1107 = zext i16 %1098 to i32
  store i32 %1107, i32* %46, align 8, !tbaa !174
  %1108 = and i32 %1093, 15
  store i32 %1108, i32* %45, align 4, !tbaa !172
  %1109 = icmp eq i32 %1108, 0
  br i1 %1109, label %1153, label %1110

1110:                                             ; preds = %1106
  %1111 = icmp ult i32 %1102, %1108
  br i1 %1111, label %1112, label %1139

1112:                                             ; preds = %1110, %1124
  %1113 = phi i32 [ %1125, %1124 ], [ %1108, %1110 ]
  %1114 = phi i32 [ %1135, %1124 ], [ %1102, %1110 ]
  %1115 = phi i64 [ %1134, %1124 ], [ %1101, %1110 ]
  %1116 = phi i32 [ %1127, %1124 ], [ %1095, %1110 ]
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %1118, label %1124

1118:                                             ; preds = %1112
  %1119 = call i32 %1(i8* noundef %2, i8** noundef nonnull %6) #25
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1123, label %1121

1121:                                             ; preds = %1118
  %1122 = load i32, i32* %45, align 4, !tbaa !172
  br label %1124

1123:                                             ; preds = %1118
  store i8* null, i8** %6, align 8, !tbaa !53
  br label %1362

1124:                                             ; preds = %1121, %1112
  %1125 = phi i32 [ %1122, %1121 ], [ %1113, %1112 ]
  %1126 = phi i32 [ %1119, %1121 ], [ %1116, %1112 ]
  %1127 = add i32 %1126, -1
  %1128 = load i8*, i8** %6, align 8, !tbaa !53
  %1129 = getelementptr inbounds i8, i8* %1128, i64 1
  store i8* %1129, i8** %6, align 8, !tbaa !53
  %1130 = load i8, i8* %1128, align 1, !tbaa !4
  %1131 = zext i8 %1130 to i64
  %1132 = zext i32 %1114 to i64
  %1133 = shl i64 %1131, %1132
  %1134 = add i64 %1133, %1115
  %1135 = add i32 %1114, 8
  %1136 = icmp ult i32 %1135, %1125
  br i1 %1136, label %1112, label %1137, !llvm.loop !175

1137:                                             ; preds = %1124
  %1138 = load i32, i32* %46, align 8, !tbaa !174
  br label %1139

1139:                                             ; preds = %1137, %1110
  %1140 = phi i32 [ %1107, %1110 ], [ %1138, %1137 ]
  %1141 = phi i32 [ %1095, %1110 ], [ %1127, %1137 ]
  %1142 = phi i64 [ %1101, %1110 ], [ %1134, %1137 ]
  %1143 = phi i32 [ %1102, %1110 ], [ %1135, %1137 ]
  %1144 = phi i32 [ %1108, %1110 ], [ %1125, %1137 ]
  %1145 = trunc i64 %1142 to i32
  %1146 = shl nsw i32 -1, %1144
  %1147 = xor i32 %1146, -1
  %1148 = and i32 %1147, %1145
  %1149 = add i32 %1140, %1148
  store i32 %1149, i32* %46, align 8, !tbaa !174
  %1150 = zext i32 %1144 to i64
  %1151 = lshr i64 %1142, %1150
  %1152 = sub i32 %1143, %1144
  br label %1153

1153:                                             ; preds = %1139, %1106
  %1154 = phi i32 [ %1149, %1139 ], [ %1107, %1106 ]
  %1155 = phi i32 [ %1141, %1139 ], [ %1095, %1106 ]
  %1156 = phi i64 [ %1151, %1139 ], [ %1101, %1106 ]
  %1157 = phi i32 [ %1152, %1139 ], [ %1102, %1106 ]
  %1158 = load i32, i32* %29, align 4, !tbaa !137
  %1159 = load i32, i32* %18, align 8, !tbaa !140
  %1160 = icmp ult i32 %1159, %1158
  %1161 = select i1 %1160, i32 %56, i32 0
  %1162 = sub i32 %1158, %1161
  %1163 = icmp ugt i32 %1154, %1162
  br i1 %1163, label %1164, label %1165

1164:                                             ; preds = %1153
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i8** %15, align 8, !tbaa !25
  store i32 16209, i32* %16, align 8, !tbaa !142
  br label %1349

1165:                                             ; preds = %1153, %1344
  %1166 = phi i8* [ %1345, %1344 ], [ %54, %1153 ]
  %1167 = phi i32 [ %1346, %1344 ], [ %56, %1153 ]
  %1168 = icmp eq i32 %1167, 0
  br i1 %1168, label %1169, label %1174

1169:                                             ; preds = %1165
  %1170 = load i8*, i8** %27, align 8, !tbaa !138
  %1171 = load i32, i32* %29, align 4, !tbaa !137
  store i32 %1171, i32* %18, align 8, !tbaa !140
  %1172 = call i32 %3(i8* noundef %4, i8* noundef %1170, i32 noundef %1171) #25
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1174, label %1362

1174:                                             ; preds = %1169, %1165
  %1175 = phi i8* [ %1170, %1169 ], [ %1166, %1165 ]
  %1176 = phi i32 [ %1171, %1169 ], [ %1167, %1165 ]
  %1177 = load i32, i32* %29, align 4, !tbaa !137
  %1178 = load i32, i32* %46, align 8, !tbaa !174
  %1179 = sub i32 %1177, %1178
  %1180 = icmp ugt i32 %1176, %1179
  %1181 = zext i32 %1179 to i64
  %1182 = zext i32 %1178 to i64
  %1183 = sub nsw i64 0, %1182
  %1184 = select i1 %1180, i32 %1179, i32 0
  %1185 = sub i32 %1176, %1184
  %1186 = select i1 %1180, i64 %1181, i64 %1183
  %1187 = getelementptr i8, i8* %1175, i64 %1186
  %1188 = load i32, i32* %44, align 4, !tbaa !149
  %1189 = icmp ugt i32 %1185, %1188
  %1190 = select i1 %1189, i32 %1188, i32 %1185
  %1191 = sub i32 %1188, %1190
  store i32 %1191, i32* %44, align 4, !tbaa !149
  %1192 = add i32 %1190, -1
  %1193 = zext i32 %1192 to i64
  %1194 = add nuw nsw i64 %1193, 1
  %1195 = icmp ult i32 %1192, 31
  br i1 %1195, label %1290, label %1196

1196:                                             ; preds = %1174
  %1197 = getelementptr i8, i8* %1175, i64 1
  %1198 = add i32 %1190, -1
  %1199 = zext i32 %1198 to i64
  %1200 = getelementptr i8, i8* %1197, i64 %1199
  %1201 = getelementptr i8, i8* %1175, i64 1
  %1202 = add nsw i64 %1186, %1199
  %1203 = getelementptr i8, i8* %1201, i64 %1202
  %1204 = icmp ult i8* %1175, %1203
  %1205 = icmp ult i8* %1187, %1200
  %1206 = and i1 %1204, %1205
  br i1 %1206, label %1290, label %1207

1207:                                             ; preds = %1196
  %1208 = and i64 %1194, 8589934560
  %1209 = getelementptr i8, i8* %1175, i64 %1208
  %1210 = trunc i64 %1208 to i32
  %1211 = sub i32 %1190, %1210
  %1212 = getelementptr i8, i8* %1187, i64 %1208
  %1213 = add nsw i64 %1208, -32
  %1214 = lshr exact i64 %1213, 5
  %1215 = add nuw nsw i64 %1214, 1
  %1216 = and i64 %1215, 3
  %1217 = icmp ult i64 %1213, 96
  br i1 %1217, label %1269, label %1218

1218:                                             ; preds = %1207
  %1219 = and i64 %1215, 1152921504606846972
  br label %1220

1220:                                             ; preds = %1220, %1218
  %1221 = phi i64 [ 0, %1218 ], [ %1266, %1220 ]
  %1222 = phi i64 [ 0, %1218 ], [ %1267, %1220 ]
  %1223 = getelementptr i8, i8* %1175, i64 %1221
  %1224 = getelementptr i8, i8* %1187, i64 %1221
  %1225 = bitcast i8* %1224 to <16 x i8>*
  %1226 = load <16 x i8>, <16 x i8>* %1225, align 1, !tbaa !4, !alias.scope !176
  %1227 = getelementptr i8, i8* %1224, i64 16
  %1228 = bitcast i8* %1227 to <16 x i8>*
  %1229 = load <16 x i8>, <16 x i8>* %1228, align 1, !tbaa !4, !alias.scope !176
  %1230 = bitcast i8* %1223 to <16 x i8>*
  store <16 x i8> %1226, <16 x i8>* %1230, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1231 = getelementptr i8, i8* %1223, i64 16
  %1232 = bitcast i8* %1231 to <16 x i8>*
  store <16 x i8> %1229, <16 x i8>* %1232, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1233 = or i64 %1221, 32
  %1234 = getelementptr i8, i8* %1175, i64 %1233
  %1235 = getelementptr i8, i8* %1187, i64 %1233
  %1236 = bitcast i8* %1235 to <16 x i8>*
  %1237 = load <16 x i8>, <16 x i8>* %1236, align 1, !tbaa !4, !alias.scope !176
  %1238 = getelementptr i8, i8* %1235, i64 16
  %1239 = bitcast i8* %1238 to <16 x i8>*
  %1240 = load <16 x i8>, <16 x i8>* %1239, align 1, !tbaa !4, !alias.scope !176
  %1241 = bitcast i8* %1234 to <16 x i8>*
  store <16 x i8> %1237, <16 x i8>* %1241, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1242 = getelementptr i8, i8* %1234, i64 16
  %1243 = bitcast i8* %1242 to <16 x i8>*
  store <16 x i8> %1240, <16 x i8>* %1243, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1244 = or i64 %1221, 64
  %1245 = getelementptr i8, i8* %1175, i64 %1244
  %1246 = getelementptr i8, i8* %1187, i64 %1244
  %1247 = bitcast i8* %1246 to <16 x i8>*
  %1248 = load <16 x i8>, <16 x i8>* %1247, align 1, !tbaa !4, !alias.scope !176
  %1249 = getelementptr i8, i8* %1246, i64 16
  %1250 = bitcast i8* %1249 to <16 x i8>*
  %1251 = load <16 x i8>, <16 x i8>* %1250, align 1, !tbaa !4, !alias.scope !176
  %1252 = bitcast i8* %1245 to <16 x i8>*
  store <16 x i8> %1248, <16 x i8>* %1252, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1253 = getelementptr i8, i8* %1245, i64 16
  %1254 = bitcast i8* %1253 to <16 x i8>*
  store <16 x i8> %1251, <16 x i8>* %1254, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1255 = or i64 %1221, 96
  %1256 = getelementptr i8, i8* %1175, i64 %1255
  %1257 = getelementptr i8, i8* %1187, i64 %1255
  %1258 = bitcast i8* %1257 to <16 x i8>*
  %1259 = load <16 x i8>, <16 x i8>* %1258, align 1, !tbaa !4, !alias.scope !176
  %1260 = getelementptr i8, i8* %1257, i64 16
  %1261 = bitcast i8* %1260 to <16 x i8>*
  %1262 = load <16 x i8>, <16 x i8>* %1261, align 1, !tbaa !4, !alias.scope !176
  %1263 = bitcast i8* %1256 to <16 x i8>*
  store <16 x i8> %1259, <16 x i8>* %1263, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1264 = getelementptr i8, i8* %1256, i64 16
  %1265 = bitcast i8* %1264 to <16 x i8>*
  store <16 x i8> %1262, <16 x i8>* %1265, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1266 = add nuw i64 %1221, 128
  %1267 = add i64 %1222, 4
  %1268 = icmp eq i64 %1267, %1219
  br i1 %1268, label %1269, label %1220, !llvm.loop !181

1269:                                             ; preds = %1220, %1207
  %1270 = phi i64 [ 0, %1207 ], [ %1266, %1220 ]
  %1271 = icmp eq i64 %1216, 0
  br i1 %1271, label %1288, label %1272

1272:                                             ; preds = %1269, %1272
  %1273 = phi i64 [ %1285, %1272 ], [ %1270, %1269 ]
  %1274 = phi i64 [ %1286, %1272 ], [ 0, %1269 ]
  %1275 = getelementptr i8, i8* %1175, i64 %1273
  %1276 = getelementptr i8, i8* %1187, i64 %1273
  %1277 = bitcast i8* %1276 to <16 x i8>*
  %1278 = load <16 x i8>, <16 x i8>* %1277, align 1, !tbaa !4, !alias.scope !176
  %1279 = getelementptr i8, i8* %1276, i64 16
  %1280 = bitcast i8* %1279 to <16 x i8>*
  %1281 = load <16 x i8>, <16 x i8>* %1280, align 1, !tbaa !4, !alias.scope !176
  %1282 = bitcast i8* %1275 to <16 x i8>*
  store <16 x i8> %1278, <16 x i8>* %1282, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1283 = getelementptr i8, i8* %1275, i64 16
  %1284 = bitcast i8* %1283 to <16 x i8>*
  store <16 x i8> %1281, <16 x i8>* %1284, align 1, !tbaa !4, !alias.scope !179, !noalias !176
  %1285 = add nuw i64 %1273, 32
  %1286 = add i64 %1274, 1
  %1287 = icmp eq i64 %1286, %1216
  br i1 %1287, label %1288, label %1272, !llvm.loop !182

1288:                                             ; preds = %1272, %1269
  %1289 = icmp eq i64 %1194, %1208
  br i1 %1289, label %1344, label %1290

1290:                                             ; preds = %1196, %1174, %1288
  %1291 = phi i8* [ %1175, %1196 ], [ %1175, %1174 ], [ %1209, %1288 ]
  %1292 = phi i32 [ %1190, %1196 ], [ %1190, %1174 ], [ %1211, %1288 ]
  %1293 = phi i8* [ %1187, %1196 ], [ %1187, %1174 ], [ %1212, %1288 ]
  %1294 = add i32 %1292, -1
  %1295 = and i32 %1292, 7
  %1296 = icmp eq i32 %1295, 0
  br i1 %1296, label %1308, label %1297

1297:                                             ; preds = %1290, %1297
  %1298 = phi i8* [ %1304, %1297 ], [ %1291, %1290 ]
  %1299 = phi i32 [ %1305, %1297 ], [ %1292, %1290 ]
  %1300 = phi i8* [ %1302, %1297 ], [ %1293, %1290 ]
  %1301 = phi i32 [ %1306, %1297 ], [ 0, %1290 ]
  %1302 = getelementptr inbounds i8, i8* %1300, i64 1
  %1303 = load i8, i8* %1300, align 1, !tbaa !4
  %1304 = getelementptr inbounds i8, i8* %1298, i64 1
  store i8 %1303, i8* %1298, align 1, !tbaa !4
  %1305 = add i32 %1299, -1
  %1306 = add i32 %1301, 1
  %1307 = icmp eq i32 %1306, %1295
  br i1 %1307, label %1308, label %1297, !llvm.loop !183

1308:                                             ; preds = %1297, %1290
  %1309 = phi i8* [ undef, %1290 ], [ %1304, %1297 ]
  %1310 = phi i8* [ %1291, %1290 ], [ %1304, %1297 ]
  %1311 = phi i32 [ %1292, %1290 ], [ %1305, %1297 ]
  %1312 = phi i8* [ %1293, %1290 ], [ %1302, %1297 ]
  %1313 = icmp ult i32 %1294, 7
  br i1 %1313, label %1344, label %1314

1314:                                             ; preds = %1308, %1314
  %1315 = phi i8* [ %1341, %1314 ], [ %1310, %1308 ]
  %1316 = phi i32 [ %1342, %1314 ], [ %1311, %1308 ]
  %1317 = phi i8* [ %1339, %1314 ], [ %1312, %1308 ]
  %1318 = getelementptr inbounds i8, i8* %1317, i64 1
  %1319 = load i8, i8* %1317, align 1, !tbaa !4
  %1320 = getelementptr inbounds i8, i8* %1315, i64 1
  store i8 %1319, i8* %1315, align 1, !tbaa !4
  %1321 = getelementptr inbounds i8, i8* %1317, i64 2
  %1322 = load i8, i8* %1318, align 1, !tbaa !4
  %1323 = getelementptr inbounds i8, i8* %1315, i64 2
  store i8 %1322, i8* %1320, align 1, !tbaa !4
  %1324 = getelementptr inbounds i8, i8* %1317, i64 3
  %1325 = load i8, i8* %1321, align 1, !tbaa !4
  %1326 = getelementptr inbounds i8, i8* %1315, i64 3
  store i8 %1325, i8* %1323, align 1, !tbaa !4
  %1327 = getelementptr inbounds i8, i8* %1317, i64 4
  %1328 = load i8, i8* %1324, align 1, !tbaa !4
  %1329 = getelementptr inbounds i8, i8* %1315, i64 4
  store i8 %1328, i8* %1326, align 1, !tbaa !4
  %1330 = getelementptr inbounds i8, i8* %1317, i64 5
  %1331 = load i8, i8* %1327, align 1, !tbaa !4
  %1332 = getelementptr inbounds i8, i8* %1315, i64 5
  store i8 %1331, i8* %1329, align 1, !tbaa !4
  %1333 = getelementptr inbounds i8, i8* %1317, i64 6
  %1334 = load i8, i8* %1330, align 1, !tbaa !4
  %1335 = getelementptr inbounds i8, i8* %1315, i64 6
  store i8 %1334, i8* %1332, align 1, !tbaa !4
  %1336 = getelementptr inbounds i8, i8* %1317, i64 7
  %1337 = load i8, i8* %1333, align 1, !tbaa !4
  %1338 = getelementptr inbounds i8, i8* %1315, i64 7
  store i8 %1337, i8* %1335, align 1, !tbaa !4
  %1339 = getelementptr inbounds i8, i8* %1317, i64 8
  %1340 = load i8, i8* %1336, align 1, !tbaa !4
  %1341 = getelementptr inbounds i8, i8* %1315, i64 8
  store i8 %1340, i8* %1338, align 1, !tbaa !4
  %1342 = add i32 %1316, -8
  %1343 = icmp eq i32 %1342, 0
  br i1 %1343, label %1344, label %1314, !llvm.loop !184

1344:                                             ; preds = %1308, %1314, %1288
  %1345 = phi i8* [ %1209, %1288 ], [ %1309, %1308 ], [ %1341, %1314 ]
  %1346 = sub i32 %1176, %1190
  %1347 = load i32, i32* %44, align 4, !tbaa !149
  %1348 = icmp eq i32 %1347, 0
  br i1 %1348, label %1349, label %1165, !llvm.loop !185

1349:                                             ; preds = %1344, %462, %651, %679, %1164, %1105, %903, %899, %889, %734, %702, %693, %689, %328, %229, %185, %145, %102, %68
  %1350 = phi i8* [ %735, %734 ], [ %894, %889 ], [ %54, %899 ], [ %54, %903 ], [ %54, %1105 ], [ %54, %1164 ], [ %54, %229 ], [ %54, %328 ], [ %54, %679 ], [ %54, %689 ], [ %54, %693 ], [ %54, %702 ], [ %54, %145 ], [ %186, %185 ], [ %54, %68 ], [ %54, %102 ], [ %54, %651 ], [ %54, %462 ], [ %1345, %1344 ]
  %1351 = phi i32 [ %738, %734 ], [ %869, %889 ], [ %869, %899 ], [ %869, %903 ], [ %1095, %1105 ], [ %1155, %1164 ], [ %212, %229 ], [ %286, %328 ], [ %681, %679 ], [ %681, %689 ], [ %681, %693 ], [ %681, %702 ], [ %138, %145 ], [ %187, %185 ], [ %55, %68 ], [ %91, %102 ], [ %542, %651 ], [ %454, %462 ], [ %1155, %1344 ]
  %1352 = phi i32 [ %736, %734 ], [ %895, %889 ], [ %56, %899 ], [ %56, %903 ], [ %56, %1105 ], [ %56, %1164 ], [ %56, %229 ], [ %56, %328 ], [ %56, %679 ], [ %56, %689 ], [ %56, %693 ], [ %56, %702 ], [ %56, %145 ], [ %188, %185 ], [ %56, %68 ], [ %56, %102 ], [ %56, %651 ], [ %56, %462 ], [ %1346, %1344 ]
  %1353 = phi i64 [ %739, %734 ], [ %876, %889 ], [ %876, %899 ], [ %876, %903 ], [ %1101, %1105 ], [ %1156, %1164 ], [ %224, %229 ], [ %297, %328 ], [ %682, %679 ], [ %682, %689 ], [ %682, %693 ], [ %682, %702 ], [ %139, %145 ], [ 0, %185 ], [ %71, %68 ], [ %104, %102 ], [ %543, %651 ], [ %458, %462 ], [ %1156, %1344 ]
  %1354 = phi i32 [ %740, %734 ], [ %877, %889 ], [ %877, %899 ], [ %877, %903 ], [ %1102, %1105 ], [ %1157, %1164 ], [ %225, %229 ], [ %298, %328 ], [ %683, %679 ], [ %683, %689 ], [ %683, %693 ], [ %683, %702 ], [ %140, %145 ], [ 0, %185 ], [ %72, %68 ], [ %105, %102 ], [ %544, %651 ], [ %459, %462 ], [ %1157, %1344 ]
  %1355 = load i32, i32* %16, align 8, !tbaa !142
  br label %52

1356:                                             ; preds = %882, %52
  %1357 = phi i32 [ %869, %882 ], [ %55, %52 ]
  %1358 = phi i32 [ %884, %882 ], [ %56, %52 ]
  %1359 = phi i1 [ false, %882 ], [ true, %52 ]
  %1360 = phi i32 [ -5, %882 ], [ 1, %52 ]
  br label %1362

1361:                                             ; preds = %52
  br label %1362

1362:                                             ; preds = %1169, %163, %52, %1361, %1356, %1123, %1050, %982, %920, %824, %754, %515, %481, %439, %365, %268, %197, %159, %123, %78
  %1363 = phi i32 [ 0, %920 ], [ 0, %1123 ], [ 0, %1050 ], [ 0, %982 ], [ 0, %824 ], [ 0, %754 ], [ 0, %197 ], [ 0, %268 ], [ 0, %439 ], [ 0, %481 ], [ 0, %515 ], [ 0, %365 ], [ 0, %123 ], [ 0, %159 ], [ 0, %78 ], [ %1357, %1356 ], [ %55, %1361 ], [ %55, %52 ], [ %161, %163 ], [ %1155, %1169 ]
  %1364 = phi i32 [ %56, %920 ], [ %56, %1123 ], [ %56, %1050 ], [ %56, %982 ], [ %56, %824 ], [ %56, %754 ], [ %56, %197 ], [ %56, %268 ], [ %56, %439 ], [ %56, %481 ], [ %56, %515 ], [ %56, %365 ], [ %56, %123 ], [ %151, %159 ], [ %56, %78 ], [ %1358, %1356 ], [ %56, %1361 ], [ %56, %52 ], [ %165, %163 ], [ %1171, %1169 ]
  %1365 = phi i1 [ false, %920 ], [ false, %1123 ], [ false, %1050 ], [ false, %982 ], [ false, %824 ], [ false, %754 ], [ false, %197 ], [ false, %268 ], [ false, %439 ], [ false, %481 ], [ false, %515 ], [ false, %365 ], [ false, %123 ], [ false, %159 ], [ false, %78 ], [ %1359, %1356 ], [ false, %1361 ], [ false, %52 ], [ false, %163 ], [ false, %1169 ]
  %1366 = phi i32 [ -5, %920 ], [ -5, %1123 ], [ -5, %1050 ], [ -5, %982 ], [ -5, %824 ], [ -5, %754 ], [ -5, %197 ], [ -5, %268 ], [ -5, %439 ], [ -5, %481 ], [ -5, %515 ], [ -5, %365 ], [ -5, %123 ], [ -5, %159 ], [ -5, %78 ], [ %1360, %1356 ], [ -3, %1361 ], [ -2, %52 ], [ -5, %163 ], [ -5, %1169 ]
  %1367 = load i32, i32* %29, align 4, !tbaa !137
  %1368 = icmp ugt i32 %1367, %1364
  br i1 %1368, label %1369, label %1376

1369:                                             ; preds = %1362
  %1370 = load i8*, i8** %27, align 8, !tbaa !138
  %1371 = sub i32 %1367, %1364
  %1372 = call i32 %3(i8* noundef %4, i8* noundef %1370, i32 noundef %1371) #25
  %1373 = icmp ne i32 %1372, 0
  %1374 = and i1 %1365, %1373
  %1375 = select i1 %1374, i32 -5, i32 %1366
  br label %1376

1376:                                             ; preds = %1369, %1362
  %1377 = phi i32 [ %1366, %1362 ], [ %1375, %1369 ]
  %1378 = load i8*, i8** %6, align 8, !tbaa !53
  store i8* %1378, i8** %19, align 8, !tbaa !89
  store i32 %1363, i32* %49, align 8, !tbaa !84
  br label %1379

1379:                                             ; preds = %5, %9, %1376
  %1380 = phi i32 [ %1377, %1376 ], [ -2, %9 ], [ -2, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #25
  ret i32 %1380
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #11

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #11

; Function Attrs: nounwind uwtable
define i32 @inflateBackEnd(%struct.z_stream_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %5 = load %struct.internal_state*, %struct.internal_state** %4, align 8, !tbaa !31
  %6 = icmp eq %struct.internal_state* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %13 = load i8*, i8** %12, align 8, !tbaa !29
  %14 = bitcast %struct.internal_state* %5 to i8*
  tail call void %9(i8* noundef %13, i8* noundef nonnull %14) #25
  store %struct.internal_state* null, %struct.internal_state** %4, align 8, !tbaa !31
  br label %15

15:                                               ; preds = %1, %3, %7, %11
  %16 = phi i32 [ 0, %11 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ]
  ret i32 %16
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define hidden void @inflate_fast(%struct.z_stream_s* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %4 = bitcast %struct.internal_state** %3 to %struct.inflate_state**
  %5 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8, !tbaa !31
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !89
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8, !tbaa !84
  %10 = add i32 %9, -5
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %7, i64 %11
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8, !tbaa !87
  %15 = ptrtoint i8* %14 to i64
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !tbaa !86
  %18 = sub i32 %1, %17
  %19 = zext i32 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds i8, i8* %14, i64 %20
  %22 = add i32 %17, -257
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %14, i64 %23
  %25 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 11
  %26 = load i32, i32* %25, align 4, !tbaa !137
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 12
  %28 = load i32, i32* %27, align 8, !tbaa !140
  %29 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 13
  %30 = load i32, i32* %29, align 4, !tbaa !139
  %31 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 14
  %32 = load i8*, i8** %31, align 8, !tbaa !138
  %33 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 15
  %34 = load i64, i64* %33, align 8, !tbaa !168
  %35 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 16
  %36 = load i32, i32* %35, align 8, !tbaa !169
  %37 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 20
  %38 = load %struct.code*, %struct.code** %37, align 8, !tbaa !144
  %39 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 21
  %40 = load %struct.code*, %struct.code** %39, align 8, !tbaa !146
  %41 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 22
  %42 = load i32, i32* %41, align 8, !tbaa !145
  %43 = shl nsw i32 -1, %42
  %44 = xor i32 %43, -1
  %45 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 23
  %46 = load i32, i32* %45, align 4, !tbaa !147
  %47 = shl nsw i32 -1, %46
  %48 = xor i32 %47, -1
  %49 = zext i32 %44 to i64
  %50 = zext i32 %48 to i64
  %51 = ptrtoint i8* %21 to i64
  %52 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 32
  %53 = icmp eq i32 %30, 0
  %54 = add i32 %30, %26
  %55 = trunc i64 %15 to i32
  %56 = add i32 %17, %55
  %57 = xor i32 %1, -1
  %58 = add i32 %56, %57
  %59 = getelementptr i8, i8* %32, i64 1
  %60 = trunc i64 %15 to i32
  %61 = add i32 %17, %60
  %62 = xor i32 %1, -1
  %63 = add i32 %61, %62
  %64 = add i32 %30, -1
  %65 = zext i32 %64 to i64
  %66 = add nuw nsw i64 %65, 1
  %67 = getelementptr i8, i8* %32, i64 %66
  %68 = zext i32 %64 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = trunc i64 %15 to i32
  %71 = add i32 %17, %70
  %72 = xor i32 %30, -1
  %73 = add i32 %71, %72
  %74 = sub i32 %73, %1
  %75 = getelementptr i8, i8* %32, i64 1
  %76 = trunc i64 %15 to i32
  %77 = add i32 %17, %76
  %78 = xor i32 %30, -1
  %79 = add i32 %77, %78
  %80 = sub i32 %79, %1
  %81 = trunc i64 %15 to i32
  %82 = add i32 %17, %81
  %83 = xor i32 %1, -1
  %84 = add i32 %82, %83
  %85 = getelementptr i8, i8* %32, i64 1
  %86 = trunc i64 %15 to i32
  %87 = add i32 %17, %86
  %88 = xor i32 %1, -1
  %89 = add i32 %87, %88
  %90 = and i64 %69, 8589934560
  %91 = add nsw i64 %90, -32
  %92 = lshr exact i64 %91, 5
  %93 = add nuw nsw i64 %92, 1
  %94 = icmp ult i32 %64, 31
  %95 = and i64 %69, 8589934560
  %96 = trunc i64 %95 to i32
  %97 = sub i32 %30, %96
  %98 = getelementptr i8, i8* %32, i64 %95
  %99 = and i64 %93, 3
  %100 = icmp ult i64 %91, 96
  %101 = and i64 %93, 1152921504606846972
  %102 = icmp eq i64 %99, 0
  %103 = icmp eq i64 %69, %95
  br label %104

104:                                              ; preds = %1066, %2
  %105 = phi i32 [ %36, %2 ], [ %1067, %1066 ]
  %106 = phi i64 [ %34, %2 ], [ %1068, %1066 ]
  %107 = phi i8* [ %14, %2 ], [ %1069, %1066 ]
  %108 = phi i8* [ %7, %2 ], [ %1070, %1066 ]
  %109 = icmp ult i32 %105, 15
  br i1 %109, label %110, label %125

110:                                              ; preds = %104
  %111 = getelementptr inbounds i8, i8* %108, i64 1
  %112 = load i8, i8* %108, align 1, !tbaa !4
  %113 = zext i8 %112 to i64
  %114 = zext i32 %105 to i64
  %115 = shl nuw nsw i64 %113, %114
  %116 = add i64 %115, %106
  %117 = add nuw nsw i32 %105, 8
  %118 = getelementptr inbounds i8, i8* %108, i64 2
  %119 = load i8, i8* %111, align 1, !tbaa !4
  %120 = zext i8 %119 to i64
  %121 = zext i32 %117 to i64
  %122 = shl nuw nsw i64 %120, %121
  %123 = add i64 %116, %122
  %124 = add nuw nsw i32 %105, 16
  br label %125

125:                                              ; preds = %110, %104
  %126 = phi i32 [ %124, %110 ], [ %105, %104 ]
  %127 = phi i64 [ %123, %110 ], [ %106, %104 ]
  %128 = phi i8* [ %118, %110 ], [ %108, %104 ]
  %129 = and i64 %127, %49
  %130 = getelementptr inbounds %struct.code, %struct.code* %38, i64 %129
  %131 = getelementptr inbounds %struct.code, %struct.code* %38, i64 %129, i32 1
  %132 = load i8, i8* %131, align 1, !tbaa !186
  %133 = zext i8 %132 to i32
  %134 = zext i8 %132 to i64
  %135 = lshr i64 %127, %134
  %136 = sub i32 %126, %133
  %137 = getelementptr inbounds %struct.code, %struct.code* %130, i64 0, i32 0
  %138 = load i8, i8* %137, align 2, !tbaa !188
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %148

140:                                              ; preds = %1044, %125
  %141 = phi %struct.code* [ %130, %125 ], [ %1053, %1044 ]
  %142 = phi i64 [ %135, %125 ], [ %1058, %1044 ]
  %143 = phi i32 [ %136, %125 ], [ %1059, %1044 ]
  %144 = getelementptr inbounds %struct.code, %struct.code* %141, i64 0, i32 2
  %145 = load i16, i16* %144, align 2, !tbaa !189
  %146 = trunc i16 %145 to i8
  %147 = getelementptr inbounds i8, i8* %107, i64 1
  store i8 %146, i8* %107, align 1, !tbaa !4
  br label %1066

148:                                              ; preds = %125, %1044
  %149 = phi i8 [ %1061, %1044 ], [ %138, %125 ]
  %150 = phi i32 [ %1059, %1044 ], [ %136, %125 ]
  %151 = phi i64 [ %1058, %1044 ], [ %135, %125 ]
  %152 = phi %struct.code* [ %1053, %1044 ], [ %130, %125 ]
  %153 = zext i8 %149 to i32
  %154 = and i32 %153, 16
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %1041, label %156

156:                                              ; preds = %148
  %157 = getelementptr inbounds %struct.code, %struct.code* %152, i64 0, i32 2
  %158 = load i16, i16* %157, align 2, !tbaa !189
  %159 = zext i16 %158 to i32
  %160 = and i8 %149, 15
  %161 = zext i8 %160 to i32
  %162 = icmp eq i8 %160, 0
  br i1 %162, label %185, label %163

163:                                              ; preds = %156
  %164 = icmp ult i32 %150, %161
  br i1 %164, label %165, label %173

165:                                              ; preds = %163
  %166 = getelementptr inbounds i8, i8* %128, i64 1
  %167 = load i8, i8* %128, align 1, !tbaa !4
  %168 = zext i8 %167 to i64
  %169 = zext i32 %150 to i64
  %170 = shl i64 %168, %169
  %171 = add i64 %170, %151
  %172 = add i32 %150, 8
  br label %173

173:                                              ; preds = %165, %163
  %174 = phi i32 [ %172, %165 ], [ %150, %163 ]
  %175 = phi i64 [ %171, %165 ], [ %151, %163 ]
  %176 = phi i8* [ %166, %165 ], [ %128, %163 ]
  %177 = trunc i64 %175 to i32
  %178 = shl nsw i32 -1, %161
  %179 = xor i32 %178, -1
  %180 = and i32 %177, %179
  %181 = add nuw nsw i32 %180, %159
  %182 = zext i8 %160 to i64
  %183 = lshr i64 %175, %182
  %184 = sub i32 %174, %161
  br label %185

185:                                              ; preds = %173, %156
  %186 = phi i32 [ %184, %173 ], [ %150, %156 ]
  %187 = phi i64 [ %183, %173 ], [ %151, %156 ]
  %188 = phi i8* [ %176, %173 ], [ %128, %156 ]
  %189 = phi i32 [ %181, %173 ], [ %159, %156 ]
  %190 = icmp ult i32 %186, 15
  br i1 %190, label %191, label %206

191:                                              ; preds = %185
  %192 = getelementptr inbounds i8, i8* %188, i64 1
  %193 = load i8, i8* %188, align 1, !tbaa !4
  %194 = zext i8 %193 to i64
  %195 = zext i32 %186 to i64
  %196 = shl nuw nsw i64 %194, %195
  %197 = add i64 %196, %187
  %198 = add nuw nsw i32 %186, 8
  %199 = getelementptr inbounds i8, i8* %188, i64 2
  %200 = load i8, i8* %192, align 1, !tbaa !4
  %201 = zext i8 %200 to i64
  %202 = zext i32 %198 to i64
  %203 = shl nuw nsw i64 %201, %202
  %204 = add i64 %197, %203
  %205 = add nuw nsw i32 %186, 16
  br label %206

206:                                              ; preds = %191, %185
  %207 = phi i32 [ %205, %191 ], [ %186, %185 ]
  %208 = phi i64 [ %204, %191 ], [ %187, %185 ]
  %209 = phi i8* [ %199, %191 ], [ %188, %185 ]
  %210 = and i64 %208, %50
  %211 = getelementptr inbounds %struct.code, %struct.code* %40, i64 %210
  %212 = getelementptr inbounds %struct.code, %struct.code* %40, i64 %210, i32 1
  %213 = load i8, i8* %212, align 1, !tbaa !186
  %214 = zext i8 %213 to i32
  %215 = zext i8 %213 to i64
  %216 = lshr i64 %208, %215
  %217 = sub i32 %207, %214
  %218 = getelementptr inbounds %struct.code, %struct.code* %211, i64 0, i32 0
  %219 = load i8, i8* %218, align 2, !tbaa !188
  %220 = zext i8 %219 to i32
  %221 = and i32 %220, 16
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %1013, label %223

223:                                              ; preds = %1020, %206
  %224 = phi i8 [ %219, %206 ], [ %1037, %1020 ]
  %225 = phi %struct.code* [ %211, %206 ], [ %1029, %1020 ]
  %226 = phi i64 [ %216, %206 ], [ %1034, %1020 ]
  %227 = phi i32 [ %217, %206 ], [ %1035, %1020 ]
  %228 = getelementptr inbounds %struct.code, %struct.code* %225, i64 0, i32 2
  %229 = load i16, i16* %228, align 2, !tbaa !189
  %230 = zext i16 %229 to i32
  %231 = and i8 %224, 15
  %232 = zext i8 %231 to i32
  %233 = icmp ult i32 %227, %232
  br i1 %233, label %234, label %251

234:                                              ; preds = %223
  %235 = getelementptr inbounds i8, i8* %209, i64 1
  %236 = load i8, i8* %209, align 1, !tbaa !4
  %237 = zext i8 %236 to i64
  %238 = zext i32 %227 to i64
  %239 = shl i64 %237, %238
  %240 = add i64 %239, %226
  %241 = add i32 %227, 8
  %242 = icmp ult i32 %241, %232
  br i1 %242, label %243, label %251

243:                                              ; preds = %234
  %244 = getelementptr inbounds i8, i8* %209, i64 2
  %245 = load i8, i8* %235, align 1, !tbaa !4
  %246 = zext i8 %245 to i64
  %247 = zext i32 %241 to i64
  %248 = shl i64 %246, %247
  %249 = add i64 %248, %240
  %250 = add i32 %227, 16
  br label %251

251:                                              ; preds = %234, %243, %223
  %252 = phi i32 [ %250, %243 ], [ %241, %234 ], [ %227, %223 ]
  %253 = phi i64 [ %249, %243 ], [ %240, %234 ], [ %226, %223 ]
  %254 = phi i8* [ %244, %243 ], [ %235, %234 ], [ %209, %223 ]
  %255 = trunc i64 %253 to i32
  %256 = shl nsw i32 -1, %232
  %257 = xor i32 %256, -1
  %258 = and i32 %255, %257
  %259 = add nuw nsw i32 %258, %230
  %260 = zext i8 %231 to i64
  %261 = lshr i64 %253, %260
  %262 = sub i32 %252, %232
  %263 = ptrtoint i8* %107 to i64
  %264 = sub i64 %263, %51
  %265 = trunc i64 %264 to i32
  %266 = icmp ugt i32 %259, %265
  br i1 %266, label %267, label %984

267:                                              ; preds = %251
  %268 = sub i32 %259, %265
  %269 = icmp ugt i32 %268, %28
  br i1 %269, label %270, label %273

270:                                              ; preds = %267
  %271 = load i32, i32* %52, align 8, !tbaa !141
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %1074

273:                                              ; preds = %270, %267
  br i1 %53, label %274, label %443

274:                                              ; preds = %273
  %275 = sub i32 %26, %268
  %276 = zext i32 %275 to i64
  %277 = getelementptr i8, i8* %32, i64 %276
  %278 = icmp ugt i32 %189, %268
  br i1 %278, label %279, label %918

279:                                              ; preds = %274
  %280 = add i32 %63, %258
  %281 = add i32 %280, %230
  %282 = trunc i64 %263 to i32
  %283 = sub i32 %281, %282
  %284 = zext i32 %283 to i64
  %285 = add nuw nsw i64 %284, 1
  %286 = icmp ult i32 %283, 31
  br i1 %286, label %383, label %287

287:                                              ; preds = %279
  %288 = getelementptr i8, i8* %107, i64 1
  %289 = add i32 %58, %258
  %290 = add i32 %289, %230
  %291 = trunc i64 %263 to i32
  %292 = sub i32 %290, %291
  %293 = zext i32 %292 to i64
  %294 = getelementptr i8, i8* %288, i64 %293
  %295 = add nuw nsw i64 %276, %293
  %296 = getelementptr i8, i8* %59, i64 %295
  %297 = icmp ult i8* %107, %296
  %298 = icmp ult i8* %277, %294
  %299 = and i1 %297, %298
  br i1 %299, label %383, label %300

300:                                              ; preds = %287
  %301 = and i64 %285, 8589934560
  %302 = getelementptr i8, i8* %107, i64 %301
  %303 = trunc i64 %301 to i32
  %304 = sub i32 %268, %303
  %305 = getelementptr i8, i8* %277, i64 %301
  %306 = add nsw i64 %301, -32
  %307 = lshr exact i64 %306, 5
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 96
  br i1 %310, label %362, label %311

311:                                              ; preds = %300
  %312 = and i64 %308, 1152921504606846972
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %359, %313 ]
  %315 = phi i64 [ 0, %311 ], [ %360, %313 ]
  %316 = getelementptr i8, i8* %107, i64 %314
  %317 = getelementptr i8, i8* %277, i64 %314
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !tbaa !4, !alias.scope !190
  %320 = getelementptr i8, i8* %317, i64 16
  %321 = bitcast i8* %320 to <16 x i8>*
  %322 = load <16 x i8>, <16 x i8>* %321, align 1, !tbaa !4, !alias.scope !190
  %323 = bitcast i8* %316 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %323, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %324 = getelementptr i8, i8* %316, i64 16
  %325 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %322, <16 x i8>* %325, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %326 = or i64 %314, 32
  %327 = getelementptr i8, i8* %107, i64 %326
  %328 = getelementptr i8, i8* %277, i64 %326
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !tbaa !4, !alias.scope !190
  %331 = getelementptr i8, i8* %328, i64 16
  %332 = bitcast i8* %331 to <16 x i8>*
  %333 = load <16 x i8>, <16 x i8>* %332, align 1, !tbaa !4, !alias.scope !190
  %334 = bitcast i8* %327 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %334, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %335 = getelementptr i8, i8* %327, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  store <16 x i8> %333, <16 x i8>* %336, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %337 = or i64 %314, 64
  %338 = getelementptr i8, i8* %107, i64 %337
  %339 = getelementptr i8, i8* %277, i64 %337
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1, !tbaa !4, !alias.scope !190
  %342 = getelementptr i8, i8* %339, i64 16
  %343 = bitcast i8* %342 to <16 x i8>*
  %344 = load <16 x i8>, <16 x i8>* %343, align 1, !tbaa !4, !alias.scope !190
  %345 = bitcast i8* %338 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %345, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %346 = getelementptr i8, i8* %338, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  store <16 x i8> %344, <16 x i8>* %347, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %348 = or i64 %314, 96
  %349 = getelementptr i8, i8* %107, i64 %348
  %350 = getelementptr i8, i8* %277, i64 %348
  %351 = bitcast i8* %350 to <16 x i8>*
  %352 = load <16 x i8>, <16 x i8>* %351, align 1, !tbaa !4, !alias.scope !190
  %353 = getelementptr i8, i8* %350, i64 16
  %354 = bitcast i8* %353 to <16 x i8>*
  %355 = load <16 x i8>, <16 x i8>* %354, align 1, !tbaa !4, !alias.scope !190
  %356 = bitcast i8* %349 to <16 x i8>*
  store <16 x i8> %352, <16 x i8>* %356, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %357 = getelementptr i8, i8* %349, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  store <16 x i8> %355, <16 x i8>* %358, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %359 = add nuw i64 %314, 128
  %360 = add i64 %315, 4
  %361 = icmp eq i64 %360, %312
  br i1 %361, label %362, label %313, !llvm.loop !195

362:                                              ; preds = %313, %300
  %363 = phi i64 [ 0, %300 ], [ %359, %313 ]
  %364 = icmp eq i64 %309, 0
  br i1 %364, label %381, label %365

365:                                              ; preds = %362, %365
  %366 = phi i64 [ %378, %365 ], [ %363, %362 ]
  %367 = phi i64 [ %379, %365 ], [ 0, %362 ]
  %368 = getelementptr i8, i8* %107, i64 %366
  %369 = getelementptr i8, i8* %277, i64 %366
  %370 = bitcast i8* %369 to <16 x i8>*
  %371 = load <16 x i8>, <16 x i8>* %370, align 1, !tbaa !4, !alias.scope !190
  %372 = getelementptr i8, i8* %369, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  %374 = load <16 x i8>, <16 x i8>* %373, align 1, !tbaa !4, !alias.scope !190
  %375 = bitcast i8* %368 to <16 x i8>*
  store <16 x i8> %371, <16 x i8>* %375, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %376 = getelementptr i8, i8* %368, i64 16
  %377 = bitcast i8* %376 to <16 x i8>*
  store <16 x i8> %374, <16 x i8>* %377, align 1, !tbaa !4, !alias.scope !193, !noalias !190
  %378 = add nuw i64 %366, 32
  %379 = add i64 %367, 1
  %380 = icmp eq i64 %379, %309
  br i1 %380, label %381, label %365, !llvm.loop !196

381:                                              ; preds = %365, %362
  %382 = icmp eq i64 %285, %301
  br i1 %382, label %437, label %383

383:                                              ; preds = %287, %279, %381
  %384 = phi i8* [ %107, %287 ], [ %107, %279 ], [ %302, %381 ]
  %385 = phi i32 [ %268, %287 ], [ %268, %279 ], [ %304, %381 ]
  %386 = phi i8* [ %277, %287 ], [ %277, %279 ], [ %305, %381 ]
  %387 = add i32 %385, -1
  %388 = and i32 %385, 7
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %401, label %390

390:                                              ; preds = %383, %390
  %391 = phi i8* [ %397, %390 ], [ %384, %383 ]
  %392 = phi i32 [ %398, %390 ], [ %385, %383 ]
  %393 = phi i8* [ %395, %390 ], [ %386, %383 ]
  %394 = phi i32 [ %399, %390 ], [ 0, %383 ]
  %395 = getelementptr inbounds i8, i8* %393, i64 1
  %396 = load i8, i8* %393, align 1, !tbaa !4
  %397 = getelementptr inbounds i8, i8* %391, i64 1
  store i8 %396, i8* %391, align 1, !tbaa !4
  %398 = add i32 %392, -1
  %399 = add i32 %394, 1
  %400 = icmp eq i32 %399, %388
  br i1 %400, label %401, label %390, !llvm.loop !197

401:                                              ; preds = %390, %383
  %402 = phi i8* [ undef, %383 ], [ %397, %390 ]
  %403 = phi i8* [ %384, %383 ], [ %397, %390 ]
  %404 = phi i32 [ %385, %383 ], [ %398, %390 ]
  %405 = phi i8* [ %386, %383 ], [ %395, %390 ]
  %406 = icmp ult i32 %387, 7
  br i1 %406, label %437, label %407

407:                                              ; preds = %401, %407
  %408 = phi i8* [ %434, %407 ], [ %403, %401 ]
  %409 = phi i32 [ %435, %407 ], [ %404, %401 ]
  %410 = phi i8* [ %432, %407 ], [ %405, %401 ]
  %411 = getelementptr inbounds i8, i8* %410, i64 1
  %412 = load i8, i8* %410, align 1, !tbaa !4
  %413 = getelementptr inbounds i8, i8* %408, i64 1
  store i8 %412, i8* %408, align 1, !tbaa !4
  %414 = getelementptr inbounds i8, i8* %410, i64 2
  %415 = load i8, i8* %411, align 1, !tbaa !4
  %416 = getelementptr inbounds i8, i8* %408, i64 2
  store i8 %415, i8* %413, align 1, !tbaa !4
  %417 = getelementptr inbounds i8, i8* %410, i64 3
  %418 = load i8, i8* %414, align 1, !tbaa !4
  %419 = getelementptr inbounds i8, i8* %408, i64 3
  store i8 %418, i8* %416, align 1, !tbaa !4
  %420 = getelementptr inbounds i8, i8* %410, i64 4
  %421 = load i8, i8* %417, align 1, !tbaa !4
  %422 = getelementptr inbounds i8, i8* %408, i64 4
  store i8 %421, i8* %419, align 1, !tbaa !4
  %423 = getelementptr inbounds i8, i8* %410, i64 5
  %424 = load i8, i8* %420, align 1, !tbaa !4
  %425 = getelementptr inbounds i8, i8* %408, i64 5
  store i8 %424, i8* %422, align 1, !tbaa !4
  %426 = getelementptr inbounds i8, i8* %410, i64 6
  %427 = load i8, i8* %423, align 1, !tbaa !4
  %428 = getelementptr inbounds i8, i8* %408, i64 6
  store i8 %427, i8* %425, align 1, !tbaa !4
  %429 = getelementptr inbounds i8, i8* %410, i64 7
  %430 = load i8, i8* %426, align 1, !tbaa !4
  %431 = getelementptr inbounds i8, i8* %408, i64 7
  store i8 %430, i8* %428, align 1, !tbaa !4
  %432 = getelementptr inbounds i8, i8* %410, i64 8
  %433 = load i8, i8* %429, align 1, !tbaa !4
  %434 = getelementptr inbounds i8, i8* %408, i64 8
  store i8 %433, i8* %431, align 1, !tbaa !4
  %435 = add i32 %409, -8
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %407, !llvm.loop !198

437:                                              ; preds = %401, %407, %381
  %438 = phi i8* [ %302, %381 ], [ %402, %401 ], [ %434, %407 ]
  %439 = sub i32 %189, %268
  %440 = zext i32 %259 to i64
  %441 = sub nsw i64 0, %440
  %442 = getelementptr inbounds i8, i8* %438, i64 %441
  br label %918

443:                                              ; preds = %273
  %444 = icmp ult i32 %30, %268
  br i1 %444, label %445, label %749

445:                                              ; preds = %443
  %446 = sub i32 %54, %268
  %447 = zext i32 %446 to i64
  %448 = getelementptr i8, i8* %32, i64 %447
  %449 = sub i32 %268, %30
  %450 = icmp ugt i32 %189, %449
  br i1 %450, label %451, label %918

451:                                              ; preds = %445
  %452 = add i32 %80, %258
  %453 = add i32 %452, %230
  %454 = trunc i64 %263 to i32
  %455 = sub i32 %453, %454
  %456 = zext i32 %455 to i64
  %457 = add nuw nsw i64 %456, 1
  %458 = icmp ult i32 %455, 31
  br i1 %458, label %555, label %459

459:                                              ; preds = %451
  %460 = getelementptr i8, i8* %107, i64 1
  %461 = add i32 %74, %258
  %462 = add i32 %461, %230
  %463 = trunc i64 %263 to i32
  %464 = sub i32 %462, %463
  %465 = zext i32 %464 to i64
  %466 = getelementptr i8, i8* %460, i64 %465
  %467 = add nuw nsw i64 %447, %465
  %468 = getelementptr i8, i8* %75, i64 %467
  %469 = icmp ult i8* %107, %468
  %470 = icmp ult i8* %448, %466
  %471 = and i1 %469, %470
  br i1 %471, label %555, label %472

472:                                              ; preds = %459
  %473 = and i64 %457, 8589934560
  %474 = getelementptr i8, i8* %107, i64 %473
  %475 = trunc i64 %473 to i32
  %476 = sub i32 %449, %475
  %477 = getelementptr i8, i8* %448, i64 %473
  %478 = add nsw i64 %473, -32
  %479 = lshr exact i64 %478, 5
  %480 = add nuw nsw i64 %479, 1
  %481 = and i64 %480, 3
  %482 = icmp ult i64 %478, 96
  br i1 %482, label %534, label %483

483:                                              ; preds = %472
  %484 = and i64 %480, 1152921504606846972
  br label %485

485:                                              ; preds = %485, %483
  %486 = phi i64 [ 0, %483 ], [ %531, %485 ]
  %487 = phi i64 [ 0, %483 ], [ %532, %485 ]
  %488 = getelementptr i8, i8* %107, i64 %486
  %489 = getelementptr i8, i8* %448, i64 %486
  %490 = bitcast i8* %489 to <16 x i8>*
  %491 = load <16 x i8>, <16 x i8>* %490, align 1, !tbaa !4, !alias.scope !199
  %492 = getelementptr i8, i8* %489, i64 16
  %493 = bitcast i8* %492 to <16 x i8>*
  %494 = load <16 x i8>, <16 x i8>* %493, align 1, !tbaa !4, !alias.scope !199
  %495 = bitcast i8* %488 to <16 x i8>*
  store <16 x i8> %491, <16 x i8>* %495, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %496 = getelementptr i8, i8* %488, i64 16
  %497 = bitcast i8* %496 to <16 x i8>*
  store <16 x i8> %494, <16 x i8>* %497, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %498 = or i64 %486, 32
  %499 = getelementptr i8, i8* %107, i64 %498
  %500 = getelementptr i8, i8* %448, i64 %498
  %501 = bitcast i8* %500 to <16 x i8>*
  %502 = load <16 x i8>, <16 x i8>* %501, align 1, !tbaa !4, !alias.scope !199
  %503 = getelementptr i8, i8* %500, i64 16
  %504 = bitcast i8* %503 to <16 x i8>*
  %505 = load <16 x i8>, <16 x i8>* %504, align 1, !tbaa !4, !alias.scope !199
  %506 = bitcast i8* %499 to <16 x i8>*
  store <16 x i8> %502, <16 x i8>* %506, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %507 = getelementptr i8, i8* %499, i64 16
  %508 = bitcast i8* %507 to <16 x i8>*
  store <16 x i8> %505, <16 x i8>* %508, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %509 = or i64 %486, 64
  %510 = getelementptr i8, i8* %107, i64 %509
  %511 = getelementptr i8, i8* %448, i64 %509
  %512 = bitcast i8* %511 to <16 x i8>*
  %513 = load <16 x i8>, <16 x i8>* %512, align 1, !tbaa !4, !alias.scope !199
  %514 = getelementptr i8, i8* %511, i64 16
  %515 = bitcast i8* %514 to <16 x i8>*
  %516 = load <16 x i8>, <16 x i8>* %515, align 1, !tbaa !4, !alias.scope !199
  %517 = bitcast i8* %510 to <16 x i8>*
  store <16 x i8> %513, <16 x i8>* %517, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %518 = getelementptr i8, i8* %510, i64 16
  %519 = bitcast i8* %518 to <16 x i8>*
  store <16 x i8> %516, <16 x i8>* %519, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %520 = or i64 %486, 96
  %521 = getelementptr i8, i8* %107, i64 %520
  %522 = getelementptr i8, i8* %448, i64 %520
  %523 = bitcast i8* %522 to <16 x i8>*
  %524 = load <16 x i8>, <16 x i8>* %523, align 1, !tbaa !4, !alias.scope !199
  %525 = getelementptr i8, i8* %522, i64 16
  %526 = bitcast i8* %525 to <16 x i8>*
  %527 = load <16 x i8>, <16 x i8>* %526, align 1, !tbaa !4, !alias.scope !199
  %528 = bitcast i8* %521 to <16 x i8>*
  store <16 x i8> %524, <16 x i8>* %528, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %529 = getelementptr i8, i8* %521, i64 16
  %530 = bitcast i8* %529 to <16 x i8>*
  store <16 x i8> %527, <16 x i8>* %530, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %531 = add nuw i64 %486, 128
  %532 = add i64 %487, 4
  %533 = icmp eq i64 %532, %484
  br i1 %533, label %534, label %485, !llvm.loop !204

534:                                              ; preds = %485, %472
  %535 = phi i64 [ 0, %472 ], [ %531, %485 ]
  %536 = icmp eq i64 %481, 0
  br i1 %536, label %553, label %537

537:                                              ; preds = %534, %537
  %538 = phi i64 [ %550, %537 ], [ %535, %534 ]
  %539 = phi i64 [ %551, %537 ], [ 0, %534 ]
  %540 = getelementptr i8, i8* %107, i64 %538
  %541 = getelementptr i8, i8* %448, i64 %538
  %542 = bitcast i8* %541 to <16 x i8>*
  %543 = load <16 x i8>, <16 x i8>* %542, align 1, !tbaa !4, !alias.scope !199
  %544 = getelementptr i8, i8* %541, i64 16
  %545 = bitcast i8* %544 to <16 x i8>*
  %546 = load <16 x i8>, <16 x i8>* %545, align 1, !tbaa !4, !alias.scope !199
  %547 = bitcast i8* %540 to <16 x i8>*
  store <16 x i8> %543, <16 x i8>* %547, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %548 = getelementptr i8, i8* %540, i64 16
  %549 = bitcast i8* %548 to <16 x i8>*
  store <16 x i8> %546, <16 x i8>* %549, align 1, !tbaa !4, !alias.scope !202, !noalias !199
  %550 = add nuw i64 %538, 32
  %551 = add i64 %539, 1
  %552 = icmp eq i64 %551, %481
  br i1 %552, label %553, label %537, !llvm.loop !205

553:                                              ; preds = %537, %534
  %554 = icmp eq i64 %457, %473
  br i1 %554, label %609, label %555

555:                                              ; preds = %459, %451, %553
  %556 = phi i8* [ %107, %459 ], [ %107, %451 ], [ %474, %553 ]
  %557 = phi i32 [ %449, %459 ], [ %449, %451 ], [ %476, %553 ]
  %558 = phi i8* [ %448, %459 ], [ %448, %451 ], [ %477, %553 ]
  %559 = add i32 %557, -1
  %560 = and i32 %557, 7
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %573, label %562

562:                                              ; preds = %555, %562
  %563 = phi i8* [ %569, %562 ], [ %556, %555 ]
  %564 = phi i32 [ %570, %562 ], [ %557, %555 ]
  %565 = phi i8* [ %567, %562 ], [ %558, %555 ]
  %566 = phi i32 [ %571, %562 ], [ 0, %555 ]
  %567 = getelementptr inbounds i8, i8* %565, i64 1
  %568 = load i8, i8* %565, align 1, !tbaa !4
  %569 = getelementptr inbounds i8, i8* %563, i64 1
  store i8 %568, i8* %563, align 1, !tbaa !4
  %570 = add i32 %564, -1
  %571 = add i32 %566, 1
  %572 = icmp eq i32 %571, %560
  br i1 %572, label %573, label %562, !llvm.loop !206

573:                                              ; preds = %562, %555
  %574 = phi i8* [ undef, %555 ], [ %569, %562 ]
  %575 = phi i8* [ %556, %555 ], [ %569, %562 ]
  %576 = phi i32 [ %557, %555 ], [ %570, %562 ]
  %577 = phi i8* [ %558, %555 ], [ %567, %562 ]
  %578 = icmp ult i32 %559, 7
  br i1 %578, label %609, label %579

579:                                              ; preds = %573, %579
  %580 = phi i8* [ %606, %579 ], [ %575, %573 ]
  %581 = phi i32 [ %607, %579 ], [ %576, %573 ]
  %582 = phi i8* [ %604, %579 ], [ %577, %573 ]
  %583 = getelementptr inbounds i8, i8* %582, i64 1
  %584 = load i8, i8* %582, align 1, !tbaa !4
  %585 = getelementptr inbounds i8, i8* %580, i64 1
  store i8 %584, i8* %580, align 1, !tbaa !4
  %586 = getelementptr inbounds i8, i8* %582, i64 2
  %587 = load i8, i8* %583, align 1, !tbaa !4
  %588 = getelementptr inbounds i8, i8* %580, i64 2
  store i8 %587, i8* %585, align 1, !tbaa !4
  %589 = getelementptr inbounds i8, i8* %582, i64 3
  %590 = load i8, i8* %586, align 1, !tbaa !4
  %591 = getelementptr inbounds i8, i8* %580, i64 3
  store i8 %590, i8* %588, align 1, !tbaa !4
  %592 = getelementptr inbounds i8, i8* %582, i64 4
  %593 = load i8, i8* %589, align 1, !tbaa !4
  %594 = getelementptr inbounds i8, i8* %580, i64 4
  store i8 %593, i8* %591, align 1, !tbaa !4
  %595 = getelementptr inbounds i8, i8* %582, i64 5
  %596 = load i8, i8* %592, align 1, !tbaa !4
  %597 = getelementptr inbounds i8, i8* %580, i64 5
  store i8 %596, i8* %594, align 1, !tbaa !4
  %598 = getelementptr inbounds i8, i8* %582, i64 6
  %599 = load i8, i8* %595, align 1, !tbaa !4
  %600 = getelementptr inbounds i8, i8* %580, i64 6
  store i8 %599, i8* %597, align 1, !tbaa !4
  %601 = getelementptr inbounds i8, i8* %582, i64 7
  %602 = load i8, i8* %598, align 1, !tbaa !4
  %603 = getelementptr inbounds i8, i8* %580, i64 7
  store i8 %602, i8* %600, align 1, !tbaa !4
  %604 = getelementptr inbounds i8, i8* %582, i64 8
  %605 = load i8, i8* %601, align 1, !tbaa !4
  %606 = getelementptr inbounds i8, i8* %580, i64 8
  store i8 %605, i8* %603, align 1, !tbaa !4
  %607 = add i32 %581, -8
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %579, !llvm.loop !207

609:                                              ; preds = %573, %579, %553
  %610 = phi i8* [ %474, %553 ], [ %574, %573 ], [ %606, %579 ]
  %611 = sub i32 %189, %449
  %612 = icmp ugt i32 %611, %30
  br i1 %612, label %613, label %918

613:                                              ; preds = %609
  br i1 %94, label %689, label %614

614:                                              ; preds = %613
  %615 = getelementptr i8, i8* %610, i64 %66
  %616 = icmp ult i8* %610, %67
  %617 = icmp ult i8* %32, %615
  %618 = and i1 %616, %617
  br i1 %618, label %689, label %619

619:                                              ; preds = %614
  %620 = getelementptr i8, i8* %610, i64 %95
  br i1 %100, label %670, label %621

621:                                              ; preds = %619, %621
  %622 = phi i64 [ %667, %621 ], [ 0, %619 ]
  %623 = phi i64 [ %668, %621 ], [ 0, %619 ]
  %624 = getelementptr i8, i8* %610, i64 %622
  %625 = getelementptr i8, i8* %32, i64 %622
  %626 = bitcast i8* %625 to <16 x i8>*
  %627 = load <16 x i8>, <16 x i8>* %626, align 1, !tbaa !4, !alias.scope !208
  %628 = getelementptr i8, i8* %625, i64 16
  %629 = bitcast i8* %628 to <16 x i8>*
  %630 = load <16 x i8>, <16 x i8>* %629, align 1, !tbaa !4, !alias.scope !208
  %631 = bitcast i8* %624 to <16 x i8>*
  store <16 x i8> %627, <16 x i8>* %631, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %632 = getelementptr i8, i8* %624, i64 16
  %633 = bitcast i8* %632 to <16 x i8>*
  store <16 x i8> %630, <16 x i8>* %633, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %634 = or i64 %622, 32
  %635 = getelementptr i8, i8* %610, i64 %634
  %636 = getelementptr i8, i8* %32, i64 %634
  %637 = bitcast i8* %636 to <16 x i8>*
  %638 = load <16 x i8>, <16 x i8>* %637, align 1, !tbaa !4, !alias.scope !208
  %639 = getelementptr i8, i8* %636, i64 16
  %640 = bitcast i8* %639 to <16 x i8>*
  %641 = load <16 x i8>, <16 x i8>* %640, align 1, !tbaa !4, !alias.scope !208
  %642 = bitcast i8* %635 to <16 x i8>*
  store <16 x i8> %638, <16 x i8>* %642, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %643 = getelementptr i8, i8* %635, i64 16
  %644 = bitcast i8* %643 to <16 x i8>*
  store <16 x i8> %641, <16 x i8>* %644, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %645 = or i64 %622, 64
  %646 = getelementptr i8, i8* %610, i64 %645
  %647 = getelementptr i8, i8* %32, i64 %645
  %648 = bitcast i8* %647 to <16 x i8>*
  %649 = load <16 x i8>, <16 x i8>* %648, align 1, !tbaa !4, !alias.scope !208
  %650 = getelementptr i8, i8* %647, i64 16
  %651 = bitcast i8* %650 to <16 x i8>*
  %652 = load <16 x i8>, <16 x i8>* %651, align 1, !tbaa !4, !alias.scope !208
  %653 = bitcast i8* %646 to <16 x i8>*
  store <16 x i8> %649, <16 x i8>* %653, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %654 = getelementptr i8, i8* %646, i64 16
  %655 = bitcast i8* %654 to <16 x i8>*
  store <16 x i8> %652, <16 x i8>* %655, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %656 = or i64 %622, 96
  %657 = getelementptr i8, i8* %610, i64 %656
  %658 = getelementptr i8, i8* %32, i64 %656
  %659 = bitcast i8* %658 to <16 x i8>*
  %660 = load <16 x i8>, <16 x i8>* %659, align 1, !tbaa !4, !alias.scope !208
  %661 = getelementptr i8, i8* %658, i64 16
  %662 = bitcast i8* %661 to <16 x i8>*
  %663 = load <16 x i8>, <16 x i8>* %662, align 1, !tbaa !4, !alias.scope !208
  %664 = bitcast i8* %657 to <16 x i8>*
  store <16 x i8> %660, <16 x i8>* %664, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %665 = getelementptr i8, i8* %657, i64 16
  %666 = bitcast i8* %665 to <16 x i8>*
  store <16 x i8> %663, <16 x i8>* %666, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %667 = add nuw i64 %622, 128
  %668 = add i64 %623, 4
  %669 = icmp eq i64 %668, %101
  br i1 %669, label %670, label %621, !llvm.loop !213

670:                                              ; preds = %621, %619
  %671 = phi i64 [ 0, %619 ], [ %667, %621 ]
  br i1 %102, label %688, label %672

672:                                              ; preds = %670, %672
  %673 = phi i64 [ %685, %672 ], [ %671, %670 ]
  %674 = phi i64 [ %686, %672 ], [ 0, %670 ]
  %675 = getelementptr i8, i8* %610, i64 %673
  %676 = getelementptr i8, i8* %32, i64 %673
  %677 = bitcast i8* %676 to <16 x i8>*
  %678 = load <16 x i8>, <16 x i8>* %677, align 1, !tbaa !4, !alias.scope !208
  %679 = getelementptr i8, i8* %676, i64 16
  %680 = bitcast i8* %679 to <16 x i8>*
  %681 = load <16 x i8>, <16 x i8>* %680, align 1, !tbaa !4, !alias.scope !208
  %682 = bitcast i8* %675 to <16 x i8>*
  store <16 x i8> %678, <16 x i8>* %682, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %683 = getelementptr i8, i8* %675, i64 16
  %684 = bitcast i8* %683 to <16 x i8>*
  store <16 x i8> %681, <16 x i8>* %684, align 1, !tbaa !4, !alias.scope !211, !noalias !208
  %685 = add nuw i64 %673, 32
  %686 = add i64 %674, 1
  %687 = icmp eq i64 %686, %99
  br i1 %687, label %688, label %672, !llvm.loop !214

688:                                              ; preds = %672, %670
  br i1 %103, label %743, label %689

689:                                              ; preds = %614, %613, %688
  %690 = phi i8* [ %610, %614 ], [ %610, %613 ], [ %620, %688 ]
  %691 = phi i32 [ %30, %614 ], [ %30, %613 ], [ %97, %688 ]
  %692 = phi i8* [ %32, %614 ], [ %32, %613 ], [ %98, %688 ]
  %693 = add i32 %691, -1
  %694 = and i32 %691, 7
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %707, label %696

696:                                              ; preds = %689, %696
  %697 = phi i8* [ %703, %696 ], [ %690, %689 ]
  %698 = phi i32 [ %704, %696 ], [ %691, %689 ]
  %699 = phi i8* [ %701, %696 ], [ %692, %689 ]
  %700 = phi i32 [ %705, %696 ], [ 0, %689 ]
  %701 = getelementptr inbounds i8, i8* %699, i64 1
  %702 = load i8, i8* %699, align 1, !tbaa !4
  %703 = getelementptr inbounds i8, i8* %697, i64 1
  store i8 %702, i8* %697, align 1, !tbaa !4
  %704 = add i32 %698, -1
  %705 = add i32 %700, 1
  %706 = icmp eq i32 %705, %694
  br i1 %706, label %707, label %696, !llvm.loop !215

707:                                              ; preds = %696, %689
  %708 = phi i8* [ undef, %689 ], [ %703, %696 ]
  %709 = phi i8* [ %690, %689 ], [ %703, %696 ]
  %710 = phi i32 [ %691, %689 ], [ %704, %696 ]
  %711 = phi i8* [ %692, %689 ], [ %701, %696 ]
  %712 = icmp ult i32 %693, 7
  br i1 %712, label %743, label %713

713:                                              ; preds = %707, %713
  %714 = phi i8* [ %740, %713 ], [ %709, %707 ]
  %715 = phi i32 [ %741, %713 ], [ %710, %707 ]
  %716 = phi i8* [ %738, %713 ], [ %711, %707 ]
  %717 = getelementptr inbounds i8, i8* %716, i64 1
  %718 = load i8, i8* %716, align 1, !tbaa !4
  %719 = getelementptr inbounds i8, i8* %714, i64 1
  store i8 %718, i8* %714, align 1, !tbaa !4
  %720 = getelementptr inbounds i8, i8* %716, i64 2
  %721 = load i8, i8* %717, align 1, !tbaa !4
  %722 = getelementptr inbounds i8, i8* %714, i64 2
  store i8 %721, i8* %719, align 1, !tbaa !4
  %723 = getelementptr inbounds i8, i8* %716, i64 3
  %724 = load i8, i8* %720, align 1, !tbaa !4
  %725 = getelementptr inbounds i8, i8* %714, i64 3
  store i8 %724, i8* %722, align 1, !tbaa !4
  %726 = getelementptr inbounds i8, i8* %716, i64 4
  %727 = load i8, i8* %723, align 1, !tbaa !4
  %728 = getelementptr inbounds i8, i8* %714, i64 4
  store i8 %727, i8* %725, align 1, !tbaa !4
  %729 = getelementptr inbounds i8, i8* %716, i64 5
  %730 = load i8, i8* %726, align 1, !tbaa !4
  %731 = getelementptr inbounds i8, i8* %714, i64 5
  store i8 %730, i8* %728, align 1, !tbaa !4
  %732 = getelementptr inbounds i8, i8* %716, i64 6
  %733 = load i8, i8* %729, align 1, !tbaa !4
  %734 = getelementptr inbounds i8, i8* %714, i64 6
  store i8 %733, i8* %731, align 1, !tbaa !4
  %735 = getelementptr inbounds i8, i8* %716, i64 7
  %736 = load i8, i8* %732, align 1, !tbaa !4
  %737 = getelementptr inbounds i8, i8* %714, i64 7
  store i8 %736, i8* %734, align 1, !tbaa !4
  %738 = getelementptr inbounds i8, i8* %716, i64 8
  %739 = load i8, i8* %735, align 1, !tbaa !4
  %740 = getelementptr inbounds i8, i8* %714, i64 8
  store i8 %739, i8* %737, align 1, !tbaa !4
  %741 = add i32 %715, -8
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %713, !llvm.loop !216

743:                                              ; preds = %707, %713, %688
  %744 = phi i8* [ %620, %688 ], [ %708, %707 ], [ %740, %713 ]
  %745 = sub i32 %611, %30
  %746 = zext i32 %259 to i64
  %747 = sub nsw i64 0, %746
  %748 = getelementptr inbounds i8, i8* %744, i64 %747
  br label %918

749:                                              ; preds = %443
  %750 = sub i32 %30, %268
  %751 = zext i32 %750 to i64
  %752 = getelementptr i8, i8* %32, i64 %751
  %753 = icmp ugt i32 %189, %268
  br i1 %753, label %754, label %918

754:                                              ; preds = %749
  %755 = add i32 %89, %258
  %756 = add i32 %755, %230
  %757 = trunc i64 %263 to i32
  %758 = sub i32 %756, %757
  %759 = zext i32 %758 to i64
  %760 = add nuw nsw i64 %759, 1
  %761 = icmp ult i32 %758, 31
  br i1 %761, label %858, label %762

762:                                              ; preds = %754
  %763 = getelementptr i8, i8* %107, i64 1
  %764 = add i32 %84, %258
  %765 = add i32 %764, %230
  %766 = trunc i64 %263 to i32
  %767 = sub i32 %765, %766
  %768 = zext i32 %767 to i64
  %769 = getelementptr i8, i8* %763, i64 %768
  %770 = add nuw nsw i64 %751, %768
  %771 = getelementptr i8, i8* %85, i64 %770
  %772 = icmp ult i8* %107, %771
  %773 = icmp ult i8* %752, %769
  %774 = and i1 %772, %773
  br i1 %774, label %858, label %775

775:                                              ; preds = %762
  %776 = and i64 %760, 8589934560
  %777 = getelementptr i8, i8* %107, i64 %776
  %778 = trunc i64 %776 to i32
  %779 = sub i32 %268, %778
  %780 = getelementptr i8, i8* %752, i64 %776
  %781 = add nsw i64 %776, -32
  %782 = lshr exact i64 %781, 5
  %783 = add nuw nsw i64 %782, 1
  %784 = and i64 %783, 3
  %785 = icmp ult i64 %781, 96
  br i1 %785, label %837, label %786

786:                                              ; preds = %775
  %787 = and i64 %783, 1152921504606846972
  br label %788

788:                                              ; preds = %788, %786
  %789 = phi i64 [ 0, %786 ], [ %834, %788 ]
  %790 = phi i64 [ 0, %786 ], [ %835, %788 ]
  %791 = getelementptr i8, i8* %107, i64 %789
  %792 = getelementptr i8, i8* %752, i64 %789
  %793 = bitcast i8* %792 to <16 x i8>*
  %794 = load <16 x i8>, <16 x i8>* %793, align 1, !tbaa !4, !alias.scope !217
  %795 = getelementptr i8, i8* %792, i64 16
  %796 = bitcast i8* %795 to <16 x i8>*
  %797 = load <16 x i8>, <16 x i8>* %796, align 1, !tbaa !4, !alias.scope !217
  %798 = bitcast i8* %791 to <16 x i8>*
  store <16 x i8> %794, <16 x i8>* %798, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %799 = getelementptr i8, i8* %791, i64 16
  %800 = bitcast i8* %799 to <16 x i8>*
  store <16 x i8> %797, <16 x i8>* %800, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %801 = or i64 %789, 32
  %802 = getelementptr i8, i8* %107, i64 %801
  %803 = getelementptr i8, i8* %752, i64 %801
  %804 = bitcast i8* %803 to <16 x i8>*
  %805 = load <16 x i8>, <16 x i8>* %804, align 1, !tbaa !4, !alias.scope !217
  %806 = getelementptr i8, i8* %803, i64 16
  %807 = bitcast i8* %806 to <16 x i8>*
  %808 = load <16 x i8>, <16 x i8>* %807, align 1, !tbaa !4, !alias.scope !217
  %809 = bitcast i8* %802 to <16 x i8>*
  store <16 x i8> %805, <16 x i8>* %809, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %810 = getelementptr i8, i8* %802, i64 16
  %811 = bitcast i8* %810 to <16 x i8>*
  store <16 x i8> %808, <16 x i8>* %811, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %812 = or i64 %789, 64
  %813 = getelementptr i8, i8* %107, i64 %812
  %814 = getelementptr i8, i8* %752, i64 %812
  %815 = bitcast i8* %814 to <16 x i8>*
  %816 = load <16 x i8>, <16 x i8>* %815, align 1, !tbaa !4, !alias.scope !217
  %817 = getelementptr i8, i8* %814, i64 16
  %818 = bitcast i8* %817 to <16 x i8>*
  %819 = load <16 x i8>, <16 x i8>* %818, align 1, !tbaa !4, !alias.scope !217
  %820 = bitcast i8* %813 to <16 x i8>*
  store <16 x i8> %816, <16 x i8>* %820, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %821 = getelementptr i8, i8* %813, i64 16
  %822 = bitcast i8* %821 to <16 x i8>*
  store <16 x i8> %819, <16 x i8>* %822, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %823 = or i64 %789, 96
  %824 = getelementptr i8, i8* %107, i64 %823
  %825 = getelementptr i8, i8* %752, i64 %823
  %826 = bitcast i8* %825 to <16 x i8>*
  %827 = load <16 x i8>, <16 x i8>* %826, align 1, !tbaa !4, !alias.scope !217
  %828 = getelementptr i8, i8* %825, i64 16
  %829 = bitcast i8* %828 to <16 x i8>*
  %830 = load <16 x i8>, <16 x i8>* %829, align 1, !tbaa !4, !alias.scope !217
  %831 = bitcast i8* %824 to <16 x i8>*
  store <16 x i8> %827, <16 x i8>* %831, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %832 = getelementptr i8, i8* %824, i64 16
  %833 = bitcast i8* %832 to <16 x i8>*
  store <16 x i8> %830, <16 x i8>* %833, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %834 = add nuw i64 %789, 128
  %835 = add i64 %790, 4
  %836 = icmp eq i64 %835, %787
  br i1 %836, label %837, label %788, !llvm.loop !222

837:                                              ; preds = %788, %775
  %838 = phi i64 [ 0, %775 ], [ %834, %788 ]
  %839 = icmp eq i64 %784, 0
  br i1 %839, label %856, label %840

840:                                              ; preds = %837, %840
  %841 = phi i64 [ %853, %840 ], [ %838, %837 ]
  %842 = phi i64 [ %854, %840 ], [ 0, %837 ]
  %843 = getelementptr i8, i8* %107, i64 %841
  %844 = getelementptr i8, i8* %752, i64 %841
  %845 = bitcast i8* %844 to <16 x i8>*
  %846 = load <16 x i8>, <16 x i8>* %845, align 1, !tbaa !4, !alias.scope !217
  %847 = getelementptr i8, i8* %844, i64 16
  %848 = bitcast i8* %847 to <16 x i8>*
  %849 = load <16 x i8>, <16 x i8>* %848, align 1, !tbaa !4, !alias.scope !217
  %850 = bitcast i8* %843 to <16 x i8>*
  store <16 x i8> %846, <16 x i8>* %850, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %851 = getelementptr i8, i8* %843, i64 16
  %852 = bitcast i8* %851 to <16 x i8>*
  store <16 x i8> %849, <16 x i8>* %852, align 1, !tbaa !4, !alias.scope !220, !noalias !217
  %853 = add nuw i64 %841, 32
  %854 = add i64 %842, 1
  %855 = icmp eq i64 %854, %784
  br i1 %855, label %856, label %840, !llvm.loop !223

856:                                              ; preds = %840, %837
  %857 = icmp eq i64 %760, %776
  br i1 %857, label %912, label %858

858:                                              ; preds = %762, %754, %856
  %859 = phi i8* [ %107, %762 ], [ %107, %754 ], [ %777, %856 ]
  %860 = phi i32 [ %268, %762 ], [ %268, %754 ], [ %779, %856 ]
  %861 = phi i8* [ %752, %762 ], [ %752, %754 ], [ %780, %856 ]
  %862 = add i32 %860, -1
  %863 = and i32 %860, 7
  %864 = icmp eq i32 %863, 0
  br i1 %864, label %876, label %865

865:                                              ; preds = %858, %865
  %866 = phi i8* [ %872, %865 ], [ %859, %858 ]
  %867 = phi i32 [ %873, %865 ], [ %860, %858 ]
  %868 = phi i8* [ %870, %865 ], [ %861, %858 ]
  %869 = phi i32 [ %874, %865 ], [ 0, %858 ]
  %870 = getelementptr inbounds i8, i8* %868, i64 1
  %871 = load i8, i8* %868, align 1, !tbaa !4
  %872 = getelementptr inbounds i8, i8* %866, i64 1
  store i8 %871, i8* %866, align 1, !tbaa !4
  %873 = add i32 %867, -1
  %874 = add i32 %869, 1
  %875 = icmp eq i32 %874, %863
  br i1 %875, label %876, label %865, !llvm.loop !224

876:                                              ; preds = %865, %858
  %877 = phi i8* [ undef, %858 ], [ %872, %865 ]
  %878 = phi i8* [ %859, %858 ], [ %872, %865 ]
  %879 = phi i32 [ %860, %858 ], [ %873, %865 ]
  %880 = phi i8* [ %861, %858 ], [ %870, %865 ]
  %881 = icmp ult i32 %862, 7
  br i1 %881, label %912, label %882

882:                                              ; preds = %876, %882
  %883 = phi i8* [ %909, %882 ], [ %878, %876 ]
  %884 = phi i32 [ %910, %882 ], [ %879, %876 ]
  %885 = phi i8* [ %907, %882 ], [ %880, %876 ]
  %886 = getelementptr inbounds i8, i8* %885, i64 1
  %887 = load i8, i8* %885, align 1, !tbaa !4
  %888 = getelementptr inbounds i8, i8* %883, i64 1
  store i8 %887, i8* %883, align 1, !tbaa !4
  %889 = getelementptr inbounds i8, i8* %885, i64 2
  %890 = load i8, i8* %886, align 1, !tbaa !4
  %891 = getelementptr inbounds i8, i8* %883, i64 2
  store i8 %890, i8* %888, align 1, !tbaa !4
  %892 = getelementptr inbounds i8, i8* %885, i64 3
  %893 = load i8, i8* %889, align 1, !tbaa !4
  %894 = getelementptr inbounds i8, i8* %883, i64 3
  store i8 %893, i8* %891, align 1, !tbaa !4
  %895 = getelementptr inbounds i8, i8* %885, i64 4
  %896 = load i8, i8* %892, align 1, !tbaa !4
  %897 = getelementptr inbounds i8, i8* %883, i64 4
  store i8 %896, i8* %894, align 1, !tbaa !4
  %898 = getelementptr inbounds i8, i8* %885, i64 5
  %899 = load i8, i8* %895, align 1, !tbaa !4
  %900 = getelementptr inbounds i8, i8* %883, i64 5
  store i8 %899, i8* %897, align 1, !tbaa !4
  %901 = getelementptr inbounds i8, i8* %885, i64 6
  %902 = load i8, i8* %898, align 1, !tbaa !4
  %903 = getelementptr inbounds i8, i8* %883, i64 6
  store i8 %902, i8* %900, align 1, !tbaa !4
  %904 = getelementptr inbounds i8, i8* %885, i64 7
  %905 = load i8, i8* %901, align 1, !tbaa !4
  %906 = getelementptr inbounds i8, i8* %883, i64 7
  store i8 %905, i8* %903, align 1, !tbaa !4
  %907 = getelementptr inbounds i8, i8* %885, i64 8
  %908 = load i8, i8* %904, align 1, !tbaa !4
  %909 = getelementptr inbounds i8, i8* %883, i64 8
  store i8 %908, i8* %906, align 1, !tbaa !4
  %910 = add i32 %884, -8
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %882, !llvm.loop !225

912:                                              ; preds = %876, %882, %856
  %913 = phi i8* [ %777, %856 ], [ %877, %876 ], [ %909, %882 ]
  %914 = sub i32 %189, %268
  %915 = zext i32 %259 to i64
  %916 = sub nsw i64 0, %915
  %917 = getelementptr inbounds i8, i8* %913, i64 %916
  br label %918

918:                                              ; preds = %609, %743, %445, %912, %749, %274, %437
  %919 = phi i8* [ %438, %437 ], [ %107, %274 ], [ %744, %743 ], [ %610, %609 ], [ %107, %445 ], [ %913, %912 ], [ %107, %749 ]
  %920 = phi i32 [ %439, %437 ], [ %189, %274 ], [ %745, %743 ], [ %611, %609 ], [ %189, %445 ], [ %914, %912 ], [ %189, %749 ]
  %921 = phi i8* [ %442, %437 ], [ %277, %274 ], [ %748, %743 ], [ %32, %609 ], [ %448, %445 ], [ %917, %912 ], [ %752, %749 ]
  %922 = icmp ugt i32 %920, 2
  br i1 %922, label %923, label %971

923:                                              ; preds = %918
  %924 = add i32 %920, -3
  %925 = udiv i32 %924, 3
  %926 = and i32 %925, 1
  %927 = icmp eq i32 %926, 0
  br i1 %927, label %928, label %939

928:                                              ; preds = %923
  %929 = getelementptr inbounds i8, i8* %921, i64 1
  %930 = load i8, i8* %921, align 1, !tbaa !4
  %931 = getelementptr inbounds i8, i8* %919, i64 1
  store i8 %930, i8* %919, align 1, !tbaa !4
  %932 = getelementptr inbounds i8, i8* %921, i64 2
  %933 = load i8, i8* %929, align 1, !tbaa !4
  %934 = getelementptr inbounds i8, i8* %919, i64 2
  store i8 %933, i8* %931, align 1, !tbaa !4
  %935 = getelementptr inbounds i8, i8* %921, i64 3
  %936 = load i8, i8* %932, align 1, !tbaa !4
  %937 = getelementptr inbounds i8, i8* %919, i64 3
  store i8 %936, i8* %934, align 1, !tbaa !4
  %938 = add i32 %920, -3
  br label %939

939:                                              ; preds = %928, %923
  %940 = phi i8* [ %921, %923 ], [ %935, %928 ]
  %941 = phi i32 [ %920, %923 ], [ %938, %928 ]
  %942 = phi i8* [ %919, %923 ], [ %937, %928 ]
  %943 = phi i8* [ undef, %923 ], [ %935, %928 ]
  %944 = phi i8* [ undef, %923 ], [ %937, %928 ]
  %945 = phi i32 [ undef, %923 ], [ %938, %928 ]
  %946 = icmp ult i32 %924, 3
  br i1 %946, label %971, label %947

947:                                              ; preds = %939, %947
  %948 = phi i8* [ %966, %947 ], [ %940, %939 ]
  %949 = phi i32 [ %969, %947 ], [ %941, %939 ]
  %950 = phi i8* [ %968, %947 ], [ %942, %939 ]
  %951 = getelementptr inbounds i8, i8* %948, i64 1
  %952 = load i8, i8* %948, align 1, !tbaa !4
  %953 = getelementptr inbounds i8, i8* %950, i64 1
  store i8 %952, i8* %950, align 1, !tbaa !4
  %954 = getelementptr inbounds i8, i8* %948, i64 2
  %955 = load i8, i8* %951, align 1, !tbaa !4
  %956 = getelementptr inbounds i8, i8* %950, i64 2
  store i8 %955, i8* %953, align 1, !tbaa !4
  %957 = getelementptr inbounds i8, i8* %948, i64 3
  %958 = load i8, i8* %954, align 1, !tbaa !4
  %959 = getelementptr inbounds i8, i8* %950, i64 3
  store i8 %958, i8* %956, align 1, !tbaa !4
  %960 = getelementptr inbounds i8, i8* %948, i64 4
  %961 = load i8, i8* %957, align 1, !tbaa !4
  %962 = getelementptr inbounds i8, i8* %950, i64 4
  store i8 %961, i8* %959, align 1, !tbaa !4
  %963 = getelementptr inbounds i8, i8* %948, i64 5
  %964 = load i8, i8* %960, align 1, !tbaa !4
  %965 = getelementptr inbounds i8, i8* %950, i64 5
  store i8 %964, i8* %962, align 1, !tbaa !4
  %966 = getelementptr inbounds i8, i8* %948, i64 6
  %967 = load i8, i8* %963, align 1, !tbaa !4
  %968 = getelementptr inbounds i8, i8* %950, i64 6
  store i8 %967, i8* %965, align 1, !tbaa !4
  %969 = add i32 %949, -6
  %970 = icmp ugt i32 %969, 2
  br i1 %970, label %947, label %971, !llvm.loop !226

971:                                              ; preds = %939, %947, %918
  %972 = phi i8* [ %919, %918 ], [ %944, %939 ], [ %968, %947 ]
  %973 = phi i32 [ %920, %918 ], [ %945, %939 ], [ %969, %947 ]
  %974 = phi i8* [ %921, %918 ], [ %943, %939 ], [ %966, %947 ]
  %975 = icmp eq i32 %973, 0
  br i1 %975, label %1066, label %976

976:                                              ; preds = %971
  %977 = load i8, i8* %974, align 1, !tbaa !4
  %978 = getelementptr inbounds i8, i8* %972, i64 1
  store i8 %977, i8* %972, align 1, !tbaa !4
  %979 = icmp eq i32 %973, 1
  br i1 %979, label %1066, label %980

980:                                              ; preds = %976
  %981 = getelementptr inbounds i8, i8* %974, i64 1
  %982 = load i8, i8* %981, align 1, !tbaa !4
  %983 = getelementptr inbounds i8, i8* %972, i64 2
  store i8 %982, i8* %978, align 1, !tbaa !4
  br label %1066

984:                                              ; preds = %251
  %985 = zext i32 %259 to i64
  %986 = sub nsw i64 0, %985
  %987 = getelementptr inbounds i8, i8* %107, i64 %986
  br label %988

988:                                              ; preds = %988, %984
  %989 = phi i8* [ %107, %984 ], [ %1000, %988 ]
  %990 = phi i32 [ %189, %984 ], [ %1001, %988 ]
  %991 = phi i8* [ %987, %984 ], [ %998, %988 ]
  %992 = getelementptr inbounds i8, i8* %991, i64 1
  %993 = load i8, i8* %991, align 1, !tbaa !4
  %994 = getelementptr inbounds i8, i8* %989, i64 1
  store i8 %993, i8* %989, align 1, !tbaa !4
  %995 = getelementptr inbounds i8, i8* %991, i64 2
  %996 = load i8, i8* %992, align 1, !tbaa !4
  %997 = getelementptr inbounds i8, i8* %989, i64 2
  store i8 %996, i8* %994, align 1, !tbaa !4
  %998 = getelementptr inbounds i8, i8* %991, i64 3
  %999 = load i8, i8* %995, align 1, !tbaa !4
  %1000 = getelementptr inbounds i8, i8* %989, i64 3
  store i8 %999, i8* %997, align 1, !tbaa !4
  %1001 = add i32 %990, -3
  %1002 = icmp ugt i32 %1001, 2
  br i1 %1002, label %988, label %1003, !llvm.loop !227

1003:                                             ; preds = %988
  %1004 = icmp eq i32 %1001, 0
  br i1 %1004, label %1066, label %1005

1005:                                             ; preds = %1003
  %1006 = load i8, i8* %998, align 1, !tbaa !4
  %1007 = getelementptr inbounds i8, i8* %989, i64 4
  store i8 %1006, i8* %1000, align 1, !tbaa !4
  %1008 = icmp eq i32 %1001, 1
  br i1 %1008, label %1066, label %1009

1009:                                             ; preds = %1005
  %1010 = getelementptr inbounds i8, i8* %991, i64 4
  %1011 = load i8, i8* %1010, align 1, !tbaa !4
  %1012 = getelementptr inbounds i8, i8* %989, i64 5
  store i8 %1011, i8* %1007, align 1, !tbaa !4
  br label %1066

1013:                                             ; preds = %206, %1020
  %1014 = phi i32 [ %1038, %1020 ], [ %220, %206 ]
  %1015 = phi i32 [ %1035, %1020 ], [ %217, %206 ]
  %1016 = phi i64 [ %1034, %1020 ], [ %216, %206 ]
  %1017 = phi %struct.code* [ %1029, %1020 ], [ %211, %206 ]
  %1018 = and i32 %1014, 64
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %1074

1020:                                             ; preds = %1013
  %1021 = getelementptr inbounds %struct.code, %struct.code* %1017, i64 0, i32 2
  %1022 = load i16, i16* %1021, align 2, !tbaa !189
  %1023 = zext i16 %1022 to i64
  %1024 = getelementptr inbounds %struct.code, %struct.code* %40, i64 %1023
  %1025 = shl nsw i32 -1, %1014
  %1026 = xor i32 %1025, -1
  %1027 = zext i32 %1026 to i64
  %1028 = and i64 %1016, %1027
  %1029 = getelementptr inbounds %struct.code, %struct.code* %1024, i64 %1028
  %1030 = getelementptr inbounds %struct.code, %struct.code* %1029, i64 0, i32 1
  %1031 = load i8, i8* %1030, align 1, !tbaa !186
  %1032 = zext i8 %1031 to i32
  %1033 = zext i8 %1031 to i64
  %1034 = lshr i64 %1016, %1033
  %1035 = sub i32 %1015, %1032
  %1036 = getelementptr inbounds %struct.code, %struct.code* %1029, i64 0, i32 0
  %1037 = load i8, i8* %1036, align 2, !tbaa !188
  %1038 = zext i8 %1037 to i32
  %1039 = and i32 %1038, 16
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1013, label %223

1041:                                             ; preds = %148
  %1042 = and i32 %153, 64
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1044, label %1063

1044:                                             ; preds = %1041
  %1045 = getelementptr inbounds %struct.code, %struct.code* %152, i64 0, i32 2
  %1046 = load i16, i16* %1045, align 2, !tbaa !189
  %1047 = zext i16 %1046 to i64
  %1048 = getelementptr inbounds %struct.code, %struct.code* %38, i64 %1047
  %1049 = shl nsw i32 -1, %153
  %1050 = xor i32 %1049, -1
  %1051 = zext i32 %1050 to i64
  %1052 = and i64 %151, %1051
  %1053 = getelementptr inbounds %struct.code, %struct.code* %1048, i64 %1052
  %1054 = getelementptr inbounds %struct.code, %struct.code* %1053, i64 0, i32 1
  %1055 = load i8, i8* %1054, align 1, !tbaa !186
  %1056 = zext i8 %1055 to i32
  %1057 = zext i8 %1055 to i64
  %1058 = lshr i64 %151, %1057
  %1059 = sub i32 %150, %1056
  %1060 = getelementptr inbounds %struct.code, %struct.code* %1053, i64 0, i32 0
  %1061 = load i8, i8* %1060, align 2, !tbaa !188
  %1062 = icmp eq i8 %1061, 0
  br i1 %1062, label %140, label %148

1063:                                             ; preds = %1041
  %1064 = and i8 %149, 32
  %1065 = icmp eq i8 %1064, 0
  br i1 %1065, label %1074, label %1080

1066:                                             ; preds = %140, %1003, %1009, %1005, %971, %980, %976
  %1067 = phi i32 [ %143, %140 ], [ %262, %980 ], [ %262, %976 ], [ %262, %971 ], [ %262, %1009 ], [ %262, %1005 ], [ %262, %1003 ]
  %1068 = phi i64 [ %142, %140 ], [ %261, %980 ], [ %261, %976 ], [ %261, %971 ], [ %261, %1009 ], [ %261, %1005 ], [ %261, %1003 ]
  %1069 = phi i8* [ %147, %140 ], [ %983, %980 ], [ %978, %976 ], [ %972, %971 ], [ %1012, %1009 ], [ %1007, %1005 ], [ %1000, %1003 ]
  %1070 = phi i8* [ %128, %140 ], [ %254, %980 ], [ %254, %976 ], [ %254, %971 ], [ %254, %1009 ], [ %254, %1005 ], [ %254, %1003 ]
  %1071 = icmp ult i8* %1070, %12
  %1072 = icmp ult i8* %1069, %24
  %1073 = select i1 %1071, i1 %1072, i1 false
  br i1 %1073, label %104, label %1086, !llvm.loop !228

1074:                                             ; preds = %270, %1013, %1063
  %1075 = phi i8* [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.3, i64 0, i64 0), %1063 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.4, i64 0, i64 0), %1013 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), %270 ]
  %1076 = phi i32 [ %150, %1063 ], [ %1015, %1013 ], [ %262, %270 ]
  %1077 = phi i64 [ %151, %1063 ], [ %1016, %1013 ], [ %261, %270 ]
  %1078 = phi i8* [ %128, %1063 ], [ %209, %1013 ], [ %254, %270 ]
  %1079 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* %1075, i8** %1079, align 8, !tbaa !25
  br label %1080

1080:                                             ; preds = %1074, %1063
  %1081 = phi i32 [ 16191, %1063 ], [ 16209, %1074 ]
  %1082 = phi i32 [ %150, %1063 ], [ %1076, %1074 ]
  %1083 = phi i64 [ %151, %1063 ], [ %1077, %1074 ]
  %1084 = phi i8* [ %128, %1063 ], [ %1078, %1074 ]
  %1085 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %5, i64 0, i32 1
  store i32 %1081, i32* %1085, align 8, !tbaa !142
  br label %1086

1086:                                             ; preds = %1066, %1080
  %1087 = phi i32 [ %1082, %1080 ], [ %1067, %1066 ]
  %1088 = phi i64 [ %1083, %1080 ], [ %1068, %1066 ]
  %1089 = phi i8* [ %107, %1080 ], [ %1069, %1066 ]
  %1090 = phi i8* [ %1084, %1080 ], [ %1070, %1066 ]
  %1091 = lshr i32 %1087, 3
  %1092 = zext i32 %1091 to i64
  %1093 = sub nsw i64 0, %1092
  %1094 = getelementptr inbounds i8, i8* %1090, i64 %1093
  %1095 = and i32 %1087, 7
  store i8* %1094, i8** %6, align 8, !tbaa !89
  store i8* %1089, i8** %13, align 8, !tbaa !87
  %1096 = ptrtoint i8* %12 to i64
  %1097 = ptrtoint i8* %1094 to i64
  %1098 = sub i64 %1096, %1097
  %1099 = trunc i64 %1098 to i32
  %1100 = add i32 %1099, 5
  store i32 %1100, i32* %8, align 8, !tbaa !84
  %1101 = ptrtoint i8* %24 to i64
  %1102 = ptrtoint i8* %1089 to i64
  %1103 = sub i64 %1101, %1102
  %1104 = shl nsw i32 -1, %1095
  %1105 = xor i32 %1104, -1
  %1106 = zext i32 %1105 to i64
  %1107 = and i64 %1088, %1106
  %1108 = trunc i64 %1103 to i32
  %1109 = add i32 %1108, 257
  store i32 %1109, i32* %16, align 8, !tbaa !86
  store i64 %1107, i64* %33, align 8, !tbaa !168
  store i32 %1095, i32* %35, align 8, !tbaa !169
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @inflateResetKeep(%struct.z_stream_s* noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %51, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %51, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %51, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = bitcast %struct.internal_state** %12 to %struct.inflate_state**
  %14 = load %struct.inflate_state*, %struct.inflate_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.inflate_state* %14, null
  br i1 %15, label %51, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !229
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %51

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !142
  %23 = add i32 %22, -16180
  %24 = icmp ult i32 %23, 32
  br i1 %24, label %25, label %51

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 8
  store i64 0, i64* %26, align 8, !tbaa !230
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  store i64 0, i64* %28, align 8, !tbaa !78
  %29 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 3
  %30 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %30, i8 0, i64 16, i1 false)
  %31 = load i32, i32* %29, align 8, !tbaa !231
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %25
  %34 = and i32 %31, 1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %35, i64* %36, align 8, !tbaa !82
  br label %37

37:                                               ; preds = %33, %25
  store i32 16180, i32* %21, align 8, !tbaa !142
  %38 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 2
  store i32 0, i32* %38, align 4, !tbaa !143
  %39 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 4
  store i32 0, i32* %39, align 4, !tbaa !232
  %40 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 5
  store i32 -1, i32* %40, align 8, !tbaa !233
  %41 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 6
  store i32 32768, i32* %41, align 4, !tbaa !134
  %42 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 9
  store %struct.gz_header_s* null, %struct.gz_header_s** %42, align 8, !tbaa !234
  %43 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 15
  store i64 0, i64* %43, align 8, !tbaa !168
  %44 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 16
  store i32 0, i32* %44, align 8, !tbaa !169
  %45 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 31, i64 0
  %46 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 28
  store %struct.code* %45, %struct.code** %46, align 8, !tbaa !159
  %47 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 21
  store %struct.code* %45, %struct.code** %47, align 8, !tbaa !146
  %48 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 20
  store %struct.code* %45, %struct.code** %48, align 8, !tbaa !144
  %49 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 32
  store i32 1, i32* %49, align 8, !tbaa !141
  %50 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 33
  store i32 -1, i32* %50, align 4, !tbaa !235
  br label %51

51:                                               ; preds = %11, %16, %1, %3, %7, %20, %37
  %52 = phi i32 [ 0, %37 ], [ -2, %20 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %16 ], [ -2, %11 ]
  ret i32 %52
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define i32 @inflateReset(%struct.z_stream_s* noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %54, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %54, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %54, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = bitcast %struct.internal_state** %12 to %struct.inflate_state**
  %14 = load %struct.inflate_state*, %struct.inflate_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.inflate_state* %14, null
  br i1 %15, label %54, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !229
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %54

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !142
  %23 = add i32 %22, -16180
  %24 = icmp ult i32 %23, 32
  br i1 %24, label %25, label %54

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 11
  store i32 0, i32* %26, align 4, !tbaa !137
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 12
  store i32 0, i32* %27, align 8, !tbaa !140
  %28 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 13
  store i32 0, i32* %28, align 4, !tbaa !139
  %29 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 8
  store i64 0, i64* %29, align 8, !tbaa !230
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %31 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  store i64 0, i64* %31, align 8, !tbaa !78
  %32 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 3
  %33 = bitcast i64* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false) #25
  %34 = load i32, i32* %32, align 8, !tbaa !231
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %25
  %37 = and i32 %34, 1
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %38, i64* %39, align 8, !tbaa !82
  br label %40

40:                                               ; preds = %36, %25
  store i32 16180, i32* %21, align 8, !tbaa !142
  %41 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 2
  store i32 0, i32* %41, align 4, !tbaa !143
  %42 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 4
  store i32 0, i32* %42, align 4, !tbaa !232
  %43 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 5
  store i32 -1, i32* %43, align 8, !tbaa !233
  %44 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 6
  store i32 32768, i32* %44, align 4, !tbaa !134
  %45 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 9
  store %struct.gz_header_s* null, %struct.gz_header_s** %45, align 8, !tbaa !234
  %46 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 15
  store i64 0, i64* %46, align 8, !tbaa !168
  %47 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 16
  store i32 0, i32* %47, align 8, !tbaa !169
  %48 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 31, i64 0
  %49 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 28
  store %struct.code* %48, %struct.code** %49, align 8, !tbaa !159
  %50 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 21
  store %struct.code* %48, %struct.code** %50, align 8, !tbaa !146
  %51 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 20
  store %struct.code* %48, %struct.code** %51, align 8, !tbaa !144
  %52 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 32
  store i32 1, i32* %52, align 8, !tbaa !141
  %53 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 33
  store i32 -1, i32* %53, align 4, !tbaa !235
  br label %54

54:                                               ; preds = %11, %16, %1, %3, %7, %40, %20
  %55 = phi i32 [ -2, %20 ], [ 0, %40 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %16 ], [ -2, %11 ]
  ret i32 %55
}

; Function Attrs: nounwind uwtable
define i32 @inflateReset2(%struct.z_stream_s* noundef %0, i32 noundef %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %103, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %103, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %103, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = bitcast %struct.internal_state** %13 to %struct.inflate_state**
  %15 = load %struct.inflate_state*, %struct.inflate_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.inflate_state* %15, null
  br i1 %16, label %103, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !229
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %103

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !142
  %24 = add i32 %23, -16180
  %25 = icmp ult i32 %24, 32
  br i1 %25, label %26, label %103

26:                                               ; preds = %21
  %27 = icmp slt i32 %1, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = icmp ult i32 %1, -15
  br i1 %29, label %103, label %30

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %1
  br label %38

32:                                               ; preds = %26
  %33 = lshr i32 %1, 4
  %34 = add nuw nsw i32 %33, 5
  %35 = icmp ult i32 %1, 48
  %36 = and i32 %1, 15
  %37 = select i1 %35, i32 %36, i32 %1
  br label %38

38:                                               ; preds = %32, %30
  %39 = phi i32 [ %31, %30 ], [ %37, %32 ]
  %40 = phi i32 [ 0, %30 ], [ %34, %32 ]
  switch i32 %39, label %103 [
    i32 15, label %41
    i32 14, label %41
    i32 13, label %41
    i32 12, label %41
    i32 11, label %41
    i32 10, label %41
    i32 9, label %41
    i32 8, label %41
    i32 0, label %41
  ]

41:                                               ; preds = %38, %38, %38, %38, %38, %38, %38, %38, %38
  %42 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 14
  %43 = load i8*, i8** %42, align 8, !tbaa !138
  %44 = icmp eq i8* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 10
  %47 = load i32, i32* %46, align 8, !tbaa !136
  %48 = icmp eq i32 %47, %39
  br i1 %48, label %49, label %52

49:                                               ; preds = %41, %45
  %50 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 3
  store i32 %40, i32* %50, align 8, !tbaa !231
  %51 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 10
  store i32 %39, i32* %51, align 8, !tbaa !136
  br label %59

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %54 = load i8*, i8** %53, align 8, !tbaa !29
  tail call void %10(i8* noundef %54, i8* noundef nonnull %43) #25
  store i8* null, i8** %42, align 8, !tbaa !138
  %55 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %56 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 3
  store i32 %40, i32* %56, align 8, !tbaa !231
  %57 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 10
  store i32 %39, i32* %57, align 8, !tbaa !136
  %58 = icmp eq i8* (i8*, i32, i32)* %55, null
  br i1 %58, label %103, label %59

59:                                               ; preds = %49, %52
  %60 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %61 = icmp eq void (i8*, i8*)* %60, null
  br i1 %61, label %103, label %62

62:                                               ; preds = %59
  %63 = load %struct.inflate_state*, %struct.inflate_state** %14, align 8, !tbaa !31
  %64 = icmp eq %struct.inflate_state* %63, null
  br i1 %64, label %103, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 0
  %67 = load %struct.z_stream_s*, %struct.z_stream_s** %66, align 8, !tbaa !229
  %68 = icmp eq %struct.z_stream_s* %67, %0
  br i1 %68, label %69, label %103

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 1
  %71 = load i32, i32* %70, align 8, !tbaa !142
  %72 = add i32 %71, -16180
  %73 = icmp ult i32 %72, 32
  br i1 %73, label %74, label %103

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 11
  store i32 0, i32* %75, align 4, !tbaa !137
  %76 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 12
  store i32 0, i32* %76, align 8, !tbaa !140
  %77 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 13
  store i32 0, i32* %77, align 4, !tbaa !139
  %78 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 8
  store i64 0, i64* %78, align 8, !tbaa !230
  %79 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %80 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  store i64 0, i64* %80, align 8, !tbaa !78
  %81 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 3
  %82 = bitcast i64* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %82, i8 0, i64 16, i1 false) #25
  %83 = load i32, i32* %81, align 8, !tbaa !231
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %74
  %86 = and i32 %83, 1
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %87, i64* %88, align 8, !tbaa !82
  br label %89

89:                                               ; preds = %85, %74
  store i32 16180, i32* %70, align 8, !tbaa !142
  %90 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 2
  store i32 0, i32* %90, align 4, !tbaa !143
  %91 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 4
  store i32 0, i32* %91, align 4, !tbaa !232
  %92 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 5
  store i32 -1, i32* %92, align 8, !tbaa !233
  %93 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 6
  store i32 32768, i32* %93, align 4, !tbaa !134
  %94 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 9
  store %struct.gz_header_s* null, %struct.gz_header_s** %94, align 8, !tbaa !234
  %95 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 15
  store i64 0, i64* %95, align 8, !tbaa !168
  %96 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 16
  store i32 0, i32* %96, align 8, !tbaa !169
  %97 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 31, i64 0
  %98 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 28
  store %struct.code* %97, %struct.code** %98, align 8, !tbaa !159
  %99 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 21
  store %struct.code* %97, %struct.code** %99, align 8, !tbaa !146
  %100 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 20
  store %struct.code* %97, %struct.code** %100, align 8, !tbaa !144
  %101 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 32
  store i32 1, i32* %101, align 8, !tbaa !141
  %102 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %63, i64 0, i32 33
  store i32 -1, i32* %102, align 4, !tbaa !235
  br label %103

103:                                              ; preds = %12, %17, %2, %4, %8, %89, %69, %65, %62, %59, %52, %38, %28, %21
  %104 = phi i32 [ -2, %21 ], [ -2, %28 ], [ -2, %38 ], [ -2, %69 ], [ 0, %89 ], [ -2, %59 ], [ -2, %52 ], [ -2, %65 ], [ -2, %62 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %17 ], [ -2, %12 ]
  ret i32 %104
}

; Function Attrs: nounwind uwtable
define i32 @inflateInit2_(%struct.z_stream_s* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3) local_unnamed_addr #3 {
  %5 = icmp eq i8* %2, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %4
  %7 = load i8, i8* %2, align 1, !tbaa !4
  %8 = icmp ne i8 %7, 49
  %9 = icmp ne i32 %3, 112
  %10 = or i1 %9, %8
  br i1 %10, label %44, label %11

11:                                               ; preds = %6
  %12 = icmp eq %struct.z_stream_s* %0, null
  br i1 %12, label %44, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* null, i8** %14, align 8, !tbaa !25
  %15 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 8, !tbaa !28
  %17 = icmp eq i8* (i8*, i32, i32)* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %15, align 8, !tbaa !28
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  store i8* null, i8** %19, align 8, !tbaa !29
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* (i8*, i32, i32)* [ @zcalloc, %18 ], [ %16, %13 ]
  %22 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %22, align 8, !tbaa !30
  %24 = icmp eq void (i8*, i8*)* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %22, align 8, !tbaa !30
  br label %26

26:                                               ; preds = %25, %20
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %28 = load i8*, i8** %27, align 8, !tbaa !29
  %29 = tail call i8* %21(i8* noundef %28, i32 noundef 1, i32 noundef 7160) #25
  %30 = icmp eq i8* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %33 = bitcast %struct.internal_state** %32 to i8**
  store i8* %29, i8** %33, align 8, !tbaa !31
  %34 = bitcast i8* %29 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %34, align 8, !tbaa !229
  %35 = getelementptr inbounds i8, i8* %29, i64 72
  %36 = bitcast i8* %35 to i8**
  store i8* null, i8** %36, align 8, !tbaa !138
  %37 = getelementptr inbounds i8, i8* %29, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 16180, i32* %38, align 8, !tbaa !142
  %39 = tail call i32 @inflateReset2(%struct.z_stream_s* noundef nonnull %0, i32 noundef %1)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %22, align 8, !tbaa !30
  %43 = load i8*, i8** %27, align 8, !tbaa !29
  tail call void %42(i8* noundef %43, i8* noundef nonnull %29) #25
  store %struct.internal_state* null, %struct.internal_state** %32, align 8, !tbaa !31
  br label %44

44:                                               ; preds = %31, %41, %26, %11, %4, %6
  %45 = phi i32 [ -6, %6 ], [ -6, %4 ], [ -2, %11 ], [ -4, %26 ], [ %39, %41 ], [ 0, %31 ]
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define i32 @inflateInit_(%struct.z_stream_s* noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %43, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1, !tbaa !4
  %7 = icmp ne i8 %6, 49
  %8 = icmp ne i32 %2, 112
  %9 = or i1 %8, %7
  br i1 %9, label %43, label %10

10:                                               ; preds = %5
  %11 = icmp eq %struct.z_stream_s* %0, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* null, i8** %13, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %15 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %14, align 8, !tbaa !28
  %16 = icmp eq i8* (i8*, i32, i32)* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  store i8* (i8*, i32, i32)* @zcalloc, i8* (i8*, i32, i32)** %14, align 8, !tbaa !28
  %18 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  store i8* null, i8** %18, align 8, !tbaa !29
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* (i8*, i32, i32)* [ @zcalloc, %17 ], [ %15, %12 ]
  %21 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %22 = load void (i8*, i8*)*, void (i8*, i8*)** %21, align 8, !tbaa !30
  %23 = icmp eq void (i8*, i8*)* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  store void (i8*, i8*)* @zcfree, void (i8*, i8*)** %21, align 8, !tbaa !30
  br label %25

25:                                               ; preds = %24, %19
  %26 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %27 = load i8*, i8** %26, align 8, !tbaa !29
  %28 = tail call i8* %20(i8* noundef %27, i32 noundef 1, i32 noundef 7160) #25
  %29 = icmp eq i8* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %32 = bitcast %struct.internal_state** %31 to i8**
  store i8* %28, i8** %32, align 8, !tbaa !31
  %33 = bitcast i8* %28 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %33, align 8, !tbaa !229
  %34 = getelementptr inbounds i8, i8* %28, i64 72
  %35 = bitcast i8* %34 to i8**
  store i8* null, i8** %35, align 8, !tbaa !138
  %36 = getelementptr inbounds i8, i8* %28, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 16180, i32* %37, align 8, !tbaa !142
  %38 = tail call i32 @inflateReset2(%struct.z_stream_s* noundef nonnull %0, i32 noundef 15) #25
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %30
  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %21, align 8, !tbaa !30
  %42 = load i8*, i8** %26, align 8, !tbaa !29
  tail call void %41(i8* noundef %42, i8* noundef nonnull %28) #25
  store %struct.internal_state* null, %struct.internal_state** %31, align 8, !tbaa !31
  br label %43

43:                                               ; preds = %3, %5, %10, %25, %30, %40
  %44 = phi i32 [ -6, %5 ], [ -6, %3 ], [ -2, %10 ], [ -4, %25 ], [ %38, %40 ], [ 0, %30 ]
  ret i32 %44
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @inflatePrime(%struct.z_stream_s* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %52, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = bitcast %struct.internal_state** %14 to %struct.inflate_state**
  %16 = load %struct.inflate_state*, %struct.inflate_state** %15, align 8, !tbaa !31
  %17 = icmp eq %struct.inflate_state* %16, null
  br i1 %17, label %52, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 0
  %20 = load %struct.z_stream_s*, %struct.z_stream_s** %19, align 8, !tbaa !229
  %21 = icmp eq %struct.z_stream_s* %20, %0
  br i1 %21, label %22, label %52

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 8, !tbaa !142
  %25 = add i32 %24, -16180
  %26 = icmp ult i32 %25, 32
  br i1 %26, label %27, label %52

27:                                               ; preds = %22
  %28 = icmp eq i32 %1, 0
  br i1 %28, label %52, label %29

29:                                               ; preds = %27
  %30 = icmp slt i32 %1, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 15
  store i64 0, i64* %32, align 8, !tbaa !168
  %33 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 16
  store i32 0, i32* %33, align 8, !tbaa !169
  br label %52

34:                                               ; preds = %29
  %35 = icmp ugt i32 %1, 16
  br i1 %35, label %52, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 16
  %38 = load i32, i32* %37, align 8, !tbaa !169
  %39 = add i32 %38, %1
  %40 = icmp ugt i32 %39, 32
  br i1 %40, label %52, label %41

41:                                               ; preds = %36
  %42 = zext i32 %1 to i64
  %43 = shl nsw i64 -1, %42
  %44 = trunc i64 %43 to i32
  %45 = xor i32 %44, -1
  %46 = and i32 %45, %2
  %47 = shl i32 %46, %38
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 15
  %50 = load i64, i64* %49, align 8, !tbaa !168
  %51 = add i64 %50, %48
  store i64 %51, i64* %49, align 8, !tbaa !168
  store i32 %39, i32* %37, align 8, !tbaa !169
  br label %52

52:                                               ; preds = %13, %18, %3, %5, %9, %34, %36, %27, %22, %41, %31
  %53 = phi i32 [ 0, %31 ], [ 0, %41 ], [ -2, %22 ], [ 0, %27 ], [ -2, %36 ], [ -2, %34 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %18 ], [ -2, %13 ]
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define i32 @inflate(%struct.z_stream_s* noundef %0, i32 noundef %1) local_unnamed_addr #3 {
  %3 = alloca [4 x i8], align 1
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25
  %5 = icmp eq %struct.z_stream_s* %0, null
  br i1 %5, label %2515, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %8 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %7, align 8, !tbaa !28
  %9 = icmp eq i8* (i8*, i32, i32)* %8, null
  br i1 %9, label %2515, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8, !tbaa !30
  %13 = icmp eq void (i8*, i8*)* %12, null
  br i1 %13, label %2515, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %16 = bitcast %struct.internal_state** %15 to %struct.inflate_state**
  %17 = load %struct.inflate_state*, %struct.inflate_state** %16, align 8, !tbaa !31
  %18 = icmp eq %struct.inflate_state* %17, null
  br i1 %18, label %2515, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 0
  %21 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8, !tbaa !229
  %22 = icmp eq %struct.z_stream_s* %21, %0
  br i1 %22, label %23, label %2515

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 1
  %25 = load i32, i32* %24, align 8, !tbaa !142
  %26 = add i32 %25, -16180
  %27 = icmp ult i32 %26, 32
  br i1 %27, label %28, label %2515

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8, !tbaa !87
  %31 = icmp eq i8* %30, null
  br i1 %31, label %2515, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8, !tbaa !89
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 8, !tbaa !84
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %2515

40:                                               ; preds = %36, %32
  %41 = icmp eq i32 %25, 16191
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  store i32 16192, i32* %24, align 8, !tbaa !142
  br label %43

43:                                               ; preds = %40, %42
  %44 = phi i32 [ %25, %40 ], [ 16192, %42 ]
  %45 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 8, !tbaa !86
  %47 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8, !tbaa !84
  %49 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 15
  %50 = load i64, i64* %49, align 8, !tbaa !168
  %51 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 16
  %52 = load i32, i32* %51, align 8, !tbaa !169
  %53 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 3
  %54 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %55 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 8
  %56 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 5
  %57 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 7
  %58 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %59 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  %60 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 17
  %61 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 25
  %62 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 26
  %63 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 24
  %64 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 27
  %65 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 31, i64 0
  %66 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 28
  %67 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 20
  %68 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 22
  %69 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 0
  %70 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 30, i64 0
  %71 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 256
  %72 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 21
  %73 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 23
  %74 = icmp eq i32 %1, 6
  %75 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 33
  %76 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 19
  %77 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 34
  %78 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 18
  %79 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 12
  %80 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 32
  %81 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 13
  %82 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 14
  %83 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 11
  %84 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 4
  %85 = add i32 %1, -5
  %86 = icmp ult i32 %85, 2
  %87 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 2
  %88 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 9
  %89 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 1
  %90 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 2
  %91 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  %92 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 10
  %93 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 6
  br label %94

94:                                               ; preds = %2235, %43
  %95 = phi i32 [ %44, %43 ], [ %2244, %2235 ]
  %96 = phi i8* [ %34, %43 ], [ %2236, %2235 ]
  %97 = phi i8* [ %30, %43 ], [ %2237, %2235 ]
  %98 = phi i32 [ %48, %43 ], [ %2238, %2235 ]
  %99 = phi i32 [ %46, %43 ], [ %2239, %2235 ]
  %100 = phi i64 [ %50, %43 ], [ %2240, %2235 ]
  %101 = phi i32 [ %52, %43 ], [ %2241, %2235 ]
  %102 = phi i32 [ %46, %43 ], [ %2242, %2235 ]
  %103 = phi i32 [ 0, %43 ], [ %2243, %2235 ]
  switch i32 %95, label %2515 [
    i32 16180, label %127
    i32 16181, label %122
    i32 16182, label %277
    i32 16183, label %353
    i32 16184, label %407
    i32 16185, label %480
    i32 16186, label %541
    i32 16187, label %601
    i32 16188, label %661
    i32 16189, label %117
    i32 16190, label %773
    i32 16191, label %783
    i32 16192, label %788
    i32 16193, label %834
    i32 16194, label %904
    i32 16195, label %909
    i32 16196, label %112
    i32 16197, label %977
    i32 16198, label %108
    i32 16199, label %1424
    i32 16200, label %1430
    i32 16201, label %106
    i32 16202, label %1645
    i32 16203, label %104
    i32 16204, label %1837
    i32 16205, label %2043
    i32 16206, label %2050
    i32 16207, label %110
    i32 16208, label %2363
    i32 16209, label %2370
    i32 16210, label %2514
  ]

104:                                              ; preds = %94
  %105 = load i32, i32* %76, align 4, !tbaa !172
  br label %1790

106:                                              ; preds = %94
  %107 = load i32, i32* %76, align 4, !tbaa !172
  br label %1595

108:                                              ; preds = %94
  %109 = load i32, i32* %64, align 4, !tbaa !155
  br label %1078

110:                                              ; preds = %94
  %111 = load i32, i32* %53, align 8, !tbaa !231
  br label %2155

112:                                              ; preds = %94
  %113 = icmp ult i32 %101, 14
  br i1 %113, label %114, label %956

114:                                              ; preds = %112
  %115 = zext i32 %101 to i64
  %116 = icmp eq i32 %98, 0
  br i1 %116, label %2307, label %931

117:                                              ; preds = %94
  %118 = icmp ult i32 %101, 32
  br i1 %118, label %119, label %766

119:                                              ; preds = %117
  %120 = zext i32 %101 to i64
  %121 = icmp eq i32 %98, 0
  br i1 %121, label %2293, label %726

122:                                              ; preds = %94
  %123 = icmp ult i32 %101, 16
  br i1 %123, label %124, label %243

124:                                              ; preds = %122
  %125 = zext i32 %101 to i64
  %126 = icmp eq i32 %98, 0
  br i1 %126, label %2286, label %218

127:                                              ; preds = %94
  %128 = load i32, i32* %53, align 8, !tbaa !231
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %127
  %131 = icmp ult i32 %101, 16
  br i1 %131, label %132, label %161

132:                                              ; preds = %130
  %133 = zext i32 %101 to i64
  %134 = icmp eq i32 %98, 0
  br i1 %134, label %2251, label %136

135:                                              ; preds = %127
  store i32 16192, i32* %24, align 8, !tbaa !142
  br label %2235

136:                                              ; preds = %132
  %137 = add i32 %98, -1
  %138 = getelementptr inbounds i8, i8* %96, i64 1
  %139 = load i8, i8* %96, align 1, !tbaa !4
  %140 = zext i8 %139 to i64
  %141 = shl nuw nsw i64 %140, %133
  %142 = add i64 %141, %100
  %143 = add nuw nsw i64 %133, 8
  %144 = icmp ult i32 %101, 8
  br i1 %144, label %145, label %155, !llvm.loop !236

145:                                              ; preds = %136
  %146 = icmp eq i32 %137, 0
  br i1 %146, label %2253, label %147

147:                                              ; preds = %145
  %148 = add i32 %98, -2
  %149 = getelementptr inbounds i8, i8* %96, i64 2
  %150 = load i8, i8* %138, align 1, !tbaa !4
  %151 = zext i8 %150 to i64
  %152 = shl nuw nsw i64 %151, %143
  %153 = add i64 %152, %142
  %154 = add nuw nsw i64 %133, 16
  br label %155

155:                                              ; preds = %147, %136
  %156 = phi i32 [ %137, %136 ], [ %148, %147 ]
  %157 = phi i8* [ %138, %136 ], [ %149, %147 ]
  %158 = phi i64 [ %142, %136 ], [ %153, %147 ]
  %159 = phi i64 [ %143, %136 ], [ %154, %147 ]
  %160 = trunc i64 %159 to i32
  br label %161

161:                                              ; preds = %155, %130
  %162 = phi i8* [ %96, %130 ], [ %157, %155 ]
  %163 = phi i32 [ %98, %130 ], [ %156, %155 ]
  %164 = phi i64 [ %100, %130 ], [ %158, %155 ]
  %165 = phi i32 [ %101, %130 ], [ %160, %155 ]
  %166 = and i32 %128, 2
  %167 = icmp ne i32 %166, 0
  %168 = icmp eq i64 %164, 35615
  %169 = select i1 %167, i1 %168, i1 false
  br i1 %169, label %170, label %177

170:                                              ; preds = %161
  %171 = load i32, i32* %92, align 8, !tbaa !136
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  store i32 15, i32* %92, align 8, !tbaa !136
  br label %174

174:                                              ; preds = %173, %170
  %175 = call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  store i64 %175, i64* %57, align 8, !tbaa !237
  store i8 31, i8* %4, align 1, !tbaa !4
  store i8 -117, i8* %89, align 1, !tbaa !4
  %176 = call i64 @crc32(i64 noundef %175, i8* noundef nonnull %4, i32 noundef 2) #25
  store i64 %176, i64* %57, align 8, !tbaa !237
  store i32 16181, i32* %24, align 8, !tbaa !142
  br label %2235

177:                                              ; preds = %161
  %178 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %179 = icmp eq %struct.gz_header_s* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %178, i64 0, i32 12
  store i32 -1, i32* %181, align 8, !tbaa !238
  br label %182

182:                                              ; preds = %180, %177
  %183 = and i32 %128, 1
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %192, label %185

185:                                              ; preds = %182
  %186 = shl i64 %164, 8
  %187 = and i64 %186, 65280
  %188 = lshr i64 %164, 8
  %189 = add nuw nsw i64 %187, %188
  %190 = urem i64 %189, 31
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %193, label %192

192:                                              ; preds = %185, %182
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.5, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

193:                                              ; preds = %185
  %194 = and i64 %164, 15
  %195 = icmp eq i64 %194, 8
  br i1 %195, label %197, label %196

196:                                              ; preds = %193
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.6, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

197:                                              ; preds = %193
  %198 = lshr i64 %164, 4
  %199 = add i32 %165, -4
  %200 = trunc i64 %198 to i32
  %201 = and i32 %200, 15
  %202 = add nuw nsw i32 %201, 8
  %203 = load i32, i32* %92, align 8, !tbaa !136
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %197
  store i32 %202, i32* %92, align 8, !tbaa !136
  br label %206

206:                                              ; preds = %205, %197
  %207 = phi i32 [ %202, %205 ], [ %203, %197 ]
  %208 = icmp ugt i32 %201, 7
  %209 = icmp ugt i32 %202, %207
  %210 = select i1 %208, i1 true, i1 %209
  br i1 %210, label %211, label %212

211:                                              ; preds = %206
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.7, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

212:                                              ; preds = %206
  %213 = shl nuw nsw i32 256, %201
  store i32 %213, i32* %93, align 4, !tbaa !134
  store i32 0, i32* %56, align 8, !tbaa !233
  %214 = call i64 @adler32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  store i64 %214, i64* %57, align 8, !tbaa !237
  store i64 %214, i64* %58, align 8, !tbaa !82
  %215 = and i64 %164, 8192
  %216 = icmp eq i64 %215, 0
  %217 = select i1 %216, i32 16191, i32 16189
  store i32 %217, i32* %24, align 8, !tbaa !142
  br label %2235

218:                                              ; preds = %124
  %219 = add i32 %98, -1
  %220 = getelementptr inbounds i8, i8* %96, i64 1
  %221 = load i8, i8* %96, align 1, !tbaa !4
  %222 = zext i8 %221 to i64
  %223 = shl nuw nsw i64 %222, %125
  %224 = add i64 %223, %100
  %225 = add nuw nsw i64 %125, 8
  %226 = icmp ult i32 %101, 8
  br i1 %226, label %227, label %237, !llvm.loop !239

227:                                              ; preds = %218
  %228 = icmp eq i32 %219, 0
  br i1 %228, label %2288, label %229

229:                                              ; preds = %227
  %230 = add i32 %98, -2
  %231 = getelementptr inbounds i8, i8* %96, i64 2
  %232 = load i8, i8* %220, align 1, !tbaa !4
  %233 = zext i8 %232 to i64
  %234 = shl nuw nsw i64 %233, %225
  %235 = add i64 %234, %224
  %236 = add nuw nsw i64 %125, 16
  br label %237

237:                                              ; preds = %229, %218
  %238 = phi i32 [ %219, %218 ], [ %230, %229 ]
  %239 = phi i8* [ %220, %218 ], [ %231, %229 ]
  %240 = phi i64 [ %224, %218 ], [ %235, %229 ]
  %241 = phi i64 [ %225, %218 ], [ %236, %229 ]
  %242 = trunc i64 %241 to i32
  br label %243

243:                                              ; preds = %237, %122
  %244 = phi i8* [ %96, %122 ], [ %239, %237 ]
  %245 = phi i32 [ %98, %122 ], [ %238, %237 ]
  %246 = phi i64 [ %100, %122 ], [ %240, %237 ]
  %247 = phi i32 [ %101, %122 ], [ %242, %237 ]
  %248 = trunc i64 %246 to i32
  store i32 %248, i32* %56, align 8, !tbaa !233
  %249 = and i32 %248, 255
  %250 = icmp eq i32 %249, 8
  br i1 %250, label %252, label %251

251:                                              ; preds = %243
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.6, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

252:                                              ; preds = %243
  %253 = and i32 %248, 57344
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %256, label %255

255:                                              ; preds = %252
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4.8, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

256:                                              ; preds = %252
  %257 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %258 = icmp eq %struct.gz_header_s* %257, null
  br i1 %258, label %263, label %259

259:                                              ; preds = %256
  %260 = lshr i32 %248, 8
  %261 = and i32 %260, 1
  %262 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %257, i64 0, i32 0
  store i32 %261, i32* %262, align 8, !tbaa !112
  br label %263

263:                                              ; preds = %259, %256
  %264 = and i32 %248, 512
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %276, label %266

266:                                              ; preds = %263
  %267 = load i32, i32* %53, align 8, !tbaa !231
  %268 = and i32 %267, 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %276, label %270

270:                                              ; preds = %266
  %271 = trunc i64 %246 to i8
  store i8 %271, i8* %4, align 1, !tbaa !4
  %272 = lshr i64 %246, 8
  %273 = trunc i64 %272 to i8
  store i8 %273, i8* %89, align 1, !tbaa !4
  %274 = load i64, i64* %57, align 8, !tbaa !237
  %275 = call i64 @crc32(i64 noundef %274, i8* noundef nonnull %4, i32 noundef 2) #25
  store i64 %275, i64* %57, align 8, !tbaa !237
  br label %276

276:                                              ; preds = %270, %266, %263
  store i32 16182, i32* %24, align 8, !tbaa !142
  br label %279

277:                                              ; preds = %94
  %278 = icmp ult i32 %101, 32
  br i1 %278, label %279, label %326

279:                                              ; preds = %276, %277
  %280 = phi i32 [ 0, %276 ], [ %101, %277 ]
  %281 = phi i64 [ 0, %276 ], [ %100, %277 ]
  %282 = phi i32 [ %245, %276 ], [ %98, %277 ]
  %283 = phi i8* [ %244, %276 ], [ %96, %277 ]
  %284 = zext i32 %280 to i64
  %285 = icmp eq i32 %282, 0
  br i1 %285, label %2279, label %286

286:                                              ; preds = %279
  %287 = add i32 %282, -1
  %288 = getelementptr inbounds i8, i8* %283, i64 1
  %289 = load i8, i8* %283, align 1, !tbaa !4
  %290 = zext i8 %289 to i64
  %291 = shl nuw nsw i64 %290, %284
  %292 = add i64 %291, %281
  %293 = add nuw nsw i64 %284, 8
  %294 = icmp ult i32 %280, 24
  br i1 %294, label %295, label %326, !llvm.loop !240

295:                                              ; preds = %286
  %296 = icmp eq i32 %287, 0
  br i1 %296, label %2281, label %297

297:                                              ; preds = %295
  %298 = add i32 %282, -2
  %299 = getelementptr inbounds i8, i8* %283, i64 2
  %300 = load i8, i8* %288, align 1, !tbaa !4
  %301 = zext i8 %300 to i64
  %302 = shl nuw nsw i64 %301, %293
  %303 = add i64 %302, %292
  %304 = add nuw nsw i64 %284, 16
  %305 = icmp ult i32 %280, 16
  br i1 %305, label %306, label %326, !llvm.loop !240

306:                                              ; preds = %297
  %307 = icmp eq i32 %298, 0
  br i1 %307, label %2281, label %308

308:                                              ; preds = %306
  %309 = add i32 %282, -3
  %310 = getelementptr inbounds i8, i8* %283, i64 3
  %311 = load i8, i8* %299, align 1, !tbaa !4
  %312 = zext i8 %311 to i64
  %313 = shl nuw nsw i64 %312, %304
  %314 = add i64 %313, %303
  %315 = add nuw nsw i64 %284, 24
  %316 = icmp ult i32 %280, 8
  br i1 %316, label %317, label %326, !llvm.loop !240

317:                                              ; preds = %308
  %318 = icmp eq i32 %309, 0
  br i1 %318, label %2281, label %319

319:                                              ; preds = %317
  %320 = add i32 %282, -4
  %321 = getelementptr inbounds i8, i8* %283, i64 4
  %322 = load i8, i8* %310, align 1, !tbaa !4
  %323 = zext i8 %322 to i64
  %324 = shl nuw nsw i64 %323, %315
  %325 = add i64 %324, %314
  br label %326

326:                                              ; preds = %286, %297, %308, %319, %277
  %327 = phi i8* [ %96, %277 ], [ %288, %286 ], [ %299, %297 ], [ %310, %308 ], [ %321, %319 ]
  %328 = phi i32 [ %98, %277 ], [ %287, %286 ], [ %298, %297 ], [ %309, %308 ], [ %320, %319 ]
  %329 = phi i64 [ %100, %277 ], [ %292, %286 ], [ %303, %297 ], [ %314, %308 ], [ %325, %319 ]
  %330 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %331 = icmp eq %struct.gz_header_s* %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %330, i64 0, i32 1
  store i64 %329, i64* %333, align 8, !tbaa !118
  br label %334

334:                                              ; preds = %332, %326
  %335 = load i32, i32* %56, align 8, !tbaa !233
  %336 = and i32 %335, 512
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %352, label %338

338:                                              ; preds = %334
  %339 = load i32, i32* %53, align 8, !tbaa !231
  %340 = and i32 %339, 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %352, label %342

342:                                              ; preds = %338
  %343 = trunc i64 %329 to i8
  store i8 %343, i8* %4, align 1, !tbaa !4
  %344 = lshr i64 %329, 8
  %345 = trunc i64 %344 to i8
  store i8 %345, i8* %89, align 1, !tbaa !4
  %346 = lshr i64 %329, 16
  %347 = trunc i64 %346 to i8
  store i8 %347, i8* %90, align 1, !tbaa !4
  %348 = lshr i64 %329, 24
  %349 = trunc i64 %348 to i8
  store i8 %349, i8* %91, align 1, !tbaa !4
  %350 = load i64, i64* %57, align 8, !tbaa !237
  %351 = call i64 @crc32(i64 noundef %350, i8* noundef nonnull %4, i32 noundef 4) #25
  store i64 %351, i64* %57, align 8, !tbaa !237
  br label %352

352:                                              ; preds = %342, %338, %334
  store i32 16183, i32* %24, align 8, !tbaa !142
  br label %355

353:                                              ; preds = %94
  %354 = icmp ult i32 %101, 16
  br i1 %354, label %355, label %380

355:                                              ; preds = %352, %353
  %356 = phi i32 [ 0, %352 ], [ %101, %353 ]
  %357 = phi i64 [ 0, %352 ], [ %100, %353 ]
  %358 = phi i32 [ %328, %352 ], [ %98, %353 ]
  %359 = phi i8* [ %327, %352 ], [ %96, %353 ]
  %360 = zext i32 %356 to i64
  %361 = icmp eq i32 %358, 0
  br i1 %361, label %2272, label %362

362:                                              ; preds = %355
  %363 = add i32 %358, -1
  %364 = getelementptr inbounds i8, i8* %359, i64 1
  %365 = load i8, i8* %359, align 1, !tbaa !4
  %366 = zext i8 %365 to i64
  %367 = shl nuw nsw i64 %366, %360
  %368 = add i64 %367, %357
  %369 = add nuw nsw i64 %360, 8
  %370 = icmp ult i32 %356, 8
  br i1 %370, label %371, label %380, !llvm.loop !241

371:                                              ; preds = %362
  %372 = icmp eq i32 %363, 0
  br i1 %372, label %2274, label %373

373:                                              ; preds = %371
  %374 = add i32 %358, -2
  %375 = getelementptr inbounds i8, i8* %359, i64 2
  %376 = load i8, i8* %364, align 1, !tbaa !4
  %377 = zext i8 %376 to i64
  %378 = shl nuw nsw i64 %377, %369
  %379 = add i64 %378, %368
  br label %380

380:                                              ; preds = %362, %373, %353
  %381 = phi i8* [ %96, %353 ], [ %364, %362 ], [ %375, %373 ]
  %382 = phi i32 [ %98, %353 ], [ %363, %362 ], [ %374, %373 ]
  %383 = phi i64 [ %100, %353 ], [ %368, %362 ], [ %379, %373 ]
  %384 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %385 = icmp eq %struct.gz_header_s* %384, null
  br i1 %385, label %393, label %386

386:                                              ; preds = %380
  %387 = trunc i64 %383 to i32
  %388 = and i32 %387, 255
  %389 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %384, i64 0, i32 2
  store i32 %388, i32* %389, align 8, !tbaa !242
  %390 = lshr i64 %383, 8
  %391 = trunc i64 %390 to i32
  %392 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %384, i64 0, i32 3
  store i32 %391, i32* %392, align 4, !tbaa !119
  br label %393

393:                                              ; preds = %386, %380
  %394 = load i32, i32* %56, align 8, !tbaa !233
  %395 = and i32 %394, 512
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %411, label %397

397:                                              ; preds = %393
  %398 = load i32, i32* %53, align 8, !tbaa !231
  %399 = and i32 %398, 4
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %411, label %401

401:                                              ; preds = %397
  %402 = trunc i64 %383 to i8
  store i8 %402, i8* %4, align 1, !tbaa !4
  %403 = lshr i64 %383, 8
  %404 = trunc i64 %403 to i8
  store i8 %404, i8* %89, align 1, !tbaa !4
  %405 = load i64, i64* %57, align 8, !tbaa !237
  %406 = call i64 @crc32(i64 noundef %405, i8* noundef nonnull %4, i32 noundef 2) #25
  store i64 %406, i64* %57, align 8, !tbaa !237
  br label %411

407:                                              ; preds = %94
  %408 = load i32, i32* %56, align 8, !tbaa !233
  %409 = and i32 %408, 1024
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %466, label %415

411:                                              ; preds = %401, %397, %393
  store i32 16184, i32* %24, align 8, !tbaa !142
  %412 = load i32, i32* %56, align 8, !tbaa !233
  %413 = and i32 %412, 1024
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %466, label %417

415:                                              ; preds = %407
  %416 = icmp ult i32 %101, 16
  br i1 %416, label %417, label %443

417:                                              ; preds = %411, %415
  %418 = phi i8* [ %96, %415 ], [ %381, %411 ]
  %419 = phi i32 [ %98, %415 ], [ %382, %411 ]
  %420 = phi i64 [ %100, %415 ], [ 0, %411 ]
  %421 = phi i32 [ %101, %415 ], [ 0, %411 ]
  %422 = phi i32 [ %408, %415 ], [ %412, %411 ]
  %423 = zext i32 %421 to i64
  %424 = icmp eq i32 %419, 0
  br i1 %424, label %2265, label %425

425:                                              ; preds = %417
  %426 = add i32 %419, -1
  %427 = getelementptr inbounds i8, i8* %418, i64 1
  %428 = load i8, i8* %418, align 1, !tbaa !4
  %429 = zext i8 %428 to i64
  %430 = shl nuw nsw i64 %429, %423
  %431 = add i64 %430, %420
  %432 = add nuw nsw i64 %423, 8
  %433 = icmp ult i32 %421, 8
  br i1 %433, label %434, label %443, !llvm.loop !243

434:                                              ; preds = %425
  %435 = icmp eq i32 %426, 0
  br i1 %435, label %2267, label %436

436:                                              ; preds = %434
  %437 = add i32 %419, -2
  %438 = getelementptr inbounds i8, i8* %418, i64 2
  %439 = load i8, i8* %427, align 1, !tbaa !4
  %440 = zext i8 %439 to i64
  %441 = shl nuw nsw i64 %440, %432
  %442 = add i64 %441, %431
  br label %443

443:                                              ; preds = %425, %436, %415
  %444 = phi i32 [ %408, %415 ], [ %422, %436 ], [ %422, %425 ]
  %445 = phi i8* [ %96, %415 ], [ %427, %425 ], [ %438, %436 ]
  %446 = phi i32 [ %98, %415 ], [ %426, %425 ], [ %437, %436 ]
  %447 = phi i64 [ %100, %415 ], [ %431, %425 ], [ %442, %436 ]
  %448 = trunc i64 %447 to i32
  store i32 %448, i32* %60, align 4, !tbaa !149
  %449 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %450 = icmp eq %struct.gz_header_s* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %443
  %452 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %449, i64 0, i32 5
  store i32 %448, i32* %452, align 8, !tbaa !120
  br label %453

453:                                              ; preds = %451, %443
  %454 = and i32 %444, 512
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %475, label %456

456:                                              ; preds = %453
  %457 = load i32, i32* %53, align 8, !tbaa !231
  %458 = and i32 %457, 4
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %475, label %460

460:                                              ; preds = %456
  %461 = trunc i64 %447 to i8
  store i8 %461, i8* %4, align 1, !tbaa !4
  %462 = lshr i64 %447, 8
  %463 = trunc i64 %462 to i8
  store i8 %463, i8* %89, align 1, !tbaa !4
  %464 = load i64, i64* %57, align 8, !tbaa !237
  %465 = call i64 @crc32(i64 noundef %464, i8* noundef nonnull %4, i32 noundef 2) #25
  store i64 %465, i64* %57, align 8, !tbaa !237
  br label %475

466:                                              ; preds = %411, %407
  %467 = phi i32 [ 0, %411 ], [ %101, %407 ]
  %468 = phi i64 [ 0, %411 ], [ %100, %407 ]
  %469 = phi i32 [ %382, %411 ], [ %98, %407 ]
  %470 = phi i8* [ %381, %411 ], [ %96, %407 ]
  %471 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %472 = icmp eq %struct.gz_header_s* %471, null
  br i1 %472, label %475, label %473

473:                                              ; preds = %466
  %474 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %471, i64 0, i32 4
  store i8* null, i8** %474, align 8, !tbaa !115
  br label %475

475:                                              ; preds = %460, %456, %453, %466, %473
  %476 = phi i8* [ %470, %473 ], [ %470, %466 ], [ %445, %453 ], [ %445, %456 ], [ %445, %460 ]
  %477 = phi i32 [ %469, %473 ], [ %469, %466 ], [ %446, %453 ], [ %446, %456 ], [ %446, %460 ]
  %478 = phi i64 [ %468, %473 ], [ %468, %466 ], [ 0, %453 ], [ 0, %456 ], [ 0, %460 ]
  %479 = phi i32 [ %467, %473 ], [ %467, %466 ], [ 0, %453 ], [ 0, %456 ], [ 0, %460 ]
  store i32 16185, i32* %24, align 8, !tbaa !142
  br label %480

480:                                              ; preds = %94, %475
  %481 = phi i8* [ %96, %94 ], [ %476, %475 ]
  %482 = phi i32 [ %98, %94 ], [ %477, %475 ]
  %483 = phi i64 [ %100, %94 ], [ %478, %475 ]
  %484 = phi i32 [ %101, %94 ], [ %479, %475 ]
  %485 = load i32, i32* %56, align 8, !tbaa !233
  %486 = and i32 %485, 1024
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %538, label %488

488:                                              ; preds = %480
  %489 = load i32, i32* %60, align 4, !tbaa !149
  %490 = icmp ugt i32 %489, %482
  %491 = select i1 %490, i32 %482, i32 %489
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %533, label %493

493:                                              ; preds = %488
  %494 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %495 = icmp eq %struct.gz_header_s* %494, null
  br i1 %495, label %516, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %494, i64 0, i32 4
  %498 = load i8*, i8** %497, align 8, !tbaa !115
  %499 = icmp eq i8* %498, null
  br i1 %499, label %516, label %500

500:                                              ; preds = %496
  %501 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %494, i64 0, i32 5
  %502 = load i32, i32* %501, align 8, !tbaa !120
  %503 = sub i32 %502, %489
  %504 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %494, i64 0, i32 6
  %505 = load i32, i32* %504, align 4, !tbaa !244
  %506 = icmp ugt i32 %505, %503
  br i1 %506, label %507, label %516

507:                                              ; preds = %500
  %508 = zext i32 %503 to i64
  %509 = getelementptr inbounds i8, i8* %498, i64 %508
  %510 = add i32 %503, %491
  %511 = icmp ugt i32 %510, %505
  %512 = sub i32 %505, %503
  %513 = select i1 %511, i32 %512, i32 %491
  %514 = zext i32 %513 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %509, i8* align 1 %481, i64 %514, i1 false)
  %515 = load i32, i32* %56, align 8, !tbaa !233
  br label %516

516:                                              ; preds = %507, %500, %496, %493
  %517 = phi i32 [ %515, %507 ], [ %485, %500 ], [ %485, %496 ], [ %485, %493 ]
  %518 = and i32 %517, 512
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %527, label %520

520:                                              ; preds = %516
  %521 = load i32, i32* %53, align 8, !tbaa !231
  %522 = and i32 %521, 4
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %527, label %524

524:                                              ; preds = %520
  %525 = load i64, i64* %57, align 8, !tbaa !237
  %526 = call i64 @crc32(i64 noundef %525, i8* noundef %481, i32 noundef %491) #25
  store i64 %526, i64* %57, align 8, !tbaa !237
  br label %527

527:                                              ; preds = %524, %520, %516
  %528 = sub i32 %482, %491
  %529 = zext i32 %491 to i64
  %530 = getelementptr inbounds i8, i8* %481, i64 %529
  %531 = load i32, i32* %60, align 4, !tbaa !149
  %532 = sub i32 %531, %491
  store i32 %532, i32* %60, align 4, !tbaa !149
  br label %533

533:                                              ; preds = %527, %488
  %534 = phi i32 [ %532, %527 ], [ %489, %488 ]
  %535 = phi i8* [ %530, %527 ], [ %481, %488 ]
  %536 = phi i32 [ %528, %527 ], [ %482, %488 ]
  %537 = icmp eq i32 %534, 0
  br i1 %537, label %538, label %2363

538:                                              ; preds = %533, %480
  %539 = phi i8* [ %535, %533 ], [ %481, %480 ]
  %540 = phi i32 [ %536, %533 ], [ %482, %480 ]
  store i32 0, i32* %60, align 4, !tbaa !149
  store i32 16186, i32* %24, align 8, !tbaa !142
  br label %541

541:                                              ; preds = %94, %538
  %542 = phi i8* [ %96, %94 ], [ %539, %538 ]
  %543 = phi i32 [ %98, %94 ], [ %540, %538 ]
  %544 = phi i64 [ %100, %94 ], [ %483, %538 ]
  %545 = phi i32 [ %101, %94 ], [ %484, %538 ]
  %546 = load i32, i32* %56, align 8, !tbaa !233
  %547 = and i32 %546, 2048
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %593, label %549

549:                                              ; preds = %541
  %550 = icmp eq i32 %543, 0
  br i1 %550, label %2363, label %551

551:                                              ; preds = %549
  %552 = zext i32 %543 to i64
  br label %553

553:                                              ; preds = %551, %573
  %554 = phi i64 [ 0, %551 ], [ %555, %573 ]
  %555 = add nuw nsw i64 %554, 1
  %556 = getelementptr inbounds i8, i8* %542, i64 %554
  %557 = load i8, i8* %556, align 1, !tbaa !4
  %558 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %559 = icmp eq %struct.gz_header_s* %558, null
  br i1 %559, label %573, label %560

560:                                              ; preds = %553
  %561 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %558, i64 0, i32 7
  %562 = load i8*, i8** %561, align 8, !tbaa !116
  %563 = icmp eq i8* %562, null
  br i1 %563, label %573, label %564

564:                                              ; preds = %560
  %565 = load i32, i32* %60, align 4, !tbaa !149
  %566 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %558, i64 0, i32 8
  %567 = load i32, i32* %566, align 8, !tbaa !245
  %568 = icmp ult i32 %565, %567
  br i1 %568, label %569, label %573

569:                                              ; preds = %564
  %570 = add nuw i32 %565, 1
  store i32 %570, i32* %60, align 4, !tbaa !149
  %571 = zext i32 %565 to i64
  %572 = getelementptr inbounds i8, i8* %562, i64 %571
  store i8 %557, i8* %572, align 1, !tbaa !4
  br label %573

573:                                              ; preds = %553, %560, %564, %569
  %574 = icmp ne i8 %557, 0
  %575 = icmp ult i64 %555, %552
  %576 = select i1 %574, i1 %575, i1 false
  br i1 %576, label %553, label %577, !llvm.loop !246

577:                                              ; preds = %573
  %578 = trunc i64 %555 to i32
  %579 = load i32, i32* %56, align 8, !tbaa !233
  %580 = and i32 %579, 512
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %589, label %582

582:                                              ; preds = %577
  %583 = load i32, i32* %53, align 8, !tbaa !231
  %584 = and i32 %583, 4
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %589, label %586

586:                                              ; preds = %582
  %587 = load i64, i64* %57, align 8, !tbaa !237
  %588 = call i64 @crc32(i64 noundef %587, i8* noundef nonnull %542, i32 noundef %578) #25
  store i64 %588, i64* %57, align 8, !tbaa !237
  br label %589

589:                                              ; preds = %586, %582, %577
  %590 = sub i32 %543, %578
  %591 = and i64 %555, 4294967295
  %592 = getelementptr inbounds i8, i8* %542, i64 %591
  br i1 %574, label %2363, label %598

593:                                              ; preds = %541
  %594 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %595 = icmp eq %struct.gz_header_s* %594, null
  br i1 %595, label %598, label %596

596:                                              ; preds = %593
  %597 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %594, i64 0, i32 7
  store i8* null, i8** %597, align 8, !tbaa !116
  br label %598

598:                                              ; preds = %593, %596, %589
  %599 = phi i8* [ %592, %589 ], [ %542, %596 ], [ %542, %593 ]
  %600 = phi i32 [ %590, %589 ], [ %543, %596 ], [ %543, %593 ]
  store i32 0, i32* %60, align 4, !tbaa !149
  store i32 16187, i32* %24, align 8, !tbaa !142
  br label %601

601:                                              ; preds = %94, %598
  %602 = phi i8* [ %96, %94 ], [ %599, %598 ]
  %603 = phi i32 [ %98, %94 ], [ %600, %598 ]
  %604 = phi i64 [ %100, %94 ], [ %544, %598 ]
  %605 = phi i32 [ %101, %94 ], [ %545, %598 ]
  %606 = load i32, i32* %56, align 8, !tbaa !233
  %607 = and i32 %606, 4096
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %653, label %609

609:                                              ; preds = %601
  %610 = icmp eq i32 %603, 0
  br i1 %610, label %2363, label %611

611:                                              ; preds = %609
  %612 = zext i32 %603 to i64
  br label %613

613:                                              ; preds = %611, %633
  %614 = phi i64 [ 0, %611 ], [ %615, %633 ]
  %615 = add nuw nsw i64 %614, 1
  %616 = getelementptr inbounds i8, i8* %602, i64 %614
  %617 = load i8, i8* %616, align 1, !tbaa !4
  %618 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %619 = icmp eq %struct.gz_header_s* %618, null
  br i1 %619, label %633, label %620

620:                                              ; preds = %613
  %621 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %618, i64 0, i32 9
  %622 = load i8*, i8** %621, align 8, !tbaa !117
  %623 = icmp eq i8* %622, null
  br i1 %623, label %633, label %624

624:                                              ; preds = %620
  %625 = load i32, i32* %60, align 4, !tbaa !149
  %626 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %618, i64 0, i32 10
  %627 = load i32, i32* %626, align 8, !tbaa !247
  %628 = icmp ult i32 %625, %627
  br i1 %628, label %629, label %633

629:                                              ; preds = %624
  %630 = add nuw i32 %625, 1
  store i32 %630, i32* %60, align 4, !tbaa !149
  %631 = zext i32 %625 to i64
  %632 = getelementptr inbounds i8, i8* %622, i64 %631
  store i8 %617, i8* %632, align 1, !tbaa !4
  br label %633

633:                                              ; preds = %613, %620, %624, %629
  %634 = icmp ne i8 %617, 0
  %635 = icmp ult i64 %615, %612
  %636 = select i1 %634, i1 %635, i1 false
  br i1 %636, label %613, label %637, !llvm.loop !248

637:                                              ; preds = %633
  %638 = trunc i64 %615 to i32
  %639 = load i32, i32* %56, align 8, !tbaa !233
  %640 = and i32 %639, 512
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %649, label %642

642:                                              ; preds = %637
  %643 = load i32, i32* %53, align 8, !tbaa !231
  %644 = and i32 %643, 4
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %649, label %646

646:                                              ; preds = %642
  %647 = load i64, i64* %57, align 8, !tbaa !237
  %648 = call i64 @crc32(i64 noundef %647, i8* noundef nonnull %602, i32 noundef %638) #25
  store i64 %648, i64* %57, align 8, !tbaa !237
  br label %649

649:                                              ; preds = %646, %642, %637
  %650 = sub i32 %603, %638
  %651 = and i64 %615, 4294967295
  %652 = getelementptr inbounds i8, i8* %602, i64 %651
  br i1 %634, label %2363, label %658

653:                                              ; preds = %601
  %654 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %655 = icmp eq %struct.gz_header_s* %654, null
  br i1 %655, label %658, label %656

656:                                              ; preds = %653
  %657 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %654, i64 0, i32 9
  store i8* null, i8** %657, align 8, !tbaa !117
  br label %658

658:                                              ; preds = %653, %656, %649
  %659 = phi i8* [ %652, %649 ], [ %602, %656 ], [ %602, %653 ]
  %660 = phi i32 [ %650, %649 ], [ %603, %656 ], [ %603, %653 ]
  store i32 16188, i32* %24, align 8, !tbaa !142
  br label %661

661:                                              ; preds = %94, %658
  %662 = phi i8* [ %96, %94 ], [ %659, %658 ]
  %663 = phi i32 [ %98, %94 ], [ %660, %658 ]
  %664 = phi i64 [ %100, %94 ], [ %604, %658 ]
  %665 = phi i32 [ %101, %94 ], [ %605, %658 ]
  %666 = load i32, i32* %56, align 8, !tbaa !233
  %667 = and i32 %666, 512
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %712, label %669

669:                                              ; preds = %661
  %670 = icmp ult i32 %665, 16
  br i1 %670, label %671, label %699

671:                                              ; preds = %669
  %672 = zext i32 %665 to i64
  %673 = icmp eq i32 %663, 0
  br i1 %673, label %2258, label %674

674:                                              ; preds = %671
  %675 = add i32 %663, -1
  %676 = getelementptr inbounds i8, i8* %662, i64 1
  %677 = load i8, i8* %662, align 1, !tbaa !4
  %678 = zext i8 %677 to i64
  %679 = shl nuw nsw i64 %678, %672
  %680 = add i64 %679, %664
  %681 = add nuw nsw i64 %672, 8
  %682 = icmp ult i32 %665, 8
  br i1 %682, label %683, label %693, !llvm.loop !249

683:                                              ; preds = %674
  %684 = icmp eq i32 %675, 0
  br i1 %684, label %2260, label %685

685:                                              ; preds = %683
  %686 = add i32 %663, -2
  %687 = getelementptr inbounds i8, i8* %662, i64 2
  %688 = load i8, i8* %676, align 1, !tbaa !4
  %689 = zext i8 %688 to i64
  %690 = shl nuw nsw i64 %689, %681
  %691 = add i64 %690, %680
  %692 = add nuw nsw i64 %672, 16
  br label %693

693:                                              ; preds = %685, %674
  %694 = phi i32 [ %675, %674 ], [ %686, %685 ]
  %695 = phi i8* [ %676, %674 ], [ %687, %685 ]
  %696 = phi i64 [ %680, %674 ], [ %691, %685 ]
  %697 = phi i64 [ %681, %674 ], [ %692, %685 ]
  %698 = trunc i64 %697 to i32
  br label %699

699:                                              ; preds = %693, %669
  %700 = phi i8* [ %662, %669 ], [ %695, %693 ]
  %701 = phi i32 [ %663, %669 ], [ %694, %693 ]
  %702 = phi i64 [ %664, %669 ], [ %696, %693 ]
  %703 = phi i32 [ %665, %669 ], [ %698, %693 ]
  %704 = load i32, i32* %53, align 8, !tbaa !231
  %705 = and i32 %704, 4
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %712, label %707

707:                                              ; preds = %699
  %708 = load i64, i64* %57, align 8, !tbaa !237
  %709 = and i64 %708, 65535
  %710 = icmp eq i64 %702, %709
  br i1 %710, label %712, label %711

711:                                              ; preds = %707
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.9, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

712:                                              ; preds = %707, %699, %661
  %713 = phi i8* [ %662, %661 ], [ %700, %699 ], [ %700, %707 ]
  %714 = phi i32 [ %663, %661 ], [ %701, %699 ], [ %701, %707 ]
  %715 = phi i64 [ %664, %661 ], [ 0, %699 ], [ 0, %707 ]
  %716 = phi i32 [ %665, %661 ], [ 0, %699 ], [ 0, %707 ]
  %717 = load %struct.gz_header_s*, %struct.gz_header_s** %88, align 8, !tbaa !234
  %718 = icmp eq %struct.gz_header_s* %717, null
  br i1 %718, label %724, label %719

719:                                              ; preds = %712
  %720 = lshr i32 %666, 9
  %721 = and i32 %720, 1
  %722 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %717, i64 0, i32 11
  store i32 %721, i32* %722, align 4, !tbaa !114
  %723 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %717, i64 0, i32 12
  store i32 1, i32* %723, align 8, !tbaa !238
  br label %724

724:                                              ; preds = %719, %712
  %725 = call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  store i64 %725, i64* %57, align 8, !tbaa !237
  store i64 %725, i64* %58, align 8, !tbaa !82
  store i32 16191, i32* %24, align 8, !tbaa !142
  br label %2235

726:                                              ; preds = %119
  %727 = add i32 %98, -1
  %728 = getelementptr inbounds i8, i8* %96, i64 1
  %729 = load i8, i8* %96, align 1, !tbaa !4
  %730 = zext i8 %729 to i64
  %731 = shl nuw nsw i64 %730, %120
  %732 = add i64 %731, %100
  %733 = add nuw nsw i64 %120, 8
  %734 = icmp ult i32 %101, 24
  br i1 %734, label %735, label %766, !llvm.loop !250

735:                                              ; preds = %726
  %736 = icmp eq i32 %727, 0
  br i1 %736, label %2295, label %737

737:                                              ; preds = %735
  %738 = add i32 %98, -2
  %739 = getelementptr inbounds i8, i8* %96, i64 2
  %740 = load i8, i8* %728, align 1, !tbaa !4
  %741 = zext i8 %740 to i64
  %742 = shl nuw nsw i64 %741, %733
  %743 = add i64 %742, %732
  %744 = add nuw nsw i64 %120, 16
  %745 = icmp ult i32 %101, 16
  br i1 %745, label %746, label %766, !llvm.loop !250

746:                                              ; preds = %737
  %747 = icmp eq i32 %738, 0
  br i1 %747, label %2295, label %748

748:                                              ; preds = %746
  %749 = add i32 %98, -3
  %750 = getelementptr inbounds i8, i8* %96, i64 3
  %751 = load i8, i8* %739, align 1, !tbaa !4
  %752 = zext i8 %751 to i64
  %753 = shl nuw nsw i64 %752, %744
  %754 = add i64 %753, %743
  %755 = add nuw nsw i64 %120, 24
  %756 = icmp ult i32 %101, 8
  br i1 %756, label %757, label %766, !llvm.loop !250

757:                                              ; preds = %748
  %758 = icmp eq i32 %749, 0
  br i1 %758, label %2295, label %759

759:                                              ; preds = %757
  %760 = add i32 %98, -4
  %761 = getelementptr inbounds i8, i8* %96, i64 4
  %762 = load i8, i8* %750, align 1, !tbaa !4
  %763 = zext i8 %762 to i64
  %764 = shl nuw nsw i64 %763, %755
  %765 = add i64 %764, %754
  br label %766

766:                                              ; preds = %726, %737, %748, %759, %117
  %767 = phi i8* [ %96, %117 ], [ %728, %726 ], [ %739, %737 ], [ %750, %748 ], [ %761, %759 ]
  %768 = phi i32 [ %98, %117 ], [ %727, %726 ], [ %738, %737 ], [ %749, %748 ], [ %760, %759 ]
  %769 = phi i64 [ %100, %117 ], [ %732, %726 ], [ %743, %737 ], [ %754, %748 ], [ %765, %759 ]
  %770 = trunc i64 %769 to i32
  %771 = call i32 @llvm.bswap.i32(i32 %770)
  %772 = zext i32 %771 to i64
  store i64 %772, i64* %57, align 8, !tbaa !237
  store i64 %772, i64* %58, align 8, !tbaa !82
  store i32 16190, i32* %24, align 8, !tbaa !142
  br label %773

773:                                              ; preds = %94, %766
  %774 = phi i8* [ %96, %94 ], [ %767, %766 ]
  %775 = phi i32 [ %98, %94 ], [ %768, %766 ]
  %776 = phi i64 [ %100, %94 ], [ 0, %766 ]
  %777 = phi i32 [ %101, %94 ], [ 0, %766 ]
  %778 = load i32, i32* %84, align 4, !tbaa !232
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %781

780:                                              ; preds = %773
  store i8* %97, i8** %29, align 8, !tbaa !87
  store i32 %99, i32* %45, align 8, !tbaa !86
  store i8* %774, i8** %33, align 8, !tbaa !89
  store i32 %775, i32* %47, align 8, !tbaa !84
  store i64 %776, i64* %49, align 8, !tbaa !168
  store i32 %777, i32* %51, align 8, !tbaa !169
  br label %2515

781:                                              ; preds = %773
  %782 = call i64 @adler32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  store i64 %782, i64* %57, align 8, !tbaa !237
  store i64 %782, i64* %58, align 8, !tbaa !82
  store i32 16191, i32* %24, align 8, !tbaa !142
  br label %783

783:                                              ; preds = %94, %781
  %784 = phi i8* [ %96, %94 ], [ %774, %781 ]
  %785 = phi i32 [ %98, %94 ], [ %775, %781 ]
  %786 = phi i64 [ %100, %94 ], [ %776, %781 ]
  %787 = phi i32 [ %101, %94 ], [ %777, %781 ]
  br i1 %86, label %2363, label %788

788:                                              ; preds = %783, %94
  %789 = phi i8* [ %96, %94 ], [ %784, %783 ]
  %790 = phi i32 [ %98, %94 ], [ %785, %783 ]
  %791 = phi i64 [ %100, %94 ], [ %786, %783 ]
  %792 = phi i32 [ %101, %94 ], [ %787, %783 ]
  %793 = load i32, i32* %87, align 4, !tbaa !143
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %795, label %797

795:                                              ; preds = %788
  %796 = icmp ult i32 %792, 3
  br i1 %796, label %802, label %813

797:                                              ; preds = %788
  %798 = and i32 %792, 7
  %799 = zext i32 %798 to i64
  %800 = lshr i64 %791, %799
  %801 = and i32 %792, -8
  store i32 16206, i32* %24, align 8, !tbaa !142
  br label %2235

802:                                              ; preds = %795
  %803 = icmp eq i32 %790, 0
  br i1 %803, label %2370, label %804

804:                                              ; preds = %802
  %805 = add i32 %790, -1
  %806 = getelementptr inbounds i8, i8* %789, i64 1
  %807 = load i8, i8* %789, align 1, !tbaa !4
  %808 = zext i8 %807 to i64
  %809 = zext i32 %792 to i64
  %810 = shl nuw nsw i64 %808, %809
  %811 = add i64 %810, %791
  %812 = add nuw nsw i32 %792, 8
  br label %813

813:                                              ; preds = %804, %795
  %814 = phi i8* [ %806, %804 ], [ %789, %795 ]
  %815 = phi i32 [ %805, %804 ], [ %790, %795 ]
  %816 = phi i64 [ %811, %804 ], [ %791, %795 ]
  %817 = phi i32 [ %812, %804 ], [ %792, %795 ]
  %818 = trunc i64 %816 to i32
  %819 = and i32 %818, 1
  store i32 %819, i32* %87, align 4, !tbaa !143
  %820 = lshr i32 %818, 1
  %821 = and i32 %820, 3
  switch i32 %821, label %828 [
    i32 0, label %829
    i32 1, label %822
    i32 2, label %826
    i32 3, label %827
  ]

822:                                              ; preds = %813
  store %struct.code* getelementptr inbounds ([512 x %struct.code], [512 x %struct.code]* @fixedtables.lenfix.10, i64 0, i64 0), %struct.code** %67, align 8, !tbaa !144
  store i32 9, i32* %68, align 8, !tbaa !145
  store %struct.code* getelementptr inbounds ([32 x %struct.code], [32 x %struct.code]* @fixedtables.distfix.11, i64 0, i64 0), %struct.code** %72, align 8, !tbaa !146
  store i32 5, i32* %73, align 4, !tbaa !147
  store i32 16199, i32* %24, align 8, !tbaa !142
  br i1 %74, label %823, label %831

823:                                              ; preds = %822
  %824 = lshr i64 %816, 3
  %825 = add i32 %817, -3
  br label %2370

826:                                              ; preds = %813
  br label %829

827:                                              ; preds = %813
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.12, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  br label %829

828:                                              ; preds = %813
  unreachable

829:                                              ; preds = %813, %827, %826
  %830 = phi i32 [ 16196, %826 ], [ 16209, %827 ], [ 16193, %813 ]
  store i32 %830, i32* %24, align 8, !tbaa !142
  br label %831

831:                                              ; preds = %829, %822
  %832 = lshr i64 %816, 3
  %833 = add i32 %817, -3
  br label %2235

834:                                              ; preds = %94
  %835 = and i32 %101, 7
  %836 = zext i32 %835 to i64
  %837 = lshr i64 %100, %836
  %838 = and i32 %101, -8
  %839 = icmp ult i32 %838, 32
  br i1 %839, label %840, label %891

840:                                              ; preds = %834
  %841 = and i32 %101, -8
  %842 = zext i32 %841 to i64
  %843 = icmp eq i32 %98, 0
  br i1 %843, label %2300, label %844

844:                                              ; preds = %840
  %845 = add i32 %98, -1
  %846 = getelementptr inbounds i8, i8* %96, i64 1
  %847 = load i8, i8* %96, align 1, !tbaa !4
  %848 = zext i8 %847 to i64
  %849 = shl nuw nsw i64 %848, %842
  %850 = add i64 %849, %837
  %851 = add nuw nsw i64 %842, 8
  %852 = icmp ult i32 %841, 24
  br i1 %852, label %853, label %885, !llvm.loop !251

853:                                              ; preds = %844
  %854 = icmp eq i32 %845, 0
  br i1 %854, label %2302, label %855

855:                                              ; preds = %853
  %856 = add i32 %98, -2
  %857 = getelementptr inbounds i8, i8* %96, i64 2
  %858 = load i8, i8* %846, align 1, !tbaa !4
  %859 = zext i8 %858 to i64
  %860 = shl nuw nsw i64 %859, %851
  %861 = add i64 %860, %850
  %862 = add nuw nsw i64 %842, 16
  %863 = icmp ult i32 %841, 16
  br i1 %863, label %864, label %885, !llvm.loop !251

864:                                              ; preds = %855
  %865 = icmp eq i32 %856, 0
  br i1 %865, label %2302, label %866

866:                                              ; preds = %864
  %867 = add i32 %98, -3
  %868 = getelementptr inbounds i8, i8* %96, i64 3
  %869 = load i8, i8* %857, align 1, !tbaa !4
  %870 = zext i8 %869 to i64
  %871 = shl nuw nsw i64 %870, %862
  %872 = add i64 %871, %861
  %873 = add nuw nsw i64 %842, 24
  %874 = icmp eq i32 %841, 0
  br i1 %874, label %875, label %885, !llvm.loop !251

875:                                              ; preds = %866
  %876 = icmp eq i32 %867, 0
  br i1 %876, label %2302, label %877

877:                                              ; preds = %875
  %878 = add i32 %98, -4
  %879 = getelementptr inbounds i8, i8* %96, i64 4
  %880 = load i8, i8* %868, align 1, !tbaa !4
  %881 = zext i8 %880 to i64
  %882 = shl nuw nsw i64 %881, %873
  %883 = add i64 %882, %872
  %884 = add nuw nsw i64 %842, 32
  br label %885

885:                                              ; preds = %877, %866, %855, %844
  %886 = phi i32 [ %845, %844 ], [ %856, %855 ], [ %867, %866 ], [ %878, %877 ]
  %887 = phi i8* [ %846, %844 ], [ %857, %855 ], [ %868, %866 ], [ %879, %877 ]
  %888 = phi i64 [ %850, %844 ], [ %861, %855 ], [ %872, %866 ], [ %883, %877 ]
  %889 = phi i64 [ %851, %844 ], [ %862, %855 ], [ %873, %866 ], [ %884, %877 ]
  %890 = trunc i64 %889 to i32
  br label %891

891:                                              ; preds = %885, %834
  %892 = phi i8* [ %96, %834 ], [ %887, %885 ]
  %893 = phi i32 [ %98, %834 ], [ %886, %885 ]
  %894 = phi i64 [ %837, %834 ], [ %888, %885 ]
  %895 = phi i32 [ %838, %834 ], [ %890, %885 ]
  %896 = and i64 %894, 65535
  %897 = lshr i64 %894, 16
  %898 = xor i64 %897, 65535
  %899 = icmp eq i64 %896, %898
  br i1 %899, label %901, label %900

900:                                              ; preds = %891
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.13, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

901:                                              ; preds = %891
  %902 = trunc i64 %894 to i32
  %903 = and i32 %902, 65535
  store i32 %903, i32* %60, align 4, !tbaa !149
  store i32 16194, i32* %24, align 8, !tbaa !142
  br i1 %74, label %2363, label %904

904:                                              ; preds = %901, %94
  %905 = phi i8* [ %96, %94 ], [ %892, %901 ]
  %906 = phi i32 [ %98, %94 ], [ %893, %901 ]
  %907 = phi i64 [ %100, %94 ], [ 0, %901 ]
  %908 = phi i32 [ %101, %94 ], [ 0, %901 ]
  store i32 16195, i32* %24, align 8, !tbaa !142
  br label %909

909:                                              ; preds = %94, %904
  %910 = phi i8* [ %96, %94 ], [ %905, %904 ]
  %911 = phi i32 [ %98, %94 ], [ %906, %904 ]
  %912 = phi i64 [ %100, %94 ], [ %907, %904 ]
  %913 = phi i32 [ %101, %94 ], [ %908, %904 ]
  %914 = load i32, i32* %60, align 4, !tbaa !149
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %930, label %916

916:                                              ; preds = %909
  %917 = icmp ugt i32 %914, %911
  %918 = select i1 %917, i32 %911, i32 %914
  %919 = icmp ugt i32 %918, %99
  %920 = select i1 %919, i32 %99, i32 %918
  %921 = icmp eq i32 %920, 0
  br i1 %921, label %2363, label %922

922:                                              ; preds = %916
  %923 = zext i32 %920 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %910, i64 %923, i1 false)
  %924 = sub i32 %911, %920
  %925 = getelementptr inbounds i8, i8* %910, i64 %923
  %926 = sub i32 %99, %920
  %927 = getelementptr inbounds i8, i8* %97, i64 %923
  %928 = load i32, i32* %60, align 4, !tbaa !149
  %929 = sub i32 %928, %920
  store i32 %929, i32* %60, align 4, !tbaa !149
  br label %2235

930:                                              ; preds = %909
  store i32 16191, i32* %24, align 8, !tbaa !142
  br label %2235

931:                                              ; preds = %114
  %932 = add i32 %98, -1
  %933 = getelementptr inbounds i8, i8* %96, i64 1
  %934 = load i8, i8* %96, align 1, !tbaa !4
  %935 = zext i8 %934 to i64
  %936 = shl nuw nsw i64 %935, %115
  %937 = add i64 %936, %100
  %938 = add nuw nsw i64 %115, 8
  %939 = icmp ult i32 %101, 6
  br i1 %939, label %940, label %950, !llvm.loop !252

940:                                              ; preds = %931
  %941 = icmp eq i32 %932, 0
  br i1 %941, label %2309, label %942

942:                                              ; preds = %940
  %943 = add i32 %98, -2
  %944 = getelementptr inbounds i8, i8* %96, i64 2
  %945 = load i8, i8* %933, align 1, !tbaa !4
  %946 = zext i8 %945 to i64
  %947 = shl nuw nsw i64 %946, %938
  %948 = add i64 %947, %937
  %949 = add nuw nsw i64 %115, 16
  br label %950

950:                                              ; preds = %942, %931
  %951 = phi i32 [ %932, %931 ], [ %943, %942 ]
  %952 = phi i8* [ %933, %931 ], [ %944, %942 ]
  %953 = phi i64 [ %937, %931 ], [ %948, %942 ]
  %954 = phi i64 [ %938, %931 ], [ %949, %942 ]
  %955 = trunc i64 %954 to i32
  br label %956

956:                                              ; preds = %950, %112
  %957 = phi i8* [ %96, %112 ], [ %952, %950 ]
  %958 = phi i32 [ %98, %112 ], [ %951, %950 ]
  %959 = phi i64 [ %100, %112 ], [ %953, %950 ]
  %960 = phi i32 [ %101, %112 ], [ %955, %950 ]
  %961 = trunc i64 %959 to i32
  %962 = and i32 %961, 31
  %963 = add nuw nsw i32 %962, 257
  store i32 %963, i32* %61, align 4, !tbaa !152
  %964 = lshr i32 %961, 5
  %965 = and i32 %964, 31
  %966 = add nuw nsw i32 %965, 1
  store i32 %966, i32* %62, align 8, !tbaa !153
  %967 = lshr i32 %961, 10
  %968 = and i32 %967, 15
  %969 = add nuw nsw i32 %968, 4
  store i32 %969, i32* %63, align 8, !tbaa !154
  %970 = lshr i64 %959, 14
  %971 = add i32 %960, -14
  %972 = icmp ugt i32 %962, 29
  %973 = icmp ugt i32 %965, 29
  %974 = select i1 %972, i1 true, i1 %973
  br i1 %974, label %975, label %976

975:                                              ; preds = %956
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.14, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

976:                                              ; preds = %956
  store i32 0, i32* %64, align 4, !tbaa !155
  store i32 16197, i32* %24, align 8, !tbaa !142
  br label %981

977:                                              ; preds = %94
  %978 = load i32, i32* %63, align 8, !tbaa !154
  %979 = load i32, i32* %64, align 4, !tbaa !155
  %980 = icmp ult i32 %979, %978
  br i1 %980, label %981, label %988

981:                                              ; preds = %976, %977
  %982 = phi i32 [ %971, %976 ], [ %101, %977 ]
  %983 = phi i64 [ %970, %976 ], [ %100, %977 ]
  %984 = phi i32 [ %958, %976 ], [ %98, %977 ]
  %985 = phi i8* [ %957, %976 ], [ %96, %977 ]
  %986 = phi i32 [ %969, %976 ], [ %978, %977 ]
  %987 = phi i32 [ 0, %976 ], [ %979, %977 ]
  br label %1014

988:                                              ; preds = %1032, %977
  %989 = phi i8* [ %96, %977 ], [ %1033, %1032 ]
  %990 = phi i32 [ %98, %977 ], [ %1034, %1032 ]
  %991 = phi i64 [ %100, %977 ], [ %1045, %1032 ]
  %992 = phi i32 [ %101, %977 ], [ %1046, %1032 ]
  %993 = phi i32 [ %979, %977 ], [ %1039, %1032 ]
  %994 = icmp ult i32 %993, 19
  br i1 %994, label %995, label %1073

995:                                              ; preds = %988
  %996 = zext i32 %993 to i64
  %997 = sub i32 3, %993
  %998 = and i32 %997, 3
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1010, label %1000

1000:                                             ; preds = %995, %1000
  %1001 = phi i64 [ %1003, %1000 ], [ %996, %995 ]
  %1002 = phi i32 [ %1008, %1000 ], [ 0, %995 ]
  %1003 = add nuw nsw i64 %1001, 1
  %1004 = getelementptr inbounds [19 x i16], [19 x i16]* @inflate.order, i64 0, i64 %1001
  %1005 = load i16, i16* %1004, align 2, !tbaa !60
  %1006 = zext i16 %1005 to i64
  %1007 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1006
  store i16 0, i16* %1007, align 2, !tbaa !60
  %1008 = add i32 %1002, 1
  %1009 = icmp eq i32 %1008, %998
  br i1 %1009, label %1010, label %1000, !llvm.loop !253

1010:                                             ; preds = %1000, %995
  %1011 = phi i64 [ %996, %995 ], [ %1003, %1000 ]
  %1012 = add i32 %993, -16
  %1013 = icmp ult i32 %1012, 3
  br i1 %1013, label %1072, label %1048

1014:                                             ; preds = %981, %1032
  %1015 = phi i32 [ %1039, %1032 ], [ %987, %981 ]
  %1016 = phi i32 [ %1046, %1032 ], [ %982, %981 ]
  %1017 = phi i64 [ %1045, %1032 ], [ %983, %981 ]
  %1018 = phi i32 [ %1034, %1032 ], [ %984, %981 ]
  %1019 = phi i8* [ %1033, %1032 ], [ %985, %981 ]
  %1020 = icmp ult i32 %1016, 3
  br i1 %1020, label %1021, label %1032

1021:                                             ; preds = %1014
  %1022 = icmp eq i32 %1018, 0
  br i1 %1022, label %2370, label %1023

1023:                                             ; preds = %1021
  %1024 = add i32 %1018, -1
  %1025 = getelementptr inbounds i8, i8* %1019, i64 1
  %1026 = load i8, i8* %1019, align 1, !tbaa !4
  %1027 = zext i8 %1026 to i64
  %1028 = zext i32 %1016 to i64
  %1029 = shl nuw nsw i64 %1027, %1028
  %1030 = add i64 %1029, %1017
  %1031 = add nuw nsw i32 %1016, 8
  br label %1032

1032:                                             ; preds = %1023, %1014
  %1033 = phi i8* [ %1025, %1023 ], [ %1019, %1014 ]
  %1034 = phi i32 [ %1024, %1023 ], [ %1018, %1014 ]
  %1035 = phi i64 [ %1030, %1023 ], [ %1017, %1014 ]
  %1036 = phi i32 [ %1031, %1023 ], [ %1016, %1014 ]
  %1037 = trunc i64 %1035 to i16
  %1038 = and i16 %1037, 7
  %1039 = add nuw i32 %1015, 1
  store i32 %1039, i32* %64, align 4, !tbaa !155
  %1040 = zext i32 %1015 to i64
  %1041 = getelementptr inbounds [19 x i16], [19 x i16]* @inflate.order, i64 0, i64 %1040
  %1042 = load i16, i16* %1041, align 2, !tbaa !60
  %1043 = zext i16 %1042 to i64
  %1044 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1043
  store i16 %1038, i16* %1044, align 2, !tbaa !60
  %1045 = lshr i64 %1035, 3
  %1046 = add i32 %1036, -3
  %1047 = icmp ult i32 %1039, %986
  br i1 %1047, label %1014, label %988, !llvm.loop !254

1048:                                             ; preds = %1010, %1048
  %1049 = phi i64 [ %1065, %1048 ], [ %1011, %1010 ]
  %1050 = add nuw nsw i64 %1049, 1
  %1051 = getelementptr inbounds [19 x i16], [19 x i16]* @inflate.order, i64 0, i64 %1049
  %1052 = load i16, i16* %1051, align 2, !tbaa !60
  %1053 = zext i16 %1052 to i64
  %1054 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1053
  store i16 0, i16* %1054, align 2, !tbaa !60
  %1055 = add nuw nsw i64 %1049, 2
  %1056 = getelementptr inbounds [19 x i16], [19 x i16]* @inflate.order, i64 0, i64 %1050
  %1057 = load i16, i16* %1056, align 2, !tbaa !60
  %1058 = zext i16 %1057 to i64
  %1059 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1058
  store i16 0, i16* %1059, align 2, !tbaa !60
  %1060 = add nuw nsw i64 %1049, 3
  %1061 = getelementptr inbounds [19 x i16], [19 x i16]* @inflate.order, i64 0, i64 %1055
  %1062 = load i16, i16* %1061, align 2, !tbaa !60
  %1063 = zext i16 %1062 to i64
  %1064 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1063
  store i16 0, i16* %1064, align 2, !tbaa !60
  %1065 = add nuw nsw i64 %1049, 4
  %1066 = getelementptr inbounds [19 x i16], [19 x i16]* @inflate.order, i64 0, i64 %1060
  %1067 = load i16, i16* %1066, align 2, !tbaa !60
  %1068 = zext i16 %1067 to i64
  %1069 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1068
  store i16 0, i16* %1069, align 2, !tbaa !60
  %1070 = trunc i64 %1065 to i32
  %1071 = icmp eq i32 %1070, 19
  br i1 %1071, label %1072, label %1048, !llvm.loop !255

1072:                                             ; preds = %1048, %1010
  store i32 19, i32* %64, align 4, !tbaa !155
  br label %1073

1073:                                             ; preds = %1072, %988
  store %struct.code* %65, %struct.code** %66, align 8, !tbaa !159
  store %struct.code* %65, %struct.code** %67, align 8, !tbaa !144
  store i32 7, i32* %68, align 8, !tbaa !145
  %1074 = call i32 @inflate_table(i32 noundef 0, i16* noundef nonnull %69, i32 noundef 19, %struct.code** noundef nonnull %66, i32* noundef nonnull %68, i16* noundef nonnull %70) #25
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1077, label %1076

1076:                                             ; preds = %1073
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.15, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1077:                                             ; preds = %1073
  store i32 0, i32* %64, align 4, !tbaa !155
  store i32 16198, i32* %24, align 8, !tbaa !142
  br label %1078

1078:                                             ; preds = %108, %1077
  %1079 = phi i32 [ %109, %108 ], [ 0, %1077 ]
  %1080 = phi i8* [ %96, %108 ], [ %989, %1077 ]
  %1081 = phi i32 [ %98, %108 ], [ %990, %1077 ]
  %1082 = phi i64 [ %100, %108 ], [ %991, %1077 ]
  %1083 = phi i32 [ %101, %108 ], [ %992, %1077 ]
  %1084 = phi i32 [ %103, %108 ], [ 0, %1077 ]
  %1085 = load i32, i32* %61, align 4, !tbaa !152
  %1086 = load i32, i32* %62, align 8, !tbaa !153
  %1087 = add i32 %1086, %1085
  %1088 = icmp ult i32 %1079, %1087
  br i1 %1088, label %1089, label %1402

1089:                                             ; preds = %1078
  %1090 = load %struct.code*, %struct.code** %67, align 8, !tbaa !144
  %1091 = load i32, i32* %68, align 8, !tbaa !145
  %1092 = shl nsw i32 -1, %1091
  %1093 = xor i32 %1092, -1
  br label %1094

1094:                                             ; preds = %1089, %1395
  %1095 = phi i32 [ %1079, %1089 ], [ %1396, %1395 ]
  %1096 = phi i32 [ %1083, %1089 ], [ %1400, %1395 ]
  %1097 = phi i64 [ %1082, %1089 ], [ %1399, %1395 ]
  %1098 = phi i32 [ %1081, %1089 ], [ %1398, %1395 ]
  %1099 = phi i8* [ %1080, %1089 ], [ %1397, %1395 ]
  %1100 = trunc i64 %1097 to i32
  %1101 = and i32 %1093, %1100
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr inbounds %struct.code, %struct.code* %1090, i64 %1102, i32 1
  %1104 = load i8, i8* %1103, align 1, !tbaa.struct !160
  %1105 = zext i8 %1104 to i32
  %1106 = icmp ult i32 %1096, %1105
  br i1 %1106, label %1107, label %1134

1107:                                             ; preds = %1094
  %1108 = zext i32 %1096 to i64
  br label %1109

1109:                                             ; preds = %1107, %1115
  %1110 = phi i64 [ %1108, %1107 ], [ %1122, %1115 ]
  %1111 = phi i64 [ %1097, %1107 ], [ %1121, %1115 ]
  %1112 = phi i32 [ %1098, %1107 ], [ %1116, %1115 ]
  %1113 = phi i8* [ %1099, %1107 ], [ %1117, %1115 ]
  %1114 = icmp eq i32 %1112, 0
  br i1 %1114, label %2328, label %1115

1115:                                             ; preds = %1109
  %1116 = add i32 %1112, -1
  %1117 = getelementptr inbounds i8, i8* %1113, i64 1
  %1118 = load i8, i8* %1113, align 1, !tbaa !4
  %1119 = zext i8 %1118 to i64
  %1120 = shl i64 %1119, %1110
  %1121 = add i64 %1120, %1111
  %1122 = add nuw nsw i64 %1110, 8
  %1123 = trunc i64 %1121 to i32
  %1124 = and i32 %1093, %1123
  %1125 = zext i32 %1124 to i64
  %1126 = getelementptr inbounds %struct.code, %struct.code* %1090, i64 %1125, i32 1
  %1127 = load i8, i8* %1126, align 1, !tbaa.struct !160
  %1128 = zext i8 %1127 to i64
  %1129 = icmp ult i64 %1122, %1128
  br i1 %1129, label %1109, label %1130

1130:                                             ; preds = %1115
  %1131 = zext i32 %1124 to i64
  %1132 = zext i8 %1127 to i32
  %1133 = trunc i64 %1122 to i32
  br label %1134

1134:                                             ; preds = %1130, %1094
  %1135 = phi i32 [ %1132, %1130 ], [ %1105, %1094 ]
  %1136 = phi i64 [ %1131, %1130 ], [ %1102, %1094 ]
  %1137 = phi i8 [ %1127, %1130 ], [ %1104, %1094 ]
  %1138 = phi i8* [ %1117, %1130 ], [ %1099, %1094 ]
  %1139 = phi i32 [ %1116, %1130 ], [ %1098, %1094 ]
  %1140 = phi i64 [ %1121, %1130 ], [ %1097, %1094 ]
  %1141 = phi i32 [ %1133, %1130 ], [ %1096, %1094 ]
  %1142 = getelementptr inbounds %struct.code, %struct.code* %1090, i64 %1136, i32 2
  %1143 = load i16, i16* %1142, align 2, !tbaa.struct !170
  %1144 = icmp ult i16 %1143, 16
  br i1 %1144, label %1145, label %1152

1145:                                             ; preds = %1134
  %1146 = zext i8 %1137 to i64
  %1147 = lshr i64 %1140, %1146
  %1148 = sub i32 %1141, %1135
  %1149 = add i32 %1095, 1
  store i32 %1149, i32* %64, align 4, !tbaa !155
  %1150 = zext i32 %1095 to i64
  %1151 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1150
  store i16 %1143, i16* %1151, align 2, !tbaa !60
  br label %1395

1152:                                             ; preds = %1134
  switch i16 %1143, label %1165 [
    i16 16, label %1159
    i16 17, label %1153
  ]

1153:                                             ; preds = %1152
  %1154 = add nuw nsw i32 %1135, 3
  %1155 = icmp ult i32 %1141, %1154
  br i1 %1155, label %1156, label %1225

1156:                                             ; preds = %1153
  %1157 = zext i32 %1141 to i64
  %1158 = zext i32 %1154 to i64
  br label %1208

1159:                                             ; preds = %1152
  %1160 = add nuw nsw i32 %1135, 2
  %1161 = icmp ult i32 %1141, %1160
  br i1 %1161, label %1162, label %1188

1162:                                             ; preds = %1159
  %1163 = zext i32 %1141 to i64
  %1164 = zext i32 %1160 to i64
  br label %1171

1165:                                             ; preds = %1152
  %1166 = add nuw nsw i32 %1135, 7
  %1167 = icmp ult i32 %1141, %1166
  br i1 %1167, label %1168, label %1255

1168:                                             ; preds = %1165
  %1169 = zext i32 %1141 to i64
  %1170 = zext i32 %1166 to i64
  br label %1238

1171:                                             ; preds = %1162, %1177
  %1172 = phi i64 [ %1163, %1162 ], [ %1184, %1177 ]
  %1173 = phi i64 [ %1140, %1162 ], [ %1183, %1177 ]
  %1174 = phi i32 [ %1139, %1162 ], [ %1178, %1177 ]
  %1175 = phi i8* [ %1138, %1162 ], [ %1179, %1177 ]
  %1176 = icmp eq i32 %1174, 0
  br i1 %1176, label %2247, label %1177

1177:                                             ; preds = %1171
  %1178 = add i32 %1174, -1
  %1179 = getelementptr inbounds i8, i8* %1175, i64 1
  %1180 = load i8, i8* %1175, align 1, !tbaa !4
  %1181 = zext i8 %1180 to i64
  %1182 = shl i64 %1181, %1172
  %1183 = add i64 %1182, %1173
  %1184 = add nuw nsw i64 %1172, 8
  %1185 = icmp ult i64 %1184, %1164
  br i1 %1185, label %1171, label %1186, !llvm.loop !256

1186:                                             ; preds = %1177
  %1187 = trunc i64 %1184 to i32
  br label %1188

1188:                                             ; preds = %1186, %1159
  %1189 = phi i8* [ %1138, %1159 ], [ %1179, %1186 ]
  %1190 = phi i32 [ %1139, %1159 ], [ %1178, %1186 ]
  %1191 = phi i64 [ %1140, %1159 ], [ %1183, %1186 ]
  %1192 = phi i32 [ %1141, %1159 ], [ %1187, %1186 ]
  %1193 = zext i8 %1137 to i64
  %1194 = lshr i64 %1191, %1193
  %1195 = sub i32 %1192, %1135
  %1196 = icmp eq i32 %1095, 0
  br i1 %1196, label %1197, label %1198

1197:                                             ; preds = %1188
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10.16, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1198:                                             ; preds = %1188
  %1199 = add i32 %1095, -1
  %1200 = zext i32 %1199 to i64
  %1201 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1200
  %1202 = load i16, i16* %1201, align 2, !tbaa !60
  %1203 = trunc i64 %1194 to i32
  %1204 = and i32 %1203, 3
  %1205 = add nuw nsw i32 %1204, 3
  %1206 = lshr i64 %1194, 2
  %1207 = add i32 %1195, -2
  br label %1268

1208:                                             ; preds = %1156, %1214
  %1209 = phi i64 [ %1157, %1156 ], [ %1221, %1214 ]
  %1210 = phi i64 [ %1140, %1156 ], [ %1220, %1214 ]
  %1211 = phi i32 [ %1139, %1156 ], [ %1215, %1214 ]
  %1212 = phi i8* [ %1138, %1156 ], [ %1216, %1214 ]
  %1213 = icmp eq i32 %1211, 0
  br i1 %1213, label %2249, label %1214

1214:                                             ; preds = %1208
  %1215 = add i32 %1211, -1
  %1216 = getelementptr inbounds i8, i8* %1212, i64 1
  %1217 = load i8, i8* %1212, align 1, !tbaa !4
  %1218 = zext i8 %1217 to i64
  %1219 = shl i64 %1218, %1209
  %1220 = add i64 %1219, %1210
  %1221 = add nuw nsw i64 %1209, 8
  %1222 = icmp ult i64 %1221, %1158
  br i1 %1222, label %1208, label %1223, !llvm.loop !257

1223:                                             ; preds = %1214
  %1224 = trunc i64 %1221 to i32
  br label %1225

1225:                                             ; preds = %1223, %1153
  %1226 = phi i8* [ %1138, %1153 ], [ %1216, %1223 ]
  %1227 = phi i32 [ %1139, %1153 ], [ %1215, %1223 ]
  %1228 = phi i64 [ %1140, %1153 ], [ %1220, %1223 ]
  %1229 = phi i32 [ %1141, %1153 ], [ %1224, %1223 ]
  %1230 = zext i8 %1137 to i64
  %1231 = lshr i64 %1228, %1230
  %1232 = trunc i64 %1231 to i32
  %1233 = and i32 %1232, 7
  %1234 = add nuw nsw i32 %1233, 3
  %1235 = lshr i64 %1231, 3
  %1236 = sub nuw nsw i32 -3, %1135
  %1237 = add i32 %1236, %1229
  br label %1268

1238:                                             ; preds = %1168, %1244
  %1239 = phi i64 [ %1169, %1168 ], [ %1251, %1244 ]
  %1240 = phi i64 [ %1140, %1168 ], [ %1250, %1244 ]
  %1241 = phi i32 [ %1139, %1168 ], [ %1245, %1244 ]
  %1242 = phi i8* [ %1138, %1168 ], [ %1246, %1244 ]
  %1243 = icmp eq i32 %1241, 0
  br i1 %1243, label %2245, label %1244

1244:                                             ; preds = %1238
  %1245 = add i32 %1241, -1
  %1246 = getelementptr inbounds i8, i8* %1242, i64 1
  %1247 = load i8, i8* %1242, align 1, !tbaa !4
  %1248 = zext i8 %1247 to i64
  %1249 = shl i64 %1248, %1239
  %1250 = add i64 %1249, %1240
  %1251 = add nuw nsw i64 %1239, 8
  %1252 = icmp ult i64 %1251, %1170
  br i1 %1252, label %1238, label %1253, !llvm.loop !258

1253:                                             ; preds = %1244
  %1254 = trunc i64 %1251 to i32
  br label %1255

1255:                                             ; preds = %1253, %1165
  %1256 = phi i8* [ %1138, %1165 ], [ %1246, %1253 ]
  %1257 = phi i32 [ %1139, %1165 ], [ %1245, %1253 ]
  %1258 = phi i64 [ %1140, %1165 ], [ %1250, %1253 ]
  %1259 = phi i32 [ %1141, %1165 ], [ %1254, %1253 ]
  %1260 = zext i8 %1137 to i64
  %1261 = lshr i64 %1258, %1260
  %1262 = trunc i64 %1261 to i32
  %1263 = and i32 %1262, 127
  %1264 = add nuw nsw i32 %1263, 11
  %1265 = lshr i64 %1261, 7
  %1266 = sub nuw nsw i32 -7, %1135
  %1267 = add i32 %1266, %1259
  br label %1268

1268:                                             ; preds = %1225, %1255, %1198
  %1269 = phi i8* [ %1189, %1198 ], [ %1226, %1225 ], [ %1256, %1255 ]
  %1270 = phi i32 [ %1190, %1198 ], [ %1227, %1225 ], [ %1257, %1255 ]
  %1271 = phi i64 [ %1206, %1198 ], [ %1235, %1225 ], [ %1265, %1255 ]
  %1272 = phi i32 [ %1207, %1198 ], [ %1237, %1225 ], [ %1267, %1255 ]
  %1273 = phi i32 [ %1205, %1198 ], [ %1234, %1225 ], [ %1264, %1255 ]
  %1274 = phi i16 [ %1202, %1198 ], [ 0, %1225 ], [ 0, %1255 ]
  %1275 = add i32 %1273, %1095
  %1276 = icmp ugt i32 %1275, %1087
  br i1 %1276, label %1375, label %1277

1277:                                             ; preds = %1268
  %1278 = icmp ult i32 %1273, 16
  br i1 %1278, label %1354, label %1279

1279:                                             ; preds = %1277
  %1280 = add nsw i32 %1273, -1
  %1281 = xor i32 %1095, -1
  %1282 = icmp ugt i32 %1280, %1281
  br i1 %1282, label %1354, label %1283

1283:                                             ; preds = %1279
  %1284 = and i32 %1273, -16
  %1285 = and i32 %1273, 15
  %1286 = add i32 %1095, %1284
  %1287 = insertelement <8 x i16> poison, i16 %1274, i64 0
  %1288 = shufflevector <8 x i16> %1287, <8 x i16> poison, <8 x i32> zeroinitializer
  %1289 = insertelement <8 x i16> poison, i16 %1274, i64 0
  %1290 = shufflevector <8 x i16> %1289, <8 x i16> poison, <8 x i32> zeroinitializer
  %1291 = zext i32 %1095 to i64
  %1292 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1291
  %1293 = bitcast i16* %1292 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1293, align 2, !tbaa !60
  %1294 = getelementptr inbounds i16, i16* %1292, i64 8
  %1295 = bitcast i16* %1294 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1295, align 2, !tbaa !60
  %1296 = icmp eq i32 %1284, 16
  br i1 %1296, label %1352, label %1297, !llvm.loop !259

1297:                                             ; preds = %1283
  %1298 = add i32 %1095, 16
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1299
  %1301 = bitcast i16* %1300 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1301, align 2, !tbaa !60
  %1302 = getelementptr inbounds i16, i16* %1300, i64 8
  %1303 = bitcast i16* %1302 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1303, align 2, !tbaa !60
  %1304 = icmp eq i32 %1284, 32
  br i1 %1304, label %1352, label %1305, !llvm.loop !259

1305:                                             ; preds = %1297
  %1306 = add i32 %1095, 32
  %1307 = zext i32 %1306 to i64
  %1308 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1307
  %1309 = bitcast i16* %1308 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1309, align 2, !tbaa !60
  %1310 = getelementptr inbounds i16, i16* %1308, i64 8
  %1311 = bitcast i16* %1310 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1311, align 2, !tbaa !60
  %1312 = icmp eq i32 %1284, 48
  br i1 %1312, label %1352, label %1313, !llvm.loop !259

1313:                                             ; preds = %1305
  %1314 = add i32 %1095, 48
  %1315 = zext i32 %1314 to i64
  %1316 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1315
  %1317 = bitcast i16* %1316 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1317, align 2, !tbaa !60
  %1318 = getelementptr inbounds i16, i16* %1316, i64 8
  %1319 = bitcast i16* %1318 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1319, align 2, !tbaa !60
  %1320 = icmp eq i32 %1284, 64
  br i1 %1320, label %1352, label %1321, !llvm.loop !259

1321:                                             ; preds = %1313
  %1322 = add i32 %1095, 64
  %1323 = zext i32 %1322 to i64
  %1324 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1323
  %1325 = bitcast i16* %1324 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1325, align 2, !tbaa !60
  %1326 = getelementptr inbounds i16, i16* %1324, i64 8
  %1327 = bitcast i16* %1326 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1327, align 2, !tbaa !60
  %1328 = icmp eq i32 %1284, 80
  br i1 %1328, label %1352, label %1329, !llvm.loop !259

1329:                                             ; preds = %1321
  %1330 = add i32 %1095, 80
  %1331 = zext i32 %1330 to i64
  %1332 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1331
  %1333 = bitcast i16* %1332 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1333, align 2, !tbaa !60
  %1334 = getelementptr inbounds i16, i16* %1332, i64 8
  %1335 = bitcast i16* %1334 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1335, align 2, !tbaa !60
  %1336 = icmp eq i32 %1284, 96
  br i1 %1336, label %1352, label %1337, !llvm.loop !259

1337:                                             ; preds = %1329
  %1338 = add i32 %1095, 96
  %1339 = zext i32 %1338 to i64
  %1340 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1339
  %1341 = bitcast i16* %1340 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1341, align 2, !tbaa !60
  %1342 = getelementptr inbounds i16, i16* %1340, i64 8
  %1343 = bitcast i16* %1342 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1343, align 2, !tbaa !60
  %1344 = icmp eq i32 %1284, 112
  br i1 %1344, label %1352, label %1345, !llvm.loop !259

1345:                                             ; preds = %1337
  %1346 = add i32 %1095, 112
  %1347 = zext i32 %1346 to i64
  %1348 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1347
  %1349 = bitcast i16* %1348 to <8 x i16>*
  store <8 x i16> %1288, <8 x i16>* %1349, align 2, !tbaa !60
  %1350 = getelementptr inbounds i16, i16* %1348, i64 8
  %1351 = bitcast i16* %1350 to <8 x i16>*
  store <8 x i16> %1290, <8 x i16>* %1351, align 2, !tbaa !60
  br label %1352

1352:                                             ; preds = %1345, %1337, %1329, %1321, %1313, %1305, %1297, %1283
  %1353 = icmp eq i32 %1273, %1284
  br i1 %1353, label %1393, label %1354

1354:                                             ; preds = %1279, %1277, %1352
  %1355 = phi i32 [ %1273, %1279 ], [ %1273, %1277 ], [ %1285, %1352 ]
  %1356 = phi i32 [ %1095, %1279 ], [ %1095, %1277 ], [ %1286, %1352 ]
  %1357 = add nsw i32 %1355, -1
  %1358 = and i32 %1355, 3
  %1359 = icmp eq i32 %1358, 0
  br i1 %1359, label %1370, label %1360

1360:                                             ; preds = %1354, %1360
  %1361 = phi i32 [ %1364, %1360 ], [ %1355, %1354 ]
  %1362 = phi i32 [ %1365, %1360 ], [ %1356, %1354 ]
  %1363 = phi i32 [ %1368, %1360 ], [ 0, %1354 ]
  %1364 = add nsw i32 %1361, -1
  %1365 = add i32 %1362, 1
  %1366 = zext i32 %1362 to i64
  %1367 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1366
  store i16 %1274, i16* %1367, align 2, !tbaa !60
  %1368 = add i32 %1363, 1
  %1369 = icmp eq i32 %1368, %1358
  br i1 %1369, label %1370, label %1360, !llvm.loop !260

1370:                                             ; preds = %1360, %1354
  %1371 = phi i32 [ undef, %1354 ], [ %1365, %1360 ]
  %1372 = phi i32 [ %1355, %1354 ], [ %1364, %1360 ]
  %1373 = phi i32 [ %1356, %1354 ], [ %1365, %1360 ]
  %1374 = icmp ult i32 %1357, 3
  br i1 %1374, label %1393, label %1376

1375:                                             ; preds = %1268
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10.16, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1376:                                             ; preds = %1370, %1376
  %1377 = phi i32 [ %1388, %1376 ], [ %1372, %1370 ]
  %1378 = phi i32 [ %1389, %1376 ], [ %1373, %1370 ]
  %1379 = add i32 %1378, 1
  %1380 = zext i32 %1378 to i64
  %1381 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1380
  store i16 %1274, i16* %1381, align 2, !tbaa !60
  %1382 = add i32 %1378, 2
  %1383 = zext i32 %1379 to i64
  %1384 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1383
  store i16 %1274, i16* %1384, align 2, !tbaa !60
  %1385 = add i32 %1378, 3
  %1386 = zext i32 %1382 to i64
  %1387 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1386
  store i16 %1274, i16* %1387, align 2, !tbaa !60
  %1388 = add nsw i32 %1377, -4
  %1389 = add i32 %1378, 4
  %1390 = zext i32 %1385 to i64
  %1391 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1390
  store i16 %1274, i16* %1391, align 2, !tbaa !60
  %1392 = icmp eq i32 %1388, 0
  br i1 %1392, label %1393, label %1376, !llvm.loop !261

1393:                                             ; preds = %1370, %1376, %1352
  %1394 = phi i32 [ %1286, %1352 ], [ %1371, %1370 ], [ %1389, %1376 ]
  store i32 %1394, i32* %64, align 4, !tbaa !155
  br label %1395

1395:                                             ; preds = %1393, %1145
  %1396 = phi i32 [ %1149, %1145 ], [ %1394, %1393 ]
  %1397 = phi i8* [ %1138, %1145 ], [ %1269, %1393 ]
  %1398 = phi i32 [ %1139, %1145 ], [ %1270, %1393 ]
  %1399 = phi i64 [ %1147, %1145 ], [ %1271, %1393 ]
  %1400 = phi i32 [ %1148, %1145 ], [ %1272, %1393 ]
  %1401 = icmp ult i32 %1396, %1087
  br i1 %1401, label %1094, label %1402, !llvm.loop !262

1402:                                             ; preds = %1395, %1078
  %1403 = phi i8* [ %1080, %1078 ], [ %1397, %1395 ]
  %1404 = phi i32 [ %1081, %1078 ], [ %1398, %1395 ]
  %1405 = phi i64 [ %1082, %1078 ], [ %1399, %1395 ]
  %1406 = phi i32 [ %1083, %1078 ], [ %1400, %1395 ]
  %1407 = load i16, i16* %71, align 8, !tbaa !60
  %1408 = icmp eq i16 %1407, 0
  br i1 %1408, label %1409, label %1410

1409:                                             ; preds = %1402
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.17, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1410:                                             ; preds = %1402
  store %struct.code* %65, %struct.code** %66, align 8, !tbaa !159
  store %struct.code* %65, %struct.code** %67, align 8, !tbaa !144
  store i32 9, i32* %68, align 8, !tbaa !145
  %1411 = call i32 @inflate_table(i32 noundef 1, i16* noundef nonnull %69, i32 noundef %1085, %struct.code** noundef nonnull %66, i32* noundef nonnull %68, i16* noundef nonnull %70) #25
  %1412 = icmp eq i32 %1411, 0
  br i1 %1412, label %1414, label %1413

1413:                                             ; preds = %1410
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1414:                                             ; preds = %1410
  %1415 = load %struct.code*, %struct.code** %66, align 8, !tbaa !159
  store %struct.code* %1415, %struct.code** %72, align 8, !tbaa !146
  store i32 6, i32* %73, align 4, !tbaa !147
  %1416 = load i32, i32* %61, align 4, !tbaa !152
  %1417 = zext i32 %1416 to i64
  %1418 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %17, i64 0, i32 29, i64 %1417
  %1419 = load i32, i32* %62, align 8, !tbaa !153
  %1420 = call i32 @inflate_table(i32 noundef 2, i16* noundef nonnull %1418, i32 noundef %1419, %struct.code** noundef nonnull %66, i32* noundef nonnull %73, i16* noundef nonnull %70) #25
  %1421 = icmp eq i32 %1420, 0
  br i1 %1421, label %1423, label %1422

1422:                                             ; preds = %1414
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1423:                                             ; preds = %1414
  store i32 16199, i32* %24, align 8, !tbaa !142
  br i1 %74, label %2363, label %1424

1424:                                             ; preds = %1423, %94
  %1425 = phi i8* [ %96, %94 ], [ %1403, %1423 ]
  %1426 = phi i32 [ %98, %94 ], [ %1404, %1423 ]
  %1427 = phi i64 [ %100, %94 ], [ %1405, %1423 ]
  %1428 = phi i32 [ %101, %94 ], [ %1406, %1423 ]
  %1429 = phi i32 [ %103, %94 ], [ 0, %1423 ]
  store i32 16200, i32* %24, align 8, !tbaa !142
  br label %1430

1430:                                             ; preds = %94, %1424
  %1431 = phi i8* [ %96, %94 ], [ %1425, %1424 ]
  %1432 = phi i32 [ %98, %94 ], [ %1426, %1424 ]
  %1433 = phi i64 [ %100, %94 ], [ %1427, %1424 ]
  %1434 = phi i32 [ %101, %94 ], [ %1428, %1424 ]
  %1435 = phi i32 [ %103, %94 ], [ %1429, %1424 ]
  %1436 = icmp ugt i32 %1432, 5
  %1437 = icmp ugt i32 %99, 257
  %1438 = select i1 %1436, i1 %1437, i1 false
  br i1 %1438, label %1439, label %1449

1439:                                             ; preds = %1430
  store i8* %97, i8** %29, align 8, !tbaa !87
  store i32 %99, i32* %45, align 8, !tbaa !86
  store i8* %1431, i8** %33, align 8, !tbaa !89
  store i32 %1432, i32* %47, align 8, !tbaa !84
  store i64 %1433, i64* %49, align 8, !tbaa !168
  store i32 %1434, i32* %51, align 8, !tbaa !169
  call void @inflate_fast(%struct.z_stream_s* noundef nonnull %0, i32 noundef %102) #25
  %1440 = load i8*, i8** %29, align 8, !tbaa !87
  %1441 = load i32, i32* %45, align 8, !tbaa !86
  %1442 = load i8*, i8** %33, align 8, !tbaa !89
  %1443 = load i32, i32* %47, align 8, !tbaa !84
  %1444 = load i64, i64* %49, align 8, !tbaa !168
  %1445 = load i32, i32* %51, align 8, !tbaa !169
  %1446 = load i32, i32* %24, align 8, !tbaa !142
  %1447 = icmp eq i32 %1446, 16191
  br i1 %1447, label %1448, label %2235

1448:                                             ; preds = %1439
  store i32 -1, i32* %75, align 4, !tbaa !235
  br label %2235

1449:                                             ; preds = %1430
  store i32 0, i32* %75, align 4, !tbaa !235
  %1450 = load %struct.code*, %struct.code** %67, align 8, !tbaa !144
  %1451 = load i32, i32* %68, align 8, !tbaa !145
  %1452 = shl nsw i32 -1, %1451
  %1453 = xor i32 %1452, -1
  %1454 = trunc i64 %1433 to i32
  %1455 = and i32 %1453, %1454
  %1456 = zext i32 %1455 to i64
  %1457 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1456, i32 1
  %1458 = load i8, i8* %1457, align 1, !tbaa.struct !160
  %1459 = zext i8 %1458 to i32
  %1460 = icmp ult i32 %1434, %1459
  br i1 %1460, label %1461, label %1488

1461:                                             ; preds = %1449
  %1462 = zext i32 %1434 to i64
  br label %1463

1463:                                             ; preds = %1461, %1469
  %1464 = phi i64 [ %1462, %1461 ], [ %1476, %1469 ]
  %1465 = phi i64 [ %1433, %1461 ], [ %1475, %1469 ]
  %1466 = phi i32 [ %1432, %1461 ], [ %1470, %1469 ]
  %1467 = phi i8* [ %1431, %1461 ], [ %1471, %1469 ]
  %1468 = icmp eq i32 %1466, 0
  br i1 %1468, label %2358, label %1469

1469:                                             ; preds = %1463
  %1470 = add i32 %1466, -1
  %1471 = getelementptr inbounds i8, i8* %1467, i64 1
  %1472 = load i8, i8* %1467, align 1, !tbaa !4
  %1473 = zext i8 %1472 to i64
  %1474 = shl i64 %1473, %1464
  %1475 = add i64 %1474, %1465
  %1476 = add nuw nsw i64 %1464, 8
  %1477 = trunc i64 %1475 to i32
  %1478 = and i32 %1453, %1477
  %1479 = zext i32 %1478 to i64
  %1480 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1479, i32 1
  %1481 = load i8, i8* %1480, align 1, !tbaa.struct !160
  %1482 = zext i8 %1481 to i64
  %1483 = icmp ult i64 %1476, %1482
  br i1 %1483, label %1463, label %1484

1484:                                             ; preds = %1469
  %1485 = zext i32 %1478 to i64
  %1486 = zext i8 %1481 to i32
  %1487 = trunc i64 %1476 to i32
  br label %1488

1488:                                             ; preds = %1484, %1449
  %1489 = phi i32 [ %1486, %1484 ], [ %1459, %1449 ]
  %1490 = phi i64 [ %1485, %1484 ], [ %1456, %1449 ]
  %1491 = phi i8 [ %1481, %1484 ], [ %1458, %1449 ]
  %1492 = phi i8* [ %1471, %1484 ], [ %1431, %1449 ]
  %1493 = phi i32 [ %1470, %1484 ], [ %1432, %1449 ]
  %1494 = phi i64 [ %1475, %1484 ], [ %1433, %1449 ]
  %1495 = phi i32 [ %1487, %1484 ], [ %1434, %1449 ]
  %1496 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1490, i32 0
  %1497 = load i8, i8* %1496, align 2, !tbaa.struct !171
  %1498 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1490, i32 2
  %1499 = load i16, i16* %1498, align 2, !tbaa.struct !170
  %1500 = zext i8 %1497 to i32
  %1501 = icmp ne i8 %1497, 0
  %1502 = and i32 %1500, 240
  %1503 = icmp eq i32 %1502, 0
  %1504 = select i1 %1501, i1 %1503, i1 false
  br i1 %1504, label %1505, label %1567

1505:                                             ; preds = %1488
  %1506 = zext i16 %1499 to i32
  %1507 = add nuw nsw i32 %1489, %1500
  %1508 = shl nsw i32 -1, %1507
  %1509 = xor i32 %1508, -1
  %1510 = trunc i64 %1494 to i32
  %1511 = and i32 %1510, %1509
  %1512 = lshr i32 %1511, %1489
  %1513 = add i32 %1512, %1506
  %1514 = zext i32 %1513 to i64
  %1515 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1514, i32 1
  %1516 = load i8, i8* %1515, align 1, !tbaa.struct !160
  %1517 = zext i8 %1516 to i32
  %1518 = add nuw nsw i32 %1489, %1517
  %1519 = icmp ugt i32 %1518, %1495
  br i1 %1519, label %1520, label %1551

1520:                                             ; preds = %1505
  %1521 = zext i32 %1495 to i64
  br label %1522

1522:                                             ; preds = %1520, %1528
  %1523 = phi i64 [ %1521, %1520 ], [ %1535, %1528 ]
  %1524 = phi i64 [ %1494, %1520 ], [ %1534, %1528 ]
  %1525 = phi i32 [ %1493, %1520 ], [ %1529, %1528 ]
  %1526 = phi i8* [ %1492, %1520 ], [ %1530, %1528 ]
  %1527 = icmp eq i32 %1525, 0
  br i1 %1527, label %2353, label %1528

1528:                                             ; preds = %1522
  %1529 = add i32 %1525, -1
  %1530 = getelementptr inbounds i8, i8* %1526, i64 1
  %1531 = load i8, i8* %1526, align 1, !tbaa !4
  %1532 = zext i8 %1531 to i64
  %1533 = shl i64 %1532, %1523
  %1534 = add i64 %1533, %1524
  %1535 = add nuw nsw i64 %1523, 8
  %1536 = trunc i64 %1534 to i32
  %1537 = and i32 %1536, %1509
  %1538 = lshr i32 %1537, %1489
  %1539 = add i32 %1538, %1506
  %1540 = zext i32 %1539 to i64
  %1541 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1540, i32 1
  %1542 = load i8, i8* %1541, align 1, !tbaa.struct !160
  %1543 = zext i8 %1542 to i32
  %1544 = add nuw nsw i32 %1489, %1543
  %1545 = zext i32 %1544 to i64
  %1546 = icmp ult i64 %1535, %1545
  br i1 %1546, label %1522, label %1547

1547:                                             ; preds = %1528
  %1548 = zext i32 %1539 to i64
  %1549 = zext i8 %1542 to i32
  %1550 = trunc i64 %1535 to i32
  br label %1551

1551:                                             ; preds = %1547, %1505
  %1552 = phi i32 [ %1549, %1547 ], [ %1517, %1505 ]
  %1553 = phi i64 [ %1548, %1547 ], [ %1514, %1505 ]
  %1554 = phi i8* [ %1530, %1547 ], [ %1492, %1505 ]
  %1555 = phi i32 [ %1529, %1547 ], [ %1493, %1505 ]
  %1556 = phi i64 [ %1534, %1547 ], [ %1494, %1505 ]
  %1557 = phi i32 [ %1550, %1547 ], [ %1495, %1505 ]
  %1558 = phi i8 [ %1542, %1547 ], [ %1516, %1505 ]
  %1559 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1553, i32 2
  %1560 = load i16, i16* %1559, align 2, !tbaa.struct !170
  %1561 = getelementptr inbounds %struct.code, %struct.code* %1450, i64 %1553, i32 0
  %1562 = load i8, i8* %1561, align 2, !tbaa.struct !171
  %1563 = zext i8 %1491 to i64
  %1564 = lshr i64 %1556, %1563
  %1565 = sub i32 %1557, %1489
  %1566 = zext i8 %1562 to i32
  br label %1567

1567:                                             ; preds = %1488, %1551
  %1568 = phi i32 [ %1500, %1488 ], [ %1566, %1551 ]
  %1569 = phi i32 [ %1489, %1488 ], [ %1552, %1551 ]
  %1570 = phi i32 [ 0, %1488 ], [ %1489, %1551 ]
  %1571 = phi i8* [ %1492, %1488 ], [ %1554, %1551 ]
  %1572 = phi i32 [ %1493, %1488 ], [ %1555, %1551 ]
  %1573 = phi i64 [ %1494, %1488 ], [ %1564, %1551 ]
  %1574 = phi i32 [ %1495, %1488 ], [ %1565, %1551 ]
  %1575 = phi i16 [ %1499, %1488 ], [ %1560, %1551 ]
  %1576 = phi i8 [ %1491, %1488 ], [ %1558, %1551 ]
  %1577 = phi i8 [ %1497, %1488 ], [ %1562, %1551 ]
  %1578 = zext i8 %1576 to i64
  %1579 = lshr i64 %1573, %1578
  %1580 = sub i32 %1574, %1569
  %1581 = add nsw i32 %1570, %1569
  store i32 %1581, i32* %75, align 4, !tbaa !235
  %1582 = zext i16 %1575 to i32
  store i32 %1582, i32* %60, align 4, !tbaa !149
  %1583 = icmp eq i8 %1577, 0
  br i1 %1583, label %1584, label %1585

1584:                                             ; preds = %1567
  store i32 16205, i32* %24, align 8, !tbaa !142
  br label %2235

1585:                                             ; preds = %1567
  %1586 = and i32 %1568, 32
  %1587 = icmp eq i32 %1586, 0
  br i1 %1587, label %1589, label %1588

1588:                                             ; preds = %1585
  store i32 -1, i32* %75, align 4, !tbaa !235
  store i32 16191, i32* %24, align 8, !tbaa !142
  br label %2235

1589:                                             ; preds = %1585
  %1590 = and i32 %1568, 64
  %1591 = icmp eq i32 %1590, 0
  br i1 %1591, label %1593, label %1592

1592:                                             ; preds = %1589
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1593:                                             ; preds = %1589
  %1594 = and i32 %1568, 15
  store i32 %1594, i32* %76, align 4, !tbaa !172
  store i32 16201, i32* %24, align 8, !tbaa !142
  br label %1595

1595:                                             ; preds = %106, %1593
  %1596 = phi i32 [ %107, %106 ], [ %1594, %1593 ]
  %1597 = phi i8* [ %96, %106 ], [ %1571, %1593 ]
  %1598 = phi i32 [ %98, %106 ], [ %1572, %1593 ]
  %1599 = phi i64 [ %100, %106 ], [ %1579, %1593 ]
  %1600 = phi i32 [ %101, %106 ], [ %1580, %1593 ]
  %1601 = phi i32 [ %103, %106 ], [ %1435, %1593 ]
  %1602 = icmp eq i32 %1596, 0
  br i1 %1602, label %1603, label %1605

1603:                                             ; preds = %1595
  %1604 = load i32, i32* %60, align 4, !tbaa !149
  br label %1639

1605:                                             ; preds = %1595
  %1606 = icmp ult i32 %1600, %1596
  br i1 %1606, label %1607, label %1623

1607:                                             ; preds = %1605, %1613
  %1608 = phi i32 [ %1621, %1613 ], [ %1600, %1605 ]
  %1609 = phi i64 [ %1620, %1613 ], [ %1599, %1605 ]
  %1610 = phi i32 [ %1614, %1613 ], [ %1598, %1605 ]
  %1611 = phi i8* [ %1615, %1613 ], [ %1597, %1605 ]
  %1612 = icmp eq i32 %1610, 0
  br i1 %1612, label %2348, label %1613

1613:                                             ; preds = %1607
  %1614 = add i32 %1610, -1
  %1615 = getelementptr inbounds i8, i8* %1611, i64 1
  %1616 = load i8, i8* %1611, align 1, !tbaa !4
  %1617 = zext i8 %1616 to i64
  %1618 = zext i32 %1608 to i64
  %1619 = shl i64 %1617, %1618
  %1620 = add i64 %1619, %1609
  %1621 = add i32 %1608, 8
  %1622 = icmp ult i32 %1621, %1596
  br i1 %1622, label %1607, label %1623, !llvm.loop !263

1623:                                             ; preds = %1613, %1605
  %1624 = phi i8* [ %1597, %1605 ], [ %1615, %1613 ]
  %1625 = phi i32 [ %1598, %1605 ], [ %1614, %1613 ]
  %1626 = phi i64 [ %1599, %1605 ], [ %1620, %1613 ]
  %1627 = phi i32 [ %1600, %1605 ], [ %1621, %1613 ]
  %1628 = trunc i64 %1626 to i32
  %1629 = shl nsw i32 -1, %1596
  %1630 = xor i32 %1629, -1
  %1631 = and i32 %1628, %1630
  %1632 = load i32, i32* %60, align 4, !tbaa !149
  %1633 = add i32 %1632, %1631
  store i32 %1633, i32* %60, align 4, !tbaa !149
  %1634 = zext i32 %1596 to i64
  %1635 = lshr i64 %1626, %1634
  %1636 = sub i32 %1627, %1596
  %1637 = load i32, i32* %75, align 4, !tbaa !235
  %1638 = add i32 %1637, %1596
  store i32 %1638, i32* %75, align 4, !tbaa !235
  br label %1639

1639:                                             ; preds = %1603, %1623
  %1640 = phi i32 [ %1633, %1623 ], [ %1604, %1603 ]
  %1641 = phi i8* [ %1624, %1623 ], [ %1597, %1603 ]
  %1642 = phi i32 [ %1625, %1623 ], [ %1598, %1603 ]
  %1643 = phi i64 [ %1635, %1623 ], [ %1599, %1603 ]
  %1644 = phi i32 [ %1636, %1623 ], [ %1600, %1603 ]
  store i32 %1640, i32* %77, align 8, !tbaa !264
  store i32 16202, i32* %24, align 8, !tbaa !142
  br label %1645

1645:                                             ; preds = %94, %1639
  %1646 = phi i8* [ %96, %94 ], [ %1641, %1639 ]
  %1647 = phi i32 [ %98, %94 ], [ %1642, %1639 ]
  %1648 = phi i64 [ %100, %94 ], [ %1643, %1639 ]
  %1649 = phi i32 [ %101, %94 ], [ %1644, %1639 ]
  %1650 = phi i32 [ %103, %94 ], [ %1601, %1639 ]
  %1651 = load %struct.code*, %struct.code** %72, align 8, !tbaa !146
  %1652 = load i32, i32* %73, align 4, !tbaa !147
  %1653 = shl nsw i32 -1, %1652
  %1654 = xor i32 %1653, -1
  %1655 = trunc i64 %1648 to i32
  %1656 = and i32 %1654, %1655
  %1657 = zext i32 %1656 to i64
  %1658 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1657, i32 1
  %1659 = load i8, i8* %1658, align 1, !tbaa.struct !160
  %1660 = zext i8 %1659 to i32
  %1661 = icmp ult i32 %1649, %1660
  br i1 %1661, label %1662, label %1689

1662:                                             ; preds = %1645
  %1663 = zext i32 %1649 to i64
  br label %1664

1664:                                             ; preds = %1662, %1670
  %1665 = phi i64 [ %1663, %1662 ], [ %1677, %1670 ]
  %1666 = phi i64 [ %1648, %1662 ], [ %1676, %1670 ]
  %1667 = phi i32 [ %1647, %1662 ], [ %1671, %1670 ]
  %1668 = phi i8* [ %1646, %1662 ], [ %1672, %1670 ]
  %1669 = icmp eq i32 %1667, 0
  br i1 %1669, label %2343, label %1670

1670:                                             ; preds = %1664
  %1671 = add i32 %1667, -1
  %1672 = getelementptr inbounds i8, i8* %1668, i64 1
  %1673 = load i8, i8* %1668, align 1, !tbaa !4
  %1674 = zext i8 %1673 to i64
  %1675 = shl i64 %1674, %1665
  %1676 = add i64 %1675, %1666
  %1677 = add nuw nsw i64 %1665, 8
  %1678 = trunc i64 %1676 to i32
  %1679 = and i32 %1654, %1678
  %1680 = zext i32 %1679 to i64
  %1681 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1680, i32 1
  %1682 = load i8, i8* %1681, align 1, !tbaa.struct !160
  %1683 = zext i8 %1682 to i64
  %1684 = icmp ult i64 %1677, %1683
  br i1 %1684, label %1664, label %1685

1685:                                             ; preds = %1670
  %1686 = zext i32 %1679 to i64
  %1687 = zext i8 %1682 to i32
  %1688 = trunc i64 %1677 to i32
  br label %1689

1689:                                             ; preds = %1685, %1645
  %1690 = phi i32 [ %1687, %1685 ], [ %1660, %1645 ]
  %1691 = phi i64 [ %1686, %1685 ], [ %1657, %1645 ]
  %1692 = phi i8 [ %1682, %1685 ], [ %1659, %1645 ]
  %1693 = phi i8* [ %1672, %1685 ], [ %1646, %1645 ]
  %1694 = phi i32 [ %1671, %1685 ], [ %1647, %1645 ]
  %1695 = phi i64 [ %1676, %1685 ], [ %1648, %1645 ]
  %1696 = phi i32 [ %1688, %1685 ], [ %1649, %1645 ]
  %1697 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1691, i32 0
  %1698 = load i8, i8* %1697, align 2, !tbaa.struct !171
  %1699 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1691, i32 2
  %1700 = load i16, i16* %1699, align 2, !tbaa.struct !170
  %1701 = zext i8 %1698 to i32
  %1702 = and i32 %1701, 240
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %1706, label %1704

1704:                                             ; preds = %1689
  %1705 = load i32, i32* %75, align 4, !tbaa !235
  br label %1770

1706:                                             ; preds = %1689
  %1707 = zext i16 %1700 to i32
  %1708 = add nuw nsw i32 %1690, %1701
  %1709 = shl nsw i32 -1, %1708
  %1710 = xor i32 %1709, -1
  %1711 = trunc i64 %1695 to i32
  %1712 = and i32 %1711, %1710
  %1713 = lshr i32 %1712, %1690
  %1714 = add i32 %1713, %1707
  %1715 = zext i32 %1714 to i64
  %1716 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1715, i32 1
  %1717 = load i8, i8* %1716, align 1, !tbaa.struct !160
  %1718 = zext i8 %1717 to i32
  %1719 = add nuw nsw i32 %1690, %1718
  %1720 = icmp ugt i32 %1719, %1696
  br i1 %1720, label %1721, label %1752

1721:                                             ; preds = %1706
  %1722 = zext i32 %1696 to i64
  br label %1723

1723:                                             ; preds = %1721, %1729
  %1724 = phi i64 [ %1722, %1721 ], [ %1736, %1729 ]
  %1725 = phi i64 [ %1695, %1721 ], [ %1735, %1729 ]
  %1726 = phi i32 [ %1694, %1721 ], [ %1730, %1729 ]
  %1727 = phi i8* [ %1693, %1721 ], [ %1731, %1729 ]
  %1728 = icmp eq i32 %1726, 0
  br i1 %1728, label %2338, label %1729

1729:                                             ; preds = %1723
  %1730 = add i32 %1726, -1
  %1731 = getelementptr inbounds i8, i8* %1727, i64 1
  %1732 = load i8, i8* %1727, align 1, !tbaa !4
  %1733 = zext i8 %1732 to i64
  %1734 = shl i64 %1733, %1724
  %1735 = add i64 %1734, %1725
  %1736 = add nuw nsw i64 %1724, 8
  %1737 = trunc i64 %1735 to i32
  %1738 = and i32 %1737, %1710
  %1739 = lshr i32 %1738, %1690
  %1740 = add i32 %1739, %1707
  %1741 = zext i32 %1740 to i64
  %1742 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1741, i32 1
  %1743 = load i8, i8* %1742, align 1, !tbaa.struct !160
  %1744 = zext i8 %1743 to i32
  %1745 = add nuw nsw i32 %1690, %1744
  %1746 = zext i32 %1745 to i64
  %1747 = icmp ult i64 %1736, %1746
  br i1 %1747, label %1723, label %1748

1748:                                             ; preds = %1729
  %1749 = zext i32 %1740 to i64
  %1750 = zext i8 %1743 to i32
  %1751 = trunc i64 %1736 to i32
  br label %1752

1752:                                             ; preds = %1748, %1706
  %1753 = phi i32 [ %1750, %1748 ], [ %1718, %1706 ]
  %1754 = phi i64 [ %1749, %1748 ], [ %1715, %1706 ]
  %1755 = phi i8* [ %1731, %1748 ], [ %1693, %1706 ]
  %1756 = phi i32 [ %1730, %1748 ], [ %1694, %1706 ]
  %1757 = phi i64 [ %1735, %1748 ], [ %1695, %1706 ]
  %1758 = phi i32 [ %1751, %1748 ], [ %1696, %1706 ]
  %1759 = phi i8 [ %1743, %1748 ], [ %1717, %1706 ]
  %1760 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1754, i32 2
  %1761 = load i16, i16* %1760, align 2, !tbaa.struct !170
  %1762 = getelementptr inbounds %struct.code, %struct.code* %1651, i64 %1754, i32 0
  %1763 = load i8, i8* %1762, align 2, !tbaa.struct !171
  %1764 = zext i8 %1692 to i64
  %1765 = lshr i64 %1757, %1764
  %1766 = sub i32 %1758, %1690
  %1767 = load i32, i32* %75, align 4, !tbaa !235
  %1768 = add nsw i32 %1767, %1690
  %1769 = zext i8 %1763 to i32
  br label %1770

1770:                                             ; preds = %1704, %1752
  %1771 = phi i32 [ %1701, %1704 ], [ %1769, %1752 ]
  %1772 = phi i32 [ %1690, %1704 ], [ %1753, %1752 ]
  %1773 = phi i32 [ %1705, %1704 ], [ %1768, %1752 ]
  %1774 = phi i8* [ %1693, %1704 ], [ %1755, %1752 ]
  %1775 = phi i32 [ %1694, %1704 ], [ %1756, %1752 ]
  %1776 = phi i64 [ %1695, %1704 ], [ %1765, %1752 ]
  %1777 = phi i32 [ %1696, %1704 ], [ %1766, %1752 ]
  %1778 = phi i16 [ %1700, %1704 ], [ %1761, %1752 ]
  %1779 = phi i8 [ %1692, %1704 ], [ %1759, %1752 ]
  %1780 = zext i8 %1779 to i64
  %1781 = lshr i64 %1776, %1780
  %1782 = sub i32 %1777, %1772
  %1783 = add nsw i32 %1773, %1772
  store i32 %1783, i32* %75, align 4, !tbaa !235
  %1784 = and i32 %1771, 64
  %1785 = icmp eq i32 %1784, 0
  br i1 %1785, label %1787, label %1786

1786:                                             ; preds = %1770
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1787:                                             ; preds = %1770
  %1788 = zext i16 %1778 to i32
  store i32 %1788, i32* %78, align 8, !tbaa !174
  %1789 = and i32 %1771, 15
  store i32 %1789, i32* %76, align 4, !tbaa !172
  store i32 16203, i32* %24, align 8, !tbaa !142
  br label %1790

1790:                                             ; preds = %104, %1787
  %1791 = phi i32 [ %105, %104 ], [ %1789, %1787 ]
  %1792 = phi i8* [ %96, %104 ], [ %1774, %1787 ]
  %1793 = phi i32 [ %98, %104 ], [ %1775, %1787 ]
  %1794 = phi i64 [ %100, %104 ], [ %1781, %1787 ]
  %1795 = phi i32 [ %101, %104 ], [ %1782, %1787 ]
  %1796 = phi i32 [ %103, %104 ], [ %1650, %1787 ]
  %1797 = icmp eq i32 %1791, 0
  br i1 %1797, label %1832, label %1798

1798:                                             ; preds = %1790
  %1799 = icmp ult i32 %1795, %1791
  br i1 %1799, label %1800, label %1816

1800:                                             ; preds = %1798, %1806
  %1801 = phi i32 [ %1814, %1806 ], [ %1795, %1798 ]
  %1802 = phi i64 [ %1813, %1806 ], [ %1794, %1798 ]
  %1803 = phi i32 [ %1807, %1806 ], [ %1793, %1798 ]
  %1804 = phi i8* [ %1808, %1806 ], [ %1792, %1798 ]
  %1805 = icmp eq i32 %1803, 0
  br i1 %1805, label %2333, label %1806

1806:                                             ; preds = %1800
  %1807 = add i32 %1803, -1
  %1808 = getelementptr inbounds i8, i8* %1804, i64 1
  %1809 = load i8, i8* %1804, align 1, !tbaa !4
  %1810 = zext i8 %1809 to i64
  %1811 = zext i32 %1801 to i64
  %1812 = shl i64 %1810, %1811
  %1813 = add i64 %1812, %1802
  %1814 = add i32 %1801, 8
  %1815 = icmp ult i32 %1814, %1791
  br i1 %1815, label %1800, label %1816, !llvm.loop !265

1816:                                             ; preds = %1806, %1798
  %1817 = phi i8* [ %1792, %1798 ], [ %1808, %1806 ]
  %1818 = phi i32 [ %1793, %1798 ], [ %1807, %1806 ]
  %1819 = phi i64 [ %1794, %1798 ], [ %1813, %1806 ]
  %1820 = phi i32 [ %1795, %1798 ], [ %1814, %1806 ]
  %1821 = trunc i64 %1819 to i32
  %1822 = shl nsw i32 -1, %1791
  %1823 = xor i32 %1822, -1
  %1824 = and i32 %1821, %1823
  %1825 = load i32, i32* %78, align 8, !tbaa !174
  %1826 = add i32 %1825, %1824
  store i32 %1826, i32* %78, align 8, !tbaa !174
  %1827 = zext i32 %1791 to i64
  %1828 = lshr i64 %1819, %1827
  %1829 = sub i32 %1820, %1791
  %1830 = load i32, i32* %75, align 4, !tbaa !235
  %1831 = add i32 %1830, %1791
  store i32 %1831, i32* %75, align 4, !tbaa !235
  br label %1832

1832:                                             ; preds = %1816, %1790
  %1833 = phi i8* [ %1817, %1816 ], [ %1792, %1790 ]
  %1834 = phi i32 [ %1818, %1816 ], [ %1793, %1790 ]
  %1835 = phi i64 [ %1828, %1816 ], [ %1794, %1790 ]
  %1836 = phi i32 [ %1829, %1816 ], [ %1795, %1790 ]
  store i32 16204, i32* %24, align 8, !tbaa !142
  br label %1837

1837:                                             ; preds = %94, %1832
  %1838 = phi i8* [ %96, %94 ], [ %1833, %1832 ]
  %1839 = phi i32 [ %98, %94 ], [ %1834, %1832 ]
  %1840 = phi i64 [ %100, %94 ], [ %1835, %1832 ]
  %1841 = phi i32 [ %101, %94 ], [ %1836, %1832 ]
  %1842 = phi i32 [ %103, %94 ], [ %1796, %1832 ]
  %1843 = icmp eq i32 %99, 0
  br i1 %1843, label %2363, label %1844

1844:                                             ; preds = %1837
  %1845 = sub i32 %102, %99
  %1846 = load i32, i32* %78, align 8, !tbaa !174
  %1847 = icmp ugt i32 %1846, %1845
  br i1 %1847, label %1848, label %1874

1848:                                             ; preds = %1844
  %1849 = sub i32 %1846, %1845
  %1850 = load i32, i32* %79, align 8, !tbaa !140
  %1851 = icmp ugt i32 %1849, %1850
  br i1 %1851, label %1852, label %1856

1852:                                             ; preds = %1848
  %1853 = load i32, i32* %80, align 8, !tbaa !141
  %1854 = icmp eq i32 %1853, 0
  br i1 %1854, label %1856, label %1855

1855:                                             ; preds = %1852
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

1856:                                             ; preds = %1852, %1848
  %1857 = load i32, i32* %81, align 4, !tbaa !139
  %1858 = icmp ugt i32 %1849, %1857
  br i1 %1858, label %1859, label %1863

1859:                                             ; preds = %1856
  %1860 = sub i32 %1849, %1857
  %1861 = load i32, i32* %83, align 4, !tbaa !137
  %1862 = sub i32 %1861, %1860
  br label %1865

1863:                                             ; preds = %1856
  %1864 = sub i32 %1857, %1849
  br label %1865

1865:                                             ; preds = %1863, %1859
  %1866 = phi i32 [ %1864, %1863 ], [ %1862, %1859 ]
  %1867 = phi i32 [ %1849, %1863 ], [ %1860, %1859 ]
  %1868 = load i8*, i8** %82, align 8, !tbaa !138
  %1869 = zext i32 %1866 to i64
  %1870 = getelementptr inbounds i8, i8* %1868, i64 %1869
  %1871 = load i32, i32* %60, align 4, !tbaa !149
  %1872 = icmp ugt i32 %1867, %1871
  %1873 = select i1 %1872, i32 %1871, i32 %1867
  br label %1879

1874:                                             ; preds = %1844
  %1875 = zext i32 %1846 to i64
  %1876 = sub nsw i64 0, %1875
  %1877 = getelementptr inbounds i8, i8* %97, i64 %1876
  %1878 = load i32, i32* %60, align 4, !tbaa !149
  br label %1879

1879:                                             ; preds = %1865, %1874
  %1880 = phi i32 [ %1878, %1874 ], [ %1871, %1865 ]
  %1881 = phi i32 [ %1878, %1874 ], [ %1873, %1865 ]
  %1882 = phi i8* [ %1877, %1874 ], [ %1870, %1865 ]
  %1883 = icmp ugt i32 %1881, %99
  %1884 = select i1 %1883, i32 %99, i32 %1881
  %1885 = sub i32 %1880, %1884
  store i32 %1885, i32* %60, align 4, !tbaa !149
  %1886 = add i32 %1884, -1
  %1887 = zext i32 %1886 to i64
  %1888 = add nuw nsw i64 %1887, 1
  %1889 = icmp ult i32 %1886, 31
  br i1 %1889, label %1983, label %1890

1890:                                             ; preds = %1879
  %1891 = getelementptr i8, i8* %97, i64 1
  %1892 = add i32 %1884, -1
  %1893 = zext i32 %1892 to i64
  %1894 = getelementptr i8, i8* %1891, i64 %1893
  %1895 = getelementptr i8, i8* %1882, i64 1
  %1896 = getelementptr i8, i8* %1895, i64 %1893
  %1897 = icmp ult i8* %97, %1896
  %1898 = icmp ult i8* %1882, %1894
  %1899 = and i1 %1897, %1898
  br i1 %1899, label %1983, label %1900

1900:                                             ; preds = %1890
  %1901 = and i64 %1888, 8589934560
  %1902 = getelementptr i8, i8* %97, i64 %1901
  %1903 = trunc i64 %1901 to i32
  %1904 = sub i32 %1884, %1903
  %1905 = getelementptr i8, i8* %1882, i64 %1901
  %1906 = add nsw i64 %1901, -32
  %1907 = lshr exact i64 %1906, 5
  %1908 = add nuw nsw i64 %1907, 1
  %1909 = and i64 %1908, 3
  %1910 = icmp ult i64 %1906, 96
  br i1 %1910, label %1962, label %1911

1911:                                             ; preds = %1900
  %1912 = and i64 %1908, 1152921504606846972
  br label %1913

1913:                                             ; preds = %1913, %1911
  %1914 = phi i64 [ 0, %1911 ], [ %1959, %1913 ]
  %1915 = phi i64 [ 0, %1911 ], [ %1960, %1913 ]
  %1916 = getelementptr i8, i8* %97, i64 %1914
  %1917 = getelementptr i8, i8* %1882, i64 %1914
  %1918 = bitcast i8* %1917 to <16 x i8>*
  %1919 = load <16 x i8>, <16 x i8>* %1918, align 1, !tbaa !4, !alias.scope !266
  %1920 = getelementptr i8, i8* %1917, i64 16
  %1921 = bitcast i8* %1920 to <16 x i8>*
  %1922 = load <16 x i8>, <16 x i8>* %1921, align 1, !tbaa !4, !alias.scope !266
  %1923 = bitcast i8* %1916 to <16 x i8>*
  store <16 x i8> %1919, <16 x i8>* %1923, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1924 = getelementptr i8, i8* %1916, i64 16
  %1925 = bitcast i8* %1924 to <16 x i8>*
  store <16 x i8> %1922, <16 x i8>* %1925, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1926 = or i64 %1914, 32
  %1927 = getelementptr i8, i8* %97, i64 %1926
  %1928 = getelementptr i8, i8* %1882, i64 %1926
  %1929 = bitcast i8* %1928 to <16 x i8>*
  %1930 = load <16 x i8>, <16 x i8>* %1929, align 1, !tbaa !4, !alias.scope !266
  %1931 = getelementptr i8, i8* %1928, i64 16
  %1932 = bitcast i8* %1931 to <16 x i8>*
  %1933 = load <16 x i8>, <16 x i8>* %1932, align 1, !tbaa !4, !alias.scope !266
  %1934 = bitcast i8* %1927 to <16 x i8>*
  store <16 x i8> %1930, <16 x i8>* %1934, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1935 = getelementptr i8, i8* %1927, i64 16
  %1936 = bitcast i8* %1935 to <16 x i8>*
  store <16 x i8> %1933, <16 x i8>* %1936, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1937 = or i64 %1914, 64
  %1938 = getelementptr i8, i8* %97, i64 %1937
  %1939 = getelementptr i8, i8* %1882, i64 %1937
  %1940 = bitcast i8* %1939 to <16 x i8>*
  %1941 = load <16 x i8>, <16 x i8>* %1940, align 1, !tbaa !4, !alias.scope !266
  %1942 = getelementptr i8, i8* %1939, i64 16
  %1943 = bitcast i8* %1942 to <16 x i8>*
  %1944 = load <16 x i8>, <16 x i8>* %1943, align 1, !tbaa !4, !alias.scope !266
  %1945 = bitcast i8* %1938 to <16 x i8>*
  store <16 x i8> %1941, <16 x i8>* %1945, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1946 = getelementptr i8, i8* %1938, i64 16
  %1947 = bitcast i8* %1946 to <16 x i8>*
  store <16 x i8> %1944, <16 x i8>* %1947, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1948 = or i64 %1914, 96
  %1949 = getelementptr i8, i8* %97, i64 %1948
  %1950 = getelementptr i8, i8* %1882, i64 %1948
  %1951 = bitcast i8* %1950 to <16 x i8>*
  %1952 = load <16 x i8>, <16 x i8>* %1951, align 1, !tbaa !4, !alias.scope !266
  %1953 = getelementptr i8, i8* %1950, i64 16
  %1954 = bitcast i8* %1953 to <16 x i8>*
  %1955 = load <16 x i8>, <16 x i8>* %1954, align 1, !tbaa !4, !alias.scope !266
  %1956 = bitcast i8* %1949 to <16 x i8>*
  store <16 x i8> %1952, <16 x i8>* %1956, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1957 = getelementptr i8, i8* %1949, i64 16
  %1958 = bitcast i8* %1957 to <16 x i8>*
  store <16 x i8> %1955, <16 x i8>* %1958, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1959 = add nuw i64 %1914, 128
  %1960 = add i64 %1915, 4
  %1961 = icmp eq i64 %1960, %1912
  br i1 %1961, label %1962, label %1913, !llvm.loop !271

1962:                                             ; preds = %1913, %1900
  %1963 = phi i64 [ 0, %1900 ], [ %1959, %1913 ]
  %1964 = icmp eq i64 %1909, 0
  br i1 %1964, label %1981, label %1965

1965:                                             ; preds = %1962, %1965
  %1966 = phi i64 [ %1978, %1965 ], [ %1963, %1962 ]
  %1967 = phi i64 [ %1979, %1965 ], [ 0, %1962 ]
  %1968 = getelementptr i8, i8* %97, i64 %1966
  %1969 = getelementptr i8, i8* %1882, i64 %1966
  %1970 = bitcast i8* %1969 to <16 x i8>*
  %1971 = load <16 x i8>, <16 x i8>* %1970, align 1, !tbaa !4, !alias.scope !266
  %1972 = getelementptr i8, i8* %1969, i64 16
  %1973 = bitcast i8* %1972 to <16 x i8>*
  %1974 = load <16 x i8>, <16 x i8>* %1973, align 1, !tbaa !4, !alias.scope !266
  %1975 = bitcast i8* %1968 to <16 x i8>*
  store <16 x i8> %1971, <16 x i8>* %1975, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1976 = getelementptr i8, i8* %1968, i64 16
  %1977 = bitcast i8* %1976 to <16 x i8>*
  store <16 x i8> %1974, <16 x i8>* %1977, align 1, !tbaa !4, !alias.scope !269, !noalias !266
  %1978 = add nuw i64 %1966, 32
  %1979 = add i64 %1967, 1
  %1980 = icmp eq i64 %1979, %1909
  br i1 %1980, label %1981, label %1965, !llvm.loop !272

1981:                                             ; preds = %1965, %1962
  %1982 = icmp eq i64 %1888, %1901
  br i1 %1982, label %2037, label %1983

1983:                                             ; preds = %1890, %1879, %1981
  %1984 = phi i8* [ %97, %1890 ], [ %97, %1879 ], [ %1902, %1981 ]
  %1985 = phi i32 [ %1884, %1890 ], [ %1884, %1879 ], [ %1904, %1981 ]
  %1986 = phi i8* [ %1882, %1890 ], [ %1882, %1879 ], [ %1905, %1981 ]
  %1987 = add i32 %1985, -1
  %1988 = and i32 %1985, 7
  %1989 = icmp eq i32 %1988, 0
  br i1 %1989, label %2001, label %1990

1990:                                             ; preds = %1983, %1990
  %1991 = phi i8* [ %1997, %1990 ], [ %1984, %1983 ]
  %1992 = phi i32 [ %1998, %1990 ], [ %1985, %1983 ]
  %1993 = phi i8* [ %1995, %1990 ], [ %1986, %1983 ]
  %1994 = phi i32 [ %1999, %1990 ], [ 0, %1983 ]
  %1995 = getelementptr inbounds i8, i8* %1993, i64 1
  %1996 = load i8, i8* %1993, align 1, !tbaa !4
  %1997 = getelementptr inbounds i8, i8* %1991, i64 1
  store i8 %1996, i8* %1991, align 1, !tbaa !4
  %1998 = add i32 %1992, -1
  %1999 = add i32 %1994, 1
  %2000 = icmp eq i32 %1999, %1988
  br i1 %2000, label %2001, label %1990, !llvm.loop !273

2001:                                             ; preds = %1990, %1983
  %2002 = phi i8* [ undef, %1983 ], [ %1997, %1990 ]
  %2003 = phi i8* [ %1984, %1983 ], [ %1997, %1990 ]
  %2004 = phi i32 [ %1985, %1983 ], [ %1998, %1990 ]
  %2005 = phi i8* [ %1986, %1983 ], [ %1995, %1990 ]
  %2006 = icmp ult i32 %1987, 7
  br i1 %2006, label %2037, label %2007

2007:                                             ; preds = %2001, %2007
  %2008 = phi i8* [ %2034, %2007 ], [ %2003, %2001 ]
  %2009 = phi i32 [ %2035, %2007 ], [ %2004, %2001 ]
  %2010 = phi i8* [ %2032, %2007 ], [ %2005, %2001 ]
  %2011 = getelementptr inbounds i8, i8* %2010, i64 1
  %2012 = load i8, i8* %2010, align 1, !tbaa !4
  %2013 = getelementptr inbounds i8, i8* %2008, i64 1
  store i8 %2012, i8* %2008, align 1, !tbaa !4
  %2014 = getelementptr inbounds i8, i8* %2010, i64 2
  %2015 = load i8, i8* %2011, align 1, !tbaa !4
  %2016 = getelementptr inbounds i8, i8* %2008, i64 2
  store i8 %2015, i8* %2013, align 1, !tbaa !4
  %2017 = getelementptr inbounds i8, i8* %2010, i64 3
  %2018 = load i8, i8* %2014, align 1, !tbaa !4
  %2019 = getelementptr inbounds i8, i8* %2008, i64 3
  store i8 %2018, i8* %2016, align 1, !tbaa !4
  %2020 = getelementptr inbounds i8, i8* %2010, i64 4
  %2021 = load i8, i8* %2017, align 1, !tbaa !4
  %2022 = getelementptr inbounds i8, i8* %2008, i64 4
  store i8 %2021, i8* %2019, align 1, !tbaa !4
  %2023 = getelementptr inbounds i8, i8* %2010, i64 5
  %2024 = load i8, i8* %2020, align 1, !tbaa !4
  %2025 = getelementptr inbounds i8, i8* %2008, i64 5
  store i8 %2024, i8* %2022, align 1, !tbaa !4
  %2026 = getelementptr inbounds i8, i8* %2010, i64 6
  %2027 = load i8, i8* %2023, align 1, !tbaa !4
  %2028 = getelementptr inbounds i8, i8* %2008, i64 6
  store i8 %2027, i8* %2025, align 1, !tbaa !4
  %2029 = getelementptr inbounds i8, i8* %2010, i64 7
  %2030 = load i8, i8* %2026, align 1, !tbaa !4
  %2031 = getelementptr inbounds i8, i8* %2008, i64 7
  store i8 %2030, i8* %2028, align 1, !tbaa !4
  %2032 = getelementptr inbounds i8, i8* %2010, i64 8
  %2033 = load i8, i8* %2029, align 1, !tbaa !4
  %2034 = getelementptr inbounds i8, i8* %2008, i64 8
  store i8 %2033, i8* %2031, align 1, !tbaa !4
  %2035 = add i32 %2009, -8
  %2036 = icmp eq i32 %2035, 0
  br i1 %2036, label %2037, label %2007, !llvm.loop !274

2037:                                             ; preds = %2001, %2007, %1981
  %2038 = phi i8* [ %1902, %1981 ], [ %2002, %2001 ], [ %2034, %2007 ]
  %2039 = sub i32 %99, %1884
  %2040 = load i32, i32* %60, align 4, !tbaa !149
  %2041 = icmp eq i32 %2040, 0
  br i1 %2041, label %2042, label %2235

2042:                                             ; preds = %2037
  store i32 16200, i32* %24, align 8, !tbaa !142
  br label %2235

2043:                                             ; preds = %94
  %2044 = icmp eq i32 %99, 0
  br i1 %2044, label %2363, label %2045

2045:                                             ; preds = %2043
  %2046 = load i32, i32* %60, align 4, !tbaa !149
  %2047 = trunc i32 %2046 to i8
  %2048 = getelementptr inbounds i8, i8* %97, i64 1
  store i8 %2047, i8* %97, align 1, !tbaa !4
  %2049 = add i32 %99, -1
  store i32 16200, i32* %24, align 8, !tbaa !142
  br label %2235

2050:                                             ; preds = %94
  %2051 = load i32, i32* %53, align 8, !tbaa !231
  %2052 = icmp eq i32 %2051, 0
  br i1 %2052, label %2148, label %2053

2053:                                             ; preds = %2050
  %2054 = icmp ult i32 %101, 32
  br i1 %2054, label %2055, label %2105

2055:                                             ; preds = %2053
  %2056 = zext i32 %101 to i64
  %2057 = icmp eq i32 %98, 0
  br i1 %2057, label %2321, label %2058

2058:                                             ; preds = %2055
  %2059 = add i32 %98, -1
  %2060 = getelementptr inbounds i8, i8* %96, i64 1
  %2061 = load i8, i8* %96, align 1, !tbaa !4
  %2062 = zext i8 %2061 to i64
  %2063 = shl nuw nsw i64 %2062, %2056
  %2064 = add i64 %2063, %100
  %2065 = add nuw nsw i64 %2056, 8
  %2066 = icmp ult i32 %101, 24
  br i1 %2066, label %2067, label %2099, !llvm.loop !275

2067:                                             ; preds = %2058
  %2068 = icmp eq i32 %2059, 0
  br i1 %2068, label %2323, label %2069

2069:                                             ; preds = %2067
  %2070 = add i32 %98, -2
  %2071 = getelementptr inbounds i8, i8* %96, i64 2
  %2072 = load i8, i8* %2060, align 1, !tbaa !4
  %2073 = zext i8 %2072 to i64
  %2074 = shl nuw nsw i64 %2073, %2065
  %2075 = add i64 %2074, %2064
  %2076 = add nuw nsw i64 %2056, 16
  %2077 = icmp ult i32 %101, 16
  br i1 %2077, label %2078, label %2099, !llvm.loop !275

2078:                                             ; preds = %2069
  %2079 = icmp eq i32 %2070, 0
  br i1 %2079, label %2323, label %2080

2080:                                             ; preds = %2078
  %2081 = add i32 %98, -3
  %2082 = getelementptr inbounds i8, i8* %96, i64 3
  %2083 = load i8, i8* %2071, align 1, !tbaa !4
  %2084 = zext i8 %2083 to i64
  %2085 = shl nuw nsw i64 %2084, %2076
  %2086 = add i64 %2085, %2075
  %2087 = add nuw nsw i64 %2056, 24
  %2088 = icmp ult i32 %101, 8
  br i1 %2088, label %2089, label %2099, !llvm.loop !275

2089:                                             ; preds = %2080
  %2090 = icmp eq i32 %2081, 0
  br i1 %2090, label %2323, label %2091

2091:                                             ; preds = %2089
  %2092 = add i32 %98, -4
  %2093 = getelementptr inbounds i8, i8* %96, i64 4
  %2094 = load i8, i8* %2082, align 1, !tbaa !4
  %2095 = zext i8 %2094 to i64
  %2096 = shl nuw nsw i64 %2095, %2087
  %2097 = add i64 %2096, %2086
  %2098 = add nuw nsw i64 %2056, 32
  br label %2099

2099:                                             ; preds = %2091, %2080, %2069, %2058
  %2100 = phi i32 [ %2059, %2058 ], [ %2070, %2069 ], [ %2081, %2080 ], [ %2092, %2091 ]
  %2101 = phi i8* [ %2060, %2058 ], [ %2071, %2069 ], [ %2082, %2080 ], [ %2093, %2091 ]
  %2102 = phi i64 [ %2064, %2058 ], [ %2075, %2069 ], [ %2086, %2080 ], [ %2097, %2091 ]
  %2103 = phi i64 [ %2065, %2058 ], [ %2076, %2069 ], [ %2087, %2080 ], [ %2098, %2091 ]
  %2104 = trunc i64 %2103 to i32
  br label %2105

2105:                                             ; preds = %2099, %2053
  %2106 = phi i8* [ %96, %2053 ], [ %2101, %2099 ]
  %2107 = phi i32 [ %98, %2053 ], [ %2100, %2099 ]
  %2108 = phi i64 [ %100, %2053 ], [ %2102, %2099 ]
  %2109 = phi i32 [ %101, %2053 ], [ %2104, %2099 ]
  %2110 = sub i32 %102, %99
  %2111 = zext i32 %2110 to i64
  %2112 = load i64, i64* %54, align 8, !tbaa !88
  %2113 = add i64 %2112, %2111
  store i64 %2113, i64* %54, align 8, !tbaa !88
  %2114 = load i64, i64* %55, align 8, !tbaa !230
  %2115 = add i64 %2114, %2111
  store i64 %2115, i64* %55, align 8, !tbaa !230
  %2116 = and i32 %2051, 4
  %2117 = icmp ne i32 %2116, 0
  %2118 = icmp ne i32 %2110, 0
  %2119 = select i1 %2117, i1 %2118, i1 false
  br i1 %2119, label %2120, label %2134

2120:                                             ; preds = %2105
  %2121 = load i32, i32* %56, align 8, !tbaa !233
  %2122 = icmp eq i32 %2121, 0
  %2123 = load i64, i64* %57, align 8, !tbaa !237
  %2124 = sub nsw i64 0, %2111
  %2125 = getelementptr inbounds i8, i8* %97, i64 %2124
  br i1 %2122, label %2128, label %2126

2126:                                             ; preds = %2120
  %2127 = call i64 @crc32(i64 noundef %2123, i8* noundef %2125, i32 noundef %2110) #25
  br label %2130

2128:                                             ; preds = %2120
  %2129 = call i64 @adler32(i64 noundef %2123, i8* noundef %2125, i32 noundef %2110) #25
  br label %2130

2130:                                             ; preds = %2128, %2126
  %2131 = phi i64 [ %2127, %2126 ], [ %2129, %2128 ]
  store i64 %2131, i64* %57, align 8, !tbaa !237
  store i64 %2131, i64* %58, align 8, !tbaa !82
  %2132 = load i32, i32* %53, align 8, !tbaa !231
  %2133 = and i32 %2132, 4
  br label %2134

2134:                                             ; preds = %2130, %2105
  %2135 = phi i32 [ %2133, %2130 ], [ %2116, %2105 ]
  %2136 = phi i32 [ %2132, %2130 ], [ %2051, %2105 ]
  %2137 = icmp eq i32 %2135, 0
  br i1 %2137, label %2148, label %2138

2138:                                             ; preds = %2134
  %2139 = load i32, i32* %56, align 8, !tbaa !233
  %2140 = icmp eq i32 %2139, 0
  %2141 = trunc i64 %2108 to i32
  %2142 = call i32 @llvm.bswap.i32(i32 %2141)
  %2143 = zext i32 %2142 to i64
  %2144 = select i1 %2140, i64 %2143, i64 %2108
  %2145 = load i64, i64* %57, align 8, !tbaa !237
  %2146 = icmp eq i64 %2144, %2145
  br i1 %2146, label %2148, label %2147

2147:                                             ; preds = %2138
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

2148:                                             ; preds = %2138, %2134, %2050
  %2149 = phi i32 [ 0, %2050 ], [ %2136, %2134 ], [ %2136, %2138 ]
  %2150 = phi i8* [ %96, %2050 ], [ %2106, %2134 ], [ %2106, %2138 ]
  %2151 = phi i32 [ %98, %2050 ], [ %2107, %2134 ], [ %2107, %2138 ]
  %2152 = phi i64 [ %100, %2050 ], [ 0, %2134 ], [ 0, %2138 ]
  %2153 = phi i32 [ %101, %2050 ], [ 0, %2134 ], [ 0, %2138 ]
  %2154 = phi i32 [ %102, %2050 ], [ %99, %2134 ], [ %99, %2138 ]
  store i32 16207, i32* %24, align 8, !tbaa !142
  br label %2155

2155:                                             ; preds = %110, %2148
  %2156 = phi i32 [ %111, %110 ], [ %2149, %2148 ]
  %2157 = phi i8* [ %96, %110 ], [ %2150, %2148 ]
  %2158 = phi i32 [ %98, %110 ], [ %2151, %2148 ]
  %2159 = phi i64 [ %100, %110 ], [ %2152, %2148 ]
  %2160 = phi i32 [ %101, %110 ], [ %2153, %2148 ]
  %2161 = phi i32 [ %102, %110 ], [ %2154, %2148 ]
  %2162 = icmp eq i32 %2156, 0
  br i1 %2162, label %2230, label %2163

2163:                                             ; preds = %2155
  %2164 = load i32, i32* %56, align 8, !tbaa !233
  %2165 = icmp eq i32 %2164, 0
  br i1 %2165, label %2230, label %2166

2166:                                             ; preds = %2163
  %2167 = icmp ult i32 %2160, 32
  br i1 %2167, label %2168, label %2218

2168:                                             ; preds = %2166
  %2169 = zext i32 %2160 to i64
  %2170 = icmp eq i32 %2158, 0
  br i1 %2170, label %2314, label %2171

2171:                                             ; preds = %2168
  %2172 = add i32 %2158, -1
  %2173 = getelementptr inbounds i8, i8* %2157, i64 1
  %2174 = load i8, i8* %2157, align 1, !tbaa !4
  %2175 = zext i8 %2174 to i64
  %2176 = shl nuw nsw i64 %2175, %2169
  %2177 = add i64 %2176, %2159
  %2178 = add nuw nsw i64 %2169, 8
  %2179 = icmp ult i32 %2160, 24
  br i1 %2179, label %2180, label %2212, !llvm.loop !276

2180:                                             ; preds = %2171
  %2181 = icmp eq i32 %2172, 0
  br i1 %2181, label %2316, label %2182

2182:                                             ; preds = %2180
  %2183 = add i32 %2158, -2
  %2184 = getelementptr inbounds i8, i8* %2157, i64 2
  %2185 = load i8, i8* %2173, align 1, !tbaa !4
  %2186 = zext i8 %2185 to i64
  %2187 = shl nuw nsw i64 %2186, %2178
  %2188 = add i64 %2187, %2177
  %2189 = add nuw nsw i64 %2169, 16
  %2190 = icmp ult i32 %2160, 16
  br i1 %2190, label %2191, label %2212, !llvm.loop !276

2191:                                             ; preds = %2182
  %2192 = icmp eq i32 %2183, 0
  br i1 %2192, label %2316, label %2193

2193:                                             ; preds = %2191
  %2194 = add i32 %2158, -3
  %2195 = getelementptr inbounds i8, i8* %2157, i64 3
  %2196 = load i8, i8* %2184, align 1, !tbaa !4
  %2197 = zext i8 %2196 to i64
  %2198 = shl nuw nsw i64 %2197, %2189
  %2199 = add i64 %2198, %2188
  %2200 = add nuw nsw i64 %2169, 24
  %2201 = icmp ult i32 %2160, 8
  br i1 %2201, label %2202, label %2212, !llvm.loop !276

2202:                                             ; preds = %2193
  %2203 = icmp eq i32 %2194, 0
  br i1 %2203, label %2316, label %2204

2204:                                             ; preds = %2202
  %2205 = add i32 %2158, -4
  %2206 = getelementptr inbounds i8, i8* %2157, i64 4
  %2207 = load i8, i8* %2195, align 1, !tbaa !4
  %2208 = zext i8 %2207 to i64
  %2209 = shl nuw nsw i64 %2208, %2200
  %2210 = add i64 %2209, %2199
  %2211 = add nuw nsw i64 %2169, 32
  br label %2212

2212:                                             ; preds = %2204, %2193, %2182, %2171
  %2213 = phi i32 [ %2172, %2171 ], [ %2183, %2182 ], [ %2194, %2193 ], [ %2205, %2204 ]
  %2214 = phi i8* [ %2173, %2171 ], [ %2184, %2182 ], [ %2195, %2193 ], [ %2206, %2204 ]
  %2215 = phi i64 [ %2177, %2171 ], [ %2188, %2182 ], [ %2199, %2193 ], [ %2210, %2204 ]
  %2216 = phi i64 [ %2178, %2171 ], [ %2189, %2182 ], [ %2200, %2193 ], [ %2211, %2204 ]
  %2217 = trunc i64 %2216 to i32
  br label %2218

2218:                                             ; preds = %2212, %2166
  %2219 = phi i8* [ %2157, %2166 ], [ %2214, %2212 ]
  %2220 = phi i32 [ %2158, %2166 ], [ %2213, %2212 ]
  %2221 = phi i64 [ %2159, %2166 ], [ %2215, %2212 ]
  %2222 = phi i32 [ %2160, %2166 ], [ %2217, %2212 ]
  %2223 = and i32 %2156, 4
  %2224 = icmp eq i32 %2223, 0
  br i1 %2224, label %2230, label %2225

2225:                                             ; preds = %2218
  %2226 = load i64, i64* %55, align 8, !tbaa !230
  %2227 = and i64 %2226, 4294967295
  %2228 = icmp eq i64 %2221, %2227
  br i1 %2228, label %2230, label %2229

2229:                                             ; preds = %2225
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8** %59, align 8, !tbaa !25
  store i32 16209, i32* %24, align 8, !tbaa !142
  br label %2235

2230:                                             ; preds = %2225, %2218, %2163, %2155
  %2231 = phi i8* [ %2157, %2163 ], [ %2157, %2155 ], [ %2219, %2218 ], [ %2219, %2225 ]
  %2232 = phi i32 [ %2158, %2163 ], [ %2158, %2155 ], [ %2220, %2218 ], [ %2220, %2225 ]
  %2233 = phi i64 [ %2159, %2163 ], [ %2159, %2155 ], [ 0, %2218 ], [ 0, %2225 ]
  %2234 = phi i32 [ %2160, %2163 ], [ %2160, %2155 ], [ 0, %2218 ], [ 0, %2225 ]
  store i32 16208, i32* %24, align 8, !tbaa !142
  br label %2370

2235:                                             ; preds = %1197, %1375, %2037, %2042, %1439, %1448, %2229, %2147, %2045, %1855, %1786, %1592, %1588, %1584, %1422, %1413, %1409, %1076, %975, %930, %922, %900, %831, %797, %724, %711, %255, %251, %212, %211, %196, %192, %174, %135
  %2236 = phi i8* [ %2219, %2229 ], [ %2106, %2147 ], [ %96, %2045 ], [ %1838, %1855 ], [ %1838, %2042 ], [ %1838, %2037 ], [ %1774, %1786 ], [ %1442, %1448 ], [ %1442, %1439 ], [ %1571, %1584 ], [ %1571, %1588 ], [ %1571, %1592 ], [ %1403, %1409 ], [ %1403, %1413 ], [ %1403, %1422 ], [ %989, %1076 ], [ %957, %975 ], [ %925, %922 ], [ %910, %930 ], [ %892, %900 ], [ %789, %797 ], [ %814, %831 ], [ %700, %711 ], [ %713, %724 ], [ %244, %251 ], [ %244, %255 ], [ %96, %135 ], [ %162, %174 ], [ %162, %192 ], [ %162, %196 ], [ %162, %211 ], [ %162, %212 ], [ %1269, %1375 ], [ %1189, %1197 ]
  %2237 = phi i8* [ %97, %2229 ], [ %97, %2147 ], [ %2048, %2045 ], [ %97, %1855 ], [ %2038, %2042 ], [ %2038, %2037 ], [ %97, %1786 ], [ %1440, %1448 ], [ %1440, %1439 ], [ %97, %1584 ], [ %97, %1588 ], [ %97, %1592 ], [ %97, %1409 ], [ %97, %1413 ], [ %97, %1422 ], [ %97, %1076 ], [ %97, %975 ], [ %927, %922 ], [ %97, %930 ], [ %97, %900 ], [ %97, %797 ], [ %97, %831 ], [ %97, %711 ], [ %97, %724 ], [ %97, %251 ], [ %97, %255 ], [ %97, %135 ], [ %97, %174 ], [ %97, %192 ], [ %97, %196 ], [ %97, %211 ], [ %97, %212 ], [ %97, %1375 ], [ %97, %1197 ]
  %2238 = phi i32 [ %2220, %2229 ], [ %2107, %2147 ], [ %98, %2045 ], [ %1839, %1855 ], [ %1839, %2042 ], [ %1839, %2037 ], [ %1775, %1786 ], [ %1443, %1448 ], [ %1443, %1439 ], [ %1572, %1584 ], [ %1572, %1588 ], [ %1572, %1592 ], [ %1404, %1409 ], [ %1404, %1413 ], [ %1404, %1422 ], [ %990, %1076 ], [ %958, %975 ], [ %924, %922 ], [ %911, %930 ], [ %893, %900 ], [ %790, %797 ], [ %815, %831 ], [ %701, %711 ], [ %714, %724 ], [ %245, %251 ], [ %245, %255 ], [ %98, %135 ], [ %163, %174 ], [ %163, %192 ], [ %163, %196 ], [ %163, %211 ], [ %163, %212 ], [ %1270, %1375 ], [ %1190, %1197 ]
  %2239 = phi i32 [ %99, %2229 ], [ %99, %2147 ], [ %2049, %2045 ], [ %99, %1855 ], [ %2039, %2042 ], [ %2039, %2037 ], [ %99, %1786 ], [ %1441, %1448 ], [ %1441, %1439 ], [ %99, %1584 ], [ %99, %1588 ], [ %99, %1592 ], [ %99, %1409 ], [ %99, %1413 ], [ %99, %1422 ], [ %99, %1076 ], [ %99, %975 ], [ %926, %922 ], [ %99, %930 ], [ %99, %900 ], [ %99, %797 ], [ %99, %831 ], [ %99, %711 ], [ %99, %724 ], [ %99, %251 ], [ %99, %255 ], [ %99, %135 ], [ %99, %174 ], [ %99, %192 ], [ %99, %196 ], [ %99, %211 ], [ %99, %212 ], [ %99, %1375 ], [ %99, %1197 ]
  %2240 = phi i64 [ %2221, %2229 ], [ %2108, %2147 ], [ %100, %2045 ], [ %1840, %1855 ], [ %1840, %2042 ], [ %1840, %2037 ], [ %1781, %1786 ], [ %1444, %1448 ], [ %1444, %1439 ], [ %1579, %1584 ], [ %1579, %1588 ], [ %1579, %1592 ], [ %1405, %1409 ], [ %1405, %1413 ], [ %1405, %1422 ], [ %991, %1076 ], [ %970, %975 ], [ %912, %922 ], [ %912, %930 ], [ %894, %900 ], [ %800, %797 ], [ %832, %831 ], [ %702, %711 ], [ %715, %724 ], [ %246, %251 ], [ %246, %255 ], [ %100, %135 ], [ 0, %174 ], [ %164, %192 ], [ %164, %196 ], [ %198, %211 ], [ 0, %212 ], [ %1271, %1375 ], [ %1194, %1197 ]
  %2241 = phi i32 [ %2222, %2229 ], [ %2109, %2147 ], [ %101, %2045 ], [ %1841, %1855 ], [ %1841, %2042 ], [ %1841, %2037 ], [ %1782, %1786 ], [ %1445, %1448 ], [ %1445, %1439 ], [ %1580, %1584 ], [ %1580, %1588 ], [ %1580, %1592 ], [ %1406, %1409 ], [ %1406, %1413 ], [ %1406, %1422 ], [ %992, %1076 ], [ %971, %975 ], [ %913, %922 ], [ %913, %930 ], [ %895, %900 ], [ %801, %797 ], [ %833, %831 ], [ %703, %711 ], [ %716, %724 ], [ %247, %251 ], [ %247, %255 ], [ %101, %135 ], [ 0, %174 ], [ %165, %192 ], [ %165, %196 ], [ %199, %211 ], [ 0, %212 ], [ %1272, %1375 ], [ %1195, %1197 ]
  %2242 = phi i32 [ %2161, %2229 ], [ %99, %2147 ], [ %102, %2045 ], [ %102, %1855 ], [ %102, %2042 ], [ %102, %2037 ], [ %102, %1786 ], [ %102, %1448 ], [ %102, %1439 ], [ %102, %1584 ], [ %102, %1588 ], [ %102, %1592 ], [ %102, %1409 ], [ %102, %1413 ], [ %102, %1422 ], [ %102, %1076 ], [ %102, %975 ], [ %102, %922 ], [ %102, %930 ], [ %102, %900 ], [ %102, %797 ], [ %102, %831 ], [ %102, %711 ], [ %102, %724 ], [ %102, %251 ], [ %102, %255 ], [ %102, %135 ], [ %102, %174 ], [ %102, %192 ], [ %102, %196 ], [ %102, %211 ], [ %102, %212 ], [ %102, %1375 ], [ %102, %1197 ]
  %2243 = phi i32 [ %103, %2229 ], [ %103, %2147 ], [ %103, %2045 ], [ %1842, %1855 ], [ %1842, %2042 ], [ %1842, %2037 ], [ %1650, %1786 ], [ %1435, %1448 ], [ %1435, %1439 ], [ %1435, %1584 ], [ %1435, %1588 ], [ %1435, %1592 ], [ %1084, %1409 ], [ %1411, %1413 ], [ %1420, %1422 ], [ %1074, %1076 ], [ %103, %975 ], [ %103, %922 ], [ %103, %930 ], [ %103, %900 ], [ %103, %797 ], [ %103, %831 ], [ %103, %711 ], [ %103, %724 ], [ %103, %251 ], [ %103, %255 ], [ %103, %135 ], [ %103, %174 ], [ %103, %192 ], [ %103, %196 ], [ %103, %211 ], [ %103, %212 ], [ %1084, %1375 ], [ %1084, %1197 ]
  %2244 = load i32, i32* %24, align 8, !tbaa !142
  br label %94

2245:                                             ; preds = %1238
  %2246 = trunc i64 %1239 to i32
  br label %2370

2247:                                             ; preds = %1171
  %2248 = trunc i64 %1172 to i32
  br label %2370

2249:                                             ; preds = %1208
  %2250 = trunc i64 %1209 to i32
  br label %2370

2251:                                             ; preds = %132
  %2252 = zext i32 %101 to i64
  br label %2253

2253:                                             ; preds = %145, %2251
  %2254 = phi i64 [ %2252, %2251 ], [ %143, %145 ]
  %2255 = phi i64 [ %100, %2251 ], [ %142, %145 ]
  %2256 = phi i8* [ %96, %2251 ], [ %138, %145 ]
  %2257 = trunc i64 %2254 to i32
  br label %2370

2258:                                             ; preds = %671
  %2259 = zext i32 %665 to i64
  br label %2260

2260:                                             ; preds = %683, %2258
  %2261 = phi i64 [ %2259, %2258 ], [ %681, %683 ]
  %2262 = phi i64 [ %664, %2258 ], [ %680, %683 ]
  %2263 = phi i8* [ %662, %2258 ], [ %676, %683 ]
  %2264 = trunc i64 %2261 to i32
  br label %2370

2265:                                             ; preds = %417
  %2266 = zext i32 %421 to i64
  br label %2267

2267:                                             ; preds = %434, %2265
  %2268 = phi i64 [ %2266, %2265 ], [ %432, %434 ]
  %2269 = phi i64 [ %420, %2265 ], [ %431, %434 ]
  %2270 = phi i8* [ %418, %2265 ], [ %427, %434 ]
  %2271 = trunc i64 %2268 to i32
  br label %2370

2272:                                             ; preds = %355
  %2273 = zext i32 %356 to i64
  br label %2274

2274:                                             ; preds = %371, %2272
  %2275 = phi i64 [ %2273, %2272 ], [ %369, %371 ]
  %2276 = phi i64 [ %357, %2272 ], [ %368, %371 ]
  %2277 = phi i8* [ %359, %2272 ], [ %364, %371 ]
  %2278 = trunc i64 %2275 to i32
  br label %2370

2279:                                             ; preds = %279
  %2280 = zext i32 %280 to i64
  br label %2281

2281:                                             ; preds = %295, %306, %317, %2279
  %2282 = phi i64 [ %2280, %2279 ], [ %315, %317 ], [ %304, %306 ], [ %293, %295 ]
  %2283 = phi i64 [ %281, %2279 ], [ %314, %317 ], [ %303, %306 ], [ %292, %295 ]
  %2284 = phi i8* [ %283, %2279 ], [ %310, %317 ], [ %299, %306 ], [ %288, %295 ]
  %2285 = trunc i64 %2282 to i32
  br label %2370

2286:                                             ; preds = %124
  %2287 = zext i32 %101 to i64
  br label %2288

2288:                                             ; preds = %227, %2286
  %2289 = phi i64 [ %2287, %2286 ], [ %225, %227 ]
  %2290 = phi i64 [ %100, %2286 ], [ %224, %227 ]
  %2291 = phi i8* [ %96, %2286 ], [ %220, %227 ]
  %2292 = trunc i64 %2289 to i32
  br label %2370

2293:                                             ; preds = %119
  %2294 = zext i32 %101 to i64
  br label %2295

2295:                                             ; preds = %735, %746, %757, %2293
  %2296 = phi i64 [ %2294, %2293 ], [ %755, %757 ], [ %744, %746 ], [ %733, %735 ]
  %2297 = phi i64 [ %100, %2293 ], [ %754, %757 ], [ %743, %746 ], [ %732, %735 ]
  %2298 = phi i8* [ %96, %2293 ], [ %750, %757 ], [ %739, %746 ], [ %728, %735 ]
  %2299 = trunc i64 %2296 to i32
  br label %2370

2300:                                             ; preds = %840
  %2301 = zext i32 %841 to i64
  br label %2302

2302:                                             ; preds = %853, %864, %875, %2300
  %2303 = phi i64 [ %2301, %2300 ], [ %873, %875 ], [ %862, %864 ], [ %851, %853 ]
  %2304 = phi i64 [ %837, %2300 ], [ %872, %875 ], [ %861, %864 ], [ %850, %853 ]
  %2305 = phi i8* [ %96, %2300 ], [ %868, %875 ], [ %857, %864 ], [ %846, %853 ]
  %2306 = trunc i64 %2303 to i32
  br label %2370

2307:                                             ; preds = %114
  %2308 = zext i32 %101 to i64
  br label %2309

2309:                                             ; preds = %940, %2307
  %2310 = phi i64 [ %2308, %2307 ], [ %938, %940 ]
  %2311 = phi i64 [ %100, %2307 ], [ %937, %940 ]
  %2312 = phi i8* [ %96, %2307 ], [ %933, %940 ]
  %2313 = trunc i64 %2310 to i32
  br label %2370

2314:                                             ; preds = %2168
  %2315 = zext i32 %2160 to i64
  br label %2316

2316:                                             ; preds = %2180, %2191, %2202, %2314
  %2317 = phi i64 [ %2315, %2314 ], [ %2200, %2202 ], [ %2189, %2191 ], [ %2178, %2180 ]
  %2318 = phi i64 [ %2159, %2314 ], [ %2199, %2202 ], [ %2188, %2191 ], [ %2177, %2180 ]
  %2319 = phi i8* [ %2157, %2314 ], [ %2195, %2202 ], [ %2184, %2191 ], [ %2173, %2180 ]
  %2320 = trunc i64 %2317 to i32
  br label %2370

2321:                                             ; preds = %2055
  %2322 = zext i32 %101 to i64
  br label %2323

2323:                                             ; preds = %2067, %2078, %2089, %2321
  %2324 = phi i64 [ %2322, %2321 ], [ %2087, %2089 ], [ %2076, %2078 ], [ %2065, %2067 ]
  %2325 = phi i64 [ %100, %2321 ], [ %2086, %2089 ], [ %2075, %2078 ], [ %2064, %2067 ]
  %2326 = phi i8* [ %96, %2321 ], [ %2082, %2089 ], [ %2071, %2078 ], [ %2060, %2067 ]
  %2327 = trunc i64 %2324 to i32
  br label %2370

2328:                                             ; preds = %1109
  %2329 = zext i32 %1098 to i64
  %2330 = shl i32 %1098, 3
  %2331 = add i32 %2330, %1096
  %2332 = getelementptr i8, i8* %1099, i64 %2329
  br label %2370

2333:                                             ; preds = %1800
  %2334 = shl i32 %1793, 3
  %2335 = add i32 %1795, %2334
  %2336 = zext i32 %1793 to i64
  %2337 = getelementptr i8, i8* %1792, i64 %2336
  br label %2370

2338:                                             ; preds = %1723
  %2339 = zext i32 %1694 to i64
  %2340 = shl i32 %1694, 3
  %2341 = add i32 %2340, %1696
  %2342 = getelementptr i8, i8* %1693, i64 %2339
  br label %2370

2343:                                             ; preds = %1664
  %2344 = zext i32 %1647 to i64
  %2345 = shl i32 %1647, 3
  %2346 = add i32 %2345, %1649
  %2347 = getelementptr i8, i8* %1646, i64 %2344
  br label %2370

2348:                                             ; preds = %1607
  %2349 = shl i32 %1598, 3
  %2350 = add i32 %1600, %2349
  %2351 = zext i32 %1598 to i64
  %2352 = getelementptr i8, i8* %1597, i64 %2351
  br label %2370

2353:                                             ; preds = %1522
  %2354 = zext i32 %1493 to i64
  %2355 = shl i32 %1493, 3
  %2356 = add i32 %2355, %1495
  %2357 = getelementptr i8, i8* %1492, i64 %2354
  br label %2370

2358:                                             ; preds = %1463
  %2359 = zext i32 %1432 to i64
  %2360 = shl i32 %1432, 3
  %2361 = add i32 %2360, %1434
  %2362 = getelementptr i8, i8* %1431, i64 %2359
  br label %2370

2363:                                             ; preds = %2043, %1837, %1423, %916, %901, %783, %649, %609, %589, %549, %533, %94
  %2364 = phi i32 [ 0, %2043 ], [ 0, %1837 ], [ %99, %1423 ], [ %99, %916 ], [ %99, %901 ], [ %99, %783 ], [ %99, %649 ], [ %99, %609 ], [ %99, %589 ], [ %99, %549 ], [ %99, %533 ], [ %99, %94 ]
  %2365 = phi i8* [ %96, %2043 ], [ %1838, %1837 ], [ %1403, %1423 ], [ %910, %916 ], [ %892, %901 ], [ %784, %783 ], [ %652, %649 ], [ %602, %609 ], [ %592, %589 ], [ %542, %549 ], [ %535, %533 ], [ %96, %94 ]
  %2366 = phi i32 [ %98, %2043 ], [ %1839, %1837 ], [ %1404, %1423 ], [ %911, %916 ], [ %893, %901 ], [ %785, %783 ], [ %650, %649 ], [ 0, %609 ], [ %590, %589 ], [ 0, %549 ], [ %536, %533 ], [ %98, %94 ]
  %2367 = phi i64 [ %100, %2043 ], [ %1840, %1837 ], [ %1405, %1423 ], [ %912, %916 ], [ 0, %901 ], [ %786, %783 ], [ %604, %649 ], [ %604, %609 ], [ %544, %589 ], [ %544, %549 ], [ %483, %533 ], [ %100, %94 ]
  %2368 = phi i32 [ %101, %2043 ], [ %1841, %1837 ], [ %1406, %1423 ], [ %913, %916 ], [ 0, %901 ], [ %787, %783 ], [ %605, %649 ], [ %605, %609 ], [ %545, %589 ], [ %545, %549 ], [ %484, %533 ], [ %101, %94 ]
  %2369 = phi i32 [ %103, %2043 ], [ %1842, %1837 ], [ 0, %1423 ], [ %103, %916 ], [ %103, %901 ], [ %103, %783 ], [ %103, %649 ], [ %103, %609 ], [ %103, %589 ], [ %103, %549 ], [ %103, %533 ], [ 1, %94 ]
  br label %2370

2370:                                             ; preds = %1021, %802, %94, %2363, %2358, %2353, %2348, %2343, %2338, %2333, %2328, %2323, %2316, %2309, %2302, %2295, %2288, %2281, %2274, %2267, %2260, %2253, %2249, %2247, %2245, %2230, %823
  %2371 = phi i32 [ %99, %823 ], [ %99, %2230 ], [ %99, %2245 ], [ %99, %2247 ], [ %99, %2249 ], [ %99, %2253 ], [ %99, %2260 ], [ %99, %2267 ], [ %99, %2274 ], [ %99, %2281 ], [ %99, %2288 ], [ %99, %2295 ], [ %99, %2302 ], [ %99, %2309 ], [ %99, %2316 ], [ %99, %2323 ], [ %99, %2328 ], [ %99, %2333 ], [ %99, %2338 ], [ %99, %2343 ], [ %99, %2348 ], [ %99, %2353 ], [ %99, %2358 ], [ %2364, %2363 ], [ %99, %94 ], [ %99, %802 ], [ %99, %1021 ]
  %2372 = phi i8* [ %814, %823 ], [ %2231, %2230 ], [ %1242, %2245 ], [ %1175, %2247 ], [ %1212, %2249 ], [ %2256, %2253 ], [ %2263, %2260 ], [ %2270, %2267 ], [ %2277, %2274 ], [ %2284, %2281 ], [ %2291, %2288 ], [ %2298, %2295 ], [ %2305, %2302 ], [ %2312, %2309 ], [ %2319, %2316 ], [ %2326, %2323 ], [ %2332, %2328 ], [ %2337, %2333 ], [ %2342, %2338 ], [ %2347, %2343 ], [ %2352, %2348 ], [ %2357, %2353 ], [ %2362, %2358 ], [ %2365, %2363 ], [ %789, %802 ], [ %96, %94 ], [ %1019, %1021 ]
  %2373 = phi i32 [ %815, %823 ], [ %2232, %2230 ], [ 0, %2245 ], [ 0, %2247 ], [ 0, %2249 ], [ 0, %2253 ], [ 0, %2260 ], [ 0, %2267 ], [ 0, %2274 ], [ 0, %2281 ], [ 0, %2288 ], [ 0, %2295 ], [ 0, %2302 ], [ 0, %2309 ], [ 0, %2316 ], [ 0, %2323 ], [ 0, %2328 ], [ 0, %2333 ], [ 0, %2338 ], [ 0, %2343 ], [ 0, %2348 ], [ 0, %2353 ], [ 0, %2358 ], [ %2366, %2363 ], [ 0, %802 ], [ %98, %94 ], [ 0, %1021 ]
  %2374 = phi i64 [ %824, %823 ], [ %2233, %2230 ], [ %1240, %2245 ], [ %1173, %2247 ], [ %1210, %2249 ], [ %2255, %2253 ], [ %2262, %2260 ], [ %2269, %2267 ], [ %2276, %2274 ], [ %2283, %2281 ], [ %2290, %2288 ], [ %2297, %2295 ], [ %2304, %2302 ], [ %2311, %2309 ], [ %2318, %2316 ], [ %2325, %2323 ], [ %1111, %2328 ], [ %1802, %2333 ], [ %1725, %2338 ], [ %1666, %2343 ], [ %1609, %2348 ], [ %1524, %2353 ], [ %1465, %2358 ], [ %2367, %2363 ], [ %791, %802 ], [ %100, %94 ], [ %1017, %1021 ]
  %2375 = phi i32 [ %825, %823 ], [ %2234, %2230 ], [ %2246, %2245 ], [ %2248, %2247 ], [ %2250, %2249 ], [ %2257, %2253 ], [ %2264, %2260 ], [ %2271, %2267 ], [ %2278, %2274 ], [ %2285, %2281 ], [ %2292, %2288 ], [ %2299, %2295 ], [ %2306, %2302 ], [ %2313, %2309 ], [ %2320, %2316 ], [ %2327, %2323 ], [ %2331, %2328 ], [ %2335, %2333 ], [ %2341, %2338 ], [ %2346, %2343 ], [ %2350, %2348 ], [ %2356, %2353 ], [ %2361, %2358 ], [ %2368, %2363 ], [ %792, %802 ], [ %101, %94 ], [ %1016, %1021 ]
  %2376 = phi i32 [ %102, %823 ], [ %2161, %2230 ], [ %102, %2245 ], [ %102, %2247 ], [ %102, %2249 ], [ %102, %2253 ], [ %102, %2260 ], [ %102, %2267 ], [ %102, %2274 ], [ %102, %2281 ], [ %102, %2288 ], [ %102, %2295 ], [ %102, %2302 ], [ %102, %2309 ], [ %2161, %2316 ], [ %102, %2323 ], [ %102, %2328 ], [ %102, %2333 ], [ %102, %2338 ], [ %102, %2343 ], [ %102, %2348 ], [ %102, %2353 ], [ %102, %2358 ], [ %102, %2363 ], [ %102, %94 ], [ %102, %802 ], [ %102, %1021 ]
  %2377 = phi i32 [ %103, %823 ], [ 1, %2230 ], [ %1084, %2245 ], [ %1084, %2247 ], [ %1084, %2249 ], [ %103, %2253 ], [ %103, %2260 ], [ %103, %2267 ], [ %103, %2274 ], [ %103, %2281 ], [ %103, %2288 ], [ %103, %2295 ], [ %103, %2302 ], [ %103, %2309 ], [ %103, %2316 ], [ %103, %2323 ], [ %1084, %2328 ], [ %1796, %2333 ], [ %1650, %2338 ], [ %1650, %2343 ], [ %1601, %2348 ], [ %1435, %2353 ], [ %1435, %2358 ], [ %2369, %2363 ], [ %103, %802 ], [ -3, %94 ], [ %103, %1021 ]
  store i8* %97, i8** %29, align 8, !tbaa !87
  store i32 %2371, i32* %45, align 8, !tbaa !86
  store i8* %2372, i8** %33, align 8, !tbaa !89
  store i32 %2373, i32* %47, align 8, !tbaa !84
  store i64 %2374, i64* %49, align 8, !tbaa !168
  store i32 %2375, i32* %51, align 8, !tbaa !169
  %2378 = load i32, i32* %83, align 4, !tbaa !137
  %2379 = icmp eq i32 %2378, 0
  br i1 %2379, label %2380, label %2389

2380:                                             ; preds = %2370
  %2381 = icmp eq i32 %2376, %2371
  br i1 %2381, label %2458, label %2382

2382:                                             ; preds = %2380
  %2383 = load i32, i32* %24, align 8, !tbaa !142
  %2384 = icmp ult i32 %2383, 16209
  br i1 %2384, label %2385, label %2458

2385:                                             ; preds = %2382
  %2386 = icmp ult i32 %2383, 16206
  %2387 = icmp ne i32 %1, 4
  %2388 = or i1 %2387, %2386
  br i1 %2388, label %2389, label %2458

2389:                                             ; preds = %2385, %2370
  %2390 = sub i32 %2376, %2371
  %2391 = load %struct.inflate_state*, %struct.inflate_state** %16, align 8, !tbaa !31
  %2392 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 14
  %2393 = load i8*, i8** %2392, align 8, !tbaa !138
  %2394 = icmp eq i8* %2393, null
  br i1 %2394, label %2395, label %2404

2395:                                             ; preds = %2389
  %2396 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %7, align 8, !tbaa !28
  %2397 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %2398 = load i8*, i8** %2397, align 8, !tbaa !29
  %2399 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 10
  %2400 = load i32, i32* %2399, align 8, !tbaa !136
  %2401 = shl nuw i32 1, %2400
  %2402 = call i8* %2396(i8* noundef %2398, i32 noundef %2401, i32 noundef 1) #25
  store i8* %2402, i8** %2392, align 8, !tbaa !138
  %2403 = icmp eq i8* %2402, null
  br i1 %2403, label %2457, label %2404

2404:                                             ; preds = %2395, %2389
  %2405 = phi i8* [ %2402, %2395 ], [ %2393, %2389 ]
  %2406 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 11
  %2407 = load i32, i32* %2406, align 4, !tbaa !137
  %2408 = icmp eq i32 %2407, 0
  br i1 %2408, label %2409, label %2415

2409:                                             ; preds = %2404
  %2410 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 10
  %2411 = load i32, i32* %2410, align 8, !tbaa !136
  %2412 = shl nuw i32 1, %2411
  store i32 %2412, i32* %2406, align 4, !tbaa !137
  %2413 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 13
  store i32 0, i32* %2413, align 4, !tbaa !139
  %2414 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 12
  store i32 0, i32* %2414, align 8, !tbaa !140
  br label %2415

2415:                                             ; preds = %2409, %2404
  %2416 = phi i32 [ %2412, %2409 ], [ %2407, %2404 ]
  %2417 = icmp ugt i32 %2416, %2390
  br i1 %2417, label %2425, label %2418

2418:                                             ; preds = %2415
  %2419 = zext i32 %2416 to i64
  %2420 = sub nsw i64 0, %2419
  %2421 = getelementptr inbounds i8, i8* %97, i64 %2420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2405, i8* align 1 %2421, i64 %2419, i1 false) #25
  %2422 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 13
  store i32 0, i32* %2422, align 4, !tbaa !139
  %2423 = load i32, i32* %2406, align 4, !tbaa !137
  %2424 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 12
  store i32 %2423, i32* %2424, align 8, !tbaa !140
  br label %2458

2425:                                             ; preds = %2415
  %2426 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 13
  %2427 = load i32, i32* %2426, align 4, !tbaa !139
  %2428 = sub i32 %2416, %2427
  %2429 = icmp ugt i32 %2428, %2390
  %2430 = select i1 %2429, i32 %2390, i32 %2428
  %2431 = zext i32 %2427 to i64
  %2432 = getelementptr inbounds i8, i8* %2405, i64 %2431
  %2433 = zext i32 %2390 to i64
  %2434 = sub nsw i64 0, %2433
  %2435 = getelementptr inbounds i8, i8* %97, i64 %2434
  %2436 = zext i32 %2430 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2432, i8* align 1 %2435, i64 %2436, i1 false) #25
  %2437 = sub i32 %2390, %2430
  %2438 = icmp eq i32 %2437, 0
  br i1 %2438, label %2446, label %2439

2439:                                             ; preds = %2425
  %2440 = load i8*, i8** %2392, align 8, !tbaa !138
  %2441 = zext i32 %2437 to i64
  %2442 = sub nsw i64 0, %2441
  %2443 = getelementptr inbounds i8, i8* %97, i64 %2442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2440, i8* align 1 %2443, i64 %2441, i1 false) #25
  store i32 %2437, i32* %2426, align 4, !tbaa !139
  %2444 = load i32, i32* %2406, align 4, !tbaa !137
  %2445 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 12
  store i32 %2444, i32* %2445, align 8, !tbaa !140
  br label %2458

2446:                                             ; preds = %2425
  %2447 = load i32, i32* %2426, align 4, !tbaa !139
  %2448 = add i32 %2447, %2430
  %2449 = load i32, i32* %2406, align 4, !tbaa !137
  %2450 = icmp eq i32 %2448, %2449
  %2451 = select i1 %2450, i32 0, i32 %2448
  store i32 %2451, i32* %2426, align 4
  %2452 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %2391, i64 0, i32 12
  %2453 = load i32, i32* %2452, align 8, !tbaa !140
  %2454 = icmp ult i32 %2453, %2449
  br i1 %2454, label %2455, label %2458

2455:                                             ; preds = %2446
  %2456 = add i32 %2453, %2430
  store i32 %2456, i32* %2452, align 8, !tbaa !140
  br label %2458

2457:                                             ; preds = %2395
  store i32 16210, i32* %24, align 8, !tbaa !142
  br label %2515

2458:                                             ; preds = %2418, %2446, %2455, %2439, %2385, %2382, %2380
  %2459 = load i32, i32* %47, align 8, !tbaa !84
  %2460 = sub i32 %48, %2459
  %2461 = load i32, i32* %45, align 8, !tbaa !86
  %2462 = sub i32 %2376, %2461
  %2463 = zext i32 %2460 to i64
  %2464 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  %2465 = load i64, i64* %2464, align 8, !tbaa !78
  %2466 = add i64 %2465, %2463
  store i64 %2466, i64* %2464, align 8, !tbaa !78
  %2467 = zext i32 %2462 to i64
  %2468 = load i64, i64* %54, align 8, !tbaa !88
  %2469 = add i64 %2468, %2467
  store i64 %2469, i64* %54, align 8, !tbaa !88
  %2470 = load i64, i64* %55, align 8, !tbaa !230
  %2471 = add i64 %2470, %2467
  store i64 %2471, i64* %55, align 8, !tbaa !230
  %2472 = load i32, i32* %53, align 8, !tbaa !231
  %2473 = and i32 %2472, 4
  %2474 = icmp ne i32 %2473, 0
  %2475 = icmp ne i32 %2462, 0
  %2476 = select i1 %2474, i1 %2475, i1 false
  br i1 %2476, label %2477, label %2490

2477:                                             ; preds = %2458
  %2478 = load i32, i32* %56, align 8, !tbaa !233
  %2479 = icmp eq i32 %2478, 0
  %2480 = load i64, i64* %57, align 8, !tbaa !237
  %2481 = load i8*, i8** %29, align 8, !tbaa !87
  %2482 = sub nsw i64 0, %2467
  %2483 = getelementptr inbounds i8, i8* %2481, i64 %2482
  br i1 %2479, label %2486, label %2484

2484:                                             ; preds = %2477
  %2485 = call i64 @crc32(i64 noundef %2480, i8* noundef %2483, i32 noundef %2462) #25
  br label %2488

2486:                                             ; preds = %2477
  %2487 = call i64 @adler32(i64 noundef %2480, i8* noundef %2483, i32 noundef %2462) #25
  br label %2488

2488:                                             ; preds = %2486, %2484
  %2489 = phi i64 [ %2485, %2484 ], [ %2487, %2486 ]
  store i64 %2489, i64* %57, align 8, !tbaa !237
  store i64 %2489, i64* %58, align 8, !tbaa !82
  br label %2490

2490:                                             ; preds = %2488, %2458
  %2491 = load i32, i32* %51, align 8, !tbaa !169
  %2492 = load i32, i32* %87, align 4, !tbaa !143
  %2493 = icmp eq i32 %2492, 0
  %2494 = select i1 %2493, i32 0, i32 64
  %2495 = add nsw i32 %2494, %2491
  %2496 = load i32, i32* %24, align 8, !tbaa !142
  %2497 = icmp eq i32 %2496, 16191
  %2498 = select i1 %2497, i32 128, i32 0
  %2499 = add nsw i32 %2495, %2498
  %2500 = icmp eq i32 %2496, 16199
  %2501 = icmp eq i32 %2496, 16194
  %2502 = or i1 %2500, %2501
  %2503 = select i1 %2502, i32 256, i32 0
  %2504 = add nsw i32 %2499, %2503
  %2505 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 11
  store i32 %2504, i32* %2505, align 8, !tbaa !79
  %2506 = icmp eq i32 %2460, 0
  %2507 = icmp eq i32 %2462, 0
  %2508 = select i1 %2506, i1 %2507, i1 false
  %2509 = icmp eq i32 %1, 4
  %2510 = or i1 %2509, %2508
  %2511 = icmp eq i32 %2377, 0
  %2512 = select i1 %2510, i1 %2511, i1 false
  %2513 = select i1 %2512, i32 -5, i32 %2377
  br label %2515

2514:                                             ; preds = %94
  br label %2515

2515:                                             ; preds = %94, %2514, %14, %19, %2, %6, %10, %23, %28, %36, %2490, %2457, %780
  %2516 = phi i32 [ -4, %2457 ], [ %2513, %2490 ], [ 2, %780 ], [ -2, %36 ], [ -2, %28 ], [ -2, %23 ], [ -2, %10 ], [ -2, %6 ], [ -2, %2 ], [ -2, %19 ], [ -2, %14 ], [ -4, %2514 ], [ -2, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25
  ret i32 %2516
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #7

; Function Attrs: nounwind uwtable
define i32 @inflateEnd(%struct.z_stream_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %41, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = bitcast %struct.internal_state** %12 to %struct.inflate_state**
  %14 = load %struct.inflate_state*, %struct.inflate_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.inflate_state* %14, null
  %16 = bitcast %struct.inflate_state* %14 to i8*
  br i1 %15, label %41, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !229
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %41

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !142
  %24 = add i32 %23, -16180
  %25 = icmp ult i32 %24, 32
  br i1 %25, label %26, label %41

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 14
  %28 = load i8*, i8** %27, align 8, !tbaa !138
  %29 = icmp eq i8* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %32 = load i8*, i8** %31, align 8, !tbaa !29
  tail call void %9(i8* noundef %32, i8* noundef nonnull %28) #25
  %33 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %34 = bitcast %struct.internal_state** %12 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !31
  br label %36

36:                                               ; preds = %26, %30
  %37 = phi i8* [ %35, %30 ], [ %16, %26 ]
  %38 = phi void (i8*, i8*)* [ %33, %30 ], [ %9, %26 ]
  %39 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %40 = load i8*, i8** %39, align 8, !tbaa !29
  tail call void %38(i8* noundef %40, i8* noundef %37) #25
  store %struct.internal_state* null, %struct.internal_state** %12, align 8, !tbaa !31
  br label %41

41:                                               ; preds = %11, %17, %1, %3, %7, %21, %36
  %42 = phi i32 [ 0, %36 ], [ -2, %21 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %17 ], [ -2, %11 ]
  ret i32 %42
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define i32 @inflateGetDictionary(%struct.z_stream_s* noundef readonly %0, i8* noundef writeonly %1, i32* noundef writeonly %2) local_unnamed_addr #8 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %54, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = bitcast %struct.internal_state** %14 to %struct.inflate_state**
  %16 = load %struct.inflate_state*, %struct.inflate_state** %15, align 8, !tbaa !31
  %17 = icmp eq %struct.inflate_state* %16, null
  br i1 %17, label %54, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 0
  %20 = load %struct.z_stream_s*, %struct.z_stream_s** %19, align 8, !tbaa !229
  %21 = icmp eq %struct.z_stream_s* %20, %0
  br i1 %21, label %22, label %54

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 8, !tbaa !142
  %25 = add i32 %24, -16180
  %26 = icmp ult i32 %25, 32
  br i1 %26, label %27, label %54

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 12
  %29 = load i32, i32* %28, align 8, !tbaa !140
  %30 = icmp ne i32 %29, 0
  %31 = icmp ne i8* %1, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %50

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 14
  %35 = load i8*, i8** %34, align 8, !tbaa !138
  %36 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 13
  %37 = load i32, i32* %36, align 4, !tbaa !139
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  %40 = sub i32 %29, %37
  %41 = zext i32 %40 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %39, i64 %41, i1 false)
  %42 = load i32, i32* %28, align 8, !tbaa !140
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = load i32, i32* %36, align 4, !tbaa !139
  %46 = zext i32 %45 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = load i8*, i8** %34, align 8, !tbaa !138
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 %49, i64 %46, i1 false)
  br label %50

50:                                               ; preds = %33, %27
  %51 = icmp eq i32* %2, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = load i32, i32* %28, align 8, !tbaa !140
  store i32 %53, i32* %2, align 4, !tbaa !16
  br label %54

54:                                               ; preds = %13, %18, %3, %5, %9, %50, %52, %22
  %55 = phi i32 [ -2, %22 ], [ 0, %52 ], [ 0, %50 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %18 ], [ -2, %13 ]
  ret i32 %55
}

; Function Attrs: nounwind uwtable
define i32 @inflateSetDictionary(%struct.z_stream_s* noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %111, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %111, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %111, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = bitcast %struct.internal_state** %14 to %struct.inflate_state**
  %16 = load %struct.inflate_state*, %struct.inflate_state** %15, align 8, !tbaa !31
  %17 = icmp eq %struct.inflate_state* %16, null
  br i1 %17, label %111, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 0
  %20 = load %struct.z_stream_s*, %struct.z_stream_s** %19, align 8, !tbaa !229
  %21 = icmp eq %struct.z_stream_s* %20, %0
  br i1 %21, label %22, label %111

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 8, !tbaa !142
  %25 = add i32 %24, -16180
  %26 = icmp ult i32 %25, 32
  br i1 %26, label %27, label %111

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 3
  %29 = load i32, i32* %28, align 8, !tbaa !231
  %30 = icmp eq i32 %29, 0
  %31 = icmp eq i32 %24, 16190
  br i1 %30, label %33, label %32

32:                                               ; preds = %27
  br i1 %31, label %34, label %111

33:                                               ; preds = %27
  br i1 %31, label %34, label %42

34:                                               ; preds = %32, %33
  %35 = tail call i64 @adler32(i64 noundef 0, i8* noundef null, i32 noundef 0) #25
  %36 = tail call i64 @adler32(i64 noundef %35, i8* noundef %1, i32 noundef %2) #25
  %37 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 7
  %38 = load i64, i64* %37, align 8, !tbaa !237
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %40, label %111

40:                                               ; preds = %34
  %41 = load %struct.inflate_state*, %struct.inflate_state** %15, align 8, !tbaa !31
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi %struct.inflate_state* [ %41, %40 ], [ %16, %33 ]
  %44 = zext i32 %2 to i64
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 14
  %47 = load i8*, i8** %46, align 8, !tbaa !138
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %42
  %50 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %51 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %52 = load i8*, i8** %51, align 8, !tbaa !29
  %53 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 10
  %54 = load i32, i32* %53, align 8, !tbaa !136
  %55 = shl nuw i32 1, %54
  %56 = tail call i8* %50(i8* noundef %52, i32 noundef %55, i32 noundef 1) #25
  store i8* %56, i8** %46, align 8, !tbaa !138
  %57 = icmp eq i8* %56, null
  br i1 %57, label %108, label %58

58:                                               ; preds = %49, %42
  %59 = phi i8* [ %56, %49 ], [ %47, %42 ]
  %60 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 11
  %61 = load i32, i32* %60, align 4, !tbaa !137
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 10
  %65 = load i32, i32* %64, align 8, !tbaa !136
  %66 = shl nuw i32 1, %65
  store i32 %66, i32* %60, align 4, !tbaa !137
  %67 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 13
  store i32 0, i32* %67, align 4, !tbaa !139
  %68 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 12
  store i32 0, i32* %68, align 8, !tbaa !140
  br label %69

69:                                               ; preds = %63, %58
  %70 = phi i32 [ %66, %63 ], [ %61, %58 ]
  %71 = icmp ugt i32 %70, %2
  br i1 %71, label %79, label %72

72:                                               ; preds = %69
  %73 = zext i32 %70 to i64
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds i8, i8* %45, i64 %74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 %75, i64 %73, i1 false) #25
  %76 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 13
  store i32 0, i32* %76, align 4, !tbaa !139
  %77 = load i32, i32* %60, align 4, !tbaa !137
  %78 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 12
  store i32 %77, i32* %78, align 8, !tbaa !140
  br label %109

79:                                               ; preds = %69
  %80 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 13
  %81 = load i32, i32* %80, align 4, !tbaa !139
  %82 = sub i32 %70, %81
  %83 = icmp ugt i32 %82, %2
  %84 = select i1 %83, i32 %2, i32 %82
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds i8, i8* %59, i64 %85
  %87 = zext i32 %84 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %1, i64 %87, i1 false) #25
  %88 = sub i32 %2, %84
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %79
  %91 = load i8*, i8** %46, align 8, !tbaa !138
  %92 = zext i32 %88 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds i8, i8* %45, i64 %93
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %94, i64 %92, i1 false) #25
  store i32 %88, i32* %80, align 4, !tbaa !139
  %95 = load i32, i32* %60, align 4, !tbaa !137
  %96 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 12
  store i32 %95, i32* %96, align 8, !tbaa !140
  br label %109

97:                                               ; preds = %79
  %98 = load i32, i32* %80, align 4, !tbaa !139
  %99 = add i32 %98, %84
  %100 = load i32, i32* %60, align 4, !tbaa !137
  %101 = icmp eq i32 %99, %100
  %102 = select i1 %101, i32 0, i32 %99
  store i32 %102, i32* %80, align 4
  %103 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i64 0, i32 12
  %104 = load i32, i32* %103, align 8, !tbaa !140
  %105 = icmp ult i32 %104, %100
  br i1 %105, label %106, label %109

106:                                              ; preds = %97
  %107 = add i32 %104, %84
  store i32 %107, i32* %103, align 8, !tbaa !140
  br label %109

108:                                              ; preds = %49
  store i32 16210, i32* %23, align 8, !tbaa !142
  br label %111

109:                                              ; preds = %90, %106, %97, %72
  %110 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 4
  store i32 1, i32* %110, align 4, !tbaa !232
  br label %111

111:                                              ; preds = %13, %18, %3, %5, %9, %34, %32, %22, %109, %108
  %112 = phi i32 [ -4, %108 ], [ 0, %109 ], [ -2, %22 ], [ -2, %32 ], [ -3, %34 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %18 ], [ -2, %13 ]
  ret i32 %112
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @inflateGetHeader(%struct.z_stream_s* noundef readonly %0, %struct.gz_header_s* noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %34, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = bitcast %struct.internal_state** %13 to %struct.inflate_state**
  %15 = load %struct.inflate_state*, %struct.inflate_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.inflate_state* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !229
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %34

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !142
  %24 = add i32 %23, -16180
  %25 = icmp ult i32 %24, 32
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 3
  %28 = load i32, i32* %27, align 8, !tbaa !231
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 9
  store %struct.gz_header_s* %1, %struct.gz_header_s** %32, align 8, !tbaa !234
  %33 = getelementptr inbounds %struct.gz_header_s, %struct.gz_header_s* %1, i64 0, i32 12
  store i32 0, i32* %33, align 8, !tbaa !238
  br label %34

34:                                               ; preds = %12, %17, %2, %4, %8, %26, %21, %31
  %35 = phi i32 [ 0, %31 ], [ -2, %21 ], [ -2, %26 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %17 ], [ -2, %12 ]
  ret i32 %35
}

; Function Attrs: nofree nosync nounwind uwtable
define i32 @inflateSync(%struct.z_stream_s* noundef %0) local_unnamed_addr #10 {
  %2 = alloca [4 x i8], align 1
  %3 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %207, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8, !tbaa !28
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %207, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8, !tbaa !30
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %207, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = bitcast %struct.internal_state** %14 to %struct.inflate_state**
  %16 = load %struct.inflate_state*, %struct.inflate_state** %15, align 8, !tbaa !31
  %17 = icmp eq %struct.inflate_state* %16, null
  br i1 %17, label %207, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 0
  %20 = load %struct.z_stream_s*, %struct.z_stream_s** %19, align 8, !tbaa !229
  %21 = icmp eq %struct.z_stream_s* %20, %0
  br i1 %21, label %22, label %207

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 8, !tbaa !142
  %25 = add i32 %24, -16180
  %26 = icmp ult i32 %25, 32
  br i1 %26, label %27, label %207

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8, !tbaa !84
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 16
  %33 = load i32, i32* %32, align 8, !tbaa !169
  %34 = icmp ult i32 %33, 8
  br i1 %34, label %207, label %35

35:                                               ; preds = %31, %27
  %36 = icmp eq i32 %24, 16211
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 27
  %39 = load i32, i32* %38, align 4, !tbaa !16
  br label %128

40:                                               ; preds = %35
  store i32 16211, i32* %23, align 8, !tbaa !142
  %41 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 16
  %42 = load i32, i32* %41, align 8, !tbaa !169
  %43 = and i32 %42, 7
  %44 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 15
  %45 = load i64, i64* %44, align 8, !tbaa !168
  %46 = zext i32 %43 to i64
  %47 = shl i64 %45, %46
  store i64 %47, i64* %44, align 8, !tbaa !168
  %48 = and i32 %42, -8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %40
  %51 = add i32 %48, -8
  %52 = lshr exact i32 %51, 3
  %53 = add nuw nsw i32 %52, 1
  %54 = and i32 %53, 3
  %55 = icmp ult i32 %51, 24
  br i1 %55, label %82, label %56

56:                                               ; preds = %50
  %57 = and i32 %53, 1073741820
  br label %60

58:                                               ; preds = %40
  store i32 0, i32* %41, align 8, !tbaa !169
  %59 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 27
  store i32 0, i32* %59, align 4, !tbaa !155
  br label %124

60:                                               ; preds = %60, %56
  %61 = phi i64 [ 0, %56 ], [ %77, %60 ]
  %62 = phi i64 [ %47, %56 ], [ %79, %60 ]
  %63 = phi i32 [ 0, %56 ], [ %80, %60 ]
  %64 = trunc i64 %62 to i8
  %65 = or i64 %61, 1
  %66 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 %61
  store i8 %64, i8* %66, align 1, !tbaa !4
  %67 = lshr i64 %62, 8
  %68 = trunc i64 %67 to i8
  %69 = or i64 %61, 2
  %70 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 %65
  store i8 %68, i8* %70, align 1, !tbaa !4
  %71 = lshr i64 %62, 16
  %72 = trunc i64 %71 to i8
  %73 = or i64 %61, 3
  %74 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 %69
  store i8 %72, i8* %74, align 1, !tbaa !4
  %75 = lshr i64 %62, 24
  %76 = trunc i64 %75 to i8
  %77 = add nuw nsw i64 %61, 4
  %78 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 %73
  store i8 %76, i8* %78, align 1, !tbaa !4
  %79 = lshr i64 %62, 32
  %80 = add i32 %63, 4
  %81 = icmp eq i32 %80, %57
  br i1 %81, label %82, label %60, !llvm.loop !277

82:                                               ; preds = %60, %50
  %83 = phi i64 [ undef, %50 ], [ %77, %60 ]
  %84 = phi i64 [ undef, %50 ], [ %79, %60 ]
  %85 = phi i64 [ 0, %50 ], [ %77, %60 ]
  %86 = phi i64 [ %47, %50 ], [ %79, %60 ]
  %87 = icmp eq i32 %54, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %82, %88
  %89 = phi i64 [ %93, %88 ], [ %85, %82 ]
  %90 = phi i64 [ %95, %88 ], [ %86, %82 ]
  %91 = phi i32 [ %96, %88 ], [ 0, %82 ]
  %92 = trunc i64 %90 to i8
  %93 = add nuw nsw i64 %89, 1
  %94 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 %89
  store i8 %92, i8* %94, align 1, !tbaa !4
  %95 = lshr i64 %90, 8
  %96 = add i32 %91, 1
  %97 = icmp eq i32 %96, %54
  br i1 %97, label %98, label %88, !llvm.loop !278

98:                                               ; preds = %88, %82
  %99 = phi i64 [ %83, %82 ], [ %93, %88 ]
  %100 = phi i64 [ %84, %82 ], [ %95, %88 ]
  %101 = trunc i64 %99 to i32
  store i64 %100, i64* %44, align 8, !tbaa !168
  store i32 0, i32* %41, align 8, !tbaa !169
  %102 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 27
  store i32 0, i32* %102, align 4, !tbaa !155
  %103 = icmp eq i32 %101, 0
  br i1 %103, label %124, label %104

104:                                              ; preds = %98
  %105 = and i64 %99, 4294967295
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %120, %106 ]
  %108 = phi i32 [ 0, %104 ], [ %119, %106 ]
  %109 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 %107
  %110 = load i8, i8* %109, align 1, !tbaa !4
  %111 = zext i8 %110 to i32
  %112 = icmp ult i32 %108, 2
  %113 = select i1 %112, i32 0, i32 255
  %114 = icmp eq i32 %113, %111
  %115 = add nuw nsw i32 %108, 1
  %116 = icmp eq i8 %110, 0
  %117 = sub nuw nsw i32 4, %108
  %118 = select i1 %116, i32 %117, i32 0
  %119 = select i1 %114, i32 %115, i32 %118
  %120 = add nuw nsw i64 %107, 1
  %121 = icmp ult i64 %120, %105
  %122 = icmp ult i32 %119, 4
  %123 = select i1 %121, i1 %122, i1 false
  br i1 %123, label %106, label %124, !llvm.loop !279

124:                                              ; preds = %106, %58, %98
  %125 = phi i32* [ %102, %98 ], [ %59, %58 ], [ %102, %106 ]
  %126 = phi i32 [ 0, %98 ], [ 0, %58 ], [ %119, %106 ]
  store i32 %126, i32* %125, align 4, !tbaa !16
  %127 = load i32, i32* %28, align 8, !tbaa !84
  br label %128

128:                                              ; preds = %37, %124
  %129 = phi i32 [ %126, %124 ], [ %39, %37 ]
  %130 = phi i32 [ %127, %124 ], [ %29, %37 ]
  %131 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 27
  %132 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8, !tbaa !89
  %134 = icmp ne i32 %130, 0
  %135 = icmp ult i32 %129, 4
  %136 = select i1 %134, i1 %135, i1 false
  br i1 %136, label %137, label %159

137:                                              ; preds = %128
  %138 = zext i32 %130 to i64
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi i64 [ 0, %137 ], [ %153, %139 ]
  %141 = phi i32 [ %129, %137 ], [ %152, %139 ]
  %142 = getelementptr inbounds i8, i8* %133, i64 %140
  %143 = load i8, i8* %142, align 1, !tbaa !4
  %144 = zext i8 %143 to i32
  %145 = icmp ult i32 %141, 2
  %146 = select i1 %145, i32 0, i32 255
  %147 = icmp eq i32 %146, %144
  %148 = add nuw nsw i32 %141, 1
  %149 = icmp eq i8 %143, 0
  %150 = sub nuw nsw i32 4, %141
  %151 = select i1 %149, i32 %150, i32 0
  %152 = select i1 %147, i32 %148, i32 %151
  %153 = add nuw nsw i64 %140, 1
  %154 = icmp ult i64 %153, %138
  %155 = icmp ult i32 %152, 4
  %156 = select i1 %154, i1 %155, i1 false
  br i1 %156, label %139, label %157, !llvm.loop !279

157:                                              ; preds = %139
  %158 = trunc i64 %153 to i32
  br label %159

159:                                              ; preds = %128, %157
  %160 = phi i32 [ %129, %128 ], [ %152, %157 ]
  %161 = phi i32 [ 0, %128 ], [ %158, %157 ]
  store i32 %160, i32* %131, align 4, !tbaa !16
  %162 = load i32, i32* %28, align 8, !tbaa !84
  %163 = sub i32 %162, %161
  store i32 %163, i32* %28, align 8, !tbaa !84
  %164 = zext i32 %161 to i64
  %165 = getelementptr inbounds i8, i8* %133, i64 %164
  store i8* %165, i8** %132, align 8, !tbaa !89
  %166 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  %167 = load i64, i64* %166, align 8, !tbaa !78
  %168 = add i64 %167, %164
  store i64 %168, i64* %166, align 8, !tbaa !78
  %169 = icmp eq i32 %160, 4
  br i1 %169, label %170, label %207

170:                                              ; preds = %159
  %171 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 5
  %172 = load i32, i32* %171, align 8, !tbaa !233
  %173 = icmp eq i32 %172, -1
  %174 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 3
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = load i32, i32* %174, align 8, !tbaa !231
  %177 = and i32 %176, -5
  br label %178

178:                                              ; preds = %170, %175
  %179 = phi i32 [ %177, %175 ], [ 0, %170 ]
  store i32 %179, i32* %174, align 8, !tbaa !231
  %180 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %181 = load i64, i64* %180, align 8, !tbaa !88
  %182 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 11
  store i32 0, i32* %182, align 4, !tbaa !137
  %183 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 12
  store i32 0, i32* %183, align 8, !tbaa !140
  %184 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 13
  store i32 0, i32* %184, align 4, !tbaa !139
  %185 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 8
  store i64 0, i64* %185, align 8, !tbaa !230
  %186 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 3
  %187 = bitcast i64* %180 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %187, i8 0, i64 16, i1 false) #25
  %188 = load i32, i32* %186, align 8, !tbaa !231
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %178
  %191 = and i32 %188, 1
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %192, i64* %193, align 8, !tbaa !82
  br label %194

194:                                              ; preds = %178, %190
  %195 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 2
  store i32 0, i32* %195, align 4, !tbaa !143
  %196 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 4
  store i32 0, i32* %196, align 4, !tbaa !232
  %197 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 6
  store i32 32768, i32* %197, align 4, !tbaa !134
  %198 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 9
  store %struct.gz_header_s* null, %struct.gz_header_s** %198, align 8, !tbaa !234
  %199 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 15
  store i64 0, i64* %199, align 8, !tbaa !168
  %200 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 16
  store i32 0, i32* %200, align 8, !tbaa !169
  %201 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 31, i64 0
  %202 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 28
  store %struct.code* %201, %struct.code** %202, align 8, !tbaa !159
  %203 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 21
  store %struct.code* %201, %struct.code** %203, align 8, !tbaa !146
  %204 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 20
  store %struct.code* %201, %struct.code** %204, align 8, !tbaa !144
  %205 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 32
  store i32 1, i32* %205, align 8, !tbaa !141
  %206 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %16, i64 0, i32 33
  store i32 -1, i32* %206, align 4, !tbaa !235
  store i64 %168, i64* %166, align 8, !tbaa !78
  store i64 %181, i64* %180, align 8, !tbaa !88
  store i32 %172, i32* %171, align 8, !tbaa !233
  store i32 16191, i32* %23, align 8, !tbaa !142
  br label %207

207:                                              ; preds = %13, %18, %1, %5, %9, %159, %31, %22, %194
  %208 = phi i32 [ 0, %194 ], [ -2, %22 ], [ -5, %31 ], [ -3, %159 ], [ -2, %9 ], [ -2, %5 ], [ -2, %1 ], [ -2, %18 ], [ -2, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25
  ret i32 %208
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define i32 @inflateSyncPoint(%struct.z_stream_s* noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %32, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = bitcast %struct.internal_state** %12 to %struct.inflate_state**
  %14 = load %struct.inflate_state*, %struct.inflate_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.inflate_state* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !229
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !142
  %23 = add i32 %22, -16180
  %24 = icmp ult i32 %23, 32
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = icmp eq i32 %22, 16193
  br i1 %26, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 16
  %29 = load i32, i32* %28, align 8, !tbaa !169
  %30 = icmp eq i32 %29, 0
  %31 = zext i1 %30 to i32
  br label %32

32:                                               ; preds = %11, %16, %1, %3, %7, %25, %27, %20
  %33 = phi i32 [ -2, %20 ], [ 0, %25 ], [ %31, %27 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %16 ], [ -2, %11 ]
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define i32 @inflateCopy(%struct.z_stream_s* noundef %0, %struct.z_stream_s* noundef readonly %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.z_stream_s* %1, null
  br i1 %3, label %105, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %105, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %105, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 7
  %14 = bitcast %struct.internal_state** %13 to %struct.inflate_state**
  %15 = load %struct.inflate_state*, %struct.inflate_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.inflate_state* %15, null
  br i1 %16, label %105, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !229
  %20 = icmp eq %struct.z_stream_s* %19, %1
  br i1 %20, label %21, label %105

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !142
  %24 = add i32 %23, -16212
  %25 = icmp ult i32 %24, -32
  %26 = icmp eq %struct.z_stream_s* %0, null
  %27 = or i1 %26, %25
  br i1 %27, label %105, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 10
  %30 = load i8*, i8** %29, align 8, !tbaa !29
  %31 = tail call i8* %6(i8* noundef %30, i32 noundef 1, i32 noundef 7160) #25
  %32 = icmp eq i8* %31, null
  br i1 %32, label %105, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 14
  %35 = load i8*, i8** %34, align 8, !tbaa !138
  %36 = icmp eq i8* %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  %38 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %39 = load i8*, i8** %29, align 8, !tbaa !29
  %40 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 10
  %41 = load i32, i32* %40, align 8, !tbaa !136
  %42 = shl nuw i32 1, %41
  %43 = tail call i8* %38(i8* noundef %39, i32 noundef %42, i32 noundef 1) #25
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %37
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %47 = load i8*, i8** %29, align 8, !tbaa !29
  tail call void %46(i8* noundef %47, i8* noundef nonnull %31) #25
  br label %105

48:                                               ; preds = %37, %33
  %49 = phi i8* [ %43, %37 ], [ null, %33 ]
  %50 = bitcast %struct.z_stream_s* %0 to i8*
  %51 = bitcast %struct.z_stream_s* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(112) %50, i8* noundef nonnull align 1 dereferenceable(112) %51, i64 112, i1 false)
  %52 = bitcast %struct.inflate_state* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(7160) %31, i8* noundef nonnull align 1 dereferenceable(7160) %52, i64 7160, i1 false)
  %53 = bitcast i8* %31 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %53, align 8, !tbaa !229
  %54 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 20
  %55 = load %struct.code*, %struct.code** %54, align 8, !tbaa !144
  %56 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 31, i64 0
  %57 = icmp ult %struct.code* %55, %56
  %58 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 31, i64 1443
  %59 = icmp ugt %struct.code* %55, %58
  %60 = select i1 %57, i1 true, i1 %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %48
  %62 = ptrtoint %struct.code* %56 to i64
  br label %81

63:                                               ; preds = %48
  %64 = getelementptr inbounds i8, i8* %31, i64 1368
  %65 = bitcast i8* %64 to %struct.code*
  %66 = ptrtoint %struct.code* %55 to i64
  %67 = ptrtoint %struct.code* %56 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 2
  %70 = getelementptr inbounds %struct.code, %struct.code* %65, i64 %69
  %71 = getelementptr inbounds i8, i8* %31, i64 104
  %72 = bitcast i8* %71 to %struct.code**
  store %struct.code* %70, %struct.code** %72, align 8, !tbaa !144
  %73 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 21
  %74 = load %struct.code*, %struct.code** %73, align 8, !tbaa !146
  %75 = ptrtoint %struct.code* %74 to i64
  %76 = sub i64 %75, %67
  %77 = ashr exact i64 %76, 2
  %78 = getelementptr inbounds %struct.code, %struct.code* %65, i64 %77
  %79 = getelementptr inbounds i8, i8* %31, i64 112
  %80 = bitcast i8* %79 to %struct.code**
  store %struct.code* %78, %struct.code** %80, align 8, !tbaa !146
  br label %81

81:                                               ; preds = %61, %63
  %82 = phi i64 [ %62, %61 ], [ %67, %63 ]
  %83 = getelementptr inbounds i8, i8* %31, i64 1368
  %84 = bitcast i8* %83 to %struct.code*
  %85 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 28
  %86 = load %struct.code*, %struct.code** %85, align 8, !tbaa !159
  %87 = ptrtoint %struct.code* %86 to i64
  %88 = sub i64 %87, %82
  %89 = ashr exact i64 %88, 2
  %90 = getelementptr inbounds %struct.code, %struct.code* %84, i64 %89
  %91 = getelementptr inbounds i8, i8* %31, i64 144
  %92 = bitcast i8* %91 to %struct.code**
  store %struct.code* %90, %struct.code** %92, align 8, !tbaa !159
  %93 = icmp eq i8* %49, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %81
  %95 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 10
  %96 = load i32, i32* %95, align 8, !tbaa !136
  %97 = shl nuw i32 1, %96
  %98 = load i8*, i8** %34, align 8, !tbaa !138
  %99 = zext i32 %97 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 %49, i8* noundef nonnull align 1 dereferenceable(1) %98, i64 %99, i1 false)
  br label %100

100:                                              ; preds = %94, %81
  %101 = getelementptr inbounds i8, i8* %31, i64 72
  %102 = bitcast i8* %101 to i8**
  store i8* %49, i8** %102, align 8, !tbaa !138
  %103 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %104 = bitcast %struct.internal_state** %103 to i8**
  store i8* %31, i8** %104, align 8, !tbaa !31
  br label %105

105:                                              ; preds = %12, %17, %2, %4, %8, %28, %21, %100, %45
  %106 = phi i32 [ -4, %45 ], [ 0, %100 ], [ -2, %21 ], [ -4, %28 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %17 ], [ -2, %12 ]
  ret i32 %106
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @inflateUndermine(%struct.z_stream_s* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = bitcast %struct.internal_state** %13 to %struct.inflate_state**
  %15 = load %struct.inflate_state*, %struct.inflate_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.inflate_state* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !229
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !142
  %24 = add i32 %23, -16180
  %25 = icmp ult i32 %24, 32
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 32
  store i32 1, i32* %27, align 8, !tbaa !141
  br label %28

28:                                               ; preds = %12, %17, %2, %4, %8, %21, %26
  %29 = phi i32 [ -3, %26 ], [ -2, %21 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %17 ], [ -2, %12 ]
  ret i32 %29
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @inflateValidate(%struct.z_stream_s* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8, !tbaa !28
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !30
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %39, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = bitcast %struct.internal_state** %13 to %struct.inflate_state**
  %15 = load %struct.inflate_state*, %struct.inflate_state** %14, align 8, !tbaa !31
  %16 = icmp eq %struct.inflate_state* %15, null
  br i1 %16, label %39, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8, !tbaa !229
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %39

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !142
  %24 = add i32 %23, -16180
  %25 = icmp ult i32 %24, 32
  br i1 %25, label %26, label %39

26:                                               ; preds = %21
  %27 = icmp eq i32 %1, 0
  %28 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 3
  %29 = load i32, i32* %28, align 8, !tbaa !231
  br i1 %27, label %30, label %32

30:                                               ; preds = %26
  %31 = and i32 %29, -5
  br label %36

32:                                               ; preds = %26
  %33 = icmp eq i32 %29, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = or i32 %29, 4
  store i32 %35, i32* %28, align 8, !tbaa !231
  br label %39

36:                                               ; preds = %30, %32
  %37 = phi i32 [ %31, %30 ], [ 0, %32 ]
  %38 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %15, i64 0, i32 3
  store i32 %37, i32* %38, align 8, !tbaa !231
  br label %39

39:                                               ; preds = %12, %17, %2, %4, %8, %34, %36, %21
  %40 = phi i32 [ -2, %21 ], [ 0, %36 ], [ 0, %34 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %17 ], [ -2, %12 ]
  ret i32 %40
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define i64 @inflateMark(%struct.z_stream_s* noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %43, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %43, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = bitcast %struct.internal_state** %12 to %struct.inflate_state**
  %14 = load %struct.inflate_state*, %struct.inflate_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.inflate_state* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !229
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %43

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !142
  %23 = add i32 %22, -16180
  %24 = icmp ult i32 %23, 32
  br i1 %24, label %25, label %43

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 33
  %27 = load i32, i32* %26, align 4, !tbaa !235
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 16
  switch i32 %22, label %39 [
    i32 16195, label %30
    i32 16204, label %33
  ]

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 17
  %32 = load i32, i32* %31, align 4, !tbaa !149
  br label %39

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 34
  %35 = load i32, i32* %34, align 8, !tbaa !264
  %36 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 17
  %37 = load i32, i32* %36, align 4, !tbaa !149
  %38 = sub i32 %35, %37
  br label %39

39:                                               ; preds = %25, %33, %30
  %40 = phi i32 [ %32, %30 ], [ %38, %33 ], [ 0, %25 ]
  %41 = zext i32 %40 to i64
  %42 = add nsw i64 %29, %41
  br label %43

43:                                               ; preds = %11, %16, %1, %3, %7, %20, %39
  %44 = phi i64 [ %42, %39 ], [ -65536, %20 ], [ -65536, %7 ], [ -65536, %3 ], [ -65536, %1 ], [ -65536, %16 ], [ -65536, %11 ]
  ret i64 %44
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define i64 @inflateCodesUsed(%struct.z_stream_s* noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8, !tbaa !28
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8, !tbaa !30
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = bitcast %struct.internal_state** %12 to %struct.inflate_state**
  %14 = load %struct.inflate_state*, %struct.inflate_state** %13, align 8, !tbaa !31
  %15 = icmp eq %struct.inflate_state* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8, !tbaa !229
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %33

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8, !tbaa !142
  %23 = add i32 %22, -16180
  %24 = icmp ult i32 %23, 32
  br i1 %24, label %25, label %33

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 28
  %27 = load %struct.code*, %struct.code** %26, align 8, !tbaa !159
  %28 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %14, i64 0, i32 31, i64 0
  %29 = ptrtoint %struct.code* %27 to i64
  %30 = ptrtoint %struct.code* %28 to i64
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 2
  br label %33

33:                                               ; preds = %11, %16, %1, %3, %7, %20, %25
  %34 = phi i64 [ %32, %25 ], [ -1, %20 ], [ -1, %7 ], [ -1, %3 ], [ -1, %1 ], [ -1, %16 ], [ -1, %11 ]
  ret i64 %34
}

; Function Attrs: nofree nosync nounwind uwtable
define hidden i32 @inflate_table(i32 noundef %0, i16* nocapture noundef readonly %1, i32 noundef %2, %struct.code** nocapture noundef %3, i32* nocapture noundef %4, i16* nocapture noundef %5) local_unnamed_addr #10 {
  %7 = alloca [16 x i16], align 16
  %8 = bitcast [16 x i16]* %7 to i8*
  %9 = alloca [16 x i16], align 16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #25
  %10 = bitcast [16 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %8, i8 0, i64 32, i1 false), !tbaa !60
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = load i32, i32* %4, align 4, !tbaa !16
  br label %74

14:                                               ; preds = %6
  %15 = zext i32 %2 to i64
  %16 = add nsw i64 %15, -1
  %17 = and i64 %15, 3
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %54, label %19

19:                                               ; preds = %14
  %20 = and i64 %15, 4294967292
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %51, %21 ]
  %23 = phi i64 [ 0, %19 ], [ %52, %21 ]
  %24 = getelementptr inbounds i16, i16* %1, i64 %22
  %25 = load i16, i16* %24, align 2, !tbaa !60
  %26 = zext i16 %25 to i64
  %27 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %26
  %28 = load i16, i16* %27, align 2, !tbaa !60
  %29 = add i16 %28, 1
  store i16 %29, i16* %27, align 2, !tbaa !60
  %30 = or i64 %22, 1
  %31 = getelementptr inbounds i16, i16* %1, i64 %30
  %32 = load i16, i16* %31, align 2, !tbaa !60
  %33 = zext i16 %32 to i64
  %34 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %33
  %35 = load i16, i16* %34, align 2, !tbaa !60
  %36 = add i16 %35, 1
  store i16 %36, i16* %34, align 2, !tbaa !60
  %37 = or i64 %22, 2
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2, !tbaa !60
  %40 = zext i16 %39 to i64
  %41 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %40
  %42 = load i16, i16* %41, align 2, !tbaa !60
  %43 = add i16 %42, 1
  store i16 %43, i16* %41, align 2, !tbaa !60
  %44 = or i64 %22, 3
  %45 = getelementptr inbounds i16, i16* %1, i64 %44
  %46 = load i16, i16* %45, align 2, !tbaa !60
  %47 = zext i16 %46 to i64
  %48 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %47
  %49 = load i16, i16* %48, align 2, !tbaa !60
  %50 = add i16 %49, 1
  store i16 %50, i16* %48, align 2, !tbaa !60
  %51 = add nuw nsw i64 %22, 4
  %52 = add i64 %23, 4
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %54, label %21, !llvm.loop !280

54:                                               ; preds = %21, %14
  %55 = phi i64 [ 0, %14 ], [ %51, %21 ]
  %56 = icmp eq i64 %17, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %54, %57
  %58 = phi i64 [ %66, %57 ], [ %55, %54 ]
  %59 = phi i64 [ %67, %57 ], [ 0, %54 ]
  %60 = getelementptr inbounds i16, i16* %1, i64 %58
  %61 = load i16, i16* %60, align 2, !tbaa !60
  %62 = zext i16 %61 to i64
  %63 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %62
  %64 = load i16, i16* %63, align 2, !tbaa !60
  %65 = add i16 %64, 1
  store i16 %65, i16* %63, align 2, !tbaa !60
  %66 = add nuw nsw i64 %58, 1
  %67 = add i64 %59, 1
  %68 = icmp eq i64 %67, %17
  br i1 %68, label %69, label %57, !llvm.loop !281

69:                                               ; preds = %57, %54
  %70 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 15
  %71 = load i16, i16* %70, align 2, !tbaa !60
  %72 = load i32, i32* %4, align 4, !tbaa !16
  %73 = icmp eq i16 %71, 0
  br i1 %73, label %74, label %145

74:                                               ; preds = %12, %69
  %75 = phi i32 [ %13, %12 ], [ %72, %69 ]
  %76 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 14
  %77 = load i16, i16* %76, align 4, !tbaa !60
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %145

79:                                               ; preds = %74
  %80 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 13
  %81 = load i16, i16* %80, align 2, !tbaa !60
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %83, label %145

83:                                               ; preds = %79
  %84 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 12
  %85 = load i16, i16* %84, align 8, !tbaa !60
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %87, label %145

87:                                               ; preds = %83
  %88 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 11
  %89 = load i16, i16* %88, align 2, !tbaa !60
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %145

91:                                               ; preds = %87
  %92 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 10
  %93 = load i16, i16* %92, align 4, !tbaa !60
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %95, label %145

95:                                               ; preds = %91
  %96 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 9
  %97 = load i16, i16* %96, align 2, !tbaa !60
  %98 = icmp eq i16 %97, 0
  br i1 %98, label %99, label %145

99:                                               ; preds = %95
  %100 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 8
  %101 = load i16, i16* %100, align 16, !tbaa !60
  %102 = icmp eq i16 %101, 0
  br i1 %102, label %103, label %145

103:                                              ; preds = %99
  %104 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 7
  %105 = load i16, i16* %104, align 2, !tbaa !60
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %107, label %145

107:                                              ; preds = %103
  %108 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 6
  %109 = load i16, i16* %108, align 4, !tbaa !60
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %111, label %145

111:                                              ; preds = %107
  %112 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 5
  %113 = load i16, i16* %112, align 2, !tbaa !60
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %115, label %145

115:                                              ; preds = %111
  %116 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 4
  %117 = load i16, i16* %116, align 8, !tbaa !60
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %119, label %145

119:                                              ; preds = %115
  %120 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 3
  %121 = load i16, i16* %120, align 2, !tbaa !60
  %122 = icmp eq i16 %121, 0
  br i1 %122, label %123, label %145

123:                                              ; preds = %119
  %124 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 2
  %125 = load i16, i16* %124, align 4, !tbaa !60
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %127, label %145

127:                                              ; preds = %123
  %128 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 1
  %129 = load i16, i16* %128, align 2, !tbaa !60
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %131, label %142

131:                                              ; preds = %127
  %132 = load %struct.code*, %struct.code** %3, align 8, !tbaa !53
  %133 = getelementptr inbounds %struct.code, %struct.code* %132, i64 1
  store %struct.code* %133, %struct.code** %3, align 8, !tbaa !53
  %134 = getelementptr inbounds %struct.code, %struct.code* %132, i64 0, i32 0
  store i8 64, i8* %134, align 2, !tbaa.struct !171
  %135 = getelementptr inbounds %struct.code, %struct.code* %132, i64 0, i32 1
  store i8 1, i8* %135, align 1, !tbaa.struct !160
  %136 = getelementptr inbounds %struct.code, %struct.code* %132, i64 0, i32 2
  store i16 0, i16* %136, align 2, !tbaa.struct !170
  %137 = load %struct.code*, %struct.code** %3, align 8, !tbaa !53
  %138 = getelementptr inbounds %struct.code, %struct.code* %137, i64 1
  store %struct.code* %138, %struct.code** %3, align 8, !tbaa !53
  %139 = getelementptr inbounds %struct.code, %struct.code* %137, i64 0, i32 0
  store i8 64, i8* %139, align 2, !tbaa.struct !171
  %140 = getelementptr inbounds %struct.code, %struct.code* %137, i64 0, i32 1
  store i8 1, i8* %140, align 1, !tbaa.struct !160
  %141 = getelementptr inbounds %struct.code, %struct.code* %137, i64 0, i32 2
  store i16 0, i16* %141, align 2, !tbaa.struct !170
  br label %518

142:                                              ; preds = %127
  %143 = icmp ne i32 %75, 0
  %144 = zext i1 %143 to i32
  br label %162

145:                                              ; preds = %123, %119, %115, %111, %107, %103, %99, %95, %91, %87, %83, %79, %74, %69
  %146 = phi i32 [ %72, %69 ], [ %75, %74 ], [ %75, %79 ], [ %75, %83 ], [ %75, %87 ], [ %75, %91 ], [ %75, %95 ], [ %75, %99 ], [ %75, %103 ], [ %75, %107 ], [ %75, %111 ], [ %75, %115 ], [ %75, %119 ], [ %75, %123 ]
  %147 = phi i16 [ %71, %69 ], [ 0, %74 ], [ 0, %79 ], [ 0, %83 ], [ 0, %87 ], [ 0, %91 ], [ 0, %95 ], [ 0, %99 ], [ 0, %103 ], [ 0, %107 ], [ 0, %111 ], [ 0, %115 ], [ 0, %119 ], [ 0, %123 ]
  %148 = phi i32 [ 15, %69 ], [ 14, %74 ], [ 13, %79 ], [ 12, %83 ], [ 11, %87 ], [ 10, %91 ], [ 9, %95 ], [ 8, %99 ], [ 7, %103 ], [ 6, %107 ], [ 5, %111 ], [ 4, %115 ], [ 3, %119 ], [ 2, %123 ]
  %149 = icmp ugt i32 %146, %148
  %150 = select i1 %149, i32 %148, i32 %146
  %151 = zext i32 %148 to i64
  br label %152

152:                                              ; preds = %145, %157
  %153 = phi i64 [ 1, %145 ], [ %158, %157 ]
  %154 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %153
  %155 = load i16, i16* %154, align 2, !tbaa !60
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %152
  %158 = add nuw nsw i64 %153, 1
  %159 = icmp eq i64 %158, %151
  br i1 %159, label %162, label %152, !llvm.loop !282

160:                                              ; preds = %152
  %161 = trunc i64 %153 to i32
  br label %162

162:                                              ; preds = %157, %160, %142
  %163 = phi i32 [ %144, %142 ], [ %150, %160 ], [ %150, %157 ]
  %164 = phi i32 [ 1, %142 ], [ %148, %160 ], [ %148, %157 ]
  %165 = phi i1 [ false, %142 ], [ true, %160 ], [ true, %157 ]
  %166 = phi i16 [ 0, %142 ], [ %147, %160 ], [ %147, %157 ]
  %167 = phi i32 [ 1, %142 ], [ %161, %160 ], [ %148, %157 ]
  %168 = icmp ult i32 %163, %167
  %169 = select i1 %168, i32 %167, i32 %163
  %170 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 1
  %171 = load i16, i16* %170, align 2, !tbaa !60
  %172 = icmp ugt i16 %171, 2
  br i1 %172, label %520, label %173

173:                                              ; preds = %162
  %174 = zext i16 %171 to i32
  %175 = mul nsw i32 %174, -2
  %176 = add nsw i32 %175, 4
  %177 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 2
  %178 = load i16, i16* %177, align 4, !tbaa !60
  %179 = zext i16 %178 to i32
  %180 = sub nsw i32 %176, %179
  %181 = icmp slt i32 %180, 0
  br i1 %181, label %520, label %182

182:                                              ; preds = %173
  %183 = shl nuw nsw i32 %180, 1
  %184 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 3
  %185 = load i16, i16* %184, align 2, !tbaa !60
  %186 = zext i16 %185 to i32
  %187 = sub nsw i32 %183, %186
  %188 = icmp slt i32 %187, 0
  br i1 %188, label %520, label %189

189:                                              ; preds = %182
  %190 = shl nuw nsw i32 %187, 1
  %191 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 4
  %192 = load i16, i16* %191, align 8, !tbaa !60
  %193 = zext i16 %192 to i32
  %194 = sub nsw i32 %190, %193
  %195 = icmp slt i32 %194, 0
  br i1 %195, label %520, label %196

196:                                              ; preds = %189
  %197 = shl nuw nsw i32 %194, 1
  %198 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 5
  %199 = load i16, i16* %198, align 2, !tbaa !60
  %200 = zext i16 %199 to i32
  %201 = sub nsw i32 %197, %200
  %202 = icmp slt i32 %201, 0
  br i1 %202, label %520, label %203

203:                                              ; preds = %196
  %204 = shl nuw nsw i32 %201, 1
  %205 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 6
  %206 = load i16, i16* %205, align 4, !tbaa !60
  %207 = zext i16 %206 to i32
  %208 = sub nsw i32 %204, %207
  %209 = icmp slt i32 %208, 0
  br i1 %209, label %520, label %210

210:                                              ; preds = %203
  %211 = shl nuw nsw i32 %208, 1
  %212 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 7
  %213 = load i16, i16* %212, align 2, !tbaa !60
  %214 = zext i16 %213 to i32
  %215 = sub nsw i32 %211, %214
  %216 = icmp slt i32 %215, 0
  br i1 %216, label %520, label %217

217:                                              ; preds = %210
  %218 = shl nuw nsw i32 %215, 1
  %219 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 8
  %220 = load i16, i16* %219, align 16, !tbaa !60
  %221 = zext i16 %220 to i32
  %222 = sub nsw i32 %218, %221
  %223 = icmp slt i32 %222, 0
  br i1 %223, label %520, label %224

224:                                              ; preds = %217
  %225 = shl nuw nsw i32 %222, 1
  %226 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 9
  %227 = load i16, i16* %226, align 2, !tbaa !60
  %228 = zext i16 %227 to i32
  %229 = sub nsw i32 %225, %228
  %230 = icmp slt i32 %229, 0
  br i1 %230, label %520, label %231

231:                                              ; preds = %224
  %232 = shl nuw nsw i32 %229, 1
  %233 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 10
  %234 = load i16, i16* %233, align 4, !tbaa !60
  %235 = zext i16 %234 to i32
  %236 = sub nsw i32 %232, %235
  %237 = icmp slt i32 %236, 0
  br i1 %237, label %520, label %238

238:                                              ; preds = %231
  %239 = shl nuw nsw i32 %236, 1
  %240 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 11
  %241 = load i16, i16* %240, align 2, !tbaa !60
  %242 = zext i16 %241 to i32
  %243 = sub nsw i32 %239, %242
  %244 = icmp slt i32 %243, 0
  br i1 %244, label %520, label %245

245:                                              ; preds = %238
  %246 = shl nuw nsw i32 %243, 1
  %247 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 12
  %248 = load i16, i16* %247, align 8, !tbaa !60
  %249 = zext i16 %248 to i32
  %250 = sub nsw i32 %246, %249
  %251 = icmp slt i32 %250, 0
  br i1 %251, label %520, label %252

252:                                              ; preds = %245
  %253 = shl nuw nsw i32 %250, 1
  %254 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 13
  %255 = load i16, i16* %254, align 2, !tbaa !60
  %256 = zext i16 %255 to i32
  %257 = sub nsw i32 %253, %256
  %258 = icmp slt i32 %257, 0
  br i1 %258, label %520, label %259

259:                                              ; preds = %252
  %260 = shl nuw nsw i32 %257, 1
  %261 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 14
  %262 = load i16, i16* %261, align 4, !tbaa !60
  %263 = zext i16 %262 to i32
  %264 = sub nsw i32 %260, %263
  %265 = icmp slt i32 %264, 0
  br i1 %265, label %520, label %266

266:                                              ; preds = %259
  %267 = shl nuw nsw i32 %264, 1
  %268 = zext i16 %166 to i32
  %269 = sub nsw i32 %267, %268
  %270 = icmp slt i32 %269, 0
  br i1 %270, label %520, label %271

271:                                              ; preds = %266
  %272 = icmp ne i32 %269, 0
  %273 = icmp eq i32 %0, 0
  %274 = or i1 %273, %165
  %275 = and i1 %272, %274
  br i1 %275, label %520, label %276

276:                                              ; preds = %271
  %277 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 1
  store i16 0, i16* %277, align 2, !tbaa !60
  %278 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 2
  store i16 %171, i16* %278, align 4, !tbaa !60
  %279 = add i16 %178, %171
  %280 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 3
  store i16 %279, i16* %280, align 2, !tbaa !60
  %281 = add i16 %185, %279
  %282 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 4
  store i16 %281, i16* %282, align 8, !tbaa !60
  %283 = add i16 %192, %281
  %284 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 5
  store i16 %283, i16* %284, align 2, !tbaa !60
  %285 = add i16 %199, %283
  %286 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 6
  store i16 %285, i16* %286, align 4, !tbaa !60
  %287 = add i16 %206, %285
  %288 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 7
  store i16 %287, i16* %288, align 2, !tbaa !60
  %289 = add i16 %213, %287
  %290 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 8
  store i16 %289, i16* %290, align 16, !tbaa !60
  %291 = add i16 %220, %289
  %292 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 9
  store i16 %291, i16* %292, align 2, !tbaa !60
  %293 = add i16 %227, %291
  %294 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 10
  store i16 %293, i16* %294, align 4, !tbaa !60
  %295 = add i16 %234, %293
  %296 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 11
  store i16 %295, i16* %296, align 2, !tbaa !60
  %297 = add i16 %241, %295
  %298 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 12
  store i16 %297, i16* %298, align 8, !tbaa !60
  %299 = add i16 %248, %297
  %300 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 13
  store i16 %299, i16* %300, align 2, !tbaa !60
  %301 = add i16 %255, %299
  %302 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 14
  store i16 %301, i16* %302, align 4, !tbaa !60
  %303 = add i16 %262, %301
  %304 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 15
  store i16 %303, i16* %304, align 2, !tbaa !60
  br i1 %11, label %357, label %305

305:                                              ; preds = %276
  %306 = zext i32 %2 to i64
  %307 = and i64 %306, 1
  %308 = icmp eq i32 %2, 1
  br i1 %308, label %342, label %309

309:                                              ; preds = %305
  %310 = and i64 %306, 4294967294
  br label %311

311:                                              ; preds = %338, %309
  %312 = phi i64 [ 0, %309 ], [ %339, %338 ]
  %313 = phi i64 [ 0, %309 ], [ %340, %338 ]
  %314 = getelementptr inbounds i16, i16* %1, i64 %312
  %315 = load i16, i16* %314, align 2, !tbaa !60
  %316 = icmp eq i16 %315, 0
  br i1 %316, label %325, label %317

317:                                              ; preds = %311
  %318 = trunc i64 %312 to i16
  %319 = zext i16 %315 to i64
  %320 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 %319
  %321 = load i16, i16* %320, align 2, !tbaa !60
  %322 = add i16 %321, 1
  store i16 %322, i16* %320, align 2, !tbaa !60
  %323 = zext i16 %321 to i64
  %324 = getelementptr inbounds i16, i16* %5, i64 %323
  store i16 %318, i16* %324, align 2, !tbaa !60
  br label %325

325:                                              ; preds = %311, %317
  %326 = or i64 %312, 1
  %327 = getelementptr inbounds i16, i16* %1, i64 %326
  %328 = load i16, i16* %327, align 2, !tbaa !60
  %329 = icmp eq i16 %328, 0
  br i1 %329, label %338, label %330

330:                                              ; preds = %325
  %331 = trunc i64 %326 to i16
  %332 = zext i16 %328 to i64
  %333 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 %332
  %334 = load i16, i16* %333, align 2, !tbaa !60
  %335 = add i16 %334, 1
  store i16 %335, i16* %333, align 2, !tbaa !60
  %336 = zext i16 %334 to i64
  %337 = getelementptr inbounds i16, i16* %5, i64 %336
  store i16 %331, i16* %337, align 2, !tbaa !60
  br label %338

338:                                              ; preds = %330, %325
  %339 = add nuw nsw i64 %312, 2
  %340 = add i64 %313, 2
  %341 = icmp eq i64 %340, %310
  br i1 %341, label %342, label %311, !llvm.loop !283

342:                                              ; preds = %338, %305
  %343 = phi i64 [ 0, %305 ], [ %339, %338 ]
  %344 = icmp eq i64 %307, 0
  br i1 %344, label %357, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds i16, i16* %1, i64 %343
  %347 = load i16, i16* %346, align 2, !tbaa !60
  %348 = icmp eq i16 %347, 0
  br i1 %348, label %357, label %349

349:                                              ; preds = %345
  %350 = trunc i64 %343 to i16
  %351 = zext i16 %347 to i64
  %352 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 %351
  %353 = load i16, i16* %352, align 2, !tbaa !60
  %354 = add i16 %353, 1
  store i16 %354, i16* %352, align 2, !tbaa !60
  %355 = zext i16 %353 to i64
  %356 = getelementptr inbounds i16, i16* %5, i64 %355
  store i16 %350, i16* %356, align 2, !tbaa !60
  br label %357

357:                                              ; preds = %342, %349, %345, %276
  switch i32 %0, label %360 [
    i32 0, label %364
    i32 1, label %358
  ]

358:                                              ; preds = %357
  %359 = icmp ugt i32 %169, 9
  br i1 %359, label %520, label %364

360:                                              ; preds = %357
  %361 = icmp ugt i32 %169, 9
  %362 = icmp eq i32 %0, 2
  %363 = select i1 %362, i1 %361, i1 false
  br i1 %363, label %520, label %364

364:                                              ; preds = %358, %357, %360
  %365 = phi i1 [ %362, %360 ], [ false, %357 ], [ false, %358 ]
  %366 = phi i16* [ getelementptr inbounds ([32 x i16], [32 x i16]* @inflate_table.dbase, i64 0, i64 0), %360 ], [ %5, %357 ], [ getelementptr inbounds ([31 x i16], [31 x i16]* @inflate_table.lbase, i64 0, i64 0), %358 ]
  %367 = phi i16* [ getelementptr inbounds ([32 x i16], [32 x i16]* @inflate_table.dext, i64 0, i64 0), %360 ], [ %5, %357 ], [ getelementptr inbounds ([31 x i16], [31 x i16]* @inflate_table.lext, i64 0, i64 0), %358 ]
  %368 = phi i32 [ 0, %360 ], [ 20, %357 ], [ 257, %358 ]
  %369 = phi i1 [ false, %360 ], [ false, %357 ], [ true, %358 ]
  %370 = shl nuw i32 1, %169
  %371 = add i32 %370, -1
  %372 = load %struct.code*, %struct.code** %3, align 8, !tbaa !53
  %373 = trunc i32 %169 to i8
  br label %374

374:                                              ; preds = %494, %364
  %375 = phi i32 [ %451, %494 ], [ %167, %364 ]
  %376 = phi i32 [ %434, %494 ], [ 0, %364 ]
  %377 = phi i32 [ %487, %494 ], [ %169, %364 ]
  %378 = phi i32 [ %459, %494 ], [ 0, %364 ]
  %379 = phi i32 [ %488, %494 ], [ %370, %364 ]
  %380 = phi i32 [ %433, %494 ], [ 0, %364 ]
  %381 = phi i32 [ %454, %494 ], [ -1, %364 ]
  %382 = phi %struct.code* [ %461, %494 ], [ %372, %364 ]
  %383 = shl nuw i32 1, %377
  br label %384

384:                                              ; preds = %456, %374
  %385 = phi i32 [ %375, %374 ], [ %451, %456 ]
  %386 = phi i32 [ %376, %374 ], [ %434, %456 ]
  %387 = phi i32 [ %380, %374 ], [ %433, %456 ]
  %388 = sub i32 %385, %378
  %389 = trunc i32 %388 to i8
  %390 = zext i32 %386 to i64
  %391 = getelementptr inbounds i16, i16* %5, i64 %390
  %392 = load i16, i16* %391, align 2, !tbaa !60
  %393 = zext i16 %392 to i32
  %394 = add nuw nsw i32 %393, 1
  %395 = icmp ult i32 %394, %368
  br i1 %395, label %406, label %396

396:                                              ; preds = %384
  %397 = icmp ugt i32 %368, %393
  br i1 %397, label %406, label %398

398:                                              ; preds = %396
  %399 = sub nsw i32 %393, %368
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds i16, i16* %367, i64 %400
  %402 = load i16, i16* %401, align 2, !tbaa !60
  %403 = trunc i16 %402 to i8
  %404 = getelementptr inbounds i16, i16* %366, i64 %400
  %405 = load i16, i16* %404, align 2, !tbaa !60
  br label %406

406:                                              ; preds = %396, %384, %398
  %407 = phi i16 [ %405, %398 ], [ %392, %384 ], [ 0, %396 ]
  %408 = phi i8 [ %403, %398 ], [ 0, %384 ], [ 96, %396 ]
  %409 = shl nsw i32 -1, %388
  %410 = lshr i32 %387, %378
  br label %411

411:                                              ; preds = %411, %406
  %412 = phi i32 [ %383, %406 ], [ %413, %411 ]
  %413 = add i32 %412, %409
  %414 = add i32 %413, %410
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %415, i32 0
  store i8 %408, i8* %416, align 2, !tbaa.struct !171
  %417 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %415, i32 1
  store i8 %389, i8* %417, align 1, !tbaa.struct !160
  %418 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %415, i32 2
  store i16 %407, i16* %418, align 2, !tbaa.struct !170
  %419 = icmp eq i32 %413, 0
  br i1 %419, label %420, label %411, !llvm.loop !284

420:                                              ; preds = %411
  %421 = add i32 %385, -1
  %422 = shl nuw i32 1, %421
  br label %423

423:                                              ; preds = %423, %420
  %424 = phi i32 [ %422, %420 ], [ %427, %423 ]
  %425 = and i32 %424, %387
  %426 = icmp eq i32 %425, 0
  %427 = lshr i32 %424, 1
  br i1 %426, label %428, label %423, !llvm.loop !285

428:                                              ; preds = %423
  %429 = icmp eq i32 %424, 0
  %430 = add i32 %424, -1
  %431 = and i32 %430, %387
  %432 = add i32 %431, %424
  %433 = select i1 %429, i32 0, i32 %432
  %434 = add i32 %386, 1
  %435 = zext i32 %385 to i64
  %436 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %435
  %437 = load i16, i16* %436, align 2, !tbaa !60
  %438 = add i16 %437, -1
  store i16 %438, i16* %436, align 2, !tbaa !60
  %439 = icmp eq i16 %438, 0
  br i1 %439, label %440, label %450

440:                                              ; preds = %428
  %441 = icmp eq i32 %385, %164
  br i1 %441, label %506, label %442

442:                                              ; preds = %440
  %443 = zext i32 %434 to i64
  %444 = getelementptr inbounds i16, i16* %5, i64 %443
  %445 = load i16, i16* %444, align 2, !tbaa !60
  %446 = zext i16 %445 to i64
  %447 = getelementptr inbounds i16, i16* %1, i64 %446
  %448 = load i16, i16* %447, align 2, !tbaa !60
  %449 = zext i16 %448 to i32
  br label %450

450:                                              ; preds = %442, %428
  %451 = phi i32 [ %449, %442 ], [ %385, %428 ]
  %452 = icmp ugt i32 %451, %169
  br i1 %452, label %453, label %456

453:                                              ; preds = %450
  %454 = and i32 %433, %371
  %455 = icmp eq i32 %454, %381
  br i1 %455, label %456, label %457

456:                                              ; preds = %453, %450
  br label %384

457:                                              ; preds = %453
  %458 = icmp eq i32 %378, 0
  %459 = select i1 %458, i32 %169, i32 %378
  %460 = zext i32 %383 to i64
  %461 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %460
  %462 = sub i32 %451, %459
  %463 = shl nuw i32 1, %462
  %464 = icmp ult i32 %451, %164
  br i1 %464, label %465, label %485

465:                                              ; preds = %457
  %466 = sub i32 %164, %459
  br label %467

467:                                              ; preds = %465, %477
  %468 = phi i32 [ %480, %477 ], [ %451, %465 ]
  %469 = phi i32 [ %479, %477 ], [ %463, %465 ]
  %470 = phi i32 [ %478, %477 ], [ %462, %465 ]
  %471 = zext i32 %468 to i64
  %472 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %471
  %473 = load i16, i16* %472, align 2, !tbaa !60
  %474 = zext i16 %473 to i32
  %475 = sub nsw i32 %469, %474
  %476 = icmp slt i32 %475, 1
  br i1 %476, label %482, label %477

477:                                              ; preds = %467
  %478 = add i32 %470, 1
  %479 = shl nuw i32 %475, 1
  %480 = add i32 %478, %459
  %481 = icmp ult i32 %480, %164
  br i1 %481, label %467, label %482, !llvm.loop !286

482:                                              ; preds = %467, %477
  %483 = phi i32 [ %466, %477 ], [ %470, %467 ]
  %484 = shl nuw i32 1, %483
  br label %485

485:                                              ; preds = %482, %457
  %486 = phi i32 [ %484, %482 ], [ %463, %457 ]
  %487 = phi i32 [ %483, %482 ], [ %462, %457 ]
  %488 = add i32 %486, %379
  %489 = icmp ugt i32 %488, 852
  %490 = select i1 %369, i1 %489, i1 false
  br i1 %490, label %520, label %491

491:                                              ; preds = %485
  %492 = icmp ugt i32 %488, 592
  %493 = select i1 %365, i1 %492, i1 false
  br i1 %493, label %520, label %494

494:                                              ; preds = %491
  %495 = trunc i32 %487 to i8
  %496 = load %struct.code*, %struct.code** %3, align 8, !tbaa !53
  %497 = zext i32 %454 to i64
  %498 = getelementptr inbounds %struct.code, %struct.code* %496, i64 %497, i32 0
  store i8 %495, i8* %498, align 2, !tbaa !188
  %499 = getelementptr inbounds %struct.code, %struct.code* %496, i64 %497, i32 1
  store i8 %373, i8* %499, align 1, !tbaa !186
  %500 = ptrtoint %struct.code* %461 to i64
  %501 = ptrtoint %struct.code* %496 to i64
  %502 = sub i64 %500, %501
  %503 = lshr exact i64 %502, 2
  %504 = trunc i64 %503 to i16
  %505 = getelementptr inbounds %struct.code, %struct.code* %496, i64 %497, i32 2
  store i16 %504, i16* %505, align 2, !tbaa !189
  br label %374

506:                                              ; preds = %440
  %507 = icmp eq i32 %433, 0
  br i1 %507, label %514, label %508

508:                                              ; preds = %506
  %509 = trunc i32 %388 to i8
  %510 = zext i32 %433 to i64
  %511 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %510, i32 0
  store i8 64, i8* %511, align 2, !tbaa.struct !171
  %512 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %510, i32 1
  store i8 %509, i8* %512, align 1, !tbaa.struct !160
  %513 = getelementptr inbounds %struct.code, %struct.code* %382, i64 %510, i32 2
  store i16 0, i16* %513, align 2, !tbaa.struct !170
  br label %514

514:                                              ; preds = %508, %506
  %515 = load %struct.code*, %struct.code** %3, align 8, !tbaa !53
  %516 = zext i32 %379 to i64
  %517 = getelementptr inbounds %struct.code, %struct.code* %515, i64 %516
  store %struct.code* %517, %struct.code** %3, align 8, !tbaa !53
  br label %518

518:                                              ; preds = %131, %514
  %519 = phi i32 [ %169, %514 ], [ 1, %131 ]
  store i32 %519, i32* %4, align 4, !tbaa !16
  br label %520

520:                                              ; preds = %485, %491, %518, %271, %162, %173, %182, %189, %196, %203, %210, %217, %224, %231, %238, %245, %252, %259, %266, %358, %360
  %521 = phi i32 [ 1, %360 ], [ 1, %358 ], [ -1, %266 ], [ -1, %259 ], [ -1, %252 ], [ -1, %245 ], [ -1, %238 ], [ -1, %231 ], [ -1, %224 ], [ -1, %217 ], [ -1, %210 ], [ -1, %203 ], [ -1, %196 ], [ -1, %189 ], [ -1, %182 ], [ -1, %173 ], [ -1, %162 ], [ -1, %271 ], [ 0, %518 ], [ 1, %491 ], [ 1, %485 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #25
  ret i32 %521
}

; Function Attrs: nofree nosync nounwind uwtable writeonly
define hidden void @_tr_init(%struct.internal_state* noundef %0) local_unnamed_addr #13 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 0
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i32 0
  store %struct.ct_data_s* %2, %struct.ct_data_s** %3, align 8, !tbaa !131
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i32 2
  store %struct.static_tree_desc_s* @static_l_desc, %struct.static_tree_desc_s** %4, align 8, !tbaa !287
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 0
  store %struct.ct_data_s* %5, %struct.ct_data_s** %6, align 8, !tbaa !132
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 2
  store %struct.static_tree_desc_s* @static_d_desc, %struct.static_tree_desc_s** %7, align 8, !tbaa !288
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42, i32 0
  store %struct.ct_data_s* %8, %struct.ct_data_s** %9, align 8, !tbaa !133
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42, i32 2
  store %struct.static_tree_desc_s* @static_bl_desc, %struct.static_tree_desc_s** %10, align 8, !tbaa !289
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  store i16 0, i16* %11, align 8, !tbaa !109
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  store i32 0, i32* %12, align 4, !tbaa !85
  br label %13

13:                                               ; preds = %13, %1
  %14 = phi i64 [ 0, %1 ], [ %18, %13 ]
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %14, i32 0, i32 0
  store i16 0, i16* %15, align 4, !tbaa !4
  %16 = or i64 %14, 1
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %16, i32 0, i32 0
  store i16 0, i16* %17, align 4, !tbaa !4
  %18 = add nuw nsw i64 %14, 2
  %19 = icmp eq i64 %18, 286
  br i1 %19, label %20, label %13, !llvm.loop !290

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0, i32 0, i32 0
  store i16 0, i16* %21, align 4, !tbaa !4
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 1, i32 0, i32 0
  store i16 0, i16* %22, align 4, !tbaa !4
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 2, i32 0, i32 0
  store i16 0, i16* %23, align 4, !tbaa !4
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 3, i32 0, i32 0
  store i16 0, i16* %24, align 4, !tbaa !4
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 4, i32 0, i32 0
  store i16 0, i16* %25, align 4, !tbaa !4
  %26 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 5, i32 0, i32 0
  store i16 0, i16* %26, align 4, !tbaa !4
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 6, i32 0, i32 0
  store i16 0, i16* %27, align 4, !tbaa !4
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 7, i32 0, i32 0
  store i16 0, i16* %28, align 4, !tbaa !4
  %29 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 8, i32 0, i32 0
  store i16 0, i16* %29, align 4, !tbaa !4
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 9, i32 0, i32 0
  store i16 0, i16* %30, align 4, !tbaa !4
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 10, i32 0, i32 0
  store i16 0, i16* %31, align 4, !tbaa !4
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 11, i32 0, i32 0
  store i16 0, i16* %32, align 4, !tbaa !4
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 12, i32 0, i32 0
  store i16 0, i16* %33, align 4, !tbaa !4
  %34 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 13, i32 0, i32 0
  store i16 0, i16* %34, align 4, !tbaa !4
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 14, i32 0, i32 0
  store i16 0, i16* %35, align 4, !tbaa !4
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 15, i32 0, i32 0
  store i16 0, i16* %36, align 4, !tbaa !4
  %37 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 16, i32 0, i32 0
  store i16 0, i16* %37, align 4, !tbaa !4
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 17, i32 0, i32 0
  store i16 0, i16* %38, align 4, !tbaa !4
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 18, i32 0, i32 0
  store i16 0, i16* %39, align 4, !tbaa !4
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 19, i32 0, i32 0
  store i16 0, i16* %40, align 4, !tbaa !4
  %41 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 20, i32 0, i32 0
  store i16 0, i16* %41, align 4, !tbaa !4
  %42 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 21, i32 0, i32 0
  store i16 0, i16* %42, align 4, !tbaa !4
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 22, i32 0, i32 0
  store i16 0, i16* %43, align 4, !tbaa !4
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 23, i32 0, i32 0
  store i16 0, i16* %44, align 4, !tbaa !4
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 24, i32 0, i32 0
  store i16 0, i16* %45, align 4, !tbaa !4
  %46 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 25, i32 0, i32 0
  store i16 0, i16* %46, align 4, !tbaa !4
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 26, i32 0, i32 0
  store i16 0, i16* %47, align 4, !tbaa !4
  %48 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 27, i32 0, i32 0
  store i16 0, i16* %48, align 4, !tbaa !4
  %49 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 28, i32 0, i32 0
  store i16 0, i16* %49, align 4, !tbaa !4
  %50 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 29, i32 0, i32 0
  store i16 0, i16* %50, align 4, !tbaa !4
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0, i32 0, i32 0
  store i16 0, i16* %51, align 4, !tbaa !4
  %52 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 1, i32 0, i32 0
  store i16 0, i16* %52, align 4, !tbaa !4
  %53 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 2, i32 0, i32 0
  store i16 0, i16* %53, align 4, !tbaa !4
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 3, i32 0, i32 0
  store i16 0, i16* %54, align 4, !tbaa !4
  %55 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 4, i32 0, i32 0
  store i16 0, i16* %55, align 4, !tbaa !4
  %56 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 5, i32 0, i32 0
  store i16 0, i16* %56, align 4, !tbaa !4
  %57 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 6, i32 0, i32 0
  store i16 0, i16* %57, align 4, !tbaa !4
  %58 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 7, i32 0, i32 0
  store i16 0, i16* %58, align 4, !tbaa !4
  %59 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 8, i32 0, i32 0
  store i16 0, i16* %59, align 4, !tbaa !4
  %60 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 9, i32 0, i32 0
  store i16 0, i16* %60, align 4, !tbaa !4
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 10, i32 0, i32 0
  store i16 0, i16* %61, align 4, !tbaa !4
  %62 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 11, i32 0, i32 0
  store i16 0, i16* %62, align 4, !tbaa !4
  %63 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 12, i32 0, i32 0
  store i16 0, i16* %63, align 4, !tbaa !4
  %64 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 13, i32 0, i32 0
  store i16 0, i16* %64, align 4, !tbaa !4
  %65 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 14, i32 0, i32 0
  store i16 0, i16* %65, align 4, !tbaa !4
  %66 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 15, i32 0, i32 0
  store i16 0, i16* %66, align 4, !tbaa !4
  %67 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  store i16 0, i16* %67, align 4, !tbaa !4
  %68 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  store i16 0, i16* %68, align 4, !tbaa !4
  %69 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  store i16 0, i16* %69, align 4, !tbaa !4
  %70 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 256, i32 0, i32 0
  store i16 1, i16* %70, align 4, !tbaa !4
  %71 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %72 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  store i32 0, i32* %72, align 4, !tbaa !93
  %73 = bitcast i64* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %73, i8 0, i64 20, i1 false) #25
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define hidden void @_tr_stored_block(%struct.internal_state* nocapture noundef %0, i8* nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %6 = load i32, i32* %5, align 4, !tbaa !85
  %7 = icmp sgt i32 %6, 13
  br i1 %7, label %8, label %34

8:                                                ; preds = %4
  %9 = and i32 %3, 65535
  %10 = shl i32 %3, %6
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %12 = load i16, i16* %11, align 8, !tbaa !109
  %13 = trunc i32 %10 to i16
  %14 = or i16 %12, %13
  store i16 %14, i16* %11, align 8, !tbaa !109
  %15 = trunc i16 %14 to i8
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8, !tbaa !51
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %19 = load i64, i64* %18, align 8, !tbaa !80
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8, !tbaa !80
  %21 = getelementptr inbounds i8, i8* %17, i64 %19
  store i8 %15, i8* %21, align 1, !tbaa !4
  %22 = load i16, i16* %11, align 8, !tbaa !109
  %23 = lshr i16 %22, 8
  %24 = trunc i16 %23 to i8
  %25 = load i8*, i8** %16, align 8, !tbaa !51
  %26 = load i64, i64* %18, align 8, !tbaa !80
  %27 = add i64 %26, 1
  store i64 %27, i64* %18, align 8, !tbaa !80
  %28 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %24, i8* %28, align 1, !tbaa !4
  %29 = load i32, i32* %5, align 4, !tbaa !85
  %30 = sub nsw i32 16, %29
  %31 = lshr i32 %9, %30
  %32 = trunc i32 %31 to i16
  store i16 %32, i16* %11, align 8, !tbaa !109
  %33 = add nsw i32 %29, -13
  br label %41

34:                                               ; preds = %4
  %35 = shl i32 %3, %6
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %37 = load i16, i16* %36, align 8, !tbaa !109
  %38 = trunc i32 %35 to i16
  %39 = or i16 %37, %38
  store i16 %39, i16* %36, align 8, !tbaa !109
  %40 = add nsw i32 %6, 3
  br label %41

41:                                               ; preds = %34, %8
  %42 = phi i16 [ %39, %34 ], [ %32, %8 ]
  %43 = phi i32 [ %40, %34 ], [ %33, %8 ]
  %44 = icmp sgt i32 %43, 8
  br i1 %44, label %45, label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %47 = trunc i16 %42 to i8
  %48 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %49 = load i8*, i8** %48, align 8, !tbaa !51
  %50 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %51 = load i64, i64* %50, align 8, !tbaa !80
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8, !tbaa !80
  %53 = getelementptr inbounds i8, i8* %49, i64 %51
  store i8 %47, i8* %53, align 1, !tbaa !4
  %54 = load i16, i16* %46, align 8, !tbaa !109
  %55 = lshr i16 %54, 8
  %56 = trunc i16 %55 to i8
  %57 = load i8*, i8** %48, align 8, !tbaa !51
  %58 = load i64, i64* %50, align 8, !tbaa !80
  %59 = add i64 %58, 1
  store i64 %59, i64* %50, align 8, !tbaa !80
  %60 = getelementptr inbounds i8, i8* %57, i64 %58
  store i8 %56, i8* %60, align 1, !tbaa !4
  br label %71

61:                                               ; preds = %41
  %62 = icmp sgt i32 %43, 0
  br i1 %62, label %63, label %71

63:                                               ; preds = %61
  %64 = trunc i16 %42 to i8
  %65 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %66 = load i8*, i8** %65, align 8, !tbaa !51
  %67 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %68 = load i64, i64* %67, align 8, !tbaa !80
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8, !tbaa !80
  %70 = getelementptr inbounds i8, i8* %66, i64 %68
  store i8 %64, i8* %70, align 1, !tbaa !4
  br label %71

71:                                               ; preds = %45, %61, %63
  %72 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  store i16 0, i16* %72, align 8, !tbaa !109
  store i32 0, i32* %5, align 4, !tbaa !85
  %73 = trunc i64 %2 to i8
  %74 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %75 = load i8*, i8** %74, align 8, !tbaa !51
  %76 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %77 = load i64, i64* %76, align 8, !tbaa !80
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8, !tbaa !80
  %79 = getelementptr inbounds i8, i8* %75, i64 %77
  store i8 %73, i8* %79, align 1, !tbaa !4
  %80 = lshr i64 %2, 8
  %81 = trunc i64 %80 to i8
  %82 = load i8*, i8** %74, align 8, !tbaa !51
  %83 = load i64, i64* %76, align 8, !tbaa !80
  %84 = add i64 %83, 1
  store i64 %84, i64* %76, align 8, !tbaa !80
  %85 = getelementptr inbounds i8, i8* %82, i64 %83
  store i8 %81, i8* %85, align 1, !tbaa !4
  %86 = trunc i64 %2 to i32
  %87 = and i32 %86, 65535
  %88 = xor i32 %87, 65535
  %89 = trunc i32 %88 to i8
  %90 = load i8*, i8** %74, align 8, !tbaa !51
  %91 = load i64, i64* %76, align 8, !tbaa !80
  %92 = add i64 %91, 1
  store i64 %92, i64* %76, align 8, !tbaa !80
  %93 = getelementptr inbounds i8, i8* %90, i64 %91
  store i8 %89, i8* %93, align 1, !tbaa !4
  %94 = lshr i32 %88, 8
  %95 = trunc i32 %94 to i8
  %96 = load i8*, i8** %74, align 8, !tbaa !51
  %97 = load i64, i64* %76, align 8, !tbaa !80
  %98 = add i64 %97, 1
  store i64 %98, i64* %76, align 8, !tbaa !80
  %99 = getelementptr inbounds i8, i8* %96, i64 %97
  store i8 %95, i8* %99, align 1, !tbaa !4
  %100 = icmp eq i64 %2, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %71
  %102 = load i8*, i8** %74, align 8, !tbaa !51
  %103 = load i64, i64* %76, align 8, !tbaa !80
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %1, i64 %2, i1 false)
  br label %105

105:                                              ; preds = %101, %71
  %106 = load i64, i64* %76, align 8, !tbaa !80
  %107 = add i64 %106, %2
  store i64 %107, i64* %76, align 8, !tbaa !80
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define hidden void @_tr_flush_bits(%struct.internal_state* nocapture noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %3 = load i32, i32* %2, align 4, !tbaa !85
  %4 = icmp eq i32 %3, 16
  br i1 %4, label %5, label %22

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %7 = load i16, i16* %6, align 8, !tbaa !109
  %8 = trunc i16 %7 to i8
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8, !tbaa !51
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8, !tbaa !80
  %13 = add i64 %12, 1
  store i64 %13, i64* %11, align 8, !tbaa !80
  %14 = getelementptr inbounds i8, i8* %10, i64 %12
  store i8 %8, i8* %14, align 1, !tbaa !4
  %15 = load i16, i16* %6, align 8, !tbaa !109
  %16 = lshr i16 %15, 8
  %17 = trunc i16 %16 to i8
  %18 = load i8*, i8** %9, align 8, !tbaa !51
  %19 = load i64, i64* %11, align 8, !tbaa !80
  %20 = add i64 %19, 1
  store i64 %20, i64* %11, align 8, !tbaa !80
  %21 = getelementptr inbounds i8, i8* %18, i64 %19
  store i8 %17, i8* %21, align 1, !tbaa !4
  store i16 0, i16* %6, align 8, !tbaa !109
  br label %38

22:                                               ; preds = %1
  %23 = icmp sgt i32 %3, 7
  br i1 %23, label %24, label %40

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %26 = load i16, i16* %25, align 8, !tbaa !109
  %27 = trunc i16 %26 to i8
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8, !tbaa !51
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %31 = load i64, i64* %30, align 8, !tbaa !80
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8, !tbaa !80
  %33 = getelementptr inbounds i8, i8* %29, i64 %31
  store i8 %27, i8* %33, align 1, !tbaa !4
  %34 = load i16, i16* %25, align 8, !tbaa !109
  %35 = lshr i16 %34, 8
  store i16 %35, i16* %25, align 8, !tbaa !109
  %36 = load i32, i32* %2, align 4, !tbaa !85
  %37 = add nsw i32 %36, -8
  br label %38

38:                                               ; preds = %24, %5
  %39 = phi i32 [ %37, %24 ], [ 0, %5 ]
  store i32 %39, i32* %2, align 4, !tbaa !85
  br label %40

40:                                               ; preds = %22, %38
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define hidden void @_tr_align(%struct.internal_state* nocapture noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %3 = load i32, i32* %2, align 4, !tbaa !85
  %4 = icmp sgt i32 %3, 13
  %5 = shl i32 2, %3
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %7 = load i16, i16* %6, align 8, !tbaa !109
  %8 = trunc i32 %5 to i16
  %9 = or i16 %7, %8
  store i16 %9, i16* %6, align 8, !tbaa !109
  br i1 %4, label %10, label %30

10:                                               ; preds = %1
  %11 = trunc i16 %9 to i8
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8, !tbaa !51
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %15 = load i64, i64* %14, align 8, !tbaa !80
  %16 = add i64 %15, 1
  store i64 %16, i64* %14, align 8, !tbaa !80
  %17 = getelementptr inbounds i8, i8* %13, i64 %15
  store i8 %11, i8* %17, align 1, !tbaa !4
  %18 = load i16, i16* %6, align 8, !tbaa !109
  %19 = lshr i16 %18, 8
  %20 = trunc i16 %19 to i8
  %21 = load i8*, i8** %12, align 8, !tbaa !51
  %22 = load i64, i64* %14, align 8, !tbaa !80
  %23 = add i64 %22, 1
  store i64 %23, i64* %14, align 8, !tbaa !80
  %24 = getelementptr inbounds i8, i8* %21, i64 %22
  store i8 %20, i8* %24, align 1, !tbaa !4
  %25 = load i32, i32* %2, align 4, !tbaa !85
  %26 = sub nsw i32 16, %25
  %27 = lshr i32 2, %26
  %28 = trunc i32 %27 to i16
  store i16 %28, i16* %6, align 8, !tbaa !109
  %29 = add nsw i32 %25, -13
  br label %32

30:                                               ; preds = %1
  %31 = add nsw i32 %3, 3
  br label %32

32:                                               ; preds = %30, %10
  %33 = phi i16 [ %9, %30 ], [ %28, %10 ]
  %34 = phi i32 [ %31, %30 ], [ %29, %10 ]
  store i32 %34, i32* %2, align 4, !tbaa !85
  %35 = icmp sgt i32 %34, 9
  br i1 %35, label %36, label %54

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %38 = trunc i16 %33 to i8
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %40 = load i8*, i8** %39, align 8, !tbaa !51
  %41 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %42 = load i64, i64* %41, align 8, !tbaa !80
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8, !tbaa !80
  %44 = getelementptr inbounds i8, i8* %40, i64 %42
  store i8 %38, i8* %44, align 1, !tbaa !4
  %45 = load i16, i16* %37, align 8, !tbaa !109
  %46 = lshr i16 %45, 8
  %47 = trunc i16 %46 to i8
  %48 = load i8*, i8** %39, align 8, !tbaa !51
  %49 = load i64, i64* %41, align 8, !tbaa !80
  %50 = add i64 %49, 1
  store i64 %50, i64* %41, align 8, !tbaa !80
  %51 = getelementptr inbounds i8, i8* %48, i64 %49
  store i8 %47, i8* %51, align 1, !tbaa !4
  store i16 0, i16* %37, align 8, !tbaa !109
  %52 = load i32, i32* %2, align 4, !tbaa !85
  %53 = add nsw i32 %52, -9
  br label %56

54:                                               ; preds = %32
  %55 = add nsw i32 %34, 7
  br label %56

56:                                               ; preds = %54, %36
  %57 = phi i16 [ %33, %54 ], [ 0, %36 ]
  %58 = phi i32 [ %55, %54 ], [ %53, %36 ]
  store i32 %58, i32* %2, align 4, !tbaa !85
  %59 = icmp eq i32 %58, 16
  br i1 %59, label %60, label %76

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %62 = trunc i16 %57 to i8
  %63 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %64 = load i8*, i8** %63, align 8, !tbaa !51
  %65 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %66 = load i64, i64* %65, align 8, !tbaa !80
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8, !tbaa !80
  %68 = getelementptr inbounds i8, i8* %64, i64 %66
  store i8 %62, i8* %68, align 1, !tbaa !4
  %69 = load i16, i16* %61, align 8, !tbaa !109
  %70 = lshr i16 %69, 8
  %71 = trunc i16 %70 to i8
  %72 = load i8*, i8** %63, align 8, !tbaa !51
  %73 = load i64, i64* %65, align 8, !tbaa !80
  %74 = add i64 %73, 1
  store i64 %74, i64* %65, align 8, !tbaa !80
  %75 = getelementptr inbounds i8, i8* %72, i64 %73
  store i8 %71, i8* %75, align 1, !tbaa !4
  store i16 0, i16* %61, align 8, !tbaa !109
  br label %91

76:                                               ; preds = %56
  %77 = icmp sgt i32 %58, 7
  br i1 %77, label %78, label %93

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %80 = trunc i16 %57 to i8
  %81 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %82 = load i8*, i8** %81, align 8, !tbaa !51
  %83 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %84 = load i64, i64* %83, align 8, !tbaa !80
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8, !tbaa !80
  %86 = getelementptr inbounds i8, i8* %82, i64 %84
  store i8 %80, i8* %86, align 1, !tbaa !4
  %87 = load i16, i16* %79, align 8, !tbaa !109
  %88 = lshr i16 %87, 8
  store i16 %88, i16* %79, align 8, !tbaa !109
  %89 = load i32, i32* %2, align 4, !tbaa !85
  %90 = add nsw i32 %89, -8
  br label %91

91:                                               ; preds = %78, %60
  %92 = phi i32 [ %90, %78 ], [ 0, %60 ]
  store i32 %92, i32* %2, align 4, !tbaa !85
  br label %93

93:                                               ; preds = %76, %91
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define hidden void @_tr_flush_block(%struct.internal_state* noundef %0, i8* noundef readonly %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #10 {
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 33
  %6 = load i32, i32* %5, align 4, !tbaa !56
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %375

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %10 = load %struct.z_stream_s*, %struct.z_stream_s** %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8, !tbaa !79
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %143

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 0, i32 0, i32 0
  %16 = load i16, i16* %15, align 4, !tbaa !4
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %141

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 1, i32 0, i32 0
  %20 = load i16, i16* %19, align 4, !tbaa !4
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %141

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 2, i32 0, i32 0
  %24 = load i16, i16* %23, align 4, !tbaa !4
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %141

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 3, i32 0, i32 0
  %28 = load i16, i16* %27, align 4, !tbaa !4
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %141

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 4, i32 0, i32 0
  %32 = load i16, i16* %31, align 4, !tbaa !4
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %34, label %141

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 5, i32 0, i32 0
  %36 = load i16, i16* %35, align 4, !tbaa !4
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %141

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 6, i32 0, i32 0
  %40 = load i16, i16* %39, align 4, !tbaa !4
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %141

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 14, i32 0, i32 0
  %44 = load i16, i16* %43, align 4, !tbaa !4
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %141

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 15, i32 0, i32 0
  %48 = load i16, i16* %47, align 4, !tbaa !4
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %141

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 16, i32 0, i32 0
  %52 = load i16, i16* %51, align 4, !tbaa !4
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %141

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 17, i32 0, i32 0
  %56 = load i16, i16* %55, align 4, !tbaa !4
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %141

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 18, i32 0, i32 0
  %60 = load i16, i16* %59, align 4, !tbaa !4
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %141

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 19, i32 0, i32 0
  %64 = load i16, i16* %63, align 4, !tbaa !4
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %141

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 20, i32 0, i32 0
  %68 = load i16, i16* %67, align 4, !tbaa !4
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %141

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 21, i32 0, i32 0
  %72 = load i16, i16* %71, align 4, !tbaa !4
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %74, label %141

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 22, i32 0, i32 0
  %76 = load i16, i16* %75, align 4, !tbaa !4
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %78, label %141

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 23, i32 0, i32 0
  %80 = load i16, i16* %79, align 4, !tbaa !4
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %82, label %141

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 24, i32 0, i32 0
  %84 = load i16, i16* %83, align 4, !tbaa !4
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %86, label %141

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 25, i32 0, i32 0
  %88 = load i16, i16* %87, align 4, !tbaa !4
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %141

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 28, i32 0, i32 0
  %92 = load i16, i16* %91, align 4, !tbaa !4
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %94, label %141

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 29, i32 0, i32 0
  %96 = load i16, i16* %95, align 4, !tbaa !4
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %98, label %141

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 30, i32 0, i32 0
  %100 = load i16, i16* %99, align 4, !tbaa !4
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %102, label %141

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 31, i32 0, i32 0
  %104 = load i16, i16* %103, align 4, !tbaa !4
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %106, label %141

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 9, i32 0, i32 0
  %108 = load i16, i16* %107, align 4, !tbaa !4
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %110, label %141

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 10, i32 0, i32 0
  %112 = load i16, i16* %111, align 4, !tbaa !4
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %114, label %141

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 13, i32 0, i32 0
  %116 = load i16, i16* %115, align 4, !tbaa !4
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %136, label %141

118:                                              ; preds = %136
  %119 = or i64 %137, 1
  %120 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %119, i32 0, i32 0
  %121 = load i16, i16* %120, align 4, !tbaa !4
  %122 = icmp eq i16 %121, 0
  br i1 %122, label %123, label %141

123:                                              ; preds = %118
  %124 = or i64 %137, 2
  %125 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %124, i32 0, i32 0
  %126 = load i16, i16* %125, align 4, !tbaa !4
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %128, label %141

128:                                              ; preds = %123
  %129 = or i64 %137, 3
  %130 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %129, i32 0, i32 0
  %131 = load i16, i16* %130, align 4, !tbaa !4
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %133, label %141

133:                                              ; preds = %128
  %134 = add nuw nsw i64 %137, 4
  %135 = icmp eq i64 %134, 256
  br i1 %135, label %141, label %136, !llvm.loop !291

136:                                              ; preds = %114, %133
  %137 = phi i64 [ %134, %133 ], [ 32, %114 ]
  %138 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %137, i32 0, i32 0
  %139 = load i16, i16* %138, align 4, !tbaa !4
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %118, label %141

141:                                              ; preds = %136, %118, %123, %128, %133, %14, %18, %22, %26, %30, %34, %38, %42, %46, %50, %54, %58, %62, %66, %70, %74, %78, %82, %86, %90, %94, %98, %102, %106, %110, %114
  %142 = phi i32 [ 1, %114 ], [ 1, %110 ], [ 1, %106 ], [ 0, %102 ], [ 0, %98 ], [ 0, %94 ], [ 0, %90 ], [ 0, %86 ], [ 0, %82 ], [ 0, %78 ], [ 0, %74 ], [ 0, %70 ], [ 0, %66 ], [ 0, %62 ], [ 0, %58 ], [ 0, %54 ], [ 0, %50 ], [ 0, %46 ], [ 0, %42 ], [ 0, %38 ], [ 0, %34 ], [ 0, %30 ], [ 0, %26 ], [ 0, %22 ], [ 0, %18 ], [ 0, %14 ], [ 1, %136 ], [ 1, %118 ], [ 1, %123 ], [ 1, %128 ], [ 0, %133 ]
  store i32 %142, i32* %11, align 8, !tbaa !79
  br label %143

143:                                              ; preds = %141, %8
  %144 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40
  tail call fastcc void @build_tree(%struct.internal_state* noundef nonnull %0, %struct.tree_desc_s* noundef nonnull %144)
  %145 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41
  tail call fastcc void @build_tree(%struct.internal_state* noundef nonnull %0, %struct.tree_desc_s* noundef nonnull %145)
  %146 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i32 1
  %147 = load i32, i32* %146, align 8, !tbaa !292
  %148 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 0, i32 1, i32 0
  %149 = load i16, i16* %148, align 2, !tbaa !4
  %150 = icmp eq i16 %149, 0
  %151 = add i32 %147, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %152, i32 1, i32 0
  store i16 -1, i16* %153, align 2, !tbaa !4
  %154 = icmp slt i32 %147, 0
  br i1 %154, label %217, label %155

155:                                              ; preds = %143
  %156 = select i1 %150, i32 3, i32 4
  %157 = select i1 %150, i32 138, i32 7
  %158 = zext i16 %149 to i32
  %159 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  %160 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  %161 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  %162 = zext i32 %151 to i64
  br label %163

163:                                              ; preds = %211, %155
  %164 = phi i64 [ 0, %155 ], [ %170, %211 ]
  %165 = phi i32 [ %156, %155 ], [ %215, %211 ]
  %166 = phi i32 [ %157, %155 ], [ %214, %211 ]
  %167 = phi i32 [ 0, %155 ], [ %213, %211 ]
  %168 = phi i32 [ %158, %155 ], [ %173, %211 ]
  %169 = phi i32 [ -1, %155 ], [ %212, %211 ]
  %170 = add nuw nsw i64 %164, 1
  %171 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %170, i32 1, i32 0
  %172 = load i16, i16* %171, align 2, !tbaa !4
  %173 = zext i16 %172 to i32
  %174 = add nsw i32 %167, 1
  %175 = icmp slt i32 %174, %166
  %176 = icmp eq i32 %168, %173
  %177 = select i1 %175, i1 %176, i1 false
  br i1 %177, label %211, label %178

178:                                              ; preds = %163
  %179 = icmp slt i32 %174, %165
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  %181 = zext i32 %168 to i64
  %182 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %181, i32 0, i32 0
  %183 = load i16, i16* %182, align 4, !tbaa !4
  %184 = trunc i32 %174 to i16
  %185 = add i16 %183, %184
  store i16 %185, i16* %182, align 4, !tbaa !4
  br label %206

186:                                              ; preds = %178
  %187 = icmp eq i32 %168, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %186
  %189 = icmp eq i32 %168, %169
  br i1 %189, label %195, label %190

190:                                              ; preds = %188
  %191 = zext i32 %168 to i64
  %192 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %191, i32 0, i32 0
  %193 = load i16, i16* %192, align 4, !tbaa !4
  %194 = add i16 %193, 1
  store i16 %194, i16* %192, align 4, !tbaa !4
  br label %195

195:                                              ; preds = %190, %188
  %196 = load i16, i16* %159, align 4, !tbaa !4
  %197 = add i16 %196, 1
  store i16 %197, i16* %159, align 4, !tbaa !4
  br label %206

198:                                              ; preds = %186
  %199 = icmp slt i32 %167, 10
  br i1 %199, label %200, label %203

200:                                              ; preds = %198
  %201 = load i16, i16* %161, align 4, !tbaa !4
  %202 = add i16 %201, 1
  store i16 %202, i16* %161, align 4, !tbaa !4
  br label %206

203:                                              ; preds = %198
  %204 = load i16, i16* %160, align 4, !tbaa !4
  %205 = add i16 %204, 1
  store i16 %205, i16* %160, align 4, !tbaa !4
  br label %206

206:                                              ; preds = %203, %200, %195, %180
  %207 = icmp eq i16 %172, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %206
  %209 = select i1 %176, i32 6, i32 7
  %210 = select i1 %176, i32 3, i32 4
  br label %211

211:                                              ; preds = %208, %206, %163
  %212 = phi i32 [ %169, %163 ], [ %168, %206 ], [ %168, %208 ]
  %213 = phi i32 [ %174, %163 ], [ 0, %206 ], [ 0, %208 ]
  %214 = phi i32 [ %166, %163 ], [ 138, %206 ], [ %209, %208 ]
  %215 = phi i32 [ %165, %163 ], [ 3, %206 ], [ %210, %208 ]
  %216 = icmp eq i64 %170, %162
  br i1 %216, label %217, label %163, !llvm.loop !293

217:                                              ; preds = %211, %143
  %218 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 1
  %219 = load i32, i32* %218, align 8, !tbaa !294
  %220 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0, i32 1, i32 0
  %221 = load i16, i16* %220, align 2, !tbaa !4
  %222 = icmp eq i16 %221, 0
  %223 = add i32 %219, 1
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %224, i32 1, i32 0
  store i16 -1, i16* %225, align 2, !tbaa !4
  %226 = icmp slt i32 %219, 0
  br i1 %226, label %289, label %227

227:                                              ; preds = %217
  %228 = select i1 %222, i32 3, i32 4
  %229 = select i1 %222, i32 138, i32 7
  %230 = zext i16 %221 to i32
  %231 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  %232 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  %233 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  %234 = zext i32 %223 to i64
  br label %235

235:                                              ; preds = %283, %227
  %236 = phi i64 [ 0, %227 ], [ %242, %283 ]
  %237 = phi i32 [ %228, %227 ], [ %287, %283 ]
  %238 = phi i32 [ %229, %227 ], [ %286, %283 ]
  %239 = phi i32 [ 0, %227 ], [ %285, %283 ]
  %240 = phi i32 [ %230, %227 ], [ %245, %283 ]
  %241 = phi i32 [ -1, %227 ], [ %284, %283 ]
  %242 = add nuw nsw i64 %236, 1
  %243 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %242, i32 1, i32 0
  %244 = load i16, i16* %243, align 2, !tbaa !4
  %245 = zext i16 %244 to i32
  %246 = add nsw i32 %239, 1
  %247 = icmp slt i32 %246, %238
  %248 = icmp eq i32 %240, %245
  %249 = select i1 %247, i1 %248, i1 false
  br i1 %249, label %283, label %250

250:                                              ; preds = %235
  %251 = icmp slt i32 %246, %237
  br i1 %251, label %252, label %258

252:                                              ; preds = %250
  %253 = zext i32 %240 to i64
  %254 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %253, i32 0, i32 0
  %255 = load i16, i16* %254, align 4, !tbaa !4
  %256 = trunc i32 %246 to i16
  %257 = add i16 %255, %256
  store i16 %257, i16* %254, align 4, !tbaa !4
  br label %278

258:                                              ; preds = %250
  %259 = icmp eq i32 %240, 0
  br i1 %259, label %270, label %260

260:                                              ; preds = %258
  %261 = icmp eq i32 %240, %241
  br i1 %261, label %267, label %262

262:                                              ; preds = %260
  %263 = zext i32 %240 to i64
  %264 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %263, i32 0, i32 0
  %265 = load i16, i16* %264, align 4, !tbaa !4
  %266 = add i16 %265, 1
  store i16 %266, i16* %264, align 4, !tbaa !4
  br label %267

267:                                              ; preds = %262, %260
  %268 = load i16, i16* %231, align 4, !tbaa !4
  %269 = add i16 %268, 1
  store i16 %269, i16* %231, align 4, !tbaa !4
  br label %278

270:                                              ; preds = %258
  %271 = icmp slt i32 %239, 10
  br i1 %271, label %272, label %275

272:                                              ; preds = %270
  %273 = load i16, i16* %233, align 4, !tbaa !4
  %274 = add i16 %273, 1
  store i16 %274, i16* %233, align 4, !tbaa !4
  br label %278

275:                                              ; preds = %270
  %276 = load i16, i16* %232, align 4, !tbaa !4
  %277 = add i16 %276, 1
  store i16 %277, i16* %232, align 4, !tbaa !4
  br label %278

278:                                              ; preds = %275, %272, %267, %252
  %279 = icmp eq i16 %244, 0
  br i1 %279, label %283, label %280

280:                                              ; preds = %278
  %281 = select i1 %248, i32 6, i32 7
  %282 = select i1 %248, i32 3, i32 4
  br label %283

283:                                              ; preds = %280, %278, %235
  %284 = phi i32 [ %241, %235 ], [ %240, %278 ], [ %240, %280 ]
  %285 = phi i32 [ %246, %235 ], [ 0, %278 ], [ 0, %280 ]
  %286 = phi i32 [ %238, %235 ], [ 138, %278 ], [ %281, %280 ]
  %287 = phi i32 [ %237, %235 ], [ 3, %278 ], [ %282, %280 ]
  %288 = icmp eq i64 %242, %234
  br i1 %288, label %289, label %235, !llvm.loop !293

289:                                              ; preds = %283, %217
  %290 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42
  tail call fastcc void @build_tree(%struct.internal_state* noundef nonnull %0, %struct.tree_desc_s* noundef nonnull %290) #25
  %291 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 15, i32 1, i32 0
  %292 = load i16, i16* %291, align 2, !tbaa !4
  %293 = icmp eq i16 %292, 0
  br i1 %293, label %294, label %355

294:                                              ; preds = %289
  %295 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 1, i32 1, i32 0
  %296 = load i16, i16* %295, align 2, !tbaa !4
  %297 = icmp eq i16 %296, 0
  br i1 %297, label %298, label %355

298:                                              ; preds = %294
  %299 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 14, i32 1, i32 0
  %300 = load i16, i16* %299, align 2, !tbaa !4
  %301 = icmp eq i16 %300, 0
  br i1 %301, label %302, label %355

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 2, i32 1, i32 0
  %304 = load i16, i16* %303, align 2, !tbaa !4
  %305 = icmp eq i16 %304, 0
  br i1 %305, label %306, label %355

306:                                              ; preds = %302
  %307 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 13, i32 1, i32 0
  %308 = load i16, i16* %307, align 2, !tbaa !4
  %309 = icmp eq i16 %308, 0
  br i1 %309, label %310, label %355

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 3, i32 1, i32 0
  %312 = load i16, i16* %311, align 2, !tbaa !4
  %313 = icmp eq i16 %312, 0
  br i1 %313, label %314, label %355

314:                                              ; preds = %310
  %315 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 12, i32 1, i32 0
  %316 = load i16, i16* %315, align 2, !tbaa !4
  %317 = icmp eq i16 %316, 0
  br i1 %317, label %318, label %355

318:                                              ; preds = %314
  %319 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 4, i32 1, i32 0
  %320 = load i16, i16* %319, align 2, !tbaa !4
  %321 = icmp eq i16 %320, 0
  br i1 %321, label %322, label %355

322:                                              ; preds = %318
  %323 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 11, i32 1, i32 0
  %324 = load i16, i16* %323, align 2, !tbaa !4
  %325 = icmp eq i16 %324, 0
  br i1 %325, label %326, label %355

326:                                              ; preds = %322
  %327 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 5, i32 1, i32 0
  %328 = load i16, i16* %327, align 2, !tbaa !4
  %329 = icmp eq i16 %328, 0
  br i1 %329, label %330, label %355

330:                                              ; preds = %326
  %331 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 10, i32 1, i32 0
  %332 = load i16, i16* %331, align 2, !tbaa !4
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %334, label %355

334:                                              ; preds = %330
  %335 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 6, i32 1, i32 0
  %336 = load i16, i16* %335, align 2, !tbaa !4
  %337 = icmp eq i16 %336, 0
  br i1 %337, label %338, label %355

338:                                              ; preds = %334
  %339 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 9, i32 1, i32 0
  %340 = load i16, i16* %339, align 2, !tbaa !4
  %341 = icmp eq i16 %340, 0
  br i1 %341, label %342, label %355

342:                                              ; preds = %338
  %343 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 7, i32 1, i32 0
  %344 = load i16, i16* %343, align 2, !tbaa !4
  %345 = icmp eq i16 %344, 0
  br i1 %345, label %346, label %355

346:                                              ; preds = %342
  %347 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 8, i32 1, i32 0
  %348 = load i16, i16* %347, align 2, !tbaa !4
  %349 = icmp eq i16 %348, 0
  br i1 %349, label %350, label %355

350:                                              ; preds = %346
  %351 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0, i32 1, i32 0
  %352 = load i16, i16* %351, align 2, !tbaa !4
  %353 = icmp eq i16 %352, 0
  %354 = select i1 %353, i32 2, i32 3
  br label %355

355:                                              ; preds = %289, %294, %298, %302, %306, %310, %314, %318, %322, %326, %330, %334, %338, %342, %346, %350
  %356 = phi i32 [ 18, %289 ], [ 17, %294 ], [ 16, %298 ], [ 15, %302 ], [ 14, %306 ], [ 13, %310 ], [ 12, %314 ], [ 11, %318 ], [ 10, %322 ], [ 9, %326 ], [ 8, %330 ], [ 7, %334 ], [ 6, %338 ], [ 5, %342 ], [ 4, %346 ], [ %354, %350 ]
  %357 = mul nuw nsw i32 %356, 3
  %358 = add nuw nsw i32 %357, 17
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %361 = load i64, i64* %360, align 8, !tbaa !295
  %362 = add i64 %361, %359
  store i64 %362, i64* %360, align 8, !tbaa !295
  %363 = add i64 %362, 10
  %364 = lshr i64 %363, 3
  %365 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %366 = load i64, i64* %365, align 8, !tbaa !296
  %367 = add i64 %366, 10
  %368 = lshr i64 %367, 3
  %369 = icmp ugt i64 %368, %364
  br i1 %369, label %370, label %374

370:                                              ; preds = %355
  %371 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 34
  %372 = load i32, i32* %371, align 8, !tbaa !57
  %373 = icmp eq i32 %372, 4
  br i1 %373, label %374, label %377

374:                                              ; preds = %370, %355
  br label %377

375:                                              ; preds = %4
  %376 = add i64 %2, 5
  br label %377

377:                                              ; preds = %370, %374, %375
  %378 = phi i32 [ %356, %374 ], [ %356, %370 ], [ 0, %375 ]
  %379 = phi i64 [ %368, %374 ], [ %368, %370 ], [ %376, %375 ]
  %380 = phi i64 [ %368, %374 ], [ %364, %370 ], [ %376, %375 ]
  %381 = add i64 %2, 4
  %382 = icmp ule i64 %381, %380
  %383 = icmp ne i8* %1, null
  %384 = and i1 %383, %382
  br i1 %384, label %385, label %386

385:                                              ; preds = %377
  tail call void @_tr_stored_block(%struct.internal_state* noundef nonnull %0, i8* noundef nonnull %1, i64 noundef %2, i32 noundef %3)
  br label %622

386:                                              ; preds = %377
  %387 = icmp eq i64 %379, %380
  %388 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %389 = load i32, i32* %388, align 4, !tbaa !85
  %390 = icmp sgt i32 %389, 13
  br i1 %387, label %391, label %428

391:                                              ; preds = %386
  %392 = add i32 %3, 2
  br i1 %390, label %393, label %419

393:                                              ; preds = %391
  %394 = and i32 %392, 65535
  %395 = shl i32 %392, %389
  %396 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %397 = load i16, i16* %396, align 8, !tbaa !109
  %398 = trunc i32 %395 to i16
  %399 = or i16 %397, %398
  store i16 %399, i16* %396, align 8, !tbaa !109
  %400 = trunc i16 %399 to i8
  %401 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %402 = load i8*, i8** %401, align 8, !tbaa !51
  %403 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %404 = load i64, i64* %403, align 8, !tbaa !80
  %405 = add i64 %404, 1
  store i64 %405, i64* %403, align 8, !tbaa !80
  %406 = getelementptr inbounds i8, i8* %402, i64 %404
  store i8 %400, i8* %406, align 1, !tbaa !4
  %407 = load i16, i16* %396, align 8, !tbaa !109
  %408 = lshr i16 %407, 8
  %409 = trunc i16 %408 to i8
  %410 = load i8*, i8** %401, align 8, !tbaa !51
  %411 = load i64, i64* %403, align 8, !tbaa !80
  %412 = add i64 %411, 1
  store i64 %412, i64* %403, align 8, !tbaa !80
  %413 = getelementptr inbounds i8, i8* %410, i64 %411
  store i8 %409, i8* %413, align 1, !tbaa !4
  %414 = load i32, i32* %388, align 4, !tbaa !85
  %415 = sub nsw i32 16, %414
  %416 = lshr i32 %394, %415
  %417 = trunc i32 %416 to i16
  store i16 %417, i16* %396, align 8, !tbaa !109
  %418 = add nsw i32 %414, -13
  br label %426

419:                                              ; preds = %391
  %420 = shl i32 %392, %389
  %421 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %422 = load i16, i16* %421, align 8, !tbaa !109
  %423 = trunc i32 %420 to i16
  %424 = or i16 %422, %423
  store i16 %424, i16* %421, align 8, !tbaa !109
  %425 = add nsw i32 %389, 3
  br label %426

426:                                              ; preds = %419, %393
  %427 = phi i32 [ %425, %419 ], [ %418, %393 ]
  store i32 %427, i32* %388, align 4, !tbaa !85
  tail call fastcc void @compress_block(%struct.internal_state* noundef nonnull %0, %struct.ct_data_s* noundef getelementptr inbounds ([288 x %struct.ct_data_s], [288 x %struct.ct_data_s]* @static_ltree, i64 0, i64 0), %struct.ct_data_s* noundef getelementptr inbounds ([30 x %struct.ct_data_s], [30 x %struct.ct_data_s]* @static_dtree, i64 0, i64 0))
  br label %622

428:                                              ; preds = %386
  %429 = add i32 %3, 4
  br i1 %390, label %430, label %456

430:                                              ; preds = %428
  %431 = and i32 %429, 65535
  %432 = shl i32 %429, %389
  %433 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %434 = load i16, i16* %433, align 8, !tbaa !109
  %435 = trunc i32 %432 to i16
  %436 = or i16 %434, %435
  store i16 %436, i16* %433, align 8, !tbaa !109
  %437 = trunc i16 %436 to i8
  %438 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %439 = load i8*, i8** %438, align 8, !tbaa !51
  %440 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %441 = load i64, i64* %440, align 8, !tbaa !80
  %442 = add i64 %441, 1
  store i64 %442, i64* %440, align 8, !tbaa !80
  %443 = getelementptr inbounds i8, i8* %439, i64 %441
  store i8 %437, i8* %443, align 1, !tbaa !4
  %444 = load i16, i16* %433, align 8, !tbaa !109
  %445 = lshr i16 %444, 8
  %446 = trunc i16 %445 to i8
  %447 = load i8*, i8** %438, align 8, !tbaa !51
  %448 = load i64, i64* %440, align 8, !tbaa !80
  %449 = add i64 %448, 1
  store i64 %449, i64* %440, align 8, !tbaa !80
  %450 = getelementptr inbounds i8, i8* %447, i64 %448
  store i8 %446, i8* %450, align 1, !tbaa !4
  %451 = load i32, i32* %388, align 4, !tbaa !85
  %452 = sub nsw i32 16, %451
  %453 = lshr i32 %431, %452
  %454 = trunc i32 %453 to i16
  %455 = add nsw i32 %451, -13
  br label %463

456:                                              ; preds = %428
  %457 = shl i32 %429, %389
  %458 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %459 = load i16, i16* %458, align 8, !tbaa !109
  %460 = trunc i32 %457 to i16
  %461 = or i16 %459, %460
  %462 = add nsw i32 %389, 3
  br label %463

463:                                              ; preds = %456, %430
  %464 = phi i16 [ %461, %456 ], [ %454, %430 ]
  %465 = phi i32 [ %462, %456 ], [ %455, %430 ]
  store i32 %465, i32* %388, align 4, !tbaa !85
  %466 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i32 1
  %467 = load i32, i32* %466, align 8, !tbaa !292
  %468 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 1
  %469 = load i32, i32* %468, align 8, !tbaa !294
  %470 = add nuw nsw i32 %378, 1
  %471 = icmp sgt i32 %465, 11
  %472 = add i32 %467, 65280
  br i1 %471, label %473, label %498

473:                                              ; preds = %463
  %474 = and i32 %472, 65535
  %475 = shl i32 %472, %465
  %476 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %477 = trunc i32 %475 to i16
  %478 = or i16 %464, %477
  store i16 %478, i16* %476, align 8, !tbaa !109
  %479 = trunc i16 %478 to i8
  %480 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %481 = load i8*, i8** %480, align 8, !tbaa !51
  %482 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %483 = load i64, i64* %482, align 8, !tbaa !80
  %484 = add i64 %483, 1
  store i64 %484, i64* %482, align 8, !tbaa !80
  %485 = getelementptr inbounds i8, i8* %481, i64 %483
  store i8 %479, i8* %485, align 1, !tbaa !4
  %486 = load i16, i16* %476, align 8, !tbaa !109
  %487 = lshr i16 %486, 8
  %488 = trunc i16 %487 to i8
  %489 = load i8*, i8** %480, align 8, !tbaa !51
  %490 = load i64, i64* %482, align 8, !tbaa !80
  %491 = add i64 %490, 1
  store i64 %491, i64* %482, align 8, !tbaa !80
  %492 = getelementptr inbounds i8, i8* %489, i64 %490
  store i8 %488, i8* %492, align 1, !tbaa !4
  %493 = load i32, i32* %388, align 4, !tbaa !85
  %494 = sub nsw i32 16, %493
  %495 = lshr i32 %474, %494
  %496 = trunc i32 %495 to i16
  %497 = add nsw i32 %493, -11
  br label %503

498:                                              ; preds = %463
  %499 = shl i32 %472, %465
  %500 = trunc i32 %499 to i16
  %501 = or i16 %464, %500
  %502 = add nsw i32 %465, 5
  br label %503

503:                                              ; preds = %498, %473
  %504 = phi i16 [ %501, %498 ], [ %496, %473 ]
  %505 = phi i32 [ %502, %498 ], [ %497, %473 ]
  store i32 %505, i32* %388, align 4, !tbaa !85
  %506 = icmp sgt i32 %505, 11
  %507 = add i32 %469, 65536
  br i1 %506, label %508, label %533

508:                                              ; preds = %503
  %509 = and i32 %469, 65535
  %510 = shl i32 %507, %505
  %511 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %512 = trunc i32 %510 to i16
  %513 = or i16 %504, %512
  store i16 %513, i16* %511, align 8, !tbaa !109
  %514 = trunc i16 %513 to i8
  %515 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %516 = load i8*, i8** %515, align 8, !tbaa !51
  %517 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %518 = load i64, i64* %517, align 8, !tbaa !80
  %519 = add i64 %518, 1
  store i64 %519, i64* %517, align 8, !tbaa !80
  %520 = getelementptr inbounds i8, i8* %516, i64 %518
  store i8 %514, i8* %520, align 1, !tbaa !4
  %521 = load i16, i16* %511, align 8, !tbaa !109
  %522 = lshr i16 %521, 8
  %523 = trunc i16 %522 to i8
  %524 = load i8*, i8** %515, align 8, !tbaa !51
  %525 = load i64, i64* %517, align 8, !tbaa !80
  %526 = add i64 %525, 1
  store i64 %526, i64* %517, align 8, !tbaa !80
  %527 = getelementptr inbounds i8, i8* %524, i64 %525
  store i8 %523, i8* %527, align 1, !tbaa !4
  %528 = load i32, i32* %388, align 4, !tbaa !85
  %529 = sub nsw i32 16, %528
  %530 = lshr i32 %509, %529
  %531 = trunc i32 %530 to i16
  %532 = add nsw i32 %528, -11
  br label %538

533:                                              ; preds = %503
  %534 = shl i32 %507, %505
  %535 = trunc i32 %534 to i16
  %536 = or i16 %504, %535
  %537 = add nsw i32 %505, 5
  br label %538

538:                                              ; preds = %533, %508
  %539 = phi i16 [ %536, %533 ], [ %531, %508 ]
  %540 = phi i32 [ %537, %533 ], [ %532, %508 ]
  store i32 %540, i32* %388, align 4, !tbaa !85
  %541 = icmp sgt i32 %540, 12
  %542 = add nuw nsw i32 %378, 65533
  br i1 %541, label %543, label %568

543:                                              ; preds = %538
  %544 = and i32 %542, 65535
  %545 = shl i32 %542, %540
  %546 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %547 = trunc i32 %545 to i16
  %548 = or i16 %539, %547
  store i16 %548, i16* %546, align 8, !tbaa !109
  %549 = trunc i16 %548 to i8
  %550 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %551 = load i8*, i8** %550, align 8, !tbaa !51
  %552 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %553 = load i64, i64* %552, align 8, !tbaa !80
  %554 = add i64 %553, 1
  store i64 %554, i64* %552, align 8, !tbaa !80
  %555 = getelementptr inbounds i8, i8* %551, i64 %553
  store i8 %549, i8* %555, align 1, !tbaa !4
  %556 = load i16, i16* %546, align 8, !tbaa !109
  %557 = lshr i16 %556, 8
  %558 = trunc i16 %557 to i8
  %559 = load i8*, i8** %550, align 8, !tbaa !51
  %560 = load i64, i64* %552, align 8, !tbaa !80
  %561 = add i64 %560, 1
  store i64 %561, i64* %552, align 8, !tbaa !80
  %562 = getelementptr inbounds i8, i8* %559, i64 %560
  store i8 %558, i8* %562, align 1, !tbaa !4
  %563 = load i32, i32* %388, align 4, !tbaa !85
  %564 = sub nsw i32 16, %563
  %565 = lshr i32 %544, %564
  %566 = trunc i32 %565 to i16
  %567 = add nsw i32 %563, -12
  br label %573

568:                                              ; preds = %538
  %569 = shl nuw nsw i32 %542, %540
  %570 = trunc i32 %569 to i16
  %571 = or i16 %539, %570
  %572 = add nsw i32 %540, 4
  br label %573

573:                                              ; preds = %543, %568
  %574 = phi i16 [ %571, %568 ], [ %566, %543 ]
  %575 = phi i32 [ %572, %568 ], [ %567, %543 ]
  store i32 %575, i32* %388, align 4, !tbaa !85
  %576 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %577 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %578 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %579 = zext i32 %470 to i64
  br label %580

580:                                              ; preds = %614, %573
  %581 = phi i16 [ %574, %573 ], [ %615, %614 ]
  %582 = phi i32 [ %575, %573 ], [ %616, %614 ]
  %583 = phi i64 [ 0, %573 ], [ %617, %614 ]
  %584 = icmp sgt i32 %582, 13
  %585 = getelementptr inbounds [19 x i8], [19 x i8]* @bl_order, i64 0, i64 %583
  %586 = load i8, i8* %585, align 1, !tbaa !4
  %587 = zext i8 %586 to i64
  %588 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %587, i32 1, i32 0
  %589 = load i16, i16* %588, align 2, !tbaa !4
  %590 = zext i16 %589 to i32
  %591 = shl i32 %590, %582
  %592 = trunc i32 %591 to i16
  %593 = or i16 %581, %592
  store i16 %593, i16* %576, align 8, !tbaa !109
  br i1 %584, label %594, label %612

594:                                              ; preds = %580
  %595 = trunc i16 %593 to i8
  %596 = load i8*, i8** %577, align 8, !tbaa !51
  %597 = load i64, i64* %578, align 8, !tbaa !80
  %598 = add i64 %597, 1
  store i64 %598, i64* %578, align 8, !tbaa !80
  %599 = getelementptr inbounds i8, i8* %596, i64 %597
  store i8 %595, i8* %599, align 1, !tbaa !4
  %600 = load i16, i16* %576, align 8, !tbaa !109
  %601 = lshr i16 %600, 8
  %602 = trunc i16 %601 to i8
  %603 = load i8*, i8** %577, align 8, !tbaa !51
  %604 = load i64, i64* %578, align 8, !tbaa !80
  %605 = add i64 %604, 1
  store i64 %605, i64* %578, align 8, !tbaa !80
  %606 = getelementptr inbounds i8, i8* %603, i64 %604
  store i8 %602, i8* %606, align 1, !tbaa !4
  %607 = load i32, i32* %388, align 4, !tbaa !85
  %608 = sub nsw i32 16, %607
  %609 = lshr i32 %590, %608
  %610 = trunc i32 %609 to i16
  store i16 %610, i16* %576, align 8, !tbaa !109
  %611 = add nsw i32 %607, -13
  br label %614

612:                                              ; preds = %580
  %613 = add nsw i32 %582, 3
  br label %614

614:                                              ; preds = %612, %594
  %615 = phi i16 [ %593, %612 ], [ %610, %594 ]
  %616 = phi i32 [ %613, %612 ], [ %611, %594 ]
  store i32 %616, i32* %388, align 4, !tbaa !85
  %617 = add nuw nsw i64 %583, 1
  %618 = icmp eq i64 %617, %579
  br i1 %618, label %619, label %580, !llvm.loop !297

619:                                              ; preds = %614
  %620 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 0
  tail call fastcc void @send_tree(%struct.internal_state* noundef nonnull %0, %struct.ct_data_s* noundef nonnull %620, i32 noundef %467) #25
  %621 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0
  tail call fastcc void @send_tree(%struct.internal_state* noundef nonnull %0, %struct.ct_data_s* noundef nonnull %621, i32 noundef %469) #25
  tail call fastcc void @compress_block(%struct.internal_state* noundef nonnull %0, %struct.ct_data_s* noundef nonnull %620, %struct.ct_data_s* noundef nonnull %621)
  br label %622

622:                                              ; preds = %426, %619, %385
  br label %623

623:                                              ; preds = %623, %622
  %624 = phi i64 [ 0, %622 ], [ %628, %623 ]
  %625 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %624, i32 0, i32 0
  store i16 0, i16* %625, align 4, !tbaa !4
  %626 = or i64 %624, 1
  %627 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %626, i32 0, i32 0
  store i16 0, i16* %627, align 4, !tbaa !4
  %628 = add nuw nsw i64 %624, 2
  %629 = icmp eq i64 %628, 286
  br i1 %629, label %630, label %623, !llvm.loop !290

630:                                              ; preds = %623
  %631 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0, i32 0, i32 0
  store i16 0, i16* %631, align 4, !tbaa !4
  %632 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 1, i32 0, i32 0
  store i16 0, i16* %632, align 4, !tbaa !4
  %633 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 2, i32 0, i32 0
  store i16 0, i16* %633, align 4, !tbaa !4
  %634 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 3, i32 0, i32 0
  store i16 0, i16* %634, align 4, !tbaa !4
  %635 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 4, i32 0, i32 0
  store i16 0, i16* %635, align 4, !tbaa !4
  %636 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 5, i32 0, i32 0
  store i16 0, i16* %636, align 4, !tbaa !4
  %637 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 6, i32 0, i32 0
  store i16 0, i16* %637, align 4, !tbaa !4
  %638 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 7, i32 0, i32 0
  store i16 0, i16* %638, align 4, !tbaa !4
  %639 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 8, i32 0, i32 0
  store i16 0, i16* %639, align 4, !tbaa !4
  %640 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 9, i32 0, i32 0
  store i16 0, i16* %640, align 4, !tbaa !4
  %641 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 10, i32 0, i32 0
  store i16 0, i16* %641, align 4, !tbaa !4
  %642 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 11, i32 0, i32 0
  store i16 0, i16* %642, align 4, !tbaa !4
  %643 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 12, i32 0, i32 0
  store i16 0, i16* %643, align 4, !tbaa !4
  %644 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 13, i32 0, i32 0
  store i16 0, i16* %644, align 4, !tbaa !4
  %645 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 14, i32 0, i32 0
  store i16 0, i16* %645, align 4, !tbaa !4
  %646 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 15, i32 0, i32 0
  store i16 0, i16* %646, align 4, !tbaa !4
  %647 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 16, i32 0, i32 0
  store i16 0, i16* %647, align 4, !tbaa !4
  %648 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 17, i32 0, i32 0
  store i16 0, i16* %648, align 4, !tbaa !4
  %649 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 18, i32 0, i32 0
  store i16 0, i16* %649, align 4, !tbaa !4
  %650 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 19, i32 0, i32 0
  store i16 0, i16* %650, align 4, !tbaa !4
  %651 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 20, i32 0, i32 0
  store i16 0, i16* %651, align 4, !tbaa !4
  %652 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 21, i32 0, i32 0
  store i16 0, i16* %652, align 4, !tbaa !4
  %653 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 22, i32 0, i32 0
  store i16 0, i16* %653, align 4, !tbaa !4
  %654 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 23, i32 0, i32 0
  store i16 0, i16* %654, align 4, !tbaa !4
  %655 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 24, i32 0, i32 0
  store i16 0, i16* %655, align 4, !tbaa !4
  %656 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 25, i32 0, i32 0
  store i16 0, i16* %656, align 4, !tbaa !4
  %657 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 26, i32 0, i32 0
  store i16 0, i16* %657, align 4, !tbaa !4
  %658 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 27, i32 0, i32 0
  store i16 0, i16* %658, align 4, !tbaa !4
  %659 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 28, i32 0, i32 0
  store i16 0, i16* %659, align 4, !tbaa !4
  %660 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 29, i32 0, i32 0
  store i16 0, i16* %660, align 4, !tbaa !4
  %661 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0, i32 0, i32 0
  store i16 0, i16* %661, align 4, !tbaa !4
  %662 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 1, i32 0, i32 0
  store i16 0, i16* %662, align 4, !tbaa !4
  %663 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 2, i32 0, i32 0
  store i16 0, i16* %663, align 4, !tbaa !4
  %664 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 3, i32 0, i32 0
  store i16 0, i16* %664, align 4, !tbaa !4
  %665 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 4, i32 0, i32 0
  store i16 0, i16* %665, align 4, !tbaa !4
  %666 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 5, i32 0, i32 0
  store i16 0, i16* %666, align 4, !tbaa !4
  %667 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 6, i32 0, i32 0
  store i16 0, i16* %667, align 4, !tbaa !4
  %668 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 7, i32 0, i32 0
  store i16 0, i16* %668, align 4, !tbaa !4
  %669 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 8, i32 0, i32 0
  store i16 0, i16* %669, align 4, !tbaa !4
  %670 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 9, i32 0, i32 0
  store i16 0, i16* %670, align 4, !tbaa !4
  %671 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 10, i32 0, i32 0
  store i16 0, i16* %671, align 4, !tbaa !4
  %672 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 11, i32 0, i32 0
  store i16 0, i16* %672, align 4, !tbaa !4
  %673 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 12, i32 0, i32 0
  store i16 0, i16* %673, align 4, !tbaa !4
  %674 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 13, i32 0, i32 0
  store i16 0, i16* %674, align 4, !tbaa !4
  %675 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 14, i32 0, i32 0
  store i16 0, i16* %675, align 4, !tbaa !4
  %676 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 15, i32 0, i32 0
  store i16 0, i16* %676, align 4, !tbaa !4
  %677 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  store i16 0, i16* %677, align 4, !tbaa !4
  %678 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  store i16 0, i16* %678, align 4, !tbaa !4
  %679 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  store i16 0, i16* %679, align 4, !tbaa !4
  %680 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 256, i32 0, i32 0
  store i16 1, i16* %680, align 4, !tbaa !4
  %681 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %682 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  store i32 0, i32* %682, align 4, !tbaa !93
  %683 = bitcast i64* %681 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(20) %683, i8 0, i64 20, i1 false) #25
  %684 = icmp eq i32 %3, 0
  br i1 %684, label %720, label %685

685:                                              ; preds = %630
  %686 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %687 = load i32, i32* %686, align 4, !tbaa !85
  %688 = icmp sgt i32 %687, 8
  br i1 %688, label %689, label %706

689:                                              ; preds = %685
  %690 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %691 = load i16, i16* %690, align 8, !tbaa !109
  %692 = trunc i16 %691 to i8
  %693 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %694 = load i8*, i8** %693, align 8, !tbaa !51
  %695 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %696 = load i64, i64* %695, align 8, !tbaa !80
  %697 = add i64 %696, 1
  store i64 %697, i64* %695, align 8, !tbaa !80
  %698 = getelementptr inbounds i8, i8* %694, i64 %696
  store i8 %692, i8* %698, align 1, !tbaa !4
  %699 = load i16, i16* %690, align 8, !tbaa !109
  %700 = lshr i16 %699, 8
  %701 = trunc i16 %700 to i8
  %702 = load i8*, i8** %693, align 8, !tbaa !51
  %703 = load i64, i64* %695, align 8, !tbaa !80
  %704 = add i64 %703, 1
  store i64 %704, i64* %695, align 8, !tbaa !80
  %705 = getelementptr inbounds i8, i8* %702, i64 %703
  store i8 %701, i8* %705, align 1, !tbaa !4
  br label %718

706:                                              ; preds = %685
  %707 = icmp sgt i32 %687, 0
  br i1 %707, label %708, label %718

708:                                              ; preds = %706
  %709 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %710 = load i16, i16* %709, align 8, !tbaa !109
  %711 = trunc i16 %710 to i8
  %712 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %713 = load i8*, i8** %712, align 8, !tbaa !51
  %714 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %715 = load i64, i64* %714, align 8, !tbaa !80
  %716 = add i64 %715, 1
  store i64 %716, i64* %714, align 8, !tbaa !80
  %717 = getelementptr inbounds i8, i8* %713, i64 %715
  store i8 %711, i8* %717, align 1, !tbaa !4
  br label %718

718:                                              ; preds = %689, %706, %708
  %719 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  store i16 0, i16* %719, align 8, !tbaa !109
  store i32 0, i32* %686, align 4, !tbaa !85
  br label %720

720:                                              ; preds = %718, %630
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal fastcc void @build_tree(%struct.internal_state* noundef %0, %struct.tree_desc_s* nocapture noundef %1) unnamed_addr #10 {
  %3 = alloca [16 x i16], align 16
  %4 = getelementptr inbounds %struct.tree_desc_s, %struct.tree_desc_s* %1, i64 0, i32 0
  %5 = load %struct.ct_data_s*, %struct.ct_data_s** %4, align 8, !tbaa !298
  %6 = getelementptr inbounds %struct.tree_desc_s, %struct.tree_desc_s* %1, i64 0, i32 2
  %7 = load %struct.static_tree_desc_s*, %struct.static_tree_desc_s** %6, align 8, !tbaa !299
  %8 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %7, i64 0, i32 0
  %9 = load %struct.ct_data_s*, %struct.ct_data_s** %8, align 8, !tbaa !300
  %10 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !tbaa !302
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45
  store i32 0, i32* %12, align 4, !tbaa !303
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 46
  store i32 573, i32* %13, align 8, !tbaa !304
  %14 = icmp sgt i32 %11, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = zext i32 %11 to i64
  br label %26

17:                                               ; preds = %41
  %18 = load i32, i32* %12, align 4, !tbaa !303
  %19 = icmp slt i32 %18, 2
  br i1 %19, label %20, label %69

20:                                               ; preds = %2, %17
  %21 = phi i32 [ %42, %17 ], [ -1, %2 ]
  %22 = phi i32 [ %18, %17 ], [ 0, %2 ]
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %24 = icmp eq %struct.ct_data_s* %9, null
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  br label %45

26:                                               ; preds = %15, %41
  %27 = phi i64 [ 0, %15 ], [ %43, %41 ]
  %28 = phi i32 [ -1, %15 ], [ %42, %41 ]
  %29 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %27, i32 0, i32 0
  %30 = load i16, i16* %29, align 2, !tbaa !4
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = load i32, i32* %12, align 4, !tbaa !303
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %12, align 4, !tbaa !303
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %35
  %37 = trunc i64 %27 to i32
  store i32 %37, i32* %36, align 4, !tbaa !16
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %27
  store i8 0, i8* %38, align 1, !tbaa !4
  br label %41

39:                                               ; preds = %26
  %40 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %27, i32 1, i32 0
  store i16 0, i16* %40, align 2, !tbaa !4
  br label %41

41:                                               ; preds = %32, %39
  %42 = phi i32 [ %37, %32 ], [ %28, %39 ]
  %43 = add nuw nsw i64 %27, 1
  %44 = icmp eq i64 %43, %16
  br i1 %44, label %17, label %26, !llvm.loop !305

45:                                               ; preds = %20, %66
  %46 = phi i32 [ %22, %20 ], [ %67, %66 ]
  %47 = phi i32 [ %21, %20 ], [ %50, %66 ]
  %48 = icmp slt i32 %47, 2
  %49 = add nsw i32 %47, 1
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = select i1 %48, i32 %49, i32 0
  %52 = add nsw i32 %46, 1
  store i32 %52, i32* %12, align 4, !tbaa !303
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %53
  store i32 %51, i32* %54, align 4, !tbaa !16
  %55 = sext i32 %51 to i64
  %56 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %55, i32 0, i32 0
  store i16 1, i16* %56, align 2, !tbaa !4
  %57 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %55
  store i8 0, i8* %57, align 1, !tbaa !4
  %58 = load i64, i64* %23, align 8, !tbaa !295
  %59 = add i64 %58, -1
  store i64 %59, i64* %23, align 8, !tbaa !295
  br i1 %24, label %66, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %9, i64 %55, i32 1, i32 0
  %62 = load i16, i16* %61, align 2, !tbaa !4
  %63 = zext i16 %62 to i64
  %64 = load i64, i64* %25, align 8, !tbaa !296
  %65 = sub i64 %64, %63
  store i64 %65, i64* %25, align 8, !tbaa !296
  br label %66

66:                                               ; preds = %60, %45
  %67 = load i32, i32* %12, align 4, !tbaa !303
  %68 = icmp slt i32 %67, 2
  br i1 %68, label %45, label %69, !llvm.loop !306

69:                                               ; preds = %66, %17
  %70 = phi i32 [ %42, %17 ], [ %50, %66 ]
  %71 = phi i32 [ %18, %17 ], [ %67, %66 ]
  %72 = getelementptr inbounds %struct.tree_desc_s, %struct.tree_desc_s* %1, i64 0, i32 1
  store i32 %70, i32* %72, align 8, !tbaa !307
  %73 = lshr i32 %71, 1
  %74 = zext i32 %73 to i64
  br label %79

75:                                               ; preds = %148
  %76 = load i32, i32* %12, align 4, !tbaa !303
  %77 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 1
  %78 = sext i32 %11 to i64
  br label %155

79:                                               ; preds = %152, %69
  %80 = phi i32 [ %71, %69 ], [ %154, %152 ]
  %81 = phi i64 [ %74, %69 ], [ %153, %152 ]
  %82 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %81
  %83 = load i32, i32* %82, align 4, !tbaa !16
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %84
  %86 = trunc i64 %81 to i32
  %87 = shl nuw i32 %86, 1
  %88 = icmp sgt i32 %87, %80
  br i1 %88, label %148, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %84, i32 0, i32 0
  br label %91

91:                                               ; preds = %139, %89
  %92 = phi i32 [ %80, %89 ], [ %143, %139 ]
  %93 = phi i32 [ %87, %89 ], [ %142, %139 ]
  %94 = phi i32 [ %86, %89 ], [ %124, %139 ]
  %95 = icmp slt i32 %93, %92
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = sext i32 %93 to i64
  br label %122

98:                                               ; preds = %91
  %99 = or i32 %93, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %100
  %102 = load i32, i32* %101, align 4, !tbaa !16
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %103, i32 0, i32 0
  %105 = load i16, i16* %104, align 2, !tbaa !4
  %106 = sext i32 %93 to i64
  %107 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %106
  %108 = load i32, i32* %107, align 4, !tbaa !16
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %109, i32 0, i32 0
  %111 = load i16, i16* %110, align 2, !tbaa !4
  %112 = icmp ult i16 %105, %111
  br i1 %112, label %121, label %113

113:                                              ; preds = %98
  %114 = icmp eq i16 %105, %111
  br i1 %114, label %115, label %122

115:                                              ; preds = %113
  %116 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %103
  %117 = load i8, i8* %116, align 1, !tbaa !4
  %118 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %109
  %119 = load i8, i8* %118, align 1, !tbaa !4
  %120 = icmp ugt i8 %117, %119
  br i1 %120, label %122, label %121

121:                                              ; preds = %115, %98
  br label %122

122:                                              ; preds = %121, %115, %113, %96
  %123 = phi i64 [ %97, %96 ], [ %100, %121 ], [ %106, %115 ], [ %106, %113 ]
  %124 = phi i32 [ %93, %96 ], [ %99, %121 ], [ %93, %115 ], [ %93, %113 ]
  %125 = load i16, i16* %90, align 2, !tbaa !4
  %126 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %123
  %127 = load i32, i32* %126, align 4, !tbaa !16
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %128, i32 0, i32 0
  %130 = load i16, i16* %129, align 2, !tbaa !4
  %131 = icmp ult i16 %125, %130
  br i1 %131, label %145, label %132

132:                                              ; preds = %122
  %133 = icmp eq i16 %125, %130
  br i1 %133, label %134, label %139

134:                                              ; preds = %132
  %135 = load i8, i8* %85, align 1, !tbaa !4
  %136 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %128
  %137 = load i8, i8* %136, align 1, !tbaa !4
  %138 = icmp ugt i8 %135, %137
  br i1 %138, label %139, label %145

139:                                              ; preds = %134, %132
  %140 = sext i32 %94 to i64
  %141 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %140
  store i32 %127, i32* %141, align 4, !tbaa !16
  %142 = shl i32 %124, 1
  %143 = load i32, i32* %12, align 4, !tbaa !303
  %144 = icmp sgt i32 %142, %143
  br i1 %144, label %145, label %91, !llvm.loop !308

145:                                              ; preds = %139, %134, %122
  %146 = phi i32 [ %124, %139 ], [ %94, %134 ], [ %94, %122 ]
  %147 = sext i32 %146 to i64
  br label %148

148:                                              ; preds = %79, %145
  %149 = phi i64 [ %147, %145 ], [ %81, %79 ]
  %150 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %149
  store i32 %83, i32* %150, align 4, !tbaa !16
  %151 = icmp sgt i64 %81, 1
  br i1 %151, label %152, label %75, !llvm.loop !309

152:                                              ; preds = %148
  %153 = add nsw i64 %81, -1
  %154 = load i32, i32* %12, align 4, !tbaa !303
  br label %79

155:                                              ; preds = %75, %317
  %156 = phi i32 [ %76, %75 ], [ %320, %317 ]
  %157 = phi i64 [ %78, %75 ], [ %257, %317 ]
  %158 = load i32, i32* %77, align 4, !tbaa !16
  %159 = add nsw i32 %156, -1
  store i32 %159, i32* %12, align 4, !tbaa !303
  %160 = sext i32 %156 to i64
  %161 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %160
  %162 = load i32, i32* %161, align 4, !tbaa !16
  store i32 %162, i32* %77, align 4, !tbaa !16
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %163
  %165 = icmp slt i32 %156, 3
  br i1 %165, label %225, label %166

166:                                              ; preds = %155
  %167 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %163, i32 0, i32 0
  br label %168

168:                                              ; preds = %216, %166
  %169 = phi i32 [ %159, %166 ], [ %220, %216 ]
  %170 = phi i32 [ 2, %166 ], [ %219, %216 ]
  %171 = phi i32 [ 1, %166 ], [ %201, %216 ]
  %172 = icmp slt i32 %170, %169
  br i1 %172, label %175, label %173

173:                                              ; preds = %168
  %174 = sext i32 %170 to i64
  br label %199

175:                                              ; preds = %168
  %176 = or i32 %170, 1
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %177
  %179 = load i32, i32* %178, align 4, !tbaa !16
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %180, i32 0, i32 0
  %182 = load i16, i16* %181, align 2, !tbaa !4
  %183 = sext i32 %170 to i64
  %184 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %183
  %185 = load i32, i32* %184, align 4, !tbaa !16
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %186, i32 0, i32 0
  %188 = load i16, i16* %187, align 2, !tbaa !4
  %189 = icmp ult i16 %182, %188
  br i1 %189, label %198, label %190

190:                                              ; preds = %175
  %191 = icmp eq i16 %182, %188
  br i1 %191, label %192, label %199

192:                                              ; preds = %190
  %193 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %180
  %194 = load i8, i8* %193, align 1, !tbaa !4
  %195 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %186
  %196 = load i8, i8* %195, align 1, !tbaa !4
  %197 = icmp ugt i8 %194, %196
  br i1 %197, label %199, label %198

198:                                              ; preds = %192, %175
  br label %199

199:                                              ; preds = %198, %192, %190, %173
  %200 = phi i64 [ %174, %173 ], [ %177, %198 ], [ %183, %192 ], [ %183, %190 ]
  %201 = phi i32 [ %170, %173 ], [ %176, %198 ], [ %170, %192 ], [ %170, %190 ]
  %202 = load i16, i16* %167, align 2, !tbaa !4
  %203 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %200
  %204 = load i32, i32* %203, align 4, !tbaa !16
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %205, i32 0, i32 0
  %207 = load i16, i16* %206, align 2, !tbaa !4
  %208 = icmp ult i16 %202, %207
  br i1 %208, label %222, label %209

209:                                              ; preds = %199
  %210 = icmp eq i16 %202, %207
  br i1 %210, label %211, label %216

211:                                              ; preds = %209
  %212 = load i8, i8* %164, align 1, !tbaa !4
  %213 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %205
  %214 = load i8, i8* %213, align 1, !tbaa !4
  %215 = icmp ugt i8 %212, %214
  br i1 %215, label %216, label %222

216:                                              ; preds = %211, %209
  %217 = sext i32 %171 to i64
  %218 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %217
  store i32 %204, i32* %218, align 4, !tbaa !16
  %219 = shl i32 %201, 1
  %220 = load i32, i32* %12, align 4, !tbaa !303
  %221 = icmp sgt i32 %219, %220
  br i1 %221, label %222, label %168, !llvm.loop !308

222:                                              ; preds = %216, %211, %199
  %223 = phi i32 [ %201, %216 ], [ %171, %211 ], [ %171, %199 ]
  %224 = sext i32 %223 to i64
  br label %225

225:                                              ; preds = %155, %222
  %226 = phi i64 [ %224, %222 ], [ 1, %155 ]
  %227 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %226
  store i32 %162, i32* %227, align 4, !tbaa !16
  %228 = load i32, i32* %77, align 4, !tbaa !16
  %229 = load i32, i32* %13, align 8, !tbaa !304
  %230 = add nsw i32 %229, -1
  store i32 %230, i32* %13, align 8, !tbaa !304
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %231
  store i32 %158, i32* %232, align 4, !tbaa !16
  %233 = load i32, i32* %13, align 8, !tbaa !304
  %234 = add nsw i32 %233, -1
  store i32 %234, i32* %13, align 8, !tbaa !304
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %235
  store i32 %228, i32* %236, align 4, !tbaa !16
  %237 = sext i32 %158 to i64
  %238 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %237, i32 0, i32 0
  %239 = load i16, i16* %238, align 2, !tbaa !4
  %240 = sext i32 %228 to i64
  %241 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %240, i32 0, i32 0
  %242 = load i16, i16* %241, align 2, !tbaa !4
  %243 = add i16 %242, %239
  %244 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %157, i32 0, i32 0
  store i16 %243, i16* %244, align 2, !tbaa !4
  %245 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %237
  %246 = load i8, i8* %245, align 1, !tbaa !4
  %247 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %240
  %248 = load i8, i8* %247, align 1, !tbaa !4
  %249 = icmp ult i8 %246, %248
  %250 = select i1 %249, i8 %248, i8 %246
  %251 = add i8 %250, 1
  %252 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %157
  store i8 %251, i8* %252, align 1, !tbaa !4
  %253 = trunc i64 %157 to i32
  %254 = trunc i64 %157 to i16
  %255 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %240, i32 1, i32 0
  store i16 %254, i16* %255, align 2, !tbaa !4
  %256 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %237, i32 1, i32 0
  store i16 %254, i16* %256, align 2, !tbaa !4
  %257 = add i64 %157, 1
  store i32 %253, i32* %77, align 4, !tbaa !16
  %258 = load i32, i32* %12, align 4, !tbaa !303
  %259 = icmp slt i32 %258, 2
  br i1 %259, label %317, label %260

260:                                              ; preds = %225, %308
  %261 = phi i32 [ %312, %308 ], [ %258, %225 ]
  %262 = phi i32 [ %311, %308 ], [ 2, %225 ]
  %263 = phi i32 [ %293, %308 ], [ 1, %225 ]
  %264 = icmp slt i32 %262, %261
  br i1 %264, label %267, label %265

265:                                              ; preds = %260
  %266 = sext i32 %262 to i64
  br label %291

267:                                              ; preds = %260
  %268 = or i32 %262, 1
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %269
  %271 = load i32, i32* %270, align 4, !tbaa !16
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %272, i32 0, i32 0
  %274 = load i16, i16* %273, align 2, !tbaa !4
  %275 = sext i32 %262 to i64
  %276 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %275
  %277 = load i32, i32* %276, align 4, !tbaa !16
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %278, i32 0, i32 0
  %280 = load i16, i16* %279, align 2, !tbaa !4
  %281 = icmp ult i16 %274, %280
  br i1 %281, label %290, label %282

282:                                              ; preds = %267
  %283 = icmp eq i16 %274, %280
  br i1 %283, label %284, label %291

284:                                              ; preds = %282
  %285 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %272
  %286 = load i8, i8* %285, align 1, !tbaa !4
  %287 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %278
  %288 = load i8, i8* %287, align 1, !tbaa !4
  %289 = icmp ugt i8 %286, %288
  br i1 %289, label %291, label %290

290:                                              ; preds = %284, %267
  br label %291

291:                                              ; preds = %290, %284, %282, %265
  %292 = phi i64 [ %266, %265 ], [ %269, %290 ], [ %275, %284 ], [ %275, %282 ]
  %293 = phi i32 [ %262, %265 ], [ %268, %290 ], [ %262, %284 ], [ %262, %282 ]
  %294 = load i16, i16* %244, align 2, !tbaa !4
  %295 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %292
  %296 = load i32, i32* %295, align 4, !tbaa !16
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %297, i32 0, i32 0
  %299 = load i16, i16* %298, align 2, !tbaa !4
  %300 = icmp ult i16 %294, %299
  br i1 %300, label %314, label %301

301:                                              ; preds = %291
  %302 = icmp eq i16 %294, %299
  br i1 %302, label %303, label %308

303:                                              ; preds = %301
  %304 = load i8, i8* %252, align 1, !tbaa !4
  %305 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47, i64 %297
  %306 = load i8, i8* %305, align 1, !tbaa !4
  %307 = icmp ugt i8 %304, %306
  br i1 %307, label %308, label %314

308:                                              ; preds = %303, %301
  %309 = sext i32 %263 to i64
  %310 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %309
  store i32 %296, i32* %310, align 4, !tbaa !16
  %311 = shl i32 %293, 1
  %312 = load i32, i32* %12, align 4, !tbaa !303
  %313 = icmp sgt i32 %311, %312
  br i1 %313, label %314, label %260, !llvm.loop !308

314:                                              ; preds = %308, %303, %291
  %315 = phi i32 [ %293, %308 ], [ %263, %303 ], [ %263, %291 ]
  %316 = sext i32 %315 to i64
  br label %317

317:                                              ; preds = %225, %314
  %318 = phi i64 [ %316, %314 ], [ 1, %225 ]
  %319 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %318
  store i32 %253, i32* %319, align 4, !tbaa !16
  %320 = load i32, i32* %12, align 4, !tbaa !303
  %321 = icmp sgt i32 %320, 1
  br i1 %321, label %155, label %322, !llvm.loop !310

322:                                              ; preds = %317
  %323 = load i32, i32* %77, align 4, !tbaa !16
  %324 = load i32, i32* %13, align 8, !tbaa !304
  %325 = add nsw i32 %324, -1
  store i32 %325, i32* %13, align 8, !tbaa !304
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %326
  store i32 %323, i32* %327, align 4, !tbaa !16
  %328 = load %struct.ct_data_s*, %struct.ct_data_s** %4, align 8, !tbaa !298
  %329 = load i32, i32* %72, align 8, !tbaa !307
  %330 = load %struct.static_tree_desc_s*, %struct.static_tree_desc_s** %6, align 8, !tbaa !299
  %331 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %330, i64 0, i32 0
  %332 = load %struct.ct_data_s*, %struct.ct_data_s** %331, align 8, !tbaa !300
  %333 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %330, i64 0, i32 1
  %334 = load i32*, i32** %333, align 8, !tbaa !311
  %335 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %330, i64 0, i32 2
  %336 = load i32, i32* %335, align 8, !tbaa !312
  %337 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %330, i64 0, i32 4
  %338 = load i32, i32* %337, align 8, !tbaa !313
  %339 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 0
  %340 = bitcast i16* %339 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(32) %340, i8 0, i64 32, i1 false) #25, !tbaa !60
  %341 = load i32, i32* %13, align 8, !tbaa !304
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %342
  %344 = load i32, i32* %343, align 4, !tbaa !16
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %328, i64 %345, i32 1, i32 0
  store i16 0, i16* %346, align 2, !tbaa !4
  %347 = load i32, i32* %13, align 8, !tbaa !304
  %348 = icmp slt i32 %347, 572
  br i1 %348, label %349, label %484

349:                                              ; preds = %322
  %350 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %351 = icmp eq %struct.ct_data_s* %332, null
  %352 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %353 = sext i32 %347 to i64
  %354 = add nsw i64 %353, 1
  br label %355

355:                                              ; preds = %405, %349
  %356 = phi i64 [ %354, %349 ], [ %406, %405 ]
  %357 = phi i32 [ 0, %349 ], [ %372, %405 ]
  %358 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %356
  %359 = load i32, i32* %358, align 4, !tbaa !16
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %328, i64 %360, i32 1, i32 0
  %362 = load i16, i16* %361, align 2, !tbaa !4
  %363 = zext i16 %362 to i64
  %364 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %328, i64 %363, i32 1, i32 0
  %365 = load i16, i16* %364, align 2, !tbaa !4
  %366 = zext i16 %365 to i32
  %367 = add nuw nsw i32 %366, 1
  %368 = icmp sgt i32 %338, %366
  %369 = select i1 %368, i32 %367, i32 %338
  %370 = xor i1 %368, true
  %371 = zext i1 %370 to i32
  %372 = add nuw nsw i32 %357, %371
  %373 = trunc i32 %369 to i16
  store i16 %373, i16* %361, align 2, !tbaa !4
  %374 = icmp sgt i32 %359, %329
  br i1 %374, label %405, label %375

375:                                              ; preds = %355
  %376 = sext i32 %369 to i64
  %377 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 %376
  %378 = load i16, i16* %377, align 2, !tbaa !60
  %379 = add i16 %378, 1
  store i16 %379, i16* %377, align 2, !tbaa !60
  %380 = icmp slt i32 %359, %336
  br i1 %380, label %386, label %381

381:                                              ; preds = %375
  %382 = sub nsw i32 %359, %336
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i32, i32* %334, i64 %383
  %385 = load i32, i32* %384, align 4, !tbaa !16
  br label %386

386:                                              ; preds = %381, %375
  %387 = phi i32 [ %385, %381 ], [ 0, %375 ]
  %388 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %328, i64 %360, i32 0, i32 0
  %389 = load i16, i16* %388, align 2, !tbaa !4
  %390 = zext i16 %389 to i64
  %391 = add nsw i32 %387, %369
  %392 = zext i32 %391 to i64
  %393 = mul nuw nsw i64 %390, %392
  %394 = load i64, i64* %350, align 8, !tbaa !295
  %395 = add i64 %393, %394
  store i64 %395, i64* %350, align 8, !tbaa !295
  br i1 %351, label %405, label %396

396:                                              ; preds = %386
  %397 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %332, i64 %360, i32 1, i32 0
  %398 = load i16, i16* %397, align 2, !tbaa !4
  %399 = zext i16 %398 to i32
  %400 = add nsw i32 %387, %399
  %401 = zext i32 %400 to i64
  %402 = mul nuw nsw i64 %401, %390
  %403 = load i64, i64* %352, align 8, !tbaa !296
  %404 = add i64 %402, %403
  store i64 %404, i64* %352, align 8, !tbaa !296
  br label %405

405:                                              ; preds = %396, %386, %355
  %406 = add nsw i64 %356, 1
  %407 = trunc i64 %406 to i32
  %408 = icmp eq i32 %407, 573
  br i1 %408, label %409, label %355, !llvm.loop !314

409:                                              ; preds = %405
  %410 = icmp eq i32 %372, 0
  br i1 %410, label %484, label %411

411:                                              ; preds = %409
  %412 = sext i32 %338 to i64
  %413 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 %412
  br label %414

414:                                              ; preds = %422, %411
  %415 = phi i32 [ %432, %422 ], [ %372, %411 ]
  br label %416

416:                                              ; preds = %416, %414
  %417 = phi i64 [ %418, %416 ], [ %412, %414 ]
  %418 = add i64 %417, -1
  %419 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 %418
  %420 = load i16, i16* %419, align 2, !tbaa !60
  %421 = icmp eq i16 %420, 0
  br i1 %421, label %416, label %422, !llvm.loop !315

422:                                              ; preds = %416
  %423 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 %418
  %424 = add i16 %420, -1
  store i16 %424, i16* %423, align 2, !tbaa !60
  %425 = shl i64 %417, 32
  %426 = ashr exact i64 %425, 32
  %427 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 %426
  %428 = load i16, i16* %427, align 2, !tbaa !60
  %429 = add i16 %428, 2
  store i16 %429, i16* %427, align 2, !tbaa !60
  %430 = load i16, i16* %413, align 2, !tbaa !60
  %431 = add i16 %430, -1
  store i16 %431, i16* %413, align 2, !tbaa !60
  %432 = add nsw i32 %415, -2
  %433 = icmp sgt i32 %415, 2
  br i1 %433, label %414, label %434, !llvm.loop !316

434:                                              ; preds = %422
  %435 = icmp eq i32 %338, 0
  br i1 %435, label %484, label %436

436:                                              ; preds = %434, %452
  %437 = phi i16 [ %454, %452 ], [ %431, %434 ]
  %438 = phi i64 [ %449, %452 ], [ %412, %434 ]
  %439 = phi i32 [ %448, %452 ], [ 573, %434 ]
  %440 = icmp eq i16 %437, 0
  br i1 %440, label %447, label %441

441:                                              ; preds = %436
  %442 = zext i16 %437 to i32
  %443 = trunc i64 %438 to i32
  %444 = trunc i64 %438 to i16
  br label %455

445:                                              ; preds = %481
  %446 = trunc i64 %461 to i32
  br label %447

447:                                              ; preds = %445, %436
  %448 = phi i32 [ %439, %436 ], [ %446, %445 ]
  %449 = add nsw i64 %438, -1
  %450 = trunc i64 %449 to i32
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %484, label %452, !llvm.loop !317

452:                                              ; preds = %447
  %453 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 %449
  %454 = load i16, i16* %453, align 2, !tbaa !60
  br label %436

455:                                              ; preds = %481, %441
  %456 = phi i32 [ %439, %441 ], [ %466, %481 ]
  %457 = phi i32 [ %442, %441 ], [ %482, %481 ]
  %458 = sext i32 %456 to i64
  br label %459

459:                                              ; preds = %459, %455
  %460 = phi i64 [ %458, %455 ], [ %461, %459 ]
  %461 = add nsw i64 %460, -1
  %462 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %461
  %463 = load i32, i32* %462, align 4, !tbaa !16
  %464 = icmp sgt i32 %463, %329
  br i1 %464, label %459, label %465, !llvm.loop !318

465:                                              ; preds = %459
  %466 = trunc i64 %461 to i32
  %467 = sext i32 %463 to i64
  %468 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %328, i64 %467, i32 1, i32 0
  %469 = load i16, i16* %468, align 2, !tbaa !4
  %470 = zext i16 %469 to i32
  %471 = icmp eq i32 %443, %470
  br i1 %471, label %481, label %472

472:                                              ; preds = %465
  %473 = zext i16 %469 to i64
  %474 = sub nsw i64 %438, %473
  %475 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %328, i64 %467, i32 0, i32 0
  %476 = load i16, i16* %475, align 2, !tbaa !4
  %477 = zext i16 %476 to i64
  %478 = mul nsw i64 %474, %477
  %479 = load i64, i64* %350, align 8, !tbaa !295
  %480 = add i64 %478, %479
  store i64 %480, i64* %350, align 8, !tbaa !295
  store i16 %444, i16* %468, align 2, !tbaa !4
  br label %481

481:                                              ; preds = %472, %465
  %482 = add nsw i32 %457, -1
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %445, label %455, !llvm.loop !318

484:                                              ; preds = %447, %322, %409, %434
  %485 = bitcast [16 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %485) #25
  %486 = load i16, i16* %339, align 2, !tbaa !60
  %487 = zext i16 %486 to i32
  %488 = shl nuw nsw i32 %487, 1
  %489 = trunc i32 %488 to i16
  %490 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 1
  store i16 %489, i16* %490, align 2, !tbaa !60
  %491 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 1
  %492 = load i16, i16* %491, align 2, !tbaa !60
  %493 = zext i16 %492 to i32
  %494 = add nuw nsw i32 %488, %493
  %495 = shl nuw nsw i32 %494, 1
  %496 = trunc i32 %495 to i16
  %497 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 2
  store i16 %496, i16* %497, align 4, !tbaa !60
  %498 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 2
  %499 = load i16, i16* %498, align 2, !tbaa !60
  %500 = zext i16 %499 to i32
  %501 = add nuw nsw i32 %495, %500
  %502 = shl nuw nsw i32 %501, 1
  %503 = trunc i32 %502 to i16
  %504 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 3
  store i16 %503, i16* %504, align 2, !tbaa !60
  %505 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 3
  %506 = load i16, i16* %505, align 2, !tbaa !60
  %507 = zext i16 %506 to i32
  %508 = add nuw nsw i32 %502, %507
  %509 = shl nuw nsw i32 %508, 1
  %510 = trunc i32 %509 to i16
  %511 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 4
  store i16 %510, i16* %511, align 8, !tbaa !60
  %512 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 4
  %513 = load i16, i16* %512, align 2, !tbaa !60
  %514 = zext i16 %513 to i32
  %515 = add nuw nsw i32 %509, %514
  %516 = shl nuw nsw i32 %515, 1
  %517 = trunc i32 %516 to i16
  %518 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 5
  store i16 %517, i16* %518, align 2, !tbaa !60
  %519 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 5
  %520 = load i16, i16* %519, align 2, !tbaa !60
  %521 = zext i16 %520 to i32
  %522 = add nuw nsw i32 %516, %521
  %523 = shl nuw nsw i32 %522, 1
  %524 = trunc i32 %523 to i16
  %525 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 6
  store i16 %524, i16* %525, align 4, !tbaa !60
  %526 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 6
  %527 = load i16, i16* %526, align 2, !tbaa !60
  %528 = zext i16 %527 to i32
  %529 = add nuw nsw i32 %523, %528
  %530 = shl nuw nsw i32 %529, 1
  %531 = trunc i32 %530 to i16
  %532 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 7
  store i16 %531, i16* %532, align 2, !tbaa !60
  %533 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 7
  %534 = load i16, i16* %533, align 2, !tbaa !60
  %535 = zext i16 %534 to i32
  %536 = add nuw nsw i32 %530, %535
  %537 = shl nuw nsw i32 %536, 1
  %538 = trunc i32 %537 to i16
  %539 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 8
  store i16 %538, i16* %539, align 16, !tbaa !60
  %540 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 8
  %541 = load i16, i16* %540, align 2, !tbaa !60
  %542 = zext i16 %541 to i32
  %543 = add nuw nsw i32 %537, %542
  %544 = shl nuw nsw i32 %543, 1
  %545 = trunc i32 %544 to i16
  %546 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 9
  store i16 %545, i16* %546, align 2, !tbaa !60
  %547 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 9
  %548 = load i16, i16* %547, align 2, !tbaa !60
  %549 = zext i16 %548 to i32
  %550 = add nuw nsw i32 %544, %549
  %551 = shl nuw nsw i32 %550, 1
  %552 = trunc i32 %551 to i16
  %553 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 10
  store i16 %552, i16* %553, align 4, !tbaa !60
  %554 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 10
  %555 = load i16, i16* %554, align 2, !tbaa !60
  %556 = zext i16 %555 to i32
  %557 = add nuw nsw i32 %551, %556
  %558 = shl nuw nsw i32 %557, 1
  %559 = trunc i32 %558 to i16
  %560 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 11
  store i16 %559, i16* %560, align 2, !tbaa !60
  %561 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 11
  %562 = load i16, i16* %561, align 2, !tbaa !60
  %563 = zext i16 %562 to i32
  %564 = add nuw nsw i32 %558, %563
  %565 = shl nuw nsw i32 %564, 1
  %566 = trunc i32 %565 to i16
  %567 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 12
  store i16 %566, i16* %567, align 8, !tbaa !60
  %568 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 12
  %569 = load i16, i16* %568, align 2, !tbaa !60
  %570 = trunc i32 %565 to i16
  %571 = add i16 %569, %570
  %572 = shl i16 %571, 1
  %573 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 13
  store i16 %572, i16* %573, align 2, !tbaa !60
  %574 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 13
  %575 = load i16, i16* %574, align 2, !tbaa !60
  %576 = add i16 %575, %572
  %577 = shl i16 %576, 1
  %578 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 14
  store i16 %577, i16* %578, align 4, !tbaa !60
  %579 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i64 14
  %580 = load i16, i16* %579, align 2, !tbaa !60
  %581 = add i16 %577, %580
  %582 = shl i16 %581, 1
  %583 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 15
  store i16 %582, i16* %583, align 2, !tbaa !60
  %584 = icmp slt i32 %70, 0
  br i1 %584, label %647, label %585

585:                                              ; preds = %484
  %586 = add nuw i32 %70, 1
  %587 = zext i32 %586 to i64
  br label %588

588:                                              ; preds = %644, %585
  %589 = phi i64 [ 0, %585 ], [ %645, %644 ]
  %590 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %589, i32 1, i32 0
  %591 = load i16, i16* %590, align 2, !tbaa !4
  %592 = icmp eq i16 %591, 0
  br i1 %592, label %644, label %593

593:                                              ; preds = %588
  %594 = zext i16 %591 to i32
  %595 = zext i16 %591 to i64
  %596 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 %595
  %597 = load i16, i16* %596, align 2, !tbaa !60
  %598 = add i16 %597, 1
  store i16 %598, i16* %596, align 2, !tbaa !60
  %599 = zext i16 %597 to i32
  %600 = add nsw i32 %594, -1
  %601 = and i32 %594, 3
  %602 = icmp ult i32 %600, 3
  br i1 %602, label %625, label %603

603:                                              ; preds = %593
  %604 = and i32 %594, 65532
  br label %605

605:                                              ; preds = %605, %603
  %606 = phi i32 [ %599, %603 ], [ %621, %605 ]
  %607 = phi i32 [ 0, %603 ], [ %622, %605 ]
  %608 = phi i32 [ 0, %603 ], [ %623, %605 ]
  %609 = and i32 %606, 1
  %610 = or i32 %607, %609
  %611 = shl i32 %610, 2
  %612 = and i32 %606, 2
  %613 = or i32 %611, %612
  %614 = lshr i32 %606, 2
  %615 = and i32 %614, 1
  %616 = or i32 %613, %615
  %617 = lshr i32 %606, 3
  %618 = shl i32 %616, 1
  %619 = and i32 %617, 1
  %620 = or i32 %618, %619
  %621 = lshr i32 %606, 4
  %622 = shl i32 %620, 1
  %623 = add i32 %608, 4
  %624 = icmp eq i32 %623, %604
  br i1 %624, label %625, label %605, !llvm.loop !319

625:                                              ; preds = %605, %593
  %626 = phi i32 [ undef, %593 ], [ %620, %605 ]
  %627 = phi i32 [ %599, %593 ], [ %621, %605 ]
  %628 = phi i32 [ 0, %593 ], [ %622, %605 ]
  %629 = icmp eq i32 %601, 0
  br i1 %629, label %640, label %630

630:                                              ; preds = %625, %630
  %631 = phi i32 [ %636, %630 ], [ %627, %625 ]
  %632 = phi i32 [ %637, %630 ], [ %628, %625 ]
  %633 = phi i32 [ %638, %630 ], [ 0, %625 ]
  %634 = and i32 %631, 1
  %635 = or i32 %632, %634
  %636 = lshr i32 %631, 1
  %637 = shl i32 %635, 1
  %638 = add i32 %633, 1
  %639 = icmp eq i32 %638, %601
  br i1 %639, label %640, label %630, !llvm.loop !320

640:                                              ; preds = %630, %625
  %641 = phi i32 [ %626, %625 ], [ %635, %630 ]
  %642 = trunc i32 %641 to i16
  %643 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %589, i32 0, i32 0
  store i16 %642, i16* %643, align 2, !tbaa !4
  br label %644

644:                                              ; preds = %640, %588
  %645 = add nuw nsw i64 %589, 1
  %646 = icmp eq i64 %645, %587
  br i1 %646, label %647, label %588, !llvm.loop !321

647:                                              ; preds = %644, %484
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %485) #25
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal fastcc void @compress_block(%struct.internal_state* noundef %0, %struct.ct_data_s* nocapture noundef readonly %1, %struct.ct_data_s* nocapture noundef readonly %2) unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  %5 = load i32, i32* %4, align 4, !tbaa !93
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %9 = load i32, i32* %8, align 4, !tbaa !85
  br label %246

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  br label %16

16:                                               ; preds = %10, %242
  %17 = phi i32 [ %31, %242 ], [ 0, %10 ]
  %18 = load i8*, i8** %11, align 8, !tbaa !54
  %19 = add nuw i32 %17, 1
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = load i8, i8* %21, align 1, !tbaa !4
  %23 = zext i8 %22 to i32
  %24 = add i32 %17, 2
  %25 = zext i32 %19 to i64
  %26 = getelementptr inbounds i8, i8* %18, i64 %25
  %27 = load i8, i8* %26, align 1, !tbaa !4
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 8
  %30 = or i32 %29, %23
  %31 = add i32 %17, 3
  %32 = zext i32 %24 to i64
  %33 = getelementptr inbounds i8, i8* %18, i64 %32
  %34 = load i8, i8* %33, align 1, !tbaa !4
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %30, 0
  %37 = zext i8 %34 to i64
  br i1 %36, label %38, label %73

38:                                               ; preds = %16
  %39 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %37, i32 1, i32 0
  %40 = load i16, i16* %39, align 2, !tbaa !4
  %41 = zext i16 %40 to i32
  %42 = load i32, i32* %12, align 4, !tbaa !85
  %43 = sub nsw i32 16, %41
  %44 = icmp sgt i32 %42, %43
  %45 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %37, i32 0, i32 0
  %46 = load i16, i16* %45, align 2, !tbaa !4
  %47 = zext i16 %46 to i32
  %48 = shl i32 %47, %42
  %49 = load i16, i16* %13, align 8, !tbaa !109
  %50 = trunc i32 %48 to i16
  %51 = or i16 %49, %50
  store i16 %51, i16* %13, align 8, !tbaa !109
  br i1 %44, label %52, label %71

52:                                               ; preds = %38
  %53 = trunc i16 %51 to i8
  %54 = load i8*, i8** %14, align 8, !tbaa !51
  %55 = load i64, i64* %15, align 8, !tbaa !80
  %56 = add i64 %55, 1
  store i64 %56, i64* %15, align 8, !tbaa !80
  %57 = getelementptr inbounds i8, i8* %54, i64 %55
  store i8 %53, i8* %57, align 1, !tbaa !4
  %58 = load i16, i16* %13, align 8, !tbaa !109
  %59 = lshr i16 %58, 8
  %60 = trunc i16 %59 to i8
  %61 = load i8*, i8** %14, align 8, !tbaa !51
  %62 = load i64, i64* %15, align 8, !tbaa !80
  %63 = add i64 %62, 1
  store i64 %63, i64* %15, align 8, !tbaa !80
  %64 = getelementptr inbounds i8, i8* %61, i64 %62
  store i8 %60, i8* %64, align 1, !tbaa !4
  %65 = load i32, i32* %12, align 4, !tbaa !85
  %66 = sub nsw i32 16, %65
  %67 = lshr i32 %47, %66
  %68 = trunc i32 %67 to i16
  store i16 %68, i16* %13, align 8, !tbaa !109
  %69 = add nsw i32 %41, -16
  %70 = add nsw i32 %69, %65
  br label %240

71:                                               ; preds = %38
  %72 = add nsw i32 %42, %41
  br label %240

73:                                               ; preds = %16
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* @_length_code, i64 0, i64 %37
  %75 = load i8, i8* %74, align 1, !tbaa !4
  %76 = zext i8 %75 to i64
  %77 = add nuw nsw i64 %76, 257
  %78 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %77, i32 1, i32 0
  %79 = load i16, i16* %78, align 2, !tbaa !4
  %80 = zext i16 %79 to i32
  %81 = load i32, i32* %12, align 4, !tbaa !85
  %82 = sub nsw i32 16, %80
  %83 = icmp sgt i32 %81, %82
  %84 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %77, i32 0, i32 0
  %85 = load i16, i16* %84, align 2, !tbaa !4
  %86 = zext i16 %85 to i32
  %87 = shl i32 %86, %81
  %88 = load i16, i16* %13, align 8, !tbaa !109
  %89 = trunc i32 %87 to i16
  %90 = or i16 %88, %89
  store i16 %90, i16* %13, align 8, !tbaa !109
  br i1 %83, label %91, label %110

91:                                               ; preds = %73
  %92 = trunc i16 %90 to i8
  %93 = load i8*, i8** %14, align 8, !tbaa !51
  %94 = load i64, i64* %15, align 8, !tbaa !80
  %95 = add i64 %94, 1
  store i64 %95, i64* %15, align 8, !tbaa !80
  %96 = getelementptr inbounds i8, i8* %93, i64 %94
  store i8 %92, i8* %96, align 1, !tbaa !4
  %97 = load i16, i16* %13, align 8, !tbaa !109
  %98 = lshr i16 %97, 8
  %99 = trunc i16 %98 to i8
  %100 = load i8*, i8** %14, align 8, !tbaa !51
  %101 = load i64, i64* %15, align 8, !tbaa !80
  %102 = add i64 %101, 1
  store i64 %102, i64* %15, align 8, !tbaa !80
  %103 = getelementptr inbounds i8, i8* %100, i64 %101
  store i8 %99, i8* %103, align 1, !tbaa !4
  %104 = load i32, i32* %12, align 4, !tbaa !85
  %105 = sub nsw i32 16, %104
  %106 = lshr i32 %86, %105
  %107 = trunc i32 %106 to i16
  store i16 %107, i16* %13, align 8, !tbaa !109
  %108 = add nsw i32 %80, -16
  %109 = add nsw i32 %108, %104
  br label %112

110:                                              ; preds = %73
  %111 = add nsw i32 %81, %80
  br label %112

112:                                              ; preds = %110, %91
  %113 = phi i16 [ %90, %110 ], [ %107, %91 ]
  %114 = phi i32 [ %111, %110 ], [ %109, %91 ]
  store i32 %114, i32* %12, align 4, !tbaa !85
  %115 = getelementptr inbounds [29 x i32], [29 x i32]* @extra_lbits, i64 0, i64 %76
  %116 = load i32, i32* %115, align 4, !tbaa !16
  %117 = add nsw i64 %76, -28
  %118 = icmp ult i64 %117, -20
  br i1 %118, label %156, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds [29 x i32], [29 x i32]* @base_length, i64 0, i64 %76
  %121 = load i32, i32* %120, align 4, !tbaa !16
  %122 = sub nsw i32 %35, %121
  %123 = sub nsw i32 16, %116
  %124 = icmp sgt i32 %114, %123
  br i1 %124, label %125, label %148

125:                                              ; preds = %119
  %126 = and i32 %122, 65535
  %127 = shl i32 %122, %114
  %128 = trunc i32 %127 to i16
  %129 = or i16 %113, %128
  store i16 %129, i16* %13, align 8, !tbaa !109
  %130 = trunc i16 %129 to i8
  %131 = load i8*, i8** %14, align 8, !tbaa !51
  %132 = load i64, i64* %15, align 8, !tbaa !80
  %133 = add i64 %132, 1
  store i64 %133, i64* %15, align 8, !tbaa !80
  %134 = getelementptr inbounds i8, i8* %131, i64 %132
  store i8 %130, i8* %134, align 1, !tbaa !4
  %135 = load i16, i16* %13, align 8, !tbaa !109
  %136 = lshr i16 %135, 8
  %137 = trunc i16 %136 to i8
  %138 = load i8*, i8** %14, align 8, !tbaa !51
  %139 = load i64, i64* %15, align 8, !tbaa !80
  %140 = add i64 %139, 1
  store i64 %140, i64* %15, align 8, !tbaa !80
  %141 = getelementptr inbounds i8, i8* %138, i64 %139
  store i8 %137, i8* %141, align 1, !tbaa !4
  %142 = load i32, i32* %12, align 4, !tbaa !85
  %143 = sub nsw i32 16, %142
  %144 = lshr i32 %126, %143
  %145 = trunc i32 %144 to i16
  store i16 %145, i16* %13, align 8, !tbaa !109
  %146 = add nsw i32 %116, -16
  %147 = add nsw i32 %146, %142
  br label %153

148:                                              ; preds = %119
  %149 = shl i32 %122, %114
  %150 = trunc i32 %149 to i16
  %151 = or i16 %113, %150
  store i16 %151, i16* %13, align 8, !tbaa !109
  %152 = add nsw i32 %116, %114
  br label %153

153:                                              ; preds = %148, %125
  %154 = phi i16 [ %151, %148 ], [ %145, %125 ]
  %155 = phi i32 [ %152, %148 ], [ %147, %125 ]
  store i32 %155, i32* %12, align 4, !tbaa !85
  br label %156

156:                                              ; preds = %153, %112
  %157 = phi i16 [ %154, %153 ], [ %113, %112 ]
  %158 = phi i32 [ %155, %153 ], [ %114, %112 ]
  %159 = add nsw i32 %30, -1
  %160 = icmp ult i32 %159, 256
  %161 = lshr i32 %159, 7
  %162 = add nuw nsw i32 %161, 256
  %163 = select i1 %160, i32 %159, i32 %162
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [512 x i8], [512 x i8]* @_dist_code, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1, !tbaa !4
  %167 = zext i8 %166 to i64
  %168 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %2, i64 %167, i32 1, i32 0
  %169 = load i16, i16* %168, align 2, !tbaa !4
  %170 = zext i16 %169 to i32
  %171 = sub nsw i32 16, %170
  %172 = icmp sgt i32 %158, %171
  %173 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %2, i64 %167, i32 0, i32 0
  %174 = load i16, i16* %173, align 2, !tbaa !4
  %175 = zext i16 %174 to i32
  %176 = shl i32 %175, %158
  %177 = trunc i32 %176 to i16
  %178 = or i16 %157, %177
  store i16 %178, i16* %13, align 8, !tbaa !109
  br i1 %172, label %179, label %198

179:                                              ; preds = %156
  %180 = trunc i16 %178 to i8
  %181 = load i8*, i8** %14, align 8, !tbaa !51
  %182 = load i64, i64* %15, align 8, !tbaa !80
  %183 = add i64 %182, 1
  store i64 %183, i64* %15, align 8, !tbaa !80
  %184 = getelementptr inbounds i8, i8* %181, i64 %182
  store i8 %180, i8* %184, align 1, !tbaa !4
  %185 = load i16, i16* %13, align 8, !tbaa !109
  %186 = lshr i16 %185, 8
  %187 = trunc i16 %186 to i8
  %188 = load i8*, i8** %14, align 8, !tbaa !51
  %189 = load i64, i64* %15, align 8, !tbaa !80
  %190 = add i64 %189, 1
  store i64 %190, i64* %15, align 8, !tbaa !80
  %191 = getelementptr inbounds i8, i8* %188, i64 %189
  store i8 %187, i8* %191, align 1, !tbaa !4
  %192 = load i32, i32* %12, align 4, !tbaa !85
  %193 = sub nsw i32 16, %192
  %194 = lshr i32 %175, %193
  %195 = trunc i32 %194 to i16
  store i16 %195, i16* %13, align 8, !tbaa !109
  %196 = add nsw i32 %170, -16
  %197 = add nsw i32 %196, %192
  br label %200

198:                                              ; preds = %156
  %199 = add nsw i32 %158, %170
  br label %200

200:                                              ; preds = %198, %179
  %201 = phi i16 [ %178, %198 ], [ %195, %179 ]
  %202 = phi i32 [ %199, %198 ], [ %197, %179 ]
  store i32 %202, i32* %12, align 4, !tbaa !85
  %203 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i64 0, i64 %167
  %204 = load i32, i32* %203, align 4, !tbaa !16
  %205 = icmp ult i8 %166, 4
  br i1 %205, label %242, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i64 0, i64 %167
  %208 = load i32, i32* %207, align 4, !tbaa !16
  %209 = sub i32 %159, %208
  %210 = sub nsw i32 16, %204
  %211 = icmp sgt i32 %202, %210
  br i1 %211, label %212, label %235

212:                                              ; preds = %206
  %213 = and i32 %209, 65535
  %214 = shl i32 %209, %202
  %215 = trunc i32 %214 to i16
  %216 = or i16 %201, %215
  store i16 %216, i16* %13, align 8, !tbaa !109
  %217 = trunc i16 %216 to i8
  %218 = load i8*, i8** %14, align 8, !tbaa !51
  %219 = load i64, i64* %15, align 8, !tbaa !80
  %220 = add i64 %219, 1
  store i64 %220, i64* %15, align 8, !tbaa !80
  %221 = getelementptr inbounds i8, i8* %218, i64 %219
  store i8 %217, i8* %221, align 1, !tbaa !4
  %222 = load i16, i16* %13, align 8, !tbaa !109
  %223 = lshr i16 %222, 8
  %224 = trunc i16 %223 to i8
  %225 = load i8*, i8** %14, align 8, !tbaa !51
  %226 = load i64, i64* %15, align 8, !tbaa !80
  %227 = add i64 %226, 1
  store i64 %227, i64* %15, align 8, !tbaa !80
  %228 = getelementptr inbounds i8, i8* %225, i64 %226
  store i8 %224, i8* %228, align 1, !tbaa !4
  %229 = load i32, i32* %12, align 4, !tbaa !85
  %230 = sub nsw i32 16, %229
  %231 = lshr i32 %213, %230
  %232 = trunc i32 %231 to i16
  store i16 %232, i16* %13, align 8, !tbaa !109
  %233 = add nsw i32 %204, -16
  %234 = add nsw i32 %233, %229
  br label %240

235:                                              ; preds = %206
  %236 = shl i32 %209, %202
  %237 = trunc i32 %236 to i16
  %238 = or i16 %201, %237
  store i16 %238, i16* %13, align 8, !tbaa !109
  %239 = add nsw i32 %204, %202
  br label %240

240:                                              ; preds = %212, %235, %52, %71
  %241 = phi i32 [ %72, %71 ], [ %70, %52 ], [ %239, %235 ], [ %234, %212 ]
  store i32 %241, i32* %12, align 4, !tbaa !85
  br label %242

242:                                              ; preds = %240, %200
  %243 = phi i32 [ %202, %200 ], [ %241, %240 ]
  %244 = load i32, i32* %4, align 4, !tbaa !93
  %245 = icmp ult i32 %31, %244
  br i1 %245, label %16, label %246, !llvm.loop !322

246:                                              ; preds = %242, %7
  %247 = phi i32 [ %9, %7 ], [ %243, %242 ]
  %248 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 256, i32 1, i32 0
  %249 = load i16, i16* %248, align 2, !tbaa !4
  %250 = zext i16 %249 to i32
  %251 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %252 = sub nsw i32 16, %250
  %253 = icmp sgt i32 %247, %252
  %254 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 256, i32 0, i32 0
  %255 = load i16, i16* %254, align 2, !tbaa !4
  %256 = zext i16 %255 to i32
  %257 = shl i32 %256, %247
  %258 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %259 = load i16, i16* %258, align 8, !tbaa !109
  %260 = trunc i32 %257 to i16
  %261 = or i16 %259, %260
  store i16 %261, i16* %258, align 8, !tbaa !109
  br i1 %253, label %262, label %283

262:                                              ; preds = %246
  %263 = trunc i16 %261 to i8
  %264 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %265 = load i8*, i8** %264, align 8, !tbaa !51
  %266 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %267 = load i64, i64* %266, align 8, !tbaa !80
  %268 = add i64 %267, 1
  store i64 %268, i64* %266, align 8, !tbaa !80
  %269 = getelementptr inbounds i8, i8* %265, i64 %267
  store i8 %263, i8* %269, align 1, !tbaa !4
  %270 = load i16, i16* %258, align 8, !tbaa !109
  %271 = lshr i16 %270, 8
  %272 = trunc i16 %271 to i8
  %273 = load i8*, i8** %264, align 8, !tbaa !51
  %274 = load i64, i64* %266, align 8, !tbaa !80
  %275 = add i64 %274, 1
  store i64 %275, i64* %266, align 8, !tbaa !80
  %276 = getelementptr inbounds i8, i8* %273, i64 %274
  store i8 %272, i8* %276, align 1, !tbaa !4
  %277 = load i32, i32* %251, align 4, !tbaa !85
  %278 = sub nsw i32 16, %277
  %279 = lshr i32 %256, %278
  %280 = trunc i32 %279 to i16
  store i16 %280, i16* %258, align 8, !tbaa !109
  %281 = add nsw i32 %250, -16
  %282 = add nsw i32 %281, %277
  br label %285

283:                                              ; preds = %246
  %284 = add nsw i32 %247, %250
  br label %285

285:                                              ; preds = %283, %262
  %286 = phi i32 [ %284, %283 ], [ %282, %262 ]
  store i32 %286, i32* %251, align 4, !tbaa !85
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal fastcc void @send_tree(%struct.internal_state* noundef %0, %struct.ct_data_s* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 0, i32 1, i32 0
  %5 = load i16, i16* %4, align 2, !tbaa !4
  %6 = icmp eq i16 %5, 0
  %7 = icmp slt i32 %2, 0
  br i1 %7, label %339, label %8

8:                                                ; preds = %3
  %9 = select i1 %6, i32 138, i32 7
  %10 = select i1 %6, i32 3, i32 4
  %11 = zext i16 %5 to i32
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 1, i32 0
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 1, i32 0
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 1, i32 0
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  %22 = add nuw i32 %2, 1
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %8, %333
  %25 = phi i64 [ 0, %8 ], [ %31, %333 ]
  %26 = phi i32 [ -1, %8 ], [ %337, %333 ]
  %27 = phi i32 [ %11, %8 ], [ %34, %333 ]
  %28 = phi i32 [ 0, %8 ], [ %336, %333 ]
  %29 = phi i32 [ %9, %8 ], [ %335, %333 ]
  %30 = phi i32 [ %10, %8 ], [ %334, %333 ]
  %31 = add nuw nsw i64 %25, 1
  %32 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %31, i32 1, i32 0
  %33 = load i16, i16* %32, align 2, !tbaa !4
  %34 = zext i16 %33 to i32
  %35 = add nsw i32 %28, 1
  %36 = icmp slt i32 %35, %29
  %37 = icmp eq i32 %27, %34
  %38 = select i1 %36, i1 %37, i1 false
  br i1 %38, label %333, label %39

39:                                               ; preds = %24
  %40 = icmp slt i32 %35, %30
  br i1 %40, label %41, label %84

41:                                               ; preds = %39
  %42 = zext i32 %27 to i64
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %42, i32 1, i32 0
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %42, i32 0, i32 0
  %45 = load i32, i32* %12, align 4, !tbaa !85
  br label %46

46:                                               ; preds = %41, %80
  %47 = phi i32 [ %81, %80 ], [ %45, %41 ]
  %48 = phi i32 [ %82, %80 ], [ %35, %41 ]
  %49 = load i16, i16* %43, align 2, !tbaa !4
  %50 = zext i16 %49 to i32
  %51 = sub nsw i32 16, %50
  %52 = icmp sgt i32 %47, %51
  %53 = load i16, i16* %44, align 4, !tbaa !4
  %54 = zext i16 %53 to i32
  %55 = shl i32 %54, %47
  %56 = load i16, i16* %13, align 8, !tbaa !109
  %57 = trunc i32 %55 to i16
  %58 = or i16 %56, %57
  store i16 %58, i16* %13, align 8, !tbaa !109
  br i1 %52, label %59, label %78

59:                                               ; preds = %46
  %60 = trunc i16 %58 to i8
  %61 = load i8*, i8** %14, align 8, !tbaa !51
  %62 = load i64, i64* %15, align 8, !tbaa !80
  %63 = add i64 %62, 1
  store i64 %63, i64* %15, align 8, !tbaa !80
  %64 = getelementptr inbounds i8, i8* %61, i64 %62
  store i8 %60, i8* %64, align 1, !tbaa !4
  %65 = load i16, i16* %13, align 8, !tbaa !109
  %66 = lshr i16 %65, 8
  %67 = trunc i16 %66 to i8
  %68 = load i8*, i8** %14, align 8, !tbaa !51
  %69 = load i64, i64* %15, align 8, !tbaa !80
  %70 = add i64 %69, 1
  store i64 %70, i64* %15, align 8, !tbaa !80
  %71 = getelementptr inbounds i8, i8* %68, i64 %69
  store i8 %67, i8* %71, align 1, !tbaa !4
  %72 = load i32, i32* %12, align 4, !tbaa !85
  %73 = sub nsw i32 16, %72
  %74 = lshr i32 %54, %73
  %75 = trunc i32 %74 to i16
  store i16 %75, i16* %13, align 8, !tbaa !109
  %76 = add nsw i32 %50, -16
  %77 = add nsw i32 %76, %72
  br label %80

78:                                               ; preds = %46
  %79 = add nsw i32 %47, %50
  br label %80

80:                                               ; preds = %78, %59
  %81 = phi i32 [ %79, %78 ], [ %77, %59 ]
  store i32 %81, i32* %12, align 4, !tbaa !85
  %82 = add nsw i32 %48, -1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %328, label %46, !llvm.loop !323

84:                                               ; preds = %39
  %85 = icmp eq i32 %27, 0
  br i1 %85, label %194, label %86

86:                                               ; preds = %84
  %87 = icmp eq i32 %27, %26
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = load i32, i32* %12, align 4, !tbaa !85
  br label %128

90:                                               ; preds = %86
  %91 = zext i32 %27 to i64
  %92 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %91, i32 1, i32 0
  %93 = load i16, i16* %92, align 2, !tbaa !4
  %94 = zext i16 %93 to i32
  %95 = load i32, i32* %12, align 4, !tbaa !85
  %96 = sub nsw i32 16, %94
  %97 = icmp sgt i32 %95, %96
  %98 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %91, i32 0, i32 0
  %99 = load i16, i16* %98, align 4, !tbaa !4
  %100 = zext i16 %99 to i32
  %101 = shl i32 %100, %95
  %102 = load i16, i16* %13, align 8, !tbaa !109
  %103 = trunc i32 %101 to i16
  %104 = or i16 %102, %103
  store i16 %104, i16* %13, align 8, !tbaa !109
  br i1 %97, label %105, label %124

105:                                              ; preds = %90
  %106 = trunc i16 %104 to i8
  %107 = load i8*, i8** %14, align 8, !tbaa !51
  %108 = load i64, i64* %15, align 8, !tbaa !80
  %109 = add i64 %108, 1
  store i64 %109, i64* %15, align 8, !tbaa !80
  %110 = getelementptr inbounds i8, i8* %107, i64 %108
  store i8 %106, i8* %110, align 1, !tbaa !4
  %111 = load i16, i16* %13, align 8, !tbaa !109
  %112 = lshr i16 %111, 8
  %113 = trunc i16 %112 to i8
  %114 = load i8*, i8** %14, align 8, !tbaa !51
  %115 = load i64, i64* %15, align 8, !tbaa !80
  %116 = add i64 %115, 1
  store i64 %116, i64* %15, align 8, !tbaa !80
  %117 = getelementptr inbounds i8, i8* %114, i64 %115
  store i8 %113, i8* %117, align 1, !tbaa !4
  %118 = load i32, i32* %12, align 4, !tbaa !85
  %119 = sub nsw i32 16, %118
  %120 = lshr i32 %100, %119
  %121 = trunc i32 %120 to i16
  store i16 %121, i16* %13, align 8, !tbaa !109
  %122 = add nsw i32 %94, -16
  %123 = add nsw i32 %122, %118
  br label %126

124:                                              ; preds = %90
  %125 = add nsw i32 %95, %94
  br label %126

126:                                              ; preds = %124, %105
  %127 = phi i32 [ %125, %124 ], [ %123, %105 ]
  store i32 %127, i32* %12, align 4, !tbaa !85
  br label %128

128:                                              ; preds = %88, %126
  %129 = phi i32 [ %127, %126 ], [ %89, %88 ]
  %130 = phi i32 [ %28, %126 ], [ %35, %88 ]
  %131 = load i16, i16* %16, align 2, !tbaa !4
  %132 = zext i16 %131 to i32
  %133 = sub nsw i32 16, %132
  %134 = icmp sgt i32 %129, %133
  %135 = load i16, i16* %17, align 4, !tbaa !4
  %136 = zext i16 %135 to i32
  %137 = shl i32 %136, %129
  %138 = load i16, i16* %13, align 8, !tbaa !109
  %139 = trunc i32 %137 to i16
  %140 = or i16 %138, %139
  br i1 %134, label %141, label %160

141:                                              ; preds = %128
  store i16 %140, i16* %13, align 8, !tbaa !109
  %142 = trunc i16 %140 to i8
  %143 = load i8*, i8** %14, align 8, !tbaa !51
  %144 = load i64, i64* %15, align 8, !tbaa !80
  %145 = add i64 %144, 1
  store i64 %145, i64* %15, align 8, !tbaa !80
  %146 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8 %142, i8* %146, align 1, !tbaa !4
  %147 = load i16, i16* %13, align 8, !tbaa !109
  %148 = lshr i16 %147, 8
  %149 = trunc i16 %148 to i8
  %150 = load i8*, i8** %14, align 8, !tbaa !51
  %151 = load i64, i64* %15, align 8, !tbaa !80
  %152 = add i64 %151, 1
  store i64 %152, i64* %15, align 8, !tbaa !80
  %153 = getelementptr inbounds i8, i8* %150, i64 %151
  store i8 %149, i8* %153, align 1, !tbaa !4
  %154 = load i32, i32* %12, align 4, !tbaa !85
  %155 = sub nsw i32 16, %154
  %156 = lshr i32 %136, %155
  %157 = trunc i32 %156 to i16
  %158 = add nsw i32 %132, -16
  %159 = add nsw i32 %158, %154
  br label %162

160:                                              ; preds = %128
  %161 = add nsw i32 %129, %132
  br label %162

162:                                              ; preds = %160, %141
  %163 = phi i16 [ %140, %160 ], [ %157, %141 ]
  %164 = phi i32 [ %161, %160 ], [ %159, %141 ]
  store i32 %164, i32* %12, align 4, !tbaa !85
  %165 = icmp sgt i32 %164, 14
  %166 = add i32 %130, 65533
  br i1 %165, label %167, label %189

167:                                              ; preds = %162
  %168 = and i32 %166, 65535
  %169 = shl i32 %166, %164
  %170 = trunc i32 %169 to i16
  %171 = or i16 %163, %170
  store i16 %171, i16* %13, align 8, !tbaa !109
  %172 = trunc i16 %171 to i8
  %173 = load i8*, i8** %14, align 8, !tbaa !51
  %174 = load i64, i64* %15, align 8, !tbaa !80
  %175 = add i64 %174, 1
  store i64 %175, i64* %15, align 8, !tbaa !80
  %176 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8 %172, i8* %176, align 1, !tbaa !4
  %177 = load i16, i16* %13, align 8, !tbaa !109
  %178 = lshr i16 %177, 8
  %179 = trunc i16 %178 to i8
  %180 = load i8*, i8** %14, align 8, !tbaa !51
  %181 = load i64, i64* %15, align 8, !tbaa !80
  %182 = add i64 %181, 1
  store i64 %182, i64* %15, align 8, !tbaa !80
  %183 = getelementptr inbounds i8, i8* %180, i64 %181
  store i8 %179, i8* %183, align 1, !tbaa !4
  %184 = load i32, i32* %12, align 4, !tbaa !85
  %185 = sub nsw i32 16, %184
  %186 = lshr i32 %168, %185
  %187 = trunc i32 %186 to i16
  store i16 %187, i16* %13, align 8, !tbaa !109
  %188 = add nsw i32 %184, -14
  br label %326

189:                                              ; preds = %162
  %190 = shl i32 %166, %164
  %191 = trunc i32 %190 to i16
  %192 = or i16 %163, %191
  store i16 %192, i16* %13, align 8, !tbaa !109
  %193 = add nsw i32 %164, 2
  br label %326

194:                                              ; preds = %84
  %195 = icmp slt i32 %28, 10
  br i1 %195, label %196, label %261

196:                                              ; preds = %194
  %197 = load i16, i16* %20, align 2, !tbaa !4
  %198 = zext i16 %197 to i32
  %199 = load i32, i32* %12, align 4, !tbaa !85
  %200 = sub nsw i32 16, %198
  %201 = icmp sgt i32 %199, %200
  %202 = load i16, i16* %21, align 4, !tbaa !4
  %203 = zext i16 %202 to i32
  %204 = shl i32 %203, %199
  %205 = load i16, i16* %13, align 8, !tbaa !109
  %206 = trunc i32 %204 to i16
  %207 = or i16 %205, %206
  br i1 %201, label %208, label %227

208:                                              ; preds = %196
  store i16 %207, i16* %13, align 8, !tbaa !109
  %209 = trunc i16 %207 to i8
  %210 = load i8*, i8** %14, align 8, !tbaa !51
  %211 = load i64, i64* %15, align 8, !tbaa !80
  %212 = add i64 %211, 1
  store i64 %212, i64* %15, align 8, !tbaa !80
  %213 = getelementptr inbounds i8, i8* %210, i64 %211
  store i8 %209, i8* %213, align 1, !tbaa !4
  %214 = load i16, i16* %13, align 8, !tbaa !109
  %215 = lshr i16 %214, 8
  %216 = trunc i16 %215 to i8
  %217 = load i8*, i8** %14, align 8, !tbaa !51
  %218 = load i64, i64* %15, align 8, !tbaa !80
  %219 = add i64 %218, 1
  store i64 %219, i64* %15, align 8, !tbaa !80
  %220 = getelementptr inbounds i8, i8* %217, i64 %218
  store i8 %216, i8* %220, align 1, !tbaa !4
  %221 = load i32, i32* %12, align 4, !tbaa !85
  %222 = sub nsw i32 16, %221
  %223 = lshr i32 %203, %222
  %224 = trunc i32 %223 to i16
  %225 = add nsw i32 %198, -16
  %226 = add nsw i32 %225, %221
  br label %229

227:                                              ; preds = %196
  %228 = add nsw i32 %199, %198
  br label %229

229:                                              ; preds = %227, %208
  %230 = phi i16 [ %207, %227 ], [ %224, %208 ]
  %231 = phi i32 [ %228, %227 ], [ %226, %208 ]
  store i32 %231, i32* %12, align 4, !tbaa !85
  %232 = icmp sgt i32 %231, 13
  %233 = add nsw i32 %28, 65534
  br i1 %232, label %234, label %256

234:                                              ; preds = %229
  %235 = and i32 %233, 65535
  %236 = shl i32 %233, %231
  %237 = trunc i32 %236 to i16
  %238 = or i16 %230, %237
  store i16 %238, i16* %13, align 8, !tbaa !109
  %239 = trunc i16 %238 to i8
  %240 = load i8*, i8** %14, align 8, !tbaa !51
  %241 = load i64, i64* %15, align 8, !tbaa !80
  %242 = add i64 %241, 1
  store i64 %242, i64* %15, align 8, !tbaa !80
  %243 = getelementptr inbounds i8, i8* %240, i64 %241
  store i8 %239, i8* %243, align 1, !tbaa !4
  %244 = load i16, i16* %13, align 8, !tbaa !109
  %245 = lshr i16 %244, 8
  %246 = trunc i16 %245 to i8
  %247 = load i8*, i8** %14, align 8, !tbaa !51
  %248 = load i64, i64* %15, align 8, !tbaa !80
  %249 = add i64 %248, 1
  store i64 %249, i64* %15, align 8, !tbaa !80
  %250 = getelementptr inbounds i8, i8* %247, i64 %248
  store i8 %246, i8* %250, align 1, !tbaa !4
  %251 = load i32, i32* %12, align 4, !tbaa !85
  %252 = sub nsw i32 16, %251
  %253 = lshr i32 %235, %252
  %254 = trunc i32 %253 to i16
  store i16 %254, i16* %13, align 8, !tbaa !109
  %255 = add nsw i32 %251, -13
  br label %326

256:                                              ; preds = %229
  %257 = shl i32 %233, %231
  %258 = trunc i32 %257 to i16
  %259 = or i16 %230, %258
  store i16 %259, i16* %13, align 8, !tbaa !109
  %260 = add nsw i32 %231, 3
  br label %326

261:                                              ; preds = %194
  %262 = load i16, i16* %18, align 2, !tbaa !4
  %263 = zext i16 %262 to i32
  %264 = load i32, i32* %12, align 4, !tbaa !85
  %265 = sub nsw i32 16, %263
  %266 = icmp sgt i32 %264, %265
  %267 = load i16, i16* %19, align 4, !tbaa !4
  %268 = zext i16 %267 to i32
  %269 = shl i32 %268, %264
  %270 = load i16, i16* %13, align 8, !tbaa !109
  %271 = trunc i32 %269 to i16
  %272 = or i16 %270, %271
  br i1 %266, label %273, label %292

273:                                              ; preds = %261
  store i16 %272, i16* %13, align 8, !tbaa !109
  %274 = trunc i16 %272 to i8
  %275 = load i8*, i8** %14, align 8, !tbaa !51
  %276 = load i64, i64* %15, align 8, !tbaa !80
  %277 = add i64 %276, 1
  store i64 %277, i64* %15, align 8, !tbaa !80
  %278 = getelementptr inbounds i8, i8* %275, i64 %276
  store i8 %274, i8* %278, align 1, !tbaa !4
  %279 = load i16, i16* %13, align 8, !tbaa !109
  %280 = lshr i16 %279, 8
  %281 = trunc i16 %280 to i8
  %282 = load i8*, i8** %14, align 8, !tbaa !51
  %283 = load i64, i64* %15, align 8, !tbaa !80
  %284 = add i64 %283, 1
  store i64 %284, i64* %15, align 8, !tbaa !80
  %285 = getelementptr inbounds i8, i8* %282, i64 %283
  store i8 %281, i8* %285, align 1, !tbaa !4
  %286 = load i32, i32* %12, align 4, !tbaa !85
  %287 = sub nsw i32 16, %286
  %288 = lshr i32 %268, %287
  %289 = trunc i32 %288 to i16
  %290 = add nsw i32 %263, -16
  %291 = add nsw i32 %290, %286
  br label %294

292:                                              ; preds = %261
  %293 = add nsw i32 %264, %263
  br label %294

294:                                              ; preds = %292, %273
  %295 = phi i16 [ %272, %292 ], [ %289, %273 ]
  %296 = phi i32 [ %293, %292 ], [ %291, %273 ]
  store i32 %296, i32* %12, align 4, !tbaa !85
  %297 = icmp sgt i32 %296, 9
  %298 = add nuw i32 %28, 65526
  br i1 %297, label %299, label %321

299:                                              ; preds = %294
  %300 = and i32 %298, 65535
  %301 = shl i32 %298, %296
  %302 = trunc i32 %301 to i16
  %303 = or i16 %295, %302
  store i16 %303, i16* %13, align 8, !tbaa !109
  %304 = trunc i16 %303 to i8
  %305 = load i8*, i8** %14, align 8, !tbaa !51
  %306 = load i64, i64* %15, align 8, !tbaa !80
  %307 = add i64 %306, 1
  store i64 %307, i64* %15, align 8, !tbaa !80
  %308 = getelementptr inbounds i8, i8* %305, i64 %306
  store i8 %304, i8* %308, align 1, !tbaa !4
  %309 = load i16, i16* %13, align 8, !tbaa !109
  %310 = lshr i16 %309, 8
  %311 = trunc i16 %310 to i8
  %312 = load i8*, i8** %14, align 8, !tbaa !51
  %313 = load i64, i64* %15, align 8, !tbaa !80
  %314 = add i64 %313, 1
  store i64 %314, i64* %15, align 8, !tbaa !80
  %315 = getelementptr inbounds i8, i8* %312, i64 %313
  store i8 %311, i8* %315, align 1, !tbaa !4
  %316 = load i32, i32* %12, align 4, !tbaa !85
  %317 = sub nsw i32 16, %316
  %318 = lshr i32 %300, %317
  %319 = trunc i32 %318 to i16
  store i16 %319, i16* %13, align 8, !tbaa !109
  %320 = add nsw i32 %316, -9
  br label %326

321:                                              ; preds = %294
  %322 = shl i32 %298, %296
  %323 = trunc i32 %322 to i16
  %324 = or i16 %295, %323
  store i16 %324, i16* %13, align 8, !tbaa !109
  %325 = add nsw i32 %296, 7
  br label %326

326:                                              ; preds = %299, %321, %234, %256, %167, %189
  %327 = phi i32 [ %193, %189 ], [ %188, %167 ], [ %260, %256 ], [ %255, %234 ], [ %325, %321 ], [ %320, %299 ]
  store i32 %327, i32* %12, align 4, !tbaa !85
  br label %328

328:                                              ; preds = %80, %326
  %329 = icmp eq i16 %33, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %328
  %331 = select i1 %37, i32 3, i32 4
  %332 = select i1 %37, i32 6, i32 7
  br label %333

333:                                              ; preds = %330, %328, %24
  %334 = phi i32 [ %30, %24 ], [ 3, %328 ], [ %331, %330 ]
  %335 = phi i32 [ %29, %24 ], [ 138, %328 ], [ %332, %330 ]
  %336 = phi i32 [ %35, %24 ], [ 0, %328 ], [ 0, %330 ]
  %337 = phi i32 [ %26, %24 ], [ %27, %328 ], [ %27, %330 ]
  %338 = icmp eq i64 %31, %23
  br i1 %338, label %339, label %24, !llvm.loop !324

339:                                              ; preds = %333, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define hidden i32 @_tr_tally(%struct.internal_state* nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = trunc i32 %1 to i8
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48
  %6 = load i8*, i8** %5, align 8, !tbaa !54
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 50
  %8 = load i32, i32* %7, align 4, !tbaa !93
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 4, !tbaa !93
  %10 = zext i32 %8 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 %10
  store i8 %4, i8* %11, align 1, !tbaa !4
  %12 = lshr i32 %1, 8
  %13 = trunc i32 %12 to i8
  %14 = load i8*, i8** %5, align 8, !tbaa !54
  %15 = load i32, i32* %7, align 4, !tbaa !93
  %16 = add i32 %15, 1
  store i32 %16, i32* %7, align 4, !tbaa !93
  %17 = zext i32 %15 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  store i8 %13, i8* %18, align 1, !tbaa !4
  %19 = trunc i32 %2 to i8
  %20 = load i8*, i8** %5, align 8, !tbaa !54
  %21 = load i32, i32* %7, align 4, !tbaa !93
  %22 = add i32 %21, 1
  store i32 %22, i32* %7, align 4, !tbaa !93
  %23 = zext i32 %21 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8 %19, i8* %24, align 1, !tbaa !4
  %25 = icmp eq i32 %1, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %3
  %27 = zext i32 %2 to i64
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %27, i32 0, i32 0
  br label %51

29:                                               ; preds = %3
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  %31 = load i32, i32* %30, align 8, !tbaa !91
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 8, !tbaa !91
  %33 = add i32 %1, -1
  %34 = zext i32 %2 to i64
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* @_length_code, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1, !tbaa !4
  %37 = zext i8 %36 to i64
  %38 = add nuw nsw i64 %37, 257
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37, i64 %38, i32 0, i32 0
  %40 = load i16, i16* %39, align 4, !tbaa !4
  %41 = add i16 %40, 1
  store i16 %41, i16* %39, align 4, !tbaa !4
  %42 = icmp ult i32 %33, 256
  %43 = lshr i32 %33, 7
  %44 = add nuw nsw i32 %43, 256
  %45 = select i1 %42, i32 %33, i32 %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [512 x i8], [512 x i8]* @_dist_code, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1, !tbaa !4
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %49, i32 0, i32 0
  br label %51

51:                                               ; preds = %29, %26
  %52 = phi i16* [ %50, %29 ], [ %28, %26 ]
  %53 = load i16, i16* %52, align 4, !tbaa !4
  %54 = add i16 %53, 1
  store i16 %54, i16* %52, align 4, !tbaa !4
  %55 = load i32, i32* %7, align 4, !tbaa !93
  %56 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %57 = load i32, i32* %56, align 8, !tbaa !55
  %58 = icmp eq i32 %55, %57
  %59 = zext i1 %58 to i32
  ret i32 %59
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i8* @zlibVersion() local_unnamed_addr #1 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.45, i64 0, i64 0)
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i64 @zlibCompileFlags() local_unnamed_addr #1 {
  ret i64 169
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i8* @zError(i32 noundef %0) local_unnamed_addr #1 {
  %2 = sub nsw i32 2, %0
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [10 x i8*], [10 x i8*]* @z_errmsg, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8, !tbaa !53
  ret i8* %5
}

; Function Attrs: mustprogress nofree nounwind uwtable willreturn
define hidden noalias i8* @zcalloc(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) #14 {
  %4 = mul i32 %2, %1
  %5 = zext i32 %4 to i64
  %6 = tail call noalias i8* @malloc(i64 noundef %5) #25
  ret i8* %6
}

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn
declare noalias noundef i8* @malloc(i64 noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nounwind uwtable willreturn
define hidden void @zcfree(i8* nocapture noundef readnone %0, i8* nocapture noundef %1) #16 {
  tail call void @free(i8* noundef %1) #25
  ret void
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn
declare void @free(i8* nocapture noundef) local_unnamed_addr #17

; Function Attrs: nounwind uwtable
define i32 @compress2(i8* noundef %0, i64* nocapture noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #3 {
  %6 = alloca %struct.z_stream_s, align 8
  %7 = bitcast %struct.z_stream_s* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #25
  %8 = load i64, i64* %1, align 8, !tbaa !19
  store i64 0, i64* %1, align 8, !tbaa !19
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i64 0, i32 8
  %10 = bitcast i8* (i8*, i32, i32)** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  %11 = call i32 @deflateInit_(%struct.z_stream_s* noundef nonnull %6, i32 noundef %4, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i32 noundef 112) #25
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %51

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i64 0, i32 3
  store i8* %0, i8** %14, align 8, !tbaa !87
  %15 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i64 0, i32 4
  store i32 0, i32* %15, align 8, !tbaa !86
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i64 0, i32 0
  store i8* %2, i8** %16, align 8, !tbaa !89
  %17 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i64 0, i32 1
  store i32 0, i32* %17, align 8, !tbaa !84
  br label %20

18:                                               ; preds = %39
  %19 = load i32, i32* %15, align 8, !tbaa !86
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i32 [ %19, %18 ], [ 0, %13 ]
  %22 = phi i64 [ %40, %18 ], [ %3, %13 ]
  %23 = phi i64 [ %31, %18 ], [ %8, %13 ]
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = icmp ult i64 %23, 4294967295
  %27 = select i1 %26, i64 %23, i64 4294967295
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %15, align 8, !tbaa !86
  %29 = sub i64 %23, %27
  br label %30

30:                                               ; preds = %25, %20
  %31 = phi i64 [ %29, %25 ], [ %23, %20 ]
  %32 = load i32, i32* %17, align 8, !tbaa !84
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %30
  %35 = icmp ult i64 %22, 4294967295
  %36 = select i1 %35, i64 %22, i64 4294967295
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %17, align 8, !tbaa !84
  %38 = sub i64 %22, %36
  br label %39

39:                                               ; preds = %34, %30
  %40 = phi i64 [ %38, %34 ], [ %22, %30 ]
  %41 = icmp eq i64 %40, 0
  %42 = select i1 %41, i32 4, i32 0
  %43 = call i32 @deflate(%struct.z_stream_s* noundef nonnull %6, i32 noundef %42) #25
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %18, label %45, !llvm.loop !325

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i64 0, i32 5
  %47 = load i64, i64* %46, align 8, !tbaa !88
  store i64 %47, i64* %1, align 8, !tbaa !19
  %48 = call i32 @deflateEnd(%struct.z_stream_s* noundef nonnull %6) #25
  %49 = icmp eq i32 %43, 1
  %50 = select i1 %49, i32 0, i32 %43
  br label %51

51:                                               ; preds = %5, %45
  %52 = phi i32 [ %50, %45 ], [ %11, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #25
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define i32 @compress(i8* noundef %0, i64* nocapture noundef %1, i8* noundef %2, i64 noundef %3) local_unnamed_addr #3 {
  %5 = alloca %struct.z_stream_s, align 8
  %6 = bitcast %struct.z_stream_s* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #25
  %7 = load i64, i64* %1, align 8, !tbaa !19
  store i64 0, i64* %1, align 8, !tbaa !19
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 8
  %9 = bitcast i8* (i8*, i32, i32)** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false) #25
  %10 = call i32 @deflateInit_(%struct.z_stream_s* noundef nonnull %5, i32 noundef -1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i32 noundef 112) #25
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %50

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 3
  store i8* %0, i8** %13, align 8, !tbaa !87
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 4
  store i32 0, i32* %14, align 8, !tbaa !86
  %15 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 0
  store i8* %2, i8** %15, align 8, !tbaa !89
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 1
  store i32 0, i32* %16, align 8, !tbaa !84
  br label %19

17:                                               ; preds = %38
  %18 = load i32, i32* %14, align 8, !tbaa !86
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i32 [ %18, %17 ], [ 0, %12 ]
  %21 = phi i64 [ %39, %17 ], [ %3, %12 ]
  %22 = phi i64 [ %30, %17 ], [ %7, %12 ]
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = icmp ult i64 %22, 4294967295
  %26 = select i1 %25, i64 %22, i64 4294967295
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %14, align 8, !tbaa !86
  %28 = sub i64 %22, %26
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi i64 [ %28, %24 ], [ %22, %19 ]
  %31 = load i32, i32* %16, align 8, !tbaa !84
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %29
  %34 = icmp ult i64 %21, 4294967295
  %35 = select i1 %34, i64 %21, i64 4294967295
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %16, align 8, !tbaa !84
  %37 = sub i64 %21, %35
  br label %38

38:                                               ; preds = %33, %29
  %39 = phi i64 [ %37, %33 ], [ %21, %29 ]
  %40 = icmp eq i64 %39, 0
  %41 = select i1 %40, i32 4, i32 0
  %42 = call i32 @deflate(%struct.z_stream_s* noundef nonnull %5, i32 noundef %41) #25
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %17, label %44, !llvm.loop !325

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 5
  %46 = load i64, i64* %45, align 8, !tbaa !88
  store i64 %46, i64* %1, align 8, !tbaa !19
  %47 = call i32 @deflateEnd(%struct.z_stream_s* noundef nonnull %5) #25
  %48 = icmp eq i32 %42, 1
  %49 = select i1 %48, i32 0, i32 %42
  br label %50

50:                                               ; preds = %4, %44
  %51 = phi i32 [ %49, %44 ], [ %10, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #25
  ret i32 %51
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define i64 @compressBound(i64 noundef %0) local_unnamed_addr #1 {
  %2 = lshr i64 %0, 12
  %3 = lshr i64 %0, 14
  %4 = lshr i64 %0, 25
  %5 = add i64 %0, 13
  %6 = add i64 %5, %2
  %7 = add i64 %6, %3
  %8 = add i64 %7, %4
  ret i64 %8
}

; Function Attrs: nounwind uwtable
define i32 @uncompress2(i8* noundef %0, i64* nocapture noundef %1, i8* noundef %2, i64* nocapture noundef %3) local_unnamed_addr #3 {
  %5 = alloca %struct.z_stream_s, align 8
  %6 = alloca [1 x i8], align 1
  %7 = bitcast %struct.z_stream_s* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #25
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #25
  %9 = load i64, i64* %3, align 8, !tbaa !19
  %10 = load i64, i64* %1, align 8, !tbaa !19
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  store i64 0, i64* %1, align 8, !tbaa !19
  br label %13

13:                                               ; preds = %4, %12
  %14 = phi i8* [ %0, %12 ], [ %8, %4 ]
  %15 = phi i64 [ %10, %12 ], [ 1, %4 ]
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 0
  store i8* %2, i8** %16, align 8, !tbaa !89
  %17 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 1
  store i32 0, i32* %17, align 8, !tbaa !84
  %18 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 8
  %19 = bitcast i8* (i8*, i32, i32)** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %19, i8 0, i64 24, i1 false)
  %20 = call i32 @inflateInit_(%struct.z_stream_s* noundef nonnull %5, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i32 noundef 112) #25
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %75

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 3
  store i8* %14, i8** %23, align 8, !tbaa !87
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 4
  store i32 0, i32* %24, align 8, !tbaa !86
  br label %27

25:                                               ; preds = %46
  %26 = load i32, i32* %24, align 8, !tbaa !86
  br label %27

27:                                               ; preds = %25, %22
  %28 = phi i32 [ %26, %25 ], [ 0, %22 ]
  %29 = phi i64 [ %47, %25 ], [ %9, %22 ]
  %30 = phi i64 [ %38, %25 ], [ %15, %22 ]
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = icmp ult i64 %30, 4294967295
  %34 = select i1 %33, i64 %30, i64 4294967295
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %24, align 8, !tbaa !86
  %36 = sub i64 %30, %34
  br label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %36, %32 ], [ %30, %27 ]
  %39 = load i32, i32* %17, align 8, !tbaa !84
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = icmp ult i64 %29, 4294967295
  %43 = select i1 %42, i64 %29, i64 4294967295
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %17, align 8, !tbaa !84
  %45 = sub i64 %29, %43
  br label %46

46:                                               ; preds = %41, %37
  %47 = phi i64 [ %45, %41 ], [ %29, %37 ]
  %48 = call i32 @inflate(%struct.z_stream_s* noundef nonnull %5, i32 noundef 0) #25
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %25, label %50, !llvm.loop !326

50:                                               ; preds = %46
  %51 = load i32, i32* %17, align 8, !tbaa !84
  %52 = zext i32 %51 to i64
  %53 = load i64, i64* %3, align 8, !tbaa !19
  %54 = add i64 %47, %52
  %55 = sub i64 %53, %54
  store i64 %55, i64* %3, align 8, !tbaa !19
  %56 = icmp eq i8* %14, %8
  %57 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 5
  %58 = load i64, i64* %57, align 8, !tbaa !88
  br i1 %56, label %60, label %59

59:                                               ; preds = %50
  store i64 %58, i64* %1, align 8, !tbaa !19
  br label %65

60:                                               ; preds = %50
  %61 = icmp ne i64 %58, 0
  %62 = icmp eq i32 %48, -5
  %63 = select i1 %61, i1 %62, i1 false
  %64 = select i1 %63, i64 1, i64 %38
  br label %65

65:                                               ; preds = %60, %59
  %66 = phi i64 [ %38, %59 ], [ %64, %60 ]
  %67 = call i32 @inflateEnd(%struct.z_stream_s* noundef nonnull %5) #25
  switch i32 %48, label %73 [
    i32 1, label %75
    i32 2, label %74
    i32 -5, label %68
  ]

68:                                               ; preds = %65
  %69 = load i32, i32* %24, align 8, !tbaa !86
  %70 = zext i32 %69 to i64
  %71 = sub nsw i64 0, %70
  %72 = icmp eq i64 %66, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %65, %68
  br label %75

74:                                               ; preds = %65
  br label %75

75:                                               ; preds = %73, %68, %74, %65, %13
  %76 = phi i32 [ %20, %13 ], [ 0, %65 ], [ %48, %73 ], [ -3, %68 ], [ -3, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #25
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #25
  ret i32 %76
}

; Function Attrs: nounwind uwtable
define i32 @uncompress(i8* noundef %0, i64* nocapture noundef %1, i8* noundef %2, i64 noundef %3) local_unnamed_addr #3 {
  %5 = alloca i64, align 8
  store i64 %3, i64* %5, align 8, !tbaa !19
  %6 = call i32 @uncompress2(i8* noundef %0, i64* noundef %1, i8* noundef %2, i64* noundef nonnull %5)
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define i32 @gzclose(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8, !tbaa !327
  %6 = icmp eq i32 %5, 7247
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call i32 @gzclose_r(%struct.gzFile_s* noundef nonnull %0) #25
  br label %11

9:                                                ; preds = %3
  %10 = tail call i32 @gzclose_w(%struct.gzFile_s* noundef nonnull %0) #25
  br label %11

11:                                               ; preds = %7, %9, %1
  %12 = phi i32 [ -2, %1 ], [ %8, %7 ], [ %10, %9 ]
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define %struct.gzFile_s* @gzopen(i8* noundef %0, i8* nocapture noundef readonly %1) local_unnamed_addr #3 {
  %3 = tail call fastcc %struct.gzFile_s* @gz_open(i8* noundef %0, i32 noundef -1, i8* noundef %1)
  ret %struct.gzFile_s* %3
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gzFile_s* @gz_open(i8* noundef %0, i32 noundef %1, i8* nocapture noundef readonly %2) unnamed_addr #3 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %126, label %5

5:                                                ; preds = %3
  %6 = tail call noalias dereferenceable_or_null(240) i8* @malloc(i64 noundef 240) #25
  %7 = bitcast i8* %6 to %struct.gz_state*
  %8 = icmp eq i8* %6, null
  br i1 %8, label %126, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 4
  store i32 0, i32* %10, align 8, !tbaa !330
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 5
  store i32 8192, i32* %11, align 4, !tbaa !331
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 19
  store i8* null, i8** %12, align 8, !tbaa !332
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 1
  store i32 0, i32* %13, align 8, !tbaa !327
  %14 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 13
  store i32 -1, i32* %14, align 8, !tbaa !333
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 14
  store i32 0, i32* %15, align 4, !tbaa !334
  %16 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 8
  store i32 0, i32* %16, align 8, !tbaa !335
  %17 = load i8, i8* %2, align 1, !tbaa !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %52, label %19

19:                                               ; preds = %9, %43
  %20 = phi i32 [ %44, %43 ], [ 0, %9 ]
  %21 = phi i32 [ %45, %43 ], [ 0, %9 ]
  %22 = phi i8 [ %49, %43 ], [ %17, %9 ]
  %23 = phi i32 [ %47, %43 ], [ 0, %9 ]
  %24 = phi i32 [ %46, %43 ], [ 0, %9 ]
  %25 = phi i8* [ %48, %43 ], [ %2, %9 ]
  %26 = sext i8 %22 to i32
  %27 = add i8 %22, -48
  %28 = icmp ult i8 %27, 10
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  %30 = add nsw i32 %26, -48
  store i32 %30, i32* %14, align 8, !tbaa !333
  br label %43

31:                                               ; preds = %19
  switch i32 %26, label %43 [
    i32 114, label %32
    i32 119, label %33
    i32 97, label %34
    i32 43, label %35
    i32 84, label %42
    i32 101, label %36
    i32 120, label %37
    i32 102, label %38
    i32 104, label %39
    i32 82, label %40
    i32 70, label %41
  ]

32:                                               ; preds = %31
  store i32 7247, i32* %13, align 8, !tbaa !327
  br label %43

33:                                               ; preds = %31
  store i32 31153, i32* %13, align 8, !tbaa !327
  br label %43

34:                                               ; preds = %31
  store i32 1, i32* %13, align 8, !tbaa !327
  br label %43

35:                                               ; preds = %31
  tail call void @free(i8* noundef %6) #25
  br label %126

36:                                               ; preds = %31
  br label %43

37:                                               ; preds = %31
  br label %43

38:                                               ; preds = %31
  store i32 1, i32* %15, align 4, !tbaa !334
  br label %43

39:                                               ; preds = %31
  store i32 2, i32* %15, align 4, !tbaa !334
  br label %43

40:                                               ; preds = %31
  store i32 3, i32* %15, align 4, !tbaa !334
  br label %43

41:                                               ; preds = %31
  store i32 4, i32* %15, align 4, !tbaa !334
  br label %43

42:                                               ; preds = %31
  store i32 1, i32* %16, align 8, !tbaa !335
  br label %43

43:                                               ; preds = %32, %33, %34, %36, %37, %38, %39, %40, %41, %42, %31, %29
  %44 = phi i32 [ %20, %29 ], [ %20, %31 ], [ %20, %41 ], [ %20, %40 ], [ %20, %39 ], [ %20, %38 ], [ %20, %37 ], [ %20, %36 ], [ 1, %42 ], [ %20, %34 ], [ %20, %33 ], [ %20, %32 ]
  %45 = phi i32 [ %21, %29 ], [ %21, %31 ], [ %21, %41 ], [ %21, %40 ], [ %21, %39 ], [ %21, %38 ], [ %21, %37 ], [ %21, %36 ], [ %21, %42 ], [ 1, %34 ], [ 31153, %33 ], [ 7247, %32 ]
  %46 = phi i32 [ %24, %29 ], [ %24, %31 ], [ %24, %41 ], [ %24, %40 ], [ %24, %39 ], [ %24, %38 ], [ %24, %37 ], [ 1, %36 ], [ %24, %42 ], [ %24, %34 ], [ %24, %33 ], [ %24, %32 ]
  %47 = phi i32 [ %23, %29 ], [ %23, %31 ], [ %23, %41 ], [ %23, %40 ], [ %23, %39 ], [ %23, %38 ], [ 1, %37 ], [ %23, %36 ], [ %23, %42 ], [ %23, %34 ], [ %23, %33 ], [ %23, %32 ]
  %48 = getelementptr inbounds i8, i8* %25, i64 1
  %49 = load i8, i8* %48, align 1, !tbaa !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %19, !llvm.loop !336

51:                                               ; preds = %43
  switch i32 %45, label %57 [
    i32 0, label %52
    i32 7247, label %53
  ]

52:                                               ; preds = %9, %51
  tail call void @free(i8* noundef nonnull %6) #25
  br label %126

53:                                               ; preds = %51
  %54 = icmp eq i32 %44, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %53
  tail call void @free(i8* noundef nonnull %6) #25
  br label %126

56:                                               ; preds = %53
  store i32 1, i32* %16, align 8, !tbaa !335
  br label %57

57:                                               ; preds = %51, %56
  %58 = tail call i64 @strlen(i8* noundef nonnull %0) #26
  %59 = add i64 %58, 1
  %60 = tail call noalias i8* @malloc(i64 noundef %59) #25
  %61 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 3
  store i8* %60, i8** %61, align 8, !tbaa !337
  %62 = icmp eq i8* %60, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  tail call void @free(i8* noundef nonnull %6) #25
  br label %126

64:                                               ; preds = %57
  %65 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %60, i64 noundef %59, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.52, i64 0, i64 0), i8* noundef nonnull %0) #25
  %66 = icmp eq i32 %46, 0
  %67 = select i1 %66, i32 0, i32 524288
  %68 = load i32, i32* %13, align 8, !tbaa !327
  %69 = icmp eq i32 %68, 7247
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = icmp eq i32 %47, 0
  %72 = select i1 %71, i32 65, i32 193
  %73 = icmp eq i32 %68, 31153
  %74 = select i1 %73, i32 512, i32 1024
  %75 = or i32 %74, %72
  br label %76

76:                                               ; preds = %64, %70
  %77 = phi i32 [ %75, %70 ], [ 0, %64 ]
  %78 = icmp sgt i32 %1, -1
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 2
  store i32 %1, i32* %80, align 4, !tbaa !338
  br label %90

81:                                               ; preds = %76
  %82 = or i32 %77, %67
  %83 = tail call i32 (i8*, i32, ...) @open(i8* noundef nonnull %0, i32 noundef %82, i32 noundef 438) #25
  %84 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 2
  store i32 %83, i32* %84, align 4, !tbaa !338
  %85 = icmp eq i32 %83, -1
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  %87 = load i32, i32* %13, align 8, !tbaa !327
  br label %90

88:                                               ; preds = %81
  %89 = load i8*, i8** %61, align 8, !tbaa !337
  tail call void @free(i8* noundef %89) #25
  tail call void @free(i8* noundef nonnull %6) #25
  br label %126

90:                                               ; preds = %86, %79
  %91 = phi i32 [ %68, %79 ], [ %87, %86 ]
  %92 = phi i32 [ %1, %79 ], [ %83, %86 ]
  switch i32 %91, label %107 [
    i32 1, label %93
    i32 7247, label %95
  ]

93:                                               ; preds = %90
  %94 = tail call i64 @lseek64(i32 noundef %92, i64 noundef 0, i32 noundef 2) #25
  store i32 31153, i32* %13, align 8, !tbaa !327
  br label %107

95:                                               ; preds = %90
  %96 = tail call i64 @lseek64(i32 noundef %92, i64 noundef 0, i32 noundef 1) #25
  %97 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 10
  %98 = icmp eq i64 %96, -1
  %99 = select i1 %98, i64 0, i64 %96
  store i64 %99, i64* %97, align 8
  %100 = load i32, i32* %13, align 8, !tbaa !327
  %101 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %101, align 8, !tbaa !339
  %102 = icmp eq i32 %100, 7247
  br i1 %102, label %103, label %109

103:                                              ; preds = %95
  %104 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 11
  store i32 0, i32* %104, align 8, !tbaa !340
  %105 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 12
  store i32 0, i32* %105, align 4, !tbaa !341
  %106 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 9
  store i32 0, i32* %106, align 4, !tbaa !342
  br label %111

107:                                              ; preds = %90, %93
  %108 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %108, align 8, !tbaa !339
  br label %109

109:                                              ; preds = %107, %95
  %110 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 15
  store i32 0, i32* %110, align 8, !tbaa !343
  br label %111

111:                                              ; preds = %109, %103
  %112 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 17
  store i32 0, i32* %112, align 8, !tbaa !344
  %113 = load i8*, i8** %12, align 8, !tbaa !332
  %114 = icmp eq i8* %113, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 18
  %117 = load i32, i32* %116, align 4, !tbaa !345
  %118 = icmp eq i32 %117, -4
  br i1 %118, label %120, label %119

119:                                              ; preds = %115
  tail call void @free(i8* noundef nonnull %113) #25
  br label %120

120:                                              ; preds = %119, %115
  store i8* null, i8** %12, align 8, !tbaa !332
  br label %121

121:                                              ; preds = %111, %120
  %122 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 18
  store i32 0, i32* %122, align 4, !tbaa !345
  %123 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 0, i32 2
  store i64 0, i64* %123, align 8, !tbaa !346
  %124 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 20, i32 1
  store i32 0, i32* %124, align 8, !tbaa !347
  %125 = getelementptr %struct.gz_state, %struct.gz_state* %7, i64 0, i32 0
  br label %126

126:                                              ; preds = %5, %3, %121, %88, %63, %55, %52, %35
  %127 = phi %struct.gzFile_s* [ null, %35 ], [ null, %52 ], [ null, %55 ], [ null, %63 ], [ null, %88 ], [ %125, %121 ], [ null, %3 ], [ null, %5 ]
  ret %struct.gzFile_s* %127
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i32 @snprintf(i8* noalias nocapture noundef writeonly, i64 noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #19

; Function Attrs: nofree
declare noundef i32 @open(i8* nocapture noundef readonly, i32 noundef, ...) local_unnamed_addr #20

; Function Attrs: nounwind
declare i64 @lseek64(i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #21

; Function Attrs: nounwind uwtable
define %struct.gzFile_s* @gzopen64(i8* noundef %0, i8* nocapture noundef readonly %1) local_unnamed_addr #3 {
  %3 = tail call fastcc %struct.gzFile_s* @gz_open(i8* noundef %0, i32 noundef -1, i8* noundef %1)
  ret %struct.gzFile_s* %3
}

; Function Attrs: nounwind uwtable
define %struct.gzFile_s* @gzdopen(i32 noundef %0, i8* nocapture noundef readonly %1) local_unnamed_addr #3 {
  %3 = icmp eq i32 %0, -1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = tail call noalias dereferenceable_or_null(19) i8* @malloc(i64 noundef 19) #25
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %5, i64 noundef 19, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i32 noundef %0) #25
  %9 = tail call fastcc %struct.gzFile_s* @gz_open(i8* noundef nonnull %5, i32 noundef %0, i8* noundef %1)
  tail call void @free(i8* noundef nonnull %5) #25
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi %struct.gzFile_s* [ %9, %7 ], [ null, %4 ], [ null, %2 ]
  ret %struct.gzFile_s* %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i32 @gzbuffer(%struct.gzFile_s* noundef %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8, !tbaa !327
  switch i32 %7, label %20 [
    i32 7247, label %8
    i32 31153, label %8
  ]

8:                                                ; preds = %4, %4
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8, !tbaa !330
  %12 = icmp ne i32 %11, 0
  %13 = shl i32 %1, 1
  %14 = icmp ult i32 %13, %1
  %15 = or i1 %14, %12
  br i1 %15, label %20, label %16

16:                                               ; preds = %8
  %17 = icmp ugt i32 %1, 8
  %18 = select i1 %17, i32 %1, i32 8
  %19 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 5
  store i32 %18, i32* %19, align 4, !tbaa !331
  br label %20

20:                                               ; preds = %8, %4, %2, %16
  %21 = phi i32 [ 0, %16 ], [ -1, %2 ], [ -1, %4 ], [ -1, %8 ]
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define i32 @gzrewind(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8, !tbaa !327
  %7 = icmp eq i32 %6, 7247
  br i1 %7, label %8, label %46

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 18
  %10 = load i32, i32* %9, align 4, !tbaa !345
  switch i32 %10, label %46 [
    i32 0, label %11
    i32 -5, label %11
  ]

11:                                               ; preds = %8, %8
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 4, !tbaa !338
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3
  %15 = bitcast %struct.gzFile_s* %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !348
  %17 = tail call i64 @lseek64(i32 noundef %13, i64 noundef %16, i32 noundef 0) #25
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %46, label %19

19:                                               ; preds = %11
  %20 = getelementptr %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  store i32 0, i32* %20, align 8, !tbaa !339
  %21 = load i32, i32* %5, align 8, !tbaa !327
  %22 = icmp eq i32 %21, 7247
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %25 = bitcast i8** %24 to i32*
  store i32 0, i32* %25, align 8, !tbaa !340
  %26 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 12
  store i32 0, i32* %26, align 4, !tbaa !341
  %27 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 9
  store i32 0, i32* %27, align 4, !tbaa !342
  br label %30

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 0
  store i32 0, i32* %29, align 8, !tbaa !343
  br label %30

30:                                               ; preds = %28, %23
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %32 = bitcast i64* %31 to i32*
  store i32 0, i32* %32, align 8, !tbaa !344
  %33 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %34 = bitcast %struct.gzFile_s* %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !332
  %36 = icmp eq i8* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = load i32, i32* %9, align 4, !tbaa !345
  %39 = icmp eq i32 %38, -4
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @free(i8* noundef nonnull %35) #25
  br label %41

41:                                               ; preds = %40, %37
  store i8* null, i8** %34, align 8, !tbaa !332
  br label %42

42:                                               ; preds = %30, %41
  store i32 0, i32* %9, align 4, !tbaa !345
  %43 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  store i64 0, i64* %43, align 8, !tbaa !346
  %44 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %45 = bitcast i64* %44 to i32*
  store i32 0, i32* %45, align 8, !tbaa !347
  br label %46

46:                                               ; preds = %11, %3, %8, %1, %42
  %47 = phi i32 [ 0, %42 ], [ -1, %1 ], [ -1, %8 ], [ -1, %3 ], [ -1, %11 ]
  ret i32 %47
}

; Function Attrs: nounwind uwtable
define i64 @gzseek64(%struct.gzFile_s* noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %114, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !327
  switch i32 %8, label %114 [
    i32 7247, label %9
    i32 31153, label %9
  ]

9:                                                ; preds = %5, %5
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %11 = load i32, i32* %10, align 4, !tbaa !345
  switch i32 %11, label %114 [
    i32 0, label %12
    i32 -5, label %12
  ]

12:                                               ; preds = %9, %9
  %13 = icmp ult i32 %2, 2
  br i1 %13, label %14, label %114

14:                                               ; preds = %12
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8, !tbaa !346
  %19 = sub nsw i64 %1, %18
  br label %30

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %22 = bitcast i64* %21 to i32*
  %23 = load i32, i32* %22, align 8, !tbaa !344
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !349
  %29 = add nsw i64 %28, %1
  br label %30

30:                                               ; preds = %20, %25, %16
  %31 = phi i64 [ %19, %16 ], [ %29, %25 ], [ %1, %20 ]
  %32 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %33 = bitcast i64* %32 to i32*
  store i32 0, i32* %33, align 8, !tbaa !344
  %34 = icmp eq i32 %8, 7247
  br i1 %34, label %35, label %74

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 9
  %37 = load i32, i32* %36, align 4, !tbaa !342
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %72

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8, !tbaa !346
  %42 = add nsw i64 %41, %31
  %43 = icmp sgt i64 %42, -1
  br i1 %43, label %44, label %72

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 2
  %46 = load i32, i32* %45, align 4, !tbaa !338
  %47 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %48 = load i32, i32* %47, align 8, !tbaa !339
  %49 = zext i32 %48 to i64
  %50 = sub nsw i64 %31, %49
  %51 = tail call i64 @lseek64(i32 noundef %46, i64 noundef %50, i32 noundef 1) #25
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %114, label %53

53:                                               ; preds = %44
  store i32 0, i32* %47, align 8, !tbaa !339
  %54 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %55 = bitcast i8** %54 to i32*
  store i32 0, i32* %55, align 8, !tbaa !340
  %56 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 12
  store i32 0, i32* %56, align 4, !tbaa !341
  store i32 0, i32* %33, align 8, !tbaa !344
  %57 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %58 = bitcast %struct.gzFile_s* %57 to i8**
  %59 = load i8*, i8** %58, align 8, !tbaa !332
  %60 = icmp eq i8* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %53
  %62 = load i32, i32* %10, align 4, !tbaa !345
  %63 = icmp eq i32 %62, -4
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  tail call void @free(i8* noundef nonnull %59) #25
  br label %65

65:                                               ; preds = %64, %61
  store i8* null, i8** %58, align 8, !tbaa !332
  br label %66

66:                                               ; preds = %53, %65
  store i32 0, i32* %10, align 4, !tbaa !345
  %67 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %68 = getelementptr inbounds i8*, i8** %67, i64 1
  %69 = bitcast i8** %68 to i32*
  store i32 0, i32* %69, align 8, !tbaa !347
  %70 = load i64, i64* %40, align 8, !tbaa !346
  %71 = add nsw i64 %70, %31
  store i64 %71, i64* %40, align 8, !tbaa !346
  br label %114

72:                                               ; preds = %39, %35
  %73 = icmp slt i64 %31, 0
  br i1 %73, label %76, label %87

74:                                               ; preds = %30
  %75 = icmp slt i64 %31, 0
  br i1 %75, label %114, label %104

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %78 = load i64, i64* %77, align 8, !tbaa !346
  %79 = add nsw i64 %78, %31
  %80 = icmp slt i64 %79, 0
  br i1 %80, label %114, label %81

81:                                               ; preds = %76
  %82 = tail call i32 @gzrewind(%struct.gzFile_s* noundef nonnull %0)
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %114, label %84

84:                                               ; preds = %81
  %85 = load i32, i32* %7, align 8, !tbaa !327
  %86 = icmp eq i32 %85, 7247
  br i1 %86, label %87, label %104

87:                                               ; preds = %72, %84
  %88 = phi i64 [ %79, %84 ], [ %31, %72 ]
  %89 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8, !tbaa !339
  %91 = zext i32 %90 to i64
  %92 = icmp ult i64 %88, %91
  %93 = trunc i64 %88 to i32
  %94 = select i1 %92, i32 %93, i32 %90
  %95 = sub i32 %90, %94
  store i32 %95, i32* %89, align 8, !tbaa !339
  %96 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %97 = load i8*, i8** %96, align 8, !tbaa !350
  %98 = zext i32 %94 to i64
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  store i8* %99, i8** %96, align 8, !tbaa !350
  %100 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %101 = load i64, i64* %100, align 8, !tbaa !346
  %102 = add nsw i64 %101, %98
  store i64 %102, i64* %100, align 8, !tbaa !346
  %103 = sub nsw i64 %88, %98
  br label %104

104:                                              ; preds = %74, %87, %84
  %105 = phi i64 [ %103, %87 ], [ %79, %84 ], [ %31, %74 ]
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  store i32 1, i32* %33, align 8, !tbaa !344
  %108 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %109 = bitcast i8** %108 to i64*
  store i64 %105, i64* %109, align 8, !tbaa !349
  br label %110

110:                                              ; preds = %107, %104
  %111 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %112 = load i64, i64* %111, align 8, !tbaa !346
  %113 = add nsw i64 %112, %105
  br label %114

114:                                              ; preds = %74, %81, %76, %44, %12, %9, %5, %3, %110, %66
  %115 = phi i64 [ %71, %66 ], [ %113, %110 ], [ -1, %3 ], [ -1, %5 ], [ -1, %9 ], [ -1, %12 ], [ -1, %44 ], [ -1, %76 ], [ -1, %81 ], [ -1, %74 ]
  ret i64 %115
}

; Function Attrs: nounwind uwtable
define hidden void @gz_error(%struct.gz_state* nocapture noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %5 = load i8*, i8** %4, align 8, !tbaa !332
  %6 = icmp eq i8* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 4, !tbaa !345
  %10 = icmp eq i32 %9, -4
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @free(i8* noundef nonnull %5) #25
  br label %12

12:                                               ; preds = %11, %7
  store i8* null, i8** %4, align 8, !tbaa !332
  br label %13

13:                                               ; preds = %12, %3
  switch i32 %1, label %14 [
    i32 -5, label %16
    i32 0, label %16
  ]

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !tbaa !339
  br label %16

16:                                               ; preds = %13, %13, %14
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 18
  store i32 %1, i32* %17, align 4, !tbaa !345
  %18 = icmp eq i8* %2, null
  %19 = icmp eq i32 %1, -4
  %20 = or i1 %19, %18
  br i1 %20, label %37, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 3
  %23 = load i8*, i8** %22, align 8, !tbaa !337
  %24 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %23) #26
  %25 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %2) #26
  %26 = add i64 %24, 3
  %27 = add i64 %26, %25
  %28 = tail call noalias i8* @malloc(i64 noundef %27) #25
  store i8* %28, i8** %4, align 8, !tbaa !332
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %21
  store i32 -4, i32* %17, align 4, !tbaa !345
  br label %37

31:                                               ; preds = %21
  %32 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %23) #26
  %33 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %2) #26
  %34 = add i64 %32, 3
  %35 = add i64 %34, %33
  %36 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef nonnull %28, i64 noundef %35, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.54, i64 0, i64 0), i8* noundef %23, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.55, i64 0, i64 0), i8* noundef nonnull %2) #25
  br label %37

37:                                               ; preds = %16, %31, %30
  ret void
}

; Function Attrs: nounwind uwtable
define i64 @gzseek(%struct.gzFile_s* noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = tail call i64 @gzseek64(%struct.gzFile_s* noundef %0, i64 noundef %1, i32 noundef %2)
  ret i64 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define i64 @gztell64(%struct.gzFile_s* noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8, !tbaa !327
  switch i32 %5, label %20 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8, !tbaa !346
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8, !tbaa !344
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !349
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i64 [ %16, %13 ], [ 0, %6 ]
  %19 = add nsw i64 %18, %8
  br label %20

20:                                               ; preds = %3, %1, %17
  %21 = phi i64 [ %19, %17 ], [ -1, %1 ], [ -1, %3 ]
  ret i64 %21
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define i64 @gztell(%struct.gzFile_s* noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8, !tbaa !327
  switch i32 %5, label %20 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8, !tbaa !346
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8, !tbaa !344
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !349
  br label %17

17:                                               ; preds = %13, %6
  %18 = phi i64 [ %16, %13 ], [ 0, %6 ]
  %19 = add nsw i64 %18, %8
  br label %20

20:                                               ; preds = %1, %3, %17
  %21 = phi i64 [ %19, %17 ], [ -1, %1 ], [ -1, %3 ]
  ret i64 %21
}

; Function Attrs: nounwind uwtable
define i64 @gzoffset64(%struct.gzFile_s* noundef readonly %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8, !tbaa !327
  switch i32 %5, label %22 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4, !tbaa !338
  %10 = tail call i64 @lseek64(i32 noundef %9, i64 noundef 0, i32 noundef 1) #25
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %22, label %12

12:                                               ; preds = %6
  %13 = load i32, i32* %4, align 8, !tbaa !327
  %14 = icmp eq i32 %13, 7247
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %17 = getelementptr inbounds i8*, i8** %16, i64 1
  %18 = bitcast i8** %17 to i32*
  %19 = load i32, i32* %18, align 8, !tbaa !347
  %20 = zext i32 %19 to i64
  %21 = sub nsw i64 %10, %20
  br label %22

22:                                               ; preds = %12, %15, %6, %3, %1
  %23 = phi i64 [ -1, %1 ], [ -1, %3 ], [ -1, %6 ], [ %21, %15 ], [ %10, %12 ]
  ret i64 %23
}

; Function Attrs: nounwind uwtable
define i64 @gzoffset(%struct.gzFile_s* noundef readonly %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8, !tbaa !327
  switch i32 %5, label %22 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4, !tbaa !338
  %10 = tail call i64 @lseek64(i32 noundef %9, i64 noundef 0, i32 noundef 1) #25
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %22, label %12

12:                                               ; preds = %6
  %13 = load i32, i32* %4, align 8, !tbaa !327
  %14 = icmp eq i32 %13, 7247
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %17 = getelementptr inbounds i8*, i8** %16, i64 1
  %18 = bitcast i8** %17 to i32*
  %19 = load i32, i32* %18, align 8, !tbaa !347
  %20 = zext i32 %19 to i64
  %21 = sub nsw i64 %10, %20
  br label %22

22:                                               ; preds = %1, %3, %6, %12, %15
  %23 = phi i64 [ -1, %1 ], [ -1, %3 ], [ -1, %6 ], [ %21, %15 ], [ %10, %12 ]
  ret i64 %23
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define i32 @gzeof(%struct.gzFile_s* noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8, !tbaa !327
  %6 = icmp eq i32 %5, 7247
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %8, i64 0, i32 12
  %10 = load i32, i32* %9, align 4, !tbaa !341
  br label %11

11:                                               ; preds = %3, %7, %1
  %12 = phi i32 [ 0, %1 ], [ %10, %7 ], [ 0, %3 ]
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define i8* @gzerror(%struct.gzFile_s* noundef readonly %0, i32* noundef writeonly %1) local_unnamed_addr #9 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8, !tbaa !327
  switch i32 %7, label %23 [
    i32 7247, label %8
    i32 31153, label %8
  ]

8:                                                ; preds = %4, %4
  %9 = icmp eq i32* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 18
  %12 = load i32, i32* %11, align 4, !tbaa !345
  store i32 %12, i32* %1, align 4, !tbaa !16
  br label %13

13:                                               ; preds = %10, %8
  %14 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 18
  %15 = load i32, i32* %14, align 4, !tbaa !345
  %16 = icmp eq i32 %15, -4
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %19 = bitcast %struct.gzFile_s* %18 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !332
  %21 = icmp eq i8* %20, null
  %22 = select i1 %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.56, i64 0, i64 0), i8* %20
  br label %23

23:                                               ; preds = %17, %13, %4, %2
  %24 = phi i8* [ null, %2 ], [ null, %4 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.57, i64 0, i64 0), %13 ], [ %22, %17 ]
  ret i8* %24
}

; Function Attrs: mustprogress nounwind uwtable willreturn
define void @gzclearerr(%struct.gzFile_s* noundef %0) local_unnamed_addr #16 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8, !tbaa !327
  switch i32 %6, label %24 [
    i32 7247, label %7
    i32 31153, label %11
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %9 = bitcast i8** %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !340
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 12
  store i32 0, i32* %10, align 4, !tbaa !341
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %13 = bitcast %struct.gzFile_s* %12 to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !332
  %15 = icmp eq i8* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 18
  %18 = load i32, i32* %17, align 4, !tbaa !345
  %19 = icmp eq i32 %18, -4
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @free(i8* noundef nonnull %14) #25
  br label %21

21:                                               ; preds = %20, %16
  store i8* null, i8** %13, align 8, !tbaa !332
  br label %22

22:                                               ; preds = %11, %21
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 18
  store i32 0, i32* %23, align 4, !tbaa !345
  br label %24

24:                                               ; preds = %3, %1, %22
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @gzread(%struct.gzFile_s* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !327
  %9 = icmp eq i32 %8, 7247
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %12 = load i32, i32* %11, align 4, !tbaa !345
  switch i32 %12, label %24 [
    i32 0, label %13
    i32 -5, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = icmp slt i32 %2, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @gz_error(%struct.gz_state* noundef nonnull %6, i32 noundef -2, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0)) #25
  br label %24

16:                                               ; preds = %13
  %17 = zext i32 %2 to i64
  %18 = tail call fastcc i64 @gz_read(%struct.gz_state* noundef nonnull %6, i8* noundef %1, i64 noundef %17)
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = load i32, i32* %11, align 4, !tbaa !345
  switch i32 %22, label %24 [
    i32 0, label %23
    i32 -5, label %23
  ]

23:                                               ; preds = %21, %21, %16
  br label %24

24:                                               ; preds = %21, %5, %10, %3, %23, %15
  %25 = phi i32 [ -1, %15 ], [ %19, %23 ], [ -1, %3 ], [ -1, %10 ], [ -1, %5 ], [ -1, %21 ]
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @gz_read(%struct.gz_state* noundef %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %137, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8, !tbaa !344
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %47, label %9

9:                                                ; preds = %5
  store i32 0, i32* %6, align 8, !tbaa !344
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 16
  %11 = load i64, i64* %10, align 8, !tbaa !349
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  br label %19

19:                                               ; preds = %44, %14
  %20 = phi i64 [ %11, %14 ], [ %45, %44 ]
  %21 = load i32, i32* %15, align 8, !tbaa !339
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  %25 = icmp slt i64 %20, %24
  %26 = trunc i64 %20 to i32
  %27 = select i1 %25, i32 %26, i32 %21
  %28 = sub i32 %21, %27
  store i32 %28, i32* %15, align 8, !tbaa !339
  %29 = load i8*, i8** %16, align 8, !tbaa !350
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  store i8* %31, i8** %16, align 8, !tbaa !350
  %32 = load i64, i64* %17, align 8, !tbaa !346
  %33 = add nsw i64 %32, %30
  store i64 %33, i64* %17, align 8, !tbaa !346
  %34 = sub nsw i64 %20, %30
  br label %44

35:                                               ; preds = %19
  %36 = load i32, i32* %18, align 8, !tbaa !340
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %12, align 8, !tbaa !347
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %38, %35
  %42 = tail call fastcc i32 @gz_fetch(%struct.gz_state* noundef nonnull %0) #25
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %137, label %44

44:                                               ; preds = %41, %23
  %45 = phi i64 [ %34, %23 ], [ %20, %41 ]
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %19, !llvm.loop !351

47:                                               ; preds = %38, %44, %9, %5
  %48 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %51 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %52 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  %53 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %54 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 4
  %55 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 3
  %56 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %57 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %58

58:                                               ; preds = %132, %47
  %59 = phi i8* [ %1, %47 ], [ %133, %132 ]
  %60 = phi i64 [ %2, %47 ], [ %134, %132 ]
  %61 = phi i64 [ 0, %47 ], [ %135, %132 ]
  %62 = icmp ult i64 %60, 4294967295
  %63 = select i1 %62, i64 %60, i64 4294967295
  %64 = trunc i64 %63 to i32
  %65 = load i32, i32* %48, align 8, !tbaa !339
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %58
  %68 = icmp ult i32 %65, %64
  %69 = select i1 %68, i32 %65, i32 %64
  %70 = load i8*, i8** %49, align 8, !tbaa !350
  %71 = zext i32 %69 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %70, i64 %71, i1 false)
  %72 = load i8*, i8** %49, align 8, !tbaa !350
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  store i8* %73, i8** %49, align 8, !tbaa !350
  %74 = load i32, i32* %48, align 8, !tbaa !339
  %75 = sub i32 %74, %69
  store i32 %75, i32* %48, align 8, !tbaa !339
  br label %124

76:                                               ; preds = %58
  %77 = load i32, i32* %50, align 8, !tbaa !340
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %51, align 8, !tbaa !347
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 12
  store i32 1, i32* %83, align 4, !tbaa !341
  br label %137

84:                                               ; preds = %79, %76
  %85 = load i32, i32* %52, align 4, !tbaa !342
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %53, align 8, !tbaa !330
  %89 = shl i32 %88, 1
  %90 = icmp ugt i32 %89, %64
  br i1 %90, label %91, label %94

91:                                               ; preds = %87, %84
  %92 = tail call fastcc i32 @gz_fetch(%struct.gz_state* noundef nonnull %0)
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %137, label %132

94:                                               ; preds = %87
  %95 = icmp eq i32 %85, 1
  br i1 %95, label %96, label %119

96:                                               ; preds = %94, %108
  %97 = phi i32 [ %109, %108 ], [ 0, %94 ]
  %98 = sub i32 %64, %97
  %99 = icmp ult i32 %98, 1073741824
  %100 = select i1 %99, i32 %98, i32 1073741824
  %101 = load i32, i32* %56, align 4, !tbaa !338
  %102 = zext i32 %97 to i64
  %103 = getelementptr inbounds i8, i8* %59, i64 %102
  %104 = zext i32 %100 to i64
  %105 = tail call i64 @read(i32 noundef %101, i8* noundef %103, i64 noundef %104) #25
  %106 = trunc i64 %105 to i32
  %107 = icmp slt i32 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %96
  %109 = add i32 %97, %106
  %110 = icmp ult i32 %109, %64
  br i1 %110, label %96, label %124, !llvm.loop !352

111:                                              ; preds = %96
  %112 = and i64 %105, 2147483648
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  store i32 1, i32* %50, align 8, !tbaa !340
  br label %124

115:                                              ; preds = %111
  %116 = tail call i32* @__errno_location() #27
  %117 = load i32, i32* %116, align 4, !tbaa !16
  %118 = tail call i8* @strerror(i32 noundef %117) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -1, i8* noundef %118) #25
  br label %137

119:                                              ; preds = %94
  store i32 %64, i32* %54, align 8, !tbaa !353
  store i8* %59, i8** %55, align 8, !tbaa !354
  %120 = tail call fastcc i32 @gz_decomp(%struct.gz_state* noundef nonnull %0)
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %137, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %48, align 8, !tbaa !339
  store i32 0, i32* %48, align 8, !tbaa !339
  br label %124

124:                                              ; preds = %108, %114, %122, %67
  %125 = phi i32 [ %123, %122 ], [ %69, %67 ], [ %97, %114 ], [ %109, %108 ]
  %126 = zext i32 %125 to i64
  %127 = sub i64 %60, %126
  %128 = getelementptr inbounds i8, i8* %59, i64 %126
  %129 = add i64 %61, %126
  %130 = load i64, i64* %57, align 8, !tbaa !346
  %131 = add nsw i64 %130, %126
  store i64 %131, i64* %57, align 8, !tbaa !346
  br label %132

132:                                              ; preds = %91, %124
  %133 = phi i8* [ %128, %124 ], [ %59, %91 ]
  %134 = phi i64 [ %127, %124 ], [ %60, %91 ]
  %135 = phi i64 [ %129, %124 ], [ %61, %91 ]
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %137, label %58, !llvm.loop !355

137:                                              ; preds = %41, %132, %119, %91, %115, %82, %3
  %138 = phi i64 [ 0, %3 ], [ 0, %115 ], [ %61, %82 ], [ %135, %132 ], [ 0, %119 ], [ 0, %91 ], [ 0, %41 ]
  ret i64 %138
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_fetch(%struct.gz_state* noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %4 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 4
  %5 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 3
  %7 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  br label %10

10:                                               ; preds = %65, %1
  %11 = load i32, i32* %2, align 4, !tbaa !342
  switch i32 %11, label %56 [
    i32 0, label %12
    i32 1, label %18
    i32 2, label %50
  ]

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @gz_look(%struct.gz_state* noundef nonnull %0)
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %66, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* %2, align 4, !tbaa !342
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %66, label %56

18:                                               ; preds = %10
  %19 = load i8*, i8** %5, align 8, !tbaa !356
  %20 = load i32, i32* %3, align 8, !tbaa !330
  %21 = shl i32 %20, 1
  store i32 0, i32* %7, align 4, !tbaa !16
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  br label %23

23:                                               ; preds = %35, %18
  %24 = phi i32 [ %37, %35 ], [ 0, %18 ]
  %25 = sub i32 %21, %24
  %26 = icmp ult i32 %25, 1073741824
  %27 = select i1 %26, i32 %25, i32 1073741824
  %28 = load i32, i32* %22, align 4, !tbaa !338
  %29 = zext i32 %24 to i64
  %30 = getelementptr inbounds i8, i8* %19, i64 %29
  %31 = zext i32 %27 to i64
  %32 = tail call i64 @read(i32 noundef %28, i8* noundef %30, i64 noundef %31) #25
  %33 = trunc i64 %32 to i32
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %39, label %35

35:                                               ; preds = %23
  %36 = load i32, i32* %7, align 4, !tbaa !16
  %37 = add i32 %36, %33
  store i32 %37, i32* %7, align 4, !tbaa !16
  %38 = icmp ult i32 %37, %21
  br i1 %38, label %23, label %47, !llvm.loop !352

39:                                               ; preds = %23
  %40 = and i64 %32, 2147483648
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  store i32 1, i32* %8, align 8, !tbaa !340
  br label %47

43:                                               ; preds = %39
  %44 = tail call i32* @__errno_location() #27
  %45 = load i32, i32* %44, align 4, !tbaa !16
  %46 = tail call i8* @strerror(i32 noundef %45) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -1, i8* noundef %46) #25
  br label %66

47:                                               ; preds = %35, %42
  %48 = load i8*, i8** %5, align 8, !tbaa !356
  %49 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  store i8* %48, i8** %49, align 8, !tbaa !350
  br label %66

50:                                               ; preds = %10
  %51 = load i32, i32* %3, align 8, !tbaa !330
  %52 = shl i32 %51, 1
  store i32 %52, i32* %4, align 8, !tbaa !86
  %53 = load i8*, i8** %5, align 8, !tbaa !356
  store i8* %53, i8** %6, align 8, !tbaa !87
  %54 = tail call fastcc i32 @gz_decomp(%struct.gz_state* noundef nonnull %0)
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %66, label %56

56:                                               ; preds = %10, %15, %50
  %57 = load i32, i32* %7, align 8, !tbaa !339
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %56
  %60 = load i32, i32* %8, align 8, !tbaa !340
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %9, align 8, !tbaa !84
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %59
  br label %10, !llvm.loop !357

66:                                               ; preds = %62, %56, %50, %15, %12, %43, %47
  %67 = phi i32 [ 0, %47 ], [ -1, %43 ], [ 0, %62 ], [ 0, %56 ], [ -1, %50 ], [ 0, %15 ], [ -1, %12 ]
  ret i32 %67
}

; Function Attrs: nofree
declare noundef i64 @read(i32 noundef, i8* nocapture noundef, i64 noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare i32* @__errno_location() local_unnamed_addr #22

; Function Attrs: nounwind
declare i8* @strerror(i32 noundef) local_unnamed_addr #21

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_decomp(%struct.gz_state* noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !86
  %5 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  br label %6

6:                                                ; preds = %27, %1
  %7 = phi i32 [ 0, %1 ], [ %19, %27 ]
  %8 = load i32, i32* %5, align 8, !tbaa !84
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = tail call fastcc i32 @gz_avail(%struct.gz_state* noundef nonnull %0)
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %46, label %13

13:                                               ; preds = %10
  %14 = load i32, i32* %5, align 8, !tbaa !84
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -5, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.59, i64 0, i64 0)) #25
  %17 = load i32, i32* %3, align 8, !tbaa !86
  br label %32

18:                                               ; preds = %6, %13
  %19 = tail call i32 @inflate(%struct.z_stream_s* noundef nonnull %2, i32 noundef 0) #25
  switch i32 %19, label %27 [
    i32 -2, label %20
    i32 2, label %20
    i32 -4, label %21
    i32 -3, label %22
  ]

20:                                               ; preds = %18, %18
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -2, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.60, i64 0, i64 0)) #25
  br label %46

21:                                               ; preds = %18
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #25
  br label %46

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 6
  %24 = load i8*, i8** %23, align 8, !tbaa !25
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.62, i64 0, i64 0), i8* %24
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -3, i8* noundef %26) #25
  br label %46

27:                                               ; preds = %18
  %28 = load i32, i32* %3, align 8, !tbaa !86
  %29 = icmp ne i32 %28, 0
  %30 = icmp ne i32 %19, 1
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %6, label %32, !llvm.loop !358

32:                                               ; preds = %27, %16
  %33 = phi i32 [ %17, %16 ], [ %28, %27 ]
  %34 = phi i32 [ %7, %16 ], [ %19, %27 ]
  %35 = sub i32 %4, %33
  %36 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 %35, i32* %36, align 8, !tbaa !339
  %37 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 3
  %38 = load i8*, i8** %37, align 8, !tbaa !87
  %39 = zext i32 %35 to i64
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  store i8* %41, i8** %42, align 8, !tbaa !350
  %43 = icmp eq i32 %34, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %32
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  store i32 0, i32* %45, align 4, !tbaa !342
  br label %46

46:                                               ; preds = %10, %32, %44, %22, %21, %20
  %47 = phi i32 [ -1, %20 ], [ -1, %21 ], [ -1, %22 ], [ 0, %44 ], [ 0, %32 ], [ -1, %10 ]
  ret i32 %47
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_avail(%struct.gz_state* noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 4, !tbaa !345
  switch i32 %4, label %234 [
    i32 0, label %5
    i32 -5, label %5
  ]

5:                                                ; preds = %1, %1
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 8, !tbaa !340
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %234

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %11 = load i32, i32* %10, align 8, !tbaa !84
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %195, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %15 = load i8*, i8** %14, align 8, !tbaa !359
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !89
  %18 = add i32 %11, -1
  %19 = zext i32 %18 to i64
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp ult i32 %18, 7
  br i1 %21, label %140, label %22

22:                                               ; preds = %13
  %23 = add i32 %11, -1
  %24 = zext i32 %23 to i64
  %25 = add nuw nsw i64 %24, 1
  %26 = getelementptr i8, i8* %15, i64 %25
  %27 = getelementptr i8, i8* %17, i64 %25
  %28 = icmp ult i8* %15, %27
  %29 = icmp ult i8* %17, %26
  %30 = and i1 %28, %29
  br i1 %30, label %140, label %31

31:                                               ; preds = %22
  %32 = icmp ult i32 %18, 31
  br i1 %32, label %119, label %33

33:                                               ; preds = %31
  %34 = and i64 %20, 8589934560
  %35 = add nsw i64 %34, -32
  %36 = lshr exact i64 %35, 5
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp ult i64 %35, 96
  br i1 %39, label %91, label %40

40:                                               ; preds = %33
  %41 = and i64 %37, 1152921504606846972
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %88, %42 ]
  %44 = phi i64 [ 0, %40 ], [ %89, %42 ]
  %45 = getelementptr i8, i8* %15, i64 %43
  %46 = getelementptr i8, i8* %17, i64 %43
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1, !tbaa !4, !alias.scope !360
  %49 = getelementptr i8, i8* %46, i64 16
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !tbaa !4, !alias.scope !360
  %52 = bitcast i8* %45 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %52, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %53 = getelementptr i8, i8* %45, i64 16
  %54 = bitcast i8* %53 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %54, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %55 = or i64 %43, 32
  %56 = getelementptr i8, i8* %15, i64 %55
  %57 = getelementptr i8, i8* %17, i64 %55
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !tbaa !4, !alias.scope !360
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !tbaa !4, !alias.scope !360
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %66 = or i64 %43, 64
  %67 = getelementptr i8, i8* %15, i64 %66
  %68 = getelementptr i8, i8* %17, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !tbaa !4, !alias.scope !360
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !tbaa !4, !alias.scope !360
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %77 = or i64 %43, 96
  %78 = getelementptr i8, i8* %15, i64 %77
  %79 = getelementptr i8, i8* %17, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !tbaa !4, !alias.scope !360
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !tbaa !4, !alias.scope !360
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %88 = add nuw i64 %43, 128
  %89 = add i64 %44, 4
  %90 = icmp eq i64 %89, %41
  br i1 %90, label %91, label %42, !llvm.loop !365

91:                                               ; preds = %42, %33
  %92 = phi i64 [ 0, %33 ], [ %88, %42 ]
  %93 = icmp eq i64 %38, 0
  br i1 %93, label %110, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %107, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %108, %94 ], [ 0, %91 ]
  %97 = getelementptr i8, i8* %15, i64 %95
  %98 = getelementptr i8, i8* %17, i64 %95
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !tbaa !4, !alias.scope !360
  %101 = getelementptr i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !tbaa !4, !alias.scope !360
  %104 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %104, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %105 = getelementptr i8, i8* %97, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %106, align 1, !tbaa !4, !alias.scope !363, !noalias !360
  %107 = add nuw i64 %95, 32
  %108 = add i64 %96, 1
  %109 = icmp eq i64 %108, %38
  br i1 %109, label %110, label %94, !llvm.loop !366

110:                                              ; preds = %94, %91
  %111 = icmp eq i64 %20, %34
  br i1 %111, label %193, label %112

112:                                              ; preds = %110
  %113 = trunc i64 %34 to i32
  %114 = sub i32 %11, %113
  %115 = getelementptr i8, i8* %17, i64 %34
  %116 = getelementptr i8, i8* %15, i64 %34
  %117 = and i64 %20, 24
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %140, label %119

119:                                              ; preds = %31, %112
  %120 = phi i64 [ %34, %112 ], [ 0, %31 ]
  %121 = add i32 %11, -1
  %122 = zext i32 %121 to i64
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 8589934584
  %125 = getelementptr i8, i8* %15, i64 %124
  %126 = getelementptr i8, i8* %17, i64 %124
  %127 = trunc i64 %124 to i32
  %128 = sub i32 %11, %127
  br label %129

129:                                              ; preds = %129, %119
  %130 = phi i64 [ %120, %119 ], [ %136, %129 ]
  %131 = getelementptr i8, i8* %15, i64 %130
  %132 = getelementptr i8, i8* %17, i64 %130
  %133 = bitcast i8* %132 to <8 x i8>*
  %134 = load <8 x i8>, <8 x i8>* %133, align 1, !tbaa !4
  %135 = bitcast i8* %131 to <8 x i8>*
  store <8 x i8> %134, <8 x i8>* %135, align 1, !tbaa !4
  %136 = add nuw i64 %130, 8
  %137 = icmp eq i64 %136, %124
  br i1 %137, label %138, label %129, !llvm.loop !367

138:                                              ; preds = %129
  %139 = icmp eq i64 %123, %124
  br i1 %139, label %193, label %140

140:                                              ; preds = %22, %13, %112, %138
  %141 = phi i8* [ %15, %13 ], [ %15, %22 ], [ %116, %112 ], [ %125, %138 ]
  %142 = phi i8* [ %17, %13 ], [ %17, %22 ], [ %115, %112 ], [ %126, %138 ]
  %143 = phi i32 [ %11, %13 ], [ %11, %22 ], [ %114, %112 ], [ %128, %138 ]
  %144 = add i32 %143, -1
  %145 = and i32 %143, 7
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i8* [ %154, %147 ], [ %141, %140 ]
  %149 = phi i8* [ %152, %147 ], [ %142, %140 ]
  %150 = phi i32 [ %155, %147 ], [ %143, %140 ]
  %151 = phi i32 [ %156, %147 ], [ 0, %140 ]
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = load i8, i8* %149, align 1, !tbaa !4
  %154 = getelementptr inbounds i8, i8* %148, i64 1
  store i8 %153, i8* %148, align 1, !tbaa !4
  %155 = add i32 %150, -1
  %156 = add i32 %151, 1
  %157 = icmp eq i32 %156, %145
  br i1 %157, label %158, label %147, !llvm.loop !368

158:                                              ; preds = %147, %140
  %159 = phi i8* [ %141, %140 ], [ %154, %147 ]
  %160 = phi i8* [ %142, %140 ], [ %152, %147 ]
  %161 = phi i32 [ %143, %140 ], [ %155, %147 ]
  %162 = icmp ult i32 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i8* [ %190, %163 ], [ %159, %158 ]
  %165 = phi i8* [ %188, %163 ], [ %160, %158 ]
  %166 = phi i32 [ %191, %163 ], [ %161, %158 ]
  %167 = getelementptr inbounds i8, i8* %165, i64 1
  %168 = load i8, i8* %165, align 1, !tbaa !4
  %169 = getelementptr inbounds i8, i8* %164, i64 1
  store i8 %168, i8* %164, align 1, !tbaa !4
  %170 = getelementptr inbounds i8, i8* %165, i64 2
  %171 = load i8, i8* %167, align 1, !tbaa !4
  %172 = getelementptr inbounds i8, i8* %164, i64 2
  store i8 %171, i8* %169, align 1, !tbaa !4
  %173 = getelementptr inbounds i8, i8* %165, i64 3
  %174 = load i8, i8* %170, align 1, !tbaa !4
  %175 = getelementptr inbounds i8, i8* %164, i64 3
  store i8 %174, i8* %172, align 1, !tbaa !4
  %176 = getelementptr inbounds i8, i8* %165, i64 4
  %177 = load i8, i8* %173, align 1, !tbaa !4
  %178 = getelementptr inbounds i8, i8* %164, i64 4
  store i8 %177, i8* %175, align 1, !tbaa !4
  %179 = getelementptr inbounds i8, i8* %165, i64 5
  %180 = load i8, i8* %176, align 1, !tbaa !4
  %181 = getelementptr inbounds i8, i8* %164, i64 5
  store i8 %180, i8* %178, align 1, !tbaa !4
  %182 = getelementptr inbounds i8, i8* %165, i64 6
  %183 = load i8, i8* %179, align 1, !tbaa !4
  %184 = getelementptr inbounds i8, i8* %164, i64 6
  store i8 %183, i8* %181, align 1, !tbaa !4
  %185 = getelementptr inbounds i8, i8* %165, i64 7
  %186 = load i8, i8* %182, align 1, !tbaa !4
  %187 = getelementptr inbounds i8, i8* %164, i64 7
  store i8 %186, i8* %184, align 1, !tbaa !4
  %188 = getelementptr inbounds i8, i8* %165, i64 8
  %189 = load i8, i8* %185, align 1, !tbaa !4
  %190 = getelementptr inbounds i8, i8* %164, i64 8
  store i8 %189, i8* %187, align 1, !tbaa !4
  %191 = add i32 %166, -8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %163, !llvm.loop !369

193:                                              ; preds = %158, %163, %138, %110
  %194 = load i32, i32* %10, align 8, !tbaa !84
  br label %195

195:                                              ; preds = %193, %9
  %196 = phi i32 [ %194, %193 ], [ 0, %9 ]
  %197 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %198 = load i8*, i8** %197, align 8, !tbaa !359
  %199 = zext i32 %196 to i64
  %200 = getelementptr inbounds i8, i8* %198, i64 %199
  %201 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %202 = load i32, i32* %201, align 8, !tbaa !330
  %203 = sub i32 %202, %196
  %204 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  br label %205

205:                                              ; preds = %217, %195
  %206 = phi i32 [ 0, %195 ], [ %218, %217 ]
  %207 = sub i32 %203, %206
  %208 = icmp ult i32 %207, 1073741824
  %209 = select i1 %208, i32 %207, i32 1073741824
  %210 = load i32, i32* %204, align 4, !tbaa !338
  %211 = zext i32 %206 to i64
  %212 = getelementptr inbounds i8, i8* %200, i64 %211
  %213 = zext i32 %209 to i64
  %214 = tail call i64 @read(i32 noundef %210, i8* noundef %212, i64 noundef %213) #25
  %215 = trunc i64 %214 to i32
  %216 = icmp slt i32 %215, 1
  br i1 %216, label %220, label %217

217:                                              ; preds = %205
  %218 = add i32 %206, %215
  %219 = icmp ult i32 %218, %203
  br i1 %219, label %205, label %228, !llvm.loop !352

220:                                              ; preds = %205
  %221 = and i64 %214, 2147483648
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  store i32 1, i32* %6, align 8, !tbaa !340
  br label %228

224:                                              ; preds = %220
  %225 = tail call i32* @__errno_location() #27
  %226 = load i32, i32* %225, align 4, !tbaa !16
  %227 = tail call i8* @strerror(i32 noundef %226) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -1, i8* noundef %227) #25
  br label %234

228:                                              ; preds = %217, %223
  %229 = phi i32 [ %206, %223 ], [ %218, %217 ]
  %230 = load i32, i32* %10, align 8, !tbaa !84
  %231 = add i32 %230, %229
  store i32 %231, i32* %10, align 8, !tbaa !84
  %232 = load i8*, i8** %197, align 8, !tbaa !359
  %233 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  store i8* %232, i8** %233, align 8, !tbaa !89
  br label %234

234:                                              ; preds = %224, %5, %228, %1
  %235 = phi i32 [ -1, %1 ], [ -1, %224 ], [ 0, %228 ], [ 0, %5 ]
  ret i32 %235
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_look(%struct.gz_state* noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4, !tbaa !331
  %9 = zext i32 %8 to i64
  %10 = tail call noalias i8* @malloc(i64 noundef %9) #25
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  store i8* %10, i8** %11, align 8, !tbaa !359
  %12 = shl i32 %8, 1
  %13 = zext i32 %12 to i64
  %14 = tail call noalias i8* @malloc(i64 noundef %13) #25
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  store i8* %14, i8** %15, align 8, !tbaa !356
  %16 = icmp eq i8* %10, null
  %17 = icmp eq i8* %14, null
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %6
  tail call void @free(i8* noundef %14) #25
  tail call void @free(i8* noundef %10) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #25
  br label %71

20:                                               ; preds = %6
  store i32 %8, i32* %3, align 8, !tbaa !330
  %21 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 8
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  store i32 0, i32* %22, align 8, !tbaa !347
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  store i8* null, i8** %23, align 8, !tbaa !370
  %24 = bitcast i8* (i8*, i32, i32)** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %24, i8 0, i64 24, i1 false)
  %25 = tail call i32 @inflateInit2_(%struct.z_stream_s* noundef nonnull %2, i32 noundef 31, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.63, i64 0, i64 0), i32 noundef 112) #25
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = load i8*, i8** %15, align 8, !tbaa !356
  tail call void @free(i8* noundef %28) #25
  %29 = load i8*, i8** %11, align 8, !tbaa !359
  tail call void @free(i8* noundef %29) #25
  store i32 0, i32* %3, align 8, !tbaa !330
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #25
  br label %71

30:                                               ; preds = %20, %1
  %31 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %32 = load i32, i32* %31, align 8, !tbaa !84
  %33 = icmp ult i32 %32, 2
  br i1 %33, label %34, label %39

34:                                               ; preds = %30
  %35 = tail call fastcc i32 @gz_avail(%struct.gz_state* noundef nonnull %0)
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %71, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %31, align 8, !tbaa !84
  switch i32 %38, label %39 [
    i32 0, label %71
    i32 1, label %53
  ]

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %32, %30 ], [ %38, %37 ]
  %41 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8, !tbaa !89
  %43 = load i8, i8* %42, align 1, !tbaa !4
  %44 = icmp eq i8 %43, 31
  br i1 %44, label %45, label %53

45:                                               ; preds = %39
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1, !tbaa !4
  %48 = icmp eq i8 %47, -117
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = tail call i32 @inflateReset(%struct.z_stream_s* noundef nonnull %2) #25
  %51 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  store i32 2, i32* %51, align 4, !tbaa !342
  %52 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  store i32 0, i32* %52, align 8, !tbaa !335
  br label %71

53:                                               ; preds = %37, %45, %39
  %54 = phi i32 [ %40, %45 ], [ %40, %39 ], [ %38, %37 ]
  %55 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  %56 = load i32, i32* %55, align 8, !tbaa !335
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  store i32 0, i32* %31, align 8, !tbaa !84
  %59 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  store i32 1, i32* %59, align 8, !tbaa !340
  %60 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %60, align 8, !tbaa !339
  br label %71

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  %63 = load i8*, i8** %62, align 8, !tbaa !356
  %64 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  store i8* %63, i8** %64, align 8, !tbaa !350
  %65 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8, !tbaa !89
  %67 = zext i32 %54 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %66, i64 %67, i1 false)
  %68 = load i32, i32* %31, align 8, !tbaa !84
  %69 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 %68, i32* %69, align 8, !tbaa !339
  store i32 0, i32* %31, align 8, !tbaa !84
  %70 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  store i32 1, i32* %70, align 4, !tbaa !342
  store i32 1, i32* %55, align 8, !tbaa !335
  br label %71

71:                                               ; preds = %37, %34, %61, %58, %49, %27, %19
  %72 = phi i32 [ -1, %19 ], [ -1, %27 ], [ 0, %49 ], [ 0, %58 ], [ 0, %61 ], [ -1, %34 ], [ %38, %37 ]
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define i64 @gzfread(i8* noundef %0, i64 noundef %1, i64 noundef %2, %struct.gzFile_s* noundef %3) local_unnamed_addr #3 {
  %5 = icmp eq %struct.gzFile_s* %3, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.gzFile_s* %3 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %3, i64 1, i32 0
  %9 = load i32, i32* %8, align 8, !tbaa !327
  %10 = icmp eq i32 %9, 7247
  br i1 %10, label %11, label %26

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 18
  %13 = load i32, i32* %12, align 4, !tbaa !345
  switch i32 %13, label %26 [
    i32 0, label %14
    i32 -5, label %14
  ]

14:                                               ; preds = %11, %11
  %15 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 %2)
  %16 = extractvalue { i64, i1 } %15, 0
  %17 = icmp eq i64 %1, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = extractvalue { i64, i1 } %15, 1
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  tail call void @gz_error(%struct.gz_state* noundef nonnull %7, i32 noundef -2, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.64, i64 0, i64 0)) #25
  br label %26

21:                                               ; preds = %18, %14
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call fastcc i64 @gz_read(%struct.gz_state* noundef nonnull %7, i8* noundef %0, i64 noundef %16)
  %25 = udiv i64 %24, %1
  br label %26

26:                                               ; preds = %23, %21, %6, %11, %4, %20
  %27 = phi i64 [ 0, %20 ], [ 0, %4 ], [ 0, %11 ], [ 0, %6 ], [ %25, %23 ], [ 0, %21 ]
  ret i64 %27
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind uwtable
define i32 @gzgetc(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = alloca [1 x i8], align 1
  %3 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !327
  %9 = icmp eq i32 %8, 7247
  br i1 %9, label %10, label %33

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %12 = load i32, i32* %11, align 4, !tbaa !345
  switch i32 %12, label %33 [
    i32 0, label %13
    i32 -5, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 8, !tbaa !339
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = add i32 %15, -1
  store i32 %18, i32* %14, align 8, !tbaa !339
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8, !tbaa !346
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8, !tbaa !346
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8, !tbaa !350
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %22, align 8, !tbaa !350
  %25 = load i8, i8* %23, align 1, !tbaa !4
  %26 = zext i8 %25 to i32
  br label %33

27:                                               ; preds = %13
  %28 = call fastcc i64 @gz_read(%struct.gz_state* noundef nonnull %6, i8* noundef nonnull %3, i64 noundef 1)
  %29 = icmp eq i64 %28, 0
  %30 = load i8, i8* %3, align 1
  %31 = zext i8 %30 to i32
  %32 = select i1 %29, i32 -1, i32 %31
  br label %33

33:                                               ; preds = %5, %10, %1, %27, %17
  %34 = phi i32 [ %26, %17 ], [ %32, %27 ], [ -1, %1 ], [ -1, %10 ], [ -1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define i32 @gzgetc_(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = alloca [1 x i8], align 1
  %3 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !327
  %9 = icmp eq i32 %8, 7247
  br i1 %9, label %10, label %33

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %12 = load i32, i32* %11, align 4, !tbaa !345
  switch i32 %12, label %33 [
    i32 0, label %13
    i32 -5, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 8, !tbaa !339
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = add i32 %15, -1
  store i32 %18, i32* %14, align 8, !tbaa !339
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8, !tbaa !346
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8, !tbaa !346
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8, !tbaa !350
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %22, align 8, !tbaa !350
  %25 = load i8, i8* %23, align 1, !tbaa !4
  %26 = zext i8 %25 to i32
  br label %33

27:                                               ; preds = %13
  %28 = call fastcc i64 @gz_read(%struct.gz_state* noundef nonnull %6, i8* noundef nonnull %3, i64 noundef 1) #25
  %29 = icmp eq i64 %28, 0
  %30 = load i8, i8* %3, align 1
  %31 = zext i8 %30 to i32
  %32 = select i1 %29, i32 -1, i32 %31
  br label %33

33:                                               ; preds = %1, %5, %10, %17, %27
  %34 = phi i32 [ %26, %17 ], [ %32, %27 ], [ -1, %1 ], [ -1, %10 ], [ -1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define i32 @gzungetc(i32 noundef %0, %struct.gzFile_s* noundef %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.gzFile_s* %1, null
  br i1 %3, label %132, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %1 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 1, i32 0
  %7 = load i32, i32* %6, align 8, !tbaa !327
  %8 = icmp eq i32 %7, 7247
  br i1 %8, label %9, label %132

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 9
  %11 = load i32, i32* %10, align 4, !tbaa !342
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 8, !tbaa !339
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = tail call fastcc i32 @gz_look(%struct.gz_state* noundef nonnull %5)
  %19 = load i32, i32* %6, align 8, !tbaa !327
  %20 = icmp eq i32 %19, 7247
  br i1 %20, label %21, label %132

21:                                               ; preds = %9, %13, %17
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 18
  %23 = load i32, i32* %22, align 4, !tbaa !345
  switch i32 %23, label %132 [
    i32 0, label %24
    i32 -5, label %24
  ]

24:                                               ; preds = %21, %21
  %25 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 4, i32 2
  %26 = bitcast i64* %25 to i32*
  %27 = load i32, i32* %26, align 8, !tbaa !344
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %72, label %29

29:                                               ; preds = %24
  store i32 0, i32* %26, align 8, !tbaa !344
  %30 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 4, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !349
  %33 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 5, i32 2
  %34 = bitcast i64* %33 to i32*
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %70, label %36

36:                                               ; preds = %29
  %37 = getelementptr %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 0
  %38 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 1
  %39 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 2
  %40 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 3, i32 1
  %41 = bitcast i8** %40 to i32*
  br label %42

42:                                               ; preds = %67, %36
  %43 = phi i64 [ %32, %36 ], [ %68, %67 ]
  %44 = load i32, i32* %37, align 8, !tbaa !339
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  %48 = icmp slt i64 %43, %47
  %49 = trunc i64 %43 to i32
  %50 = select i1 %48, i32 %49, i32 %44
  %51 = sub i32 %44, %50
  store i32 %51, i32* %37, align 8, !tbaa !339
  %52 = load i8*, i8** %38, align 8, !tbaa !350
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  store i8* %54, i8** %38, align 8, !tbaa !350
  %55 = load i64, i64* %39, align 8, !tbaa !346
  %56 = add nsw i64 %55, %53
  store i64 %56, i64* %39, align 8, !tbaa !346
  %57 = sub nsw i64 %43, %53
  br label %67

58:                                               ; preds = %42
  %59 = load i32, i32* %41, align 8, !tbaa !340
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = load i32, i32* %34, align 8, !tbaa !347
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %61, %58
  %65 = tail call fastcc i32 @gz_fetch(%struct.gz_state* noundef nonnull %5) #25
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %132, label %67

67:                                               ; preds = %64, %46
  %68 = phi i64 [ %57, %46 ], [ %43, %64 ]
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %42, !llvm.loop !351

70:                                               ; preds = %61, %67, %29
  %71 = icmp slt i32 %0, 0
  br i1 %71, label %132, label %74

72:                                               ; preds = %24
  %73 = icmp slt i32 %0, 0
  br i1 %73, label %132, label %74

74:                                               ; preds = %70, %72
  %75 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 0
  %76 = load i32, i32* %75, align 8, !tbaa !339
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %94

78:                                               ; preds = %74
  store i32 1, i32* %75, align 8, !tbaa !339
  %79 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 2, i32 1
  %80 = load i8*, i8** %79, align 8, !tbaa !356
  %81 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 1, i32 2
  %82 = bitcast i64* %81 to i32*
  %83 = load i32, i32* %82, align 8, !tbaa !330
  %84 = shl i32 %83, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = getelementptr inbounds i8, i8* %86, i64 -1
  %88 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 1
  store i8* %87, i8** %88, align 8, !tbaa !350
  %89 = trunc i32 %0 to i8
  store i8 %89, i8* %87, align 1, !tbaa !4
  %90 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 2
  %91 = load i64, i64* %90, align 8, !tbaa !346
  %92 = add nsw i64 %91, -1
  store i64 %92, i64* %90, align 8, !tbaa !346
  %93 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 12
  store i32 0, i32* %93, align 4, !tbaa !341
  br label %132

94:                                               ; preds = %74
  %95 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 1, i32 2
  %96 = bitcast i64* %95 to i32*
  %97 = load i32, i32* %96, align 8, !tbaa !330
  %98 = shl i32 %97, 1
  %99 = icmp eq i32 %76, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %94
  tail call void @gz_error(%struct.gz_state* noundef nonnull %5, i32 noundef -3, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.65, i64 0, i64 0)) #25
  br label %132

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 1
  %103 = load i8*, i8** %102, align 8, !tbaa !350
  %104 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 2, i32 1
  %105 = load i8*, i8** %104, align 8, !tbaa !356
  %106 = icmp eq i8* %103, %105
  br i1 %106, label %107, label %122

107:                                              ; preds = %101
  %108 = zext i32 %98 to i64
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  %110 = zext i32 %76 to i64
  %111 = getelementptr inbounds i8, i8* %103, i64 %110
  br label %112

112:                                              ; preds = %107, %112
  %113 = phi i8* [ %117, %112 ], [ %109, %107 ]
  %114 = phi i8* [ %115, %112 ], [ %111, %107 ]
  %115 = getelementptr inbounds i8, i8* %114, i64 -1
  %116 = load i8, i8* %115, align 1, !tbaa !4
  %117 = getelementptr inbounds i8, i8* %113, i64 -1
  store i8 %116, i8* %117, align 1, !tbaa !4
  %118 = load i8*, i8** %104, align 8, !tbaa !356
  %119 = icmp ugt i8* %115, %118
  br i1 %119, label %112, label %120, !llvm.loop !371

120:                                              ; preds = %112
  %121 = load i32, i32* %75, align 8, !tbaa !339
  br label %122

122:                                              ; preds = %120, %101
  %123 = phi i8* [ %117, %120 ], [ %103, %101 ]
  %124 = phi i32 [ %121, %120 ], [ %76, %101 ]
  %125 = add i32 %124, 1
  store i32 %125, i32* %75, align 8, !tbaa !339
  %126 = getelementptr inbounds i8, i8* %123, i64 -1
  store i8* %126, i8** %102, align 8, !tbaa !350
  %127 = trunc i32 %0 to i8
  store i8 %127, i8* %126, align 1, !tbaa !4
  %128 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 2
  %129 = load i64, i64* %128, align 8, !tbaa !346
  %130 = add nsw i64 %129, -1
  store i64 %130, i64* %128, align 8, !tbaa !346
  %131 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 12
  store i32 0, i32* %131, align 4, !tbaa !341
  br label %132

132:                                              ; preds = %64, %4, %72, %70, %17, %21, %2, %122, %100, %78
  %133 = phi i32 [ %0, %78 ], [ -1, %100 ], [ %0, %122 ], [ -1, %2 ], [ -1, %21 ], [ -1, %17 ], [ -1, %70 ], [ -1, %72 ], [ -1, %4 ], [ -1, %64 ]
  ret i32 %133
}

; Function Attrs: nounwind uwtable
define i8* @gzgets(%struct.gzFile_s* noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  %5 = icmp eq i8* %1, null
  %6 = or i1 %4, %5
  %7 = icmp slt i32 %2, 1
  %8 = or i1 %6, %7
  br i1 %8, label %113, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %11 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %12 = load i32, i32* %11, align 8, !tbaa !327
  %13 = icmp eq i32 %12, 7247
  br i1 %13, label %14, label %113

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %10, i64 0, i32 18
  %16 = load i32, i32* %15, align 4, !tbaa !345
  switch i32 %16, label %113 [
    i32 0, label %17
    i32 -5, label %17
  ]

17:                                               ; preds = %14, %14
  %18 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %19 = bitcast i64* %18 to i32*
  %20 = load i32, i32* %19, align 8, !tbaa !344
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %63, label %22

22:                                               ; preds = %17
  store i32 0, i32* %19, align 8, !tbaa !344
  %23 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !349
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %27 = bitcast i64* %26 to i32*
  %28 = icmp eq i64 %25, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %22
  %30 = getelementptr %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %32 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %33 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %34 = bitcast i8** %33 to i32*
  br label %35

35:                                               ; preds = %60, %29
  %36 = phi i64 [ %25, %29 ], [ %61, %60 ]
  %37 = load i32, i32* %30, align 8, !tbaa !339
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = zext i32 %37 to i64
  %41 = icmp slt i64 %36, %40
  %42 = trunc i64 %36 to i32
  %43 = select i1 %41, i32 %42, i32 %37
  %44 = sub i32 %37, %43
  store i32 %44, i32* %30, align 8, !tbaa !339
  %45 = load i8*, i8** %31, align 8, !tbaa !350
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  store i8* %47, i8** %31, align 8, !tbaa !350
  %48 = load i64, i64* %32, align 8, !tbaa !346
  %49 = add nsw i64 %48, %46
  store i64 %49, i64* %32, align 8, !tbaa !346
  %50 = sub nsw i64 %36, %46
  br label %60

51:                                               ; preds = %35
  %52 = load i32, i32* %34, align 8, !tbaa !340
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = load i32, i32* %27, align 8, !tbaa !347
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %54, %51
  %58 = tail call fastcc i32 @gz_fetch(%struct.gz_state* noundef nonnull %10) #25
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %113, label %60

60:                                               ; preds = %57, %39
  %61 = phi i64 [ %50, %39 ], [ %36, %57 ]
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %35, !llvm.loop !351

63:                                               ; preds = %54, %60, %22, %17
  %64 = add i32 %2, -1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %113, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %68 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %69 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %70 = load i32, i32* %67, align 8, !tbaa !339
  br label %71

71:                                               ; preds = %66, %84
  %72 = phi i32 [ %100, %84 ], [ %70, %66 ]
  %73 = phi i32 [ %105, %84 ], [ %64, %66 ]
  %74 = phi i8* [ %106, %84 ], [ %1, %66 ]
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = tail call fastcc i32 @gz_fetch(%struct.gz_state* noundef nonnull %10)
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %113, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %67, align 8, !tbaa !339
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %10, i64 0, i32 12
  store i32 1, i32* %83, align 4, !tbaa !341
  br label %109

84:                                               ; preds = %71, %79
  %85 = phi i32 [ %80, %79 ], [ %72, %71 ]
  %86 = icmp ugt i32 %85, %73
  %87 = select i1 %86, i32 %73, i32 %85
  %88 = load i8*, i8** %68, align 8, !tbaa !350
  %89 = zext i32 %87 to i64
  %90 = tail call i8* @memchr(i8* noundef %88, i32 noundef 10, i64 noundef %89) #26
  %91 = icmp eq i8* %90, null
  %92 = ptrtoint i8* %90 to i64
  %93 = ptrtoint i8* %88 to i64
  %94 = sub i64 %92, %93
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, 1
  %97 = select i1 %91, i32 %87, i32 %96
  %98 = zext i32 %97 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %88, i64 %98, i1 false)
  %99 = load i32, i32* %67, align 8, !tbaa !339
  %100 = sub i32 %99, %97
  store i32 %100, i32* %67, align 8, !tbaa !339
  %101 = load i8*, i8** %68, align 8, !tbaa !350
  %102 = getelementptr inbounds i8, i8* %101, i64 %98
  store i8* %102, i8** %68, align 8, !tbaa !350
  %103 = load i64, i64* %69, align 8, !tbaa !346
  %104 = add nsw i64 %103, %98
  store i64 %104, i64* %69, align 8, !tbaa !346
  %105 = sub i32 %73, %97
  %106 = getelementptr inbounds i8, i8* %74, i64 %98
  %107 = icmp ne i32 %105, 0
  %108 = select i1 %107, i1 %91, i1 false
  br i1 %108, label %71, label %109, !llvm.loop !372

109:                                              ; preds = %84, %82
  %110 = phi i8* [ %74, %82 ], [ %106, %84 ]
  %111 = icmp eq i8* %110, %1
  br i1 %111, label %113, label %112

112:                                              ; preds = %109
  store i8 0, i8* %110, align 1, !tbaa !4
  br label %113

113:                                              ; preds = %57, %76, %63, %109, %9, %14, %3, %112
  %114 = phi i8* [ %1, %112 ], [ null, %3 ], [ null, %14 ], [ null, %9 ], [ null, %109 ], [ null, %63 ], [ null, %76 ], [ null, %57 ]
  ret i8* %114
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i8* @memchr(i8* noundef, i32 noundef, i64 noundef) local_unnamed_addr #18

; Function Attrs: nounwind uwtable
define i32 @gzdirect(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8, !tbaa !327
  %7 = icmp eq i32 %6, 7247
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 9
  %10 = load i32, i32* %9, align 4, !tbaa !342
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8, !tbaa !339
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @gz_look(%struct.gz_state* noundef nonnull %4)
  br label %18

18:                                               ; preds = %16, %12, %8, %3
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 2
  %20 = bitcast i64* %19 to i32*
  %21 = load i32, i32* %20, align 8, !tbaa !335
  br label %22

22:                                               ; preds = %1, %18
  %23 = phi i32 [ %21, %18 ], [ 0, %1 ]
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @gzclose_r(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8, !tbaa !327
  %7 = icmp eq i32 %6, 7247
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8, !tbaa !330
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %15 = bitcast i8** %14 to %struct.z_stream_s*
  %16 = tail call i32 @inflateEnd(%struct.z_stream_s* noundef nonnull %15) #25
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !356
  tail call void @free(i8* noundef %18) #25
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %20 = bitcast %struct.gzFile_s* %19 to i8**
  %21 = load i8*, i8** %20, align 8, !tbaa !359
  tail call void @free(i8* noundef %21) #25
  br label %22

22:                                               ; preds = %13, %8
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 18
  %24 = load i32, i32* %23, align 4, !tbaa !345
  %25 = icmp eq i32 %24, -5
  %26 = select i1 %25, i32 -5, i32 0
  tail call void @gz_error(%struct.gz_state* noundef nonnull %4, i32 noundef 0, i8* noundef null) #25
  %27 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 1
  %28 = load i8*, i8** %27, align 8, !tbaa !337
  tail call void @free(i8* noundef %28) #25
  %29 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 2
  %30 = load i32, i32* %29, align 4, !tbaa !338
  %31 = tail call i32 @close(i32 noundef %30) #25
  %32 = bitcast %struct.gzFile_s* %0 to i8*
  tail call void @free(i8* noundef %32) #25
  %33 = icmp eq i32 %31, 0
  %34 = select i1 %33, i32 %26, i32 -1
  br label %35

35:                                               ; preds = %3, %1, %22
  %36 = phi i32 [ %34, %22 ], [ -2, %1 ], [ -2, %3 ]
  ret i32 %36
}

declare i32 @close(i32 noundef) local_unnamed_addr #23

; Function Attrs: nounwind uwtable
define i32 @gzwrite(%struct.gzFile_s* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !327
  %9 = icmp eq i32 %8, 31153
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %12 = load i32, i32* %11, align 4, !tbaa !345
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = icmp slt i32 %2, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @gz_error(%struct.gz_state* noundef nonnull %6, i32 noundef -3, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0)) #25
  br label %21

17:                                               ; preds = %14
  %18 = zext i32 %2 to i64
  %19 = tail call fastcc i64 @gz_write(%struct.gz_state* noundef nonnull %6, i8* noundef %1, i64 noundef %18)
  %20 = trunc i64 %19 to i32
  br label %21

21:                                               ; preds = %5, %10, %3, %17, %16
  %22 = phi i32 [ 0, %16 ], [ %20, %17 ], [ 0, %3 ], [ 0, %10 ], [ 0, %5 ]
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @gz_write(%struct.gz_state* noundef %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %122, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8, !tbaa !330
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @gz_init(%struct.gz_state* noundef nonnull %0)
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %122, label %12

12:                                               ; preds = %9, %5
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8, !tbaa !344
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %54, label %16

16:                                               ; preds = %12
  store i32 0, i32* %13, align 8, !tbaa !344
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 16
  %18 = load i64, i64* %17, align 8, !tbaa !349
  %19 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %20 = load i32, i32* %19, align 8, !tbaa !84
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %0, i32 noundef 0) #25
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %122, label %25

25:                                               ; preds = %22, %16
  %26 = icmp eq i64 %18, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %29 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 0
  %30 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %33

31:                                               ; preds = %46
  %32 = icmp eq i64 %53, 0
  br i1 %32, label %54, label %33, !llvm.loop !373

33:                                               ; preds = %31, %27
  %34 = phi i64 [ %18, %27 ], [ %53, %31 ]
  %35 = phi i1 [ false, %27 ], [ true, %31 ]
  %36 = load i32, i32* %6, align 8, !tbaa !330
  %37 = zext i32 %36 to i64
  %38 = icmp slt i64 %34, %37
  %39 = trunc i64 %34 to i32
  %40 = select i1 %38, i32 %39, i32 %36
  br i1 %35, label %41, label %43

41:                                               ; preds = %33
  %42 = zext i32 %40 to i64
  br label %46

43:                                               ; preds = %33
  %44 = load i8*, i8** %28, align 8, !tbaa !359
  %45 = zext i32 %40 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %45, i1 false) #25
  br label %46

46:                                               ; preds = %43, %41
  %47 = phi i64 [ %42, %41 ], [ %45, %43 ]
  store i32 %40, i32* %19, align 8, !tbaa !84
  %48 = load i8*, i8** %28, align 8, !tbaa !359
  store i8* %48, i8** %29, align 8, !tbaa !89
  %49 = load i64, i64* %30, align 8, !tbaa !346
  %50 = add nsw i64 %49, %47
  store i64 %50, i64* %30, align 8, !tbaa !346
  %51 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %0, i32 noundef 0) #25
  %52 = icmp eq i32 %51, -1
  %53 = sub nsw i64 %34, %47
  br i1 %52, label %122, label %31

54:                                               ; preds = %31, %25, %12
  %55 = load i32, i32* %6, align 8, !tbaa !330
  %56 = zext i32 %55 to i64
  %57 = icmp ugt i64 %56, %2
  %58 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  br i1 %57, label %59, label %101

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 0
  %61 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %62 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %63

63:                                               ; preds = %59, %97
  %64 = phi i64 [ %95, %97 ], [ %2, %59 ]
  %65 = phi i8* [ %98, %97 ], [ %1, %59 ]
  %66 = load i32, i32* %58, align 8, !tbaa !347
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %60, align 8, !tbaa !370
  %70 = load i8*, i8** %61, align 8, !tbaa !359
  br label %73

71:                                               ; preds = %63
  %72 = load i8*, i8** %61, align 8, !tbaa !359
  store i8* %72, i8** %60, align 8, !tbaa !370
  br label %73

73:                                               ; preds = %68, %71
  %74 = phi i8* [ %70, %68 ], [ %72, %71 ]
  %75 = phi i8* [ %69, %68 ], [ %72, %71 ]
  %76 = zext i32 %66 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = ptrtoint i8* %77 to i64
  %79 = ptrtoint i8* %74 to i64
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = load i32, i32* %6, align 8, !tbaa !330
  %83 = sub i32 %82, %81
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %64, %84
  %86 = trunc i64 %64 to i32
  %87 = select i1 %85, i32 %86, i32 %83
  %88 = and i64 %80, 4294967295
  %89 = getelementptr inbounds i8, i8* %74, i64 %88
  %90 = zext i32 %87 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %65, i64 %90, i1 false)
  %91 = load i32, i32* %58, align 8, !tbaa !347
  %92 = add i32 %87, %91
  store i32 %92, i32* %58, align 8, !tbaa !347
  %93 = load i64, i64* %62, align 8, !tbaa !346
  %94 = add nsw i64 %93, %90
  store i64 %94, i64* %62, align 8, !tbaa !346
  %95 = sub i64 %64, %90
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %122, label %97

97:                                               ; preds = %73
  %98 = getelementptr inbounds i8, i8* %65, i64 %90
  %99 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %0, i32 noundef 0)
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %122, label %63

101:                                              ; preds = %54
  %102 = load i32, i32* %58, align 8, !tbaa !347
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %0, i32 noundef 0)
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %122, label %107

107:                                              ; preds = %104, %101
  %108 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 0
  store i8* %1, i8** %108, align 8, !tbaa !370
  %109 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %110

110:                                              ; preds = %120, %107
  %111 = phi i64 [ %2, %107 ], [ %119, %120 ]
  %112 = icmp ult i64 %111, 4294967295
  %113 = select i1 %112, i64 %111, i64 4294967295
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %58, align 8, !tbaa !347
  %115 = load i64, i64* %109, align 8, !tbaa !346
  %116 = add nsw i64 %115, %113
  store i64 %116, i64* %109, align 8, !tbaa !346
  %117 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %0, i32 noundef 0)
  %118 = icmp eq i32 %117, -1
  %119 = sub i64 %111, %113
  br i1 %118, label %122, label %120

120:                                              ; preds = %110
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %122, label %110, !llvm.loop !374

122:                                              ; preds = %46, %120, %110, %73, %97, %22, %104, %9, %3
  %123 = phi i64 [ 0, %3 ], [ 0, %9 ], [ 0, %104 ], [ 0, %22 ], [ %2, %73 ], [ 0, %97 ], [ %2, %120 ], [ 0, %110 ], [ 0, %46 ]
  ret i64 %123
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_init(%struct.gz_state* noundef %0) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !331
  %5 = shl i32 %4, 1
  %6 = zext i32 %5 to i64
  %7 = tail call noalias i8* @malloc(i64 noundef %6) #25
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  store i8* %7, i8** %8, align 8, !tbaa !359
  %9 = icmp eq i8* %7, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i64 0, i64 0)) #25
  br label %46

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 8, !tbaa !335
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  store i32 %4, i32* %16, align 8, !tbaa !330
  br label %46

17:                                               ; preds = %11
  %18 = zext i32 %4 to i64
  %19 = tail call noalias i8* @malloc(i64 noundef %18) #25
  %20 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  store i8* %19, i8** %20, align 8, !tbaa !356
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @free(i8* noundef nonnull %7) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i64 0, i64 0)) #25
  br label %46

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 8
  %25 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 13
  %26 = bitcast i8* (i8*, i32, i32)** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %26, i8 0, i64 24, i1 false)
  %27 = load i32, i32* %25, align 8, !tbaa !333
  %28 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 14
  %29 = load i32, i32* %28, align 4, !tbaa !334
  %30 = tail call i32 @deflateInit2_(%struct.z_stream_s* noundef nonnull %2, i32 noundef %27, i32 noundef 8, i32 noundef 31, i32 noundef 8, i32 noundef %29, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.71, i64 0, i64 0), i32 noundef 112) #25
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = load i8*, i8** %20, align 8, !tbaa !356
  tail call void @free(i8* noundef %33) #25
  %34 = load i8*, i8** %8, align 8, !tbaa !359
  tail call void @free(i8* noundef %34) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -4, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i64 0, i64 0)) #25
  br label %46

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  store i8* null, i8** %36, align 8, !tbaa !89
  %37 = load i32, i32* %12, align 8, !tbaa !335
  %38 = load i32, i32* %3, align 4, !tbaa !331
  %39 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  store i32 %38, i32* %39, align 8, !tbaa !330
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 4
  store i32 %38, i32* %42, align 8, !tbaa !86
  %43 = load i8*, i8** %20, align 8, !tbaa !356
  %44 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 3
  store i8* %43, i8** %44, align 8, !tbaa !87
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  store i8* %43, i8** %45, align 8, !tbaa !350
  br label %46

46:                                               ; preds = %15, %35, %41, %32, %22, %10
  %47 = phi i32 [ -1, %10 ], [ -1, %22 ], [ -1, %32 ], [ 0, %41 ], [ 0, %35 ], [ 0, %15 ]
  ret i32 %47
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gz_comp(%struct.gz_state* noundef %0, i32 noundef %1) unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20
  %4 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8, !tbaa !330
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call fastcc i32 @gz_init(%struct.gz_state* noundef nonnull %0)
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %157, label %10

10:                                               ; preds = %7, %2
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 8, !tbaa !335
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %16 = load i32, i32* %15, align 8, !tbaa !84
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %157, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %3, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !89
  br label %22

22:                                               ; preds = %18, %36
  %23 = phi i8* [ %21, %18 ], [ %42, %36 ]
  %24 = phi i32 [ %16, %18 ], [ %38, %36 ]
  %25 = icmp ult i32 %24, 1073741824
  %26 = select i1 %25, i32 %24, i32 1073741824
  %27 = load i32, i32* %19, align 4, !tbaa !338
  %28 = zext i32 %26 to i64
  %29 = tail call i64 @write(i32 noundef %27, i8* noundef %23, i64 noundef %28) #25
  %30 = trunc i64 %29 to i32
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = tail call i32* @__errno_location() #27
  %34 = load i32, i32* %33, align 4, !tbaa !16
  %35 = tail call i8* @strerror(i32 noundef %34) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -1, i8* noundef %35) #25
  br label %157

36:                                               ; preds = %22
  %37 = load i32, i32* %15, align 8, !tbaa !84
  %38 = sub i32 %37, %30
  store i32 %38, i32* %15, align 8, !tbaa !84
  %39 = load i8*, i8** %20, align 8, !tbaa !89
  %40 = shl i64 %29, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8* %42, i8** %20, align 8, !tbaa !89
  %43 = icmp eq i32 %38, 0
  br i1 %43, label %157, label %22, !llvm.loop !375

44:                                               ; preds = %10
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 15
  %46 = load i32, i32* %45, align 8, !tbaa !343
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 1
  %50 = load i32, i32* %49, align 8, !tbaa !84
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %157, label %52

52:                                               ; preds = %48
  %53 = tail call i32 @deflateReset(%struct.z_stream_s* noundef nonnull %3) #25
  store i32 0, i32* %45, align 8, !tbaa !343
  br label %54

54:                                               ; preds = %52, %44
  %55 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 4
  %56 = icmp eq i32 %1, 0
  %57 = icmp ne i32 %1, 4
  %58 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 20, i32 3
  %59 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %61 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  %62 = load i32, i32* %55, align 8, !tbaa !86
  br i1 %56, label %63, label %103

63:                                               ; preds = %54, %80
  %64 = phi i32 [ %81, %80 ], [ %62, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %63
  %67 = load i8*, i8** %58, align 8, !tbaa !87
  %68 = load i8*, i8** %59, align 8, !tbaa !350
  %69 = icmp ugt i8* %67, %68
  br i1 %69, label %83, label %73

70:                                               ; preds = %96
  %71 = load i32, i32* %55, align 8, !tbaa !86
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66, %70
  %74 = load i32, i32* %4, align 8, !tbaa !330
  store i32 %74, i32* %55, align 8, !tbaa !86
  %75 = load i8*, i8** %61, align 8, !tbaa !356
  store i8* %75, i8** %58, align 8, !tbaa !87
  store i8* %75, i8** %59, align 8, !tbaa !350
  br label %76

76:                                               ; preds = %63, %73, %70
  %77 = phi i32 [ %64, %63 ], [ %74, %73 ], [ %71, %70 ]
  %78 = tail call i32 @deflate(%struct.z_stream_s* noundef nonnull %3, i32 noundef 0) #25
  %79 = icmp eq i32 %78, -2
  br i1 %79, label %150, label %80

80:                                               ; preds = %76
  %81 = load i32, i32* %55, align 8, !tbaa !86
  %82 = icmp eq i32 %77, %81
  br i1 %82, label %154, label %63, !llvm.loop !376

83:                                               ; preds = %66, %96
  %84 = phi i8* [ %100, %96 ], [ %68, %66 ]
  %85 = phi i8* [ %101, %96 ], [ %67, %66 ]
  %86 = ptrtoint i8* %85 to i64
  %87 = ptrtoint i8* %84 to i64
  %88 = sub i64 %86, %87
  %89 = icmp slt i64 %88, 1073741824
  %90 = select i1 %89, i64 %88, i64 1073741824
  %91 = load i32, i32* %60, align 4, !tbaa !338
  %92 = and i64 %90, 4294967295
  %93 = tail call i64 @write(i32 noundef %91, i8* noundef %84, i64 noundef %92) #25
  %94 = and i64 %93, 2147483648
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %127

96:                                               ; preds = %83
  %97 = load i8*, i8** %59, align 8, !tbaa !350
  %98 = shl i64 %93, 32
  %99 = ashr exact i64 %98, 32
  %100 = getelementptr inbounds i8, i8* %97, i64 %99
  store i8* %100, i8** %59, align 8, !tbaa !350
  %101 = load i8*, i8** %58, align 8, !tbaa !87
  %102 = icmp ugt i8* %101, %100
  br i1 %102, label %83, label %70, !llvm.loop !377

103:                                              ; preds = %54, %151
  %104 = phi i32 [ %152, %151 ], [ %62, %54 ]
  %105 = phi i32 [ %148, %151 ], [ 0, %54 ]
  %106 = icmp eq i32 %104, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %103
  %108 = icmp eq i32 %105, 1
  %109 = select i1 %57, i1 true, i1 %108
  br i1 %109, label %110, label %146

110:                                              ; preds = %107, %103
  %111 = load i8*, i8** %58, align 8, !tbaa !87
  %112 = load i8*, i8** %59, align 8, !tbaa !350
  %113 = icmp ugt i8* %111, %112
  br i1 %113, label %114, label %140

114:                                              ; preds = %110, %131
  %115 = phi i8* [ %135, %131 ], [ %112, %110 ]
  %116 = phi i8* [ %136, %131 ], [ %111, %110 ]
  %117 = ptrtoint i8* %116 to i64
  %118 = ptrtoint i8* %115 to i64
  %119 = sub i64 %117, %118
  %120 = icmp slt i64 %119, 1073741824
  %121 = select i1 %120, i64 %119, i64 1073741824
  %122 = load i32, i32* %60, align 4, !tbaa !338
  %123 = and i64 %121, 4294967295
  %124 = tail call i64 @write(i32 noundef %122, i8* noundef %115, i64 noundef %123) #25
  %125 = and i64 %124, 2147483648
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %114, %83
  %128 = tail call i32* @__errno_location() #27
  %129 = load i32, i32* %128, align 4, !tbaa !16
  %130 = tail call i8* @strerror(i32 noundef %129) #25
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -1, i8* noundef %130) #25
  br label %157

131:                                              ; preds = %114
  %132 = load i8*, i8** %59, align 8, !tbaa !350
  %133 = shl i64 %124, 32
  %134 = ashr exact i64 %133, 32
  %135 = getelementptr inbounds i8, i8* %132, i64 %134
  store i8* %135, i8** %59, align 8, !tbaa !350
  %136 = load i8*, i8** %58, align 8, !tbaa !87
  %137 = icmp ugt i8* %136, %135
  br i1 %137, label %114, label %138, !llvm.loop !377

138:                                              ; preds = %131
  %139 = load i32, i32* %55, align 8, !tbaa !86
  br label %140

140:                                              ; preds = %138, %110
  %141 = phi i32 [ %139, %138 ], [ %104, %110 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %140
  %144 = load i32, i32* %4, align 8, !tbaa !330
  store i32 %144, i32* %55, align 8, !tbaa !86
  %145 = load i8*, i8** %61, align 8, !tbaa !356
  store i8* %145, i8** %58, align 8, !tbaa !87
  store i8* %145, i8** %59, align 8, !tbaa !350
  br label %146

146:                                              ; preds = %140, %143, %107
  %147 = phi i32 [ %141, %140 ], [ %144, %143 ], [ %104, %107 ]
  %148 = tail call i32 @deflate(%struct.z_stream_s* noundef nonnull %3, i32 noundef %1) #25
  %149 = icmp eq i32 %148, -2
  br i1 %149, label %150, label %151

150:                                              ; preds = %146, %76
  tail call void @gz_error(%struct.gz_state* noundef nonnull %0, i32 noundef -2, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.69, i64 0, i64 0)) #25
  br label %157

151:                                              ; preds = %146
  %152 = load i32, i32* %55, align 8, !tbaa !86
  %153 = icmp eq i32 %147, %152
  br i1 %153, label %154, label %103, !llvm.loop !376

154:                                              ; preds = %151, %80
  %155 = icmp eq i32 %1, 4
  br i1 %155, label %156, label %157

156:                                              ; preds = %154
  store i32 1, i32* %45, align 8, !tbaa !343
  br label %157

157:                                              ; preds = %36, %14, %154, %156, %48, %7, %150, %127, %32
  %158 = phi i32 [ -1, %32 ], [ -1, %127 ], [ -1, %150 ], [ -1, %7 ], [ 0, %48 ], [ 0, %156 ], [ 0, %154 ], [ 0, %14 ], [ 0, %36 ]
  ret i32 %158
}

; Function Attrs: nofree
declare noundef i64 @write(i32 noundef, i8* nocapture noundef readonly, i64 noundef) local_unnamed_addr #20

; Function Attrs: nounwind uwtable
define i64 @gzfwrite(i8* noundef %0, i64 noundef %1, i64 noundef %2, %struct.gzFile_s* noundef %3) local_unnamed_addr #3 {
  %5 = icmp eq %struct.gzFile_s* %3, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.gzFile_s* %3 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %3, i64 1, i32 0
  %9 = load i32, i32* %8, align 8, !tbaa !327
  %10 = icmp eq i32 %9, 31153
  br i1 %10, label %11, label %27

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 18
  %13 = load i32, i32* %12, align 4, !tbaa !345
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 %2)
  %17 = extractvalue { i64, i1 } %16, 0
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = extractvalue { i64, i1 } %16, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @gz_error(%struct.gz_state* noundef nonnull %7, i32 noundef -2, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.72, i64 0, i64 0)) #25
  br label %27

22:                                               ; preds = %19, %15
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = tail call fastcc i64 @gz_write(%struct.gz_state* noundef nonnull %7, i8* noundef %0, i64 noundef %17)
  %26 = udiv i64 %25, %1
  br label %27

27:                                               ; preds = %24, %22, %6, %11, %4, %21
  %28 = phi i64 [ 0, %21 ], [ 0, %4 ], [ 0, %11 ], [ 0, %6 ], [ %26, %24 ], [ 0, %22 ]
  ret i64 %28
}

; Function Attrs: nounwind uwtable
define i32 @gzputc(%struct.gzFile_s* noundef %0, i32 noundef %1) local_unnamed_addr #3 {
  %3 = alloca [1 x i8], align 1
  %4 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #25
  %5 = icmp eq %struct.gzFile_s* %0, null
  br i1 %5, label %108, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %10 = load i32, i32* %9, align 8, !tbaa !327
  %11 = icmp eq i32 %10, 31153
  br i1 %11, label %12, label %108

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 18
  %14 = load i32, i32* %13, align 4, !tbaa !345
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %108

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18, align 8, !tbaa !344
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %63, label %21

21:                                               ; preds = %16
  store i32 0, i32* %18, align 8, !tbaa !344
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !349
  %25 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %26 = bitcast i64* %25 to i32*
  %27 = load i32, i32* %26, align 8, !tbaa !84
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %7, i32 noundef 0) #25
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %108, label %32

32:                                               ; preds = %29, %21
  %33 = icmp eq i64 %24, 0
  br i1 %33, label %63, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %36 = bitcast i64* %35 to i32*
  %37 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %38 = bitcast %struct.gzFile_s* %37 to i8**
  %39 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %42

40:                                               ; preds = %55
  %41 = icmp eq i64 %62, 0
  br i1 %41, label %63, label %42, !llvm.loop !373

42:                                               ; preds = %40, %34
  %43 = phi i64 [ %24, %34 ], [ %62, %40 ]
  %44 = phi i1 [ false, %34 ], [ true, %40 ]
  %45 = load i32, i32* %36, align 8, !tbaa !330
  %46 = zext i32 %45 to i64
  %47 = icmp slt i64 %43, %46
  %48 = trunc i64 %43 to i32
  %49 = select i1 %47, i32 %48, i32 %45
  br i1 %44, label %50, label %52

50:                                               ; preds = %42
  %51 = zext i32 %49 to i64
  br label %55

52:                                               ; preds = %42
  %53 = load i8*, i8** %38, align 8, !tbaa !359
  %54 = zext i32 %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 %54, i1 false) #25
  br label %55

55:                                               ; preds = %52, %50
  %56 = phi i64 [ %51, %50 ], [ %54, %52 ]
  store i32 %49, i32* %26, align 8, !tbaa !84
  %57 = load i8*, i8** %38, align 8, !tbaa !359
  store i8* %57, i8** %8, align 8, !tbaa !89
  %58 = load i64, i64* %39, align 8, !tbaa !346
  %59 = add nsw i64 %58, %56
  store i64 %59, i64* %39, align 8, !tbaa !346
  %60 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %7, i32 noundef 0) #25
  %61 = icmp eq i32 %60, -1
  %62 = sub nsw i64 %43, %56
  br i1 %61, label %108, label %40

63:                                               ; preds = %40, %32, %16
  %64 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %65 = bitcast i64* %64 to i32*
  %66 = load i32, i32* %65, align 8, !tbaa !330
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %102, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8*, i8** %8, i64 1
  %70 = bitcast i8** %69 to i32*
  %71 = load i32, i32* %70, align 8, !tbaa !84
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = load i8*, i8** %8, align 8, !tbaa !89
  %75 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %76 = bitcast %struct.gzFile_s* %75 to i8**
  %77 = load i8*, i8** %76, align 8, !tbaa !359
  br label %82

78:                                               ; preds = %68
  %79 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %80 = bitcast %struct.gzFile_s* %79 to i8**
  %81 = load i8*, i8** %80, align 8, !tbaa !359
  store i8* %81, i8** %8, align 8, !tbaa !89
  br label %82

82:                                               ; preds = %73, %78
  %83 = phi i8* [ %77, %73 ], [ %81, %78 ]
  %84 = phi i8* [ %74, %73 ], [ %81, %78 ]
  %85 = zext i32 %71 to i64
  %86 = getelementptr inbounds i8, i8* %84, i64 %85
  %87 = ptrtoint i8* %86 to i64
  %88 = ptrtoint i8* %83 to i64
  %89 = sub i64 %87, %88
  %90 = trunc i64 %89 to i32
  %91 = icmp ugt i32 %66, %90
  br i1 %91, label %92, label %102

92:                                               ; preds = %82
  %93 = trunc i32 %1 to i8
  %94 = and i64 %89, 4294967295
  %95 = getelementptr inbounds i8, i8* %83, i64 %94
  store i8 %93, i8* %95, align 1, !tbaa !4
  %96 = load i32, i32* %70, align 8, !tbaa !84
  %97 = add i32 %96, 1
  store i32 %97, i32* %70, align 8, !tbaa !84
  %98 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %99 = load i64, i64* %98, align 8, !tbaa !346
  %100 = add nsw i64 %99, 1
  store i64 %100, i64* %98, align 8, !tbaa !346
  %101 = and i32 %1, 255
  br label %108

102:                                              ; preds = %82, %63
  %103 = trunc i32 %1 to i8
  store i8 %103, i8* %4, align 1, !tbaa !4
  %104 = call fastcc i64 @gz_write(%struct.gz_state* noundef nonnull %7, i8* noundef nonnull %4, i64 noundef 1)
  %105 = icmp eq i64 %104, 1
  %106 = and i32 %1, 255
  %107 = select i1 %105, i32 %106, i32 -1
  br label %108

108:                                              ; preds = %55, %29, %102, %6, %12, %2, %92
  %109 = phi i32 [ %101, %92 ], [ -1, %2 ], [ -1, %12 ], [ -1, %6 ], [ %107, %102 ], [ -1, %29 ], [ -1, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #25
  ret i32 %109
}

; Function Attrs: nounwind uwtable
define i32 @gzputs(%struct.gzFile_s* noundef %0, i8* noundef %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8, !tbaa !327
  %8 = icmp eq i32 %7, 31153
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 18
  %11 = load i32, i32* %10, align 4, !tbaa !345
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %9
  %14 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %1) #26
  %15 = icmp ult i64 %14, 2147483648
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @gz_error(%struct.gz_state* noundef nonnull %5, i32 noundef -2, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.73, i64 0, i64 0)) #25
  br label %22

17:                                               ; preds = %13
  %18 = trunc i64 %14 to i32
  %19 = tail call fastcc i64 @gz_write(%struct.gz_state* noundef nonnull %5, i8* noundef %1, i64 noundef %14)
  %20 = icmp ult i64 %19, %14
  %21 = select i1 %20, i32 -1, i32 %18
  br label %22

22:                                               ; preds = %4, %9, %2, %17, %16
  %23 = phi i32 [ -1, %16 ], [ %21, %17 ], [ -1, %2 ], [ -1, %9 ], [ -1, %4 ]
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @gzvprintf(%struct.gzFile_s* noundef %0, i8* nocapture noundef readonly %1, %struct.__va_list_tag* noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %129, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %9 = load i32, i32* %8, align 8, !tbaa !327
  %10 = icmp eq i32 %9, 31153
  br i1 %10, label %11, label %129

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %13 = load i32, i32* %12, align 4, !tbaa !345
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %129

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %17 = bitcast i64* %16 to i32*
  %18 = load i32, i32* %17, align 8, !tbaa !330
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = tail call fastcc i32 @gz_init(%struct.gz_state* noundef nonnull %6)
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = load i32, i32* %12, align 4, !tbaa !345
  br label %129

25:                                               ; preds = %20, %15
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %27 = bitcast i64* %26 to i32*
  %28 = load i32, i32* %27, align 8, !tbaa !344
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %72, label %30

30:                                               ; preds = %25
  store i32 0, i32* %27, align 8, !tbaa !344
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !349
  %34 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %35 = bitcast i64* %34 to i32*
  %36 = load i32, i32* %35, align 8, !tbaa !84
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %6, i32 noundef 0) #25
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %70, label %41

41:                                               ; preds = %38, %30
  %42 = icmp eq i64 %33, 0
  br i1 %42, label %72, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %45 = bitcast %struct.gzFile_s* %44 to i8**
  %46 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %49

47:                                               ; preds = %62
  %48 = icmp eq i64 %69, 0
  br i1 %48, label %72, label %49, !llvm.loop !373

49:                                               ; preds = %47, %43
  %50 = phi i64 [ %33, %43 ], [ %69, %47 ]
  %51 = phi i1 [ false, %43 ], [ true, %47 ]
  %52 = load i32, i32* %17, align 8, !tbaa !330
  %53 = zext i32 %52 to i64
  %54 = icmp slt i64 %50, %53
  %55 = trunc i64 %50 to i32
  %56 = select i1 %54, i32 %55, i32 %52
  br i1 %51, label %57, label %59

57:                                               ; preds = %49
  %58 = zext i32 %56 to i64
  br label %62

59:                                               ; preds = %49
  %60 = load i8*, i8** %45, align 8, !tbaa !359
  %61 = zext i32 %56 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %60, i8 0, i64 %61, i1 false) #25
  br label %62

62:                                               ; preds = %59, %57
  %63 = phi i64 [ %58, %57 ], [ %61, %59 ]
  store i32 %56, i32* %35, align 8, !tbaa !84
  %64 = load i8*, i8** %45, align 8, !tbaa !359
  store i8* %64, i8** %7, align 8, !tbaa !89
  %65 = load i64, i64* %46, align 8, !tbaa !346
  %66 = add nsw i64 %65, %63
  store i64 %66, i64* %46, align 8, !tbaa !346
  %67 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %6, i32 noundef 0) #25
  %68 = icmp eq i32 %67, -1
  %69 = sub nsw i64 %50, %63
  br i1 %68, label %70, label %47

70:                                               ; preds = %62, %38
  %71 = load i32, i32* %12, align 4, !tbaa !345
  br label %129

72:                                               ; preds = %47, %41, %25
  %73 = getelementptr inbounds i8*, i8** %7, i64 1
  %74 = bitcast i8** %73 to i32*
  %75 = load i32, i32* %74, align 8, !tbaa !84
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %78 = bitcast %struct.gzFile_s* %77 to i8**
  %79 = load i8*, i8** %78, align 8, !tbaa !359
  br i1 %76, label %82, label %80

80:                                               ; preds = %72
  %81 = load i8*, i8** %7, align 8, !tbaa !89
  br label %83

82:                                               ; preds = %72
  store i8* %79, i8** %7, align 8, !tbaa !89
  br label %83

83:                                               ; preds = %80, %82
  %84 = phi i8* [ %81, %80 ], [ %79, %82 ]
  %85 = ptrtoint i8* %84 to i64
  %86 = ptrtoint i8* %79 to i64
  %87 = sub i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %79, i64 %87
  %89 = zext i32 %75 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = load i32, i32* %17, align 8, !tbaa !330
  %92 = add i32 %91, -1
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %90, i64 %93
  store i8 0, i8* %94, align 1, !tbaa !4
  %95 = load i32, i32* %17, align 8, !tbaa !330
  %96 = zext i32 %95 to i64
  %97 = tail call i32 @vsnprintf(i8* noundef %90, i64 noundef %96, i8* noundef %1, %struct.__va_list_tag* noundef %2) #25
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %129, label %99

99:                                               ; preds = %83
  %100 = load i32, i32* %17, align 8, !tbaa !330
  %101 = icmp ult i32 %97, %100
  br i1 %101, label %102, label %129

102:                                              ; preds = %99
  %103 = add i32 %100, -1
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %90, i64 %104
  %106 = load i8, i8* %105, align 1, !tbaa !4
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %129

108:                                              ; preds = %102
  %109 = load i32, i32* %74, align 8, !tbaa !84
  %110 = add i32 %109, %97
  store i32 %110, i32* %74, align 8, !tbaa !84
  %111 = sext i32 %97 to i64
  %112 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %113 = load i64, i64* %112, align 8, !tbaa !346
  %114 = add nsw i64 %113, %111
  store i64 %114, i64* %112, align 8, !tbaa !346
  %115 = icmp ult i32 %110, %100
  br i1 %115, label %129, label %116

116:                                              ; preds = %108
  %117 = sub i32 %110, %100
  store i32 %100, i32* %74, align 8, !tbaa !84
  %118 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %6, i32 noundef 0)
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = load i32, i32* %12, align 4, !tbaa !345
  br label %129

122:                                              ; preds = %116
  %123 = load i8*, i8** %78, align 8, !tbaa !359
  %124 = load i32, i32* %17, align 8, !tbaa !330
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %123, i64 %125
  %127 = zext i32 %117 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 %126, i64 %127, i1 false)
  %128 = load i8*, i8** %78, align 8, !tbaa !359
  store i8* %128, i8** %7, align 8, !tbaa !89
  store i32 %117, i32* %74, align 8, !tbaa !84
  br label %129

129:                                              ; preds = %108, %122, %83, %99, %102, %5, %11, %3, %120, %70, %23
  %130 = phi i32 [ %24, %23 ], [ %71, %70 ], [ %121, %120 ], [ -2, %3 ], [ -2, %11 ], [ -2, %5 ], [ 0, %102 ], [ 0, %99 ], [ 0, %83 ], [ %97, %122 ], [ %97, %108 ]
  ret i32 %130
}

; Function Attrs: nofree nounwind
declare noundef i32 @vsnprintf(i8* nocapture noundef, i64 noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) local_unnamed_addr #19

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind uwtable
define i32 @gzprintf(%struct.gzFile_s* noundef %0, i8* nocapture noundef readonly %1, ...) local_unnamed_addr #3 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #25
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %4)
  %6 = call i32 @gzvprintf(%struct.gzFile_s* noundef %0, i8* noundef %1, %struct.__va_list_tag* noundef nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #25
  ret i32 %6
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #24

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #24

; Function Attrs: nounwind uwtable
define i32 @gzflush(%struct.gzFile_s* noundef %0, i32 noundef %1) local_unnamed_addr #3 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %67, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8, !tbaa !327
  %8 = icmp eq i32 %7, 31153
  br i1 %8, label %9, label %67

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 18
  %11 = load i32, i32* %10, align 4, !tbaa !345
  %12 = icmp ne i32 %11, 0
  %13 = icmp ugt i32 %1, 4
  %14 = or i1 %13, %12
  br i1 %14, label %67, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %17 = bitcast i64* %16 to i32*
  %18 = load i32, i32* %17, align 8, !tbaa !344
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %63, label %20

20:                                               ; preds = %15
  store i32 0, i32* %17, align 8, !tbaa !344
  %21 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !349
  %24 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %25 = bitcast i64* %24 to i32*
  %26 = load i32, i32* %25, align 8, !tbaa !84
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %5, i32 noundef 0) #25
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %65, label %31

31:                                               ; preds = %28, %20
  %32 = icmp eq i64 %23, 0
  br i1 %32, label %63, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %35 = bitcast i64* %34 to i32*
  %36 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %37 = bitcast %struct.gzFile_s* %36 to i8**
  %38 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %39 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %42

40:                                               ; preds = %55
  %41 = icmp eq i64 %62, 0
  br i1 %41, label %63, label %42, !llvm.loop !373

42:                                               ; preds = %40, %33
  %43 = phi i64 [ %23, %33 ], [ %62, %40 ]
  %44 = phi i1 [ false, %33 ], [ true, %40 ]
  %45 = load i32, i32* %35, align 8, !tbaa !330
  %46 = zext i32 %45 to i64
  %47 = icmp slt i64 %43, %46
  %48 = trunc i64 %43 to i32
  %49 = select i1 %47, i32 %48, i32 %45
  br i1 %44, label %50, label %52

50:                                               ; preds = %42
  %51 = zext i32 %49 to i64
  br label %55

52:                                               ; preds = %42
  %53 = load i8*, i8** %37, align 8, !tbaa !359
  %54 = zext i32 %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 %54, i1 false) #25
  br label %55

55:                                               ; preds = %52, %50
  %56 = phi i64 [ %51, %50 ], [ %54, %52 ]
  store i32 %49, i32* %25, align 8, !tbaa !84
  %57 = load i8*, i8** %37, align 8, !tbaa !359
  store i8* %57, i8** %38, align 8, !tbaa !89
  %58 = load i64, i64* %39, align 8, !tbaa !346
  %59 = add nsw i64 %58, %56
  store i64 %59, i64* %39, align 8, !tbaa !346
  %60 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %5, i32 noundef 0) #25
  %61 = icmp eq i32 %60, -1
  %62 = sub nsw i64 %43, %56
  br i1 %61, label %65, label %40

63:                                               ; preds = %40, %31, %15
  %64 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %5, i32 noundef %1)
  br label %65

65:                                               ; preds = %55, %28, %63
  %66 = load i32, i32* %10, align 4, !tbaa !345
  br label %67

67:                                               ; preds = %65, %4, %9, %2
  %68 = phi i32 [ -2, %2 ], [ -2, %9 ], [ -2, %4 ], [ %66, %65 ]
  ret i32 %68
}

; Function Attrs: nounwind uwtable
define i32 @gzsetparams(%struct.gzFile_s* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %98, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %8 = bitcast i8** %7 to %struct.z_stream_s*
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %10 = load i32, i32* %9, align 8, !tbaa !327
  %11 = icmp eq i32 %10, 31153
  br i1 %11, label %12, label %98

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 18
  %14 = load i32, i32* %13, align 4, !tbaa !345
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %98

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 2
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18, align 8, !tbaa !335
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %98

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 2
  %23 = bitcast i64* %22 to i32*
  %24 = load i32, i32* %23, align 8, !tbaa !333
  %25 = icmp eq i32 %24, %1
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 14
  %28 = load i32, i32* %27, align 4, !tbaa !334
  %29 = icmp eq i32 %28, %2
  br i1 %29, label %98, label %30

30:                                               ; preds = %26, %21
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %32 = bitcast i64* %31 to i32*
  %33 = load i32, i32* %32, align 8, !tbaa !344
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %79, label %35

35:                                               ; preds = %30
  store i32 0, i32* %32, align 8, !tbaa !344
  %36 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !349
  %39 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %40 = bitcast i64* %39 to i32*
  %41 = load i32, i32* %40, align 8, !tbaa !84
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %6, i32 noundef 0) #25
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %77, label %46

46:                                               ; preds = %43, %35
  %47 = icmp eq i64 %38, 0
  br i1 %47, label %79, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %50 = bitcast i64* %49 to i32*
  %51 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %52 = bitcast %struct.gzFile_s* %51 to i8**
  %53 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %56

54:                                               ; preds = %69
  %55 = icmp eq i64 %76, 0
  br i1 %55, label %79, label %56, !llvm.loop !373

56:                                               ; preds = %54, %48
  %57 = phi i64 [ %38, %48 ], [ %76, %54 ]
  %58 = phi i1 [ false, %48 ], [ true, %54 ]
  %59 = load i32, i32* %50, align 8, !tbaa !330
  %60 = zext i32 %59 to i64
  %61 = icmp slt i64 %57, %60
  %62 = trunc i64 %57 to i32
  %63 = select i1 %61, i32 %62, i32 %59
  br i1 %58, label %64, label %66

64:                                               ; preds = %56
  %65 = zext i32 %63 to i64
  br label %69

66:                                               ; preds = %56
  %67 = load i8*, i8** %52, align 8, !tbaa !359
  %68 = zext i32 %63 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %67, i8 0, i64 %68, i1 false) #25
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi i64 [ %65, %64 ], [ %68, %66 ]
  store i32 %63, i32* %40, align 8, !tbaa !84
  %71 = load i8*, i8** %52, align 8, !tbaa !359
  store i8* %71, i8** %7, align 8, !tbaa !89
  %72 = load i64, i64* %53, align 8, !tbaa !346
  %73 = add nsw i64 %72, %70
  store i64 %73, i64* %53, align 8, !tbaa !346
  %74 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %6, i32 noundef 0) #25
  %75 = icmp eq i32 %74, -1
  %76 = sub nsw i64 %57, %70
  br i1 %75, label %77, label %54

77:                                               ; preds = %69, %43
  %78 = load i32, i32* %13, align 4, !tbaa !345
  br label %98

79:                                               ; preds = %54, %46, %30
  %80 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %81 = bitcast i64* %80 to i32*
  %82 = load i32, i32* %81, align 8, !tbaa !330
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %96, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds i8*, i8** %7, i64 1
  %86 = bitcast i8** %85 to i32*
  %87 = load i32, i32* %86, align 8, !tbaa !84
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %6, i32 noundef 5)
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = load i32, i32* %13, align 4, !tbaa !345
  br label %98

94:                                               ; preds = %89, %84
  %95 = tail call i32 @deflateParams(%struct.z_stream_s* noundef nonnull %8, i32 noundef %1, i32 noundef %2) #25
  br label %96

96:                                               ; preds = %94, %79
  store i32 %1, i32* %23, align 8, !tbaa !333
  %97 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 14
  store i32 %2, i32* %97, align 4, !tbaa !334
  br label %98

98:                                               ; preds = %26, %5, %12, %16, %3, %96, %92, %77
  %99 = phi i32 [ %78, %77 ], [ %93, %92 ], [ 0, %96 ], [ -2, %3 ], [ -2, %16 ], [ -2, %12 ], [ -2, %5 ], [ 0, %26 ]
  ret i32 %99
}

; Function Attrs: nounwind uwtable
define i32 @gzclose_w(%struct.gzFile_s* noundef %0) local_unnamed_addr #3 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %96, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8, !tbaa !327
  %7 = icmp eq i32 %6, 31153
  br i1 %7, label %8, label %96

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8, !tbaa !344
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %59, label %13

13:                                               ; preds = %8
  store i32 0, i32* %10, align 8, !tbaa !344
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !349
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 2
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18, align 8, !tbaa !84
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %13
  %22 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %4, i32 noundef 0) #25
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %56, label %24

24:                                               ; preds = %21, %13
  %25 = icmp eq i64 %16, 0
  br i1 %25, label %59, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %28 = bitcast i64* %27 to i32*
  %29 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %30 = bitcast %struct.gzFile_s* %29 to i8**
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %32 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %35

33:                                               ; preds = %48
  %34 = icmp eq i64 %55, 0
  br i1 %34, label %59, label %35, !llvm.loop !373

35:                                               ; preds = %33, %26
  %36 = phi i64 [ %16, %26 ], [ %55, %33 ]
  %37 = phi i1 [ false, %26 ], [ true, %33 ]
  %38 = load i32, i32* %28, align 8, !tbaa !330
  %39 = zext i32 %38 to i64
  %40 = icmp slt i64 %36, %39
  %41 = trunc i64 %36 to i32
  %42 = select i1 %40, i32 %41, i32 %38
  br i1 %37, label %43, label %45

43:                                               ; preds = %35
  %44 = zext i32 %42 to i64
  br label %48

45:                                               ; preds = %35
  %46 = load i8*, i8** %30, align 8, !tbaa !359
  %47 = zext i32 %42 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 %47, i1 false) #25
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi i64 [ %44, %43 ], [ %47, %45 ]
  store i32 %42, i32* %18, align 8, !tbaa !84
  %50 = load i8*, i8** %30, align 8, !tbaa !359
  store i8* %50, i8** %31, align 8, !tbaa !89
  %51 = load i64, i64* %32, align 8, !tbaa !346
  %52 = add nsw i64 %51, %49
  store i64 %52, i64* %32, align 8, !tbaa !346
  %53 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %4, i32 noundef 0) #25
  %54 = icmp eq i32 %53, -1
  %55 = sub nsw i64 %36, %49
  br i1 %54, label %56, label %33

56:                                               ; preds = %48, %21
  %57 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 18
  %58 = load i32, i32* %57, align 4, !tbaa !345
  br label %59

59:                                               ; preds = %33, %24, %56, %8
  %60 = phi i32 [ %58, %56 ], [ 0, %8 ], [ 0, %24 ], [ 0, %33 ]
  %61 = tail call fastcc i32 @gz_comp(%struct.gz_state* noundef nonnull %4, i32 noundef 4)
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 18
  %65 = load i32, i32* %64, align 4, !tbaa !345
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi i32 [ %65, %63 ], [ %60, %59 ]
  %68 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %69 = bitcast i64* %68 to i32*
  %70 = load i32, i32* %69, align 8, !tbaa !330
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %87, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 2
  %74 = bitcast i64* %73 to i32*
  %75 = load i32, i32* %74, align 8, !tbaa !335
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %79 = bitcast i8** %78 to %struct.z_stream_s*
  %80 = tail call i32 @deflateEnd(%struct.z_stream_s* noundef nonnull %79) #25
  %81 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 1
  %82 = load i8*, i8** %81, align 8, !tbaa !356
  tail call void @free(i8* noundef %82) #25
  br label %83

83:                                               ; preds = %77, %72
  %84 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %85 = bitcast %struct.gzFile_s* %84 to i8**
  %86 = load i8*, i8** %85, align 8, !tbaa !359
  tail call void @free(i8* noundef %86) #25
  br label %87

87:                                               ; preds = %83, %66
  tail call void @gz_error(%struct.gz_state* noundef nonnull %4, i32 noundef 0, i8* noundef null) #25
  %88 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 1
  %89 = load i8*, i8** %88, align 8, !tbaa !337
  tail call void @free(i8* noundef %89) #25
  %90 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 2
  %91 = load i32, i32* %90, align 4, !tbaa !338
  %92 = tail call i32 @close(i32 noundef %91) #25
  %93 = icmp eq i32 %92, -1
  %94 = select i1 %93, i32 -1, i32 %67
  %95 = bitcast %struct.gzFile_s* %0 to i8*
  tail call void @free(i8* noundef %95) #25
  br label %96

96:                                               ; preds = %3, %1, %87
  %97 = phi i32 [ %94, %87 ], [ -2, %1 ], [ -2, %3 ]
  ret i32 %97
}

attributes #0 = { nofree norecurse nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree norecurse nosync nounwind readnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { mustprogress nofree nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { argmemonly nofree nosync nounwind willreturn }
attributes #12 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nofree nosync nounwind uwtable writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { inaccessiblememonly mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nofree "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nofree nosync nounwind readnone willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { nofree nosync nounwind willreturn }
attributes #25 = { nounwind }
attributes #26 = { nounwind readonly willreturn }
attributes #27 = { nounwind readnone willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 14.0.0"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!5, !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !8}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
!16 = !{!17, !17, i64 0}
!17 = !{!"int", !5, i64 0}
!18 = distinct !{!18, !10}
!19 = !{!20, !20, i64 0}
!20 = !{!"long", !5, i64 0}
!21 = distinct !{!21, !10}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !10}
!25 = !{!26, !27, i64 48}
!26 = !{!"z_stream_s", !27, i64 0, !17, i64 8, !20, i64 16, !27, i64 24, !17, i64 32, !20, i64 40, !27, i64 48, !27, i64 56, !27, i64 64, !27, i64 72, !27, i64 80, !17, i64 88, !20, i64 96, !20, i64 104}
!27 = !{!"any pointer", !5, i64 0}
!28 = !{!26, !27, i64 64}
!29 = !{!26, !27, i64 80}
!30 = !{!26, !27, i64 72}
!31 = !{!26, !27, i64 56}
!32 = !{!33, !27, i64 0}
!33 = !{!"internal_state", !27, i64 0, !17, i64 8, !27, i64 16, !20, i64 24, !27, i64 32, !20, i64 40, !17, i64 48, !27, i64 56, !20, i64 64, !5, i64 72, !17, i64 76, !17, i64 80, !17, i64 84, !17, i64 88, !27, i64 96, !20, i64 104, !27, i64 112, !27, i64 120, !17, i64 128, !17, i64 132, !17, i64 136, !17, i64 140, !17, i64 144, !20, i64 152, !17, i64 160, !17, i64 164, !17, i64 168, !17, i64 172, !17, i64 176, !17, i64 180, !17, i64 184, !17, i64 188, !17, i64 192, !17, i64 196, !17, i64 200, !17, i64 204, !17, i64 208, !5, i64 212, !5, i64 2504, !5, i64 2748, !34, i64 2904, !34, i64 2928, !34, i64 2952, !5, i64 2976, !5, i64 3008, !17, i64 5300, !17, i64 5304, !5, i64 5308, !27, i64 5888, !17, i64 5896, !17, i64 5900, !17, i64 5904, !20, i64 5912, !20, i64 5920, !17, i64 5928, !17, i64 5932, !35, i64 5936, !17, i64 5940, !20, i64 5944}
!34 = !{!"tree_desc_s", !27, i64 0, !17, i64 8, !27, i64 16}
!35 = !{!"short", !5, i64 0}
!36 = !{!33, !17, i64 8}
!37 = !{!33, !17, i64 48}
!38 = !{!33, !27, i64 56}
!39 = !{!33, !17, i64 84}
!40 = !{!33, !17, i64 80}
!41 = !{!33, !17, i64 88}
!42 = !{!33, !17, i64 136}
!43 = !{!33, !17, i64 132}
!44 = !{!33, !17, i64 140}
!45 = !{!33, !17, i64 144}
!46 = !{!33, !27, i64 96}
!47 = !{!33, !27, i64 112}
!48 = !{!33, !27, i64 120}
!49 = !{!33, !20, i64 5944}
!50 = !{!33, !17, i64 5896}
!51 = !{!33, !27, i64 16}
!52 = !{!33, !20, i64 24}
!53 = !{!27, !27, i64 0}
!54 = !{!33, !27, i64 5888}
!55 = !{!33, !17, i64 5904}
!56 = !{!33, !17, i64 196}
!57 = !{!33, !17, i64 200}
!58 = !{!33, !5, i64 72}
!59 = !{!33, !20, i64 104}
!60 = !{!35, !35, i64 0}
!61 = !{!62, !35, i64 2}
!62 = !{!"config_s", !35, i64 0, !35, i64 2, !35, i64 4, !35, i64 6, !27, i64 8}
!63 = !{!33, !17, i64 192}
!64 = !{!62, !35, i64 0}
!65 = !{!33, !17, i64 204}
!66 = !{!62, !35, i64 4}
!67 = !{!33, !17, i64 208}
!68 = !{!62, !35, i64 6}
!69 = !{!33, !17, i64 188}
!70 = !{!33, !17, i64 172}
!71 = !{!33, !20, i64 152}
!72 = !{!33, !17, i64 180}
!73 = !{!33, !17, i64 5932}
!74 = !{!33, !17, i64 184}
!75 = !{!33, !17, i64 160}
!76 = !{!33, !17, i64 168}
!77 = !{!33, !17, i64 128}
!78 = !{!26, !20, i64 16}
!79 = !{!26, !17, i64 88}
!80 = !{!33, !20, i64 40}
!81 = !{!33, !27, i64 32}
!82 = !{!26, !20, i64 96}
!83 = !{!33, !17, i64 76}
!84 = !{!26, !17, i64 8}
!85 = !{!33, !17, i64 5940}
!86 = !{!26, !17, i64 32}
!87 = !{!26, !27, i64 24}
!88 = !{!26, !20, i64 40}
!89 = !{!26, !27, i64 0}
!90 = distinct !{!90, !10}
!91 = !{!33, !17, i64 5928}
!92 = !{!33, !17, i64 176}
!93 = !{!33, !17, i64 5900}
!94 = distinct !{!94, !10}
!95 = !{!33, !17, i64 164}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !10, !98}
!98 = !{!"llvm.loop.isvectorized", i32 1}
!99 = distinct !{!99, !10, !100, !98}
!100 = !{!"llvm.loop.unroll.runtime.disable"}
!101 = distinct !{!101, !10, !98}
!102 = distinct !{!102, !10, !100, !98}
!103 = distinct !{!103, !10}
!104 = distinct !{!104, !10}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !10}
!108 = distinct !{!108, !10}
!109 = !{!33, !35, i64 5936}
!110 = distinct !{!110, !10}
!111 = !{!62, !27, i64 8}
!112 = !{!113, !17, i64 0}
!113 = !{!"gz_header_s", !17, i64 0, !20, i64 8, !17, i64 16, !17, i64 20, !27, i64 24, !17, i64 32, !17, i64 36, !27, i64 40, !17, i64 48, !27, i64 56, !17, i64 64, !17, i64 68, !17, i64 72}
!114 = !{!113, !17, i64 68}
!115 = !{!113, !27, i64 24}
!116 = !{!113, !27, i64 40}
!117 = !{!113, !27, i64 56}
!118 = !{!113, !20, i64 8}
!119 = !{!113, !17, i64 20}
!120 = !{!113, !17, i64 32}
!121 = !{!33, !20, i64 64}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !10}
!124 = distinct !{!124, !10, !98}
!125 = distinct !{!125, !10, !100, !98}
!126 = distinct !{!126, !10, !98}
!127 = distinct !{!127, !10, !100, !98}
!128 = distinct !{!128, !10}
!129 = distinct !{!129, !10}
!130 = distinct !{!130, !10}
!131 = !{!33, !27, i64 2904}
!132 = !{!33, !27, i64 2928}
!133 = !{!33, !27, i64 2952}
!134 = !{!135, !17, i64 28}
!135 = !{!"inflate_state", !27, i64 0, !5, i64 8, !17, i64 12, !17, i64 16, !17, i64 20, !17, i64 24, !17, i64 28, !20, i64 32, !20, i64 40, !27, i64 48, !17, i64 56, !17, i64 60, !17, i64 64, !17, i64 68, !27, i64 72, !20, i64 80, !17, i64 88, !17, i64 92, !17, i64 96, !17, i64 100, !27, i64 104, !27, i64 112, !17, i64 120, !17, i64 124, !17, i64 128, !17, i64 132, !17, i64 136, !17, i64 140, !27, i64 144, !5, i64 152, !5, i64 792, !5, i64 1368, !17, i64 7144, !17, i64 7148, !17, i64 7152}
!136 = !{!135, !17, i64 56}
!137 = !{!135, !17, i64 60}
!138 = !{!135, !27, i64 72}
!139 = !{!135, !17, i64 68}
!140 = !{!135, !17, i64 64}
!141 = !{!135, !17, i64 7144}
!142 = !{!135, !5, i64 8}
!143 = !{!135, !17, i64 12}
!144 = !{!135, !27, i64 104}
!145 = !{!135, !17, i64 120}
!146 = !{!135, !27, i64 112}
!147 = !{!135, !17, i64 124}
!148 = distinct !{!148, !10}
!149 = !{!135, !17, i64 92}
!150 = distinct !{!150, !10}
!151 = distinct !{!151, !10}
!152 = !{!135, !17, i64 132}
!153 = !{!135, !17, i64 136}
!154 = !{!135, !17, i64 128}
!155 = !{!135, !17, i64 140}
!156 = distinct !{!156, !8}
!157 = distinct !{!157, !10}
!158 = distinct !{!158, !10}
!159 = !{!135, !27, i64 144}
!160 = !{i64 0, i64 1, !4, i64 1, i64 2, !60}
!161 = distinct !{!161, !10}
!162 = distinct !{!162, !10}
!163 = distinct !{!163, !10}
!164 = distinct !{!164, !10, !98}
!165 = distinct !{!165, !8}
!166 = distinct !{!166, !10, !98}
!167 = distinct !{!167, !10}
!168 = !{!135, !20, i64 80}
!169 = !{!135, !17, i64 88}
!170 = !{i64 0, i64 2, !60}
!171 = !{i64 0, i64 1, !4, i64 1, i64 1, !4, i64 2, i64 2, !60}
!172 = !{!135, !17, i64 100}
!173 = distinct !{!173, !10}
!174 = !{!135, !17, i64 96}
!175 = distinct !{!175, !10}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = distinct !{!181, !10, !98}
!182 = distinct !{!182, !8}
!183 = distinct !{!183, !8}
!184 = distinct !{!184, !10, !98}
!185 = distinct !{!185, !10}
!186 = !{!187, !5, i64 1}
!187 = !{!"", !5, i64 0, !5, i64 1, !35, i64 2}
!188 = !{!187, !5, i64 0}
!189 = !{!187, !35, i64 2}
!190 = !{!191}
!191 = distinct !{!191, !192}
!192 = distinct !{!192, !"LVerDomain"}
!193 = !{!194}
!194 = distinct !{!194, !192}
!195 = distinct !{!195, !10, !98}
!196 = distinct !{!196, !8}
!197 = distinct !{!197, !8}
!198 = distinct !{!198, !10, !98}
!199 = !{!200}
!200 = distinct !{!200, !201}
!201 = distinct !{!201, !"LVerDomain"}
!202 = !{!203}
!203 = distinct !{!203, !201}
!204 = distinct !{!204, !10, !98}
!205 = distinct !{!205, !8}
!206 = distinct !{!206, !8}
!207 = distinct !{!207, !10, !98}
!208 = !{!209}
!209 = distinct !{!209, !210}
!210 = distinct !{!210, !"LVerDomain"}
!211 = !{!212}
!212 = distinct !{!212, !210}
!213 = distinct !{!213, !10, !98}
!214 = distinct !{!214, !8}
!215 = distinct !{!215, !8}
!216 = distinct !{!216, !10, !98}
!217 = !{!218}
!218 = distinct !{!218, !219}
!219 = distinct !{!219, !"LVerDomain"}
!220 = !{!221}
!221 = distinct !{!221, !219}
!222 = distinct !{!222, !10, !98}
!223 = distinct !{!223, !8}
!224 = distinct !{!224, !8}
!225 = distinct !{!225, !10, !98}
!226 = distinct !{!226, !10}
!227 = distinct !{!227, !10}
!228 = distinct !{!228, !10}
!229 = !{!135, !27, i64 0}
!230 = !{!135, !20, i64 40}
!231 = !{!135, !17, i64 16}
!232 = !{!135, !17, i64 20}
!233 = !{!135, !17, i64 24}
!234 = !{!135, !27, i64 48}
!235 = !{!135, !17, i64 7148}
!236 = distinct !{!236, !10}
!237 = !{!135, !20, i64 32}
!238 = !{!113, !17, i64 72}
!239 = distinct !{!239, !10}
!240 = distinct !{!240, !10}
!241 = distinct !{!241, !10}
!242 = !{!113, !17, i64 16}
!243 = distinct !{!243, !10}
!244 = !{!113, !17, i64 36}
!245 = !{!113, !17, i64 48}
!246 = distinct !{!246, !10}
!247 = !{!113, !17, i64 64}
!248 = distinct !{!248, !10}
!249 = distinct !{!249, !10}
!250 = distinct !{!250, !10}
!251 = distinct !{!251, !10}
!252 = distinct !{!252, !10}
!253 = distinct !{!253, !8}
!254 = distinct !{!254, !10}
!255 = distinct !{!255, !10}
!256 = distinct !{!256, !10}
!257 = distinct !{!257, !10}
!258 = distinct !{!258, !10}
!259 = distinct !{!259, !10, !98}
!260 = distinct !{!260, !8}
!261 = distinct !{!261, !10, !98}
!262 = distinct !{!262, !10}
!263 = distinct !{!263, !10}
!264 = !{!135, !17, i64 7152}
!265 = distinct !{!265, !10}
!266 = !{!267}
!267 = distinct !{!267, !268}
!268 = distinct !{!268, !"LVerDomain"}
!269 = !{!270}
!270 = distinct !{!270, !268}
!271 = distinct !{!271, !10, !98}
!272 = distinct !{!272, !8}
!273 = distinct !{!273, !8}
!274 = distinct !{!274, !10, !98}
!275 = distinct !{!275, !10}
!276 = distinct !{!276, !10}
!277 = distinct !{!277, !10}
!278 = distinct !{!278, !8}
!279 = distinct !{!279, !10}
!280 = distinct !{!280, !10}
!281 = distinct !{!281, !8}
!282 = distinct !{!282, !10}
!283 = distinct !{!283, !10}
!284 = distinct !{!284, !10}
!285 = distinct !{!285, !10}
!286 = distinct !{!286, !10}
!287 = !{!33, !27, i64 2920}
!288 = !{!33, !27, i64 2944}
!289 = !{!33, !27, i64 2968}
!290 = distinct !{!290, !10}
!291 = distinct !{!291, !10}
!292 = !{!33, !17, i64 2912}
!293 = distinct !{!293, !10}
!294 = !{!33, !17, i64 2936}
!295 = !{!33, !20, i64 5912}
!296 = !{!33, !20, i64 5920}
!297 = distinct !{!297, !10}
!298 = !{!34, !27, i64 0}
!299 = !{!34, !27, i64 16}
!300 = !{!301, !27, i64 0}
!301 = !{!"static_tree_desc_s", !27, i64 0, !27, i64 8, !17, i64 16, !17, i64 20, !17, i64 24}
!302 = !{!301, !17, i64 20}
!303 = !{!33, !17, i64 5300}
!304 = !{!33, !17, i64 5304}
!305 = distinct !{!305, !10}
!306 = distinct !{!306, !10}
!307 = !{!34, !17, i64 8}
!308 = distinct !{!308, !10}
!309 = distinct !{!309, !10}
!310 = distinct !{!310, !10}
!311 = !{!301, !27, i64 8}
!312 = !{!301, !17, i64 16}
!313 = !{!301, !17, i64 24}
!314 = distinct !{!314, !10}
!315 = distinct !{!315, !10}
!316 = distinct !{!316, !10}
!317 = distinct !{!317, !10}
!318 = distinct !{!318, !10}
!319 = distinct !{!319, !10}
!320 = distinct !{!320, !8}
!321 = distinct !{!321, !10}
!322 = distinct !{!322, !10}
!323 = distinct !{!323, !10}
!324 = distinct !{!324, !10}
!325 = distinct !{!325, !10}
!326 = distinct !{!326, !10}
!327 = !{!328, !17, i64 24}
!328 = !{!"", !329, i64 0, !17, i64 24, !17, i64 28, !27, i64 32, !17, i64 40, !17, i64 44, !27, i64 48, !27, i64 56, !17, i64 64, !17, i64 68, !20, i64 72, !17, i64 80, !17, i64 84, !17, i64 88, !17, i64 92, !17, i64 96, !20, i64 104, !17, i64 112, !17, i64 116, !27, i64 120, !26, i64 128}
!329 = !{!"gzFile_s", !17, i64 0, !27, i64 8, !20, i64 16}
!330 = !{!328, !17, i64 40}
!331 = !{!328, !17, i64 44}
!332 = !{!328, !27, i64 120}
!333 = !{!328, !17, i64 88}
!334 = !{!328, !17, i64 92}
!335 = !{!328, !17, i64 64}
!336 = distinct !{!336, !10}
!337 = !{!328, !27, i64 32}
!338 = !{!328, !17, i64 28}
!339 = !{!328, !17, i64 0}
!340 = !{!328, !17, i64 80}
!341 = !{!328, !17, i64 84}
!342 = !{!328, !17, i64 68}
!343 = !{!328, !17, i64 96}
!344 = !{!328, !17, i64 112}
!345 = !{!328, !17, i64 116}
!346 = !{!328, !20, i64 16}
!347 = !{!328, !17, i64 136}
!348 = !{!328, !20, i64 72}
!349 = !{!328, !20, i64 104}
!350 = !{!328, !27, i64 8}
!351 = distinct !{!351, !10}
!352 = distinct !{!352, !10}
!353 = !{!328, !17, i64 160}
!354 = !{!328, !27, i64 152}
!355 = distinct !{!355, !10}
!356 = !{!328, !27, i64 56}
!357 = distinct !{!357, !10}
!358 = distinct !{!358, !10}
!359 = !{!328, !27, i64 48}
!360 = !{!361}
!361 = distinct !{!361, !362}
!362 = distinct !{!362, !"LVerDomain"}
!363 = !{!364}
!364 = distinct !{!364, !362}
!365 = distinct !{!365, !10, !98}
!366 = distinct !{!366, !8}
!367 = distinct !{!367, !10, !98, !100}
!368 = distinct !{!368, !8}
!369 = distinct !{!369, !10, !98}
!370 = !{!328, !27, i64 128}
!371 = distinct !{!371, !10}
!372 = distinct !{!372, !10}
!373 = distinct !{!373, !10}
!374 = distinct !{!374, !10}
!375 = distinct !{!375, !10}
!376 = distinct !{!376, !10}
!377 = distinct !{!377, !10}
