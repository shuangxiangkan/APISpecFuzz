; ModuleID = 'cjpeg.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i16], [16 x i16], [16 x i16], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (...)*, void (...)*, void (...)*, void (...)*, void (...)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (...)*, i8* (...)*, i8** (...)*, [64 x i16]** (...)*, %struct.jvirt_sarray_control* (...)*, %struct.jvirt_barray_control* (...)*, void (...)*, i8** (...)*, [64 x i16]** (...)*, void (...)*, void (...)*, i64, i64 }
%struct.jvirt_sarray_control = type { i8**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_sarray_control*, %struct.backing_store_struct }
%struct.backing_store_struct = type { void (...)*, void (...)*, void (...)*, %struct._IO_FILE*, [64 x i8] }
%struct.jvirt_barray_control = type { [64 x i16]**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_barray_control*, %struct.backing_store_struct }
%struct.jpeg_progress_mgr = type { void (...)*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (...)*, i32 (...)*, void (...)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i32], i32 }
%struct.JHUFF_TBL = type { [17 x i16], [256 x i16], i32 }
%struct.jpeg_comp_master = type { void (...)*, void (...)*, void (...)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (...)*, void (...)* }
%struct.jpeg_c_prep_controller = type { void (...)*, void (...)* }
%struct.jpeg_c_coef_controller = type { void (...)*, i32 (...)* }
%struct.jpeg_marker_writer = type { void (...)*, void (...)*, void (...)*, void (...)*, void (...)*, void (...)*, void (...)* }
%struct.jpeg_color_converter = type { void (...)*, void (...)* }
%struct.jpeg_downsampler = type { void (...)*, void (...)*, i32 }
%struct.jpeg_forward_dct = type { void (...)*, void (...)* }
%struct.jpeg_entropy_encoder = type { void (...)*, i32 (...)*, void (...)* }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.cjpeg_source_struct = type { void (...)*, i32 (...)*, void (...)*, %struct._IO_FILE*, i8**, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%struct._tga_source_struct = type { %struct.cjpeg_source_struct, %struct.jpeg_compress_struct*, i8**, %struct.jvirt_sarray_control*, i32, void (...)*, [4 x i8], i32, i32, i32, i32 (...)* }
%struct.cdjpeg_progress_mgr = type { %struct.jpeg_progress_mgr, i32, i32, i32 }
%struct._bmp_source_struct = type { %struct.cjpeg_source_struct, %struct.jpeg_compress_struct*, i8**, %struct.jvirt_sarray_control*, i32, i32, i32 }
%struct.my_destination_mgr = type { %struct.jpeg_destination_mgr, %struct._IO_FILE*, i8* }
%struct.my_comp_master = type { %struct.jpeg_comp_master, i32, i32, i32, i32 }
%struct.my_marker_writer = type { %struct.jpeg_marker_writer, i32 }
%struct.my_main_controller = type { %struct.jpeg_c_main_controller, i32, i32, i32, i32, [10 x i8**] }
%struct.my_prep_controller = type { %struct.jpeg_c_prep_controller, [10 x i8**], i32, i32, i32, i32 }
%struct.my_coef_controller = type { %struct.jpeg_c_coef_controller, i32, i32, i32, i32, [10 x [64 x i16]*], [10 x %struct.jvirt_barray_control*] }
%struct.my_color_converter = type { %struct.jpeg_color_converter, i64* }
%struct.my_downsampler = type { %struct.jpeg_downsampler, [10 x void (...)*] }
%struct.c_derived_tbl = type { [256 x i32], [256 x i8] }
%struct.huff_entropy_encoder = type { %struct.jpeg_entropy_encoder, %struct.savable_state, i32, i32, [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*], [4 x i64*], [4 x i64*] }
%struct.savable_state = type { i64, i32, [4 x i32] }
%struct.working_state = type { i8*, i64, %struct.savable_state, %struct.jpeg_compress_struct* }
%struct.phuff_entropy_encoder = type { %struct.jpeg_entropy_encoder, i32, i8*, i64, i64, i32, %struct.jpeg_compress_struct*, [4 x i32], i32, i32, i32, i8*, i32, i32, [4 x %struct.c_derived_tbl*], [4 x i64*] }
%struct.my_fdct_controller = type { %struct.jpeg_forward_dct, void (...)*, [4 x i32*], void (...)*, [4 x double*] }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i16, i32, i32, i8* }
%struct.my_memory_mgr = type { %struct.jpeg_memory_mgr, [2 x %union.small_pool_struct*], [2 x %union.large_pool_struct*], %struct.jvirt_sarray_control*, %struct.jvirt_barray_control*, i64, i32 }
%union.small_pool_struct = type { %struct.anon }
%struct.anon = type { %union.small_pool_struct*, i64, i64 }
%union.large_pool_struct = type { %struct.anon.0 }
%struct.anon.0 = type { %union.large_pool_struct*, i64, i64 }

@progname = internal unnamed_addr global i8* null, align 8
@.str = private unnamed_addr constant [6 x i8] c"cjpeg\00", align 1
@cdjpeg_message_table = internal constant [44 x i8*] [i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i32 0, i32 0), i8* null], align 16
@.str.1 = private unnamed_addr constant [25 x i8] c"%s: only one input file\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"%s: can't open %s\0A\00", align 1
@outfilename = internal unnamed_addr global i8* null, align 8
@.str.4 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Unsupported BMP colormap format\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Only 8- and 24-bit BMP files are supported\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Invalid BMP file: bad header length\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"Invalid BMP file: biPlanes not equal to 1\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"BMP output must be grayscale or RGB\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"Sorry, compressed BMPs not yet supported\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"Not a BMP file - does not start with BM\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"%ux%u 24-bit BMP image\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"%ux%u 8-bit colormapped BMP image\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"%ux%u 24-bit OS2 BMP image\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"%ux%u 8-bit colormapped OS2 BMP image\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"GIF output got confused\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Bogus GIF codesize %d\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"GIF output must be grayscale or RGB\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"Too few images in GIF file\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"Not a GIF file\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"%ux%ux%d GIF image\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"Warning: unexpected GIF version number '%c%c%c'\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"Ignoring GIF extension block of type 0x%02x\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"Caution: nonsquare pixels in input\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"Corrupt data in GIF file\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"Bogus char 0x%02x in GIF file, ignoring\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"Premature end of GIF image\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"Ran out of GIF bits\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"PPM output must be grayscale or RGB\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Nonnumeric data in PPM file\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"Not a PPM/PGM file\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"%ux%u PGM image\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"%ux%u text PGM image\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"%ux%u PPM image\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"%ux%u text PPM image\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"Unsupported Targa colormap format\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"Invalid or unsupported Targa file\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"Targa output must be grayscale or RGB\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"%ux%u RGB Targa image\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"%ux%u grayscale Targa image\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"%ux%u colormapped Targa image\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"Color map file is invalid or of unsupported format\00", align 1
@.str.43 = private unnamed_addr constant [53 x i8] c"Output file format cannot handle %d colormap entries\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"ungetc failed\00", align 1
@.str.45 = private unnamed_addr constant [59 x i8] c"Unrecognized input file format --- perhaps you need -targa\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"Unsupported output file format\00", align 1
@is_targa = internal unnamed_addr global i1 false, align 4
@.str.47 = private unnamed_addr constant [11 x i8] c"arithmetic\00", align 1
@.str.48 = private unnamed_addr constant [44 x i8] c"%s: sorry, arithmetic coding not supported\0A\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"baseline\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"dct\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@parse_switches.printed_version = internal unnamed_addr global i1 false, align 4
@.str.56 = private unnamed_addr constant [47 x i8] c"Independent JPEG Group's CJPEG, version %s\0A%s\0A\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"6b  27-Mar-1998\00", align 1
@.str.58 = private unnamed_addr constant [35 x i8] c"Copyright (C) 1998, Thomas G. Lane\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"grayscale\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"greyscale\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"maxmemory\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"%ld%c\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"optimise\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"outfile\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"progressive\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"quality\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"qslots\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"qtables\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"scans\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"smooth\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"targa\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"usage: %s [switches] \00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"[inputfile]\0A\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"Switches (names may be abbreviated):\0A\00", align 1
@.str.79 = private unnamed_addr constant [69 x i8] c"  -quality N     Compression quality (0..100; 5-95 is useful range)\0A\00", align 1
@.str.80 = private unnamed_addr constant [46 x i8] c"  -grayscale     Create monochrome JPEG file\0A\00", align 1
@.str.81 = private unnamed_addr constant [78 x i8] c"  -optimize      Optimize Huffman table (smaller file, but slow compression)\0A\00", align 1
@.str.82 = private unnamed_addr constant [47 x i8] c"  -progressive   Create progressive JPEG file\0A\00", align 1
@.str.83 = private unnamed_addr constant [66 x i8] c"  -targa         Input file is Targa format (usually not needed)\0A\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"Switches for advanced users:\0A\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"  -dct int       Use integer DCT method%s\0A\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c" (default)\00", align 1
@.str.87 = private unnamed_addr constant [57 x i8] c"  -dct fast      Use fast integer DCT (less accurate)%s\0A\00", align 1
@.str.88 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"  -dct float     Use floating-point DCT method%s\0A\00", align 1
@.str.90 = private unnamed_addr constant [68 x i8] c"  -restart N     Set restart interval in rows, or in blocks with B\0A\00", align 1
@.str.91 = private unnamed_addr constant [63 x i8] c"  -smooth N      Smooth dithered input (N=1..100 is strength)\0A\00", align 1
@.str.92 = private unnamed_addr constant [52 x i8] c"  -maxmemory N   Maximum memory to use (in kbytes)\0A\00", align 1
@.str.93 = private unnamed_addr constant [47 x i8] c"  -outfile name  Specify name for output file\0A\00", align 1
@.str.94 = private unnamed_addr constant [44 x i8] c"  -verbose  or  -debug   Emit debug output\0A\00", align 1
@.str.95 = private unnamed_addr constant [23 x i8] c"Switches for wizards:\0A\00", align 1
@.str.96 = private unnamed_addr constant [53 x i8] c"  -baseline      Force baseline quantization tables\0A\00", align 1
@.str.97 = private unnamed_addr constant [56 x i8] c"  -qtables file  Use quantization tables given in file\0A\00", align 1
@.str.98 = private unnamed_addr constant [56 x i8] c"  -qslots N[,...]    Set component quantization tables\0A\00", align 1
@.str.99 = private unnamed_addr constant [53 x i8] c"  -sample HxV[,...]  Set component sampling factors\0A\00", align 1
@.str.100 = private unnamed_addr constant [57 x i8] c"  -scans file    Create multi-scan JPEG per script file\0A\00", align 1
@.str.101 = private unnamed_addr constant [53 x i8] c"GIF input is unsupported for legal reasons.  Sorry.\0A\00", align 1
@c5to8bits = internal unnamed_addr constant [32 x i16] [i16 0, i16 8, i16 16, i16 25, i16 33, i16 41, i16 49, i16 58, i16 66, i16 74, i16 82, i16 90, i16 99, i16 107, i16 115, i16 123, i16 132, i16 140, i16 148, i16 156, i16 165, i16 173, i16 181, i16 189, i16 197, i16 206, i16 214, i16 222, i16 230, i16 239, i16 247, i16 255], align 16
@.str.111 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1.112 = private unnamed_addr constant [26 x i8] c"Can't open table file %s\0A\00", align 1
@.str.2.113 = private unnamed_addr constant [28 x i8] c"Too many tables in file %s\0A\00", align 1
@.str.3.114 = private unnamed_addr constant [31 x i8] c"Invalid table data in file %s\0A\00", align 1
@.str.4.115 = private unnamed_addr constant [29 x i8] c"Non-numeric data in file %s\0A\00", align 1
@.str.5.118 = private unnamed_addr constant [36 x i8] c"Can't open scan definition file %s\0A\00", align 1
@.str.6.119 = private unnamed_addr constant [35 x i8] c"Too many scans defined in file %s\0A\00", align 1
@.str.7.120 = private unnamed_addr constant [44 x i8] c"Too many components in one scan in file %s\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [38 x i8] c"Invalid scan entry format in file %s\0A\00", align 1
@.str.9.124 = private unnamed_addr constant [5 x i8] c"%d%c\00", align 1
@.str.10.125 = private unnamed_addr constant [45 x i8] c"JPEG quantization tables are numbered 0..%d\0A\00", align 1
@.str.11.128 = private unnamed_addr constant [9 x i8] c"%d%c%d%c\00", align 1
@.str.12.129 = private unnamed_addr constant [36 x i8] c"JPEG sampling factors must be 1..4\0A\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@jpeg_set_linear_quality.std_luminance_quant_tbl = internal unnamed_addr constant [64 x i32] [i32 16, i32 11, i32 10, i32 16, i32 24, i32 40, i32 51, i32 61, i32 12, i32 12, i32 14, i32 19, i32 26, i32 58, i32 60, i32 55, i32 14, i32 13, i32 16, i32 24, i32 40, i32 57, i32 69, i32 56, i32 14, i32 17, i32 22, i32 29, i32 51, i32 87, i32 80, i32 62, i32 18, i32 22, i32 37, i32 56, i32 68, i32 109, i32 103, i32 77, i32 24, i32 35, i32 55, i32 64, i32 81, i32 104, i32 113, i32 92, i32 49, i32 64, i32 78, i32 87, i32 103, i32 121, i32 120, i32 101, i32 72, i32 92, i32 95, i32 98, i32 112, i32 100, i32 103, i32 99], align 16
@jpeg_set_linear_quality.std_chrominance_quant_tbl = internal unnamed_addr constant [64 x i32] [i32 17, i32 18, i32 24, i32 47, i32 99, i32 99, i32 99, i32 99, i32 18, i32 21, i32 26, i32 66, i32 99, i32 99, i32 99, i32 99, i32 24, i32 26, i32 56, i32 99, i32 99, i32 99, i32 99, i32 99, i32 47, i32 66, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99], align 16
@std_huff_tables.bits_dc_luminance = internal unnamed_addr constant [17 x i16] [i16 0, i16 0, i16 1, i16 5, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0], align 16
@std_huff_tables.bits_dc_chrominance = internal unnamed_addr constant [17 x i16] [i16 0, i16 0, i16 3, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 0, i16 0, i16 0], align 16
@std_huff_tables.val_dc_chrominance = internal unnamed_addr constant [12 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11], align 16
@std_huff_tables.bits_ac_luminance = internal unnamed_addr constant [17 x i16] [i16 0, i16 0, i16 2, i16 1, i16 3, i16 3, i16 2, i16 4, i16 3, i16 5, i16 5, i16 4, i16 4, i16 0, i16 0, i16 1, i16 125], align 16
@std_huff_tables.val_ac_luminance = internal unnamed_addr constant [162 x i16] [i16 1, i16 2, i16 3, i16 0, i16 4, i16 17, i16 5, i16 18, i16 33, i16 49, i16 65, i16 6, i16 19, i16 81, i16 97, i16 7, i16 34, i16 113, i16 20, i16 50, i16 129, i16 145, i16 161, i16 8, i16 35, i16 66, i16 177, i16 193, i16 21, i16 82, i16 209, i16 240, i16 36, i16 51, i16 98, i16 114, i16 130, i16 9, i16 10, i16 22, i16 23, i16 24, i16 25, i16 26, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 146, i16 147, i16 148, i16 149, i16 150, i16 151, i16 152, i16 153, i16 154, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167, i16 168, i16 169, i16 170, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215, i16 216, i16 217, i16 218, i16 225, i16 226, i16 227, i16 228, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250], align 16
@std_huff_tables.bits_ac_chrominance = internal unnamed_addr constant [17 x i16] [i16 0, i16 0, i16 2, i16 1, i16 2, i16 4, i16 4, i16 3, i16 4, i16 7, i16 5, i16 4, i16 4, i16 0, i16 1, i16 2, i16 119], align 16
@std_huff_tables.val_ac_chrominance = internal unnamed_addr constant [162 x i16] [i16 0, i16 1, i16 2, i16 3, i16 17, i16 4, i16 5, i16 33, i16 49, i16 6, i16 18, i16 65, i16 81, i16 7, i16 97, i16 113, i16 19, i16 34, i16 50, i16 129, i16 8, i16 20, i16 66, i16 145, i16 161, i16 177, i16 193, i16 9, i16 35, i16 51, i16 82, i16 240, i16 21, i16 98, i16 114, i16 209, i16 10, i16 22, i16 36, i16 52, i16 225, i16 37, i16 241, i16 23, i16 24, i16 25, i16 26, i16 38, i16 39, i16 40, i16 41, i16 42, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 146, i16 147, i16 148, i16 149, i16 150, i16 151, i16 152, i16 153, i16 154, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167, i16 168, i16 169, i16 170, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215, i16 216, i16 217, i16 218, i16 226, i16 227, i16 228, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250], align 16
@start_pass_fdctmgr.aanscales = internal unnamed_addr constant [64 x i16] [i16 16384, i16 22725, i16 21407, i16 19266, i16 16384, i16 12873, i16 8867, i16 4520, i16 22725, i16 31521, i16 29692, i16 26722, i16 22725, i16 17855, i16 12299, i16 6270, i16 21407, i16 29692, i16 27969, i16 25172, i16 21407, i16 16819, i16 11585, i16 5906, i16 19266, i16 26722, i16 25172, i16 22654, i16 19266, i16 15137, i16 10426, i16 5315, i16 16384, i16 22725, i16 21407, i16 19266, i16 16384, i16 12873, i16 8867, i16 4520, i16 12873, i16 17855, i16 16819, i16 15137, i16 12873, i16 10114, i16 6967, i16 3552, i16 8867, i16 12299, i16 11585, i16 10426, i16 8867, i16 6967, i16 4799, i16 2446, i16 4520, i16 6270, i16 5906, i16 5315, i16 4520, i16 3552, i16 2446, i16 1247], align 16
@start_pass_fdctmgr.aanscalefactor = internal unnamed_addr constant [8 x double] [double 1.000000e+00, double 0x3FF63150B14861EF, double 0x3FF4E7AE914D6FCA, double 0x3FF2D062EF6C11AA, double 1.000000e+00, double 0x3FE92469C0A7BF3B, double 0x3FE1517A7BC720BB, double 0x3FD1A855DE72AB5D], align 16
@jpeg_natural_order = dso_local local_unnamed_addr constant [80 x i32] [i32 0, i32 1, i32 8, i32 16, i32 9, i32 2, i32 3, i32 10, i32 17, i32 24, i32 32, i32 25, i32 18, i32 11, i32 4, i32 5, i32 12, i32 19, i32 26, i32 33, i32 40, i32 48, i32 41, i32 34, i32 27, i32 20, i32 13, i32 6, i32 7, i32 14, i32 21, i32 28, i32 35, i32 42, i32 49, i32 56, i32 57, i32 50, i32 43, i32 36, i32 29, i32 22, i32 15, i32 23, i32 30, i32 37, i32 44, i32 51, i32 58, i32 59, i32 52, i32 45, i32 38, i32 31, i32 39, i32 46, i32 53, i32 60, i32 61, i32 54, i32 47, i32 55, i32 62, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63], align 16
@.str.208 = private unnamed_addr constant [22 x i8] c"Bogus message code %d\00", align 1
@.str.1.209 = private unnamed_addr constant [57 x i8] c"Sorry, there are legal restrictions on arithmetic coding\00", align 1
@.str.2.210 = private unnamed_addr constant [32 x i8] c"ALIGN_TYPE is wrong, please fix\00", align 1
@.str.3.211 = private unnamed_addr constant [37 x i8] c"MAX_ALLOC_CHUNK is wrong, please fix\00", align 1
@.str.4.212 = private unnamed_addr constant [26 x i8] c"Bogus buffer control mode\00", align 1
@.str.5.213 = private unnamed_addr constant [31 x i8] c"Invalid component ID %d in SOS\00", align 1
@.str.6.214 = private unnamed_addr constant [29 x i8] c"DCT coefficient out of range\00", align 1
@.str.7.215 = private unnamed_addr constant [40 x i8] c"IDCT output block size %d not supported\00", align 1
@.str.8.216 = private unnamed_addr constant [31 x i8] c"Bogus Huffman table definition\00", align 1
@.str.9.217 = private unnamed_addr constant [23 x i8] c"Bogus input colorspace\00", align 1
@.str.10.218 = private unnamed_addr constant [22 x i8] c"Bogus JPEG colorspace\00", align 1
@.str.11.219 = private unnamed_addr constant [20 x i8] c"Bogus marker length\00", align 1
@.str.12.220 = private unnamed_addr constant [61 x i8] c"Wrong JPEG library version: library is %d, caller expects %d\00", align 1
@.str.13.221 = private unnamed_addr constant [48 x i8] c"Sampling factors too large for interleaved scan\00", align 1
@.str.14.222 = private unnamed_addr constant [28 x i8] c"Invalid memory pool code %d\00", align 1
@.str.15.223 = private unnamed_addr constant [35 x i8] c"Unsupported JPEG data precision %d\00", align 1
@.str.16.224 = private unnamed_addr constant [55 x i8] c"Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d\00", align 1
@.str.17.225 = private unnamed_addr constant [55 x i8] c"Invalid progressive parameters at scan script entry %d\00", align 1
@.str.18.226 = private unnamed_addr constant [23 x i8] c"Bogus sampling factors\00", align 1
@.str.19.227 = private unnamed_addr constant [32 x i8] c"Invalid scan script at entry %d\00", align 1
@.str.20.228 = private unnamed_addr constant [42 x i8] c"Improper call to JPEG library in state %d\00", align 1
@.str.21.229 = private unnamed_addr constant [77 x i8] c"JPEG parameter struct mismatch: library thinks size is %u, caller expects %u\00", align 1
@.str.22.230 = private unnamed_addr constant [27 x i8] c"Bogus virtual array access\00", align 1
@.str.23.231 = private unnamed_addr constant [43 x i8] c"Buffer passed to JPEG library is too small\00", align 1
@.str.24.232 = private unnamed_addr constant [28 x i8] c"Suspension not allowed here\00", align 1
@.str.25.233 = private unnamed_addr constant [37 x i8] c"CCIR601 sampling not implemented yet\00", align 1
@.str.26.234 = private unnamed_addr constant [38 x i8] c"Too many color components: %d, max %d\00", align 1
@.str.27.235 = private unnamed_addr constant [37 x i8] c"Unsupported color conversion request\00", align 1
@.str.28.236 = private unnamed_addr constant [19 x i8] c"Bogus DAC index %d\00", align 1
@.str.29.237 = private unnamed_addr constant [21 x i8] c"Bogus DAC value 0x%x\00", align 1
@.str.30.238 = private unnamed_addr constant [19 x i8] c"Bogus DHT index %d\00", align 1
@.str.31.239 = private unnamed_addr constant [19 x i8] c"Bogus DQT index %d\00", align 1
@.str.32.240 = private unnamed_addr constant [37 x i8] c"Empty JPEG image (DNL not supported)\00", align 1
@.str.33.241 = private unnamed_addr constant [21 x i8] c"Read from EMS failed\00", align 1
@.str.34.242 = private unnamed_addr constant [20 x i8] c"Write to EMS failed\00", align 1
@.str.35.243 = private unnamed_addr constant [33 x i8] c"Didn't expect more than one scan\00", align 1
@.str.36.244 = private unnamed_addr constant [22 x i8] c"Input file read error\00", align 1
@.str.37.245 = private unnamed_addr constant [47 x i8] c"Output file write error --- out of disk space?\00", align 1
@.str.38.246 = private unnamed_addr constant [40 x i8] c"Fractional sampling not implemented yet\00", align 1
@.str.39.247 = private unnamed_addr constant [33 x i8] c"Huffman code size table overflow\00", align 1
@.str.40.248 = private unnamed_addr constant [33 x i8] c"Missing Huffman code table entry\00", align 1
@.str.41.249 = private unnamed_addr constant [47 x i8] c"Maximum supported image dimension is %u pixels\00", align 1
@.str.42.250 = private unnamed_addr constant [17 x i8] c"Empty input file\00", align 1
@.str.43.251 = private unnamed_addr constant [28 x i8] c"Premature end of input file\00", align 1
@.str.44.252 = private unnamed_addr constant [62 x i8] c"Cannot transcode due to multiple use of quantization table %d\00", align 1
@.str.45.253 = private unnamed_addr constant [39 x i8] c"Scan script does not transmit all data\00", align 1
@.str.46.254 = private unnamed_addr constant [39 x i8] c"Invalid color quantization mode change\00", align 1
@.str.47.255 = private unnamed_addr constant [20 x i8] c"Not implemented yet\00", align 1
@.str.48.256 = private unnamed_addr constant [46 x i8] c"Requested feature was omitted at compile time\00", align 1
@.str.49.257 = private unnamed_addr constant [28 x i8] c"Backing store not supported\00", align 1
@.str.50.258 = private unnamed_addr constant [37 x i8] c"Huffman table 0x%02x was not defined\00", align 1
@.str.51.259 = private unnamed_addr constant [34 x i8] c"JPEG datastream contains no image\00", align 1
@.str.52.260 = private unnamed_addr constant [42 x i8] c"Quantization table 0x%02x was not defined\00", align 1
@.str.53.261 = private unnamed_addr constant [43 x i8] c"Not a JPEG file: starts with 0x%02x 0x%02x\00", align 1
@.str.54.262 = private unnamed_addr constant [30 x i8] c"Insufficient memory (case %d)\00", align 1
@.str.55.263 = private unnamed_addr constant [46 x i8] c"Cannot quantize more than %d color components\00", align 1
@.str.56.264 = private unnamed_addr constant [40 x i8] c"Cannot quantize to fewer than %d colors\00", align 1
@.str.57.265 = private unnamed_addr constant [39 x i8] c"Cannot quantize to more than %d colors\00", align 1
@.str.58.266 = private unnamed_addr constant [45 x i8] c"Invalid JPEG file structure: two SOF markers\00", align 1
@.str.59.267 = private unnamed_addr constant [48 x i8] c"Invalid JPEG file structure: missing SOS marker\00", align 1
@.str.60.268 = private unnamed_addr constant [42 x i8] c"Unsupported JPEG process: SOF type 0x%02x\00", align 1
@.str.61.269 = private unnamed_addr constant [45 x i8] c"Invalid JPEG file structure: two SOI markers\00", align 1
@.str.62.270 = private unnamed_addr constant [44 x i8] c"Invalid JPEG file structure: SOS before SOF\00", align 1
@.str.63.271 = private unnamed_addr constant [35 x i8] c"Failed to create temporary file %s\00", align 1
@.str.64.272 = private unnamed_addr constant [30 x i8] c"Read failed on temporary file\00", align 1
@.str.65.273 = private unnamed_addr constant [30 x i8] c"Seek failed on temporary file\00", align 1
@.str.66.274 = private unnamed_addr constant [54 x i8] c"Write failed on temporary file --- out of disk space?\00", align 1
@.str.67.275 = private unnamed_addr constant [42 x i8] c"Application transferred too few scanlines\00", align 1
@.str.68.276 = private unnamed_addr constant [31 x i8] c"Unsupported marker type 0x%02x\00", align 1
@.str.69.277 = private unnamed_addr constant [35 x i8] c"Virtual array controller messed up\00", align 1
@.str.70.278 = private unnamed_addr constant [39 x i8] c"Image too wide for this implementation\00", align 1
@.str.71.279 = private unnamed_addr constant [21 x i8] c"Read from XMS failed\00", align 1
@.str.72.280 = private unnamed_addr constant [20 x i8] c"Write to XMS failed\00", align 1
@.str.73.281 = private unnamed_addr constant [35 x i8] c"Copyright (C) 1998, Thomas G. Lane\00", align 1
@.str.74.282 = private unnamed_addr constant [16 x i8] c"6b  27-Mar-1998\00", align 1
@.str.75.283 = private unnamed_addr constant [62 x i8] c"Caution: quantization tables are too coarse for baseline JPEG\00", align 1
@.str.76.284 = private unnamed_addr constant [66 x i8] c"Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d\00", align 1
@.str.77.285 = private unnamed_addr constant [42 x i8] c"Unknown APP0 marker (not JFIF), length %u\00", align 1
@.str.78.286 = private unnamed_addr constant [44 x i8] c"Unknown APP14 marker (not Adobe), length %u\00", align 1
@.str.79.287 = private unnamed_addr constant [39 x i8] c"Define Arithmetic Table 0x%02x: 0x%02x\00", align 1
@.str.80.288 = private unnamed_addr constant [28 x i8] c"Define Huffman Table 0x%02x\00", align 1
@.str.81.289 = private unnamed_addr constant [43 x i8] c"Define Quantization Table %d  precision %d\00", align 1
@.str.82.290 = private unnamed_addr constant [27 x i8] c"Define Restart Interval %u\00", align 1
@.str.83.291 = private unnamed_addr constant [20 x i8] c"Freed EMS handle %u\00", align 1
@.str.84.292 = private unnamed_addr constant [23 x i8] c"Obtained EMS handle %u\00", align 1
@.str.85.293 = private unnamed_addr constant [13 x i8] c"End Of Image\00", align 1
@.str.86.294 = private unnamed_addr constant [40 x i8] c"        %3d %3d %3d %3d %3d %3d %3d %3d\00", align 1
@.str.87.295 = private unnamed_addr constant [53 x i8] c"JFIF APP0 marker: version %d.%02d, density %dx%d  %d\00", align 1
@.str.88.296 = private unnamed_addr constant [60 x i8] c"Warning: thumbnail image size does not match data length %u\00", align 1
@.str.89.297 = private unnamed_addr constant [46 x i8] c"JFIF extension marker: type 0x%02x, length %u\00", align 1
@.str.90.298 = private unnamed_addr constant [33 x i8] c"    with %d x %d thumbnail image\00", align 1
@.str.91.299 = private unnamed_addr constant [39 x i8] c"Miscellaneous marker 0x%02x, length %u\00", align 1
@.str.92.300 = private unnamed_addr constant [25 x i8] c"Unexpected marker 0x%02x\00", align 1
@.str.93.301 = private unnamed_addr constant [40 x i8] c"        %4u %4u %4u %4u %4u %4u %4u %4u\00", align 1
@.str.94.302 = private unnamed_addr constant [35 x i8] c"Quantizing to %d = %d*%d*%d colors\00", align 1
@.str.95.303 = private unnamed_addr constant [24 x i8] c"Quantizing to %d colors\00", align 1
@.str.96.304 = private unnamed_addr constant [36 x i8] c"Selected %d colors for quantization\00", align 1
@.str.97.305 = private unnamed_addr constant [37 x i8] c"At marker 0x%02x, recovery action %d\00", align 1
@.str.98.306 = private unnamed_addr constant [6 x i8] c"RST%d\00", align 1
@.str.99.307 = private unnamed_addr constant [57 x i8] c"Smoothing not supported with nonstandard sampling ratios\00", align 1
@.str.100.308 = private unnamed_addr constant [58 x i8] c"Start Of Frame 0x%02x: width=%u, height=%u, components=%d\00", align 1
@.str.101.309 = private unnamed_addr constant [31 x i8] c"    Component %d: %dhx%dv q=%d\00", align 1
@.str.102 = private unnamed_addr constant [15 x i8] c"Start of Image\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"Start Of Scan: %d components\00", align 1
@.str.104 = private unnamed_addr constant [30 x i8] c"    Component %d: dc=%d ac=%d\00", align 1
@.str.105 = private unnamed_addr constant [29 x i8] c"  Ss=%d, Se=%d, Ah=%d, Al=%d\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"Closed temporary file %s\00", align 1
@.str.107 = private unnamed_addr constant [25 x i8] c"Opened temporary file %s\00", align 1
@.str.108 = private unnamed_addr constant [66 x i8] c"JFIF extension marker: JPEG-compressed thumbnail image, length %u\00", align 1
@.str.109 = private unnamed_addr constant [58 x i8] c"JFIF extension marker: palette thumbnail image, length %u\00", align 1
@.str.110 = private unnamed_addr constant [54 x i8] c"JFIF extension marker: RGB thumbnail image, length %u\00", align 1
@.str.111.310 = private unnamed_addr constant [52 x i8] c"Unrecognized component IDs %d %d %d, assuming YCbCr\00", align 1
@.str.112 = private unnamed_addr constant [20 x i8] c"Freed XMS handle %u\00", align 1
@.str.113 = private unnamed_addr constant [23 x i8] c"Obtained XMS handle %u\00", align 1
@.str.114 = private unnamed_addr constant [38 x i8] c"Unknown Adobe color transform code %d\00", align 1
@.str.115 = private unnamed_addr constant [66 x i8] c"Inconsistent progression sequence for component %d coefficient %d\00", align 1
@.str.116 = private unnamed_addr constant [60 x i8] c"Corrupt JPEG data: %u extraneous bytes before marker 0x%02x\00", align 1
@.str.117 = private unnamed_addr constant [49 x i8] c"Corrupt JPEG data: premature end of data segment\00", align 1
@.str.118 = private unnamed_addr constant [36 x i8] c"Corrupt JPEG data: bad Huffman code\00", align 1
@.str.119 = private unnamed_addr constant [46 x i8] c"Warning: unknown JFIF revision number %d.%02d\00", align 1
@.str.120 = private unnamed_addr constant [27 x i8] c"Premature end of JPEG file\00", align 1
@.str.121 = private unnamed_addr constant [56 x i8] c"Corrupt JPEG data: found marker 0x%02x instead of RST%d\00", align 1
@.str.122 = private unnamed_addr constant [43 x i8] c"Invalid SOS parameters for sequential JPEG\00", align 1
@.str.123 = private unnamed_addr constant [43 x i8] c"Application transferred too many scanlines\00", align 1
@jpeg_std_message_table = dso_local constant [125 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1.209, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.210, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.211, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.212, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.213, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.214, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.215, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.217, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.218, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11.219, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.12.220, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.221, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.222, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15.223, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16.224, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17.225, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18.226, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19.227, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20.228, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.21.229, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.230, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23.231, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24.232, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25.233, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26.234, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.27.235, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28.236, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29.237, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30.238, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31.239, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32.240, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33.241, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34.242, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35.243, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36.244, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37.245, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.38.246, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39.247, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40.248, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.41.249, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42.250, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43.251, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.44.252, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.45.253, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46.254, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47.255, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.48.256, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49.257, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.50.258, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51.259, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.52.260, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.53.261, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54.262, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.55.263, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56.264, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57.265, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58.266, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59.267, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.60.268, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.61.269, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.62.270, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63.271, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.272, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65.273, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.66.274, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67.275, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.276, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.69.277, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.70.278, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.71.279, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72.280, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.73.281, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74.282, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.75.283, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.76.284, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.77.285, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78.286, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.79.287, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80.288, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.81.289, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82.290, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.83.291, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85.293, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.86.294, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.87.295, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.88.296, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.89.297, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.90.298, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.91.299, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92.300, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93.301, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.94.302, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.95.303, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.96.304, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.97.305, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98.306, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.99.307, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100.308, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.101.309, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.111.310, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.123, i32 0, i32 0), i8* null], align 16
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.124 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"JPEGMEM\00", align 1
@.str.1.316 = private unnamed_addr constant [6 x i8] c"%ld%c\00", align 1
@first_pool_slop = internal unnamed_addr constant [2 x i64] [i64 1600, i64 16000], align 16
@extra_pool_slop = internal unnamed_addr constant [2 x i64] [i64 0, i64 5000], align 16

; Function Attrs: noreturn nounwind uwtable
define dso_local i32 @main(i32 noundef %0, i8** nocapture noundef readonly %1) local_unnamed_addr #0 {
  %3 = alloca %struct.jpeg_compress_struct, align 8
  %4 = alloca %struct.jpeg_error_mgr, align 8
  %5 = bitcast %struct.jpeg_compress_struct* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %5) #27
  %6 = bitcast %struct.jpeg_error_mgr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %6) #27
  %7 = load i8*, i8** %1, align 8, !tbaa !3
  store i8* %7, i8** @progname, align 8, !tbaa !3
  %8 = icmp eq i8* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = load i8, i8* %7, align 1, !tbaa !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %2
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** @progname, align 8, !tbaa !3
  br label %13

13:                                               ; preds = %12, %9
  %14 = call %struct.jpeg_error_mgr* (%struct.jpeg_error_mgr*, ...) bitcast (%struct.jpeg_error_mgr* (%struct.jpeg_error_mgr*)* @jpeg_std_error to %struct.jpeg_error_mgr* (%struct.jpeg_error_mgr*, ...)*)(%struct.jpeg_error_mgr* noundef nonnull %4) #27
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %3, i64 0, i32 0
  store %struct.jpeg_error_mgr* %14, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  call void (%struct.jpeg_compress_struct*, i32, i64, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i64)* @jpeg_CreateCompress to void (%struct.jpeg_compress_struct*, i32, i64, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3, i32 noundef 62, i64 noundef 576) #27
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 11
  store i8** getelementptr inbounds ([44 x i8*], [44 x i8*]* @cdjpeg_message_table, i64 0, i64 0), i8*** %16, align 8, !tbaa !13
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 12
  store i32 1000, i32* %17, align 8, !tbaa !16
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 13
  store i32 1043, i32* %18, align 4, !tbaa !17
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %3, i64 0, i32 10
  store i32 2, i32* %19, align 4, !tbaa !18
  call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jpeg_set_defaults to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  %20 = call fastcc i32 @parse_switches(%struct.jpeg_compress_struct* noundef nonnull %3, i32 noundef %0, i8** noundef nonnull %1, i32 noundef 0)
  %21 = add nsw i32 %0, -1
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %13
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %25 = load i8*, i8** @progname, align 8, !tbaa !3
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %24, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8* noundef %25) #28
  call fastcc void @usage()
  unreachable

27:                                               ; preds = %13
  %28 = icmp slt i32 %20, %0
  br i1 %28, label %29, label %40

29:                                               ; preds = %27
  %30 = sext i32 %20 to i64
  %31 = getelementptr inbounds i8*, i8** %1, i64 %30
  %32 = load i8*, i8** %31, align 8, !tbaa !3
  %33 = call noalias %struct._IO_FILE* @fopen(i8* noundef %32, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %34 = icmp eq %struct._IO_FILE* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %37 = load i8*, i8** @progname, align 8, !tbaa !3
  %38 = load i8*, i8** %31, align 8, !tbaa !3
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %36, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* noundef %37, i8* noundef %38) #28
  call void @exit(i32 noundef 1) #29
  unreachable

40:                                               ; preds = %27
  %41 = call %struct._IO_FILE* (...) bitcast (%struct._IO_FILE* ()* @read_stdin to %struct._IO_FILE* (...)*)() #27
  br label %42

42:                                               ; preds = %29, %40
  %43 = phi %struct._IO_FILE* [ %33, %29 ], [ %41, %40 ]
  %44 = load i8*, i8** @outfilename, align 8, !tbaa !3
  %45 = icmp eq i8* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = call noalias %struct._IO_FILE* @fopen(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0))
  %48 = icmp eq %struct._IO_FILE* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %46
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %51 = load i8*, i8** @progname, align 8, !tbaa !3
  %52 = load i8*, i8** @outfilename, align 8, !tbaa !3
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %50, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* noundef %51, i8* noundef %52) #28
  call void @exit(i32 noundef 1) #29
  unreachable

54:                                               ; preds = %42
  %55 = call %struct._IO_FILE* (...) bitcast (%struct._IO_FILE* ()* @write_stdout to %struct._IO_FILE* (...)*)() #27
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %struct._IO_FILE* [ %47, %46 ], [ %55, %54 ]
  %58 = load i1, i1* @is_targa, align 4
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = call %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...) bitcast (%struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*)* @jinit_read_targa to %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  br label %94

61:                                               ; preds = %56
  %62 = call i32 @getc(%struct._IO_FILE* noundef %43) #27
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %70

64:                                               ; preds = %61
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 5
  store i32 42, i32* %66, align 8, !tbaa !19
  %67 = bitcast %struct.jpeg_error_mgr* %65 to void (%struct.jpeg_common_struct*, ...)**
  %68 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %67, align 8, !tbaa !20
  %69 = bitcast %struct.jpeg_compress_struct* %3 to %struct.jpeg_common_struct*
  call void (%struct.jpeg_common_struct*, ...) %68(%struct.jpeg_common_struct* noundef nonnull %69) #27
  br label %70

70:                                               ; preds = %64, %61
  %71 = call i32 @ungetc(i32 noundef %62, %struct._IO_FILE* noundef %43) #27
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %79

73:                                               ; preds = %70
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 5
  store i32 1040, i32* %75, align 8, !tbaa !19
  %76 = bitcast %struct.jpeg_error_mgr* %74 to void (%struct.jpeg_common_struct*, ...)**
  %77 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %76, align 8, !tbaa !20
  %78 = bitcast %struct.jpeg_compress_struct* %3 to %struct.jpeg_common_struct*
  call void (%struct.jpeg_common_struct*, ...) %77(%struct.jpeg_common_struct* noundef nonnull %78) #27
  br label %79

79:                                               ; preds = %73, %70
  switch i32 %62, label %88 [
    i32 66, label %80
    i32 71, label %82
    i32 80, label %84
    i32 0, label %86
  ]

80:                                               ; preds = %79
  %81 = call %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...) bitcast (%struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*)* @jinit_read_bmp to %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  br label %94

82:                                               ; preds = %79
  %83 = call %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...) bitcast (%struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*)* @jinit_read_gif to %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  br label %94

84:                                               ; preds = %79
  %85 = call %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...) bitcast (%struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*)* @jinit_read_ppm to %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  br label %94

86:                                               ; preds = %79
  %87 = call %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...) bitcast (%struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*)* @jinit_read_targa to %struct.cjpeg_source_struct* (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  br label %94

88:                                               ; preds = %79
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 5
  store i32 1041, i32* %90, align 8, !tbaa !19
  %91 = bitcast %struct.jpeg_error_mgr* %89 to void (%struct.jpeg_common_struct*, ...)**
  %92 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %91, align 8, !tbaa !20
  %93 = bitcast %struct.jpeg_compress_struct* %3 to %struct.jpeg_common_struct*
  call void (%struct.jpeg_common_struct*, ...) %92(%struct.jpeg_common_struct* noundef nonnull %93) #27
  br label %94

94:                                               ; preds = %59, %80, %82, %84, %86, %88
  %95 = phi %struct.cjpeg_source_struct* [ %60, %59 ], [ null, %88 ], [ %87, %86 ], [ %85, %84 ], [ %83, %82 ], [ %81, %80 ]
  %96 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %95, i64 0, i32 3
  store %struct._IO_FILE* %43, %struct._IO_FILE** %96, align 8, !tbaa !21
  %97 = bitcast %struct.cjpeg_source_struct* %95 to void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)**
  %98 = load void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*, void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)** %97, align 8, !tbaa !23
  call void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...) %98(%struct.jpeg_compress_struct* noundef nonnull %3, %struct.cjpeg_source_struct* noundef %95) #27
  call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jpeg_default_colorspace to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  %99 = call fastcc i32 @parse_switches(%struct.jpeg_compress_struct* noundef nonnull %3, i32 noundef %0, i8** noundef nonnull %1, i32 noundef 1)
  call void (%struct.jpeg_compress_struct*, %struct._IO_FILE*, ...) bitcast (void (%struct.jpeg_compress_struct*, %struct._IO_FILE*)* @jpeg_stdio_dest to void (%struct.jpeg_compress_struct*, %struct._IO_FILE*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3, %struct._IO_FILE* noundef %57) #27
  call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jpeg_start_compress to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3, i32 noundef 1) #27
  %100 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %3, i64 0, i32 39
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %3, i64 0, i32 8
  %102 = load i32, i32* %100, align 8, !tbaa !24
  %103 = load i32, i32* %101, align 4, !tbaa !25
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %105, label %117

105:                                              ; preds = %94
  %106 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %95, i64 0, i32 1
  %107 = bitcast i32 (...)** %106 to i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)**
  %108 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %95, i64 0, i32 4
  br label %109

109:                                              ; preds = %105, %109
  %110 = load i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)** %107, align 8, !tbaa !26
  %111 = call i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...) %110(%struct.jpeg_compress_struct* noundef nonnull %3, %struct.cjpeg_source_struct* noundef nonnull %95) #27
  %112 = load i8**, i8*** %108, align 8, !tbaa !27
  %113 = call i32 (%struct.jpeg_compress_struct*, i8**, i32, ...) bitcast (i32 (%struct.jpeg_compress_struct*, i8**, i32)* @jpeg_write_scanlines to i32 (%struct.jpeg_compress_struct*, i8**, i32, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3, i8** noundef %112, i32 noundef %111) #27
  %114 = load i32, i32* %100, align 8, !tbaa !24
  %115 = load i32, i32* %101, align 4, !tbaa !25
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %109, label %117, !llvm.loop !28

117:                                              ; preds = %109, %94
  %118 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %95, i64 0, i32 2
  %119 = bitcast void (...)** %118 to void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)**
  %120 = load void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*, void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)** %119, align 8, !tbaa !30
  call void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...) %120(%struct.jpeg_compress_struct* noundef nonnull %3, %struct.cjpeg_source_struct* noundef nonnull %95) #27
  call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jpeg_finish_compress to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jpeg_destroy_compress to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %3) #27
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %122 = icmp eq %struct._IO_FILE* %43, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  %124 = call i32 @fclose(%struct._IO_FILE* noundef %43)
  br label %125

125:                                              ; preds = %123, %117
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !3
  %127 = icmp eq %struct._IO_FILE* %57, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = call i32 @fclose(%struct._IO_FILE* noundef %57)
  br label %130

130:                                              ; preds = %128, %125
  %131 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 8
  %132 = load i64, i64* %131, align 8, !tbaa !31
  %133 = icmp eq i64 %132, 0
  %134 = select i1 %133, i32 0, i32 2
  call void @exit(i32 noundef %134) #29
  unreachable
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @parse_switches(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i8** nocapture noundef readonly %2, i32 noundef %3) unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #27
  store i32 75, i32* %5, align 4, !tbaa !32
  store i1 false, i1* @is_targa, align 4
  store i8* null, i8** @outfilename, align 8, !tbaa !3
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 7
  store i32 0, i32* %14, align 4, !tbaa !33
  %15 = icmp sgt i32 %1, 1
  br i1 %15, label %16, label %269

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 29
  %18 = bitcast i64* %6 to i8*
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %21 = bitcast i64* %8 to i8*
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 31
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %24 = bitcast i32* %10 to i8*
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 28
  br label %26

26:                                               ; preds = %16, %258
  %27 = phi i8* [ null, %16 ], [ %266, %258 ]
  %28 = phi i8* [ null, %16 ], [ %265, %258 ]
  %29 = phi i8* [ null, %16 ], [ %264, %258 ]
  %30 = phi i8* [ null, %16 ], [ %263, %258 ]
  %31 = phi i32 [ 0, %16 ], [ %262, %258 ]
  %32 = phi i32 [ 0, %16 ], [ %261, %258 ]
  %33 = phi i32 [ 100, %16 ], [ %260, %258 ]
  %34 = phi i32 [ 1, %16 ], [ %267, %258 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8*, i8** %2, i64 %35
  %37 = load i8*, i8** %36, align 8, !tbaa !3
  %38 = load i8, i8* %37, align 1, !tbaa !7
  %39 = icmp eq i8 %38, 45
  br i1 %39, label %43, label %40

40:                                               ; preds = %26
  %41 = icmp slt i32 %34, 1
  br i1 %41, label %42, label %269

42:                                               ; preds = %40
  store i8* null, i8** @outfilename, align 8, !tbaa !3
  br label %258

43:                                               ; preds = %26
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0), i32 noundef 1) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %49 = load i8*, i8** @progname, align 8, !tbaa !3
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %48, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.48, i64 0, i64 0), i8* noundef %49) #28
  call void @exit(i32 noundef 1) #29
  unreachable

51:                                               ; preds = %43
  %52 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i32 noundef 1) #27
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %258

54:                                               ; preds = %51
  %55 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i32 noundef 2) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %79, label %57

57:                                               ; preds = %54
  %58 = add nsw i32 %34, 1
  %59 = icmp slt i32 %58, %1
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  call fastcc void @usage()
  unreachable

61:                                               ; preds = %57
  %62 = sext i32 %58 to i64
  %63 = getelementptr inbounds i8*, i8** %2, i64 %62
  %64 = load i8*, i8** %63, align 8, !tbaa !3
  %65 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef %64, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i32 noundef 1) #27
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  store i32 0, i32* %17, align 4, !tbaa !34
  br label %258

68:                                               ; preds = %61
  %69 = load i8*, i8** %63, align 8, !tbaa !3
  %70 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef %69, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i32 noundef 2) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  store i32 1, i32* %17, align 4, !tbaa !34
  br label %258

73:                                               ; preds = %68
  %74 = load i8*, i8** %63, align 8, !tbaa !3
  %75 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef %74, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i32 noundef 2) #27
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  store i32 2, i32* %17, align 4, !tbaa !34
  br label %258

78:                                               ; preds = %73
  call fastcc void @usage()
  unreachable

79:                                               ; preds = %54
  %80 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i32 noundef 1) #27
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i32 noundef 1) #27
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %79
  %86 = load i1, i1* @parse_switches.printed_version, align 4
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %88, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.56, i64 0, i64 0), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0), i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.58, i64 0, i64 0)) #28
  store i1 true, i1* @parse_switches.printed_version, align 4
  br label %90

90:                                               ; preds = %87, %85
  %91 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !8
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %91, i64 0, i32 7
  %93 = load i32, i32* %92, align 4, !tbaa !33
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %92, align 4, !tbaa !33
  br label %258

95:                                               ; preds = %82
  %96 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i32 noundef 2) #27
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %95
  %99 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), i32 noundef 2) #27
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %98, %95
  call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jpeg_set_colorspace to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef 1) #27
  br label %258

102:                                              ; preds = %98
  %103 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i64 0, i64 0), i32 noundef 3) #27
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %126, label %105

105:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #27
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #27
  store i8 120, i8* %7, align 1, !tbaa !7
  %106 = add nsw i32 %34, 1
  %107 = icmp slt i32 %106, %1
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call fastcc void @usage()
  unreachable

109:                                              ; preds = %105
  %110 = sext i32 %106 to i64
  %111 = getelementptr inbounds i8*, i8** %2, i64 %110
  %112 = load i8*, i8** %111, align 8, !tbaa !3
  %113 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef %112, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), i64* noundef nonnull %6, i8* noundef nonnull %7) #27
  %114 = icmp slt i32 %113, 1
  br i1 %114, label %115, label %116

115:                                              ; preds = %109
  call fastcc void @usage()
  unreachable

116:                                              ; preds = %109
  %117 = load i8, i8* %7, align 1, !tbaa !7
  %118 = and i8 %117, -33
  %119 = icmp eq i8 %118, 77
  %120 = load i64, i64* %6, align 8, !tbaa !35
  %121 = mul nsw i64 %120, 1000
  %122 = select i1 %119, i64 %121, i64 %120
  %123 = mul nsw i64 %122, 1000
  %124 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %19, align 8, !tbaa !36
  %125 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %124, i64 0, i32 11
  store i64 %123, i64* %125, align 8, !tbaa !37
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #27
  br label %258

126:                                              ; preds = %102
  %127 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), i32 noundef 1) #27
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %126
  %130 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i64 0, i64 0), i32 noundef 1) #27
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129, %126
  store i32 1, i32* %20, align 8, !tbaa !39
  br label %258

133:                                              ; preds = %129
  %134 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), i32 noundef 4) #27
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %133
  %137 = add nsw i32 %34, 1
  %138 = icmp slt i32 %137, %1
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call fastcc void @usage()
  unreachable

140:                                              ; preds = %136
  %141 = sext i32 %137 to i64
  %142 = getelementptr inbounds i8*, i8** %2, i64 %141
  %143 = load i8*, i8** %142, align 8, !tbaa !3
  store i8* %143, i8** @outfilename, align 8, !tbaa !3
  br label %258

144:                                              ; preds = %133
  %145 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i64 0, i64 0), i32 noundef 1) #27
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %258

147:                                              ; preds = %144
  %148 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0), i32 noundef 1) #27
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %147
  %151 = add nsw i32 %34, 1
  %152 = icmp slt i32 %151, %1
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  call fastcc void @usage()
  unreachable

154:                                              ; preds = %150
  %155 = sext i32 %151 to i64
  %156 = getelementptr inbounds i8*, i8** %2, i64 %155
  %157 = load i8*, i8** %156, align 8, !tbaa !3
  %158 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef %157, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i32* noundef nonnull %5) #27
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %161, label %160

160:                                              ; preds = %154
  call fastcc void @usage()
  unreachable

161:                                              ; preds = %154
  %162 = load i32, i32* %5, align 4, !tbaa !32
  %163 = call i32 (i32, ...) bitcast (i32 (i32)* @jpeg_quality_scaling to i32 (i32, ...)*)(i32 noundef %162) #27
  br label %258

164:                                              ; preds = %147
  %165 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i32 noundef 2) #27
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %175, label %167

167:                                              ; preds = %164
  %168 = add nsw i32 %34, 1
  %169 = icmp slt i32 %168, %1
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  call fastcc void @usage()
  unreachable

171:                                              ; preds = %167
  %172 = sext i32 %168 to i64
  %173 = getelementptr inbounds i8*, i8** %2, i64 %172
  %174 = load i8*, i8** %173, align 8, !tbaa !3
  br label %258

175:                                              ; preds = %164
  %176 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0), i32 noundef 2) #27
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %175
  %179 = add nsw i32 %34, 1
  %180 = icmp slt i32 %179, %1
  br i1 %180, label %182, label %181

181:                                              ; preds = %178
  call fastcc void @usage()
  unreachable

182:                                              ; preds = %178
  %183 = sext i32 %179 to i64
  %184 = getelementptr inbounds i8*, i8** %2, i64 %183
  %185 = load i8*, i8** %184, align 8, !tbaa !3
  br label %258

186:                                              ; preds = %175
  %187 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i64 0, i64 0), i32 noundef 1) #27
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %212, label %189

189:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #27
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #27
  store i8 120, i8* %9, align 1, !tbaa !7
  %190 = add nsw i32 %34, 1
  %191 = icmp slt i32 %190, %1
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  call fastcc void @usage()
  unreachable

193:                                              ; preds = %189
  %194 = sext i32 %190 to i64
  %195 = getelementptr inbounds i8*, i8** %2, i64 %194
  %196 = load i8*, i8** %195, align 8, !tbaa !3
  %197 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef %196, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), i64* noundef nonnull %8, i8* noundef nonnull %9) #27
  %198 = icmp slt i32 %197, 1
  br i1 %198, label %199, label %200

199:                                              ; preds = %193
  call fastcc void @usage()
  unreachable

200:                                              ; preds = %193
  %201 = load i64, i64* %8, align 8, !tbaa !35
  %202 = icmp ugt i64 %201, 65535
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call fastcc void @usage()
  unreachable

204:                                              ; preds = %200
  %205 = load i8, i8* %9, align 1, !tbaa !7
  %206 = and i8 %205, -33
  %207 = icmp eq i8 %206, 66
  %208 = trunc i64 %201 to i32
  br i1 %207, label %209, label %210

209:                                              ; preds = %204
  store i32 %208, i32* %23, align 8, !tbaa !40
  br label %210

210:                                              ; preds = %204, %209
  %211 = phi i32 [ 0, %209 ], [ %208, %204 ]
  store i32 %211, i32* %22, align 4, !tbaa !41
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #27
  br label %258

212:                                              ; preds = %186
  %213 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i32 noundef 2) #27
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %223, label %215

215:                                              ; preds = %212
  %216 = add nsw i32 %34, 1
  %217 = icmp slt i32 %216, %1
  br i1 %217, label %219, label %218

218:                                              ; preds = %215
  call fastcc void @usage()
  unreachable

219:                                              ; preds = %215
  %220 = sext i32 %216 to i64
  %221 = getelementptr inbounds i8*, i8** %2, i64 %220
  %222 = load i8*, i8** %221, align 8, !tbaa !3
  br label %258

223:                                              ; preds = %212
  %224 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 noundef 2) #27
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %234, label %226

226:                                              ; preds = %223
  %227 = add nsw i32 %34, 1
  %228 = icmp slt i32 %227, %1
  br i1 %228, label %230, label %229

229:                                              ; preds = %226
  call fastcc void @usage()
  unreachable

230:                                              ; preds = %226
  %231 = sext i32 %227 to i64
  %232 = getelementptr inbounds i8*, i8** %2, i64 %231
  %233 = load i8*, i8** %232, align 8, !tbaa !3
  br label %258

234:                                              ; preds = %223
  %235 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i32 noundef 2) #27
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %253, label %237

237:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #27
  %238 = add nsw i32 %34, 1
  %239 = icmp slt i32 %238, %1
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  call fastcc void @usage()
  unreachable

241:                                              ; preds = %237
  %242 = sext i32 %238 to i64
  %243 = getelementptr inbounds i8*, i8** %2, i64 %242
  %244 = load i8*, i8** %243, align 8, !tbaa !3
  %245 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef %244, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i32* noundef nonnull %10) #27
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %248, label %247

247:                                              ; preds = %241
  call fastcc void @usage()
  unreachable

248:                                              ; preds = %241
  %249 = load i32, i32* %10, align 4, !tbaa !32
  %250 = icmp ugt i32 %249, 100
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call fastcc void @usage()
  unreachable

252:                                              ; preds = %248
  store i32 %249, i32* %25, align 8, !tbaa !42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #27
  br label %258

253:                                              ; preds = %234
  %254 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (i8*, i8*, i32)* @keymatch to i32 (i8*, i8*, i32, ...)*)(i8* noundef nonnull %44, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i32 noundef 1) #27
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %257, label %256

256:                                              ; preds = %253
  store i1 true, i1* @is_targa, align 4
  br label %258

257:                                              ; preds = %253
  call fastcc void @usage()
  unreachable

258:                                              ; preds = %144, %51, %72, %77, %67, %101, %132, %171, %210, %230, %256, %252, %219, %182, %161, %140, %116, %90, %42
  %259 = phi i32 [ %34, %42 ], [ %58, %67 ], [ %58, %72 ], [ %58, %77 ], [ %34, %90 ], [ %34, %101 ], [ %106, %116 ], [ %34, %132 ], [ %137, %140 ], [ %151, %161 ], [ %168, %171 ], [ %179, %182 ], [ %190, %210 ], [ %216, %219 ], [ %227, %230 ], [ %238, %252 ], [ %34, %256 ], [ %34, %51 ], [ %34, %144 ]
  %260 = phi i32 [ %33, %42 ], [ %33, %67 ], [ %33, %72 ], [ %33, %77 ], [ %33, %90 ], [ %33, %101 ], [ %33, %116 ], [ %33, %132 ], [ %33, %140 ], [ %163, %161 ], [ %33, %171 ], [ %33, %182 ], [ %33, %210 ], [ %33, %219 ], [ %33, %230 ], [ %33, %252 ], [ %33, %256 ], [ %33, %51 ], [ %33, %144 ]
  %261 = phi i32 [ %32, %42 ], [ %32, %67 ], [ %32, %72 ], [ %32, %77 ], [ %32, %90 ], [ %32, %101 ], [ %32, %116 ], [ %32, %132 ], [ %32, %140 ], [ %32, %161 ], [ %32, %171 ], [ %32, %182 ], [ %32, %210 ], [ %32, %219 ], [ %32, %230 ], [ %32, %252 ], [ %32, %256 ], [ 1, %51 ], [ %32, %144 ]
  %262 = phi i32 [ %31, %42 ], [ %31, %67 ], [ %31, %72 ], [ %31, %77 ], [ %31, %90 ], [ %31, %101 ], [ %31, %116 ], [ %31, %132 ], [ %31, %140 ], [ %31, %161 ], [ %31, %171 ], [ %31, %182 ], [ %31, %210 ], [ %31, %219 ], [ %31, %230 ], [ %31, %252 ], [ %31, %256 ], [ %31, %51 ], [ 1, %144 ]
  %263 = phi i8* [ %30, %42 ], [ %30, %67 ], [ %30, %72 ], [ %30, %77 ], [ %30, %90 ], [ %30, %101 ], [ %30, %116 ], [ %30, %132 ], [ %30, %140 ], [ %30, %161 ], [ %30, %171 ], [ %185, %182 ], [ %30, %210 ], [ %30, %219 ], [ %30, %230 ], [ %30, %252 ], [ %30, %256 ], [ %30, %51 ], [ %30, %144 ]
  %264 = phi i8* [ %29, %42 ], [ %29, %67 ], [ %29, %72 ], [ %29, %77 ], [ %29, %90 ], [ %29, %101 ], [ %29, %116 ], [ %29, %132 ], [ %29, %140 ], [ %29, %161 ], [ %174, %171 ], [ %29, %182 ], [ %29, %210 ], [ %29, %219 ], [ %29, %230 ], [ %29, %252 ], [ %29, %256 ], [ %29, %51 ], [ %29, %144 ]
  %265 = phi i8* [ %28, %42 ], [ %28, %67 ], [ %28, %72 ], [ %28, %77 ], [ %28, %90 ], [ %28, %101 ], [ %28, %116 ], [ %28, %132 ], [ %28, %140 ], [ %28, %161 ], [ %28, %171 ], [ %28, %182 ], [ %28, %210 ], [ %222, %219 ], [ %28, %230 ], [ %28, %252 ], [ %28, %256 ], [ %28, %51 ], [ %28, %144 ]
  %266 = phi i8* [ %27, %42 ], [ %27, %67 ], [ %27, %72 ], [ %27, %77 ], [ %27, %90 ], [ %27, %101 ], [ %27, %116 ], [ %27, %132 ], [ %27, %140 ], [ %27, %161 ], [ %27, %171 ], [ %27, %182 ], [ %27, %210 ], [ %27, %219 ], [ %233, %230 ], [ %27, %252 ], [ %27, %256 ], [ %27, %51 ], [ %27, %144 ]
  %267 = add nsw i32 %259, 1
  %268 = icmp slt i32 %267, %1
  br i1 %268, label %26, label %269, !llvm.loop !43

269:                                              ; preds = %258, %40, %4
  %270 = phi i32 [ 1, %4 ], [ %34, %40 ], [ %267, %258 ]
  %271 = phi i32 [ 100, %4 ], [ %33, %40 ], [ %260, %258 ]
  %272 = phi i32 [ 0, %4 ], [ %32, %40 ], [ %261, %258 ]
  %273 = phi i32 [ 0, %4 ], [ %31, %40 ], [ %262, %258 ]
  %274 = phi i8* [ null, %4 ], [ %30, %40 ], [ %263, %258 ]
  %275 = phi i8* [ null, %4 ], [ %29, %40 ], [ %264, %258 ]
  %276 = phi i8* [ null, %4 ], [ %28, %40 ], [ %265, %258 ]
  %277 = phi i8* [ null, %4 ], [ %27, %40 ], [ %266, %258 ]
  %278 = icmp eq i32 %3, 0
  br i1 %278, label %307, label %279

279:                                              ; preds = %269
  %280 = load i32, i32* %5, align 4, !tbaa !32
  call void (%struct.jpeg_compress_struct*, i32, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i32)* @jpeg_set_quality to void (%struct.jpeg_compress_struct*, i32, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef %280, i32 noundef %272) #27
  %281 = icmp eq i8* %274, null
  br i1 %281, label %286, label %282

282:                                              ; preds = %279
  %283 = call i32 (%struct.jpeg_compress_struct*, i8*, i32, i32, ...) bitcast (i32 (%struct.jpeg_compress_struct*, i8*, i32, i32)* @read_quant_tables to i32 (%struct.jpeg_compress_struct*, i8*, i32, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i8* noundef nonnull %274, i32 noundef %271, i32 noundef %272) #27
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call fastcc void @usage()
  unreachable

286:                                              ; preds = %282, %279
  %287 = icmp eq i8* %275, null
  br i1 %287, label %292, label %288

288:                                              ; preds = %286
  %289 = call i32 (%struct.jpeg_compress_struct*, i8*, ...) bitcast (i32 (%struct.jpeg_compress_struct*, i8*)* @set_quant_slots to i32 (%struct.jpeg_compress_struct*, i8*, ...)*)(%struct.jpeg_compress_struct* noundef %0, i8* noundef nonnull %275) #27
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call fastcc void @usage()
  unreachable

292:                                              ; preds = %288, %286
  %293 = icmp eq i8* %276, null
  br i1 %293, label %298, label %294

294:                                              ; preds = %292
  %295 = call i32 (%struct.jpeg_compress_struct*, i8*, ...) bitcast (i32 (%struct.jpeg_compress_struct*, i8*)* @set_sample_factors to i32 (%struct.jpeg_compress_struct*, i8*, ...)*)(%struct.jpeg_compress_struct* noundef %0, i8* noundef nonnull %276) #27
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call fastcc void @usage()
  unreachable

298:                                              ; preds = %294, %292
  %299 = icmp eq i32 %273, 0
  br i1 %299, label %301, label %300

300:                                              ; preds = %298
  call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jpeg_simple_progression to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef %0) #27
  br label %301

301:                                              ; preds = %300, %298
  %302 = icmp eq i8* %277, null
  br i1 %302, label %307, label %303

303:                                              ; preds = %301
  %304 = call i32 (%struct.jpeg_compress_struct*, i8*, ...) bitcast (i32 (%struct.jpeg_compress_struct*, i8*)* @read_scan_script to i32 (%struct.jpeg_compress_struct*, i8*, ...)*)(%struct.jpeg_compress_struct* noundef %0, i8* noundef nonnull %277) #27
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call fastcc void @usage()
  unreachable

307:                                              ; preds = %301, %303, %269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #27
  ret i32 %270
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fprintf(%struct._IO_FILE* nocapture noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @usage() unnamed_addr #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %2 = load i8*, i8** @progname, align 8, !tbaa !3
  %3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i64 0, i64 0), i8* noundef %2) #28
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i64 12, i64 1, %struct._IO_FILE* %4) #28
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.78, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %6) #28
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.79, i64 0, i64 0), i64 68, i64 1, %struct._IO_FILE* %8) #28
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.80, i64 0, i64 0), i64 45, i64 1, %struct._IO_FILE* %10) #28
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %13 = tail call i64 @fwrite(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.81, i64 0, i64 0), i64 77, i64 1, %struct._IO_FILE* %12) #28
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %15 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %14) #28
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %17 = tail call i64 @fwrite(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.83, i64 0, i64 0), i64 65, i64 1, %struct._IO_FILE* %16) #28
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.84, i64 0, i64 0), i64 29, i64 1, %struct._IO_FILE* %18) #28
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %20, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.85, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i64 0, i64 0)) #28
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %22, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.87, i64 0, i64 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.88, i64 0, i64 0)) #28
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %24, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.89, i64 0, i64 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.88, i64 0, i64 0)) #28
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %27 = tail call i64 @fwrite(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.90, i64 0, i64 0), i64 67, i64 1, %struct._IO_FILE* %26) #28
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.91, i64 0, i64 0), i64 62, i64 1, %struct._IO_FILE* %28) #28
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %31 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.92, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %30) #28
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %33 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.93, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %32) #28
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %35 = tail call i64 @fwrite(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.94, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %34) #28
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.95, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %36) #28
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %39 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.96, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %38) #28
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %41 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.97, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %40) #28
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %43 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.98, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %42) #28
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.99, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %44) #28
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %47 = tail call i64 @fwrite(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.100, i64 0, i64 0), i64 56, i64 1, %struct._IO_FILE* %46) #28
  tail call void @exit(i32 noundef 1) #29
  unreachable
}

; Function Attrs: nofree nounwind
declare dso_local noalias noundef %struct._IO_FILE* @fopen(i8* nocapture noundef readonly, i8* nocapture noundef readonly) local_unnamed_addr #3

; Function Attrs: noreturn
declare dso_local void @exit(i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @getc(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @ungetc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fclose(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_sscanf(i8* nocapture noundef readonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define dso_local %struct.cjpeg_source_struct* @jinit_read_ppm(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 80) #27
  %8 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @start_input_ppm to void (...)*), void (...)** %8, align 8, !tbaa !45
  %9 = getelementptr inbounds i8, i8* %7, i64 16
  %10 = bitcast i8* %9 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @finish_input_ppm to void (...)*), void (...)** %10, align 8, !tbaa !47
  %11 = bitcast i8* %7 to %struct.cjpeg_source_struct*
  ret %struct.cjpeg_source_struct* %11
}

; Function Attrs: nounwind uwtable
define internal void @start_input_ppm(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %5 = tail call i32 @getc(%struct._IO_FILE* noundef %4)
  %6 = icmp eq i32 %5, 80
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 1027, i32* %10, align 8, !tbaa !19
  %11 = bitcast %struct.jpeg_error_mgr* %9 to void (%struct.jpeg_common_struct*, ...)**
  %12 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %11, align 8, !tbaa !20
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %12(%struct.jpeg_common_struct* noundef %13) #27
  br label %14

14:                                               ; preds = %7, %2
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %16 = tail call i32 @getc(%struct._IO_FILE* noundef %15)
  switch i32 %16, label %17 [
    i32 50, label %24
    i32 51, label %24
    i32 53, label %24
    i32 54, label %24
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 1027, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %14, %14, %14, %14, %17
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %26 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %25)
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %28 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %27)
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %30 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %29)
  %31 = icmp eq i32 %26, 0
  %32 = icmp eq i32 %28, 0
  %33 = select i1 %31, i1 true, i1 %32
  %34 = icmp eq i32 %30, 0
  %35 = select i1 %33, i1 true, i1 %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8, !tbaa !8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i64 0, i32 5
  store i32 1027, i32* %39, align 8, !tbaa !19
  %40 = bitcast %struct.jpeg_error_mgr* %38 to void (%struct.jpeg_common_struct*, ...)**
  %41 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %40, align 8, !tbaa !20
  %42 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %41(%struct.jpeg_common_struct* noundef %42) #27
  br label %43

43:                                               ; preds = %24, %36
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  store i32 8, i32* %44, align 8, !tbaa !49
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  store i32 %26, i32* %45, align 8, !tbaa !50
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  store i32 %28, i32* %46, align 4, !tbaa !25
  switch i32 %16, label %92 [
    i32 50, label %113
    i32 51, label %47
    i32 53, label %48
    i32 54, label %70
  ]

47:                                               ; preds = %43
  br label %113

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  store i32 1, i32* %49, align 8, !tbaa !51
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  store i32 1, i32* %50, align 4, !tbaa !18
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 5
  store i32 1028, i32* %53, align 8, !tbaa !19
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 6, i32 0, i64 0
  store i32 %26, i32* %54, align 4, !tbaa !7
  %55 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %55, i64 0, i32 6, i32 0, i64 1
  store i32 %28, i32* %56, align 4, !tbaa !7
  %57 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %58 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i64 0, i32 1
  %59 = bitcast void (...)** %58 to void (%struct.jpeg_common_struct*, i32, ...)**
  %60 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %59, align 8, !tbaa !52
  %61 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %60(%struct.jpeg_common_struct* noundef %61, i32 noundef 1) #27
  %62 = icmp ugt i32 %30, 255
  br i1 %62, label %63, label %65

63:                                               ; preds = %48
  %64 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_word_gray_row to i32 (...)*), i32 (...)** %64, align 8, !tbaa !53
  br label %92

65:                                               ; preds = %48
  %66 = icmp eq i32 %30, 255
  %67 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  br i1 %66, label %68, label %69

68:                                               ; preds = %65
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_raw_row to i32 (...)*), i32 (...)** %67, align 8, !tbaa !53
  br label %92

69:                                               ; preds = %65
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_scaled_gray_row to i32 (...)*), i32 (...)** %67, align 8, !tbaa !53
  br label %92

70:                                               ; preds = %43
  %71 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  store i32 3, i32* %71, align 8, !tbaa !51
  %72 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  store i32 2, i32* %72, align 4, !tbaa !18
  %73 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8, !tbaa !8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 5
  store i32 1030, i32* %75, align 8, !tbaa !19
  %76 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 6, i32 0, i64 0
  store i32 %26, i32* %76, align 4, !tbaa !7
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8, !tbaa !8
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i64 0, i32 6, i32 0, i64 1
  store i32 %28, i32* %78, align 4, !tbaa !7
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8, !tbaa !8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i64 0, i32 1
  %81 = bitcast void (...)** %80 to void (%struct.jpeg_common_struct*, i32, ...)**
  %82 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %81, align 8, !tbaa !52
  %83 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %82(%struct.jpeg_common_struct* noundef %83, i32 noundef 1) #27
  %84 = icmp ugt i32 %30, 255
  br i1 %84, label %85, label %87

85:                                               ; preds = %70
  %86 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_word_rgb_row to i32 (...)*), i32 (...)** %86, align 8, !tbaa !53
  br label %92

87:                                               ; preds = %70
  %88 = icmp eq i32 %30, 255
  %89 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  br i1 %88, label %90, label %91

90:                                               ; preds = %87
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_raw_row to i32 (...)*), i32 (...)** %89, align 8, !tbaa !53
  br label %92

91:                                               ; preds = %87
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_scaled_rgb_row to i32 (...)*), i32 (...)** %89, align 8, !tbaa !53
  br label %92

92:                                               ; preds = %43, %68, %69, %63, %90, %91, %85
  %93 = phi i1 [ false, %68 ], [ true, %69 ], [ true, %63 ], [ false, %90 ], [ true, %91 ], [ true, %85 ], [ true, %43 ]
  %94 = phi i1 [ true, %68 ], [ false, %69 ], [ false, %63 ], [ true, %90 ], [ false, %91 ], [ false, %85 ], [ false, %43 ]
  %95 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %96 = zext i32 %26 to i64
  %97 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %98 = load i32, i32* %97, align 8, !tbaa !51
  %99 = sext i32 %98 to i64
  %100 = icmp ult i32 %30, 256
  %101 = select i1 %100, i64 1, i64 2
  %102 = mul nuw nsw i64 %101, %96
  %103 = mul i64 %102, %99
  %104 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %105 = bitcast void (...)** %104 to i64*
  store i64 %103, i64* %105, align 8, !tbaa !54
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %107 = bitcast %struct.jpeg_memory_mgr** %106 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %108 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %107, align 8, !tbaa !36
  %109 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %108, align 8, !tbaa !44
  %110 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %109(%struct.jpeg_common_struct* noundef %95, i32 noundef 1, i64 noundef %103) #27
  %111 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %112 = bitcast %struct.cjpeg_source_struct* %111 to i8**
  store i8* %110, i8** %112, align 8, !tbaa !55
  br i1 %93, label %133, label %149

113:                                              ; preds = %43, %47
  %114 = phi i32 [ 3, %47 ], [ 1, %43 ]
  %115 = phi i32 [ 2, %47 ], [ 1, %43 ]
  %116 = phi i32 [ 1031, %47 ], [ 1029, %43 ]
  %117 = phi i32 (...)* [ bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_text_rgb_row to i32 (...)*), %47 ], [ bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_text_gray_row to i32 (...)*), %43 ]
  %118 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  store i32 %114, i32* %118, align 8, !tbaa !51
  %119 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  store i32 %115, i32* %119, align 4, !tbaa !18
  %120 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %121 = getelementptr %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %122 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %121, align 8, !tbaa !8
  %123 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %122, i64 0, i32 5
  store i32 %116, i32* %123, align 8, !tbaa !19
  %124 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %122, i64 0, i32 6, i32 0, i64 0
  store i32 %26, i32* %124, align 4, !tbaa !7
  %125 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %120, align 8, !tbaa !8
  %126 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %125, i64 0, i32 6, i32 0, i64 1
  store i32 %28, i32* %126, align 4, !tbaa !7
  %127 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %120, align 8, !tbaa !8
  %128 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %127, i64 0, i32 1
  %129 = bitcast void (...)** %128 to void (%struct.jpeg_common_struct*, i32, ...)**
  %130 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %129, align 8, !tbaa !52
  %131 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %130(%struct.jpeg_common_struct* noundef %131, i32 noundef 1) #27
  %132 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* %117, i32 (...)** %132, align 8, !tbaa !53
  br label %133

133:                                              ; preds = %113, %92
  %134 = phi i1 [ %94, %92 ], [ false, %113 ]
  %135 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %136 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %137 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %136, align 8, !tbaa !36
  %138 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %137, i64 0, i32 2
  %139 = bitcast i8** (...)** %138 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %140 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %139, align 8, !tbaa !56
  %141 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %142 = load i32, i32* %141, align 8, !tbaa !51
  %143 = mul i32 %142, %26
  %144 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %140(%struct.jpeg_common_struct* noundef %135, i32 noundef 1, i32 noundef %143, i32 noundef 1) #27
  %145 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  store i8** %144, i8*** %145, align 8, !tbaa !57
  %146 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 5
  store i32 1, i32* %146, align 8, !tbaa !58
  br i1 %134, label %206, label %147

147:                                              ; preds = %133
  %148 = bitcast %struct.jpeg_memory_mgr** %136 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  br label %155

149:                                              ; preds = %92
  %150 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 1
  %151 = bitcast i32 (...)** %150 to i8**
  store i8* %110, i8** %151, align 8, !tbaa !59
  %152 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %153 = bitcast i8*** %152 to i32 (...)***
  store i32 (...)** %150, i32 (...)*** %153, align 8, !tbaa !57
  %154 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 5
  store i32 1, i32* %154, align 8, !tbaa !58
  br i1 %94, label %206, label %155

155:                                              ; preds = %147, %149
  %156 = phi i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** [ %148, %147 ], [ %107, %149 ]
  %157 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %158 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %156, align 8, !tbaa !36
  %159 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %158, align 8, !tbaa !44
  %160 = zext i32 %30 to i64
  %161 = add nuw nsw i64 %160, 1
  %162 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %159(%struct.jpeg_common_struct* noundef %157, i32 noundef 1, i64 noundef %161) #27
  %163 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %164 = bitcast %struct._IO_FILE** %163 to i8**
  store i8* %162, i8** %164, align 8, !tbaa !60
  %165 = lshr i32 %30, 1
  %166 = zext i32 %165 to i64
  %167 = udiv i64 %166, %160
  %168 = trunc i64 %167 to i8
  store i8 %168, i8* %162, align 1, !tbaa !7
  %169 = icmp eq i32 %30, 0
  br i1 %169, label %206, label %170, !llvm.loop !61

170:                                              ; preds = %155
  %171 = and i64 %160, 1
  %172 = icmp eq i32 %30, 1
  br i1 %172, label %196, label %173

173:                                              ; preds = %170
  %174 = and i64 %160, 4294967294
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %185, %175 ]
  %177 = phi i64 [ 0, %173 ], [ %192, %175 ]
  %178 = or i64 %176, 1
  %179 = load i8*, i8** %164, align 8, !tbaa !60
  %180 = mul nuw nsw i64 %178, 255
  %181 = add nuw nsw i64 %180, %166
  %182 = udiv i64 %181, %160
  %183 = trunc i64 %182 to i8
  %184 = getelementptr inbounds i8, i8* %179, i64 %178
  store i8 %183, i8* %184, align 1, !tbaa !7
  %185 = add nuw nsw i64 %176, 2
  %186 = load i8*, i8** %164, align 8, !tbaa !60
  %187 = mul nuw nsw i64 %185, 255
  %188 = add nuw nsw i64 %187, %166
  %189 = udiv i64 %188, %160
  %190 = trunc i64 %189 to i8
  %191 = getelementptr inbounds i8, i8* %186, i64 %185
  store i8 %190, i8* %191, align 1, !tbaa !7
  %192 = add i64 %177, 2
  %193 = icmp eq i64 %192, %174
  br i1 %193, label %194, label %175, !llvm.loop !61

194:                                              ; preds = %175
  %195 = add nuw i64 %176, 3
  br label %196

196:                                              ; preds = %194, %170
  %197 = phi i64 [ 1, %170 ], [ %195, %194 ]
  %198 = icmp eq i64 %171, 0
  br i1 %198, label %206, label %199

199:                                              ; preds = %196
  %200 = load i8*, i8** %164, align 8, !tbaa !60
  %201 = mul nuw nsw i64 %197, 255
  %202 = add nuw nsw i64 %201, %166
  %203 = udiv i64 %202, %160
  %204 = trunc i64 %203 to i8
  %205 = getelementptr inbounds i8, i8* %200, i64 %197
  store i8 %204, i8* %205, align 1, !tbaa !7
  br label %206

206:                                              ; preds = %199, %196, %155, %133, %149
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define internal void @finish_input_ppm(%struct.jpeg_compress_struct* nocapture noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* nocapture noundef %1) unnamed_addr #2 {
  br label %3

3:                                                ; preds = %10, %2
  %4 = tail call i32 @getc(%struct._IO_FILE* noundef %1) #27
  %5 = icmp eq i32 %4, 35
  br i1 %5, label %6, label %8

6:                                                ; preds = %3, %6
  %7 = tail call i32 @getc(%struct._IO_FILE* noundef %1) #27
  switch i32 %7, label %6 [
    i32 -1, label %8
    i32 10, label %8
  ]

8:                                                ; preds = %6, %6, %3
  %9 = phi i32 [ %4, %3 ], [ %7, %6 ], [ %7, %6 ]
  switch i32 %9, label %18 [
    i32 -1, label %11
    i32 32, label %10
    i32 13, label %10
    i32 10, label %10
    i32 9, label %10
  ]

10:                                               ; preds = %8, %8, %8, %8
  br label %3

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 43, i32* %14, align 8, !tbaa !19
  %15 = bitcast %struct.jpeg_error_mgr* %13 to void (%struct.jpeg_common_struct*, ...)**
  %16 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %15, align 8, !tbaa !20
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %16(%struct.jpeg_common_struct* noundef %17) #27
  br label %21

18:                                               ; preds = %8
  %19 = add i32 %9, -58
  %20 = icmp ult i32 %19, -10
  br i1 %20, label %21, label %28

21:                                               ; preds = %18, %11
  %22 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 5
  store i32 1026, i32* %25, align 8, !tbaa !19
  %26 = bitcast %struct.jpeg_error_mgr* %24 to void (%struct.jpeg_common_struct*, ...)**
  %27 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %26, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %27(%struct.jpeg_common_struct* noundef %22) #27
  br label %28

28:                                               ; preds = %18, %21
  %29 = add nsw i32 %9, -48
  br label %30

30:                                               ; preds = %40, %28
  %31 = phi i32 [ %29, %28 ], [ %42, %40 ]
  %32 = tail call i32 @getc(%struct._IO_FILE* noundef %1) #27
  %33 = icmp eq i32 %32, 35
  br i1 %33, label %34, label %36

34:                                               ; preds = %30, %34
  %35 = tail call i32 @getc(%struct._IO_FILE* noundef %1) #27
  switch i32 %35, label %34 [
    i32 -1, label %36
    i32 10, label %36
  ]

36:                                               ; preds = %34, %34, %30
  %37 = phi i32 [ %32, %30 ], [ %35, %34 ], [ %35, %34 ]
  %38 = add i32 %37, -48
  %39 = icmp ult i32 %38, 10
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = mul i32 %31, 10
  %42 = add i32 %38, %41
  br label %30, !llvm.loop !62

43:                                               ; preds = %36
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define internal i32 @get_word_gray_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %4 = bitcast %struct._IO_FILE** %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !60
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %7 = bitcast %struct.cjpeg_source_struct* %6 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !55
  %9 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %10 = bitcast void (...)** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !54
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8, !tbaa !48
  %14 = tail call i64 @fread(i8* noundef %8, i64 noundef 1, i64 noundef %11, %struct._IO_FILE* noundef %13)
  %15 = load i64, i64* %10, align 8, !tbaa !54
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 43, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %17, %2
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %26 = load i32, i32* %25, align 8, !tbaa !50
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %81, label %28

28:                                               ; preds = %24
  %29 = load i8*, i8** %7, align 8, !tbaa !55
  %30 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %31 = load i8**, i8*** %30, align 8, !tbaa !57
  %32 = load i8*, i8** %31, align 8, !tbaa !3
  %33 = and i32 %26, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %29, i64 1
  %37 = load i8, i8* %29, align 1, !tbaa !7
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds i8, i8* %29, i64 2
  %40 = load i8, i8* %36, align 1, !tbaa !7
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 8
  %43 = or i64 %42, %38
  %44 = getelementptr inbounds i8, i8* %5, i64 %43
  %45 = load i8, i8* %44, align 1, !tbaa !7
  %46 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %45, i8* %32, align 1, !tbaa !7
  %47 = add i32 %26, -1
  br label %48

48:                                               ; preds = %35, %28
  %49 = phi i8* [ %32, %28 ], [ %46, %35 ]
  %50 = phi i32 [ %26, %28 ], [ %47, %35 ]
  %51 = phi i8* [ %29, %28 ], [ %39, %35 ]
  %52 = icmp eq i32 %26, 1
  br i1 %52, label %81, label %53

53:                                               ; preds = %48, %53
  %54 = phi i8* [ %78, %53 ], [ %49, %48 ]
  %55 = phi i32 [ %79, %53 ], [ %50, %48 ]
  %56 = phi i8* [ %71, %53 ], [ %51, %48 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %56, align 1, !tbaa !7
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds i8, i8* %56, i64 2
  %61 = load i8, i8* %57, align 1, !tbaa !7
  %62 = zext i8 %61 to i64
  %63 = shl nuw nsw i64 %62, 8
  %64 = or i64 %63, %59
  %65 = getelementptr inbounds i8, i8* %5, i64 %64
  %66 = load i8, i8* %65, align 1, !tbaa !7
  %67 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 %66, i8* %54, align 1, !tbaa !7
  %68 = getelementptr inbounds i8, i8* %56, i64 3
  %69 = load i8, i8* %60, align 1, !tbaa !7
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds i8, i8* %56, i64 4
  %72 = load i8, i8* %68, align 1, !tbaa !7
  %73 = zext i8 %72 to i64
  %74 = shl nuw nsw i64 %73, 8
  %75 = or i64 %74, %70
  %76 = getelementptr inbounds i8, i8* %5, i64 %75
  %77 = load i8, i8* %76, align 1, !tbaa !7
  %78 = getelementptr inbounds i8, i8* %54, i64 2
  store i8 %77, i8* %67, align 1, !tbaa !7
  %79 = add i32 %55, -2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %53, !llvm.loop !63

81:                                               ; preds = %48, %53, %24
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_raw_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %4 = bitcast %struct.cjpeg_source_struct* %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !55
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %7 = bitcast void (...)** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !54
  %9 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8, !tbaa !48
  %11 = tail call i64 @fread(i8* noundef %5, i64 noundef 1, i64 noundef %8, %struct._IO_FILE* noundef %10)
  %12 = load i64, i64* %7, align 8, !tbaa !54
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 5
  store i32 43, i32* %17, align 8, !tbaa !19
  %18 = bitcast %struct.jpeg_error_mgr* %16 to void (%struct.jpeg_common_struct*, ...)**
  %19 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %18, align 8, !tbaa !20
  %20 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %19(%struct.jpeg_common_struct* noundef %20) #27
  br label %21

21:                                               ; preds = %14, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_scaled_gray_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %4 = bitcast %struct._IO_FILE** %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !60
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %7 = bitcast %struct.cjpeg_source_struct* %6 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !55
  %9 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %10 = bitcast void (...)** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !54
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8, !tbaa !48
  %14 = tail call i64 @fread(i8* noundef %8, i64 noundef 1, i64 noundef %11, %struct._IO_FILE* noundef %13)
  %15 = load i64, i64* %10, align 8, !tbaa !54
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 43, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %17, %2
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %26 = load i32, i32* %25, align 8, !tbaa !50
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %85, label %28

28:                                               ; preds = %24
  %29 = load i8*, i8** %7, align 8, !tbaa !55
  %30 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %31 = load i8**, i8*** %30, align 8, !tbaa !57
  %32 = load i8*, i8** %31, align 8, !tbaa !3
  %33 = add i32 %26, -1
  %34 = and i32 %26, 3
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %50, label %36

36:                                               ; preds = %28, %36
  %37 = phi i32 [ %47, %36 ], [ %26, %28 ]
  %38 = phi i8* [ %46, %36 ], [ %32, %28 ]
  %39 = phi i8* [ %41, %36 ], [ %29, %28 ]
  %40 = phi i32 [ %48, %36 ], [ 0, %28 ]
  %41 = getelementptr inbounds i8, i8* %39, i64 1
  %42 = load i8, i8* %39, align 1, !tbaa !7
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds i8, i8* %5, i64 %43
  %45 = load i8, i8* %44, align 1, !tbaa !7
  %46 = getelementptr inbounds i8, i8* %38, i64 1
  store i8 %45, i8* %38, align 1, !tbaa !7
  %47 = add i32 %37, -1
  %48 = add i32 %40, 1
  %49 = icmp eq i32 %48, %34
  br i1 %49, label %50, label %36, !llvm.loop !64

50:                                               ; preds = %36, %28
  %51 = phi i32 [ %26, %28 ], [ %47, %36 ]
  %52 = phi i8* [ %32, %28 ], [ %46, %36 ]
  %53 = phi i8* [ %29, %28 ], [ %41, %36 ]
  %54 = icmp ult i32 %33, 3
  br i1 %54, label %85, label %55

55:                                               ; preds = %50, %55
  %56 = phi i32 [ %83, %55 ], [ %51, %50 ]
  %57 = phi i8* [ %82, %55 ], [ %52, %50 ]
  %58 = phi i8* [ %77, %55 ], [ %53, %50 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  %60 = load i8, i8* %58, align 1, !tbaa !7
  %61 = zext i8 %60 to i64
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = load i8, i8* %62, align 1, !tbaa !7
  %64 = getelementptr inbounds i8, i8* %57, i64 1
  store i8 %63, i8* %57, align 1, !tbaa !7
  %65 = getelementptr inbounds i8, i8* %58, i64 2
  %66 = load i8, i8* %59, align 1, !tbaa !7
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds i8, i8* %5, i64 %67
  %69 = load i8, i8* %68, align 1, !tbaa !7
  %70 = getelementptr inbounds i8, i8* %57, i64 2
  store i8 %69, i8* %64, align 1, !tbaa !7
  %71 = getelementptr inbounds i8, i8* %58, i64 3
  %72 = load i8, i8* %65, align 1, !tbaa !7
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds i8, i8* %5, i64 %73
  %75 = load i8, i8* %74, align 1, !tbaa !7
  %76 = getelementptr inbounds i8, i8* %57, i64 3
  store i8 %75, i8* %70, align 1, !tbaa !7
  %77 = getelementptr inbounds i8, i8* %58, i64 4
  %78 = load i8, i8* %71, align 1, !tbaa !7
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds i8, i8* %5, i64 %79
  %81 = load i8, i8* %80, align 1, !tbaa !7
  %82 = getelementptr inbounds i8, i8* %57, i64 4
  store i8 %81, i8* %76, align 1, !tbaa !7
  %83 = add i32 %56, -4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %55, !llvm.loop !66

85:                                               ; preds = %50, %55, %24
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_word_rgb_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %4 = bitcast %struct._IO_FILE** %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !60
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %7 = bitcast %struct.cjpeg_source_struct* %6 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !55
  %9 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %10 = bitcast void (...)** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !54
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8, !tbaa !48
  %14 = tail call i64 @fread(i8* noundef %8, i64 noundef 1, i64 noundef %11, %struct._IO_FILE* noundef %13)
  %15 = load i64, i64* %10, align 8, !tbaa !54
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 43, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %17, %2
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %26 = load i32, i32* %25, align 8, !tbaa !50
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %72, label %28

28:                                               ; preds = %24
  %29 = load i8*, i8** %7, align 8, !tbaa !55
  %30 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %31 = load i8**, i8*** %30, align 8, !tbaa !57
  %32 = load i8*, i8** %31, align 8, !tbaa !3
  br label %33

33:                                               ; preds = %28, %33
  %34 = phi i8* [ %69, %33 ], [ %32, %28 ]
  %35 = phi i32 [ %70, %33 ], [ %26, %28 ]
  %36 = phi i8* [ %62, %33 ], [ %29, %28 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = load i8, i8* %36, align 1, !tbaa !7
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 2
  %41 = load i8, i8* %37, align 1, !tbaa !7
  %42 = zext i8 %41 to i64
  %43 = shl nuw nsw i64 %42, 8
  %44 = or i64 %43, %39
  %45 = getelementptr inbounds i8, i8* %5, i64 %44
  %46 = load i8, i8* %45, align 1, !tbaa !7
  %47 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %46, i8* %34, align 1, !tbaa !7
  %48 = getelementptr inbounds i8, i8* %36, i64 3
  %49 = load i8, i8* %40, align 1, !tbaa !7
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds i8, i8* %36, i64 4
  %52 = load i8, i8* %48, align 1, !tbaa !7
  %53 = zext i8 %52 to i64
  %54 = shl nuw nsw i64 %53, 8
  %55 = or i64 %54, %50
  %56 = getelementptr inbounds i8, i8* %5, i64 %55
  %57 = load i8, i8* %56, align 1, !tbaa !7
  %58 = getelementptr inbounds i8, i8* %34, i64 2
  store i8 %57, i8* %47, align 1, !tbaa !7
  %59 = getelementptr inbounds i8, i8* %36, i64 5
  %60 = load i8, i8* %51, align 1, !tbaa !7
  %61 = zext i8 %60 to i64
  %62 = getelementptr inbounds i8, i8* %36, i64 6
  %63 = load i8, i8* %59, align 1, !tbaa !7
  %64 = zext i8 %63 to i64
  %65 = shl nuw nsw i64 %64, 8
  %66 = or i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %5, i64 %66
  %68 = load i8, i8* %67, align 1, !tbaa !7
  %69 = getelementptr inbounds i8, i8* %34, i64 3
  store i8 %68, i8* %58, align 1, !tbaa !7
  %70 = add i32 %35, -1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %33, !llvm.loop !67

72:                                               ; preds = %33, %24
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_scaled_rgb_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %4 = bitcast %struct._IO_FILE** %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !60
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %7 = bitcast %struct.cjpeg_source_struct* %6 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !55
  %9 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %10 = bitcast void (...)** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !54
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8, !tbaa !48
  %14 = tail call i64 @fread(i8* noundef %8, i64 noundef 1, i64 noundef %11, %struct._IO_FILE* noundef %13)
  %15 = load i64, i64* %10, align 8, !tbaa !54
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 43, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %17, %2
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %26 = load i32, i32* %25, align 8, !tbaa !50
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %102, label %28

28:                                               ; preds = %24
  %29 = load i8*, i8** %7, align 8, !tbaa !55
  %30 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %31 = load i8**, i8*** %30, align 8, !tbaa !57
  %32 = load i8*, i8** %31, align 8, !tbaa !3
  %33 = and i32 %26, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %29, i64 1
  %37 = load i8, i8* %29, align 1, !tbaa !7
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds i8, i8* %5, i64 %38
  %40 = load i8, i8* %39, align 1, !tbaa !7
  %41 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %40, i8* %32, align 1, !tbaa !7
  %42 = getelementptr inbounds i8, i8* %29, i64 2
  %43 = load i8, i8* %36, align 1, !tbaa !7
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds i8, i8* %5, i64 %44
  %46 = load i8, i8* %45, align 1, !tbaa !7
  %47 = getelementptr inbounds i8, i8* %32, i64 2
  store i8 %46, i8* %41, align 1, !tbaa !7
  %48 = getelementptr inbounds i8, i8* %29, i64 3
  %49 = load i8, i8* %42, align 1, !tbaa !7
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds i8, i8* %5, i64 %50
  %52 = load i8, i8* %51, align 1, !tbaa !7
  %53 = getelementptr inbounds i8, i8* %32, i64 3
  store i8 %52, i8* %47, align 1, !tbaa !7
  %54 = add i32 %26, -1
  br label %55

55:                                               ; preds = %35, %28
  %56 = phi i32 [ %26, %28 ], [ %54, %35 ]
  %57 = phi i8* [ %32, %28 ], [ %53, %35 ]
  %58 = phi i8* [ %29, %28 ], [ %48, %35 ]
  %59 = icmp eq i32 %26, 1
  br i1 %59, label %102, label %60

60:                                               ; preds = %55, %60
  %61 = phi i32 [ %100, %60 ], [ %56, %55 ]
  %62 = phi i8* [ %99, %60 ], [ %57, %55 ]
  %63 = phi i8* [ %94, %60 ], [ %58, %55 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = load i8, i8* %63, align 1, !tbaa !7
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds i8, i8* %5, i64 %66
  %68 = load i8, i8* %67, align 1, !tbaa !7
  %69 = getelementptr inbounds i8, i8* %62, i64 1
  store i8 %68, i8* %62, align 1, !tbaa !7
  %70 = getelementptr inbounds i8, i8* %63, i64 2
  %71 = load i8, i8* %64, align 1, !tbaa !7
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds i8, i8* %5, i64 %72
  %74 = load i8, i8* %73, align 1, !tbaa !7
  %75 = getelementptr inbounds i8, i8* %62, i64 2
  store i8 %74, i8* %69, align 1, !tbaa !7
  %76 = getelementptr inbounds i8, i8* %63, i64 3
  %77 = load i8, i8* %70, align 1, !tbaa !7
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds i8, i8* %5, i64 %78
  %80 = load i8, i8* %79, align 1, !tbaa !7
  %81 = getelementptr inbounds i8, i8* %62, i64 3
  store i8 %80, i8* %75, align 1, !tbaa !7
  %82 = getelementptr inbounds i8, i8* %63, i64 4
  %83 = load i8, i8* %76, align 1, !tbaa !7
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds i8, i8* %5, i64 %84
  %86 = load i8, i8* %85, align 1, !tbaa !7
  %87 = getelementptr inbounds i8, i8* %62, i64 4
  store i8 %86, i8* %81, align 1, !tbaa !7
  %88 = getelementptr inbounds i8, i8* %63, i64 5
  %89 = load i8, i8* %82, align 1, !tbaa !7
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds i8, i8* %5, i64 %90
  %92 = load i8, i8* %91, align 1, !tbaa !7
  %93 = getelementptr inbounds i8, i8* %62, i64 5
  store i8 %92, i8* %87, align 1, !tbaa !7
  %94 = getelementptr inbounds i8, i8* %63, i64 6
  %95 = load i8, i8* %88, align 1, !tbaa !7
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds i8, i8* %5, i64 %96
  %98 = load i8, i8* %97, align 1, !tbaa !7
  %99 = getelementptr inbounds i8, i8* %62, i64 6
  store i8 %98, i8* %93, align 1, !tbaa !7
  %100 = add i32 %61, -2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %60, !llvm.loop !68

102:                                              ; preds = %55, %60, %24
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_text_rgb_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %5 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %6 = bitcast %struct._IO_FILE** %5 to i8**
  %7 = load i8*, i8** %6, align 8, !tbaa !60
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8, !tbaa !50
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %13 = load i8**, i8*** %12, align 8, !tbaa !57
  %14 = load i8*, i8** %13, align 8, !tbaa !3
  br label %15

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %33, %15 ], [ %9, %11 ]
  %17 = phi i8* [ %32, %15 ], [ %14, %11 ]
  %18 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %4)
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %7, i64 %19
  %21 = load i8, i8* %20, align 1, !tbaa !7
  %22 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %21, i8* %17, align 1, !tbaa !7
  %23 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %4)
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %7, i64 %24
  %26 = load i8, i8* %25, align 1, !tbaa !7
  %27 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 %26, i8* %22, align 1, !tbaa !7
  %28 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %4)
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %7, i64 %29
  %31 = load i8, i8* %30, align 1, !tbaa !7
  %32 = getelementptr inbounds i8, i8* %17, i64 3
  store i8 %31, i8* %27, align 1, !tbaa !7
  %33 = add i32 %16, -1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %15, !llvm.loop !69

35:                                               ; preds = %15, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_text_gray_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !48
  %5 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %6 = bitcast %struct._IO_FILE** %5 to i8**
  %7 = load i8*, i8** %6, align 8, !tbaa !60
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8, !tbaa !50
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %13 = load i8**, i8*** %12, align 8, !tbaa !57
  %14 = load i8*, i8** %13, align 8, !tbaa !3
  br label %15

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %23, %15 ], [ %9, %11 ]
  %17 = phi i8* [ %22, %15 ], [ %14, %11 ]
  %18 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %4)
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %7, i64 %19
  %21 = load i8, i8* %20, align 1, !tbaa !7
  %22 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %21, i8* %17, align 1, !tbaa !7
  %23 = add i32 %16, -1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %15, !llvm.loop !70

25:                                               ; preds = %15, %2
  ret i32 1
}

; Function Attrs: nofree nounwind
declare dso_local noundef i64 @fread(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind uwtable
define dso_local noalias nonnull %struct.cjpeg_source_struct* @jinit_read_gif(%struct.jpeg_compress_struct* nocapture noundef readnone %0) local_unnamed_addr #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.101, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %2) #28
  tail call void @exit(i32 noundef 1) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local %struct.cjpeg_source_struct* @jinit_read_targa(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 112) #27
  %8 = getelementptr inbounds i8, i8* %7, i64 48
  %9 = bitcast i8* %8 to %struct.jpeg_compress_struct**
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %9, align 8, !tbaa !71
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @start_input_tga to void (...)*), void (...)** %10, align 8, !tbaa !73
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @finish_input_tga to void (...)*), void (...)** %12, align 8, !tbaa !74
  %13 = bitcast i8* %7 to %struct.cjpeg_source_struct*
  ret %struct.cjpeg_source_struct* %13
}

; Function Attrs: nounwind uwtable
define internal void @start_input_tga(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #2 {
  %3 = alloca [18 x i8], align 16
  %4 = bitcast %struct.cjpeg_source_struct* %1 to %struct._tga_source_struct*
  %5 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %5) #27
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !75
  %8 = call i64 @fread(i8* noundef nonnull %5, i64 noundef 1, i64 noundef 18, %struct._IO_FILE* noundef %7)
  %9 = icmp eq i64 %8, 18
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 43, i32* %13, align 8, !tbaa !19
  %14 = bitcast %struct.jpeg_error_mgr* %12 to void (%struct.jpeg_common_struct*, ...)**
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef %16) #27
  br label %17

17:                                               ; preds = %10, %2
  %18 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 16
  %19 = load i8, i8* %18, align 16, !tbaa !7
  %20 = icmp eq i8 %19, 15
  %21 = select i1 %20, i8 16, i8 %19
  store i8 %21, i8* %18, align 16
  %22 = load i8, i8* %5, align 16, !tbaa !7
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 1
  %25 = load i8, i8* %24, align 1, !tbaa !7
  %26 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 2
  %27 = load i8, i8* %26, align 2, !tbaa !7
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 5
  %30 = load i8, i8* %29, align 1, !tbaa !7
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 6
  %33 = load i8, i8* %32, align 2, !tbaa !7
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %35, %31
  %37 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 12
  %38 = load i8, i8* %37, align 4, !tbaa !7
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 13
  %41 = load i8, i8* %40, align 1, !tbaa !7
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 8
  %44 = or i32 %43, %39
  %45 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 14
  %46 = load i8, i8* %45, align 2, !tbaa !7
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 15
  %49 = load i8, i8* %48, align 1, !tbaa !7
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 8
  %52 = or i32 %51, %47
  %53 = lshr i8 %21, 3
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %4, i64 0, i32 7
  store i32 %54, i32* %55, align 4, !tbaa !76
  %56 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 17
  %57 = load i8, i8* %56, align 1, !tbaa !7
  %58 = and i8 %57, 32
  %59 = icmp eq i8 %58, 0
  %60 = icmp ugt i8 %25, 1
  %61 = icmp ult i8 %21, 8
  %62 = select i1 %60, i1 true, i1 %61
  %63 = icmp ugt i8 %21, 39
  %64 = select i1 %62, i1 true, i1 %63
  br i1 %64, label %70, label %65

65:                                               ; preds = %17
  %66 = and i8 %21, 7
  %67 = icmp ne i8 %66, 0
  %68 = icmp ugt i8 %57, 63
  %69 = select i1 %67, i1 true, i1 %68
  br i1 %69, label %70, label %77

70:                                               ; preds = %65, %17
  %71 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8, !tbaa !8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i64 0, i32 5
  store i32 1033, i32* %73, align 8, !tbaa !19
  %74 = bitcast %struct.jpeg_error_mgr* %72 to void (%struct.jpeg_common_struct*, ...)**
  %75 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %74, align 8, !tbaa !20
  %76 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %75(%struct.jpeg_common_struct* noundef %76) #27
  br label %77

77:                                               ; preds = %65, %70
  %78 = icmp ugt i8 %27, 8
  %79 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %80 = bitcast i8*** %79 to void (...)**
  br i1 %78, label %81, label %86

81:                                               ; preds = %77
  store void (...)* bitcast (void (%struct._tga_source_struct*)* @read_rle_pixel to void (...)*), void (...)** %80, align 8, !tbaa !77
  %82 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %4, i64 0, i32 9
  store i32 0, i32* %82, align 4, !tbaa !78
  %83 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2
  %84 = bitcast %struct.cjpeg_source_struct* %83 to i32*
  store i32 0, i32* %84, align 8, !tbaa !79
  %85 = add nsw i32 %28, -8
  br label %87

86:                                               ; preds = %77
  store void (...)* bitcast (void (%struct._tga_source_struct*)* @read_non_rle_pixel to void (...)*), void (...)** %80, align 8, !tbaa !77
  br label %87

87:                                               ; preds = %86, %81
  %88 = phi i32 [ %85, %81 ], [ %28, %86 ]
  %89 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  store i32 2, i32* %89, align 4, !tbaa !18
  switch i32 %88, label %167 [
    i32 1, label %90
    i32 2, label %116
    i32 3, label %143
  ]

90:                                               ; preds = %87
  %91 = load i32, i32* %55, align 4, !tbaa !76
  %92 = icmp eq i32 %91, 1
  %93 = icmp eq i8 %25, 1
  %94 = select i1 %92, i1 %93, i1 false
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_8bit_row to i32 (...)*), i32 (...)** %96, align 8, !tbaa !80
  br label %104

97:                                               ; preds = %90
  %98 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %99 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %98, align 8, !tbaa !8
  %100 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %99, i64 0, i32 5
  store i32 1033, i32* %100, align 8, !tbaa !19
  %101 = bitcast %struct.jpeg_error_mgr* %99 to void (%struct.jpeg_common_struct*, ...)**
  %102 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %101, align 8, !tbaa !20
  %103 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %102(%struct.jpeg_common_struct* noundef %103) #27
  br label %104

104:                                              ; preds = %97, %95
  %105 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %107 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8, !tbaa !8
  %108 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 5
  store i32 1037, i32* %108, align 8, !tbaa !19
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 6, i32 0, i64 0
  store i32 %44, i32* %109, align 4, !tbaa !7
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8, !tbaa !8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i64 0, i32 6, i32 0, i64 1
  store i32 %52, i32* %111, align 4, !tbaa !7
  %112 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8, !tbaa !8
  %113 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %112, i64 0, i32 1
  %114 = bitcast void (...)** %113 to void (%struct.jpeg_common_struct*, i32, ...)**
  %115 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %114, align 8, !tbaa !52
  tail call void (%struct.jpeg_common_struct*, i32, ...) %115(%struct.jpeg_common_struct* noundef %105, i32 noundef 1) #27
  br label %174

116:                                              ; preds = %87
  %117 = load i32, i32* %55, align 4, !tbaa !76
  switch i32 %117, label %124 [
    i32 2, label %118
    i32 3, label %120
    i32 4, label %122
  ]

118:                                              ; preds = %116
  %119 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_16bit_row to i32 (...)*), i32 (...)** %119, align 8, !tbaa !80
  br label %131

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_24bit_row to i32 (...)*), i32 (...)** %121, align 8, !tbaa !80
  br label %131

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_24bit_row to i32 (...)*), i32 (...)** %123, align 8, !tbaa !80
  br label %131

124:                                              ; preds = %116
  %125 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %126 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %125, align 8, !tbaa !8
  %127 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %126, i64 0, i32 5
  store i32 1033, i32* %127, align 8, !tbaa !19
  %128 = bitcast %struct.jpeg_error_mgr* %126 to void (%struct.jpeg_common_struct*, ...)**
  %129 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %128, align 8, !tbaa !20
  %130 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %129(%struct.jpeg_common_struct* noundef %130) #27
  br label %131

131:                                              ; preds = %124, %122, %120, %118
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %132, align 8, !tbaa !8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 5
  store i32 1035, i32* %134, align 8, !tbaa !19
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 6, i32 0, i64 0
  store i32 %44, i32* %135, align 4, !tbaa !7
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %132, align 8, !tbaa !8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 6, i32 0, i64 1
  store i32 %52, i32* %137, align 4, !tbaa !7
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %132, align 8, !tbaa !8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 1
  %140 = bitcast void (...)** %139 to void (%struct.jpeg_common_struct*, i32, ...)**
  %141 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %140, align 8, !tbaa !52
  %142 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %141(%struct.jpeg_common_struct* noundef %142, i32 noundef 1) #27
  br label %174

143:                                              ; preds = %87
  store i32 1, i32* %89, align 4, !tbaa !18
  %144 = load i32, i32* %55, align 4, !tbaa !76
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_8bit_gray_row to i32 (...)*), i32 (...)** %147, align 8, !tbaa !80
  br label %155

148:                                              ; preds = %143
  %149 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %150 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %149, align 8, !tbaa !8
  %151 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %150, i64 0, i32 5
  store i32 1033, i32* %151, align 8, !tbaa !19
  %152 = bitcast %struct.jpeg_error_mgr* %150 to void (%struct.jpeg_common_struct*, ...)**
  %153 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %152, align 8, !tbaa !20
  %154 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %153(%struct.jpeg_common_struct* noundef %154) #27
  br label %155

155:                                              ; preds = %148, %146
  %156 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %157 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %158 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8, !tbaa !8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i64 0, i32 5
  store i32 1036, i32* %159, align 8, !tbaa !19
  %160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i64 0, i32 6, i32 0, i64 0
  store i32 %44, i32* %160, align 4, !tbaa !7
  %161 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8, !tbaa !8
  %162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %161, i64 0, i32 6, i32 0, i64 1
  store i32 %52, i32* %162, align 4, !tbaa !7
  %163 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8, !tbaa !8
  %164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i64 0, i32 1
  %165 = bitcast void (...)** %164 to void (%struct.jpeg_common_struct*, i32, ...)**
  %166 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %165, align 8, !tbaa !52
  tail call void (%struct.jpeg_common_struct*, i32, ...) %166(%struct.jpeg_common_struct* noundef %156, i32 noundef 1) #27
  br label %174

167:                                              ; preds = %87
  %168 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %169 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %168, align 8, !tbaa !8
  %170 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i64 0, i32 5
  store i32 1033, i32* %170, align 8, !tbaa !19
  %171 = bitcast %struct.jpeg_error_mgr* %169 to void (%struct.jpeg_common_struct*, ...)**
  %172 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %171, align 8, !tbaa !20
  %173 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %172(%struct.jpeg_common_struct* noundef %173) #27
  br label %174

174:                                              ; preds = %167, %155, %131, %104
  %175 = phi i32 [ 3, %167 ], [ 1, %155 ], [ 3, %131 ], [ 3, %104 ]
  br i1 %59, label %176, label %197

176:                                              ; preds = %174
  %177 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %178 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %177, align 8, !tbaa !36
  %179 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %178, i64 0, i32 4
  %180 = bitcast %struct.jvirt_sarray_control* (...)** %179 to %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)**
  %181 = load %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)** %180, align 8, !tbaa !81
  %182 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %183 = mul nuw nsw i32 %175, %44
  %184 = tail call %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...) %181(%struct.jpeg_common_struct* noundef %182, i32 noundef 1, i32 noundef 0, i32 noundef %183, i32 noundef %52, i32 noundef 1) #27
  %185 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %186 = bitcast void (...)** %185 to %struct.jvirt_sarray_control**
  store %struct.jvirt_sarray_control* %184, %struct.jvirt_sarray_control** %186, align 8, !tbaa !82
  %187 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %188 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %187, align 8, !tbaa !83
  %189 = icmp eq %struct.jpeg_progress_mgr* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %176
  %191 = bitcast %struct.jpeg_progress_mgr* %188 to %struct.cdjpeg_progress_mgr*
  %192 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %191, i64 0, i32 2
  %193 = load i32, i32* %192, align 4, !tbaa !84
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %192, align 4, !tbaa !84
  br label %195

195:                                              ; preds = %190, %176
  %196 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 5
  store i32 1, i32* %196, align 8, !tbaa !87
  br label %212

197:                                              ; preds = %174
  %198 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %199 = bitcast void (...)** %198 to %struct.jvirt_sarray_control**
  store %struct.jvirt_sarray_control* null, %struct.jvirt_sarray_control** %199, align 8, !tbaa !82
  %200 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %201 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %200, align 8, !tbaa !36
  %202 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %201, i64 0, i32 2
  %203 = bitcast i8** (...)** %202 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %204 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %203, align 8, !tbaa !56
  %205 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %206 = mul nuw nsw i32 %175, %44
  %207 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %204(%struct.jpeg_common_struct* noundef %205, i32 noundef 1, i32 noundef %206, i32 noundef 1) #27
  %208 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  store i8** %207, i8*** %208, align 8, !tbaa !88
  %209 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 5
  store i32 1, i32* %209, align 8, !tbaa !87
  %210 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  %211 = load i32 (...)*, i32 (...)** %210, align 8, !tbaa !80
  br label %212

212:                                              ; preds = %197, %195
  %213 = phi i32 (...)* [ %211, %197 ], [ bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @preload_image to i32 (...)*), %195 ]
  %214 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* %213, i32 (...)** %214, align 8, !tbaa !89
  %215 = icmp eq i8 %22, 0
  br i1 %215, label %235, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %218 = bitcast %struct.cjpeg_source_struct* %217 to %struct.jpeg_compress_struct**
  br label %219

219:                                              ; preds = %216, %233
  %220 = phi i32 [ %23, %216 ], [ %221, %233 ]
  %221 = add nsw i32 %220, -1
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !75
  %223 = tail call i32 @getc(%struct._IO_FILE* noundef %222) #27
  %224 = icmp eq i32 %223, -1
  br i1 %224, label %225, label %233

225:                                              ; preds = %219
  %226 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %218, align 8, !tbaa !71
  %227 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %226, i64 0, i32 0
  %228 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %227, align 8, !tbaa !8
  %229 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %228, i64 0, i32 5
  store i32 43, i32* %229, align 8, !tbaa !19
  %230 = bitcast %struct.jpeg_error_mgr* %228 to void (%struct.jpeg_common_struct*, ...)**
  %231 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %230, align 8, !tbaa !20
  %232 = bitcast %struct.jpeg_compress_struct* %226 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %231(%struct.jpeg_common_struct* noundef %232) #27
  br label %233

233:                                              ; preds = %219, %225
  %234 = icmp eq i32 %221, 0
  br i1 %234, label %235, label %219, !llvm.loop !90

235:                                              ; preds = %233, %212
  %236 = icmp eq i32 %36, 0
  br i1 %236, label %337, label %237

237:                                              ; preds = %235
  %238 = icmp ugt i32 %36, 256
  br i1 %238, label %249, label %239

239:                                              ; preds = %237
  %240 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 3
  %241 = load i8, i8* %240, align 1, !tbaa !7
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 4
  %244 = load i8, i8* %243, align 4, !tbaa !7
  %245 = zext i8 %244 to i32
  %246 = shl nuw nsw i32 %245, 8
  %247 = or i32 %246, %242
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %256, label %249

249:                                              ; preds = %239, %237
  %250 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %251 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %250, align 8, !tbaa !8
  %252 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %251, i64 0, i32 5
  store i32 1032, i32* %252, align 8, !tbaa !19
  %253 = bitcast %struct.jpeg_error_mgr* %251 to void (%struct.jpeg_common_struct*, ...)**
  %254 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %253, align 8, !tbaa !20
  %255 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %254(%struct.jpeg_common_struct* noundef %255) #27
  br label %256

256:                                              ; preds = %239, %249
  %257 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %258 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %259 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %258, align 8, !tbaa !36
  %260 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %259, i64 0, i32 2
  %261 = bitcast i8** (...)** %260 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %262 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %261, align 8, !tbaa !56
  %263 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %262(%struct.jpeg_common_struct* noundef %257, i32 noundef 1, i32 noundef %36, i32 noundef 3) #27
  %264 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 1
  %265 = bitcast i32 (...)** %264 to i8***
  store i8** %263, i8*** %265, align 8, !tbaa !91
  %266 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 7
  %267 = load i8, i8* %266, align 1, !tbaa !7
  %268 = icmp eq i8 %267, 24
  br i1 %268, label %279, label %269

269:                                              ; preds = %256
  %270 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %271 = bitcast %struct.cjpeg_source_struct* %270 to %struct.jpeg_compress_struct**
  %272 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %271, align 8, !tbaa !71
  %273 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %272, i64 0, i32 0
  %274 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %273, align 8, !tbaa !8
  %275 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %274, i64 0, i32 5
  store i32 1032, i32* %275, align 8, !tbaa !19
  %276 = bitcast %struct.jpeg_error_mgr* %274 to void (%struct.jpeg_common_struct*, ...)**
  %277 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %276, align 8, !tbaa !20
  %278 = bitcast %struct.jpeg_compress_struct* %272 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %277(%struct.jpeg_common_struct* noundef %278) #27
  br label %279

279:                                              ; preds = %256, %269
  %280 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %281 = bitcast %struct.cjpeg_source_struct* %280 to %struct.jpeg_compress_struct**
  %282 = zext i32 %36 to i64
  br label %283

283:                                              ; preds = %330, %279
  %284 = phi i64 [ 0, %279 ], [ %335, %330 ]
  %285 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !75
  %286 = tail call i32 @getc(%struct._IO_FILE* noundef %285) #27
  %287 = icmp eq i32 %286, -1
  br i1 %287, label %288, label %296

288:                                              ; preds = %283
  %289 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %281, align 8, !tbaa !71
  %290 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %289, i64 0, i32 0
  %291 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %290, align 8, !tbaa !8
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %291, i64 0, i32 5
  store i32 43, i32* %292, align 8, !tbaa !19
  %293 = bitcast %struct.jpeg_error_mgr* %291 to void (%struct.jpeg_common_struct*, ...)**
  %294 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %293, align 8, !tbaa !20
  %295 = bitcast %struct.jpeg_compress_struct* %289 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %294(%struct.jpeg_common_struct* noundef %295) #27
  br label %296

296:                                              ; preds = %288, %283
  %297 = trunc i32 %286 to i8
  %298 = load i8**, i8*** %265, align 8, !tbaa !91
  %299 = getelementptr inbounds i8*, i8** %298, i64 2
  %300 = load i8*, i8** %299, align 8, !tbaa !3
  %301 = getelementptr inbounds i8, i8* %300, i64 %284
  store i8 %297, i8* %301, align 1, !tbaa !7
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !75
  %303 = tail call i32 @getc(%struct._IO_FILE* noundef %302) #27
  %304 = icmp eq i32 %303, -1
  br i1 %304, label %305, label %313

305:                                              ; preds = %296
  %306 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %281, align 8, !tbaa !71
  %307 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %306, i64 0, i32 0
  %308 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %307, align 8, !tbaa !8
  %309 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %308, i64 0, i32 5
  store i32 43, i32* %309, align 8, !tbaa !19
  %310 = bitcast %struct.jpeg_error_mgr* %308 to void (%struct.jpeg_common_struct*, ...)**
  %311 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %310, align 8, !tbaa !20
  %312 = bitcast %struct.jpeg_compress_struct* %306 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %311(%struct.jpeg_common_struct* noundef %312) #27
  br label %313

313:                                              ; preds = %305, %296
  %314 = trunc i32 %303 to i8
  %315 = load i8**, i8*** %265, align 8, !tbaa !91
  %316 = getelementptr inbounds i8*, i8** %315, i64 1
  %317 = load i8*, i8** %316, align 8, !tbaa !3
  %318 = getelementptr inbounds i8, i8* %317, i64 %284
  store i8 %314, i8* %318, align 1, !tbaa !7
  %319 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !75
  %320 = tail call i32 @getc(%struct._IO_FILE* noundef %319) #27
  %321 = icmp eq i32 %320, -1
  br i1 %321, label %322, label %330

322:                                              ; preds = %313
  %323 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %281, align 8, !tbaa !71
  %324 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %323, i64 0, i32 0
  %325 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %324, align 8, !tbaa !8
  %326 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %325, i64 0, i32 5
  store i32 43, i32* %326, align 8, !tbaa !19
  %327 = bitcast %struct.jpeg_error_mgr* %325 to void (%struct.jpeg_common_struct*, ...)**
  %328 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %327, align 8, !tbaa !20
  %329 = bitcast %struct.jpeg_compress_struct* %323 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %328(%struct.jpeg_common_struct* noundef %329) #27
  br label %330

330:                                              ; preds = %322, %313
  %331 = trunc i32 %320 to i8
  %332 = load i8**, i8*** %265, align 8, !tbaa !91
  %333 = load i8*, i8** %332, align 8, !tbaa !3
  %334 = getelementptr inbounds i8, i8* %333, i64 %284
  store i8 %331, i8* %334, align 1, !tbaa !7
  %335 = add nuw nsw i64 %284, 1
  %336 = icmp eq i64 %335, %282
  br i1 %336, label %349, label %283, !llvm.loop !92

337:                                              ; preds = %235
  %338 = icmp eq i8 %25, 0
  br i1 %338, label %346, label %339

339:                                              ; preds = %337
  %340 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %341 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %340, align 8, !tbaa !8
  %342 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 5
  store i32 1033, i32* %342, align 8, !tbaa !19
  %343 = bitcast %struct.jpeg_error_mgr* %341 to void (%struct.jpeg_common_struct*, ...)**
  %344 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %343, align 8, !tbaa !20
  %345 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %344(%struct.jpeg_common_struct* noundef %345) #27
  br label %346

346:                                              ; preds = %339, %337
  %347 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 1
  %348 = bitcast i32 (...)** %347 to i8***
  store i8** null, i8*** %348, align 8, !tbaa !91
  br label %349

349:                                              ; preds = %330, %346
  %350 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  store i32 %175, i32* %350, align 8, !tbaa !51
  %351 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  store i32 8, i32* %351, align 8, !tbaa !49
  %352 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  store i32 %44, i32* %352, align 8, !tbaa !50
  %353 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  store i32 %52, i32* %353, align 4, !tbaa !25
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %5) #27
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define internal void @finish_input_tga(%struct.jpeg_compress_struct* nocapture noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_rle_pixel(%struct._tga_source_struct* nocapture noundef %0) #2 {
  %2 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 0, i32 3
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !75
  %4 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 4, !tbaa !78
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = add nsw i32 %5, -1
  store i32 %8, i32* %4, align 4, !tbaa !78
  br label %48

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8, !tbaa !79
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %10, align 8, !tbaa !79
  %13 = icmp slt i32 %11, 1
  br i1 %13, label %14, label %35

14:                                               ; preds = %9
  %15 = tail call i32 @getc(%struct._IO_FILE* noundef %3) #27
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 1
  %19 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %18, align 8, !tbaa !71
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %19, i64 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8, !tbaa !8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 5
  store i32 43, i32* %22, align 8, !tbaa !19
  %23 = bitcast %struct.jpeg_error_mgr* %21 to void (%struct.jpeg_common_struct*, ...)**
  %24 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %23, align 8, !tbaa !20
  %25 = bitcast %struct.jpeg_compress_struct* %19 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %24(%struct.jpeg_common_struct* noundef %25) #27
  br label %29

26:                                               ; preds = %14
  %27 = and i32 %15, 128
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %17, %26
  %30 = and i32 %15, 127
  store i32 %30, i32* %4, align 4, !tbaa !78
  br label %33

31:                                               ; preds = %26
  %32 = and i32 %15, 127
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ 0, %29 ], [ %32, %31 ]
  store i32 %34, i32* %10, align 8, !tbaa !79
  br label %35

35:                                               ; preds = %33, %9
  %36 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 7
  %37 = load i32, i32* %36, align 4, !tbaa !76
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %35, %39
  %40 = phi i64 [ %44, %39 ], [ 0, %35 ]
  %41 = tail call i32 @getc(%struct._IO_FILE* noundef %3)
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 6, i64 %40
  store i8 %42, i8* %43, align 1, !tbaa !7
  %44 = add nuw nsw i64 %40, 1
  %45 = load i32, i32* %36, align 4, !tbaa !76
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  br i1 %47, label %39, label %48, !llvm.loop !93

48:                                               ; preds = %39, %35, %7
  ret void
}

; Function Attrs: nofree nounwind uwtable
define internal void @read_non_rle_pixel(%struct._tga_source_struct* nocapture noundef %0) #7 {
  %2 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 0, i32 3
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !75
  %4 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4, !tbaa !76
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %12, %7 ], [ 0, %1 ]
  %9 = tail call i32 @getc(%struct._IO_FILE* noundef %3)
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds %struct._tga_source_struct, %struct._tga_source_struct* %0, i64 0, i32 6, i64 %8
  store i8 %10, i8* %11, align 1, !tbaa !7
  %12 = add nuw nsw i64 %8, 1
  %13 = load i32, i32* %4, align 4, !tbaa !76
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %7, label %16, !llvm.loop !94

16:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @get_8bit_row(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = bitcast %struct.cjpeg_source_struct* %1 to %struct._tga_source_struct*
  %4 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 1
  %5 = bitcast i32 (...)** %4 to i8***
  %6 = load i8**, i8*** %5, align 8, !tbaa !91
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8, !tbaa !50
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %40, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %12 = load i8**, i8*** %11, align 8, !tbaa !88
  %13 = load i8*, i8** %12, align 8, !tbaa !3
  %14 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %15 = bitcast i8*** %14 to void (%struct._tga_source_struct*, ...)**
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 5
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8*, i8** %6, i64 1
  %19 = getelementptr inbounds i8*, i8** %6, i64 2
  br label %20

20:                                               ; preds = %10, %20
  %21 = phi i8* [ %13, %10 ], [ %37, %20 ]
  %22 = phi i32 [ %8, %10 ], [ %38, %20 ]
  %23 = load void (%struct._tga_source_struct*, ...)*, void (%struct._tga_source_struct*, ...)** %15, align 8, !tbaa !77
  tail call void (%struct._tga_source_struct*, ...) %23(%struct._tga_source_struct* noundef nonnull %3) #27
  %24 = load i8, i8* %17, align 8, !tbaa !7
  %25 = load i8*, i8** %6, align 8, !tbaa !3
  %26 = zext i8 %24 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i8, i8* %27, align 1, !tbaa !7
  %29 = getelementptr inbounds i8, i8* %21, i64 1
  store i8 %28, i8* %21, align 1, !tbaa !7
  %30 = load i8*, i8** %18, align 8, !tbaa !3
  %31 = getelementptr inbounds i8, i8* %30, i64 %26
  %32 = load i8, i8* %31, align 1, !tbaa !7
  %33 = getelementptr inbounds i8, i8* %21, i64 2
  store i8 %32, i8* %29, align 1, !tbaa !7
  %34 = load i8*, i8** %19, align 8, !tbaa !3
  %35 = getelementptr inbounds i8, i8* %34, i64 %26
  %36 = load i8, i8* %35, align 1, !tbaa !7
  %37 = getelementptr inbounds i8, i8* %21, i64 3
  store i8 %36, i8* %33, align 1, !tbaa !7
  %38 = add i32 %22, -1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %20, !llvm.loop !95

40:                                               ; preds = %20, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_16bit_row(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = bitcast %struct.cjpeg_source_struct* %1 to %struct._tga_source_struct*
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8, !tbaa !50
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %9 = load i8**, i8*** %8, align 8, !tbaa !88
  %10 = load i8*, i8** %9, align 8, !tbaa !3
  %11 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %12 = bitcast i8*** %11 to void (%struct._tga_source_struct*, ...)**
  %13 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 5
  %14 = bitcast i32* %13 to [4 x i8]*
  %15 = bitcast i32* %13 to i8*
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %14, i64 0, i64 1
  br label %17

17:                                               ; preds = %7, %17
  %18 = phi i32 [ %5, %7 ], [ %47, %17 ]
  %19 = phi i8* [ %10, %7 ], [ %46, %17 ]
  %20 = load void (%struct._tga_source_struct*, ...)*, void (%struct._tga_source_struct*, ...)** %12, align 8, !tbaa !77
  tail call void (%struct._tga_source_struct*, ...) %20(%struct._tga_source_struct* noundef nonnull %3) #27
  %21 = load i8, i8* %15, align 8, !tbaa !7
  %22 = zext i8 %21 to i32
  %23 = load i8, i8* %16, align 1, !tbaa !7
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %22
  %27 = and i32 %22, 31
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [32 x i16], [32 x i16]* @c5to8bits, i64 0, i64 %28
  %30 = load i16, i16* %29, align 2, !tbaa !96
  %31 = trunc i16 %30 to i8
  %32 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 %31, i8* %32, align 1, !tbaa !7
  %33 = lshr i32 %26, 5
  %34 = and i32 %33, 31
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [32 x i16], [32 x i16]* @c5to8bits, i64 0, i64 %35
  %37 = load i16, i16* %36, align 2, !tbaa !96
  %38 = trunc i16 %37 to i8
  %39 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %38, i8* %39, align 1, !tbaa !7
  %40 = lshr i32 %24, 2
  %41 = and i32 %40, 31
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [32 x i16], [32 x i16]* @c5to8bits, i64 0, i64 %42
  %44 = load i16, i16* %43, align 2, !tbaa !96
  %45 = trunc i16 %44 to i8
  store i8 %45, i8* %19, align 1, !tbaa !7
  %46 = getelementptr inbounds i8, i8* %19, i64 3
  %47 = add i32 %18, -1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %17, !llvm.loop !97

49:                                               ; preds = %17, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_24bit_row(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = bitcast %struct.cjpeg_source_struct* %1 to %struct._tga_source_struct*
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8, !tbaa !50
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %9 = load i8**, i8*** %8, align 8, !tbaa !88
  %10 = load i8*, i8** %9, align 8, !tbaa !3
  %11 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %12 = bitcast i8*** %11 to void (%struct._tga_source_struct*, ...)**
  %13 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 5
  %14 = bitcast i32* %13 to [4 x i8]*
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %14, i64 0, i64 2
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %14, i64 0, i64 1
  %17 = bitcast i32* %13 to i8*
  br label %18

18:                                               ; preds = %7, %18
  %19 = phi i32 [ %5, %7 ], [ %28, %18 ]
  %20 = phi i8* [ %10, %7 ], [ %27, %18 ]
  %21 = load void (%struct._tga_source_struct*, ...)*, void (%struct._tga_source_struct*, ...)** %12, align 8, !tbaa !77
  tail call void (%struct._tga_source_struct*, ...) %21(%struct._tga_source_struct* noundef nonnull %3) #27
  %22 = load i8, i8* %15, align 2, !tbaa !7
  %23 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 %22, i8* %20, align 1, !tbaa !7
  %24 = load i8, i8* %16, align 1, !tbaa !7
  %25 = getelementptr inbounds i8, i8* %20, i64 2
  store i8 %24, i8* %23, align 1, !tbaa !7
  %26 = load i8, i8* %17, align 8, !tbaa !7
  %27 = getelementptr inbounds i8, i8* %20, i64 3
  store i8 %26, i8* %25, align 1, !tbaa !7
  %28 = add i32 %19, -1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %18, !llvm.loop !98

30:                                               ; preds = %18, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_8bit_gray_row(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = bitcast %struct.cjpeg_source_struct* %1 to %struct._tga_source_struct*
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8, !tbaa !50
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %9 = load i8**, i8*** %8, align 8, !tbaa !88
  %10 = load i8*, i8** %9, align 8, !tbaa !3
  %11 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %12 = bitcast i8*** %11 to void (%struct._tga_source_struct*, ...)**
  %13 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 5
  %14 = bitcast i32* %13 to i8*
  br label %15

15:                                               ; preds = %7, %15
  %16 = phi i32 [ %5, %7 ], [ %21, %15 ]
  %17 = phi i8* [ %10, %7 ], [ %20, %15 ]
  %18 = load void (%struct._tga_source_struct*, ...)*, void (%struct._tga_source_struct*, ...)** %12, align 8, !tbaa !77
  tail call void (%struct._tga_source_struct*, ...) %18(%struct._tga_source_struct* noundef nonnull %3) #27
  %19 = load i8, i8* %14, align 8, !tbaa !7
  %20 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %19, i8* %17, align 1, !tbaa !7
  %21 = add i32 %16, -1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %15, !llvm.loop !99

23:                                               ; preds = %15, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @preload_image(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %4 = bitcast %struct.jpeg_progress_mgr** %3 to %struct.cdjpeg_progress_mgr**
  %5 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %4, align 8, !tbaa !83
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 4, !tbaa !25
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = icmp eq %struct.cdjpeg_progress_mgr* %5, null
  %11 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %5, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %5, i64 0, i32 0, i32 2
  %13 = bitcast %struct.cdjpeg_progress_mgr* %5 to void (%struct.jpeg_common_struct*, ...)**
  %14 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %17 = bitcast void (...)** %16 to %struct.jvirt_sarray_control**
  %18 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %19 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 2, i32 1
  %20 = bitcast i32 (...)** %19 to i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)**
  br label %21

21:                                               ; preds = %9, %27
  %22 = phi i64 [ 0, %9 ], [ %37, %27 ]
  %23 = phi i32 [ %7, %9 ], [ %38, %27 ]
  br i1 %10, label %27, label %24

24:                                               ; preds = %21
  store i64 %22, i64* %11, align 8, !tbaa !100
  %25 = zext i32 %23 to i64
  store i64 %25, i64* %12, align 8, !tbaa !101
  %26 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %13, align 8, !tbaa !102
  tail call void (%struct.jpeg_common_struct*, ...) %26(%struct.jpeg_common_struct* noundef %14) #27
  br label %27

27:                                               ; preds = %24, %21
  %28 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %15, align 8, !tbaa !36
  %29 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %28, i64 0, i32 7
  %30 = bitcast i8** (...)** %29 to i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)**
  %31 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)** %30, align 8, !tbaa !103
  %32 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %17, align 8, !tbaa !82
  %33 = trunc i64 %22 to i32
  %34 = tail call i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...) %31(%struct.jpeg_common_struct* noundef %14, %struct.jvirt_sarray_control* noundef %32, i32 noundef %33, i32 noundef 1, i32 noundef 1) #27
  store i8** %34, i8*** %18, align 8, !tbaa !88
  %35 = load i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)** %20, align 8, !tbaa !80
  %36 = tail call i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...) %35(%struct.jpeg_compress_struct* noundef nonnull %0, %struct.cjpeg_source_struct* noundef %1) #27
  %37 = add nuw nsw i64 %22, 1
  %38 = load i32, i32* %6, align 4, !tbaa !25
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %21, label %41, !llvm.loop !104

41:                                               ; preds = %27
  %42 = add i32 %38, -1
  br label %43

43:                                               ; preds = %41, %2
  %44 = phi i32 [ -1, %2 ], [ %42, %41 ]
  %45 = icmp eq %struct.cdjpeg_progress_mgr* %5, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %5, i64 0, i32 1
  %48 = load i32, i32* %47, align 8, !tbaa !105
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %47, align 8, !tbaa !105
  br label %50

50:                                               ; preds = %46, %43
  %51 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_memory_row to i32 (...)*), i32 (...)** %51, align 8, !tbaa !89
  %52 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %53 = bitcast %struct._IO_FILE** %52 to i32*
  store i32 0, i32* %53, align 8, !tbaa !106
  %54 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %55 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %54, align 8, !tbaa !36
  %56 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %55, i64 0, i32 7
  %57 = bitcast i8** (...)** %56 to i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)**
  %58 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)** %57, align 8, !tbaa !103
  %59 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %60 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %61 = bitcast void (...)** %60 to %struct.jvirt_sarray_control**
  %62 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %61, align 8, !tbaa !82
  %63 = tail call i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...) %58(%struct.jpeg_common_struct* noundef %59, %struct.jvirt_sarray_control* noundef %62, i32 noundef %44, i32 noundef 1, i32 noundef 0) #27
  %64 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  store i8** %63, i8*** %64, align 8, !tbaa !88
  %65 = load i32, i32* %53, align 8, !tbaa !106
  %66 = add i32 %65, 1
  store i32 %66, i32* %53, align 8, !tbaa !106
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_memory_row(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4, !tbaa !25
  %5 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %6 = bitcast %struct._IO_FILE** %5 to i32*
  %7 = load i32, i32* %6, align 8, !tbaa !106
  %8 = xor i32 %7, -1
  %9 = add i32 %4, %8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %11 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %10, align 8, !tbaa !36
  %12 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %11, i64 0, i32 7
  %13 = bitcast i8** (...)** %12 to i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)**
  %14 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)** %13, align 8, !tbaa !103
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %17 = bitcast void (...)** %16 to %struct.jvirt_sarray_control**
  %18 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %17, align 8, !tbaa !82
  %19 = tail call i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...) %14(%struct.jpeg_common_struct* noundef %15, %struct.jvirt_sarray_control* noundef %18, i32 noundef %9, i32 noundef 1, i32 noundef 0) #27
  %20 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  store i8** %19, i8*** %20, align 8, !tbaa !88
  %21 = load i32, i32* %6, align 8, !tbaa !106
  %22 = add i32 %21, 1
  store i32 %22, i32* %6, align 8, !tbaa !106
  ret i32 1
}

; Function Attrs: nounwind uwtable
define dso_local %struct.cjpeg_source_struct* @jinit_read_bmp(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 88) #27
  %8 = getelementptr inbounds i8, i8* %7, i64 48
  %9 = bitcast i8* %8 to %struct.jpeg_compress_struct**
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %9, align 8, !tbaa !107
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @start_input_bmp to void (...)*), void (...)** %10, align 8, !tbaa !109
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @finish_input_bmp to void (...)*), void (...)** %12, align 8, !tbaa !110
  %13 = bitcast i8* %7 to %struct.cjpeg_source_struct*
  ret %struct.cjpeg_source_struct* %13
}

; Function Attrs: nounwind uwtable
define internal void @start_input_bmp(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #2 {
  %3 = alloca [14 x i8], align 1
  %4 = alloca [64 x i8], align 16
  %5 = bitcast %struct.cjpeg_source_struct* %1 to %struct._bmp_source_struct*
  %6 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %6) #27
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #27
  %8 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %10 = call i64 @fread(i8* noundef nonnull %6, i64 noundef 1, i64 noundef 14, %struct._IO_FILE* noundef %9)
  %11 = icmp eq i64 %10, 14
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 5
  store i32 43, i32* %15, align 8, !tbaa !19
  %16 = bitcast %struct.jpeg_error_mgr* %14 to void (%struct.jpeg_common_struct*, ...)**
  %17 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %16, align 8, !tbaa !20
  %18 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %17(%struct.jpeg_common_struct* noundef %18) #27
  br label %19

19:                                               ; preds = %12, %2
  %20 = load i8, i8* %6, align 1, !tbaa !7
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 1
  %23 = load i8, i8* %22, align 1, !tbaa !7
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = or i32 %25, %21
  %27 = icmp eq i32 %26, 19778
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 1007, i32* %31, align 8, !tbaa !19
  %32 = bitcast %struct.jpeg_error_mgr* %30 to void (%struct.jpeg_common_struct*, ...)**
  %33 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %32, align 8, !tbaa !20
  %34 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %33(%struct.jpeg_common_struct* noundef %34) #27
  br label %35

35:                                               ; preds = %28, %19
  %36 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 10
  %37 = load i8, i8* %36, align 1, !tbaa !7
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 11
  %40 = load i8, i8* %39, align 1, !tbaa !7
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 8
  %43 = or i64 %42, %38
  %44 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 12
  %45 = load i8, i8* %44, align 1, !tbaa !7
  %46 = zext i8 %45 to i64
  %47 = shl nuw nsw i64 %46, 16
  %48 = or i64 %43, %47
  %49 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 13
  %50 = load i8, i8* %49, align 1, !tbaa !7
  %51 = zext i8 %50 to i64
  %52 = shl nuw nsw i64 %51, 24
  %53 = or i64 %48, %52
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %55 = call i64 @fread(i8* noundef nonnull %7, i64 noundef 1, i64 noundef 4, %struct._IO_FILE* noundef %54)
  %56 = icmp eq i64 %55, 4
  br i1 %56, label %64, label %57

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %58, align 8, !tbaa !8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i64 0, i32 5
  store i32 43, i32* %60, align 8, !tbaa !19
  %61 = bitcast %struct.jpeg_error_mgr* %59 to void (%struct.jpeg_common_struct*, ...)**
  %62 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %61, align 8, !tbaa !20
  %63 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %62(%struct.jpeg_common_struct* noundef %63) #27
  br label %64

64:                                               ; preds = %57, %35
  %65 = load i8, i8* %7, align 16, !tbaa !7
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 1
  %68 = load i8, i8* %67, align 1, !tbaa !7
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 8
  %71 = or i64 %70, %66
  %72 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 2
  %73 = load i8, i8* %72, align 2, !tbaa !7
  %74 = zext i8 %73 to i64
  %75 = shl nuw nsw i64 %74, 16
  %76 = or i64 %71, %75
  %77 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 3
  %78 = load i8, i8* %77, align 1, !tbaa !7
  %79 = zext i8 %78 to i64
  %80 = shl nuw nsw i64 %79, 24
  %81 = or i64 %76, %80
  %82 = add nsw i64 %81, -65
  %83 = icmp ult i64 %82, -53
  br i1 %83, label %84, label %91

84:                                               ; preds = %64
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %86 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %85, align 8, !tbaa !8
  %87 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %86, i64 0, i32 5
  store i32 1003, i32* %87, align 8, !tbaa !19
  %88 = bitcast %struct.jpeg_error_mgr* %86 to void (%struct.jpeg_common_struct*, ...)**
  %89 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %88, align 8, !tbaa !20
  %90 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %89(%struct.jpeg_common_struct* noundef %90) #27
  br label %91

91:                                               ; preds = %64, %84
  %92 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 4
  %93 = add nsw i64 %81, -4
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %95 = call i64 @fread(i8* noundef nonnull %92, i64 noundef 1, i64 noundef %93, %struct._IO_FILE* noundef %94)
  %96 = icmp eq i64 %95, %93
  br i1 %96, label %104, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %99 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %98, align 8, !tbaa !8
  %100 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %99, i64 0, i32 5
  store i32 43, i32* %100, align 8, !tbaa !19
  %101 = bitcast %struct.jpeg_error_mgr* %99 to void (%struct.jpeg_common_struct*, ...)**
  %102 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %101, align 8, !tbaa !20
  %103 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %102(%struct.jpeg_common_struct* noundef %103) #27
  br label %104

104:                                              ; preds = %97, %91
  %105 = trunc i64 %81 to i32
  switch i32 %105, label %377 [
    i32 12, label %106
    i32 40, label %184
    i32 64, label %184
  ]

106:                                              ; preds = %104
  %107 = load i8, i8* %92, align 4, !tbaa !7
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 5
  %110 = load i8, i8* %109, align 1, !tbaa !7
  %111 = zext i8 %110 to i32
  %112 = shl nuw nsw i32 %111, 8
  %113 = or i32 %112, %108
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 6
  %116 = load i8, i8* %115, align 2, !tbaa !7
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 7
  %119 = load i8, i8* %118, align 1, !tbaa !7
  %120 = zext i8 %119 to i32
  %121 = shl nuw nsw i32 %120, 8
  %122 = or i32 %121, %117
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 8
  %125 = load i8, i8* %124, align 8, !tbaa !7
  %126 = zext i8 %125 to i32
  %127 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 9
  %128 = load i8, i8* %127, align 1, !tbaa !7
  %129 = zext i8 %128 to i32
  %130 = shl nuw nsw i32 %129, 8
  %131 = or i32 %130, %126
  %132 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 10
  %133 = load i8, i8* %132, align 2, !tbaa !7
  %134 = zext i8 %133 to i32
  %135 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 11
  %136 = load i8, i8* %135, align 1, !tbaa !7
  %137 = zext i8 %136 to i32
  %138 = shl nuw nsw i32 %137, 8
  %139 = or i32 %138, %134
  %140 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %141 = bitcast i8*** %140 to i32*
  store i32 %139, i32* %141, align 8, !tbaa !112
  %142 = trunc i32 %139 to i16
  switch i16 %142, label %167 [
    i16 8, label %143
    i16 24, label %155
  ]

143:                                              ; preds = %106
  %144 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %145 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %144, align 8, !tbaa !8
  %146 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %145, i64 0, i32 5
  store i32 1011, i32* %146, align 8, !tbaa !19
  %147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %145, i64 0, i32 6, i32 0, i64 0
  store i32 %113, i32* %147, align 4, !tbaa !7
  %148 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %144, align 8, !tbaa !8
  %149 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %148, i64 0, i32 6, i32 0, i64 1
  store i32 %122, i32* %149, align 4, !tbaa !7
  %150 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %144, align 8, !tbaa !8
  %151 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %150, i64 0, i32 1
  %152 = bitcast void (...)** %151 to void (%struct.jpeg_common_struct*, i32, ...)**
  %153 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %152, align 8, !tbaa !52
  %154 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %153(%struct.jpeg_common_struct* noundef %154, i32 noundef 1) #27
  br label %174

155:                                              ; preds = %106
  %156 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %157 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %156, align 8, !tbaa !8
  %158 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %157, i64 0, i32 5
  store i32 1010, i32* %158, align 8, !tbaa !19
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %157, i64 0, i32 6, i32 0, i64 0
  store i32 %113, i32* %159, align 4, !tbaa !7
  %160 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %156, align 8, !tbaa !8
  %161 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %160, i64 0, i32 6, i32 0, i64 1
  store i32 %122, i32* %161, align 4, !tbaa !7
  %162 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %156, align 8, !tbaa !8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %162, i64 0, i32 1
  %164 = bitcast void (...)** %163 to void (%struct.jpeg_common_struct*, i32, ...)**
  %165 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %164, align 8, !tbaa !52
  %166 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %165(%struct.jpeg_common_struct* noundef %166, i32 noundef 1) #27
  br label %174

167:                                              ; preds = %106
  %168 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %169 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %168, align 8, !tbaa !8
  %170 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i64 0, i32 5
  store i32 1002, i32* %170, align 8, !tbaa !19
  %171 = bitcast %struct.jpeg_error_mgr* %169 to void (%struct.jpeg_common_struct*, ...)**
  %172 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %171, align 8, !tbaa !20
  %173 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %172(%struct.jpeg_common_struct* noundef %173) #27
  br label %174

174:                                              ; preds = %167, %155, %143
  %175 = phi i32 [ 0, %167 ], [ 0, %155 ], [ 3, %143 ]
  %176 = icmp eq i32 %131, 1
  br i1 %176, label %386, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %179 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %178, align 8, !tbaa !8
  %180 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %179, i64 0, i32 5
  store i32 1004, i32* %180, align 8, !tbaa !19
  %181 = bitcast %struct.jpeg_error_mgr* %179 to void (%struct.jpeg_common_struct*, ...)**
  %182 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %181, align 8, !tbaa !20
  %183 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %182(%struct.jpeg_common_struct* noundef %183) #27
  br label %386

184:                                              ; preds = %104, %104
  %185 = load i8, i8* %92, align 4, !tbaa !7
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 5
  %188 = load i8, i8* %187, align 1, !tbaa !7
  %189 = zext i8 %188 to i64
  %190 = shl nuw nsw i64 %189, 8
  %191 = or i64 %190, %186
  %192 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 6
  %193 = load i8, i8* %192, align 2, !tbaa !7
  %194 = zext i8 %193 to i64
  %195 = shl nuw nsw i64 %194, 16
  %196 = or i64 %191, %195
  %197 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 7
  %198 = load i8, i8* %197, align 1, !tbaa !7
  %199 = zext i8 %198 to i64
  %200 = shl nuw nsw i64 %199, 24
  %201 = or i64 %196, %200
  %202 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 8
  %203 = load i8, i8* %202, align 8, !tbaa !7
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 9
  %206 = load i8, i8* %205, align 1, !tbaa !7
  %207 = zext i8 %206 to i64
  %208 = shl nuw nsw i64 %207, 8
  %209 = or i64 %208, %204
  %210 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 10
  %211 = load i8, i8* %210, align 2, !tbaa !7
  %212 = zext i8 %211 to i64
  %213 = shl nuw nsw i64 %212, 16
  %214 = or i64 %209, %213
  %215 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 11
  %216 = load i8, i8* %215, align 1, !tbaa !7
  %217 = zext i8 %216 to i64
  %218 = shl nuw nsw i64 %217, 24
  %219 = or i64 %214, %218
  %220 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 12
  %221 = load i8, i8* %220, align 4, !tbaa !7
  %222 = zext i8 %221 to i32
  %223 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 13
  %224 = load i8, i8* %223, align 1, !tbaa !7
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 8
  %227 = or i32 %226, %222
  %228 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 14
  %229 = load i8, i8* %228, align 2, !tbaa !7
  %230 = zext i8 %229 to i32
  %231 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 15
  %232 = load i8, i8* %231, align 1, !tbaa !7
  %233 = zext i8 %232 to i32
  %234 = shl nuw nsw i32 %233, 8
  %235 = or i32 %234, %230
  %236 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %237 = bitcast i8*** %236 to i32*
  store i32 %235, i32* %237, align 8, !tbaa !112
  %238 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 16
  %239 = load i8, i8* %238, align 16, !tbaa !7
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 17
  %242 = load i8, i8* %241, align 1, !tbaa !7
  %243 = zext i8 %242 to i64
  %244 = shl nuw nsw i64 %243, 8
  %245 = or i64 %244, %240
  %246 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 18
  %247 = load i8, i8* %246, align 2, !tbaa !7
  %248 = zext i8 %247 to i64
  %249 = shl nuw nsw i64 %248, 16
  %250 = or i64 %245, %249
  %251 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 19
  %252 = load i8, i8* %251, align 1, !tbaa !7
  %253 = zext i8 %252 to i64
  %254 = shl nuw nsw i64 %253, 24
  %255 = or i64 %250, %254
  %256 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 24
  %257 = load i8, i8* %256, align 8, !tbaa !7
  %258 = zext i8 %257 to i64
  %259 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 25
  %260 = load i8, i8* %259, align 1, !tbaa !7
  %261 = zext i8 %260 to i64
  %262 = shl nuw nsw i64 %261, 8
  %263 = or i64 %262, %258
  %264 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 26
  %265 = load i8, i8* %264, align 2, !tbaa !7
  %266 = zext i8 %265 to i64
  %267 = shl nuw nsw i64 %266, 16
  %268 = or i64 %263, %267
  %269 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 27
  %270 = load i8, i8* %269, align 1, !tbaa !7
  %271 = zext i8 %270 to i64
  %272 = shl nuw nsw i64 %271, 24
  %273 = or i64 %268, %272
  %274 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 28
  %275 = load i8, i8* %274, align 4, !tbaa !7
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 29
  %278 = load i8, i8* %277, align 1, !tbaa !7
  %279 = zext i8 %278 to i64
  %280 = shl nuw nsw i64 %279, 8
  %281 = or i64 %280, %276
  %282 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 30
  %283 = load i8, i8* %282, align 2, !tbaa !7
  %284 = zext i8 %283 to i64
  %285 = shl nuw nsw i64 %284, 16
  %286 = or i64 %281, %285
  %287 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 31
  %288 = load i8, i8* %287, align 1, !tbaa !7
  %289 = zext i8 %288 to i64
  %290 = shl nuw nsw i64 %289, 24
  %291 = or i64 %286, %290
  %292 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 32
  %293 = load i8, i8* %292, align 16, !tbaa !7
  %294 = zext i8 %293 to i64
  %295 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 33
  %296 = load i8, i8* %295, align 1, !tbaa !7
  %297 = zext i8 %296 to i64
  %298 = shl nuw nsw i64 %297, 8
  %299 = or i64 %298, %294
  %300 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 34
  %301 = load i8, i8* %300, align 2, !tbaa !7
  %302 = zext i8 %301 to i64
  %303 = shl nuw nsw i64 %302, 16
  %304 = or i64 %299, %303
  %305 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 35
  %306 = load i8, i8* %305, align 1, !tbaa !7
  %307 = zext i8 %306 to i64
  %308 = shl nuw nsw i64 %307, 24
  %309 = or i64 %304, %308
  %310 = trunc i32 %235 to i16
  switch i16 %310, label %339 [
    i16 8, label %311
    i16 24, label %325
  ]

311:                                              ; preds = %184
  %312 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %313 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %312, align 8, !tbaa !8
  %314 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %313, i64 0, i32 5
  store i32 1009, i32* %314, align 8, !tbaa !19
  %315 = trunc i64 %201 to i32
  %316 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %313, i64 0, i32 6, i32 0, i64 0
  store i32 %315, i32* %316, align 4, !tbaa !7
  %317 = trunc i64 %219 to i32
  %318 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %312, align 8, !tbaa !8
  %319 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %318, i64 0, i32 6, i32 0, i64 1
  store i32 %317, i32* %319, align 4, !tbaa !7
  %320 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %312, align 8, !tbaa !8
  %321 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %320, i64 0, i32 1
  %322 = bitcast void (...)** %321 to void (%struct.jpeg_common_struct*, i32, ...)**
  %323 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %322, align 8, !tbaa !52
  %324 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %323(%struct.jpeg_common_struct* noundef %324, i32 noundef 1) #27
  br label %346

325:                                              ; preds = %184
  %326 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %327 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %326, align 8, !tbaa !8
  %328 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %327, i64 0, i32 5
  store i32 1008, i32* %328, align 8, !tbaa !19
  %329 = trunc i64 %201 to i32
  %330 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %327, i64 0, i32 6, i32 0, i64 0
  store i32 %329, i32* %330, align 4, !tbaa !7
  %331 = trunc i64 %219 to i32
  %332 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %326, align 8, !tbaa !8
  %333 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %332, i64 0, i32 6, i32 0, i64 1
  store i32 %331, i32* %333, align 4, !tbaa !7
  %334 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %326, align 8, !tbaa !8
  %335 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %334, i64 0, i32 1
  %336 = bitcast void (...)** %335 to void (%struct.jpeg_common_struct*, i32, ...)**
  %337 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %336, align 8, !tbaa !52
  %338 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %337(%struct.jpeg_common_struct* noundef %338, i32 noundef 1) #27
  br label %346

339:                                              ; preds = %184
  %340 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %341 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %340, align 8, !tbaa !8
  %342 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 5
  store i32 1002, i32* %342, align 8, !tbaa !19
  %343 = bitcast %struct.jpeg_error_mgr* %341 to void (%struct.jpeg_common_struct*, ...)**
  %344 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %343, align 8, !tbaa !20
  %345 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %344(%struct.jpeg_common_struct* noundef %345) #27
  br label %346

346:                                              ; preds = %339, %325, %311
  %347 = phi i32 [ 0, %339 ], [ 0, %325 ], [ 4, %311 ]
  %348 = icmp eq i32 %227, 1
  br i1 %348, label %356, label %349

349:                                              ; preds = %346
  %350 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %351 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %350, align 8, !tbaa !8
  %352 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %351, i64 0, i32 5
  store i32 1004, i32* %352, align 8, !tbaa !19
  %353 = bitcast %struct.jpeg_error_mgr* %351 to void (%struct.jpeg_common_struct*, ...)**
  %354 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %353, align 8, !tbaa !20
  %355 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %354(%struct.jpeg_common_struct* noundef %355) #27
  br label %356

356:                                              ; preds = %349, %346
  %357 = icmp eq i64 %255, 0
  br i1 %357, label %365, label %358

358:                                              ; preds = %356
  %359 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %360 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %359, align 8, !tbaa !8
  %361 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %360, i64 0, i32 5
  store i32 1006, i32* %361, align 8, !tbaa !19
  %362 = bitcast %struct.jpeg_error_mgr* %360 to void (%struct.jpeg_common_struct*, ...)**
  %363 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %362, align 8, !tbaa !20
  %364 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %363(%struct.jpeg_common_struct* noundef %364) #27
  br label %365

365:                                              ; preds = %358, %356
  %366 = icmp ne i64 %273, 0
  %367 = icmp ne i64 %291, 0
  %368 = select i1 %366, i1 %367, i1 false
  br i1 %368, label %369, label %386

369:                                              ; preds = %365
  %370 = udiv i64 %273, 100
  %371 = trunc i64 %370 to i32
  %372 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 36
  store i32 %371, i32* %372, align 4, !tbaa !113
  %373 = udiv i64 %291, 100
  %374 = trunc i64 %373 to i32
  %375 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 37
  store i32 %374, i32* %375, align 8, !tbaa !114
  %376 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 35
  store i16 2, i16* %376, align 8, !tbaa !115
  br label %386

377:                                              ; preds = %104
  %378 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %379 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %378, align 8, !tbaa !8
  %380 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %379, i64 0, i32 5
  store i32 1003, i32* %380, align 8, !tbaa !19
  %381 = bitcast %struct.jpeg_error_mgr* %379 to void (%struct.jpeg_common_struct*, ...)**
  %382 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %381, align 8, !tbaa !20
  %383 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %382(%struct.jpeg_common_struct* noundef %383) #27
  %384 = add nsw i64 %53, -14
  %385 = sub nsw i64 %384, %81
  br label %563

386:                                              ; preds = %365, %369, %174, %177
  %387 = phi i64 [ %219, %369 ], [ %219, %365 ], [ %123, %177 ], [ %123, %174 ]
  %388 = phi i64 [ %309, %369 ], [ %309, %365 ], [ 0, %177 ], [ 0, %174 ]
  %389 = phi i32 [ %347, %369 ], [ %347, %365 ], [ %175, %177 ], [ %175, %174 ]
  %390 = phi i64 [ %201, %369 ], [ %201, %365 ], [ %114, %177 ], [ %114, %174 ]
  %391 = add nsw i64 %53, -14
  %392 = sub nsw i64 %391, %81
  %393 = icmp eq i32 %389, 0
  br i1 %393, label %563, label %394

394:                                              ; preds = %386
  %395 = icmp slt i64 %388, 1
  br i1 %395, label %405, label %396

396:                                              ; preds = %394
  %397 = icmp ugt i64 %388, 256
  br i1 %397, label %398, label %405

398:                                              ; preds = %396
  %399 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %400 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %399, align 8, !tbaa !8
  %401 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %400, i64 0, i32 5
  store i32 1001, i32* %401, align 8, !tbaa !19
  %402 = bitcast %struct.jpeg_error_mgr* %400 to void (%struct.jpeg_common_struct*, ...)**
  %403 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %402, align 8, !tbaa !20
  %404 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %403(%struct.jpeg_common_struct* noundef %404) #27
  br label %405

405:                                              ; preds = %394, %396, %398
  %406 = phi i64 [ %388, %398 ], [ %388, %396 ], [ 256, %394 ]
  %407 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %408 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %407, align 8, !tbaa !36
  %409 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %408, i64 0, i32 2
  %410 = bitcast i8** (...)** %409 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %411 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %410, align 8, !tbaa !56
  %412 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %413 = trunc i64 %406 to i32
  %414 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %411(%struct.jpeg_common_struct* noundef %412, i32 noundef 1, i32 noundef %413, i32 noundef 3) #27
  %415 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 1
  %416 = bitcast i32 (...)** %415 to i8***
  store i8** %414, i8*** %416, align 8, !tbaa !116
  switch i32 %389, label %549 [
    i32 3, label %423
    i32 4, label %417
  ]

417:                                              ; preds = %405
  %418 = icmp sgt i32 %413, 0
  br i1 %418, label %419, label %559

419:                                              ; preds = %417
  %420 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %421 = bitcast %struct.cjpeg_source_struct* %420 to %struct.jpeg_compress_struct**
  %422 = and i64 %406, 4294967295
  br label %483

423:                                              ; preds = %405
  %424 = icmp sgt i32 %413, 0
  br i1 %424, label %425, label %559

425:                                              ; preds = %423
  %426 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %427 = bitcast %struct.cjpeg_source_struct* %426 to %struct.jpeg_compress_struct**
  %428 = and i64 %406, 4294967295
  br label %429

429:                                              ; preds = %476, %425
  %430 = phi i64 [ 0, %425 ], [ %481, %476 ]
  %431 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %432 = tail call i32 @getc(%struct._IO_FILE* noundef %431) #27
  %433 = icmp eq i32 %432, -1
  br i1 %433, label %434, label %442

434:                                              ; preds = %429
  %435 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %427, align 8, !tbaa !107
  %436 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %435, i64 0, i32 0
  %437 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %436, align 8, !tbaa !8
  %438 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %437, i64 0, i32 5
  store i32 43, i32* %438, align 8, !tbaa !19
  %439 = bitcast %struct.jpeg_error_mgr* %437 to void (%struct.jpeg_common_struct*, ...)**
  %440 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %439, align 8, !tbaa !20
  %441 = bitcast %struct.jpeg_compress_struct* %435 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %440(%struct.jpeg_common_struct* noundef %441) #27
  br label %442

442:                                              ; preds = %434, %429
  %443 = trunc i32 %432 to i8
  %444 = load i8**, i8*** %416, align 8, !tbaa !116
  %445 = getelementptr inbounds i8*, i8** %444, i64 2
  %446 = load i8*, i8** %445, align 8, !tbaa !3
  %447 = getelementptr inbounds i8, i8* %446, i64 %430
  store i8 %443, i8* %447, align 1, !tbaa !7
  %448 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %449 = tail call i32 @getc(%struct._IO_FILE* noundef %448) #27
  %450 = icmp eq i32 %449, -1
  br i1 %450, label %451, label %459

451:                                              ; preds = %442
  %452 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %427, align 8, !tbaa !107
  %453 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %452, i64 0, i32 0
  %454 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %453, align 8, !tbaa !8
  %455 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %454, i64 0, i32 5
  store i32 43, i32* %455, align 8, !tbaa !19
  %456 = bitcast %struct.jpeg_error_mgr* %454 to void (%struct.jpeg_common_struct*, ...)**
  %457 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %456, align 8, !tbaa !20
  %458 = bitcast %struct.jpeg_compress_struct* %452 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %457(%struct.jpeg_common_struct* noundef %458) #27
  br label %459

459:                                              ; preds = %451, %442
  %460 = trunc i32 %449 to i8
  %461 = load i8**, i8*** %416, align 8, !tbaa !116
  %462 = getelementptr inbounds i8*, i8** %461, i64 1
  %463 = load i8*, i8** %462, align 8, !tbaa !3
  %464 = getelementptr inbounds i8, i8* %463, i64 %430
  store i8 %460, i8* %464, align 1, !tbaa !7
  %465 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %466 = tail call i32 @getc(%struct._IO_FILE* noundef %465) #27
  %467 = icmp eq i32 %466, -1
  br i1 %467, label %468, label %476

468:                                              ; preds = %459
  %469 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %427, align 8, !tbaa !107
  %470 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %469, i64 0, i32 0
  %471 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %470, align 8, !tbaa !8
  %472 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %471, i64 0, i32 5
  store i32 43, i32* %472, align 8, !tbaa !19
  %473 = bitcast %struct.jpeg_error_mgr* %471 to void (%struct.jpeg_common_struct*, ...)**
  %474 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %473, align 8, !tbaa !20
  %475 = bitcast %struct.jpeg_compress_struct* %469 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %474(%struct.jpeg_common_struct* noundef %475) #27
  br label %476

476:                                              ; preds = %468, %459
  %477 = trunc i32 %466 to i8
  %478 = load i8**, i8*** %416, align 8, !tbaa !116
  %479 = load i8*, i8** %478, align 8, !tbaa !3
  %480 = getelementptr inbounds i8, i8* %479, i64 %430
  store i8 %477, i8* %480, align 1, !tbaa !7
  %481 = add nuw nsw i64 %430, 1
  %482 = icmp eq i64 %481, %428
  br i1 %482, label %559, label %429, !llvm.loop !117

483:                                              ; preds = %546, %419
  %484 = phi i64 [ 0, %419 ], [ %547, %546 ]
  %485 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %486 = tail call i32 @getc(%struct._IO_FILE* noundef %485) #27
  %487 = icmp eq i32 %486, -1
  br i1 %487, label %488, label %496

488:                                              ; preds = %483
  %489 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %421, align 8, !tbaa !107
  %490 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %489, i64 0, i32 0
  %491 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %490, align 8, !tbaa !8
  %492 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %491, i64 0, i32 5
  store i32 43, i32* %492, align 8, !tbaa !19
  %493 = bitcast %struct.jpeg_error_mgr* %491 to void (%struct.jpeg_common_struct*, ...)**
  %494 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %493, align 8, !tbaa !20
  %495 = bitcast %struct.jpeg_compress_struct* %489 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %494(%struct.jpeg_common_struct* noundef %495) #27
  br label %496

496:                                              ; preds = %488, %483
  %497 = trunc i32 %486 to i8
  %498 = load i8**, i8*** %416, align 8, !tbaa !116
  %499 = getelementptr inbounds i8*, i8** %498, i64 2
  %500 = load i8*, i8** %499, align 8, !tbaa !3
  %501 = getelementptr inbounds i8, i8* %500, i64 %484
  store i8 %497, i8* %501, align 1, !tbaa !7
  %502 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %503 = tail call i32 @getc(%struct._IO_FILE* noundef %502) #27
  %504 = icmp eq i32 %503, -1
  br i1 %504, label %505, label %513

505:                                              ; preds = %496
  %506 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %421, align 8, !tbaa !107
  %507 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %506, i64 0, i32 0
  %508 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %507, align 8, !tbaa !8
  %509 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %508, i64 0, i32 5
  store i32 43, i32* %509, align 8, !tbaa !19
  %510 = bitcast %struct.jpeg_error_mgr* %508 to void (%struct.jpeg_common_struct*, ...)**
  %511 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %510, align 8, !tbaa !20
  %512 = bitcast %struct.jpeg_compress_struct* %506 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %511(%struct.jpeg_common_struct* noundef %512) #27
  br label %513

513:                                              ; preds = %505, %496
  %514 = trunc i32 %503 to i8
  %515 = load i8**, i8*** %416, align 8, !tbaa !116
  %516 = getelementptr inbounds i8*, i8** %515, i64 1
  %517 = load i8*, i8** %516, align 8, !tbaa !3
  %518 = getelementptr inbounds i8, i8* %517, i64 %484
  store i8 %514, i8* %518, align 1, !tbaa !7
  %519 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %520 = tail call i32 @getc(%struct._IO_FILE* noundef %519) #27
  %521 = icmp eq i32 %520, -1
  br i1 %521, label %522, label %530

522:                                              ; preds = %513
  %523 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %421, align 8, !tbaa !107
  %524 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %523, i64 0, i32 0
  %525 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %524, align 8, !tbaa !8
  %526 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %525, i64 0, i32 5
  store i32 43, i32* %526, align 8, !tbaa !19
  %527 = bitcast %struct.jpeg_error_mgr* %525 to void (%struct.jpeg_common_struct*, ...)**
  %528 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %527, align 8, !tbaa !20
  %529 = bitcast %struct.jpeg_compress_struct* %523 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %528(%struct.jpeg_common_struct* noundef %529) #27
  br label %530

530:                                              ; preds = %522, %513
  %531 = trunc i32 %520 to i8
  %532 = load i8**, i8*** %416, align 8, !tbaa !116
  %533 = load i8*, i8** %532, align 8, !tbaa !3
  %534 = getelementptr inbounds i8, i8* %533, i64 %484
  store i8 %531, i8* %534, align 1, !tbaa !7
  %535 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %536 = tail call i32 @getc(%struct._IO_FILE* noundef %535) #27
  %537 = icmp eq i32 %536, -1
  br i1 %537, label %538, label %546

538:                                              ; preds = %530
  %539 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %421, align 8, !tbaa !107
  %540 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %539, i64 0, i32 0
  %541 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %540, align 8, !tbaa !8
  %542 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %541, i64 0, i32 5
  store i32 43, i32* %542, align 8, !tbaa !19
  %543 = bitcast %struct.jpeg_error_mgr* %541 to void (%struct.jpeg_common_struct*, ...)**
  %544 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %543, align 8, !tbaa !20
  %545 = bitcast %struct.jpeg_compress_struct* %539 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %544(%struct.jpeg_common_struct* noundef %545) #27
  br label %546

546:                                              ; preds = %538, %530
  %547 = add nuw nsw i64 %484, 1
  %548 = icmp eq i64 %547, %422
  br i1 %548, label %559, label %483, !llvm.loop !118

549:                                              ; preds = %405
  %550 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %551 = bitcast %struct.cjpeg_source_struct* %550 to %struct.jpeg_compress_struct**
  %552 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %551, align 8, !tbaa !107
  %553 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %552, i64 0, i32 0
  %554 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %553, align 8, !tbaa !8
  %555 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %554, i64 0, i32 5
  store i32 1001, i32* %555, align 8, !tbaa !19
  %556 = bitcast %struct.jpeg_error_mgr* %554 to void (%struct.jpeg_common_struct*, ...)**
  %557 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %556, align 8, !tbaa !20
  %558 = bitcast %struct.jpeg_compress_struct* %552 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %557(%struct.jpeg_common_struct* noundef %558) #27
  br label %559

559:                                              ; preds = %546, %476, %417, %423, %549
  %560 = zext i32 %389 to i64
  %561 = mul nsw i64 %406, %560
  %562 = sub nsw i64 %392, %561
  br label %563

563:                                              ; preds = %377, %559, %386
  %564 = phi i64 [ %390, %559 ], [ %390, %386 ], [ 0, %377 ]
  %565 = phi i64 [ %387, %559 ], [ %387, %386 ], [ 0, %377 ]
  %566 = phi i64 [ %562, %559 ], [ %392, %386 ], [ %385, %377 ]
  %567 = icmp slt i64 %566, 0
  br i1 %567, label %568, label %575

568:                                              ; preds = %563
  %569 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %570 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %569, align 8, !tbaa !8
  %571 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %570, i64 0, i32 5
  store i32 1003, i32* %571, align 8, !tbaa !19
  %572 = bitcast %struct.jpeg_error_mgr* %570 to void (%struct.jpeg_common_struct*, ...)**
  %573 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %572, align 8, !tbaa !20
  %574 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %573(%struct.jpeg_common_struct* noundef %574) #27
  br label %596

575:                                              ; preds = %563
  %576 = icmp eq i64 %566, 0
  br i1 %576, label %596, label %577

577:                                              ; preds = %575
  %578 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1
  %579 = bitcast %struct.cjpeg_source_struct* %578 to %struct.jpeg_compress_struct**
  br label %580

580:                                              ; preds = %577, %594
  %581 = phi i64 [ %566, %577 ], [ %582, %594 ]
  %582 = add nsw i64 %581, -1
  %583 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !111
  %584 = tail call i32 @getc(%struct._IO_FILE* noundef %583) #27
  %585 = icmp eq i32 %584, -1
  br i1 %585, label %586, label %594

586:                                              ; preds = %580
  %587 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %579, align 8, !tbaa !107
  %588 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %587, i64 0, i32 0
  %589 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %588, align 8, !tbaa !8
  %590 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %589, i64 0, i32 5
  store i32 43, i32* %590, align 8, !tbaa !19
  %591 = bitcast %struct.jpeg_error_mgr* %589 to void (%struct.jpeg_common_struct*, ...)**
  %592 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %591, align 8, !tbaa !20
  %593 = bitcast %struct.jpeg_compress_struct* %587 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %592(%struct.jpeg_common_struct* noundef %593) #27
  br label %594

594:                                              ; preds = %580, %586
  %595 = icmp ugt i64 %581, 1
  br i1 %595, label %580, label %596, !llvm.loop !119

596:                                              ; preds = %594, %568, %575
  %597 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %598 = bitcast i8*** %597 to i32*
  %599 = load i32, i32* %598, align 8, !tbaa !112
  %600 = icmp eq i32 %599, 24
  %601 = mul nsw i64 %564, 3
  %602 = select i1 %600, i64 %601, i64 %564
  %603 = trunc i64 %602 to i32
  %604 = trunc i64 %602 to i32
  %605 = sub i32 0, %604
  %606 = and i32 %605, 3
  %607 = add i32 %606, %603
  %608 = getelementptr inbounds %struct._bmp_source_struct, %struct._bmp_source_struct* %5, i64 0, i32 5
  store i32 %607, i32* %608, align 4, !tbaa !120
  %609 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %610 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %609, align 8, !tbaa !36
  %611 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %610, i64 0, i32 4
  %612 = bitcast %struct.jvirt_sarray_control* (...)** %611 to %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)**
  %613 = load %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)** %612, align 8, !tbaa !81
  %614 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %615 = trunc i64 %565 to i32
  %616 = tail call %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...) %613(%struct.jpeg_common_struct* noundef %614, i32 noundef 1, i32 noundef 0, i32 noundef %607, i32 noundef %615, i32 noundef 1) #27
  %617 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %618 = bitcast void (...)** %617 to %struct.jvirt_sarray_control**
  store %struct.jvirt_sarray_control* %616, %struct.jvirt_sarray_control** %618, align 8, !tbaa !121
  %619 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @preload_image.106 to i32 (...)*), i32 (...)** %619, align 8, !tbaa !122
  %620 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %621 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %620, align 8, !tbaa !83
  %622 = icmp eq %struct.jpeg_progress_mgr* %621, null
  br i1 %622, label %628, label %623

623:                                              ; preds = %596
  %624 = bitcast %struct.jpeg_progress_mgr* %621 to %struct.cdjpeg_progress_mgr*
  %625 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %624, i64 0, i32 2
  %626 = load i32, i32* %625, align 4, !tbaa !84
  %627 = add nsw i32 %626, 1
  store i32 %627, i32* %625, align 4, !tbaa !84
  br label %628

628:                                              ; preds = %623, %596
  %629 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %609, align 8, !tbaa !36
  %630 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %629, i64 0, i32 2
  %631 = bitcast i8** (...)** %630 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %632 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %631, align 8, !tbaa !56
  %633 = trunc i64 %564 to i32
  %634 = mul i32 %633, 3
  %635 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %632(%struct.jpeg_common_struct* noundef nonnull %614, i32 noundef 1, i32 noundef %634, i32 noundef 1) #27
  %636 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  store i8** %635, i8*** %636, align 8, !tbaa !123
  %637 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 5
  store i32 1, i32* %637, align 8, !tbaa !124
  %638 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  store i32 2, i32* %638, align 4, !tbaa !18
  %639 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  store i32 3, i32* %639, align 8, !tbaa !51
  %640 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  store i32 8, i32* %640, align 8, !tbaa !49
  %641 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  store i32 %633, i32* %641, align 8, !tbaa !50
  %642 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  store i32 %615, i32* %642, align 4, !tbaa !25
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #27
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %6) #27
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define internal void @finish_input_bmp(%struct.jpeg_compress_struct* nocapture noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @preload_image.106(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* noundef %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 3
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !tbaa !111
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %6 = bitcast %struct.jpeg_progress_mgr** %5 to %struct.cdjpeg_progress_mgr**
  %7 = load %struct.cdjpeg_progress_mgr*, %struct.cdjpeg_progress_mgr** %6, align 8, !tbaa !83
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 4, !tbaa !25
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %61, label %11

11:                                               ; preds = %2
  %12 = bitcast %struct.cjpeg_source_struct* %1 to %struct._bmp_source_struct*
  %13 = icmp eq %struct.cdjpeg_progress_mgr* %7, null
  %14 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %7, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %7, i64 0, i32 0, i32 2
  %16 = bitcast %struct.cdjpeg_progress_mgr* %7 to void (%struct.jpeg_common_struct*, ...)**
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %19 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %20 = bitcast void (...)** %19 to %struct.jvirt_sarray_control**
  %21 = getelementptr inbounds %struct._bmp_source_struct, %struct._bmp_source_struct* %12, i64 0, i32 5
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %23

23:                                               ; preds = %11, %56
  %24 = phi i64 [ 0, %11 ], [ %57, %56 ]
  %25 = phi i32 [ %9, %11 ], [ %58, %56 ]
  br i1 %13, label %29, label %26

26:                                               ; preds = %23
  store i64 %24, i64* %14, align 8, !tbaa !100
  %27 = zext i32 %25 to i64
  store i64 %27, i64* %15, align 8, !tbaa !101
  %28 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %16, align 8, !tbaa !102
  tail call void (%struct.jpeg_common_struct*, ...) %28(%struct.jpeg_common_struct* noundef %17) #27
  br label %29

29:                                               ; preds = %26, %23
  %30 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %18, align 8, !tbaa !36
  %31 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %30, i64 0, i32 7
  %32 = bitcast i8** (...)** %31 to i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)**
  %33 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)** %32, align 8, !tbaa !103
  %34 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %20, align 8, !tbaa !121
  %35 = trunc i64 %24 to i32
  %36 = tail call i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...) %33(%struct.jpeg_common_struct* noundef %17, %struct.jvirt_sarray_control* noundef %34, i32 noundef %35, i32 noundef 1, i32 noundef 1) #27
  %37 = load i32, i32* %21, align 4, !tbaa !120
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = load i8*, i8** %36, align 8, !tbaa !3
  br label %41

41:                                               ; preds = %39, %51
  %42 = phi i8* [ %53, %51 ], [ %40, %39 ]
  %43 = phi i32 [ %54, %51 ], [ %37, %39 ]
  %44 = tail call i32 @getc(%struct._IO_FILE* noundef %4)
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %22, align 8, !tbaa !8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i64 0, i32 5
  store i32 43, i32* %48, align 8, !tbaa !19
  %49 = bitcast %struct.jpeg_error_mgr* %47 to void (%struct.jpeg_common_struct*, ...)**
  %50 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %49, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %50(%struct.jpeg_common_struct* noundef %17) #27
  br label %51

51:                                               ; preds = %46, %41
  %52 = trunc i32 %44 to i8
  %53 = getelementptr inbounds i8, i8* %42, i64 1
  store i8 %52, i8* %42, align 1, !tbaa !7
  %54 = add i32 %43, -1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %41, !llvm.loop !125

56:                                               ; preds = %51, %29
  %57 = add nuw nsw i64 %24, 1
  %58 = load i32, i32* %8, align 4, !tbaa !25
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %23, label %61, !llvm.loop !126

61:                                               ; preds = %56, %2
  %62 = phi i32 [ 0, %2 ], [ %58, %56 ]
  %63 = icmp eq %struct.cdjpeg_progress_mgr* %7, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.cdjpeg_progress_mgr, %struct.cdjpeg_progress_mgr* %7, i64 0, i32 1
  %66 = load i32, i32* %65, align 8, !tbaa !105
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %65, align 8, !tbaa !105
  br label %68

68:                                               ; preds = %64, %61
  %69 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 4
  %70 = bitcast i8*** %69 to i32*
  %71 = load i32, i32* %70, align 8, !tbaa !112
  switch i32 %71, label %76 [
    i32 8, label %72
    i32 24, label %74
  ]

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_8bit_row.107 to i32 (...)*), i32 (...)** %73, align 8, !tbaa !122
  br label %87

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_24bit_row.108 to i32 (...)*), i32 (...)** %75, align 8, !tbaa !122
  br label %87

76:                                               ; preds = %68
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %77, align 8, !tbaa !8
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i64 0, i32 5
  store i32 1002, i32* %79, align 8, !tbaa !19
  %80 = bitcast %struct.jpeg_error_mgr* %78 to void (%struct.jpeg_common_struct*, ...)**
  %81 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %80, align 8, !tbaa !20
  %82 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %81(%struct.jpeg_common_struct* noundef %82) #27
  %83 = load i32, i32* %8, align 4, !tbaa !25
  %84 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 1
  %85 = bitcast i32 (...)** %84 to i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)**
  %86 = load i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)** %85, align 8, !tbaa !122
  br label %87

87:                                               ; preds = %76, %74, %72
  %88 = phi i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)* [ %86, %76 ], [ bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_24bit_row.108 to i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*), %74 ], [ bitcast (i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)* @get_8bit_row.107 to i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...)*), %72 ]
  %89 = phi i32 [ %83, %76 ], [ %62, %74 ], [ %62, %72 ]
  %90 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %91 = bitcast %struct._IO_FILE** %90 to i32*
  store i32 %89, i32* %91, align 8, !tbaa !127
  %92 = tail call i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*, ...) %88(%struct.jpeg_compress_struct* noundef nonnull %0, %struct.cjpeg_source_struct* noundef nonnull %1) #27
  ret i32 %92
}

; Function Attrs: nounwind uwtable
define internal i32 @get_8bit_row.107(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 1
  %4 = bitcast i32 (...)** %3 to i8***
  %5 = load i8**, i8*** %4, align 8, !tbaa !116
  %6 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %7 = bitcast %struct._IO_FILE** %6 to i32*
  %8 = load i32, i32* %7, align 8, !tbaa !127
  %9 = add i32 %8, -1
  store i32 %9, i32* %7, align 8, !tbaa !127
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %11 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %10, align 8, !tbaa !36
  %12 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %11, i64 0, i32 7
  %13 = bitcast i8** (...)** %12 to i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)**
  %14 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)** %13, align 8, !tbaa !103
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %17 = bitcast void (...)** %16 to %struct.jvirt_sarray_control**
  %18 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %17, align 8, !tbaa !121
  %19 = tail call i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...) %14(%struct.jpeg_common_struct* noundef %15, %struct.jvirt_sarray_control* noundef %18, i32 noundef %9, i32 noundef 1, i32 noundef 0) #27
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %21 = load i32, i32* %20, align 8, !tbaa !50
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %90, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %25 = load i8**, i8*** %24, align 8, !tbaa !123
  %26 = load i8*, i8** %25, align 8, !tbaa !3
  %27 = load i8*, i8** %19, align 8, !tbaa !3
  %28 = getelementptr inbounds i8*, i8** %5, i64 1
  %29 = getelementptr inbounds i8*, i8** %5, i64 2
  %30 = and i32 %21, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %27, i64 1
  %34 = load i8, i8* %27, align 1, !tbaa !7
  %35 = load i8*, i8** %5, align 8, !tbaa !3
  %36 = zext i8 %34 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = load i8, i8* %37, align 1, !tbaa !7
  %39 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 %38, i8* %26, align 1, !tbaa !7
  %40 = load i8*, i8** %28, align 8, !tbaa !3
  %41 = getelementptr inbounds i8, i8* %40, i64 %36
  %42 = load i8, i8* %41, align 1, !tbaa !7
  %43 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 %42, i8* %39, align 1, !tbaa !7
  %44 = load i8*, i8** %29, align 8, !tbaa !3
  %45 = getelementptr inbounds i8, i8* %44, i64 %36
  %46 = load i8, i8* %45, align 1, !tbaa !7
  %47 = getelementptr inbounds i8, i8* %26, i64 3
  store i8 %46, i8* %43, align 1, !tbaa !7
  %48 = add i32 %21, -1
  br label %49

49:                                               ; preds = %32, %23
  %50 = phi i32 [ %21, %23 ], [ %48, %32 ]
  %51 = phi i8* [ %26, %23 ], [ %47, %32 ]
  %52 = phi i8* [ %27, %23 ], [ %33, %32 ]
  %53 = icmp eq i32 %21, 1
  br i1 %53, label %90, label %54

54:                                               ; preds = %49, %54
  %55 = phi i32 [ %88, %54 ], [ %50, %49 ]
  %56 = phi i8* [ %87, %54 ], [ %51, %49 ]
  %57 = phi i8* [ %73, %54 ], [ %52, %49 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %57, align 1, !tbaa !7
  %60 = load i8*, i8** %5, align 8, !tbaa !3
  %61 = zext i8 %59 to i64
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1, !tbaa !7
  %64 = getelementptr inbounds i8, i8* %56, i64 1
  store i8 %63, i8* %56, align 1, !tbaa !7
  %65 = load i8*, i8** %28, align 8, !tbaa !3
  %66 = getelementptr inbounds i8, i8* %65, i64 %61
  %67 = load i8, i8* %66, align 1, !tbaa !7
  %68 = getelementptr inbounds i8, i8* %56, i64 2
  store i8 %67, i8* %64, align 1, !tbaa !7
  %69 = load i8*, i8** %29, align 8, !tbaa !3
  %70 = getelementptr inbounds i8, i8* %69, i64 %61
  %71 = load i8, i8* %70, align 1, !tbaa !7
  %72 = getelementptr inbounds i8, i8* %56, i64 3
  store i8 %71, i8* %68, align 1, !tbaa !7
  %73 = getelementptr inbounds i8, i8* %57, i64 2
  %74 = load i8, i8* %58, align 1, !tbaa !7
  %75 = load i8*, i8** %5, align 8, !tbaa !3
  %76 = zext i8 %74 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = load i8, i8* %77, align 1, !tbaa !7
  %79 = getelementptr inbounds i8, i8* %56, i64 4
  store i8 %78, i8* %72, align 1, !tbaa !7
  %80 = load i8*, i8** %28, align 8, !tbaa !3
  %81 = getelementptr inbounds i8, i8* %80, i64 %76
  %82 = load i8, i8* %81, align 1, !tbaa !7
  %83 = getelementptr inbounds i8, i8* %56, i64 5
  store i8 %82, i8* %79, align 1, !tbaa !7
  %84 = load i8*, i8** %29, align 8, !tbaa !3
  %85 = getelementptr inbounds i8, i8* %84, i64 %76
  %86 = load i8, i8* %85, align 1, !tbaa !7
  %87 = getelementptr inbounds i8, i8* %56, i64 6
  store i8 %86, i8* %83, align 1, !tbaa !7
  %88 = add i32 %55, -2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %54, !llvm.loop !128

90:                                               ; preds = %49, %54, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @get_24bit_row.108(%struct.jpeg_compress_struct* noundef %0, %struct.cjpeg_source_struct* nocapture noundef %1) #2 {
  %3 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 3
  %4 = bitcast %struct._IO_FILE** %3 to i32*
  %5 = load i32, i32* %4, align 8, !tbaa !127
  %6 = add i32 %5, -1
  store i32 %6, i32* %4, align 8, !tbaa !127
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8, !tbaa !36
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i64 0, i32 7
  %10 = bitcast i8** (...)** %9 to i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)**
  %11 = load i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...)** %10, align 8, !tbaa !103
  %12 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %13 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 1, i32 2
  %14 = bitcast void (...)** %13 to %struct.jvirt_sarray_control**
  %15 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %14, align 8, !tbaa !121
  %16 = tail call i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32, ...) %11(%struct.jpeg_common_struct* noundef %12, %struct.jvirt_sarray_control* noundef %15, i32 noundef %6, i32 noundef 1, i32 noundef 0) #27
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %18 = load i32, i32* %17, align 8, !tbaa !50
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %67, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.cjpeg_source_struct, %struct.cjpeg_source_struct* %1, i64 0, i32 4
  %22 = load i8**, i8*** %21, align 8, !tbaa !123
  %23 = load i8*, i8** %22, align 8, !tbaa !3
  %24 = load i8*, i8** %16, align 8, !tbaa !3
  %25 = and i32 %18, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %24, i64 1
  %29 = load i8, i8* %24, align 1, !tbaa !7
  %30 = getelementptr inbounds i8, i8* %23, i64 2
  store i8 %29, i8* %30, align 1, !tbaa !7
  %31 = getelementptr inbounds i8, i8* %24, i64 2
  %32 = load i8, i8* %28, align 1, !tbaa !7
  %33 = getelementptr inbounds i8, i8* %23, i64 1
  store i8 %32, i8* %33, align 1, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %24, i64 3
  %35 = load i8, i8* %31, align 1, !tbaa !7
  store i8 %35, i8* %23, align 1, !tbaa !7
  %36 = getelementptr inbounds i8, i8* %23, i64 3
  %37 = add i32 %18, -1
  br label %38

38:                                               ; preds = %27, %20
  %39 = phi i32 [ %18, %20 ], [ %37, %27 ]
  %40 = phi i8* [ %23, %20 ], [ %36, %27 ]
  %41 = phi i8* [ %24, %20 ], [ %34, %27 ]
  %42 = icmp eq i32 %18, 1
  br i1 %42, label %67, label %43

43:                                               ; preds = %38, %43
  %44 = phi i32 [ %65, %43 ], [ %39, %38 ]
  %45 = phi i8* [ %64, %43 ], [ %40, %38 ]
  %46 = phi i8* [ %62, %43 ], [ %41, %38 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = load i8, i8* %46, align 1, !tbaa !7
  %49 = getelementptr inbounds i8, i8* %45, i64 2
  store i8 %48, i8* %49, align 1, !tbaa !7
  %50 = getelementptr inbounds i8, i8* %46, i64 2
  %51 = load i8, i8* %47, align 1, !tbaa !7
  %52 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %51, i8* %52, align 1, !tbaa !7
  %53 = getelementptr inbounds i8, i8* %46, i64 3
  %54 = load i8, i8* %50, align 1, !tbaa !7
  store i8 %54, i8* %45, align 1, !tbaa !7
  %55 = getelementptr inbounds i8, i8* %45, i64 3
  %56 = getelementptr inbounds i8, i8* %46, i64 4
  %57 = load i8, i8* %53, align 1, !tbaa !7
  %58 = getelementptr inbounds i8, i8* %45, i64 5
  store i8 %57, i8* %58, align 1, !tbaa !7
  %59 = getelementptr inbounds i8, i8* %46, i64 5
  %60 = load i8, i8* %56, align 1, !tbaa !7
  %61 = getelementptr inbounds i8, i8* %45, i64 4
  store i8 %60, i8* %61, align 1, !tbaa !7
  %62 = getelementptr inbounds i8, i8* %46, i64 6
  %63 = load i8, i8* %59, align 1, !tbaa !7
  store i8 %63, i8* %55, align 1, !tbaa !7
  %64 = getelementptr inbounds i8, i8* %45, i64 6
  %65 = add i32 %44, -2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %43, !llvm.loop !129

67:                                               ; preds = %38, %43, %2
  ret i32 1
}

; Function Attrs: nounwind uwtable
define dso_local i32 @read_quant_tables(%struct.jpeg_compress_struct* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca [64 x i32], align 16
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #27
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #27
  %10 = bitcast [64 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %10) #27
  %11 = tail call noalias %struct._IO_FILE* @fopen(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.111, i64 0, i64 0))
  %12 = icmp eq %struct._IO_FILE* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %92, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds [64 x i32], [64 x i32]* %7, i64 0, i64 0
  %18 = load i64, i64* %6, align 8, !tbaa !35
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %17, align 16, !tbaa !32
  br label %27

20:                                               ; preds = %4
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %21, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.112, i64 0, i64 0), i8* noundef %1) #28
  br label %101

23:                                               ; preds = %89
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %24, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.113, i64 0, i64 0), i8* noundef %1) #28
  %26 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %11)
  br label %101

27:                                               ; preds = %16, %35
  %28 = phi i64 [ 1, %16 ], [ %39, %35 ]
  %29 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %27, %47, %63, %79
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %32, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.114, i64 0, i64 0), i8* noundef %1) #28
  %34 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %11)
  br label %101

35:                                               ; preds = %27
  %36 = load i64, i64* %6, align 8, !tbaa !35
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds [64 x i32], [64 x i32]* %7, i64 0, i64 %28
  store i32 %37, i32* %38, align 4, !tbaa !32
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, 64
  br i1 %40, label %41, label %27, !llvm.loop !130

41:                                               ; preds = %35
  call void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32)* @jpeg_add_quant_table to void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef 0, i32* noundef nonnull %17, i32 noundef %2, i32 noundef %3) #27
  %42 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %92, label %44, !llvm.loop !131

44:                                               ; preds = %41
  %45 = load i64, i64* %6, align 8, !tbaa !35
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %17, align 16, !tbaa !32
  br label %47

47:                                               ; preds = %51, %44
  %48 = phi i64 [ 1, %44 ], [ %55, %51 ]
  %49 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %31, label %51

51:                                               ; preds = %47
  %52 = load i64, i64* %6, align 8, !tbaa !35
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds [64 x i32], [64 x i32]* %7, i64 0, i64 %48
  store i32 %53, i32* %54, align 4, !tbaa !32
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp eq i64 %55, 64
  br i1 %56, label %57, label %47, !llvm.loop !130

57:                                               ; preds = %51
  call void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32)* @jpeg_add_quant_table to void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef 1, i32* noundef nonnull %17, i32 noundef %2, i32 noundef %3) #27
  %58 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %92, label %60, !llvm.loop !131

60:                                               ; preds = %57
  %61 = load i64, i64* %6, align 8, !tbaa !35
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %17, align 16, !tbaa !32
  br label %63

63:                                               ; preds = %67, %60
  %64 = phi i64 [ 1, %60 ], [ %71, %67 ]
  %65 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %31, label %67

67:                                               ; preds = %63
  %68 = load i64, i64* %6, align 8, !tbaa !35
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds [64 x i32], [64 x i32]* %7, i64 0, i64 %64
  store i32 %69, i32* %70, align 4, !tbaa !32
  %71 = add nuw nsw i64 %64, 1
  %72 = icmp eq i64 %71, 64
  br i1 %72, label %73, label %63, !llvm.loop !130

73:                                               ; preds = %67
  call void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32)* @jpeg_add_quant_table to void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef 2, i32* noundef nonnull %17, i32 noundef %2, i32 noundef %3) #27
  %74 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !llvm.loop !131

76:                                               ; preds = %73
  %77 = load i64, i64* %6, align 8, !tbaa !35
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %17, align 16, !tbaa !32
  br label %79

79:                                               ; preds = %83, %76
  %80 = phi i64 [ 1, %76 ], [ %87, %83 ]
  %81 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %31, label %83

83:                                               ; preds = %79
  %84 = load i64, i64* %6, align 8, !tbaa !35
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds [64 x i32], [64 x i32]* %7, i64 0, i64 %80
  store i32 %85, i32* %86, align 4, !tbaa !32
  %87 = add nuw nsw i64 %80, 1
  %88 = icmp eq i64 %87, 64
  br i1 %88, label %89, label %79, !llvm.loop !130

89:                                               ; preds = %83
  call void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32)* @jpeg_add_quant_table to void (%struct.jpeg_compress_struct*, i32, i32*, i32, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef 3, i32* noundef nonnull %17, i32 noundef %2, i32 noundef %3) #27
  %90 = call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef nonnull %11, i64* noundef nonnull %6, i32* noundef nonnull %5)
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %23, !llvm.loop !131

92:                                               ; preds = %41, %57, %73, %89, %13
  %93 = load i32, i32* %5, align 4, !tbaa !32
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %99, label %95

95:                                               ; preds = %92
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %96, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.115, i64 0, i64 0), i8* noundef %1) #28
  %98 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %11)
  br label %101

99:                                               ; preds = %92
  %100 = call i32 @fclose(%struct._IO_FILE* noundef nonnull %11)
  br label %101

101:                                              ; preds = %99, %95, %31, %23, %20
  %102 = phi i32 [ 0, %20 ], [ 0, %23 ], [ 0, %31 ], [ 0, %95 ], [ 1, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #27
  ret i32 %102
}

; Function Attrs: nofree nounwind uwtable
define internal fastcc i32 @read_text_integer(%struct._IO_FILE* nocapture noundef %0, i64* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) unnamed_addr #7 {
  br label %4

4:                                                ; preds = %12, %3
  %5 = tail call i32 @getc(%struct._IO_FILE* noundef %0) #27
  %6 = icmp eq i32 %5, 35
  br i1 %6, label %7, label %9

7:                                                ; preds = %4, %7
  %8 = tail call i32 @getc(%struct._IO_FILE* noundef %0) #27
  switch i32 %8, label %7 [
    i32 -1, label %9
    i32 10, label %9
  ]

9:                                                ; preds = %7, %7, %4
  %10 = phi i32 [ %5, %4 ], [ %8, %7 ], [ %8, %7 ]
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %48, label %12

12:                                               ; preds = %9
  %13 = tail call i16** @__ctype_b_loc() #30
  %14 = load i16*, i16** %13, align 8, !tbaa !3
  %15 = sext i32 %10 to i64
  %16 = getelementptr inbounds i16, i16* %14, i64 %15
  %17 = load i16, i16* %16, align 2, !tbaa !96
  %18 = and i16 %17, 8192
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %4, !llvm.loop !132

20:                                               ; preds = %12
  %21 = and i16 %17, 2048
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %20
  %24 = add nsw i32 %10, -48
  %25 = sext i32 %24 to i64
  br label %26

26:                                               ; preds = %42, %23
  %27 = phi i64 [ %25, %23 ], [ %46, %42 ]
  %28 = tail call i32 @getc(%struct._IO_FILE* noundef %0) #27
  %29 = icmp eq i32 %28, 35
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %30
  %31 = tail call i32 @getc(%struct._IO_FILE* noundef %0) #27
  switch i32 %31, label %30 [
    i32 -1, label %32
    i32 10, label %32
  ]

32:                                               ; preds = %30, %30, %26
  %33 = phi i32 [ %28, %26 ], [ %31, %30 ], [ %31, %30 ]
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %47, label %35

35:                                               ; preds = %32
  %36 = load i16*, i16** %13, align 8, !tbaa !3
  %37 = sext i32 %33 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = load i16, i16* %38, align 2, !tbaa !96
  %40 = and i16 %39, 2048
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = mul nsw i64 %27, 10
  %44 = add nsw i32 %33, -48
  %45 = sext i32 %44 to i64
  %46 = add nsw i64 %43, %45
  br label %26, !llvm.loop !133

47:                                               ; preds = %35, %32
  store i64 %27, i64* %1, align 8, !tbaa !35
  br label %48

48:                                               ; preds = %9, %20, %47
  %49 = phi i32 [ %33, %47 ], [ %10, %20 ], [ -1, %9 ]
  %50 = phi i32 [ 1, %47 ], [ 0, %20 ], [ 0, %9 ]
  store i32 %49, i32* %2, align 4, !tbaa !32
  ret i32 %50
}

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() local_unnamed_addr #8

; Function Attrs: nounwind uwtable
define dso_local i32 @read_scan_script(%struct.jpeg_compress_struct* noundef %0, i8* noundef %1) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca [100 x %struct.jpeg_scan_info], align 16
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #27
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #27
  %8 = bitcast [100 x %struct.jpeg_scan_info]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3600, i8* nonnull %8) #27
  %9 = tail call noalias %struct._IO_FILE* @fopen(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.111, i64 0, i64 0))
  %10 = icmp eq %struct._IO_FILE* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %12, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.118, i64 0, i64 0), i8* noundef %1) #28
  br label %142

14:                                               ; preds = %2
  %15 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %121, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds [100 x %struct.jpeg_scan_info], [100 x %struct.jpeg_scan_info]* %5, i64 0, i64 0
  br label %19

19:                                               ; preds = %17, %113
  %20 = phi %struct.jpeg_scan_info* [ %114, %113 ], [ %18, %17 ]
  %21 = phi i32 [ %115, %113 ], [ 0, %17 ]
  %22 = icmp eq i32 %21, 100
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %24, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6.119, i64 0, i64 0), i8* noundef %1) #28
  %26 = tail call i32 @fclose(%struct._IO_FILE* noundef nonnull %9)
  br label %142

27:                                               ; preds = %19
  %28 = load i64, i64* %4, align 8, !tbaa !35
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 1, i64 0
  store i32 %29, i32* %30, align 4, !tbaa !32
  %31 = load i32, i32* %3, align 4, !tbaa !32
  %32 = icmp eq i32 %31, 32
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %109, label %40

36:                                               ; preds = %58
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %37, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7.120, i64 0, i64 0), i8* noundef %1) #28
  %39 = tail call i32 @fclose(%struct._IO_FILE* noundef nonnull %9)
  br label %142

40:                                               ; preds = %33
  %41 = load i64, i64* %4, align 8, !tbaa !35
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 1, i64 1
  store i32 %42, i32* %43, align 4, !tbaa !32
  %44 = load i32, i32* %3, align 4, !tbaa !32
  %45 = icmp eq i32 %44, 32
  br i1 %45, label %46, label %64, !llvm.loop !134

46:                                               ; preds = %40
  %47 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %109, label %49

49:                                               ; preds = %46
  %50 = load i64, i64* %4, align 8, !tbaa !35
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 1, i64 2
  store i32 %51, i32* %52, align 4, !tbaa !32
  %53 = load i32, i32* %3, align 4, !tbaa !32
  %54 = icmp eq i32 %53, 32
  br i1 %54, label %55, label %64, !llvm.loop !134

55:                                               ; preds = %49
  %56 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %109, label %58

58:                                               ; preds = %55
  %59 = load i64, i64* %4, align 8, !tbaa !35
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 1, i64 3
  store i32 %60, i32* %61, align 4, !tbaa !32
  %62 = load i32, i32* %3, align 4, !tbaa !32
  %63 = icmp eq i32 %62, 32
  br i1 %63, label %36, label %64, !llvm.loop !134

64:                                               ; preds = %40, %49, %58, %27
  %65 = phi i32 [ %31, %27 ], [ %44, %40 ], [ %53, %49 ], [ %62, %58 ]
  %66 = phi i32 [ 1, %27 ], [ 2, %40 ], [ 3, %49 ], [ 4, %58 ]
  %67 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 0
  store i32 %66, i32* %67, align 4, !tbaa !135
  %68 = icmp eq i32 %65, 58
  br i1 %68, label %69, label %104

69:                                               ; preds = %64
  %70 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %71 = icmp eq i32 %70, 0
  %72 = load i32, i32* %3, align 4
  %73 = icmp ne i32 %72, 32
  %74 = select i1 %71, i1 true, i1 %73
  br i1 %74, label %109, label %75

75:                                               ; preds = %69
  %76 = load i64, i64* %4, align 8, !tbaa !35
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 2
  store i32 %77, i32* %78, align 4, !tbaa !137
  %79 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %80 = icmp eq i32 %79, 0
  %81 = load i32, i32* %3, align 4
  %82 = icmp ne i32 %81, 32
  %83 = select i1 %80, i1 true, i1 %82
  br i1 %83, label %109, label %84

84:                                               ; preds = %75
  %85 = load i64, i64* %4, align 8, !tbaa !35
  %86 = trunc i64 %85 to i32
  %87 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 3
  store i32 %86, i32* %87, align 4, !tbaa !138
  %88 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %89 = icmp eq i32 %88, 0
  %90 = load i32, i32* %3, align 4
  %91 = icmp ne i32 %90, 32
  %92 = select i1 %89, i1 true, i1 %91
  br i1 %92, label %109, label %93

93:                                               ; preds = %84
  %94 = load i64, i64* %4, align 8, !tbaa !35
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 4
  store i32 %95, i32* %96, align 4, !tbaa !139
  %97 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %109, label %99

99:                                               ; preds = %93
  %100 = load i64, i64* %4, align 8, !tbaa !35
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 5
  store i32 %101, i32* %102, align 4, !tbaa !140
  %103 = load i32, i32* %3, align 4, !tbaa !32
  br label %107

104:                                              ; preds = %64
  %105 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 0, i32 2
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> <i32 0, i32 63, i32 0, i32 0>, <4 x i32>* %106, align 4, !tbaa !32
  br label %107

107:                                              ; preds = %104, %99
  %108 = phi i32 [ %65, %104 ], [ %103, %99 ]
  switch i32 %108, label %109 [
    i32 -1, label %113
    i32 59, label %113
  ]

109:                                              ; preds = %107, %93, %84, %75, %69, %33, %46, %55
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %111 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %110, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.121, i64 0, i64 0), i8* noundef %1) #28
  %112 = tail call i32 @fclose(%struct._IO_FILE* noundef nonnull %9)
  br label %142

113:                                              ; preds = %107, %107
  %114 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %20, i64 1
  %115 = add nuw nsw i32 %21, 1
  %116 = call fastcc i32 @read_scan_integer(%struct._IO_FILE* noundef nonnull %9, i64* noundef nonnull %4, i32* noundef nonnull %3)
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %19, !llvm.loop !141

118:                                              ; preds = %113
  %119 = load i32, i32* %3, align 4, !tbaa !32
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %128, label %124

121:                                              ; preds = %14
  %122 = load i32, i32* %3, align 4, !tbaa !32
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %118
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %126 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %125, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.115, i64 0, i64 0), i8* noundef %1) #28
  %127 = tail call i32 @fclose(%struct._IO_FILE* noundef nonnull %9)
  br label %142

128:                                              ; preds = %118
  %129 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %130 = bitcast %struct.jpeg_memory_mgr** %129 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %131 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %130, align 8, !tbaa !36
  %132 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %131, align 8, !tbaa !44
  %133 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %134 = zext i32 %115 to i64
  %135 = mul nuw nsw i64 %134, 36
  %136 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %132(%struct.jpeg_common_struct* noundef %133, i32 noundef 1, i64 noundef %135) #27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %136, i8* noundef nonnull align 16 %8, i64 %135, i1 false)
  %137 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %138 = bitcast %struct.jpeg_scan_info** %137 to i8**
  store i8* %136, i8** %138, align 8, !tbaa !142
  %139 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  store i32 %115, i32* %139, align 8, !tbaa !143
  br label %140

140:                                              ; preds = %121, %128
  %141 = tail call i32 @fclose(%struct._IO_FILE* noundef nonnull %9)
  br label %142

142:                                              ; preds = %140, %124, %109, %36, %23, %11
  %143 = phi i32 [ 0, %11 ], [ 0, %23 ], [ 0, %36 ], [ 0, %109 ], [ 0, %124 ], [ 1, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 3600, i8* nonnull %8) #27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #27
  ret i32 %143
}

; Function Attrs: nofree nounwind uwtable
define internal fastcc i32 @read_scan_integer(%struct._IO_FILE* nocapture noundef %0, i64* nocapture noundef writeonly %1, i32* nocapture noundef %2) unnamed_addr #7 {
  %4 = tail call fastcc i32 @read_text_integer(%struct._IO_FILE* noundef %0, i64* noundef %1, i32* noundef %2)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %45, label %6

6:                                                ; preds = %3
  %7 = load i32, i32* %2, align 4, !tbaa !32
  %8 = icmp eq i32 %7, -1
  %9 = tail call i16** @__ctype_b_loc() #30
  br i1 %8, label %26, label %10

10:                                               ; preds = %6, %23
  %11 = phi i32 [ %24, %23 ], [ %7, %6 ]
  %12 = load i16*, i16** %9, align 8, !tbaa !3
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds i16, i16* %12, i64 %13
  %15 = load i16, i16* %14, align 2, !tbaa !96
  %16 = and i16 %15, 8192
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %10
  %19 = tail call i32 @getc(%struct._IO_FILE* noundef %0) #27
  %20 = icmp eq i32 %19, 35
  br i1 %20, label %21, label %23

21:                                               ; preds = %18, %21
  %22 = tail call i32 @getc(%struct._IO_FILE* noundef %0) #27
  switch i32 %22, label %21 [
    i32 -1, label %23
    i32 10, label %23
  ]

23:                                               ; preds = %21, %21, %18
  %24 = phi i32 [ %19, %18 ], [ %22, %21 ], [ %22, %21 ]
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %10, !llvm.loop !144

26:                                               ; preds = %10, %23, %6
  %27 = phi i32 [ -1, %6 ], [ -1, %23 ], [ %11, %10 ]
  %28 = phi i1 [ false, %6 ], [ %17, %23 ], [ true, %10 ]
  %29 = load i16*, i16** %9, align 8, !tbaa !3
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds i16, i16* %29, i64 %30
  %32 = load i16, i16* %31, align 2, !tbaa !96
  %33 = and i16 %32, 2048
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = tail call i32 @ungetc(i32 noundef %27, %struct._IO_FILE* noundef %0)
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %45, label %43

38:                                               ; preds = %26
  %39 = and i32 %27, -2
  %40 = icmp ne i32 %39, 58
  %41 = and i1 %28, %40
  %42 = select i1 %41, i32 32, i32 %27
  br label %43

43:                                               ; preds = %35, %38
  %44 = phi i32 [ %42, %38 ], [ 32, %35 ]
  store i32 %44, i32* %2, align 4, !tbaa !32
  br label %45

45:                                               ; preds = %35, %3, %43
  %46 = phi i32 [ 1, %43 ], [ 0, %3 ], [ 0, %35 ]
  ret i32 %46
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @set_quant_slots(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #27
  store i32 0, i32* %3, align 4, !tbaa !32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #27
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  br label %7

7:                                                ; preds = %2, %38
  %8 = phi i64 [ 0, %2 ], [ %40, %38 ]
  %9 = phi i8* [ %1, %2 ], [ %39, %38 ]
  %10 = load i8, i8* %9, align 1, !tbaa !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %7
  store i8 44, i8* %4, align 1, !tbaa !7
  %13 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef nonnull %9, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.124, i64 0, i64 0), i32* noundef nonnull %3, i8* noundef nonnull %4) #27
  %14 = icmp sgt i32 %13, 0
  %15 = load i8, i8* %4, align 1
  %16 = icmp eq i8 %15, 44
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %42

18:                                               ; preds = %12
  %19 = load i32, i32* %3, align 4, !tbaa !32
  %20 = icmp ugt i32 %19, 3
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %22, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.125, i64 0, i64 0), i32 noundef 3) #28
  br label %42

24:                                               ; preds = %18
  %25 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8, !tbaa !145
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 %8, i32 4
  store i32 %19, i32* %26, align 8, !tbaa !146
  br label %27

27:                                               ; preds = %31, %24
  %28 = phi i8* [ %9, %24 ], [ %32, %31 ]
  %29 = load i8, i8* %28, align 1, !tbaa !7
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %28, i64 1
  %33 = icmp eq i8 %29, 44
  br i1 %33, label %38, label %27, !llvm.loop !148

34:                                               ; preds = %7
  %35 = load i32, i32* %3, align 4, !tbaa !32
  %36 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8, !tbaa !145
  %37 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %36, i64 %8, i32 4
  store i32 %35, i32* %37, align 8, !tbaa !146
  br label %38

38:                                               ; preds = %27, %31, %34
  %39 = phi i8* [ %9, %34 ], [ %28, %27 ], [ %32, %31 ]
  %40 = add nuw nsw i64 %8, 1
  %41 = icmp eq i64 %40, 10
  br i1 %41, label %42, label %7, !llvm.loop !149

42:                                               ; preds = %38, %12, %21
  %43 = phi i32 [ 0, %21 ], [ 1, %38 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #27
  ret i32 %43
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @set_sample_factors(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #27
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #27
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #27
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #27
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  br label %10

10:                                               ; preds = %2, %53
  %11 = phi i64 [ 0, %2 ], [ %55, %53 ]
  %12 = phi i8* [ %1, %2 ], [ %54, %53 ]
  %13 = load i8, i8* %12, align 1, !tbaa !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %10
  store i8 44, i8* %6, align 1, !tbaa !7
  %16 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef nonnull %12, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.128, i64 0, i64 0), i32* noundef nonnull %3, i8* noundef nonnull %5, i32* noundef nonnull %4, i8* noundef nonnull %6) #27
  %17 = icmp slt i32 %16, 3
  br i1 %17, label %57, label %18

18:                                               ; preds = %15
  %19 = load i8, i8* %5, align 1, !tbaa !7
  %20 = and i8 %19, -33
  %21 = icmp ne i8 %20, 88
  %22 = load i8, i8* %6, align 1
  %23 = icmp ne i8 %22, 44
  %24 = select i1 %21, i1 true, i1 %23
  br i1 %24, label %57, label %25

25:                                               ; preds = %18
  %26 = load i32, i32* %3, align 4, !tbaa !32
  %27 = add i32 %26, -5
  %28 = icmp ult i32 %27, -4
  %29 = load i32, i32* %4, align 4
  %30 = icmp slt i32 %29, 1
  %31 = select i1 %28, i1 true, i1 %30
  %32 = icmp sgt i32 %29, 4
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %36 = call i64 @fwrite(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12.129, i64 0, i64 0), i64 35, i64 1, %struct._IO_FILE* %35) #28
  br label %57

37:                                               ; preds = %25
  %38 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8, !tbaa !145
  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 %11, i32 2
  store i32 %26, i32* %39, align 8, !tbaa !150
  %40 = load i32, i32* %4, align 4, !tbaa !32
  %41 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 %11, i32 3
  store i32 %40, i32* %41, align 4, !tbaa !151
  br label %42

42:                                               ; preds = %46, %37
  %43 = phi i8* [ %12, %37 ], [ %47, %46 ]
  %44 = load i8, i8* %43, align 1, !tbaa !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds i8, i8* %43, i64 1
  %48 = icmp eq i8 %44, 44
  br i1 %48, label %53, label %42, !llvm.loop !152

49:                                               ; preds = %10
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8, !tbaa !145
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i64 %11, i32 2
  store i32 1, i32* %51, align 8, !tbaa !150
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i64 %11, i32 3
  store i32 1, i32* %52, align 4, !tbaa !151
  br label %53

53:                                               ; preds = %42, %46, %49
  %54 = phi i8* [ %12, %49 ], [ %43, %42 ], [ %47, %46 ]
  %55 = add nuw nsw i64 %11, 1
  %56 = icmp eq i64 %55, 10
  br i1 %56, label %57, label %10, !llvm.loop !153

57:                                               ; preds = %53, %18, %15, %34
  %58 = phi i32 [ 0, %34 ], [ 1, %53 ], [ 0, %18 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #27
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #27
  ret i32 %58
}

; Function Attrs: nofree nosync nounwind readonly uwtable
define dso_local i32 @keymatch(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #10 {
  %4 = load i8, i8* %0, align 1, !tbaa !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %3, %33
  %7 = phi i8 [ %35, %33 ], [ %4, %3 ]
  %8 = phi i8* [ %11, %33 ], [ %0, %3 ]
  %9 = phi i32 [ %34, %33 ], [ 0, %3 ]
  %10 = phi i8* [ %12, %33 ], [ %1, %3 ]
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  %12 = getelementptr inbounds i8, i8* %10, i64 1
  %13 = load i8, i8* %10, align 1, !tbaa !7
  %14 = sext i8 %13 to i32
  %15 = icmp eq i8 %13, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %6
  %17 = sext i8 %7 to i32
  %18 = tail call i16** @__ctype_b_loc() #30
  %19 = load i16*, i16** %18, align 8, !tbaa !3
  %20 = sext i8 %7 to i64
  %21 = getelementptr inbounds i16, i16* %19, i64 %20
  %22 = load i16, i16* %21, align 2, !tbaa !96
  %23 = and i16 %22, 256
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %16
  %26 = tail call i32** @__ctype_tolower_loc() #30
  %27 = load i32*, i32** %26, align 8, !tbaa !3
  %28 = getelementptr inbounds i32, i32* %27, i64 %20
  %29 = load i32, i32* %28, align 4, !tbaa !32
  br label %30

30:                                               ; preds = %25, %16
  %31 = phi i32 [ %17, %16 ], [ %29, %25 ]
  %32 = icmp eq i32 %31, %14
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = add nuw nsw i32 %9, 1
  %35 = load i8, i8* %11, align 1, !tbaa !7
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %6, !llvm.loop !154

37:                                               ; preds = %33, %3
  %38 = phi i32 [ 0, %3 ], [ %34, %33 ]
  %39 = icmp sge i32 %38, %2
  %40 = zext i1 %39 to i32
  br label %41

41:                                               ; preds = %30, %6, %37
  %42 = phi i32 [ %40, %37 ], [ 0, %6 ], [ 0, %30 ]
  ret i32 %42
}

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #8

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local %struct._IO_FILE* @read_stdin() local_unnamed_addr #11 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  ret %struct._IO_FILE* %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local %struct._IO_FILE* @write_stdout() local_unnamed_addr #11 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !3
  ret %struct._IO_FILE* %1
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_CreateCompress(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i64 noundef %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %4, align 8, !tbaa !36
  %5 = icmp eq i32 %1, 62
  br i1 %5, label %17, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 12, i32* %9, align 8, !tbaa !19
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0
  store i32 62, i32* %10, align 4, !tbaa !7
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8, !tbaa !8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 1
  store i32 %1, i32* %12, align 4, !tbaa !7
  %13 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %14 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %13, align 8, !tbaa !8
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef %16) #27
  br label %17

17:                                               ; preds = %6, %3
  %18 = icmp eq i64 %2, 576
  br i1 %18, label %31, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8, !tbaa !8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 5
  store i32 21, i32* %22, align 8, !tbaa !19
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 6, i32 0, i64 0
  store i32 576, i32* %23, align 4, !tbaa !7
  %24 = trunc i64 %2 to i32
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8, !tbaa !8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 1
  store i32 %24, i32* %26, align 4, !tbaa !7
  %27 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %28 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %27, align 8, !tbaa !8
  %29 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %28, align 8, !tbaa !20
  %30 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %29(%struct.jpeg_common_struct* noundef %30) #27
  br label %31

31:                                               ; preds = %17, %19
  %32 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8, !tbaa !155
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %38 = bitcast %struct.jpeg_memory_mgr** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(576) %38, i8 0, i64 568, i1 false)
  store %struct.jpeg_error_mgr* %34, %struct.jpeg_error_mgr** %33, align 8, !tbaa !8
  store i8* %36, i8** %35, align 8, !tbaa !155
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jinit_memory_mgr to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %32) #27
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  store %struct.jpeg_progress_mgr* null, %struct.jpeg_progress_mgr** %39, align 8, !tbaa !83
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  store %struct.jpeg_destination_mgr* null, %struct.jpeg_destination_mgr** %40, align 8, !tbaa !156
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 63
  store %struct.jpeg_scan_info* null, %struct.jpeg_scan_info** %42, align 8, !tbaa !157
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 11
  %44 = bitcast %struct.jpeg_component_info** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %44, i8 0, i64 104, i1 false)
  store double 1.000000e+00, double* %43, align 8, !tbaa !158
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  store i32 100, i32* %45, align 4, !tbaa !159
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_destroy_compress(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jpeg_destroy to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %2) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_abort_compress(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jpeg_abort to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %2) #27
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define dso_local void @jpeg_suppress_tables(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 0
  %4 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %3, align 8, !tbaa !3
  %5 = icmp eq %struct.JQUANT_TBL* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %4, i64 0, i32 1
  store i32 %1, i32* %7, align 4, !tbaa !160
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 1
  %10 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8, !tbaa !3
  %11 = icmp eq %struct.JQUANT_TBL* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10, i64 0, i32 1
  store i32 %1, i32* %13, align 4, !tbaa !160
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 2
  %16 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %15, align 8, !tbaa !3
  %17 = icmp eq %struct.JQUANT_TBL* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %16, i64 0, i32 1
  store i32 %1, i32* %19, align 4, !tbaa !160
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 3
  %22 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %21, align 8, !tbaa !3
  %23 = icmp eq %struct.JQUANT_TBL* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %22, i64 0, i32 1
  store i32 %1, i32* %25, align 4, !tbaa !160
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 0
  %28 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %27, align 8, !tbaa !3
  %29 = icmp eq %struct.JHUFF_TBL* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %28, i64 0, i32 2
  store i32 %1, i32* %31, align 4, !tbaa !162
  br label %32

32:                                               ; preds = %30, %26
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 0
  %34 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %33, align 8, !tbaa !3
  %35 = icmp eq %struct.JHUFF_TBL* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %34, i64 0, i32 2
  store i32 %1, i32* %37, align 4, !tbaa !162
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 1
  %40 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %39, align 8, !tbaa !3
  %41 = icmp eq %struct.JHUFF_TBL* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %40, i64 0, i32 2
  store i32 %1, i32* %43, align 4, !tbaa !162
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 1
  %46 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %45, align 8, !tbaa !3
  %47 = icmp eq %struct.JHUFF_TBL* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %46, i64 0, i32 2
  store i32 %1, i32* %49, align 4, !tbaa !162
  br label %50

50:                                               ; preds = %48, %44
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 2
  %52 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %51, align 8, !tbaa !3
  %53 = icmp eq %struct.JHUFF_TBL* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %52, i64 0, i32 2
  store i32 %1, i32* %55, align 4, !tbaa !162
  br label %56

56:                                               ; preds = %54, %50
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 2
  %58 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %57, align 8, !tbaa !3
  %59 = icmp eq %struct.JHUFF_TBL* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %58, i64 0, i32 2
  store i32 %1, i32* %61, align 4, !tbaa !162
  br label %62

62:                                               ; preds = %60, %56
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 3
  %64 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %63, align 8, !tbaa !3
  %65 = icmp eq %struct.JHUFF_TBL* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %64, i64 0, i32 2
  store i32 %1, i32* %67, align 4, !tbaa !162
  br label %68

68:                                               ; preds = %66, %62
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 3
  %70 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %69, align 8, !tbaa !3
  %71 = icmp eq %struct.JHUFF_TBL* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %70, i64 0, i32 2
  store i32 %1, i32* %73, align 4, !tbaa !162
  br label %74

74:                                               ; preds = %72, %68
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_finish_compress(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4, !tbaa !159
  switch i32 %3, label %23 [
    i32 101, label %4
    i32 102, label %4
    i32 103, label %32
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %6 = load i32, i32* %5, align 8, !tbaa !24
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4, !tbaa !25
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 67, i32* %13, align 8, !tbaa !19
  %14 = bitcast %struct.jpeg_error_mgr* %12 to void (%struct.jpeg_common_struct*, ...)**
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef %16) #27
  br label %17

17:                                               ; preds = %10, %4
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %19 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %18, align 8, !tbaa !164
  %20 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %19, i64 0, i32 2
  %21 = bitcast void (...)** %20 to void (%struct.jpeg_compress_struct*, ...)**
  %22 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %21, align 8, !tbaa !165
  tail call void (%struct.jpeg_compress_struct*, ...) %22(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  br label %32

23:                                               ; preds = %1
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8, !tbaa !8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 5
  store i32 20, i32* %26, align 8, !tbaa !19
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0
  store i32 %3, i32* %27, align 4, !tbaa !7
  %28 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %29 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %28, align 8, !tbaa !8
  %30 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %29, align 8, !tbaa !20
  %31 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %30(%struct.jpeg_common_struct* noundef %31) #27
  br label %32

32:                                               ; preds = %1, %23, %17
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %34 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %33, align 8, !tbaa !164
  %35 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %34, i64 0, i32 4
  %36 = load i32, i32* %35, align 4, !tbaa !167
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %87

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %41 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %44

44:                                               ; preds = %38, %78
  %45 = phi %struct.jpeg_comp_master* [ %34, %38 ], [ %83, %78 ]
  %46 = bitcast %struct.jpeg_comp_master* %45 to void (%struct.jpeg_compress_struct*, ...)**
  %47 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %46, align 8, !tbaa !168
  tail call void (%struct.jpeg_compress_struct*, ...) %47(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %48 = load i32, i32* %39, align 8, !tbaa !169
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %78, label %50

50:                                               ; preds = %44, %73
  %51 = phi i64 [ %74, %73 ], [ 0, %44 ]
  %52 = phi i32 [ %75, %73 ], [ %48, %44 ]
  %53 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %40, align 8, !tbaa !83
  %54 = icmp eq %struct.jpeg_progress_mgr* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %53, i64 0, i32 1
  store i64 %51, i64* %56, align 8, !tbaa !170
  %57 = zext i32 %52 to i64
  %58 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %53, i64 0, i32 2
  store i64 %57, i64* %58, align 8, !tbaa !171
  %59 = bitcast %struct.jpeg_progress_mgr* %53 to void (%struct.jpeg_common_struct*, ...)**
  %60 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %59, align 8, !tbaa !172
  tail call void (%struct.jpeg_common_struct*, ...) %60(%struct.jpeg_common_struct* noundef nonnull %41) #27
  br label %61

61:                                               ; preds = %55, %50
  %62 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %42, align 8, !tbaa !173
  %63 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %62, i64 0, i32 1
  %64 = bitcast i32 (...)** %63 to i32 (%struct.jpeg_compress_struct*, i8***, ...)**
  %65 = load i32 (%struct.jpeg_compress_struct*, i8***, ...)*, i32 (%struct.jpeg_compress_struct*, i8***, ...)** %64, align 8, !tbaa !174
  %66 = tail call i32 (%struct.jpeg_compress_struct*, i8***, ...) %65(%struct.jpeg_compress_struct* noundef nonnull %0, i8*** noundef null) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %61
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8, !tbaa !8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 5
  store i32 24, i32* %70, align 8, !tbaa !19
  %71 = bitcast %struct.jpeg_error_mgr* %69 to void (%struct.jpeg_common_struct*, ...)**
  %72 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %71, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %72(%struct.jpeg_common_struct* noundef nonnull %41) #27
  br label %73

73:                                               ; preds = %61, %68
  %74 = add nuw nsw i64 %51, 1
  %75 = load i32, i32* %39, align 8, !tbaa !169
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %50, label %78, !llvm.loop !176

78:                                               ; preds = %73, %44
  %79 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %33, align 8, !tbaa !164
  %80 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %79, i64 0, i32 2
  %81 = bitcast void (...)** %80 to void (%struct.jpeg_compress_struct*, ...)**
  %82 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %81, align 8, !tbaa !165
  tail call void (%struct.jpeg_compress_struct*, ...) %82(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %83 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %33, align 8, !tbaa !164
  %84 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %83, i64 0, i32 4
  %85 = load i32, i32* %84, align 4, !tbaa !167
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %44, label %87, !llvm.loop !177

87:                                               ; preds = %78, %32
  %88 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %89 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %90 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %89, align 8, !tbaa !178
  %91 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %90, i64 0, i32 3
  %92 = bitcast void (...)** %91 to void (%struct.jpeg_compress_struct*, ...)**
  %93 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %92, align 8, !tbaa !179
  tail call void (%struct.jpeg_compress_struct*, ...) %93(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %94 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %95 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %94, align 8, !tbaa !156
  %96 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %95, i64 0, i32 4
  %97 = bitcast void (...)** %96 to void (%struct.jpeg_compress_struct*, ...)**
  %98 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %97, align 8, !tbaa !181
  tail call void (%struct.jpeg_compress_struct*, ...) %98(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jpeg_abort to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %88) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_write_marker(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i8* nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %6 = load i32, i32* %5, align 8, !tbaa !24
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4, !tbaa !159
  %10 = add i32 %9, -101
  %11 = icmp ult i32 %10, 3
  %12 = select i1 %7, i1 %11, i1 false
  br i1 %12, label %22, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8, !tbaa !8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 5
  store i32 20, i32* %16, align 8, !tbaa !19
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 6, i32 0, i64 0
  store i32 %9, i32* %17, align 4, !tbaa !7
  %18 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %19 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %18, align 8, !tbaa !8
  %20 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %19, align 8, !tbaa !20
  %21 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %20(%struct.jpeg_common_struct* noundef %21) #27
  br label %22

22:                                               ; preds = %4, %13
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %24 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %23, align 8, !tbaa !178
  %25 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %24, i64 0, i32 5
  %26 = bitcast void (...)** %25 to void (%struct.jpeg_compress_struct*, i32, i32, ...)**
  %27 = load void (%struct.jpeg_compress_struct*, i32, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, i32, ...)** %26, align 8, !tbaa !183
  tail call void (%struct.jpeg_compress_struct*, i32, i32, ...) %27(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %1, i32 noundef %3) #27
  %28 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %23, align 8, !tbaa !178
  %29 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %28, i64 0, i32 6
  %30 = bitcast void (...)** %29 to void (%struct.jpeg_compress_struct*, i32, ...)**
  %31 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %30, align 8, !tbaa !184
  %32 = icmp eq i32 %3, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %22, %33
  %34 = phi i8* [ %39, %33 ], [ %2, %22 ]
  %35 = phi i32 [ %36, %33 ], [ %3, %22 ]
  %36 = add i32 %35, -1
  %37 = load i8, i8* %34, align 1, !tbaa !7
  %38 = sext i8 %37 to i32
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %31(%struct.jpeg_compress_struct* noundef %0, i32 noundef %38) #27
  %39 = getelementptr inbounds i8, i8* %34, i64 1
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %41, label %33, !llvm.loop !185

41:                                               ; preds = %33, %22
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_write_m_header(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %5 = load i32, i32* %4, align 8, !tbaa !24
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4, !tbaa !159
  %9 = add i32 %8, -101
  %10 = icmp ult i32 %9, 3
  %11 = select i1 %6, i1 %10, i1 false
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 5
  store i32 20, i32* %15, align 8, !tbaa !19
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 6, i32 0, i64 0
  store i32 %8, i32* %16, align 4, !tbaa !7
  %17 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %18 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %17, align 8, !tbaa !8
  %19 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %18, align 8, !tbaa !20
  %20 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %19(%struct.jpeg_common_struct* noundef %20) #27
  br label %21

21:                                               ; preds = %3, %12
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %23 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %22, align 8, !tbaa !178
  %24 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %23, i64 0, i32 5
  %25 = bitcast void (...)** %24 to void (%struct.jpeg_compress_struct*, i32, i32, ...)**
  %26 = load void (%struct.jpeg_compress_struct*, i32, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, i32, ...)** %25, align 8, !tbaa !183
  tail call void (%struct.jpeg_compress_struct*, i32, i32, ...) %26(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %1, i32 noundef %2) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_write_m_byte(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %4 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %3, align 8, !tbaa !178
  %5 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %4, i64 0, i32 6
  %6 = bitcast void (...)** %5 to void (%struct.jpeg_compress_struct*, i32, ...)**
  %7 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %6, align 8, !tbaa !184
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %7(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_write_tables(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4, !tbaa !159
  %4 = icmp eq i32 %3, 100
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 5
  store i32 20, i32* %8, align 8, !tbaa !19
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 6, i32 0, i64 0
  store i32 %3, i32* %9, align 4, !tbaa !7
  %10 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %11 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %10, align 8, !tbaa !8
  %12 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %11, align 8, !tbaa !20
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %12(%struct.jpeg_common_struct* noundef %13) #27
  br label %14

14:                                               ; preds = %1, %5
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %17 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %16, align 8, !tbaa !8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %17, i64 0, i32 4
  %19 = bitcast void (...)** %18 to void (%struct.jpeg_common_struct*, ...)**
  %20 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %19, align 8, !tbaa !186
  tail call void (%struct.jpeg_common_struct*, ...) %20(%struct.jpeg_common_struct* noundef %15) #27
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %22 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %21, align 8, !tbaa !156
  %23 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %22, i64 0, i32 2
  %24 = bitcast void (...)** %23 to void (%struct.jpeg_compress_struct*, ...)**
  %25 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %24, align 8, !tbaa !187
  tail call void (%struct.jpeg_compress_struct*, ...) %25(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_marker_writer to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %27 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %26, align 8, !tbaa !178
  %28 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %27, i64 0, i32 4
  %29 = bitcast void (...)** %28 to void (%struct.jpeg_compress_struct*, ...)**
  %30 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %29, align 8, !tbaa !188
  tail call void (%struct.jpeg_compress_struct*, ...) %30(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %31 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %21, align 8, !tbaa !156
  %32 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %31, i64 0, i32 4
  %33 = bitcast void (...)** %32 to void (%struct.jpeg_compress_struct*, ...)**
  %34 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %33, align 8, !tbaa !181
  tail call void (%struct.jpeg_compress_struct*, ...) %34(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_start_compress(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !159
  %5 = icmp eq i32 %4, 100
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 20, i32* %9, align 8, !tbaa !19
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0
  store i32 %4, i32* %10, align 4, !tbaa !7
  %11 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %12 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %11, align 8, !tbaa !8
  %13 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %12, align 8, !tbaa !20
  %14 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %13(%struct.jpeg_common_struct* noundef %14) #27
  br label %15

15:                                               ; preds = %6, %2
  %16 = icmp eq i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  tail call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jpeg_suppress_tables to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0) #27
  br label %18

18:                                               ; preds = %17, %15
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8, !tbaa !8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 4
  %22 = bitcast void (...)** %21 to void (%struct.jpeg_common_struct*, ...)**
  %23 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %22, align 8, !tbaa !186
  %24 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %23(%struct.jpeg_common_struct* noundef %24) #27
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %26 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %25, align 8, !tbaa !156
  %27 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 2
  %28 = bitcast void (...)** %27 to void (%struct.jpeg_compress_struct*, ...)**
  %29 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %28, align 8, !tbaa !187
  tail call void (%struct.jpeg_compress_struct*, ...) %29(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_compress_master to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %31 = bitcast %struct.jpeg_comp_master** %30 to void (%struct.jpeg_compress_struct*, ...)***
  %32 = load void (%struct.jpeg_compress_struct*, ...)**, void (%struct.jpeg_compress_struct*, ...)*** %31, align 8, !tbaa !164
  %33 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %32, align 8, !tbaa !168
  tail call void (%struct.jpeg_compress_struct*, ...) %33(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  store i32 0, i32* %34, align 8, !tbaa !24
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 24
  %36 = load i32, i32* %35, align 8, !tbaa !189
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, i32 101, i32 102
  store i32 %38, i32* %3, align 4, !tbaa !159
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @jpeg_write_scanlines(%struct.jpeg_compress_struct* noundef %0, i8** noundef %1, i32 noundef %2) local_unnamed_addr #2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #27
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4, !tbaa !159
  %8 = icmp eq i32 %7, 101
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8, !tbaa !8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 20, i32* %12, align 8, !tbaa !19
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 %7, i32* %13, align 4, !tbaa !7
  %14 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %15 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %14, align 8, !tbaa !8
  %16 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %15, align 8, !tbaa !20
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %16(%struct.jpeg_common_struct* noundef %17) #27
  br label %18

18:                                               ; preds = %9, %3
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %20 = load i32, i32* %19, align 8, !tbaa !24
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 4, !tbaa !25
  %23 = icmp ult i32 %20, %22
  br i1 %23, label %32, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8, !tbaa !8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 5
  store i32 123, i32* %27, align 8, !tbaa !19
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 1
  %29 = bitcast void (...)** %28 to void (%struct.jpeg_common_struct*, i32, ...)**
  %30 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %29, align 8, !tbaa !52
  %31 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %30(%struct.jpeg_common_struct* noundef %31, i32 noundef -1) #27
  br label %32

32:                                               ; preds = %24, %18
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %34 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %33, align 8, !tbaa !83
  %35 = icmp eq %struct.jpeg_progress_mgr* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %19, align 8, !tbaa !24
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %34, i64 0, i32 1
  store i64 %38, i64* %39, align 8, !tbaa !170
  %40 = load i32, i32* %21, align 4, !tbaa !25
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %34, i64 0, i32 2
  store i64 %41, i64* %42, align 8, !tbaa !171
  %43 = bitcast %struct.jpeg_progress_mgr* %34 to void (%struct.jpeg_common_struct*, ...)**
  %44 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %43, align 8, !tbaa !172
  %45 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %44(%struct.jpeg_common_struct* noundef %45) #27
  br label %46

46:                                               ; preds = %36, %32
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %48 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %47, align 8, !tbaa !164
  %49 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8, !tbaa !190
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %48, i64 0, i32 1
  %54 = bitcast void (...)** %53 to void (%struct.jpeg_compress_struct*, ...)**
  %55 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %54, align 8, !tbaa !191
  tail call void (%struct.jpeg_compress_struct*, ...) %55(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  br label %56

56:                                               ; preds = %52, %46
  %57 = load i32, i32* %21, align 4, !tbaa !25
  %58 = load i32, i32* %19, align 8, !tbaa !24
  %59 = sub i32 %57, %58
  %60 = icmp ult i32 %59, %2
  %61 = select i1 %60, i32 %59, i32 %2
  store i32 0, i32* %4, align 4, !tbaa !32
  %62 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 55
  %63 = load %struct.jpeg_c_main_controller*, %struct.jpeg_c_main_controller** %62, align 8, !tbaa !192
  %64 = getelementptr inbounds %struct.jpeg_c_main_controller, %struct.jpeg_c_main_controller* %63, i64 0, i32 1
  %65 = bitcast void (...)** %64 to void (%struct.jpeg_compress_struct*, i8**, i32*, i32, ...)**
  %66 = load void (%struct.jpeg_compress_struct*, i8**, i32*, i32, ...)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, ...)** %65, align 8, !tbaa !193
  call void (%struct.jpeg_compress_struct*, i8**, i32*, i32, ...) %66(%struct.jpeg_compress_struct* noundef nonnull %0, i8** noundef %1, i32* noundef nonnull %4, i32 noundef %61) #27
  %67 = load i32, i32* %4, align 4, !tbaa !32
  %68 = load i32, i32* %19, align 8, !tbaa !24
  %69 = add i32 %68, %67
  store i32 %69, i32* %19, align 8, !tbaa !24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #27
  ret i32 %67
}

; Function Attrs: nounwind uwtable
define dso_local i32 @jpeg_write_raw_data(%struct.jpeg_compress_struct* noundef %0, i8*** noundef %1, i32 noundef %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4, !tbaa !159
  %6 = icmp eq i32 %5, 102
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8, !tbaa !19
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %5, i32* %11, align 4, !tbaa !7
  %12 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %13 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %12, align 8, !tbaa !8
  %14 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %13, align 8, !tbaa !20
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %14(%struct.jpeg_common_struct* noundef %15) #27
  br label %16

16:                                               ; preds = %7, %3
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %18 = load i32, i32* %17, align 8, !tbaa !24
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 4, !tbaa !25
  %21 = icmp ult i32 %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 5
  store i32 123, i32* %25, align 8, !tbaa !19
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 1
  %27 = bitcast void (...)** %26 to void (%struct.jpeg_common_struct*, i32, ...)**
  %28 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %27, align 8, !tbaa !52
  %29 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %28(%struct.jpeg_common_struct* noundef %29, i32 noundef -1) #27
  br label %75

30:                                               ; preds = %16
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %32 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %31, align 8, !tbaa !83
  %33 = icmp eq %struct.jpeg_progress_mgr* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  %35 = zext i32 %18 to i64
  %36 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %32, i64 0, i32 1
  store i64 %35, i64* %36, align 8, !tbaa !170
  %37 = zext i32 %20 to i64
  %38 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %32, i64 0, i32 2
  store i64 %37, i64* %38, align 8, !tbaa !171
  %39 = bitcast %struct.jpeg_progress_mgr* %32 to void (%struct.jpeg_common_struct*, ...)**
  %40 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %39, align 8, !tbaa !172
  %41 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %40(%struct.jpeg_common_struct* noundef %41) #27
  br label %42

42:                                               ; preds = %34, %30
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %44 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %43, align 8, !tbaa !164
  %45 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 8, !tbaa !190
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %44, i64 0, i32 1
  %50 = bitcast void (...)** %49 to void (%struct.jpeg_compress_struct*, ...)**
  %51 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %50, align 8, !tbaa !191
  tail call void (%struct.jpeg_compress_struct*, ...) %51(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  br label %52

52:                                               ; preds = %48, %42
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %54 = load i32, i32* %53, align 4, !tbaa !195
  %55 = shl nsw i32 %54, 3
  %56 = icmp ugt i32 %55, %2
  br i1 %56, label %57, label %64

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %58, align 8, !tbaa !8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i64 0, i32 5
  store i32 23, i32* %60, align 8, !tbaa !19
  %61 = bitcast %struct.jpeg_error_mgr* %59 to void (%struct.jpeg_common_struct*, ...)**
  %62 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %61, align 8, !tbaa !20
  %63 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %62(%struct.jpeg_common_struct* noundef %63) #27
  br label %64

64:                                               ; preds = %57, %52
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %66 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %65, align 8, !tbaa !173
  %67 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %66, i64 0, i32 1
  %68 = bitcast i32 (...)** %67 to i32 (%struct.jpeg_compress_struct*, i8***, ...)**
  %69 = load i32 (%struct.jpeg_compress_struct*, i8***, ...)*, i32 (%struct.jpeg_compress_struct*, i8***, ...)** %68, align 8, !tbaa !174
  %70 = tail call i32 (%struct.jpeg_compress_struct*, i8***, ...) %69(%struct.jpeg_compress_struct* noundef nonnull %0, i8*** noundef %1) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = load i32, i32* %17, align 8, !tbaa !24
  %74 = add i32 %73, %55
  store i32 %74, i32* %17, align 8, !tbaa !24
  br label %75

75:                                               ; preds = %64, %72, %22
  %76 = phi i32 [ 0, %22 ], [ %55, %72 ], [ 0, %64 ]
  ret i32 %76
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_add_quant_table(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32* nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4, !tbaa !159
  %8 = icmp eq i32 %7, 100
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8, !tbaa !8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 20, i32* %12, align 8, !tbaa !19
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 %7, i32* %13, align 4, !tbaa !7
  %14 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %15 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %14, align 8, !tbaa !8
  %16 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %15, align 8, !tbaa !20
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %16(%struct.jpeg_common_struct* noundef %17) #27
  br label %18

18:                                               ; preds = %9, %5
  %19 = icmp ugt i32 %1, 3
  br i1 %19, label %20, label %29

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8, !tbaa !8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 31, i32* %23, align 8, !tbaa !19
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %24, align 4, !tbaa !7
  %25 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %26 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %25, align 8, !tbaa !8
  %27 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %26, align 8, !tbaa !20
  %28 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %27(%struct.jpeg_common_struct* noundef %28) #27
  br label %29

29:                                               ; preds = %18, %20
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 %30
  %32 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %31, align 8, !tbaa !3
  %33 = icmp eq %struct.JQUANT_TBL* %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %36 = tail call %struct.JQUANT_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JQUANT_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_quant_table to %struct.JQUANT_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %35) #27
  store %struct.JQUANT_TBL* %36, %struct.JQUANT_TBL** %31, align 8, !tbaa !3
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi %struct.JQUANT_TBL* [ %36, %34 ], [ %32, %29 ]
  %39 = sext i32 %3 to i64
  %40 = icmp ne i32 %4, 0
  br label %41

41:                                               ; preds = %37, %41
  %42 = phi i64 [ 0, %37 ], [ %58, %41 ]
  %43 = getelementptr inbounds i32, i32* %2, i64 %42
  %44 = load i32, i32* %43, align 4, !tbaa !32
  %45 = zext i32 %44 to i64
  %46 = mul nsw i64 %45, %39
  %47 = add nsw i64 %46, 50
  %48 = sdiv i64 %47, 100
  %49 = icmp sgt i64 %48, 1
  %50 = select i1 %49, i64 %48, i64 1
  %51 = icmp ult i64 %50, 32767
  %52 = select i1 %51, i64 %50, i64 32767
  %53 = icmp ugt i64 %52, 255
  %54 = select i1 %40, i1 %53, i1 false
  %55 = trunc i64 %52 to i32
  %56 = select i1 %54, i32 255, i32 %55
  %57 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %38, i64 0, i32 0, i64 %42
  store i32 %56, i32* %57, align 4, !tbaa !32
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, 64
  br i1 %59, label %60, label %41, !llvm.loop !196

60:                                               ; preds = %41
  %61 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %38, i64 0, i32 1
  store i32 0, i32* %61, align 4, !tbaa !160
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4, !tbaa !159
  %6 = icmp eq i32 %5, 100
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8, !tbaa !19
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %5, i32* %11, align 4, !tbaa !7
  %12 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %13 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %12, align 8, !tbaa !8
  %14 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %13, align 8, !tbaa !20
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %14(%struct.jpeg_common_struct* noundef %15) #27
  br label %16

16:                                               ; preds = %7, %3
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 0
  %18 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %17, align 8, !tbaa !3
  %19 = icmp eq %struct.JQUANT_TBL* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %22 = tail call %struct.JQUANT_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JQUANT_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_quant_table to %struct.JQUANT_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %21) #27
  store %struct.JQUANT_TBL* %22, %struct.JQUANT_TBL** %17, align 8, !tbaa !3
  br label %23

23:                                               ; preds = %20, %16
  %24 = phi %struct.JQUANT_TBL* [ %22, %20 ], [ %18, %16 ]
  %25 = sext i32 %1 to i64
  %26 = icmp ne i32 %2, 0
  br label %27

27:                                               ; preds = %27, %23
  %28 = phi i64 [ 0, %23 ], [ %44, %27 ]
  %29 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4, !tbaa !32
  %31 = zext i32 %30 to i64
  %32 = mul nsw i64 %31, %25
  %33 = add nsw i64 %32, 50
  %34 = sdiv i64 %33, 100
  %35 = icmp sgt i64 %34, 1
  %36 = select i1 %35, i64 %34, i64 1
  %37 = icmp ult i64 %36, 32767
  %38 = select i1 %37, i64 %36, i64 32767
  %39 = icmp ugt i64 %38, 255
  %40 = select i1 %26, i1 %39, i1 false
  %41 = trunc i64 %38 to i32
  %42 = select i1 %40, i32 255, i32 %41
  %43 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %24, i64 0, i32 0, i64 %28
  store i32 %42, i32* %43, align 4, !tbaa !32
  %44 = add nuw nsw i64 %28, 1
  %45 = icmp eq i64 %44, 64
  br i1 %45, label %46, label %27, !llvm.loop !196

46:                                               ; preds = %27
  %47 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %24, i64 0, i32 1
  store i32 0, i32* %47, align 4, !tbaa !160
  %48 = load i32, i32* %4, align 4, !tbaa !159
  %49 = icmp eq i32 %48, 100
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 5
  store i32 20, i32* %53, align 8, !tbaa !19
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 6, i32 0, i64 0
  store i32 %48, i32* %54, align 4, !tbaa !7
  %55 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %56 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %55, align 8, !tbaa !8
  %57 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %56, align 8, !tbaa !20
  %58 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %57(%struct.jpeg_common_struct* noundef %58) #27
  br label %59

59:                                               ; preds = %50, %46
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 1
  %61 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %60, align 8, !tbaa !3
  %62 = icmp eq %struct.JQUANT_TBL* %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %65 = tail call %struct.JQUANT_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JQUANT_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_quant_table to %struct.JQUANT_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %64) #27
  store %struct.JQUANT_TBL* %65, %struct.JQUANT_TBL** %60, align 8, !tbaa !3
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi %struct.JQUANT_TBL* [ %65, %63 ], [ %61, %59 ]
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %85, %68 ]
  %70 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %69
  %71 = load i32, i32* %70, align 4, !tbaa !32
  %72 = zext i32 %71 to i64
  %73 = mul nsw i64 %72, %25
  %74 = add nsw i64 %73, 50
  %75 = sdiv i64 %74, 100
  %76 = icmp sgt i64 %75, 1
  %77 = select i1 %76, i64 %75, i64 1
  %78 = icmp ult i64 %77, 32767
  %79 = select i1 %78, i64 %77, i64 32767
  %80 = icmp ugt i64 %79, 255
  %81 = select i1 %26, i1 %80, i1 false
  %82 = trunc i64 %79 to i32
  %83 = select i1 %81, i32 255, i32 %82
  %84 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %67, i64 0, i32 0, i64 %69
  store i32 %83, i32* %84, align 4, !tbaa !32
  %85 = add nuw nsw i64 %69, 1
  %86 = icmp eq i64 %85, 64
  br i1 %86, label %87, label %68, !llvm.loop !196

87:                                               ; preds = %68
  %88 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %67, i64 0, i32 1
  store i32 0, i32* %88, align 4, !tbaa !160
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @jpeg_quality_scaling(i32 noundef %0) local_unnamed_addr #6 {
  %2 = icmp sgt i32 %0, 1
  %3 = select i1 %2, i32 %0, i32 1
  %4 = icmp ult i32 %3, 100
  %5 = select i1 %4, i32 %3, i32 100
  %6 = icmp ult i32 %5, 50
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = trunc i32 %5 to i16
  %9 = udiv i16 5000, %8
  %10 = zext i16 %9 to i32
  br label %14

11:                                               ; preds = %1
  %12 = mul nsw i32 %5, -2
  %13 = add nsw i32 %12, 200
  br label %14

14:                                               ; preds = %11, %7
  %15 = phi i32 [ %10, %7 ], [ %13, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_set_quality(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 {
  %4 = icmp sgt i32 %1, 1
  %5 = select i1 %4, i32 %1, i32 1
  %6 = icmp ult i32 %5, 100
  %7 = select i1 %6, i32 %5, i32 100
  %8 = icmp ult i32 %7, 50
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = trunc i32 %7 to i16
  %11 = udiv i16 5000, %10
  %12 = zext i16 %11 to i32
  br label %16

13:                                               ; preds = %3
  %14 = mul nsw i32 %7, -2
  %15 = add nsw i32 %14, 200
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi i32 [ %12, %9 ], [ %15, %13 ]
  tail call void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* noundef %0, i32 noundef %17, i32 noundef %2)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_set_defaults(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4, !tbaa !159
  %4 = icmp eq i32 %3, 100
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 5
  store i32 20, i32* %8, align 8, !tbaa !19
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 6, i32 0, i64 0
  store i32 %3, i32* %9, align 4, !tbaa !7
  %10 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %11 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %10, align 8, !tbaa !8
  %12 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %11, align 8, !tbaa !20
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %12(%struct.jpeg_common_struct* noundef %13) #27
  br label %14

14:                                               ; preds = %5, %1
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %16 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %15, align 8, !tbaa !145
  %17 = icmp eq %struct.jpeg_component_info* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %20 = bitcast %struct.jpeg_memory_mgr** %19 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %21 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %20, align 8, !tbaa !36
  %22 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %21, align 8, !tbaa !44
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %24 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %22(%struct.jpeg_common_struct* noundef %23, i32 noundef 0, i64 noundef 960) #27
  %25 = bitcast %struct.jpeg_component_info** %15 to i8**
  store i8* %24, i8** %25, align 8, !tbaa !145
  br label %26

26:                                               ; preds = %18, %14
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  store i32 8, i32* %27, align 8, !tbaa !49
  tail call void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 50, i32 noundef 1) #27
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 0
  %29 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %28, align 8, !tbaa !3
  %30 = icmp eq %struct.JHUFF_TBL* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %33 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %32) #27
  store %struct.JHUFF_TBL* %33, %struct.JHUFF_TBL** %28, align 8, !tbaa !3
  br label %34

34:                                               ; preds = %31, %26
  %35 = phi %struct.JHUFF_TBL* [ %33, %31 ], [ %29, %26 ]
  %36 = bitcast %struct.JHUFF_TBL* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(34) %36, i8* noundef nonnull align 16 dereferenceable(34) bitcast ([17 x i16]* @std_huff_tables.bits_dc_luminance to i8*), i64 34, i1 false) #27
  %37 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %28, align 8, !tbaa !3
  %38 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %37, i64 0, i32 1, i64 0
  %39 = bitcast i16* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(24) %39, i8* noundef nonnull align 16 dereferenceable(24) bitcast ([12 x i16]* @std_huff_tables.val_dc_chrominance to i8*), i64 24, i1 false) #27
  %40 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %28, align 8, !tbaa !3
  %41 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %40, i64 0, i32 2
  store i32 0, i32* %41, align 4, !tbaa !162
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 0
  %43 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %42, align 8, !tbaa !3
  %44 = icmp eq %struct.JHUFF_TBL* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %47 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %46) #27
  store %struct.JHUFF_TBL* %47, %struct.JHUFF_TBL** %42, align 8, !tbaa !3
  br label %48

48:                                               ; preds = %45, %34
  %49 = phi %struct.JHUFF_TBL* [ %47, %45 ], [ %43, %34 ]
  %50 = bitcast %struct.JHUFF_TBL* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(34) %50, i8* noundef nonnull align 16 dereferenceable(34) bitcast ([17 x i16]* @std_huff_tables.bits_ac_luminance to i8*), i64 34, i1 false) #27
  %51 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %42, align 8, !tbaa !3
  %52 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %51, i64 0, i32 1, i64 0
  %53 = bitcast i16* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(324) %53, i8* noundef nonnull align 16 dereferenceable(324) bitcast ([162 x i16]* @std_huff_tables.val_ac_luminance to i8*), i64 324, i1 false) #27
  %54 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %42, align 8, !tbaa !3
  %55 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %54, i64 0, i32 2
  store i32 0, i32* %55, align 4, !tbaa !162
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 1
  %57 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %56, align 8, !tbaa !3
  %58 = icmp eq %struct.JHUFF_TBL* %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %48
  %60 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %61 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %60) #27
  store %struct.JHUFF_TBL* %61, %struct.JHUFF_TBL** %56, align 8, !tbaa !3
  br label %62

62:                                               ; preds = %59, %48
  %63 = phi %struct.JHUFF_TBL* [ %61, %59 ], [ %57, %48 ]
  %64 = bitcast %struct.JHUFF_TBL* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(34) %64, i8* noundef nonnull align 16 dereferenceable(34) bitcast ([17 x i16]* @std_huff_tables.bits_dc_chrominance to i8*), i64 34, i1 false) #27
  %65 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %56, align 8, !tbaa !3
  %66 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %65, i64 0, i32 1, i64 0
  %67 = bitcast i16* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(24) %67, i8* noundef nonnull align 16 dereferenceable(24) bitcast ([12 x i16]* @std_huff_tables.val_dc_chrominance to i8*), i64 24, i1 false) #27
  %68 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %56, align 8, !tbaa !3
  %69 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %68, i64 0, i32 2
  store i32 0, i32* %69, align 4, !tbaa !162
  %70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 1
  %71 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %70, align 8, !tbaa !3
  %72 = icmp eq %struct.JHUFF_TBL* %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %75 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %74) #27
  store %struct.JHUFF_TBL* %75, %struct.JHUFF_TBL** %70, align 8, !tbaa !3
  br label %76

76:                                               ; preds = %62, %73
  %77 = phi %struct.JHUFF_TBL* [ %75, %73 ], [ %71, %62 ]
  %78 = bitcast %struct.JHUFF_TBL* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(34) %78, i8* noundef nonnull align 16 dereferenceable(34) bitcast ([17 x i16]* @std_huff_tables.bits_ac_chrominance to i8*), i64 34, i1 false) #27
  %79 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %70, align 8, !tbaa !3
  %80 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %79, i64 0, i32 1, i64 0
  %81 = bitcast i16* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(324) %81, i8* noundef nonnull align 16 dereferenceable(324) bitcast ([162 x i16]* @std_huff_tables.val_ac_chrominance to i8*), i64 324, i1 false) #27
  %82 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %70, align 8, !tbaa !3
  %83 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %82, i64 0, i32 2
  store i32 0, i32* %83, align 4, !tbaa !162
  %84 = getelementptr %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 19, i64 0
  %85 = bitcast i16* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(32) %85, i8 0, i64 32, i1 false), !tbaa !96
  %86 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 20, i64 0
  %87 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 21, i64 0
  %88 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %88, align 2, !tbaa !96
  %89 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>, <8 x i16>* %89, align 2, !tbaa !96
  %90 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 20, i64 8
  %91 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 21, i64 8
  %92 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %92, align 2, !tbaa !96
  %93 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>, <8 x i16>* %93, align 2, !tbaa !96
  %94 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %95 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  store i32 0, i32* %95, align 8, !tbaa !143
  %96 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %97 = bitcast %struct.jpeg_scan_info** %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %97, i8 0, i64 16, i1 false)
  %98 = load i32, i32* %27, align 8, !tbaa !49
  %99 = icmp sgt i32 %98, 8
  %100 = zext i1 %99 to i32
  store i32 %100, i32* %96, align 8
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 27
  %102 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 33
  %103 = bitcast i32* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(20) %103, i8 0, i64 20, i1 false)
  store i16 1, i16* %102, align 4, !tbaa !197
  %104 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 34
  store i16 1, i16* %104, align 2, !tbaa !198
  %105 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 35
  store i16 0, i16* %105, align 8, !tbaa !115
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 36
  store i32 1, i32* %106, align 4, !tbaa !113
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 37
  store i32 1, i32* %107, align 8, !tbaa !114
  tail call void @jpeg_default_colorspace(%struct.jpeg_compress_struct* noundef nonnull %0)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_default_colorspace(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4, !tbaa !18
  switch i32 %3, label %225 [
    i32 1, label %4
    i32 2, label %28
    i32 3, label %60
    i32 4, label %92
    i32 5, label %128
    i32 0, label %164
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4, !tbaa !159
  %7 = icmp eq i32 %6, 100
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 20, i32* %11, align 8, !tbaa !19
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 %6, i32* %12, align 4, !tbaa !7
  %13 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %14 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %13, align 8, !tbaa !8
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef %16) #27
  br label %17

17:                                               ; preds = %4, %8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 1, i32* %18, align 8, !tbaa !199
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %20, align 4, !tbaa !200
  store i32 1, i32* %19, align 8, !tbaa !201
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 1, i32* %21, align 4, !tbaa !202
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %23 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %22, align 8, !tbaa !145
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 0
  store i32 1, i32* %24, align 8, !tbaa !203
  %25 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 2
  %26 = bitcast i32* %25 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %26, align 8, !tbaa !32
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 6
  store i32 0, i32* %27, align 8, !tbaa !204
  br label %241

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %30 = load i32, i32* %29, align 4, !tbaa !159
  %31 = icmp eq i32 %30, 100
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i64 0, i32 5
  store i32 20, i32* %35, align 8, !tbaa !19
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i64 0, i32 6, i32 0, i64 0
  store i32 %30, i32* %36, align 4, !tbaa !7
  %37 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %38 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %37, align 8, !tbaa !8
  %39 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %38, align 8, !tbaa !20
  %40 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %39(%struct.jpeg_common_struct* noundef %40) #27
  br label %41

41:                                               ; preds = %28, %32
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 3, i32* %42, align 8, !tbaa !199
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %44, align 4, !tbaa !200
  store i32 1, i32* %43, align 8, !tbaa !201
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %45, align 4, !tbaa !202
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %46, align 8, !tbaa !145
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 0
  store i32 1, i32* %48, align 8, !tbaa !203
  %49 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 2
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %50, align 8, !tbaa !32
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 6
  store i32 0, i32* %51, align 8, !tbaa !204
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 1, i32 0
  store i32 2, i32* %52, align 8, !tbaa !203
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 1, i32 2
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !tbaa !32
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 1, i32 6
  store i32 1, i32* %55, align 8, !tbaa !204
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 2, i32 0
  store i32 3, i32* %56, align 8, !tbaa !203
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 2, i32 2
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !tbaa !32
  %59 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 2, i32 6
  store i32 1, i32* %59, align 8, !tbaa !204
  br label %241

60:                                               ; preds = %1
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %62 = load i32, i32* %61, align 4, !tbaa !159
  %63 = icmp eq i32 %62, 100
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 5
  store i32 20, i32* %67, align 8, !tbaa !19
  %68 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 6, i32 0, i64 0
  store i32 %62, i32* %68, align 4, !tbaa !7
  %69 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %70 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %69, align 8, !tbaa !8
  %71 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %70, align 8, !tbaa !20
  %72 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %71(%struct.jpeg_common_struct* noundef %72) #27
  br label %73

73:                                               ; preds = %60, %64
  %74 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 3, i32* %74, align 8, !tbaa !199
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %76 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %76, align 4, !tbaa !200
  store i32 1, i32* %75, align 8, !tbaa !201
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %77, align 4, !tbaa !202
  %78 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %79 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %78, align 8, !tbaa !145
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 0, i32 0
  store i32 1, i32* %80, align 8, !tbaa !203
  %81 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 0, i32 2
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %82, align 8, !tbaa !32
  %83 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 0, i32 6
  store i32 0, i32* %83, align 8, !tbaa !204
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 1, i32 0
  store i32 2, i32* %84, align 8, !tbaa !203
  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 1, i32 2
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !tbaa !32
  %87 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 1, i32 6
  store i32 1, i32* %87, align 8, !tbaa !204
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 2, i32 0
  store i32 3, i32* %88, align 8, !tbaa !203
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 2, i32 2
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !tbaa !32
  %91 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %79, i64 2, i32 6
  store i32 1, i32* %91, align 8, !tbaa !204
  br label %241

92:                                               ; preds = %1
  %93 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %94 = load i32, i32* %93, align 4, !tbaa !159
  %95 = icmp eq i32 %94, 100
  br i1 %95, label %105, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %98 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %97, align 8, !tbaa !8
  %99 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %98, i64 0, i32 5
  store i32 20, i32* %99, align 8, !tbaa !19
  %100 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %98, i64 0, i32 6, i32 0, i64 0
  store i32 %94, i32* %100, align 4, !tbaa !7
  %101 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %102 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %101, align 8, !tbaa !8
  %103 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %102, align 8, !tbaa !20
  %104 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %103(%struct.jpeg_common_struct* noundef %104) #27
  br label %105

105:                                              ; preds = %92, %96
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 4, i32* %106, align 8, !tbaa !199
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %107, align 8, !tbaa !201
  %108 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 1, i32* %108, align 4, !tbaa !200
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %109, align 4, !tbaa !202
  %110 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %111 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %110, align 8, !tbaa !145
  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 0
  store i32 67, i32* %112, align 8, !tbaa !203
  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 2
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %114, align 8, !tbaa !32
  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 6
  store i32 0, i32* %115, align 8, !tbaa !204
  %116 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 1, i32 0
  store i32 77, i32* %116, align 8, !tbaa !203
  %117 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 1, i32 2
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %118, align 8, !tbaa !32
  %119 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 1, i32 6
  store i32 0, i32* %119, align 8, !tbaa !204
  %120 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 2, i32 0
  store i32 89, i32* %120, align 8, !tbaa !203
  %121 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 2, i32 2
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %122, align 8, !tbaa !32
  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 2, i32 6
  store i32 0, i32* %123, align 8, !tbaa !204
  %124 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 3, i32 0
  store i32 75, i32* %124, align 8, !tbaa !203
  %125 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 3, i32 2
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %126, align 8, !tbaa !32
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 3, i32 6
  store i32 0, i32* %127, align 8, !tbaa !204
  br label %241

128:                                              ; preds = %1
  %129 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4, !tbaa !159
  %131 = icmp eq i32 %130, 100
  br i1 %131, label %141, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %134 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %133, align 8, !tbaa !8
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %134, i64 0, i32 5
  store i32 20, i32* %135, align 8, !tbaa !19
  %136 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %134, i64 0, i32 6, i32 0, i64 0
  store i32 %130, i32* %136, align 4, !tbaa !7
  %137 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %138 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %137, align 8, !tbaa !8
  %139 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %138, align 8, !tbaa !20
  %140 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %139(%struct.jpeg_common_struct* noundef %140) #27
  br label %141

141:                                              ; preds = %128, %132
  %142 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 5, i32* %142, align 8, !tbaa !199
  %143 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %143, align 8, !tbaa !201
  %144 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 1, i32* %144, align 4, !tbaa !200
  %145 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %145, align 4, !tbaa !202
  %146 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %147 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %146, align 8, !tbaa !145
  %148 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 0, i32 0
  store i32 1, i32* %148, align 8, !tbaa !203
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 0, i32 2
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %150, align 8, !tbaa !32
  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 0, i32 6
  store i32 0, i32* %151, align 8, !tbaa !204
  %152 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 1, i32 0
  store i32 2, i32* %152, align 8, !tbaa !203
  %153 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 1, i32 2
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !tbaa !32
  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 1, i32 6
  store i32 1, i32* %155, align 8, !tbaa !204
  %156 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 2, i32 0
  store i32 3, i32* %156, align 8, !tbaa !203
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 2, i32 2
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !tbaa !32
  %159 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 2, i32 6
  store i32 1, i32* %159, align 8, !tbaa !204
  %160 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 3, i32 0
  store i32 4, i32* %160, align 8, !tbaa !203
  %161 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 3, i32 2
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %162, align 8, !tbaa !32
  %163 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %147, i64 3, i32 6
  store i32 0, i32* %163, align 8, !tbaa !204
  br label %241

164:                                              ; preds = %1
  %165 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %166 = load i32, i32* %165, align 4, !tbaa !159
  %167 = icmp eq i32 %166, 100
  br i1 %167, label %177, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %170 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %169, align 8, !tbaa !8
  %171 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %170, i64 0, i32 5
  store i32 20, i32* %171, align 8, !tbaa !19
  %172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %170, i64 0, i32 6, i32 0, i64 0
  store i32 %166, i32* %172, align 4, !tbaa !7
  %173 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %174 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %173, align 8, !tbaa !8
  %175 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %174, align 8, !tbaa !20
  %176 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %175(%struct.jpeg_common_struct* noundef %176) #27
  br label %177

177:                                              ; preds = %168, %164
  %178 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 0, i32* %178, align 8, !tbaa !199
  %179 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %179, align 8, !tbaa !201
  %180 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %180, align 4, !tbaa !200
  %181 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %182 = load i32, i32* %181, align 8, !tbaa !51
  %183 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 %182, i32* %183, align 4, !tbaa !202
  %184 = add i32 %182, -11
  %185 = icmp ult i32 %184, -10
  br i1 %185, label %186, label %199

186:                                              ; preds = %177
  %187 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %188 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8, !tbaa !8
  %189 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %188, i64 0, i32 5
  store i32 26, i32* %189, align 8, !tbaa !19
  %190 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %188, i64 0, i32 6, i32 0, i64 0
  store i32 %182, i32* %190, align 4, !tbaa !7
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8, !tbaa !8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %192, align 4, !tbaa !7
  %193 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %194 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %193, align 8, !tbaa !8
  %195 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %194, align 8, !tbaa !20
  %196 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %195(%struct.jpeg_common_struct* noundef %196) #27
  %197 = load i32, i32* %183, align 4, !tbaa !202
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %199, label %241

199:                                              ; preds = %186, %177
  %200 = phi i32 [ %197, %186 ], [ %182, %177 ]
  %201 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %202 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %201, align 8, !tbaa !145
  %203 = zext i32 %200 to i64
  %204 = and i64 %203, 1
  %205 = icmp eq i32 %200, 1
  br i1 %205, label %232, label %206

206:                                              ; preds = %199
  %207 = and i64 %203, 4294967294
  br label %208

208:                                              ; preds = %208, %206
  %209 = phi i64 [ 0, %206 ], [ %222, %208 ]
  %210 = phi i64 [ 0, %206 ], [ %223, %208 ]
  %211 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %209, i32 0
  %212 = trunc i64 %209 to i32
  store i32 %212, i32* %211, align 8, !tbaa !203
  %213 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %209, i32 2
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %214, align 8, !tbaa !32
  %215 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %209, i32 6
  store i32 0, i32* %215, align 8, !tbaa !204
  %216 = or i64 %209, 1
  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %216, i32 0
  %218 = trunc i64 %216 to i32
  store i32 %218, i32* %217, align 8, !tbaa !203
  %219 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %216, i32 2
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %220, align 8, !tbaa !32
  %221 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %216, i32 6
  store i32 0, i32* %221, align 8, !tbaa !204
  %222 = add nuw nsw i64 %209, 2
  %223 = add i64 %210, 2
  %224 = icmp eq i64 %223, %207
  br i1 %224, label %232, label %208, !llvm.loop !205

225:                                              ; preds = %1
  %226 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %227 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %226, align 8, !tbaa !8
  %228 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %227, i64 0, i32 5
  store i32 9, i32* %228, align 8, !tbaa !19
  %229 = bitcast %struct.jpeg_error_mgr* %227 to void (%struct.jpeg_common_struct*, ...)**
  %230 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %229, align 8, !tbaa !20
  %231 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %230(%struct.jpeg_common_struct* noundef %231) #27
  br label %241

232:                                              ; preds = %208, %199
  %233 = phi i64 [ 0, %199 ], [ %222, %208 ]
  %234 = icmp eq i64 %204, 0
  br i1 %234, label %241, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %233, i32 0
  %237 = trunc i64 %233 to i32
  store i32 %237, i32* %236, align 8, !tbaa !203
  %238 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %233, i32 2
  %239 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %239, align 8, !tbaa !32
  %240 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i64 %233, i32 6
  store i32 0, i32* %240, align 8, !tbaa !204
  br label %241

241:                                              ; preds = %235, %232, %186, %225, %141, %105, %73, %41, %17
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_set_colorspace(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !159
  %5 = icmp eq i32 %4, 100
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 20, i32* %9, align 8, !tbaa !19
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0
  store i32 %4, i32* %10, align 4, !tbaa !7
  %11 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %12 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %11, align 8, !tbaa !8
  %13 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %12, align 8, !tbaa !20
  %14 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %13(%struct.jpeg_common_struct* noundef %14) #27
  br label %15

15:                                               ; preds = %6, %2
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 %1, i32* %16, align 8, !tbaa !199
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %17, align 8, !tbaa !201
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %18, align 4, !tbaa !200
  switch i32 %1, label %144 [
    i32 1, label %19
    i32 2, label %27
    i32 3, label %43
    i32 4, label %59
    i32 5, label %79
    i32 0, label %99
  ]

19:                                               ; preds = %15
  store i32 1, i32* %17, align 8, !tbaa !201
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 1, i32* %20, align 4, !tbaa !202
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %22 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %21, align 8, !tbaa !145
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %22, i64 0, i32 0
  store i32 1, i32* %23, align 8, !tbaa !203
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %22, i64 0, i32 2
  %25 = bitcast i32* %24 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %25, align 8, !tbaa !32
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %22, i64 0, i32 6
  store i32 0, i32* %26, align 8, !tbaa !204
  br label %160

27:                                               ; preds = %15
  store i32 1, i32* %18, align 4, !tbaa !200
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %28, align 4, !tbaa !202
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %30 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %29, align 8, !tbaa !145
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 0, i32 0
  store i32 82, i32* %31, align 8, !tbaa !203
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 0, i32 2
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %33, align 8, !tbaa !32
  %34 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 0, i32 6
  store i32 0, i32* %34, align 8, !tbaa !204
  %35 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 1, i32 0
  store i32 71, i32* %35, align 8, !tbaa !203
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 1, i32 2
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %37, align 8, !tbaa !32
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 1, i32 6
  store i32 0, i32* %38, align 8, !tbaa !204
  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 2, i32 0
  store i32 66, i32* %39, align 8, !tbaa !203
  %40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 2, i32 2
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %41, align 8, !tbaa !32
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i64 2, i32 6
  store i32 0, i32* %42, align 8, !tbaa !204
  br label %160

43:                                               ; preds = %15
  store i32 1, i32* %17, align 8, !tbaa !201
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %44, align 4, !tbaa !202
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %46 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %45, align 8, !tbaa !145
  %47 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 0, i32 0
  store i32 1, i32* %47, align 8, !tbaa !203
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 0, i32 2
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %49, align 8, !tbaa !32
  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 0, i32 6
  store i32 0, i32* %50, align 8, !tbaa !204
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 1, i32 0
  store i32 2, i32* %51, align 8, !tbaa !203
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 1, i32 2
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !tbaa !32
  %54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 1, i32 6
  store i32 1, i32* %54, align 8, !tbaa !204
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 2, i32 0
  store i32 3, i32* %55, align 8, !tbaa !203
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 2, i32 2
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !tbaa !32
  %58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %46, i64 2, i32 6
  store i32 1, i32* %58, align 8, !tbaa !204
  br label %160

59:                                               ; preds = %15
  store i32 1, i32* %18, align 4, !tbaa !200
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %60, align 4, !tbaa !202
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %62 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %61, align 8, !tbaa !145
  %63 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 0, i32 0
  store i32 67, i32* %63, align 8, !tbaa !203
  %64 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 0, i32 2
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %65, align 8, !tbaa !32
  %66 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 0, i32 6
  store i32 0, i32* %66, align 8, !tbaa !204
  %67 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 1, i32 0
  store i32 77, i32* %67, align 8, !tbaa !203
  %68 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 1, i32 2
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %69, align 8, !tbaa !32
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 1, i32 6
  store i32 0, i32* %70, align 8, !tbaa !204
  %71 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 2, i32 0
  store i32 89, i32* %71, align 8, !tbaa !203
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 2, i32 2
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %73, align 8, !tbaa !32
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 2, i32 6
  store i32 0, i32* %74, align 8, !tbaa !204
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 3, i32 0
  store i32 75, i32* %75, align 8, !tbaa !203
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 3, i32 2
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %77, align 8, !tbaa !32
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 3, i32 6
  store i32 0, i32* %78, align 8, !tbaa !204
  br label %160

79:                                               ; preds = %15
  store i32 1, i32* %18, align 4, !tbaa !200
  %80 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %80, align 4, !tbaa !202
  %81 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %82 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %81, align 8, !tbaa !145
  %83 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 0, i32 0
  store i32 1, i32* %83, align 8, !tbaa !203
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 0, i32 2
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %85, align 8, !tbaa !32
  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 0, i32 6
  store i32 0, i32* %86, align 8, !tbaa !204
  %87 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 1, i32 0
  store i32 2, i32* %87, align 8, !tbaa !203
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 1, i32 2
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !tbaa !32
  %90 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 1, i32 6
  store i32 1, i32* %90, align 8, !tbaa !204
  %91 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 2, i32 0
  store i32 3, i32* %91, align 8, !tbaa !203
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 2, i32 2
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %93, align 8, !tbaa !32
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 2, i32 6
  store i32 1, i32* %94, align 8, !tbaa !204
  %95 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 3, i32 0
  store i32 4, i32* %95, align 8, !tbaa !203
  %96 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 3, i32 2
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %97, align 8, !tbaa !32
  %98 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %82, i64 3, i32 6
  store i32 0, i32* %98, align 8, !tbaa !204
  br label %160

99:                                               ; preds = %15
  %100 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %101 = load i32, i32* %100, align 8, !tbaa !51
  %102 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 %101, i32* %102, align 4, !tbaa !202
  %103 = add i32 %101, -11
  %104 = icmp ult i32 %103, -10
  br i1 %104, label %105, label %118

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %107 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8, !tbaa !8
  %108 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 5
  store i32 26, i32* %108, align 8, !tbaa !19
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 6, i32 0, i64 0
  store i32 %101, i32* %109, align 4, !tbaa !7
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8, !tbaa !8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %111, align 4, !tbaa !7
  %112 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %113 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %112, align 8, !tbaa !8
  %114 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %113, align 8, !tbaa !20
  %115 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %114(%struct.jpeg_common_struct* noundef %115) #27
  %116 = load i32, i32* %102, align 4, !tbaa !202
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %118, label %160

118:                                              ; preds = %99, %105
  %119 = phi i32 [ %116, %105 ], [ %101, %99 ]
  %120 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %121 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %120, align 8, !tbaa !145
  %122 = zext i32 %119 to i64
  %123 = and i64 %122, 1
  %124 = icmp eq i32 %119, 1
  br i1 %124, label %151, label %125

125:                                              ; preds = %118
  %126 = and i64 %122, 4294967294
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 0, %125 ], [ %141, %127 ]
  %129 = phi i64 [ 0, %125 ], [ %142, %127 ]
  %130 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %128, i32 0
  %131 = trunc i64 %128 to i32
  store i32 %131, i32* %130, align 8, !tbaa !203
  %132 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %128, i32 2
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %133, align 8, !tbaa !32
  %134 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %128, i32 6
  store i32 0, i32* %134, align 8, !tbaa !204
  %135 = or i64 %128, 1
  %136 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %135, i32 0
  %137 = trunc i64 %135 to i32
  store i32 %137, i32* %136, align 8, !tbaa !203
  %138 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %135, i32 2
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %139, align 8, !tbaa !32
  %140 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %135, i32 6
  store i32 0, i32* %140, align 8, !tbaa !204
  %141 = add nuw nsw i64 %128, 2
  %142 = add i64 %129, 2
  %143 = icmp eq i64 %142, %126
  br i1 %143, label %151, label %127, !llvm.loop !205

144:                                              ; preds = %15
  %145 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8, !tbaa !8
  %147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i64 0, i32 5
  store i32 10, i32* %147, align 8, !tbaa !19
  %148 = bitcast %struct.jpeg_error_mgr* %146 to void (%struct.jpeg_common_struct*, ...)**
  %149 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %148, align 8, !tbaa !20
  %150 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %149(%struct.jpeg_common_struct* noundef %150) #27
  br label %160

151:                                              ; preds = %127, %118
  %152 = phi i64 [ 0, %118 ], [ %141, %127 ]
  %153 = icmp eq i64 %123, 0
  br i1 %153, label %160, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %152, i32 0
  %156 = trunc i64 %152 to i32
  store i32 %156, i32* %155, align 8, !tbaa !203
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %152, i32 2
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %158, align 8, !tbaa !32
  %159 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 %152, i32 6
  store i32 0, i32* %159, align 8, !tbaa !204
  br label %160

160:                                              ; preds = %154, %151, %105, %144, %79, %59, %43, %27, %19
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_simple_progression(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 4, !tbaa !202
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4, !tbaa !159
  %6 = icmp eq i32 %5, 100
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8, !tbaa !19
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %5, i32* %11, align 4, !tbaa !7
  %12 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %13 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %12, align 8, !tbaa !8
  %14 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %13, align 8, !tbaa !20
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %14(%struct.jpeg_common_struct* noundef %15) #27
  br label %16

16:                                               ; preds = %7, %1
  %17 = icmp eq i32 %3, 3
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  %20 = load i32, i32* %19, align 8, !tbaa !199
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %29, label %26

22:                                               ; preds = %16
  %23 = icmp sgt i32 %3, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = mul nsw i32 %3, 6
  br label %29

26:                                               ; preds = %18, %22
  %27 = shl nsw i32 %3, 2
  %28 = or i32 %27, 2
  br label %29

29:                                               ; preds = %18, %24, %26
  %30 = phi i32 [ %25, %24 ], [ %28, %26 ], [ 10, %18 ]
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 63
  %32 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %31, align 8, !tbaa !157
  %33 = icmp eq %struct.jpeg_scan_info* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 64
  %36 = load i32, i32* %35, align 8, !tbaa !206
  %37 = icmp slt i32 %36, %30
  br i1 %37, label %38, label %52

38:                                               ; preds = %34, %29
  %39 = icmp sgt i32 %30, 10
  %40 = select i1 %39, i32 %30, i32 10
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 64
  store i32 %40, i32* %41, align 8, !tbaa !206
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %43 = bitcast %struct.jpeg_memory_mgr** %42 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %44 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %43, align 8, !tbaa !36
  %45 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %44, align 8, !tbaa !44
  %46 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %47 = zext i32 %40 to i64
  %48 = mul nuw nsw i64 %47, 36
  %49 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %45(%struct.jpeg_common_struct* noundef %46, i32 noundef 0, i64 noundef %48) #27
  %50 = bitcast %struct.jpeg_scan_info** %31 to i8**
  store i8* %49, i8** %50, align 8, !tbaa !157
  %51 = bitcast i8* %49 to %struct.jpeg_scan_info*
  br label %52

52:                                               ; preds = %38, %34
  %53 = phi %struct.jpeg_scan_info* [ %51, %38 ], [ %32, %34 ]
  %54 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  store %struct.jpeg_scan_info* %53, %struct.jpeg_scan_info** %54, align 8, !tbaa !142
  %55 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  store i32 %30, i32* %55, align 8, !tbaa !143
  br i1 %17, label %56, label %103

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  %58 = load i32, i32* %57, align 8, !tbaa !199
  %59 = icmp eq i32 %58, 3
  %60 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 0
  store i32 3, i32* %60, align 4, !tbaa !135
  br i1 %59, label %61, label %117

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 0
  store i32 0, i32* %62, align 4, !tbaa !32
  %63 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 1
  store i32 1, i32* %63, align 4, !tbaa !32
  %64 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 2
  store i32 2, i32* %64, align 4, !tbaa !32
  %65 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 2
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %66, align 4, !tbaa !32
  %67 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1, i32 0
  store i32 1, i32* %67, align 4, !tbaa !135
  %68 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1, i32 1, i64 0
  store i32 0, i32* %68, align 4, !tbaa !32
  %69 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1, i32 2
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %70, align 4, !tbaa !32
  %71 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 2, i32 0
  store i32 1, i32* %71, align 4, !tbaa !135
  %72 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 2, i32 1, i64 0
  store i32 2, i32* %72, align 4, !tbaa !32
  %73 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 2, i32 2
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 0, i32 1>, <4 x i32>* %74, align 4, !tbaa !32
  %75 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 3, i32 0
  store i32 1, i32* %75, align 4, !tbaa !135
  %76 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 3, i32 1, i64 0
  store i32 1, i32* %76, align 4, !tbaa !32
  %77 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 3, i32 2
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 0, i32 1>, <4 x i32>* %78, align 4, !tbaa !32
  %79 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 4, i32 0
  store i32 1, i32* %79, align 4, !tbaa !135
  %80 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 4, i32 1, i64 0
  store i32 0, i32* %80, align 4, !tbaa !32
  %81 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 4, i32 2
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %82, align 4, !tbaa !32
  %83 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 5, i32 0
  store i32 1, i32* %83, align 4, !tbaa !135
  %84 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 5, i32 1, i64 0
  store i32 0, i32* %84, align 4, !tbaa !32
  %85 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 5, i32 2
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %86, align 4, !tbaa !32
  %87 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 6, i32 0
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 3, i32 0, i32 1, i32 2>, <4 x i32>* %88, align 4, !tbaa !32
  %89 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 6, i32 2
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %90, align 4, !tbaa !32
  %91 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 7, i32 0
  store i32 1, i32* %91, align 4, !tbaa !135
  %92 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 7, i32 1, i64 0
  store i32 2, i32* %92, align 4, !tbaa !32
  %93 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 7, i32 2
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %94, align 4, !tbaa !32
  %95 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 8, i32 0
  store i32 1, i32* %95, align 4, !tbaa !135
  %96 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 8, i32 1, i64 0
  store i32 1, i32* %96, align 4, !tbaa !32
  %97 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 8, i32 2
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %98, align 4, !tbaa !32
  %99 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 9, i32 0
  store i32 1, i32* %99, align 4, !tbaa !135
  %100 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 9, i32 1, i64 0
  store i32 0, i32* %100, align 4, !tbaa !32
  %101 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 9, i32 2
  store i32 1, i32* %101, align 4, !tbaa !137
  %102 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 9, i32 3
  store i32 63, i32* %102, align 4, !tbaa !138
  br label %569

103:                                              ; preds = %52
  %104 = icmp slt i32 %3, 5
  br i1 %104, label %111, label %105

105:                                              ; preds = %103
  %106 = add i32 %3, -1
  %107 = and i32 %3, 3
  %108 = icmp ult i32 %106, 3
  br i1 %108, label %222, label %109

109:                                              ; preds = %105
  %110 = and i32 %3, -4
  br label %190

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 0
  store i32 %3, i32* %112, align 4, !tbaa !135
  %113 = icmp sgt i32 %3, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 2
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %116, align 4, !tbaa !32
  br label %399

117:                                              ; preds = %56, %111
  %118 = zext i32 %3 to i64
  %119 = icmp ult i32 %3, 8
  br i1 %119, label %182, label %120

120:                                              ; preds = %117
  %121 = and i64 %118, 4294967288
  %122 = add nsw i64 %121, -8
  %123 = lshr exact i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = and i64 %124, 3
  %126 = icmp ult i64 %122, 24
  br i1 %126, label %163, label %127

127:                                              ; preds = %120
  %128 = and i64 %124, 4611686018427387900
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %159, %129 ]
  %131 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %127 ], [ %160, %129 ]
  %132 = phi i64 [ 0, %127 ], [ %161, %129 ]
  %133 = add <4 x i32> %131, <i32 4, i32 4, i32 4, i32 4>
  %134 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 %130
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !tbaa !32
  %136 = getelementptr inbounds i32, i32* %134, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %137, align 4, !tbaa !32
  %138 = or i64 %130, 8
  %139 = add <4 x i32> %131, <i32 8, i32 8, i32 8, i32 8>
  %140 = add <4 x i32> %131, <i32 12, i32 12, i32 12, i32 12>
  %141 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 %138
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %139, <4 x i32>* %142, align 4, !tbaa !32
  %143 = getelementptr inbounds i32, i32* %141, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %144, align 4, !tbaa !32
  %145 = or i64 %130, 16
  %146 = add <4 x i32> %131, <i32 16, i32 16, i32 16, i32 16>
  %147 = add <4 x i32> %131, <i32 20, i32 20, i32 20, i32 20>
  %148 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 %145
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %149, align 4, !tbaa !32
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %147, <4 x i32>* %151, align 4, !tbaa !32
  %152 = or i64 %130, 24
  %153 = add <4 x i32> %131, <i32 24, i32 24, i32 24, i32 24>
  %154 = add <4 x i32> %131, <i32 28, i32 28, i32 28, i32 28>
  %155 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 %152
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %156, align 4, !tbaa !32
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %158, align 4, !tbaa !32
  %159 = add nuw i64 %130, 32
  %160 = add <4 x i32> %131, <i32 32, i32 32, i32 32, i32 32>
  %161 = add i64 %132, 4
  %162 = icmp eq i64 %161, %128
  br i1 %162, label %163, label %129, !llvm.loop !207

163:                                              ; preds = %129, %120
  %164 = phi i64 [ 0, %120 ], [ %159, %129 ]
  %165 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %120 ], [ %160, %129 ]
  %166 = icmp eq i64 %125, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %163, %167
  %168 = phi i64 [ %176, %167 ], [ %164, %163 ]
  %169 = phi <4 x i32> [ %177, %167 ], [ %165, %163 ]
  %170 = phi i64 [ %178, %167 ], [ 0, %163 ]
  %171 = add <4 x i32> %169, <i32 4, i32 4, i32 4, i32 4>
  %172 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 %168
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %169, <4 x i32>* %173, align 4, !tbaa !32
  %174 = getelementptr inbounds i32, i32* %172, i64 4
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %171, <4 x i32>* %175, align 4, !tbaa !32
  %176 = add nuw i64 %168, 8
  %177 = add <4 x i32> %169, <i32 8, i32 8, i32 8, i32 8>
  %178 = add i64 %170, 1
  %179 = icmp eq i64 %178, %125
  br i1 %179, label %180, label %167, !llvm.loop !209

180:                                              ; preds = %167, %163
  %181 = icmp eq i64 %121, %118
  br i1 %181, label %217, label %182

182:                                              ; preds = %117, %180
  %183 = phi i64 [ 0, %117 ], [ %121, %180 ]
  br label %184

184:                                              ; preds = %182, %184
  %185 = phi i64 [ %188, %184 ], [ %183, %182 ]
  %186 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 1, i64 %185
  %187 = trunc i64 %185 to i32
  store i32 %187, i32* %186, align 4, !tbaa !32
  %188 = add nuw nsw i64 %185, 1
  %189 = icmp eq i64 %188, %118
  br i1 %189, label %217, label %184, !llvm.loop !210

190:                                              ; preds = %190, %109
  %191 = phi i32 [ 0, %109 ], [ %214, %190 ]
  %192 = phi %struct.jpeg_scan_info* [ %53, %109 ], [ %213, %190 ]
  %193 = phi i32 [ 0, %109 ], [ %215, %190 ]
  %194 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 0, i32 0
  store i32 1, i32* %194, align 4, !tbaa !135
  %195 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 0, i32 1, i64 0
  store i32 %191, i32* %195, align 4, !tbaa !32
  %196 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 0, i32 2
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %197, align 4, !tbaa !32
  %198 = or i32 %191, 1
  %199 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 1, i32 0
  store i32 1, i32* %199, align 4, !tbaa !135
  %200 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 1, i32 1, i64 0
  store i32 %198, i32* %200, align 4, !tbaa !32
  %201 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 1, i32 2
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %202, align 4, !tbaa !32
  %203 = or i32 %191, 2
  %204 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 2, i32 0
  store i32 1, i32* %204, align 4, !tbaa !135
  %205 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 2, i32 1, i64 0
  store i32 %203, i32* %205, align 4, !tbaa !32
  %206 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 2, i32 2
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %207, align 4, !tbaa !32
  %208 = or i32 %191, 3
  %209 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 3, i32 0
  store i32 1, i32* %209, align 4, !tbaa !135
  %210 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 3, i32 1, i64 0
  store i32 %208, i32* %210, align 4, !tbaa !32
  %211 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 3, i32 2
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %212, align 4, !tbaa !32
  %213 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %192, i64 4
  %214 = add nuw nsw i32 %191, 4
  %215 = add nuw nsw i32 %193, 4
  %216 = icmp eq i32 %215, %110
  br i1 %216, label %222, label %190, !llvm.loop !212

217:                                              ; preds = %184, %180
  %218 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 0, i32 2
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %219, align 4, !tbaa !32
  %220 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1
  %221 = icmp sgt i32 %3, 0
  br i1 %221, label %242, label %399

222:                                              ; preds = %190, %105
  %223 = phi %struct.jpeg_scan_info* [ undef, %105 ], [ %213, %190 ]
  %224 = phi i32 [ 0, %105 ], [ %214, %190 ]
  %225 = phi %struct.jpeg_scan_info* [ %53, %105 ], [ %213, %190 ]
  %226 = icmp eq i32 %107, 0
  br i1 %226, label %239, label %227

227:                                              ; preds = %222, %227
  %228 = phi i32 [ %236, %227 ], [ %224, %222 ]
  %229 = phi %struct.jpeg_scan_info* [ %235, %227 ], [ %225, %222 ]
  %230 = phi i32 [ %237, %227 ], [ 0, %222 ]
  %231 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %229, i64 0, i32 0
  store i32 1, i32* %231, align 4, !tbaa !135
  %232 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %229, i64 0, i32 1, i64 0
  store i32 %228, i32* %232, align 4, !tbaa !32
  %233 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %229, i64 0, i32 2
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %234, align 4, !tbaa !32
  %235 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %229, i64 1
  %236 = add nuw nsw i32 %228, 1
  %237 = add i32 %230, 1
  %238 = icmp eq i32 %237, %107
  br i1 %238, label %239, label %227, !llvm.loop !213

239:                                              ; preds = %227, %222
  %240 = phi %struct.jpeg_scan_info* [ %223, %222 ], [ %235, %227 ]
  %241 = icmp sgt i32 %3, 0
  br i1 %241, label %242, label %403

242:                                              ; preds = %239, %217
  %243 = phi %struct.jpeg_scan_info* [ %240, %239 ], [ %220, %217 ]
  %244 = phi i1 [ false, %239 ], [ true, %217 ]
  %245 = add i32 %3, -1
  %246 = and i32 %3, 3
  %247 = icmp ult i32 %245, 3
  br i1 %247, label %277, label %248

248:                                              ; preds = %242
  %249 = and i32 %3, -4
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i32 [ 0, %248 ], [ %274, %250 ]
  %252 = phi %struct.jpeg_scan_info* [ %243, %248 ], [ %273, %250 ]
  %253 = phi i32 [ 0, %248 ], [ %275, %250 ]
  %254 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 0, i32 0
  store i32 1, i32* %254, align 4, !tbaa !135
  %255 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 0, i32 1, i64 0
  store i32 %251, i32* %255, align 4, !tbaa !32
  %256 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 0, i32 2
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %257, align 4, !tbaa !32
  %258 = or i32 %251, 1
  %259 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 1, i32 0
  store i32 1, i32* %259, align 4, !tbaa !135
  %260 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 1, i32 1, i64 0
  store i32 %258, i32* %260, align 4, !tbaa !32
  %261 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 1, i32 2
  %262 = bitcast i32* %261 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %262, align 4, !tbaa !32
  %263 = or i32 %251, 2
  %264 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 2, i32 0
  store i32 1, i32* %264, align 4, !tbaa !135
  %265 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 2, i32 1, i64 0
  store i32 %263, i32* %265, align 4, !tbaa !32
  %266 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 2, i32 2
  %267 = bitcast i32* %266 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %267, align 4, !tbaa !32
  %268 = or i32 %251, 3
  %269 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 3, i32 0
  store i32 1, i32* %269, align 4, !tbaa !135
  %270 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 3, i32 1, i64 0
  store i32 %268, i32* %270, align 4, !tbaa !32
  %271 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 3, i32 2
  %272 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %272, align 4, !tbaa !32
  %273 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %252, i64 4
  %274 = add nuw nsw i32 %251, 4
  %275 = add i32 %253, 4
  %276 = icmp eq i32 %275, %249
  br i1 %276, label %277, label %250, !llvm.loop !212

277:                                              ; preds = %250, %242
  %278 = phi %struct.jpeg_scan_info* [ undef, %242 ], [ %273, %250 ]
  %279 = phi i32 [ 0, %242 ], [ %274, %250 ]
  %280 = phi %struct.jpeg_scan_info* [ %243, %242 ], [ %273, %250 ]
  %281 = icmp eq i32 %246, 0
  br i1 %281, label %294, label %282

282:                                              ; preds = %277, %282
  %283 = phi i32 [ %291, %282 ], [ %279, %277 ]
  %284 = phi %struct.jpeg_scan_info* [ %290, %282 ], [ %280, %277 ]
  %285 = phi i32 [ %292, %282 ], [ 0, %277 ]
  %286 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %284, i64 0, i32 0
  store i32 1, i32* %286, align 4, !tbaa !135
  %287 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %284, i64 0, i32 1, i64 0
  store i32 %283, i32* %287, align 4, !tbaa !32
  %288 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %284, i64 0, i32 2
  %289 = bitcast i32* %288 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %289, align 4, !tbaa !32
  %290 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %284, i64 1
  %291 = add nuw nsw i32 %283, 1
  %292 = add i32 %285, 1
  %293 = icmp eq i32 %292, %246
  br i1 %293, label %294, label %282, !llvm.loop !214

294:                                              ; preds = %282, %277
  %295 = phi %struct.jpeg_scan_info* [ %278, %277 ], [ %290, %282 ]
  %296 = and i32 %3, 3
  %297 = icmp ult i32 %245, 3
  br i1 %297, label %327, label %298

298:                                              ; preds = %294
  %299 = and i32 %3, -4
  br label %300

300:                                              ; preds = %300, %298
  %301 = phi i32 [ 0, %298 ], [ %324, %300 ]
  %302 = phi %struct.jpeg_scan_info* [ %295, %298 ], [ %323, %300 ]
  %303 = phi i32 [ 0, %298 ], [ %325, %300 ]
  %304 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 0, i32 0
  store i32 1, i32* %304, align 4, !tbaa !135
  %305 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 0, i32 1, i64 0
  store i32 %301, i32* %305, align 4, !tbaa !32
  %306 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 0, i32 2
  %307 = bitcast i32* %306 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %307, align 4, !tbaa !32
  %308 = or i32 %301, 1
  %309 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 1, i32 0
  store i32 1, i32* %309, align 4, !tbaa !135
  %310 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 1, i32 1, i64 0
  store i32 %308, i32* %310, align 4, !tbaa !32
  %311 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 1, i32 2
  %312 = bitcast i32* %311 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %312, align 4, !tbaa !32
  %313 = or i32 %301, 2
  %314 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 2, i32 0
  store i32 1, i32* %314, align 4, !tbaa !135
  %315 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 2, i32 1, i64 0
  store i32 %313, i32* %315, align 4, !tbaa !32
  %316 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 2, i32 2
  %317 = bitcast i32* %316 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %317, align 4, !tbaa !32
  %318 = or i32 %301, 3
  %319 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 3, i32 0
  store i32 1, i32* %319, align 4, !tbaa !135
  %320 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 3, i32 1, i64 0
  store i32 %318, i32* %320, align 4, !tbaa !32
  %321 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 3, i32 2
  %322 = bitcast i32* %321 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %322, align 4, !tbaa !32
  %323 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %302, i64 4
  %324 = add nuw nsw i32 %301, 4
  %325 = add i32 %303, 4
  %326 = icmp eq i32 %325, %299
  br i1 %326, label %327, label %300, !llvm.loop !212

327:                                              ; preds = %300, %294
  %328 = phi %struct.jpeg_scan_info* [ undef, %294 ], [ %323, %300 ]
  %329 = phi i32 [ 0, %294 ], [ %324, %300 ]
  %330 = phi %struct.jpeg_scan_info* [ %295, %294 ], [ %323, %300 ]
  %331 = icmp eq i32 %296, 0
  br i1 %331, label %344, label %332

332:                                              ; preds = %327, %332
  %333 = phi i32 [ %341, %332 ], [ %329, %327 ]
  %334 = phi %struct.jpeg_scan_info* [ %340, %332 ], [ %330, %327 ]
  %335 = phi i32 [ %342, %332 ], [ 0, %327 ]
  %336 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %334, i64 0, i32 0
  store i32 1, i32* %336, align 4, !tbaa !135
  %337 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %334, i64 0, i32 1, i64 0
  store i32 %333, i32* %337, align 4, !tbaa !32
  %338 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %334, i64 0, i32 2
  %339 = bitcast i32* %338 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %339, align 4, !tbaa !32
  %340 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %334, i64 1
  %341 = add nuw nsw i32 %333, 1
  %342 = add i32 %335, 1
  %343 = icmp eq i32 %342, %296
  br i1 %343, label %344, label %332, !llvm.loop !215

344:                                              ; preds = %332, %327
  %345 = phi %struct.jpeg_scan_info* [ %328, %327 ], [ %340, %332 ]
  %346 = and i32 %3, 3
  %347 = icmp ult i32 %245, 3
  br i1 %347, label %378, label %348

348:                                              ; preds = %344
  %349 = and i32 %3, -4
  br label %350

350:                                              ; preds = %350, %348
  %351 = phi i32 [ 0, %348 ], [ %375, %350 ]
  %352 = phi %struct.jpeg_scan_info* [ %345, %348 ], [ %374, %350 ]
  %353 = phi i32 [ 0, %348 ], [ %376, %350 ]
  %354 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 0, i32 0
  store i32 1, i32* %354, align 4, !tbaa !135
  %355 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 0, i32 1, i64 0
  store i32 %351, i32* %355, align 4, !tbaa !32
  %356 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 0, i32 2
  %357 = bitcast i32* %356 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %357, align 4, !tbaa !32
  %358 = or i32 %351, 1
  %359 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 1, i32 0
  store i32 1, i32* %359, align 4, !tbaa !135
  %360 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 1, i32 1, i64 0
  store i32 %358, i32* %360, align 4, !tbaa !32
  %361 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 1, i32 2
  %362 = bitcast i32* %361 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %362, align 4, !tbaa !32
  %363 = or i32 %351, 2
  %364 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 2, i32 0
  store i32 1, i32* %364, align 4, !tbaa !135
  %365 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 2, i32 1, i64 0
  store i32 %363, i32* %365, align 4, !tbaa !32
  %366 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 2, i32 2
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %367, align 4, !tbaa !32
  %368 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 3
  %369 = or i32 %351, 3
  %370 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %368, i64 0, i32 0
  store i32 1, i32* %370, align 4, !tbaa !135
  %371 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 3, i32 1, i64 0
  store i32 %369, i32* %371, align 4, !tbaa !32
  %372 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 3, i32 2
  %373 = bitcast i32* %372 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %373, align 4, !tbaa !32
  %374 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %352, i64 4
  %375 = add nuw nsw i32 %351, 4
  %376 = add i32 %353, 4
  %377 = icmp eq i32 %376, %349
  br i1 %377, label %378, label %350, !llvm.loop !212

378:                                              ; preds = %350, %344
  %379 = phi %struct.jpeg_scan_info* [ undef, %344 ], [ %368, %350 ]
  %380 = phi %struct.jpeg_scan_info* [ undef, %344 ], [ %374, %350 ]
  %381 = phi i32 [ 0, %344 ], [ %375, %350 ]
  %382 = phi %struct.jpeg_scan_info* [ %345, %344 ], [ %374, %350 ]
  %383 = icmp eq i32 %346, 0
  br i1 %383, label %396, label %384

384:                                              ; preds = %378, %384
  %385 = phi i32 [ %393, %384 ], [ %381, %378 ]
  %386 = phi %struct.jpeg_scan_info* [ %392, %384 ], [ %382, %378 ]
  %387 = phi i32 [ %394, %384 ], [ 0, %378 ]
  %388 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %386, i64 0, i32 0
  store i32 1, i32* %388, align 4, !tbaa !135
  %389 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %386, i64 0, i32 1, i64 0
  store i32 %385, i32* %389, align 4, !tbaa !32
  %390 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %386, i64 0, i32 2
  %391 = bitcast i32* %390 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %391, align 4, !tbaa !32
  %392 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %386, i64 1
  %393 = add nuw nsw i32 %385, 1
  %394 = add i32 %387, 1
  %395 = icmp eq i32 %394, %346
  br i1 %395, label %396, label %384, !llvm.loop !216

396:                                              ; preds = %384, %378
  %397 = phi %struct.jpeg_scan_info* [ %379, %378 ], [ %386, %384 ]
  %398 = phi %struct.jpeg_scan_info* [ %380, %378 ], [ %392, %384 ]
  br i1 %244, label %411, label %403

399:                                              ; preds = %114, %217
  %400 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1, i32 0
  store i32 %3, i32* %400, align 4, !tbaa !135
  %401 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1, i32 3
  store i32 0, i32* %401, align 4, !tbaa !138
  %402 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 1, i32 2
  store i32 0, i32* %402, align 4, !tbaa !137
  br label %569

403:                                              ; preds = %239, %396
  %404 = phi i1 [ true, %396 ], [ false, %239 ]
  %405 = phi %struct.jpeg_scan_info* [ %398, %396 ], [ %240, %239 ]
  %406 = add i32 %3, -1
  %407 = and i32 %3, 3
  %408 = icmp ult i32 %406, 3
  br i1 %408, label %516, label %409

409:                                              ; preds = %403
  %410 = and i32 %3, -4
  br label %489

411:                                              ; preds = %396
  %412 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %398, i64 0, i32 0
  store i32 %3, i32* %412, align 4, !tbaa !135
  %413 = zext i32 %3 to i64
  %414 = icmp ult i32 %3, 8
  br i1 %414, label %477, label %415

415:                                              ; preds = %411
  %416 = and i64 %413, 4294967288
  %417 = add nsw i64 %416, -8
  %418 = lshr exact i64 %417, 3
  %419 = add nuw nsw i64 %418, 1
  %420 = and i64 %419, 3
  %421 = icmp ult i64 %417, 24
  br i1 %421, label %458, label %422

422:                                              ; preds = %415
  %423 = and i64 %419, 4611686018427387900
  br label %424

424:                                              ; preds = %424, %422
  %425 = phi i64 [ 0, %422 ], [ %454, %424 ]
  %426 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %422 ], [ %455, %424 ]
  %427 = phi i64 [ 0, %422 ], [ %456, %424 ]
  %428 = add <4 x i32> %426, <i32 4, i32 4, i32 4, i32 4>
  %429 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 1, i64 %425
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %426, <4 x i32>* %430, align 4, !tbaa !32
  %431 = getelementptr inbounds i32, i32* %429, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  store <4 x i32> %428, <4 x i32>* %432, align 4, !tbaa !32
  %433 = or i64 %425, 8
  %434 = add <4 x i32> %426, <i32 8, i32 8, i32 8, i32 8>
  %435 = add <4 x i32> %426, <i32 12, i32 12, i32 12, i32 12>
  %436 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 1, i64 %433
  %437 = bitcast i32* %436 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %437, align 4, !tbaa !32
  %438 = getelementptr inbounds i32, i32* %436, i64 4
  %439 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %435, <4 x i32>* %439, align 4, !tbaa !32
  %440 = or i64 %425, 16
  %441 = add <4 x i32> %426, <i32 16, i32 16, i32 16, i32 16>
  %442 = add <4 x i32> %426, <i32 20, i32 20, i32 20, i32 20>
  %443 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 1, i64 %440
  %444 = bitcast i32* %443 to <4 x i32>*
  store <4 x i32> %441, <4 x i32>* %444, align 4, !tbaa !32
  %445 = getelementptr inbounds i32, i32* %443, i64 4
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> %442, <4 x i32>* %446, align 4, !tbaa !32
  %447 = or i64 %425, 24
  %448 = add <4 x i32> %426, <i32 24, i32 24, i32 24, i32 24>
  %449 = add <4 x i32> %426, <i32 28, i32 28, i32 28, i32 28>
  %450 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 1, i64 %447
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> %448, <4 x i32>* %451, align 4, !tbaa !32
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %453, align 4, !tbaa !32
  %454 = add nuw i64 %425, 32
  %455 = add <4 x i32> %426, <i32 32, i32 32, i32 32, i32 32>
  %456 = add i64 %427, 4
  %457 = icmp eq i64 %456, %423
  br i1 %457, label %458, label %424, !llvm.loop !217

458:                                              ; preds = %424, %415
  %459 = phi i64 [ 0, %415 ], [ %454, %424 ]
  %460 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %415 ], [ %455, %424 ]
  %461 = icmp eq i64 %420, 0
  br i1 %461, label %475, label %462

462:                                              ; preds = %458, %462
  %463 = phi i64 [ %471, %462 ], [ %459, %458 ]
  %464 = phi <4 x i32> [ %472, %462 ], [ %460, %458 ]
  %465 = phi i64 [ %473, %462 ], [ 0, %458 ]
  %466 = add <4 x i32> %464, <i32 4, i32 4, i32 4, i32 4>
  %467 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 1, i64 %463
  %468 = bitcast i32* %467 to <4 x i32>*
  store <4 x i32> %464, <4 x i32>* %468, align 4, !tbaa !32
  %469 = getelementptr inbounds i32, i32* %467, i64 4
  %470 = bitcast i32* %469 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %470, align 4, !tbaa !32
  %471 = add nuw i64 %463, 8
  %472 = add <4 x i32> %464, <i32 8, i32 8, i32 8, i32 8>
  %473 = add i64 %465, 1
  %474 = icmp eq i64 %473, %420
  br i1 %474, label %475, label %462, !llvm.loop !218

475:                                              ; preds = %462, %458
  %476 = icmp eq i64 %416, %413
  br i1 %476, label %485, label %477

477:                                              ; preds = %411, %475
  %478 = phi i64 [ 0, %411 ], [ %416, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %483, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 1, i64 %480
  %482 = trunc i64 %480 to i32
  store i32 %482, i32* %481, align 4, !tbaa !32
  %483 = add nuw nsw i64 %480, 1
  %484 = icmp eq i64 %483, %413
  br i1 %484, label %485, label %479, !llvm.loop !219

485:                                              ; preds = %479, %475
  %486 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 1, i32 2
  %487 = bitcast i32* %486 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %487, align 4, !tbaa !32
  %488 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %397, i64 2
  br label %535

489:                                              ; preds = %489, %409
  %490 = phi i32 [ 0, %409 ], [ %513, %489 ]
  %491 = phi %struct.jpeg_scan_info* [ %405, %409 ], [ %512, %489 ]
  %492 = phi i32 [ 0, %409 ], [ %514, %489 ]
  %493 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 0, i32 0
  store i32 1, i32* %493, align 4, !tbaa !135
  %494 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 0, i32 1, i64 0
  store i32 %490, i32* %494, align 4, !tbaa !32
  %495 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 0, i32 2
  %496 = bitcast i32* %495 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %496, align 4, !tbaa !32
  %497 = or i32 %490, 1
  %498 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 1, i32 0
  store i32 1, i32* %498, align 4, !tbaa !135
  %499 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 1, i32 1, i64 0
  store i32 %497, i32* %499, align 4, !tbaa !32
  %500 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 1, i32 2
  %501 = bitcast i32* %500 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %501, align 4, !tbaa !32
  %502 = or i32 %490, 2
  %503 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 2, i32 0
  store i32 1, i32* %503, align 4, !tbaa !135
  %504 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 2, i32 1, i64 0
  store i32 %502, i32* %504, align 4, !tbaa !32
  %505 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 2, i32 2
  %506 = bitcast i32* %505 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %506, align 4, !tbaa !32
  %507 = or i32 %490, 3
  %508 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 3, i32 0
  store i32 1, i32* %508, align 4, !tbaa !135
  %509 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 3, i32 1, i64 0
  store i32 %507, i32* %509, align 4, !tbaa !32
  %510 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 3, i32 2
  %511 = bitcast i32* %510 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %511, align 4, !tbaa !32
  %512 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %491, i64 4
  %513 = add nuw nsw i32 %490, 4
  %514 = add i32 %492, 4
  %515 = icmp eq i32 %514, %410
  br i1 %515, label %516, label %489, !llvm.loop !212

516:                                              ; preds = %489, %403
  %517 = phi %struct.jpeg_scan_info* [ undef, %403 ], [ %512, %489 ]
  %518 = phi i32 [ 0, %403 ], [ %513, %489 ]
  %519 = phi %struct.jpeg_scan_info* [ %405, %403 ], [ %512, %489 ]
  %520 = icmp eq i32 %407, 0
  br i1 %520, label %533, label %521

521:                                              ; preds = %516, %521
  %522 = phi i32 [ %530, %521 ], [ %518, %516 ]
  %523 = phi %struct.jpeg_scan_info* [ %529, %521 ], [ %519, %516 ]
  %524 = phi i32 [ %531, %521 ], [ 0, %516 ]
  %525 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %523, i64 0, i32 0
  store i32 1, i32* %525, align 4, !tbaa !135
  %526 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %523, i64 0, i32 1, i64 0
  store i32 %522, i32* %526, align 4, !tbaa !32
  %527 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %523, i64 0, i32 2
  %528 = bitcast i32* %527 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %528, align 4, !tbaa !32
  %529 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %523, i64 1
  %530 = add nuw nsw i32 %522, 1
  %531 = add i32 %524, 1
  %532 = icmp eq i32 %531, %407
  br i1 %532, label %533, label %521, !llvm.loop !220

533:                                              ; preds = %521, %516
  %534 = phi %struct.jpeg_scan_info* [ %517, %516 ], [ %529, %521 ]
  br i1 %404, label %535, label %589

535:                                              ; preds = %485, %533
  %536 = phi %struct.jpeg_scan_info* [ %534, %533 ], [ %488, %485 ]
  %537 = add i32 %3, -1
  %538 = and i32 %3, 3
  %539 = icmp ult i32 %537, 3
  br i1 %539, label %573, label %540

540:                                              ; preds = %535
  %541 = and i32 %3, -4
  br label %542

542:                                              ; preds = %542, %540
  %543 = phi i32 [ 0, %540 ], [ %566, %542 ]
  %544 = phi %struct.jpeg_scan_info* [ %536, %540 ], [ %565, %542 ]
  %545 = phi i32 [ 0, %540 ], [ %567, %542 ]
  %546 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 0, i32 0
  store i32 1, i32* %546, align 4, !tbaa !135
  %547 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 0, i32 1, i64 0
  store i32 %543, i32* %547, align 4, !tbaa !32
  %548 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 0, i32 2
  %549 = bitcast i32* %548 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %549, align 4, !tbaa !32
  %550 = or i32 %543, 1
  %551 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 1, i32 0
  store i32 1, i32* %551, align 4, !tbaa !135
  %552 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 1, i32 1, i64 0
  store i32 %550, i32* %552, align 4, !tbaa !32
  %553 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 1, i32 2
  %554 = bitcast i32* %553 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %554, align 4, !tbaa !32
  %555 = or i32 %543, 2
  %556 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 2, i32 0
  store i32 1, i32* %556, align 4, !tbaa !135
  %557 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 2, i32 1, i64 0
  store i32 %555, i32* %557, align 4, !tbaa !32
  %558 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 2, i32 2
  %559 = bitcast i32* %558 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %559, align 4, !tbaa !32
  %560 = or i32 %543, 3
  %561 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 3, i32 0
  store i32 1, i32* %561, align 4, !tbaa !135
  %562 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 3, i32 1, i64 0
  store i32 %560, i32* %562, align 4, !tbaa !32
  %563 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 3, i32 2
  %564 = bitcast i32* %563 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %564, align 4, !tbaa !32
  %565 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %544, i64 4
  %566 = add nuw nsw i32 %543, 4
  %567 = add i32 %545, 4
  %568 = icmp eq i32 %567, %541
  br i1 %568, label %573, label %542, !llvm.loop !212

569:                                              ; preds = %61, %399
  %570 = phi i64 [ 9, %61 ], [ 1, %399 ]
  %571 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 %570, i32 4
  store i32 1, i32* %571, align 4, !tbaa !139
  %572 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %53, i64 %570, i32 5
  store i32 0, i32* %572, align 4, !tbaa !140
  br label %589

573:                                              ; preds = %542, %535
  %574 = phi i32 [ 0, %535 ], [ %566, %542 ]
  %575 = phi %struct.jpeg_scan_info* [ %536, %535 ], [ %565, %542 ]
  %576 = icmp eq i32 %538, 0
  br i1 %576, label %589, label %577

577:                                              ; preds = %573, %577
  %578 = phi i32 [ %586, %577 ], [ %574, %573 ]
  %579 = phi %struct.jpeg_scan_info* [ %585, %577 ], [ %575, %573 ]
  %580 = phi i32 [ %587, %577 ], [ 0, %573 ]
  %581 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %579, i64 0, i32 0
  store i32 1, i32* %581, align 4, !tbaa !135
  %582 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %579, i64 0, i32 1, i64 0
  store i32 %578, i32* %582, align 4, !tbaa !32
  %583 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %579, i64 0, i32 2
  %584 = bitcast i32* %583 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %584, align 4, !tbaa !32
  %585 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %579, i64 1
  %586 = add nuw nsw i32 %578, 1
  %587 = add i32 %580, 1
  %588 = icmp eq i32 %587, %538
  br i1 %588, label %589, label %577, !llvm.loop !221

589:                                              ; preds = %573, %577, %569, %533
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_stdio_dest(%struct.jpeg_compress_struct* noundef %0, %struct._IO_FILE* noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %4 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %5 = icmp eq %struct.jpeg_destination_mgr* %4, null
  %6 = bitcast %struct.jpeg_destination_mgr* %4 to %struct.my_destination_mgr*
  br i1 %5, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %9 = bitcast %struct.jpeg_memory_mgr** %8 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %10 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %9, align 8, !tbaa !36
  %11 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %10, align 8, !tbaa !44
  %12 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %13 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %11(%struct.jpeg_common_struct* noundef %12, i32 noundef 0, i64 noundef 56) #27
  %14 = bitcast %struct.jpeg_destination_mgr** %3 to i8**
  store i8* %13, i8** %14, align 8, !tbaa !156
  %15 = bitcast i8* %13 to %struct.my_destination_mgr*
  br label %16

16:                                               ; preds = %7, %2
  %17 = phi %struct.my_destination_mgr* [ %15, %7 ], [ %6, %2 ]
  %18 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %17, i64 0, i32 0, i32 2
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @init_destination to void (...)*), void (...)** %18, align 8, !tbaa !222
  %19 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %17, i64 0, i32 0, i32 3
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*)* @empty_output_buffer to i32 (...)*), i32 (...)** %19, align 8, !tbaa !224
  %20 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %17, i64 0, i32 0, i32 4
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @term_destination to void (...)*), void (...)** %20, align 8, !tbaa !225
  %21 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %17, i64 0, i32 1
  store %struct._IO_FILE* %1, %struct._IO_FILE** %21, align 8, !tbaa !226
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @init_destination(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = bitcast %struct.jpeg_destination_mgr** %2 to %struct.my_destination_mgr**
  %4 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8, !tbaa !156
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %6 = bitcast %struct.jpeg_memory_mgr** %5 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %7 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %6, align 8, !tbaa !36
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %7, align 8, !tbaa !44
  %9 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %10 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %8(%struct.jpeg_common_struct* noundef %9, i32 noundef 1, i64 noundef 4096) #27
  %11 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 2
  store i8* %10, i8** %11, align 8, !tbaa !227
  %12 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 0, i32 0
  store i8* %10, i8** %12, align 8, !tbaa !228
  %13 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 0, i32 1
  store i64 4096, i64* %13, align 8, !tbaa !229
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @empty_output_buffer(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = bitcast %struct.jpeg_destination_mgr** %2 to %struct.my_destination_mgr**
  %4 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8, !tbaa !156
  %5 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8, !tbaa !227
  %7 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !tbaa !226
  %9 = tail call i64 @fwrite(i8* noundef %6, i64 noundef 1, i64 noundef 4096, %struct._IO_FILE* noundef %8)
  %10 = icmp eq i64 %9, 4096
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 37, i32* %14, align 8, !tbaa !19
  %15 = bitcast %struct.jpeg_error_mgr* %13 to void (%struct.jpeg_common_struct*, ...)**
  %16 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %15, align 8, !tbaa !20
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %16(%struct.jpeg_common_struct* noundef %17) #27
  br label %18

18:                                               ; preds = %11, %1
  %19 = load i8*, i8** %5, align 8, !tbaa !227
  %20 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !tbaa !228
  %21 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 0, i32 1
  store i64 4096, i64* %21, align 8, !tbaa !229
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @term_destination(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = bitcast %struct.jpeg_destination_mgr** %2 to %struct.my_destination_mgr**
  %4 = load %struct.my_destination_mgr*, %struct.my_destination_mgr** %3, align 8, !tbaa !156
  %5 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !229
  %7 = sub i64 4096, %6
  %8 = icmp eq i64 %6, 4096
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8, !tbaa !226
  %14 = tail call i64 @fwrite(i8* noundef %11, i64 noundef 1, i64 noundef %7, %struct._IO_FILE* noundef %13)
  %15 = icmp eq i64 %14, %7
  br i1 %15, label %23, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i64 0, i32 5
  store i32 37, i32* %19, align 8, !tbaa !19
  %20 = bitcast %struct.jpeg_error_mgr* %18 to void (%struct.jpeg_common_struct*, ...)**
  %21 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %20, align 8, !tbaa !20
  %22 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %21(%struct.jpeg_common_struct* noundef %22) #27
  br label %23

23:                                               ; preds = %9, %16, %1
  %24 = getelementptr inbounds %struct.my_destination_mgr, %struct.my_destination_mgr* %4, i64 0, i32 1
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8, !tbaa !226
  %26 = tail call i32 @fflush(%struct._IO_FILE* noundef %25)
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8, !tbaa !226
  %28 = tail call i32 @ferror(%struct._IO_FILE* noundef %27) #27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %31, align 8, !tbaa !8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 5
  store i32 37, i32* %33, align 8, !tbaa !19
  %34 = bitcast %struct.jpeg_error_mgr* %32 to void (%struct.jpeg_common_struct*, ...)**
  %35 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %34, align 8, !tbaa !20
  %36 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %35(%struct.jpeg_common_struct* noundef %36) #27
  br label %37

37:                                               ; preds = %30, %23
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fflush(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare dso_local noundef i32 @ferror(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define dso_local void @jinit_compress_master(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  tail call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jinit_c_master_control to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef %0, i32 noundef 0) #27
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 24
  %3 = load i32, i32* %2, align 8, !tbaa !189
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_color_converter to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_downsampler to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  tail call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jinit_c_prep_controller to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0) #27
  br label %6

6:                                                ; preds = %5, %1
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_forward_dct to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %8 = load i32, i32* %7, align 4, !tbaa !230
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 1, i32* %13, align 8, !tbaa !19
  %14 = bitcast %struct.jpeg_error_mgr* %12 to void (%struct.jpeg_common_struct*, ...)**
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef %16) #27
  br label %23

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  %19 = load i32, i32* %18, align 4, !tbaa !231
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_phuff_encoder to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  br label %23

22:                                               ; preds = %17
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_huff_encoder to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  br label %23

23:                                               ; preds = %21, %22, %10
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  %25 = load i32, i32* %24, align 8, !tbaa !143
  %26 = icmp sgt i32 %25, 1
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %29 = load i32, i32* %28, align 8, !tbaa !39
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i32
  br label %32

32:                                               ; preds = %27, %23
  %33 = phi i32 [ 1, %23 ], [ %31, %27 ]
  tail call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jinit_c_coef_controller to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %33) #27
  tail call void (%struct.jpeg_compress_struct*, i32, ...) bitcast (void (%struct.jpeg_compress_struct*, i32)* @jinit_c_main_controller to void (%struct.jpeg_compress_struct*, i32, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0) #27
  tail call void (%struct.jpeg_compress_struct*, ...) bitcast (void (%struct.jpeg_compress_struct*)* @jinit_marker_writer to void (%struct.jpeg_compress_struct*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %35 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %34, align 8, !tbaa !36
  %36 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %35, i64 0, i32 6
  %37 = bitcast void (...)** %36 to void (%struct.jpeg_common_struct*, ...)**
  %38 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %37, align 8, !tbaa !232
  %39 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %38(%struct.jpeg_common_struct* noundef %39) #27
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %41 = bitcast %struct.jpeg_marker_writer** %40 to void (%struct.jpeg_compress_struct*, ...)***
  %42 = load void (%struct.jpeg_compress_struct*, ...)**, void (%struct.jpeg_compress_struct*, ...)*** %41, align 8, !tbaa !178
  %43 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %42, align 8, !tbaa !233
  tail call void (%struct.jpeg_compress_struct*, ...) %43(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_c_master_control(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = alloca [10 x i32], align 16
  %4 = alloca [10 x [64 x i32]], align 16
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %6 = bitcast %struct.jpeg_memory_mgr** %5 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %7 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %6, align 8, !tbaa !36
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %7, align 8, !tbaa !44
  %9 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %10 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %8(%struct.jpeg_common_struct* noundef %9, i32 noundef 1, i64 noundef 48) #27
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %12 = bitcast %struct.jpeg_comp_master** %11 to i8**
  store i8* %10, i8** %12, align 8, !tbaa !164
  %13 = bitcast i8* %10 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @prepare_for_pass to void (...)*), void (...)** %13, align 8, !tbaa !234
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = bitcast i8* %14 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @pass_startup to void (...)*), void (...)** %15, align 8, !tbaa !236
  %16 = getelementptr inbounds i8, i8* %10, i64 16
  %17 = bitcast i8* %16 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @finish_pass_master to void (...)*), void (...)** %17, align 8, !tbaa !237
  %18 = getelementptr inbounds i8, i8* %10, i64 28
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4, !tbaa !238
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4, !tbaa !25
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %25 = load i32, i32* %24, align 8, !tbaa !50
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %29 = load i32, i32* %28, align 4, !tbaa !202
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %33 = load i32, i32* %32, align 8, !tbaa !51
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %31, %27, %23, %2
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8, !tbaa !8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 5
  store i32 32, i32* %38, align 8, !tbaa !19
  %39 = bitcast %struct.jpeg_error_mgr* %37 to void (%struct.jpeg_common_struct*, ...)**
  %40 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %39, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %40(%struct.jpeg_common_struct* noundef nonnull %9) #27
  %41 = load i32, i32* %20, align 4, !tbaa !25
  br label %42

42:                                               ; preds = %35, %31
  %43 = phi i32 [ %41, %35 ], [ %21, %31 ]
  %44 = icmp ugt i32 %43, 65500
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %47 = load i32, i32* %46, align 8, !tbaa !50
  %48 = icmp ugt i32 %47, 65500
  br i1 %48, label %49, label %59

49:                                               ; preds = %45, %42
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8, !tbaa !8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 5
  store i32 41, i32* %52, align 8, !tbaa !19
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 6, i32 0, i64 0
  store i32 65500, i32* %53, align 4, !tbaa !7
  %54 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %55 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %54, align 8, !tbaa !8
  %56 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %55, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %56(%struct.jpeg_common_struct* noundef nonnull %9) #27
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 8, !tbaa !50
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i32 [ %58, %49 ], [ %47, %45 ]
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %62 = zext i32 %60 to i64
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %64 = load i32, i32* %63, align 8, !tbaa !51
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %65, %62
  %67 = icmp ult i64 %66, 4294967296
  br i1 %67, label %74, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %69, align 8, !tbaa !8
  %71 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i64 0, i32 5
  store i32 70, i32* %71, align 8, !tbaa !19
  %72 = bitcast %struct.jpeg_error_mgr* %70 to void (%struct.jpeg_common_struct*, ...)**
  %73 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %72, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %73(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %74

74:                                               ; preds = %68, %59
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  %76 = load i32, i32* %75, align 8, !tbaa !49
  %77 = icmp eq i32 %76, 8
  br i1 %77, label %86, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %79, align 8, !tbaa !8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 5
  store i32 15, i32* %81, align 8, !tbaa !19
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 6, i32 0, i64 0
  store i32 %76, i32* %82, align 4, !tbaa !7
  %83 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %84 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %83, align 8, !tbaa !8
  %85 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %84, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %85(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %86

86:                                               ; preds = %78, %74
  %87 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %88 = load i32, i32* %87, align 4, !tbaa !202
  %89 = icmp sgt i32 %88, 10
  br i1 %89, label %90, label %101

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %92 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %91, align 8, !tbaa !8
  %93 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %92, i64 0, i32 5
  store i32 26, i32* %93, align 8, !tbaa !19
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %92, i64 0, i32 6, i32 0, i64 0
  store i32 %88, i32* %94, align 4, !tbaa !7
  %95 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %91, align 8, !tbaa !8
  %96 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %96, align 4, !tbaa !7
  %97 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %98 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %97, align 8, !tbaa !8
  %99 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %98, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %99(%struct.jpeg_common_struct* noundef nonnull %9) #27
  %100 = load i32, i32* %87, align 4, !tbaa !202
  br label %101

101:                                              ; preds = %90, %86
  %102 = phi i32 [ %100, %90 ], [ %88, %86 ]
  %103 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  store i32 1, i32* %103, align 8, !tbaa !239
  %104 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  store i32 1, i32* %104, align 4, !tbaa !195
  %105 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %106 = icmp sgt i32 %102, 0
  br i1 %106, label %107, label %211

107:                                              ; preds = %101
  %108 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %105, align 8, !tbaa !145
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %110

110:                                              ; preds = %136, %107
  %111 = phi i32 [ %102, %107 ], [ %137, %136 ]
  %112 = phi i32 [ 1, %107 ], [ %145, %136 ]
  %113 = phi i32 [ 1, %107 ], [ %143, %136 ]
  %114 = phi i32 [ 0, %107 ], [ %146, %136 ]
  %115 = phi %struct.jpeg_component_info* [ %108, %107 ], [ %147, %136 ]
  %116 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i64 0, i32 2
  %117 = load i32, i32* %116, align 8, !tbaa !150
  %118 = add i32 %117, -5
  %119 = icmp ult i32 %118, -4
  br i1 %119, label %125, label %120

120:                                              ; preds = %110
  %121 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i64 0, i32 3
  %122 = load i32, i32* %121, align 4, !tbaa !151
  %123 = add i32 %122, -5
  %124 = icmp ult i32 %123, -4
  br i1 %124, label %125, label %136

125:                                              ; preds = %120, %110
  %126 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %109, align 8, !tbaa !8
  %127 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %126, i64 0, i32 5
  store i32 18, i32* %127, align 8, !tbaa !19
  %128 = bitcast %struct.jpeg_error_mgr* %126 to void (%struct.jpeg_common_struct*, ...)**
  %129 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %128, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %129(%struct.jpeg_common_struct* noundef nonnull %9) #27
  %130 = load i32, i32* %103, align 8, !tbaa !239
  %131 = load i32, i32* %116, align 8, !tbaa !150
  %132 = load i32, i32* %104, align 4, !tbaa !195
  %133 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i64 0, i32 3
  %134 = load i32, i32* %133, align 4, !tbaa !151
  %135 = load i32, i32* %87, align 4, !tbaa !202
  br label %136

136:                                              ; preds = %125, %120
  %137 = phi i32 [ %111, %120 ], [ %135, %125 ]
  %138 = phi i32 [ %122, %120 ], [ %134, %125 ]
  %139 = phi i32 [ %112, %120 ], [ %132, %125 ]
  %140 = phi i32 [ %117, %120 ], [ %131, %125 ]
  %141 = phi i32 [ %113, %120 ], [ %130, %125 ]
  %142 = icmp sgt i32 %141, %140
  %143 = select i1 %142, i32 %141, i32 %140
  store i32 %143, i32* %103, align 8, !tbaa !239
  %144 = icmp sgt i32 %139, %138
  %145 = select i1 %144, i32 %139, i32 %138
  store i32 %145, i32* %104, align 4, !tbaa !195
  %146 = add nuw nsw i32 %114, 1
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i64 1
  %148 = icmp slt i32 %146, %137
  br i1 %148, label %110, label %149, !llvm.loop !240

149:                                              ; preds = %136
  %150 = icmp sgt i32 %137, 0
  br i1 %150, label %151, label %211

151:                                              ; preds = %149
  %152 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %105, align 8, !tbaa !145
  br label %153

153:                                              ; preds = %206, %151
  %154 = phi i32 [ %208, %206 ], [ %143, %151 ]
  %155 = phi i32 [ %203, %206 ], [ 0, %151 ]
  %156 = phi %struct.jpeg_component_info* [ %207, %206 ], [ %152, %151 ]
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 1
  store i32 %155, i32* %157, align 4, !tbaa !241
  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 9
  store i32 8, i32* %158, align 4, !tbaa !242
  %159 = load i32, i32* %61, align 8, !tbaa !50
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 2
  %162 = load i32, i32* %161, align 8, !tbaa !150
  %163 = sext i32 %162 to i64
  %164 = mul nsw i64 %163, %160
  %165 = shl nsw i32 %154, 3
  %166 = sext i32 %165 to i64
  %167 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %164, i64 noundef %166) #27
  %168 = trunc i64 %167 to i32
  %169 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 7
  store i32 %168, i32* %169, align 4, !tbaa !243
  %170 = load i32, i32* %20, align 4, !tbaa !25
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 3
  %173 = load i32, i32* %172, align 4, !tbaa !151
  %174 = sext i32 %173 to i64
  %175 = mul nsw i64 %174, %171
  %176 = load i32, i32* %104, align 4, !tbaa !195
  %177 = shl nsw i32 %176, 3
  %178 = sext i32 %177 to i64
  %179 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %175, i64 noundef %178) #27
  %180 = trunc i64 %179 to i32
  %181 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 8
  store i32 %180, i32* %181, align 8, !tbaa !244
  %182 = load i32, i32* %61, align 8, !tbaa !50
  %183 = zext i32 %182 to i64
  %184 = load i32, i32* %161, align 8, !tbaa !150
  %185 = sext i32 %184 to i64
  %186 = mul nsw i64 %185, %183
  %187 = load i32, i32* %103, align 8, !tbaa !239
  %188 = sext i32 %187 to i64
  %189 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %186, i64 noundef %188) #27
  %190 = trunc i64 %189 to i32
  %191 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 10
  store i32 %190, i32* %191, align 8, !tbaa !245
  %192 = load i32, i32* %20, align 4, !tbaa !25
  %193 = zext i32 %192 to i64
  %194 = load i32, i32* %172, align 4, !tbaa !151
  %195 = sext i32 %194 to i64
  %196 = mul nsw i64 %195, %193
  %197 = load i32, i32* %104, align 4, !tbaa !195
  %198 = sext i32 %197 to i64
  %199 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %196, i64 noundef %198) #27
  %200 = trunc i64 %199 to i32
  %201 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 11
  store i32 %200, i32* %201, align 4, !tbaa !246
  %202 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 0, i32 12
  store i32 1, i32* %202, align 8, !tbaa !247
  %203 = add nuw nsw i32 %155, 1
  %204 = load i32, i32* %87, align 4, !tbaa !202
  %205 = icmp slt i32 %203, %204
  br i1 %205, label %206, label %209, !llvm.loop !248

206:                                              ; preds = %153
  %207 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 1
  %208 = load i32, i32* %103, align 8, !tbaa !239
  br label %153

209:                                              ; preds = %153
  %210 = load i32, i32* %104, align 4, !tbaa !195
  br label %211

211:                                              ; preds = %101, %149, %209
  %212 = phi i32 [ %210, %209 ], [ %145, %149 ], [ 1, %101 ]
  %213 = load i32, i32* %20, align 4, !tbaa !25
  %214 = zext i32 %213 to i64
  %215 = shl nsw i32 %212, 3
  %216 = sext i32 %215 to i64
  %217 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %214, i64 noundef %216) #27
  %218 = trunc i64 %217 to i32
  %219 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  store i32 %218, i32* %219, align 8, !tbaa !169
  %220 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %221 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %220, align 8, !tbaa !142
  %222 = icmp eq %struct.jpeg_scan_info* %221, null
  br i1 %222, label %509, label %223

223:                                              ; preds = %211
  %224 = bitcast [10 x i32]* %3 to i8*
  %225 = bitcast [10 x [64 x i32]]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %224) #27
  call void @llvm.lifetime.start.p0i8(i64 2560, i8* nonnull %225) #27
  %226 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  %227 = load i32, i32* %226, align 8, !tbaa !143
  %228 = icmp slt i32 %227, 1
  br i1 %228, label %229, label %238

229:                                              ; preds = %223
  %230 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %231 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %230, align 8, !tbaa !8
  %232 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %231, i64 0, i32 5
  store i32 19, i32* %232, align 8, !tbaa !19
  %233 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %231, i64 0, i32 6, i32 0, i64 0
  store i32 0, i32* %233, align 4, !tbaa !7
  %234 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %235 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %234, align 8, !tbaa !8
  %236 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %235, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %236(%struct.jpeg_common_struct* noundef nonnull %9) #27
  %237 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %220, align 8, !tbaa !142
  br label %238

238:                                              ; preds = %229, %223
  %239 = phi %struct.jpeg_scan_info* [ %237, %229 ], [ %221, %223 ]
  %240 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %239, i64 0, i32 2
  %241 = load i32, i32* %240, align 4, !tbaa !137
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %238
  %244 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %239, i64 0, i32 3
  %245 = load i32, i32* %244, align 4, !tbaa !138
  %246 = icmp eq i32 %245, 63
  br i1 %246, label %254, label %247

247:                                              ; preds = %243, %238
  %248 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  store i32 1, i32* %248, align 4, !tbaa !231
  %249 = load i32, i32* %87, align 4, !tbaa !202
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %251, label %261

251:                                              ; preds = %247
  %252 = zext i32 %249 to i64
  %253 = shl nuw nsw i64 %252, 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %225, i8 -1, i64 %253, i1 false) #27, !tbaa !32
  br label %261

254:                                              ; preds = %243
  %255 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  store i32 0, i32* %255, align 4, !tbaa !231
  %256 = load i32, i32* %87, align 4, !tbaa !202
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %254
  %259 = zext i32 %256 to i64
  %260 = shl nuw nsw i64 %259, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %224, i8 0, i64 %260, i1 false) #27, !tbaa !32
  br label %261

261:                                              ; preds = %258, %254, %251, %247
  %262 = phi i32 [ %256, %258 ], [ %249, %247 ], [ %256, %254 ], [ %249, %251 ]
  %263 = phi i32 [ 0, %258 ], [ 1, %247 ], [ 0, %254 ], [ 1, %251 ]
  %264 = load i32, i32* %226, align 8, !tbaa !143
  %265 = icmp slt i32 %264, 1
  br i1 %265, label %464, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %268 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %269 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  br label %270

270:                                              ; preds = %456, %266
  %271 = phi %struct.jpeg_scan_info* [ %239, %266 ], [ %457, %456 ]
  %272 = phi i32 [ 1, %266 ], [ %458, %456 ]
  %273 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 0
  %274 = load i32, i32* %273, align 4, !tbaa !135
  %275 = add i32 %274, -5
  %276 = icmp ult i32 %275, -4
  br i1 %276, label %277, label %286

277:                                              ; preds = %270
  %278 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %279 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %278, i64 0, i32 5
  store i32 26, i32* %279, align 8, !tbaa !19
  %280 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %278, i64 0, i32 6, i32 0, i64 0
  store i32 %274, i32* %280, align 4, !tbaa !7
  %281 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %282 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %281, i64 0, i32 6, i32 0, i64 1
  store i32 4, i32* %282, align 4, !tbaa !7
  %283 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %284 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %283, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %284(%struct.jpeg_common_struct* noundef nonnull %9) #27
  %285 = icmp sgt i32 %274, 0
  br i1 %285, label %286, label %331

286:                                              ; preds = %277, %270
  %287 = zext i32 %274 to i64
  %288 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 1, i64 0
  %289 = load i32, i32* %288, align 4, !tbaa !32
  %290 = icmp slt i32 %289, 0
  br i1 %290, label %294, label %291

291:                                              ; preds = %286
  %292 = load i32, i32* %87, align 4, !tbaa !202
  %293 = icmp slt i32 %289, %292
  br i1 %293, label %300, label %294

294:                                              ; preds = %291, %286
  %295 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %296 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %295, i64 0, i32 5
  store i32 19, i32* %296, align 8, !tbaa !19
  %297 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %295, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %297, align 4, !tbaa !7
  %298 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %299 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %298, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %299(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %300

300:                                              ; preds = %294, %291
  %301 = icmp eq i32 %274, 1
  br i1 %301, label %331, label %302

302:                                              ; preds = %300, %328
  %303 = phi i64 [ %329, %328 ], [ 1, %300 ]
  %304 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 1, i64 %303
  %305 = load i32, i32* %304, align 4, !tbaa !32
  %306 = icmp slt i32 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %302
  %308 = load i32, i32* %87, align 4, !tbaa !202
  %309 = icmp slt i32 %305, %308
  br i1 %309, label %316, label %310

310:                                              ; preds = %307, %302
  %311 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %312 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %311, i64 0, i32 5
  store i32 19, i32* %312, align 8, !tbaa !19
  %313 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %311, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %313, align 4, !tbaa !7
  %314 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %315 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %314, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %315(%struct.jpeg_common_struct* noundef %9) #27
  br label %316

316:                                              ; preds = %310, %307
  %317 = add nuw i64 %303, 4294967295
  %318 = and i64 %317, 4294967295
  %319 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 1, i64 %318
  %320 = load i32, i32* %319, align 4, !tbaa !32
  %321 = icmp sgt i32 %305, %320
  br i1 %321, label %328, label %322

322:                                              ; preds = %316
  %323 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %324 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %323, i64 0, i32 5
  store i32 19, i32* %324, align 8, !tbaa !19
  %325 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %323, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %325, align 4, !tbaa !7
  %326 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %327 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %326, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %327(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %328

328:                                              ; preds = %322, %316
  %329 = add nuw nsw i64 %303, 1
  %330 = icmp eq i64 %329, %287
  br i1 %330, label %331, label %302, !llvm.loop !249

331:                                              ; preds = %328, %300, %277
  %332 = phi i1 [ false, %277 ], [ true, %300 ], [ true, %328 ]
  %333 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 2
  %334 = load i32, i32* %333, align 4, !tbaa !137
  %335 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 3
  %336 = load i32, i32* %335, align 4, !tbaa !138
  %337 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 4
  %338 = load i32, i32* %337, align 4, !tbaa !139
  %339 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 5
  %340 = load i32, i32* %339, align 4, !tbaa !140
  %341 = load i32, i32* %269, align 4, !tbaa !231
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %422, label %343

343:                                              ; preds = %331
  %344 = icmp ugt i32 %334, 63
  br i1 %344, label %357, label %345

345:                                              ; preds = %343
  %346 = icmp slt i32 %336, %334
  %347 = icmp sgt i32 %336, 63
  %348 = or i1 %346, %347
  %349 = icmp slt i32 %338, 0
  %350 = select i1 %348, i1 true, i1 %349
  %351 = icmp sgt i32 %338, 10
  %352 = select i1 %350, i1 true, i1 %351
  %353 = icmp slt i32 %340, 0
  %354 = select i1 %352, i1 true, i1 %353
  %355 = icmp sgt i32 %340, 10
  %356 = select i1 %354, i1 true, i1 %355
  br i1 %356, label %357, label %363

357:                                              ; preds = %345, %343
  %358 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %359 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %358, i64 0, i32 5
  store i32 17, i32* %359, align 8, !tbaa !19
  %360 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %358, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %360, align 4, !tbaa !7
  %361 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %362 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %361, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %362(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %363

363:                                              ; preds = %357, %345
  %364 = icmp eq i32 %334, 0
  br i1 %364, label %365, label %367

365:                                              ; preds = %363
  %366 = icmp eq i32 %336, 0
  br i1 %366, label %375, label %369

367:                                              ; preds = %363
  %368 = icmp eq i32 %274, 1
  br i1 %368, label %375, label %369

369:                                              ; preds = %367, %365
  %370 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %371 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %370, i64 0, i32 5
  store i32 17, i32* %371, align 8, !tbaa !19
  %372 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %370, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %372, align 4, !tbaa !7
  %373 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %374 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %373, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %374(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %375

375:                                              ; preds = %369, %367, %365
  br i1 %332, label %376, label %456

376:                                              ; preds = %375
  %377 = icmp sgt i32 %334, %336
  %378 = add nsw i32 %338, -1
  %379 = icmp eq i32 %340, %378
  %380 = icmp eq i32 %338, 0
  %381 = sext i32 %334 to i64
  %382 = add i32 %336, 1
  %383 = zext i32 %274 to i64
  br label %384

384:                                              ; preds = %419, %376
  %385 = phi i64 [ 0, %376 ], [ %420, %419 ]
  %386 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 1, i64 %385
  %387 = load i32, i32* %386, align 4, !tbaa !32
  %388 = sext i32 %387 to i64
  br i1 %364, label %399, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %388, i64 0
  %391 = load i32, i32* %390, align 16, !tbaa !32
  %392 = icmp slt i32 %391, 0
  br i1 %392, label %393, label %399

393:                                              ; preds = %389
  %394 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %395 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %394, i64 0, i32 5
  store i32 17, i32* %395, align 8, !tbaa !19
  %396 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %394, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %396, align 4, !tbaa !7
  %397 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %398 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %397, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %398(%struct.jpeg_common_struct* noundef %9) #27
  br label %399

399:                                              ; preds = %393, %389, %384
  br i1 %377, label %419, label %400

400:                                              ; preds = %399, %415
  %401 = phi i64 [ %416, %415 ], [ %381, %399 ]
  %402 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %388, i64 %401
  %403 = load i32, i32* %402, align 4, !tbaa !32
  %404 = icmp slt i32 %403, 0
  br i1 %404, label %405, label %406

405:                                              ; preds = %400
  br i1 %380, label %415, label %409

406:                                              ; preds = %400
  %407 = icmp eq i32 %338, %403
  %408 = select i1 %407, i1 %379, i1 false
  br i1 %408, label %415, label %409

409:                                              ; preds = %406, %405
  %410 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %411 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %410, i64 0, i32 5
  store i32 17, i32* %411, align 8, !tbaa !19
  %412 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %410, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %412, align 4, !tbaa !7
  %413 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %414 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %413, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %414(%struct.jpeg_common_struct* noundef %9) #27
  br label %415

415:                                              ; preds = %409, %406, %405
  store i32 %340, i32* %402, align 4, !tbaa !32
  %416 = add nsw i64 %401, 1
  %417 = trunc i64 %416 to i32
  %418 = icmp eq i32 %382, %417
  br i1 %418, label %419, label %400, !llvm.loop !251

419:                                              ; preds = %415, %399
  %420 = add nuw nsw i64 %385, 1
  %421 = icmp eq i64 %420, %383
  br i1 %421, label %456, label %384, !llvm.loop !252

422:                                              ; preds = %331
  %423 = icmp ne i32 %334, 0
  %424 = icmp ne i32 %336, 63
  %425 = select i1 %423, i1 true, i1 %424
  %426 = icmp ne i32 %338, 0
  %427 = select i1 %425, i1 true, i1 %426
  %428 = icmp ne i32 %340, 0
  %429 = select i1 %427, i1 true, i1 %428
  br i1 %429, label %430, label %436

430:                                              ; preds = %422
  %431 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %432 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %431, i64 0, i32 5
  store i32 17, i32* %432, align 8, !tbaa !19
  %433 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %431, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %433, align 4, !tbaa !7
  %434 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %435 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %434, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %435(%struct.jpeg_common_struct* noundef nonnull %9) #27
  br label %436

436:                                              ; preds = %430, %422
  br i1 %332, label %437, label %456

437:                                              ; preds = %436
  %438 = zext i32 %274 to i64
  br label %439

439:                                              ; preds = %453, %437
  %440 = phi i64 [ 0, %437 ], [ %454, %453 ]
  %441 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 0, i32 1, i64 %440
  %442 = load i32, i32* %441, align 4, !tbaa !32
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4, !tbaa !32
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %453, label %447

447:                                              ; preds = %439
  %448 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8, !tbaa !8
  %449 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %448, i64 0, i32 5
  store i32 19, i32* %449, align 8, !tbaa !19
  %450 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %448, i64 0, i32 6, i32 0, i64 0
  store i32 %272, i32* %450, align 4, !tbaa !7
  %451 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %268, align 8, !tbaa !8
  %452 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %451, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %452(%struct.jpeg_common_struct* noundef %9) #27
  br label %453

453:                                              ; preds = %447, %439
  store i32 1, i32* %444, align 4, !tbaa !32
  %454 = add nuw nsw i64 %440, 1
  %455 = icmp eq i64 %454, %438
  br i1 %455, label %456, label %439, !llvm.loop !253

456:                                              ; preds = %419, %453, %436, %375
  %457 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %271, i64 1
  %458 = add nuw nsw i32 %272, 1
  %459 = load i32, i32* %226, align 8, !tbaa !143
  %460 = icmp slt i32 %272, %459
  br i1 %460, label %270, label %461, !llvm.loop !254

461:                                              ; preds = %456
  %462 = load i32, i32* %269, align 4, !tbaa !231
  %463 = load i32, i32* %87, align 4, !tbaa !202
  br label %464

464:                                              ; preds = %461, %261
  %465 = phi i32 [ %463, %461 ], [ %262, %261 ]
  %466 = phi i32 [ %462, %461 ], [ %263, %261 ]
  %467 = icmp eq i32 %466, 0
  %468 = icmp sgt i32 %465, 0
  br i1 %467, label %472, label %469

469:                                              ; preds = %464
  br i1 %468, label %470, label %512

470:                                              ; preds = %469
  %471 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %475

472:                                              ; preds = %464
  br i1 %468, label %473, label %512

473:                                              ; preds = %472
  %474 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %492

475:                                              ; preds = %487, %470
  %476 = phi i32 [ %465, %470 ], [ %488, %487 ]
  %477 = phi i64 [ 0, %470 ], [ %489, %487 ]
  %478 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %477, i64 0
  %479 = load i32, i32* %478, align 16, !tbaa !32
  %480 = icmp slt i32 %479, 0
  br i1 %480, label %481, label %487

481:                                              ; preds = %475
  %482 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %471, align 8, !tbaa !8
  %483 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %482, i64 0, i32 5
  store i32 45, i32* %483, align 8, !tbaa !19
  %484 = bitcast %struct.jpeg_error_mgr* %482 to void (%struct.jpeg_common_struct*, ...)**
  %485 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %484, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %485(%struct.jpeg_common_struct* noundef %9) #27
  %486 = load i32, i32* %87, align 4, !tbaa !202
  br label %487

487:                                              ; preds = %481, %475
  %488 = phi i32 [ %476, %475 ], [ %486, %481 ]
  %489 = add nuw nsw i64 %477, 1
  %490 = sext i32 %488 to i64
  %491 = icmp slt i64 %489, %490
  br i1 %491, label %475, label %512, !llvm.loop !255

492:                                              ; preds = %504, %473
  %493 = phi i32 [ %465, %473 ], [ %505, %504 ]
  %494 = phi i64 [ 0, %473 ], [ %506, %504 ]
  %495 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %494
  %496 = load i32, i32* %495, align 4, !tbaa !32
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %504

498:                                              ; preds = %492
  %499 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %474, align 8, !tbaa !8
  %500 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %499, i64 0, i32 5
  store i32 45, i32* %500, align 8, !tbaa !19
  %501 = bitcast %struct.jpeg_error_mgr* %499 to void (%struct.jpeg_common_struct*, ...)**
  %502 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %501, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %502(%struct.jpeg_common_struct* noundef %9) #27
  %503 = load i32, i32* %87, align 4, !tbaa !202
  br label %504

504:                                              ; preds = %498, %492
  %505 = phi i32 [ %493, %492 ], [ %503, %498 ]
  %506 = add nuw nsw i64 %494, 1
  %507 = sext i32 %505 to i64
  %508 = icmp slt i64 %506, %507
  br i1 %508, label %492, label %512, !llvm.loop !256

509:                                              ; preds = %211
  %510 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  store i32 0, i32* %510, align 4, !tbaa !231
  %511 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  br label %518

512:                                              ; preds = %487, %504, %472, %469
  call void @llvm.lifetime.end.p0i8(i64 2560, i8* nonnull %225) #27
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %224) #27
  %513 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  %514 = load i32, i32* %513, align 4, !tbaa !231
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %520, label %516

516:                                              ; preds = %512
  %517 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  br label %518

518:                                              ; preds = %516, %509
  %519 = phi i32* [ %511, %509 ], [ %517, %516 ]
  store i32 1, i32* %519, align 8, !tbaa !32
  br label %520

520:                                              ; preds = %518, %512
  %521 = icmp eq i32 %1, 0
  br i1 %521, label %538, label %522

522:                                              ; preds = %520
  %523 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %524 = load i32, i32* %523, align 8, !tbaa !39
  %525 = icmp eq i32 %524, 0
  %526 = getelementptr inbounds i8, i8* %10, i64 32
  %527 = bitcast i8* %526 to i32*
  br i1 %525, label %533, label %528

528:                                              ; preds = %522
  store i32 1, i32* %527, align 8, !tbaa !257
  %529 = getelementptr inbounds i8, i8* %10, i64 44
  %530 = bitcast i8* %529 to i32*
  store i32 0, i32* %530, align 4, !tbaa !258
  %531 = getelementptr inbounds i8, i8* %10, i64 36
  %532 = bitcast i8* %531 to i32*
  store i32 0, i32* %532, align 4, !tbaa !259
  br label %548

533:                                              ; preds = %522
  store i32 2, i32* %527, align 8, !tbaa !257
  %534 = getelementptr inbounds i8, i8* %10, i64 44
  %535 = bitcast i8* %534 to i32*
  store i32 0, i32* %535, align 4, !tbaa !258
  %536 = getelementptr inbounds i8, i8* %10, i64 36
  %537 = bitcast i8* %536 to i32*
  store i32 0, i32* %537, align 4, !tbaa !259
  br label %552

538:                                              ; preds = %520
  %539 = getelementptr inbounds i8, i8* %10, i64 32
  %540 = bitcast i8* %539 to i32*
  store i32 0, i32* %540, align 8, !tbaa !257
  %541 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %542 = load i32, i32* %541, align 8, !tbaa !39
  %543 = icmp eq i32 %542, 0
  %544 = getelementptr inbounds i8, i8* %10, i64 44
  %545 = bitcast i8* %544 to i32*
  store i32 0, i32* %545, align 4, !tbaa !258
  %546 = getelementptr inbounds i8, i8* %10, i64 36
  %547 = bitcast i8* %546 to i32*
  store i32 0, i32* %547, align 4, !tbaa !259
  br i1 %543, label %552, label %548

548:                                              ; preds = %528, %538
  %549 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  %550 = load i32, i32* %549, align 8, !tbaa !143
  %551 = shl nsw i32 %550, 1
  br label %555

552:                                              ; preds = %533, %538
  %553 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  %554 = load i32, i32* %553, align 8, !tbaa !143
  br label %555

555:                                              ; preds = %552, %548
  %556 = phi i32 [ %554, %552 ], [ %551, %548 ]
  %557 = getelementptr inbounds i8, i8* %10, i64 40
  %558 = bitcast i8* %557 to i32*
  store i32 %556, i32* %558, align 8, !tbaa !260
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @prepare_for_pass(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %3 = bitcast %struct.jpeg_comp_master** %2 to %struct.my_comp_master**
  %4 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8, !tbaa !164
  %5 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8, !tbaa !257
  switch i32 %6, label %108 [
    i32 0, label %7
    i32 1, label %52
    i32 2, label %78
  ]

7:                                                ; preds = %1
  tail call fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* noundef nonnull %0)
  tail call fastcc void @per_scan_setup(%struct.jpeg_compress_struct* noundef nonnull %0)
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 24
  %9 = load i32, i32* %8, align 8, !tbaa !189
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %13 = bitcast %struct.jpeg_color_converter** %12 to void (%struct.jpeg_compress_struct*, ...)***
  %14 = load void (%struct.jpeg_compress_struct*, ...)**, void (%struct.jpeg_compress_struct*, ...)*** %13, align 8, !tbaa !261
  %15 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %14, align 8, !tbaa !262
  tail call void (%struct.jpeg_compress_struct*, ...) %15(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  %17 = bitcast %struct.jpeg_downsampler** %16 to void (%struct.jpeg_compress_struct*, ...)***
  %18 = load void (%struct.jpeg_compress_struct*, ...)**, void (%struct.jpeg_compress_struct*, ...)*** %17, align 8, !tbaa !264
  %19 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %18, align 8, !tbaa !265
  tail call void (%struct.jpeg_compress_struct*, ...) %19(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %21 = bitcast %struct.jpeg_c_prep_controller** %20 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %22 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %21, align 8, !tbaa !267
  %23 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %22, align 8, !tbaa !268
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %23(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0) #27
  br label %24

24:                                               ; preds = %11, %7
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %26 = bitcast %struct.jpeg_forward_dct** %25 to void (%struct.jpeg_compress_struct*, ...)***
  %27 = load void (%struct.jpeg_compress_struct*, ...)**, void (%struct.jpeg_compress_struct*, ...)*** %26, align 8, !tbaa !270
  %28 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %27, align 8, !tbaa !271
  tail call void (%struct.jpeg_compress_struct*, ...) %28(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %30 = bitcast %struct.jpeg_entropy_encoder** %29 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %31 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %30, align 8, !tbaa !273
  %32 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %31, align 8, !tbaa !274
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %34 = load i32, i32* %33, align 8, !tbaa !39
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %32(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %34) #27
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %36 = bitcast %struct.jpeg_c_coef_controller** %35 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %37 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %36, align 8, !tbaa !173
  %38 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %37, align 8, !tbaa !276
  %39 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 3
  %40 = load i32, i32* %39, align 8, !tbaa !260
  %41 = icmp sgt i32 %40, 1
  %42 = select i1 %41, i32 3, i32 0
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %38(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %42) #27
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 55
  %44 = bitcast %struct.jpeg_c_main_controller** %43 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %45 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %44, align 8, !tbaa !192
  %46 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %45, align 8, !tbaa !277
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %46(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0) #27
  %47 = load i32, i32* %33, align 8, !tbaa !39
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 3
  br i1 %48, label %51, label %50

50:                                               ; preds = %24
  store i32 0, i32* %49, align 8, !tbaa !278
  br label %115

51:                                               ; preds = %24
  store i32 1, i32* %49, align 8, !tbaa !278
  br label %115

52:                                               ; preds = %1
  tail call fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* noundef nonnull %0)
  tail call fastcc void @per_scan_setup(%struct.jpeg_compress_struct* noundef nonnull %0)
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %54 = load i32, i32* %53, align 4, !tbaa !279
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  %58 = load i32, i32* %57, align 4, !tbaa !280
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %62 = load i32, i32* %61, align 4, !tbaa !230
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %60, %56, %52
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %66 = bitcast %struct.jpeg_entropy_encoder** %65 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %67 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %66, align 8, !tbaa !273
  %68 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %67, align 8, !tbaa !274
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %68(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 1) #27
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %70 = bitcast %struct.jpeg_c_coef_controller** %69 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %71 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %70, align 8, !tbaa !173
  %72 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %71, align 8, !tbaa !276
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %72(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 2) #27
  %73 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %73, align 8, !tbaa !278
  br label %115

74:                                               ; preds = %60
  store i32 2, i32* %5, align 8, !tbaa !257
  %75 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 2
  %76 = load i32, i32* %75, align 4, !tbaa !259
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 4, !tbaa !259
  br label %78

78:                                               ; preds = %1, %74
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %80 = load i32, i32* %79, align 8, !tbaa !39
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  tail call fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* noundef nonnull %0)
  tail call fastcc void @per_scan_setup(%struct.jpeg_compress_struct* noundef nonnull %0)
  br label %83

83:                                               ; preds = %82, %78
  %84 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %85 = bitcast %struct.jpeg_entropy_encoder** %84 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %86 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %85, align 8, !tbaa !273
  %87 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %86, align 8, !tbaa !274
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %87(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0) #27
  %88 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %89 = bitcast %struct.jpeg_c_coef_controller** %88 to void (%struct.jpeg_compress_struct*, i32, ...)***
  %90 = load void (%struct.jpeg_compress_struct*, i32, ...)**, void (%struct.jpeg_compress_struct*, i32, ...)*** %89, align 8, !tbaa !173
  %91 = load void (%struct.jpeg_compress_struct*, i32, ...)*, void (%struct.jpeg_compress_struct*, i32, ...)** %90, align 8, !tbaa !276
  tail call void (%struct.jpeg_compress_struct*, i32, ...) %91(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 2) #27
  %92 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 4
  %93 = load i32, i32* %92, align 4, !tbaa !258
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %83
  %96 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %97 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %96, align 8, !tbaa !178
  %98 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %97, i64 0, i32 1
  %99 = bitcast void (...)** %98 to void (%struct.jpeg_compress_struct*, ...)**
  %100 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %99, align 8, !tbaa !281
  tail call void (%struct.jpeg_compress_struct*, ...) %100(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  br label %101

101:                                              ; preds = %95, %83
  %102 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %103 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %102, align 8, !tbaa !178
  %104 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %103, i64 0, i32 2
  %105 = bitcast void (...)** %104 to void (%struct.jpeg_compress_struct*, ...)**
  %106 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %105, align 8, !tbaa !282
  tail call void (%struct.jpeg_compress_struct*, ...) %106(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %107 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %107, align 8, !tbaa !278
  br label %115

108:                                              ; preds = %1
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %109, align 8, !tbaa !8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i64 0, i32 5
  store i32 48, i32* %111, align 8, !tbaa !19
  %112 = bitcast %struct.jpeg_error_mgr* %110 to void (%struct.jpeg_common_struct*, ...)**
  %113 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %112, align 8, !tbaa !20
  %114 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %113(%struct.jpeg_common_struct* noundef %114) #27
  br label %115

115:                                              ; preds = %50, %51, %108, %101, %64
  %116 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 2
  %117 = load i32, i32* %116, align 4, !tbaa !259
  %118 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 3
  %119 = load i32, i32* %118, align 8, !tbaa !260
  %120 = add nsw i32 %119, -1
  %121 = icmp eq i32 %117, %120
  %122 = zext i1 %121 to i32
  %123 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 4
  store i32 %122, i32* %123, align 4, !tbaa !238
  %124 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %125 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %124, align 8, !tbaa !83
  %126 = icmp eq %struct.jpeg_progress_mgr* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %115
  %128 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %125, i64 0, i32 3
  store i32 %117, i32* %128, align 8, !tbaa !283
  %129 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %125, i64 0, i32 4
  store i32 %119, i32* %129, align 4, !tbaa !284
  br label %130

130:                                              ; preds = %127, %115
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pass_startup(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %3 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %2, align 8, !tbaa !164
  %4 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %3, i64 0, i32 3
  store i32 0, i32* %4, align 8, !tbaa !190
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %6 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %5, align 8, !tbaa !178
  %7 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %6, i64 0, i32 1
  %8 = bitcast void (...)** %7 to void (%struct.jpeg_compress_struct*, ...)**
  %9 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %8, align 8, !tbaa !281
  tail call void (%struct.jpeg_compress_struct*, ...) %9(%struct.jpeg_compress_struct* noundef %0) #27
  %10 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %5, align 8, !tbaa !178
  %11 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %10, i64 0, i32 2
  %12 = bitcast void (...)** %11 to void (%struct.jpeg_compress_struct*, ...)**
  %13 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %12, align 8, !tbaa !282
  tail call void (%struct.jpeg_compress_struct*, ...) %13(%struct.jpeg_compress_struct* noundef %0) #27
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_master(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %3 = bitcast %struct.jpeg_comp_master** %2 to %struct.my_comp_master**
  %4 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8, !tbaa !164
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %6 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %5, align 8, !tbaa !273
  %7 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %6, i64 0, i32 2
  %8 = bitcast void (...)** %7 to void (%struct.jpeg_compress_struct*, ...)**
  %9 = load void (%struct.jpeg_compress_struct*, ...)*, void (%struct.jpeg_compress_struct*, ...)** %8, align 8, !tbaa !285
  tail call void (%struct.jpeg_compress_struct*, ...) %9(%struct.jpeg_compress_struct* noundef %0) #27
  %10 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 1
  %11 = load i32, i32* %10, align 8, !tbaa !257
  switch i32 %11, label %30 [
    i32 0, label %12
    i32 1, label %20
    i32 2, label %21
  ]

12:                                               ; preds = %1
  store i32 2, i32* %10, align 8, !tbaa !257
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %14 = load i32, i32* %13, align 8, !tbaa !39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %30

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 4
  %18 = load i32, i32* %17, align 4, !tbaa !258
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 4, !tbaa !258
  br label %30

20:                                               ; preds = %1
  store i32 2, i32* %10, align 8, !tbaa !257
  br label %30

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %23 = load i32, i32* %22, align 8, !tbaa !39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  store i32 1, i32* %10, align 8, !tbaa !257
  br label %26

26:                                               ; preds = %25, %21
  %27 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 4
  %28 = load i32, i32* %27, align 4, !tbaa !258
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 4, !tbaa !258
  br label %30

30:                                               ; preds = %12, %16, %1, %26, %20
  %31 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 2
  %32 = load i32, i32* %31, align 4, !tbaa !259
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %31, align 4, !tbaa !259
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* noundef %0) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %3 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %2, align 8, !tbaa !142
  %4 = icmp eq %struct.jpeg_scan_info* %3, null
  br i1 %4, label %108, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %7 = bitcast %struct.jpeg_comp_master** %6 to %struct.my_comp_master**
  %8 = load %struct.my_comp_master*, %struct.my_comp_master** %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 4, !tbaa !258
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 0
  %13 = load i32, i32* %12, align 4, !tbaa !135
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  store i32 %13, i32* %14, align 4, !tbaa !286
  %15 = icmp sgt i32 %13, 0
  br i1 %15, label %16, label %96

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %18 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8, !tbaa !145
  %19 = zext i32 %13 to i64
  %20 = icmp ult i32 %13, 4
  br i1 %20, label %85, label %21

21:                                               ; preds = %16
  %22 = and i64 %19, 4294967292
  %23 = add nsw i64 %22, -4
  %24 = lshr exact i64 %23, 2
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %23, 0
  br i1 %27, label %65, label %28

28:                                               ; preds = %21
  %29 = and i64 %25, 9223372036854775806
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %62, %30 ]
  %32 = phi i64 [ 0, %28 ], [ %63, %30 ]
  %33 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %31
  %34 = bitcast i32* %33 to <2 x i32>*
  %35 = load <2 x i32>, <2 x i32>* %34, align 4, !tbaa !32
  %36 = getelementptr inbounds i32, i32* %33, i64 2
  %37 = bitcast i32* %36 to <2 x i32>*
  %38 = load <2 x i32>, <2 x i32>* %37, align 4, !tbaa !32
  %39 = sext <2 x i32> %35 to <2 x i64>
  %40 = sext <2 x i32> %38 to <2 x i64>
  %41 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, <2 x i64> %39
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, <2 x i64> %40
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %31
  %44 = bitcast %struct.jpeg_component_info** %43 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %41, <2 x %struct.jpeg_component_info*>* %44, align 8, !tbaa !3
  %45 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %43, i64 2
  %46 = bitcast %struct.jpeg_component_info** %45 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %42, <2 x %struct.jpeg_component_info*>* %46, align 8, !tbaa !3
  %47 = or i64 %31, 4
  %48 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %47
  %49 = bitcast i32* %48 to <2 x i32>*
  %50 = load <2 x i32>, <2 x i32>* %49, align 4, !tbaa !32
  %51 = getelementptr inbounds i32, i32* %48, i64 2
  %52 = bitcast i32* %51 to <2 x i32>*
  %53 = load <2 x i32>, <2 x i32>* %52, align 4, !tbaa !32
  %54 = sext <2 x i32> %50 to <2 x i64>
  %55 = sext <2 x i32> %53 to <2 x i64>
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, <2 x i64> %54
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, <2 x i64> %55
  %58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %47
  %59 = bitcast %struct.jpeg_component_info** %58 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %56, <2 x %struct.jpeg_component_info*>* %59, align 8, !tbaa !3
  %60 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %58, i64 2
  %61 = bitcast %struct.jpeg_component_info** %60 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %57, <2 x %struct.jpeg_component_info*>* %61, align 8, !tbaa !3
  %62 = add nuw i64 %31, 8
  %63 = add i64 %32, 2
  %64 = icmp eq i64 %63, %29
  br i1 %64, label %65, label %30, !llvm.loop !287

65:                                               ; preds = %30, %21
  %66 = phi i64 [ 0, %21 ], [ %62, %30 ]
  %67 = icmp eq i64 %26, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %66
  %70 = bitcast i32* %69 to <2 x i32>*
  %71 = load <2 x i32>, <2 x i32>* %70, align 4, !tbaa !32
  %72 = getelementptr inbounds i32, i32* %69, i64 2
  %73 = bitcast i32* %72 to <2 x i32>*
  %74 = load <2 x i32>, <2 x i32>* %73, align 4, !tbaa !32
  %75 = sext <2 x i32> %71 to <2 x i64>
  %76 = sext <2 x i32> %74 to <2 x i64>
  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, <2 x i64> %75
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, <2 x i64> %76
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %66
  %80 = bitcast %struct.jpeg_component_info** %79 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %77, <2 x %struct.jpeg_component_info*>* %80, align 8, !tbaa !3
  %81 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %79, i64 2
  %82 = bitcast %struct.jpeg_component_info** %81 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %78, <2 x %struct.jpeg_component_info*>* %82, align 8, !tbaa !3
  br label %83

83:                                               ; preds = %65, %68
  %84 = icmp eq i64 %22, %19
  br i1 %84, label %96, label %85

85:                                               ; preds = %16, %83
  %86 = phi i64 [ 0, %16 ], [ %22, %83 ]
  br label %87

87:                                               ; preds = %85, %87
  %88 = phi i64 [ %94, %87 ], [ %86, %85 ]
  %89 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %88
  %90 = load i32, i32* %89, align 4, !tbaa !32
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 %91
  %93 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %88
  store %struct.jpeg_component_info* %92, %struct.jpeg_component_info** %93, align 8, !tbaa !3
  %94 = add nuw nsw i64 %88, 1
  %95 = icmp eq i64 %94, %19
  br i1 %95, label %96, label %87, !llvm.loop !288

96:                                               ; preds = %87, %83, %5
  %97 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 2
  %98 = load i32, i32* %97, align 4, !tbaa !137
  %99 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  store i32 %98, i32* %99, align 4, !tbaa !279
  %100 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 3
  %101 = load i32, i32* %100, align 4, !tbaa !138
  %102 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  store i32 %101, i32* %102, align 8, !tbaa !289
  %103 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 4
  %104 = load i32, i32* %103, align 4, !tbaa !139
  %105 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  store i32 %104, i32* %105, align 4, !tbaa !280
  %106 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 5
  %107 = load i32, i32* %106, align 4, !tbaa !140
  br label %192

108:                                              ; preds = %1
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %110 = load i32, i32* %109, align 4, !tbaa !202
  %111 = icmp sgt i32 %110, 4
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %114 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %113, align 8, !tbaa !8
  %115 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 5
  store i32 26, i32* %115, align 8, !tbaa !19
  %116 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 6, i32 0, i64 0
  store i32 %110, i32* %116, align 4, !tbaa !7
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %113, align 8, !tbaa !8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 6, i32 0, i64 1
  store i32 4, i32* %118, align 4, !tbaa !7
  %119 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %120 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %119, align 8, !tbaa !8
  %121 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %120, align 8, !tbaa !20
  %122 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %121(%struct.jpeg_common_struct* noundef %122) #27
  %123 = load i32, i32* %109, align 4, !tbaa !202
  br label %124

124:                                              ; preds = %112, %108
  %125 = phi i32 [ %123, %112 ], [ %110, %108 ]
  %126 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  store i32 %125, i32* %126, align 4, !tbaa !286
  %127 = icmp sgt i32 %125, 0
  br i1 %127, label %128, label %188

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %130 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %129, align 8, !tbaa !145
  %131 = zext i32 %125 to i64
  %132 = icmp ult i32 %125, 4
  br i1 %132, label %180, label %133

133:                                              ; preds = %128
  %134 = and i64 %131, 4294967292
  %135 = add nsw i64 %134, -4
  %136 = lshr exact i64 %135, 2
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 1
  %139 = icmp eq i64 %135, 0
  br i1 %139, label %166, label %140

140:                                              ; preds = %133
  %141 = and i64 %137, 9223372036854775806
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i64 [ 0, %140 ], [ %162, %142 ]
  %144 = phi <2 x i64> [ <i64 0, i64 1>, %140 ], [ %163, %142 ]
  %145 = phi i64 [ 0, %140 ], [ %164, %142 ]
  %146 = add <2 x i64> %144, <i64 2, i64 2>
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, <2 x i64> %144
  %148 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, <2 x i64> %146
  %149 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %143
  %150 = bitcast %struct.jpeg_component_info** %149 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %147, <2 x %struct.jpeg_component_info*>* %150, align 8, !tbaa !3
  %151 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %149, i64 2
  %152 = bitcast %struct.jpeg_component_info** %151 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %148, <2 x %struct.jpeg_component_info*>* %152, align 8, !tbaa !3
  %153 = or i64 %143, 4
  %154 = add <2 x i64> %144, <i64 4, i64 4>
  %155 = add <2 x i64> %144, <i64 6, i64 6>
  %156 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, <2 x i64> %154
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, <2 x i64> %155
  %158 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %153
  %159 = bitcast %struct.jpeg_component_info** %158 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %156, <2 x %struct.jpeg_component_info*>* %159, align 8, !tbaa !3
  %160 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %158, i64 2
  %161 = bitcast %struct.jpeg_component_info** %160 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %157, <2 x %struct.jpeg_component_info*>* %161, align 8, !tbaa !3
  %162 = add nuw i64 %143, 8
  %163 = add <2 x i64> %144, <i64 8, i64 8>
  %164 = add i64 %145, 2
  %165 = icmp eq i64 %164, %141
  br i1 %165, label %166, label %142, !llvm.loop !290

166:                                              ; preds = %142, %133
  %167 = phi i64 [ 0, %133 ], [ %162, %142 ]
  %168 = phi <2 x i64> [ <i64 0, i64 1>, %133 ], [ %163, %142 ]
  %169 = icmp eq i64 %138, 0
  br i1 %169, label %178, label %170

170:                                              ; preds = %166
  %171 = add <2 x i64> %168, <i64 2, i64 2>
  %172 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, <2 x i64> %168
  %173 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, <2 x i64> %171
  %174 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %167
  %175 = bitcast %struct.jpeg_component_info** %174 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %172, <2 x %struct.jpeg_component_info*>* %175, align 8, !tbaa !3
  %176 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %174, i64 2
  %177 = bitcast %struct.jpeg_component_info** %176 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %173, <2 x %struct.jpeg_component_info*>* %177, align 8, !tbaa !3
  br label %178

178:                                              ; preds = %166, %170
  %179 = icmp eq i64 %134, %131
  br i1 %179, label %188, label %180

180:                                              ; preds = %128, %178
  %181 = phi i64 [ 0, %128 ], [ %134, %178 ]
  br label %182

182:                                              ; preds = %180, %182
  %183 = phi i64 [ %186, %182 ], [ %181, %180 ]
  %184 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %130, i64 %183
  %185 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %183
  store %struct.jpeg_component_info* %184, %struct.jpeg_component_info** %185, align 8, !tbaa !3
  %186 = add nuw nsw i64 %183, 1
  %187 = icmp eq i64 %186, %131
  br i1 %187, label %188, label %182, !llvm.loop !291

188:                                              ; preds = %182, %178, %124
  %189 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  store i32 0, i32* %189, align 4, !tbaa !279
  %190 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  store i32 63, i32* %190, align 8, !tbaa !289
  %191 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  store i32 0, i32* %191, align 4, !tbaa !280
  br label %192

192:                                              ; preds = %188, %96
  %193 = phi i32 [ 0, %188 ], [ %107, %96 ]
  %194 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  store i32 %193, i32* %194, align 8, !tbaa !292
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @per_scan_setup(%struct.jpeg_compress_struct* noundef %0) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %3 = load i32, i32* %2, align 4, !tbaa !286
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %25

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 0
  %7 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8, !tbaa !3
  %8 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 7
  %9 = load i32, i32* %8, align 4, !tbaa !243
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  store i32 %9, i32* %10, align 8, !tbaa !293
  %11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 8
  %12 = load i32, i32* %11, align 8, !tbaa !244
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 47
  store i32 %12, i32* %13, align 4, !tbaa !294
  %14 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 13
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 8>, <4 x i32>* %15, align 4, !tbaa !32
  %16 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 17
  store i32 1, i32* %16, align 4, !tbaa !295
  %17 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 3
  %18 = load i32, i32* %17, align 4, !tbaa !151
  %19 = urem i32 %12, %18
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 %18, i32 %19
  %22 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 18
  store i32 %21, i32* %22, align 8, !tbaa !296
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  store i32 1, i32* %23, align 8, !tbaa !297
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 0
  store i32 0, i32* %24, align 4, !tbaa !32
  br label %148

25:                                               ; preds = %1
  %26 = add i32 %3, -5
  %27 = icmp ult i32 %26, -4
  br i1 %27, label %28, label %39

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 26, i32* %31, align 8, !tbaa !19
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 6, i32 0, i64 0
  store i32 %3, i32* %32, align 4, !tbaa !7
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 1
  store i32 4, i32* %34, align 4, !tbaa !7
  %35 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %36 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %35, align 8, !tbaa !8
  %37 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %36, align 8, !tbaa !20
  %38 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %37(%struct.jpeg_common_struct* noundef %38) #27
  br label %39

39:                                               ; preds = %25, %28
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %41 = load i32, i32* %40, align 8, !tbaa !50
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  %44 = load i32, i32* %43, align 8, !tbaa !239
  %45 = shl nsw i32 %44, 3
  %46 = sext i32 %45 to i64
  %47 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %42, i64 noundef %46) #27
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  store i32 %48, i32* %49, align 8, !tbaa !293
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %51 = load i32, i32* %50, align 4, !tbaa !25
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %54 = load i32, i32* %53, align 4, !tbaa !195
  %55 = shl nsw i32 %54, 3
  %56 = sext i32 %55 to i64
  %57 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jdiv_round_up to i64 (i64, i64, ...)*)(i64 noundef %52, i64 noundef %56) #27
  %58 = trunc i64 %57 to i32
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 47
  store i32 %58, i32* %59, align 4, !tbaa !294
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  store i32 0, i32* %60, align 8, !tbaa !297
  %61 = load i32, i32* %2, align 4, !tbaa !286
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %148

63:                                               ; preds = %39
  %64 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %65 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %66

66:                                               ; preds = %146, %63
  %67 = phi i32 [ 0, %63 ], [ %147, %146 ]
  %68 = phi i64 [ 0, %63 ], [ %142, %146 ]
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %68
  %70 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %69, align 8, !tbaa !3
  %71 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 2
  %72 = load i32, i32* %71, align 8, !tbaa !150
  %73 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 13
  store i32 %72, i32* %73, align 4, !tbaa !298
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 3
  %75 = load i32, i32* %74, align 4, !tbaa !151
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 14
  store i32 %75, i32* %76, align 8, !tbaa !299
  %77 = mul i32 %75, %72
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 15
  store i32 %77, i32* %78, align 4, !tbaa !300
  %79 = shl nsw i32 %72, 3
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 16
  store i32 %79, i32* %80, align 8, !tbaa !301
  %81 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 7
  %82 = load i32, i32* %81, align 4, !tbaa !243
  %83 = urem i32 %82, %72
  %84 = icmp eq i32 %83, 0
  %85 = select i1 %84, i32 %72, i32 %83
  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 17
  store i32 %85, i32* %86, align 4, !tbaa !295
  %87 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 8
  %88 = load i32, i32* %87, align 8, !tbaa !244
  %89 = urem i32 %88, %75
  %90 = icmp eq i32 %89, 0
  %91 = select i1 %90, i32 %75, i32 %89
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %70, i64 0, i32 18
  store i32 %91, i32* %92, align 8, !tbaa !296
  %93 = add nsw i32 %67, %77
  %94 = icmp sgt i32 %93, 10
  br i1 %94, label %95, label %100

95:                                               ; preds = %66
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %64, align 8, !tbaa !8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i64 0, i32 5
  store i32 13, i32* %97, align 8, !tbaa !19
  %98 = bitcast %struct.jpeg_error_mgr* %96 to void (%struct.jpeg_common_struct*, ...)**
  %99 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %98, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %99(%struct.jpeg_common_struct* noundef nonnull %65) #27
  br label %100

100:                                              ; preds = %95, %66
  %101 = icmp sgt i32 %77, 0
  br i1 %101, label %102, label %141

102:                                              ; preds = %100
  %103 = trunc i64 %68 to i32
  %104 = add i32 %77, -1
  %105 = and i32 %77, 3
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %102, %107
  %108 = phi i32 [ %110, %107 ], [ %77, %102 ]
  %109 = phi i32 [ %115, %107 ], [ 0, %102 ]
  %110 = add nsw i32 %108, -1
  %111 = load i32, i32* %60, align 8, !tbaa !297
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %60, align 8, !tbaa !297
  %113 = sext i32 %111 to i64
  %114 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %113
  store i32 %103, i32* %114, align 4, !tbaa !32
  %115 = add i32 %109, 1
  %116 = icmp eq i32 %115, %105
  br i1 %116, label %117, label %107, !llvm.loop !302

117:                                              ; preds = %107, %102
  %118 = phi i32 [ %77, %102 ], [ %110, %107 ]
  %119 = icmp ult i32 %104, 3
  br i1 %119, label %141, label %120

120:                                              ; preds = %117, %120
  %121 = phi i32 [ %134, %120 ], [ %118, %117 ]
  %122 = load i32, i32* %60, align 8, !tbaa !297
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %60, align 8, !tbaa !297
  %124 = sext i32 %122 to i64
  %125 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %124
  store i32 %103, i32* %125, align 4, !tbaa !32
  %126 = load i32, i32* %60, align 8, !tbaa !297
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %60, align 8, !tbaa !297
  %128 = sext i32 %126 to i64
  %129 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %128
  store i32 %103, i32* %129, align 4, !tbaa !32
  %130 = load i32, i32* %60, align 8, !tbaa !297
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %60, align 8, !tbaa !297
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %132
  store i32 %103, i32* %133, align 4, !tbaa !32
  %134 = add nsw i32 %121, -4
  %135 = load i32, i32* %60, align 8, !tbaa !297
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %60, align 8, !tbaa !297
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %137
  store i32 %103, i32* %138, align 4, !tbaa !32
  %139 = add i32 %121, -5
  %140 = icmp ult i32 %139, -2
  br i1 %140, label %120, label %141, !llvm.loop !303

141:                                              ; preds = %117, %120, %100
  %142 = add nuw nsw i64 %68, 1
  %143 = load i32, i32* %2, align 4, !tbaa !286
  %144 = sext i32 %143 to i64
  %145 = icmp slt i64 %142, %144
  br i1 %145, label %146, label %148, !llvm.loop !304

146:                                              ; preds = %141
  %147 = load i32, i32* %60, align 8, !tbaa !297
  br label %66

148:                                              ; preds = %141, %39, %5
  %149 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 31
  %150 = load i32, i32* %149, align 4, !tbaa !41
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %152, label %162

152:                                              ; preds = %148
  %153 = zext i32 %150 to i64
  %154 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  %155 = load i32, i32* %154, align 8, !tbaa !293
  %156 = zext i32 %155 to i64
  %157 = mul nuw nsw i64 %156, %153
  %158 = icmp ult i64 %157, 65535
  %159 = select i1 %158, i64 %157, i64 65535
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  store i32 %160, i32* %161, align 8, !tbaa !40
  br label %162

162:                                              ; preds = %152, %148
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_marker_writer(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 64) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %9 = bitcast %struct.jpeg_marker_writer** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !178
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @write_file_header to void (...)*), void (...)** %10, align 8, !tbaa !305
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @write_frame_header to void (...)*), void (...)** %12, align 8, !tbaa !307
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @write_scan_header to void (...)*), void (...)** %14, align 8, !tbaa !308
  %15 = getelementptr inbounds i8, i8* %7, i64 24
  %16 = bitcast i8* %15 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @write_file_trailer to void (...)*), void (...)** %16, align 8, !tbaa !309
  %17 = getelementptr inbounds i8, i8* %7, i64 32
  %18 = bitcast i8* %17 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @write_tables_only to void (...)*), void (...)** %18, align 8, !tbaa !310
  %19 = getelementptr inbounds i8, i8* %7, i64 40
  %20 = bitcast i8* %19 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32, i32)* @write_marker_header to void (...)*), void (...)** %20, align 8, !tbaa !311
  %21 = getelementptr inbounds i8, i8* %7, i64 48
  %22 = bitcast i8* %21 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32)* @write_marker_byte to void (...)*), void (...)** %22, align 8, !tbaa !312
  %23 = getelementptr inbounds i8, i8* %7, i64 56
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 8, !tbaa !313
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_file_header(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %3 = bitcast %struct.jpeg_marker_writer** %2 to %struct.my_marker_writer**
  %4 = load %struct.my_marker_writer*, %struct.my_marker_writer** %3, align 8, !tbaa !178
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %6 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %7 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %6, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !314
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %9, i8** %7, align 8, !tbaa !314
  store i8 -1, i8* %8, align 1, !tbaa !7
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %6, i64 0, i32 1
  %11 = load i64, i64* %10, align 8, !tbaa !315
  %12 = add i64 %11, -1
  store i64 %12, i64* %10, align 8, !tbaa !315
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %6, i64 0, i32 3
  %16 = bitcast i32 (...)** %15 to i32 (%struct.jpeg_compress_struct*, ...)**
  %17 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %16, align 8, !tbaa !316
  %18 = tail call i32 (%struct.jpeg_compress_struct*, ...) %17(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %21, align 8, !tbaa !8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 5
  store i32 24, i32* %23, align 8, !tbaa !19
  %24 = bitcast %struct.jpeg_error_mgr* %22 to void (%struct.jpeg_common_struct*, ...)**
  %25 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %24, align 8, !tbaa !20
  %26 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %25(%struct.jpeg_common_struct* noundef %26) #27
  br label %27

27:                                               ; preds = %20, %14, %1
  %28 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8, !tbaa !314
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %29, align 8, !tbaa !314
  store i8 -40, i8* %30, align 1, !tbaa !7
  %32 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i64 0, i32 1
  %33 = load i64, i64* %32, align 8, !tbaa !315
  %34 = add i64 %33, -1
  store i64 %34, i64* %32, align 8, !tbaa !315
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %27
  %37 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i64 0, i32 3
  %38 = bitcast i32 (...)** %37 to i32 (%struct.jpeg_compress_struct*, ...)**
  %39 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %38, align 8, !tbaa !316
  %40 = tail call i32 (%struct.jpeg_compress_struct*, ...) %39(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8, !tbaa !8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i64 0, i32 5
  store i32 24, i32* %45, align 8, !tbaa !19
  %46 = bitcast %struct.jpeg_error_mgr* %44 to void (%struct.jpeg_common_struct*, ...)**
  %47 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %46, align 8, !tbaa !20
  %48 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %47(%struct.jpeg_common_struct* noundef %48) #27
  br label %49

49:                                               ; preds = %27, %36, %42
  %50 = getelementptr inbounds %struct.my_marker_writer, %struct.my_marker_writer* %4, i64 0, i32 1
  store i32 0, i32* %50, align 8, !tbaa !313
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %52 = load i32, i32* %51, align 8, !tbaa !201
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %469, label %54

54:                                               ; preds = %49
  %55 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %56 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %55, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8, !tbaa !314
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %56, align 8, !tbaa !314
  store i8 -1, i8* %57, align 1, !tbaa !7
  %59 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8, !tbaa !315
  %61 = add i64 %60, -1
  store i64 %61, i64* %59, align 8, !tbaa !315
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %54
  %64 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %55, i64 0, i32 3
  %65 = bitcast i32 (...)** %64 to i32 (%struct.jpeg_compress_struct*, ...)**
  %66 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %65, align 8, !tbaa !316
  %67 = tail call i32 (%struct.jpeg_compress_struct*, ...) %66(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8, !tbaa !8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 5
  store i32 24, i32* %72, align 8, !tbaa !19
  %73 = bitcast %struct.jpeg_error_mgr* %71 to void (%struct.jpeg_common_struct*, ...)**
  %74 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %73, align 8, !tbaa !20
  %75 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %74(%struct.jpeg_common_struct* noundef %75) #27
  br label %76

76:                                               ; preds = %69, %63, %54
  %77 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %78 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %77, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8, !tbaa !314
  %80 = getelementptr inbounds i8, i8* %79, i64 1
  store i8* %80, i8** %78, align 8, !tbaa !314
  store i8 -32, i8* %79, align 1, !tbaa !7
  %81 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %77, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !315
  %83 = add i64 %82, -1
  store i64 %83, i64* %81, align 8, !tbaa !315
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %76
  %86 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %77, i64 0, i32 3
  %87 = bitcast i32 (...)** %86 to i32 (%struct.jpeg_compress_struct*, ...)**
  %88 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %87, align 8, !tbaa !316
  %89 = tail call i32 (%struct.jpeg_compress_struct*, ...) %88(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %93 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %92, align 8, !tbaa !8
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %93, i64 0, i32 5
  store i32 24, i32* %94, align 8, !tbaa !19
  %95 = bitcast %struct.jpeg_error_mgr* %93 to void (%struct.jpeg_common_struct*, ...)**
  %96 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %95, align 8, !tbaa !20
  %97 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %96(%struct.jpeg_common_struct* noundef %97) #27
  br label %98

98:                                               ; preds = %91, %85, %76
  %99 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %100 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %99, i64 0, i32 0
  %101 = load i8*, i8** %100, align 8, !tbaa !314
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  store i8* %102, i8** %100, align 8, !tbaa !314
  store i8 0, i8* %101, align 1, !tbaa !7
  %103 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %99, i64 0, i32 1
  %104 = load i64, i64* %103, align 8, !tbaa !315
  %105 = add i64 %104, -1
  store i64 %105, i64* %103, align 8, !tbaa !315
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %120

107:                                              ; preds = %98
  %108 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %99, i64 0, i32 3
  %109 = bitcast i32 (...)** %108 to i32 (%struct.jpeg_compress_struct*, ...)**
  %110 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %109, align 8, !tbaa !316
  %111 = tail call i32 (%struct.jpeg_compress_struct*, ...) %110(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %115 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %114, align 8, !tbaa !8
  %116 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %115, i64 0, i32 5
  store i32 24, i32* %116, align 8, !tbaa !19
  %117 = bitcast %struct.jpeg_error_mgr* %115 to void (%struct.jpeg_common_struct*, ...)**
  %118 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %117, align 8, !tbaa !20
  %119 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %118(%struct.jpeg_common_struct* noundef %119) #27
  br label %120

120:                                              ; preds = %113, %107, %98
  %121 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %122 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %121, i64 0, i32 0
  %123 = load i8*, i8** %122, align 8, !tbaa !314
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  store i8* %124, i8** %122, align 8, !tbaa !314
  store i8 16, i8* %123, align 1, !tbaa !7
  %125 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %121, i64 0, i32 1
  %126 = load i64, i64* %125, align 8, !tbaa !315
  %127 = add i64 %126, -1
  store i64 %127, i64* %125, align 8, !tbaa !315
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %120
  %130 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %121, i64 0, i32 3
  %131 = bitcast i32 (...)** %130 to i32 (%struct.jpeg_compress_struct*, ...)**
  %132 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %131, align 8, !tbaa !316
  %133 = tail call i32 (%struct.jpeg_compress_struct*, ...) %132(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %129
  %136 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %137 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %136, align 8, !tbaa !8
  %138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %137, i64 0, i32 5
  store i32 24, i32* %138, align 8, !tbaa !19
  %139 = bitcast %struct.jpeg_error_mgr* %137 to void (%struct.jpeg_common_struct*, ...)**
  %140 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %139, align 8, !tbaa !20
  %141 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %140(%struct.jpeg_common_struct* noundef %141) #27
  br label %142

142:                                              ; preds = %135, %129, %120
  %143 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %144 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %143, i64 0, i32 0
  %145 = load i8*, i8** %144, align 8, !tbaa !314
  %146 = getelementptr inbounds i8, i8* %145, i64 1
  store i8* %146, i8** %144, align 8, !tbaa !314
  store i8 74, i8* %145, align 1, !tbaa !7
  %147 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %143, i64 0, i32 1
  %148 = load i64, i64* %147, align 8, !tbaa !315
  %149 = add i64 %148, -1
  store i64 %149, i64* %147, align 8, !tbaa !315
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %164

151:                                              ; preds = %142
  %152 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %143, i64 0, i32 3
  %153 = bitcast i32 (...)** %152 to i32 (%struct.jpeg_compress_struct*, ...)**
  %154 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %153, align 8, !tbaa !316
  %155 = tail call i32 (%struct.jpeg_compress_struct*, ...) %154(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %164

157:                                              ; preds = %151
  %158 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %159 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %158, align 8, !tbaa !8
  %160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %159, i64 0, i32 5
  store i32 24, i32* %160, align 8, !tbaa !19
  %161 = bitcast %struct.jpeg_error_mgr* %159 to void (%struct.jpeg_common_struct*, ...)**
  %162 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %161, align 8, !tbaa !20
  %163 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %162(%struct.jpeg_common_struct* noundef %163) #27
  br label %164

164:                                              ; preds = %157, %151, %142
  %165 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %166 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %165, i64 0, i32 0
  %167 = load i8*, i8** %166, align 8, !tbaa !314
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  store i8* %168, i8** %166, align 8, !tbaa !314
  store i8 70, i8* %167, align 1, !tbaa !7
  %169 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %165, i64 0, i32 1
  %170 = load i64, i64* %169, align 8, !tbaa !315
  %171 = add i64 %170, -1
  store i64 %171, i64* %169, align 8, !tbaa !315
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %186

173:                                              ; preds = %164
  %174 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %165, i64 0, i32 3
  %175 = bitcast i32 (...)** %174 to i32 (%struct.jpeg_compress_struct*, ...)**
  %176 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %175, align 8, !tbaa !316
  %177 = tail call i32 (%struct.jpeg_compress_struct*, ...) %176(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %186

179:                                              ; preds = %173
  %180 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %181 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %180, align 8, !tbaa !8
  %182 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %181, i64 0, i32 5
  store i32 24, i32* %182, align 8, !tbaa !19
  %183 = bitcast %struct.jpeg_error_mgr* %181 to void (%struct.jpeg_common_struct*, ...)**
  %184 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %183, align 8, !tbaa !20
  %185 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %184(%struct.jpeg_common_struct* noundef %185) #27
  br label %186

186:                                              ; preds = %179, %173, %164
  %187 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %188 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %187, i64 0, i32 0
  %189 = load i8*, i8** %188, align 8, !tbaa !314
  %190 = getelementptr inbounds i8, i8* %189, i64 1
  store i8* %190, i8** %188, align 8, !tbaa !314
  store i8 73, i8* %189, align 1, !tbaa !7
  %191 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %187, i64 0, i32 1
  %192 = load i64, i64* %191, align 8, !tbaa !315
  %193 = add i64 %192, -1
  store i64 %193, i64* %191, align 8, !tbaa !315
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %208

195:                                              ; preds = %186
  %196 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %187, i64 0, i32 3
  %197 = bitcast i32 (...)** %196 to i32 (%struct.jpeg_compress_struct*, ...)**
  %198 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %197, align 8, !tbaa !316
  %199 = tail call i32 (%struct.jpeg_compress_struct*, ...) %198(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %208

201:                                              ; preds = %195
  %202 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %203 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %202, align 8, !tbaa !8
  %204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %203, i64 0, i32 5
  store i32 24, i32* %204, align 8, !tbaa !19
  %205 = bitcast %struct.jpeg_error_mgr* %203 to void (%struct.jpeg_common_struct*, ...)**
  %206 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %205, align 8, !tbaa !20
  %207 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %206(%struct.jpeg_common_struct* noundef %207) #27
  br label %208

208:                                              ; preds = %201, %195, %186
  %209 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %210 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %209, i64 0, i32 0
  %211 = load i8*, i8** %210, align 8, !tbaa !314
  %212 = getelementptr inbounds i8, i8* %211, i64 1
  store i8* %212, i8** %210, align 8, !tbaa !314
  store i8 70, i8* %211, align 1, !tbaa !7
  %213 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %209, i64 0, i32 1
  %214 = load i64, i64* %213, align 8, !tbaa !315
  %215 = add i64 %214, -1
  store i64 %215, i64* %213, align 8, !tbaa !315
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %230

217:                                              ; preds = %208
  %218 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %209, i64 0, i32 3
  %219 = bitcast i32 (...)** %218 to i32 (%struct.jpeg_compress_struct*, ...)**
  %220 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %219, align 8, !tbaa !316
  %221 = tail call i32 (%struct.jpeg_compress_struct*, ...) %220(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %230

223:                                              ; preds = %217
  %224 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %225 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %224, align 8, !tbaa !8
  %226 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %225, i64 0, i32 5
  store i32 24, i32* %226, align 8, !tbaa !19
  %227 = bitcast %struct.jpeg_error_mgr* %225 to void (%struct.jpeg_common_struct*, ...)**
  %228 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %227, align 8, !tbaa !20
  %229 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %228(%struct.jpeg_common_struct* noundef %229) #27
  br label %230

230:                                              ; preds = %223, %217, %208
  %231 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %232 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %231, i64 0, i32 0
  %233 = load i8*, i8** %232, align 8, !tbaa !314
  %234 = getelementptr inbounds i8, i8* %233, i64 1
  store i8* %234, i8** %232, align 8, !tbaa !314
  store i8 0, i8* %233, align 1, !tbaa !7
  %235 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %231, i64 0, i32 1
  %236 = load i64, i64* %235, align 8, !tbaa !315
  %237 = add i64 %236, -1
  store i64 %237, i64* %235, align 8, !tbaa !315
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %252

239:                                              ; preds = %230
  %240 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %231, i64 0, i32 3
  %241 = bitcast i32 (...)** %240 to i32 (%struct.jpeg_compress_struct*, ...)**
  %242 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %241, align 8, !tbaa !316
  %243 = tail call i32 (%struct.jpeg_compress_struct*, ...) %242(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %252

245:                                              ; preds = %239
  %246 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %247 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %246, align 8, !tbaa !8
  %248 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %247, i64 0, i32 5
  store i32 24, i32* %248, align 8, !tbaa !19
  %249 = bitcast %struct.jpeg_error_mgr* %247 to void (%struct.jpeg_common_struct*, ...)**
  %250 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %249, align 8, !tbaa !20
  %251 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %250(%struct.jpeg_common_struct* noundef %251) #27
  br label %252

252:                                              ; preds = %245, %239, %230
  %253 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 33
  %254 = load i16, i16* %253, align 4, !tbaa !197
  %255 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %256 = trunc i16 %254 to i8
  %257 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %255, i64 0, i32 0
  %258 = load i8*, i8** %257, align 8, !tbaa !314
  %259 = getelementptr inbounds i8, i8* %258, i64 1
  store i8* %259, i8** %257, align 8, !tbaa !314
  store i8 %256, i8* %258, align 1, !tbaa !7
  %260 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %255, i64 0, i32 1
  %261 = load i64, i64* %260, align 8, !tbaa !315
  %262 = add i64 %261, -1
  store i64 %262, i64* %260, align 8, !tbaa !315
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %277

264:                                              ; preds = %252
  %265 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %255, i64 0, i32 3
  %266 = bitcast i32 (...)** %265 to i32 (%struct.jpeg_compress_struct*, ...)**
  %267 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %266, align 8, !tbaa !316
  %268 = tail call i32 (%struct.jpeg_compress_struct*, ...) %267(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %277

270:                                              ; preds = %264
  %271 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %272 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %271, align 8, !tbaa !8
  %273 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %272, i64 0, i32 5
  store i32 24, i32* %273, align 8, !tbaa !19
  %274 = bitcast %struct.jpeg_error_mgr* %272 to void (%struct.jpeg_common_struct*, ...)**
  %275 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %274, align 8, !tbaa !20
  %276 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %275(%struct.jpeg_common_struct* noundef %276) #27
  br label %277

277:                                              ; preds = %270, %264, %252
  %278 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 34
  %279 = load i16, i16* %278, align 2, !tbaa !198
  %280 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %281 = trunc i16 %279 to i8
  %282 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %280, i64 0, i32 0
  %283 = load i8*, i8** %282, align 8, !tbaa !314
  %284 = getelementptr inbounds i8, i8* %283, i64 1
  store i8* %284, i8** %282, align 8, !tbaa !314
  store i8 %281, i8* %283, align 1, !tbaa !7
  %285 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %280, i64 0, i32 1
  %286 = load i64, i64* %285, align 8, !tbaa !315
  %287 = add i64 %286, -1
  store i64 %287, i64* %285, align 8, !tbaa !315
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %302

289:                                              ; preds = %277
  %290 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %280, i64 0, i32 3
  %291 = bitcast i32 (...)** %290 to i32 (%struct.jpeg_compress_struct*, ...)**
  %292 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %291, align 8, !tbaa !316
  %293 = tail call i32 (%struct.jpeg_compress_struct*, ...) %292(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %302

295:                                              ; preds = %289
  %296 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %297 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %296, align 8, !tbaa !8
  %298 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %297, i64 0, i32 5
  store i32 24, i32* %298, align 8, !tbaa !19
  %299 = bitcast %struct.jpeg_error_mgr* %297 to void (%struct.jpeg_common_struct*, ...)**
  %300 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %299, align 8, !tbaa !20
  %301 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %300(%struct.jpeg_common_struct* noundef %301) #27
  br label %302

302:                                              ; preds = %295, %289, %277
  %303 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 35
  %304 = load i16, i16* %303, align 8, !tbaa !115
  %305 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %306 = trunc i16 %304 to i8
  %307 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %305, i64 0, i32 0
  %308 = load i8*, i8** %307, align 8, !tbaa !314
  %309 = getelementptr inbounds i8, i8* %308, i64 1
  store i8* %309, i8** %307, align 8, !tbaa !314
  store i8 %306, i8* %308, align 1, !tbaa !7
  %310 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %305, i64 0, i32 1
  %311 = load i64, i64* %310, align 8, !tbaa !315
  %312 = add i64 %311, -1
  store i64 %312, i64* %310, align 8, !tbaa !315
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %327

314:                                              ; preds = %302
  %315 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %305, i64 0, i32 3
  %316 = bitcast i32 (...)** %315 to i32 (%struct.jpeg_compress_struct*, ...)**
  %317 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %316, align 8, !tbaa !316
  %318 = tail call i32 (%struct.jpeg_compress_struct*, ...) %317(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %327

320:                                              ; preds = %314
  %321 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %322 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %321, align 8, !tbaa !8
  %323 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %322, i64 0, i32 5
  store i32 24, i32* %323, align 8, !tbaa !19
  %324 = bitcast %struct.jpeg_error_mgr* %322 to void (%struct.jpeg_common_struct*, ...)**
  %325 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %324, align 8, !tbaa !20
  %326 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %325(%struct.jpeg_common_struct* noundef %326) #27
  br label %327

327:                                              ; preds = %320, %314, %302
  %328 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 36
  %329 = load i32, i32* %328, align 4, !tbaa !113
  %330 = lshr i32 %329, 8
  %331 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %332 = trunc i32 %330 to i8
  %333 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %331, i64 0, i32 0
  %334 = load i8*, i8** %333, align 8, !tbaa !314
  %335 = getelementptr inbounds i8, i8* %334, i64 1
  store i8* %335, i8** %333, align 8, !tbaa !314
  store i8 %332, i8* %334, align 1, !tbaa !7
  %336 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %331, i64 0, i32 1
  %337 = load i64, i64* %336, align 8, !tbaa !315
  %338 = add i64 %337, -1
  store i64 %338, i64* %336, align 8, !tbaa !315
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %353

340:                                              ; preds = %327
  %341 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %331, i64 0, i32 3
  %342 = bitcast i32 (...)** %341 to i32 (%struct.jpeg_compress_struct*, ...)**
  %343 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %342, align 8, !tbaa !316
  %344 = tail call i32 (%struct.jpeg_compress_struct*, ...) %343(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %353

346:                                              ; preds = %340
  %347 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %348 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %347, align 8, !tbaa !8
  %349 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %348, i64 0, i32 5
  store i32 24, i32* %349, align 8, !tbaa !19
  %350 = bitcast %struct.jpeg_error_mgr* %348 to void (%struct.jpeg_common_struct*, ...)**
  %351 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %350, align 8, !tbaa !20
  %352 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %351(%struct.jpeg_common_struct* noundef %352) #27
  br label %353

353:                                              ; preds = %346, %340, %327
  %354 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %355 = trunc i32 %329 to i8
  %356 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %354, i64 0, i32 0
  %357 = load i8*, i8** %356, align 8, !tbaa !314
  %358 = getelementptr inbounds i8, i8* %357, i64 1
  store i8* %358, i8** %356, align 8, !tbaa !314
  store i8 %355, i8* %357, align 1, !tbaa !7
  %359 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %354, i64 0, i32 1
  %360 = load i64, i64* %359, align 8, !tbaa !315
  %361 = add i64 %360, -1
  store i64 %361, i64* %359, align 8, !tbaa !315
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %376

363:                                              ; preds = %353
  %364 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %354, i64 0, i32 3
  %365 = bitcast i32 (...)** %364 to i32 (%struct.jpeg_compress_struct*, ...)**
  %366 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %365, align 8, !tbaa !316
  %367 = tail call i32 (%struct.jpeg_compress_struct*, ...) %366(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %376

369:                                              ; preds = %363
  %370 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %371 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %370, align 8, !tbaa !8
  %372 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %371, i64 0, i32 5
  store i32 24, i32* %372, align 8, !tbaa !19
  %373 = bitcast %struct.jpeg_error_mgr* %371 to void (%struct.jpeg_common_struct*, ...)**
  %374 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %373, align 8, !tbaa !20
  %375 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %374(%struct.jpeg_common_struct* noundef %375) #27
  br label %376

376:                                              ; preds = %369, %363, %353
  %377 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 37
  %378 = load i32, i32* %377, align 8, !tbaa !114
  %379 = lshr i32 %378, 8
  %380 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %381 = trunc i32 %379 to i8
  %382 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %380, i64 0, i32 0
  %383 = load i8*, i8** %382, align 8, !tbaa !314
  %384 = getelementptr inbounds i8, i8* %383, i64 1
  store i8* %384, i8** %382, align 8, !tbaa !314
  store i8 %381, i8* %383, align 1, !tbaa !7
  %385 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %380, i64 0, i32 1
  %386 = load i64, i64* %385, align 8, !tbaa !315
  %387 = add i64 %386, -1
  store i64 %387, i64* %385, align 8, !tbaa !315
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %402

389:                                              ; preds = %376
  %390 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %380, i64 0, i32 3
  %391 = bitcast i32 (...)** %390 to i32 (%struct.jpeg_compress_struct*, ...)**
  %392 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %391, align 8, !tbaa !316
  %393 = tail call i32 (%struct.jpeg_compress_struct*, ...) %392(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %402

395:                                              ; preds = %389
  %396 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %397 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %396, align 8, !tbaa !8
  %398 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %397, i64 0, i32 5
  store i32 24, i32* %398, align 8, !tbaa !19
  %399 = bitcast %struct.jpeg_error_mgr* %397 to void (%struct.jpeg_common_struct*, ...)**
  %400 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %399, align 8, !tbaa !20
  %401 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %400(%struct.jpeg_common_struct* noundef %401) #27
  br label %402

402:                                              ; preds = %395, %389, %376
  %403 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %404 = trunc i32 %378 to i8
  %405 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %403, i64 0, i32 0
  %406 = load i8*, i8** %405, align 8, !tbaa !314
  %407 = getelementptr inbounds i8, i8* %406, i64 1
  store i8* %407, i8** %405, align 8, !tbaa !314
  store i8 %404, i8* %406, align 1, !tbaa !7
  %408 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %403, i64 0, i32 1
  %409 = load i64, i64* %408, align 8, !tbaa !315
  %410 = add i64 %409, -1
  store i64 %410, i64* %408, align 8, !tbaa !315
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %425

412:                                              ; preds = %402
  %413 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %403, i64 0, i32 3
  %414 = bitcast i32 (...)** %413 to i32 (%struct.jpeg_compress_struct*, ...)**
  %415 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %414, align 8, !tbaa !316
  %416 = tail call i32 (%struct.jpeg_compress_struct*, ...) %415(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %425

418:                                              ; preds = %412
  %419 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %420 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %419, align 8, !tbaa !8
  %421 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %420, i64 0, i32 5
  store i32 24, i32* %421, align 8, !tbaa !19
  %422 = bitcast %struct.jpeg_error_mgr* %420 to void (%struct.jpeg_common_struct*, ...)**
  %423 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %422, align 8, !tbaa !20
  %424 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %423(%struct.jpeg_common_struct* noundef %424) #27
  br label %425

425:                                              ; preds = %418, %412, %402
  %426 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %427 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %426, i64 0, i32 0
  %428 = load i8*, i8** %427, align 8, !tbaa !314
  %429 = getelementptr inbounds i8, i8* %428, i64 1
  store i8* %429, i8** %427, align 8, !tbaa !314
  store i8 0, i8* %428, align 1, !tbaa !7
  %430 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %426, i64 0, i32 1
  %431 = load i64, i64* %430, align 8, !tbaa !315
  %432 = add i64 %431, -1
  store i64 %432, i64* %430, align 8, !tbaa !315
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %447

434:                                              ; preds = %425
  %435 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %426, i64 0, i32 3
  %436 = bitcast i32 (...)** %435 to i32 (%struct.jpeg_compress_struct*, ...)**
  %437 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %436, align 8, !tbaa !316
  %438 = tail call i32 (%struct.jpeg_compress_struct*, ...) %437(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %447

440:                                              ; preds = %434
  %441 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %442 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %441, align 8, !tbaa !8
  %443 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %442, i64 0, i32 5
  store i32 24, i32* %443, align 8, !tbaa !19
  %444 = bitcast %struct.jpeg_error_mgr* %442 to void (%struct.jpeg_common_struct*, ...)**
  %445 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %444, align 8, !tbaa !20
  %446 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %445(%struct.jpeg_common_struct* noundef %446) #27
  br label %447

447:                                              ; preds = %440, %434, %425
  %448 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %449 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %448, i64 0, i32 0
  %450 = load i8*, i8** %449, align 8, !tbaa !314
  %451 = getelementptr inbounds i8, i8* %450, i64 1
  store i8* %451, i8** %449, align 8, !tbaa !314
  store i8 0, i8* %450, align 1, !tbaa !7
  %452 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %448, i64 0, i32 1
  %453 = load i64, i64* %452, align 8, !tbaa !315
  %454 = add i64 %453, -1
  store i64 %454, i64* %452, align 8, !tbaa !315
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %456, label %469

456:                                              ; preds = %447
  %457 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %448, i64 0, i32 3
  %458 = bitcast i32 (...)** %457 to i32 (%struct.jpeg_compress_struct*, ...)**
  %459 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %458, align 8, !tbaa !316
  %460 = tail call i32 (%struct.jpeg_compress_struct*, ...) %459(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %469

462:                                              ; preds = %456
  %463 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %464 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %463, align 8, !tbaa !8
  %465 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %464, i64 0, i32 5
  store i32 24, i32* %465, align 8, !tbaa !19
  %466 = bitcast %struct.jpeg_error_mgr* %464 to void (%struct.jpeg_common_struct*, ...)**
  %467 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %466, align 8, !tbaa !20
  %468 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %467(%struct.jpeg_common_struct* noundef %468) #27
  br label %469

469:                                              ; preds = %462, %456, %447, %49
  %470 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  %471 = load i32, i32* %470, align 4, !tbaa !200
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %858, label %473

473:                                              ; preds = %469
  %474 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %475 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %474, i64 0, i32 0
  %476 = load i8*, i8** %475, align 8, !tbaa !314
  %477 = getelementptr inbounds i8, i8* %476, i64 1
  store i8* %477, i8** %475, align 8, !tbaa !314
  store i8 -1, i8* %476, align 1, !tbaa !7
  %478 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %474, i64 0, i32 1
  %479 = load i64, i64* %478, align 8, !tbaa !315
  %480 = add i64 %479, -1
  store i64 %480, i64* %478, align 8, !tbaa !315
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %495

482:                                              ; preds = %473
  %483 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %474, i64 0, i32 3
  %484 = bitcast i32 (...)** %483 to i32 (%struct.jpeg_compress_struct*, ...)**
  %485 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %484, align 8, !tbaa !316
  %486 = tail call i32 (%struct.jpeg_compress_struct*, ...) %485(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %495

488:                                              ; preds = %482
  %489 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %490 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %489, align 8, !tbaa !8
  %491 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %490, i64 0, i32 5
  store i32 24, i32* %491, align 8, !tbaa !19
  %492 = bitcast %struct.jpeg_error_mgr* %490 to void (%struct.jpeg_common_struct*, ...)**
  %493 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %492, align 8, !tbaa !20
  %494 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %493(%struct.jpeg_common_struct* noundef %494) #27
  br label %495

495:                                              ; preds = %488, %482, %473
  %496 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %497 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %496, i64 0, i32 0
  %498 = load i8*, i8** %497, align 8, !tbaa !314
  %499 = getelementptr inbounds i8, i8* %498, i64 1
  store i8* %499, i8** %497, align 8, !tbaa !314
  store i8 -18, i8* %498, align 1, !tbaa !7
  %500 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %496, i64 0, i32 1
  %501 = load i64, i64* %500, align 8, !tbaa !315
  %502 = add i64 %501, -1
  store i64 %502, i64* %500, align 8, !tbaa !315
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %517

504:                                              ; preds = %495
  %505 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %496, i64 0, i32 3
  %506 = bitcast i32 (...)** %505 to i32 (%struct.jpeg_compress_struct*, ...)**
  %507 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %506, align 8, !tbaa !316
  %508 = tail call i32 (%struct.jpeg_compress_struct*, ...) %507(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %517

510:                                              ; preds = %504
  %511 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %512 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %511, align 8, !tbaa !8
  %513 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %512, i64 0, i32 5
  store i32 24, i32* %513, align 8, !tbaa !19
  %514 = bitcast %struct.jpeg_error_mgr* %512 to void (%struct.jpeg_common_struct*, ...)**
  %515 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %514, align 8, !tbaa !20
  %516 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %515(%struct.jpeg_common_struct* noundef %516) #27
  br label %517

517:                                              ; preds = %510, %504, %495
  %518 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %519 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %518, i64 0, i32 0
  %520 = load i8*, i8** %519, align 8, !tbaa !314
  %521 = getelementptr inbounds i8, i8* %520, i64 1
  store i8* %521, i8** %519, align 8, !tbaa !314
  store i8 0, i8* %520, align 1, !tbaa !7
  %522 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %518, i64 0, i32 1
  %523 = load i64, i64* %522, align 8, !tbaa !315
  %524 = add i64 %523, -1
  store i64 %524, i64* %522, align 8, !tbaa !315
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %526, label %539

526:                                              ; preds = %517
  %527 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %518, i64 0, i32 3
  %528 = bitcast i32 (...)** %527 to i32 (%struct.jpeg_compress_struct*, ...)**
  %529 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %528, align 8, !tbaa !316
  %530 = tail call i32 (%struct.jpeg_compress_struct*, ...) %529(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %539

532:                                              ; preds = %526
  %533 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %534 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %533, align 8, !tbaa !8
  %535 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %534, i64 0, i32 5
  store i32 24, i32* %535, align 8, !tbaa !19
  %536 = bitcast %struct.jpeg_error_mgr* %534 to void (%struct.jpeg_common_struct*, ...)**
  %537 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %536, align 8, !tbaa !20
  %538 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %537(%struct.jpeg_common_struct* noundef %538) #27
  br label %539

539:                                              ; preds = %532, %526, %517
  %540 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %541 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %540, i64 0, i32 0
  %542 = load i8*, i8** %541, align 8, !tbaa !314
  %543 = getelementptr inbounds i8, i8* %542, i64 1
  store i8* %543, i8** %541, align 8, !tbaa !314
  store i8 14, i8* %542, align 1, !tbaa !7
  %544 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %540, i64 0, i32 1
  %545 = load i64, i64* %544, align 8, !tbaa !315
  %546 = add i64 %545, -1
  store i64 %546, i64* %544, align 8, !tbaa !315
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %548, label %561

548:                                              ; preds = %539
  %549 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %540, i64 0, i32 3
  %550 = bitcast i32 (...)** %549 to i32 (%struct.jpeg_compress_struct*, ...)**
  %551 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %550, align 8, !tbaa !316
  %552 = tail call i32 (%struct.jpeg_compress_struct*, ...) %551(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %561

554:                                              ; preds = %548
  %555 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %556 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %555, align 8, !tbaa !8
  %557 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %556, i64 0, i32 5
  store i32 24, i32* %557, align 8, !tbaa !19
  %558 = bitcast %struct.jpeg_error_mgr* %556 to void (%struct.jpeg_common_struct*, ...)**
  %559 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %558, align 8, !tbaa !20
  %560 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %559(%struct.jpeg_common_struct* noundef %560) #27
  br label %561

561:                                              ; preds = %554, %548, %539
  %562 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %563 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %562, i64 0, i32 0
  %564 = load i8*, i8** %563, align 8, !tbaa !314
  %565 = getelementptr inbounds i8, i8* %564, i64 1
  store i8* %565, i8** %563, align 8, !tbaa !314
  store i8 65, i8* %564, align 1, !tbaa !7
  %566 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %562, i64 0, i32 1
  %567 = load i64, i64* %566, align 8, !tbaa !315
  %568 = add i64 %567, -1
  store i64 %568, i64* %566, align 8, !tbaa !315
  %569 = icmp eq i64 %568, 0
  br i1 %569, label %570, label %583

570:                                              ; preds = %561
  %571 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %562, i64 0, i32 3
  %572 = bitcast i32 (...)** %571 to i32 (%struct.jpeg_compress_struct*, ...)**
  %573 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %572, align 8, !tbaa !316
  %574 = tail call i32 (%struct.jpeg_compress_struct*, ...) %573(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %583

576:                                              ; preds = %570
  %577 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %578 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %577, align 8, !tbaa !8
  %579 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %578, i64 0, i32 5
  store i32 24, i32* %579, align 8, !tbaa !19
  %580 = bitcast %struct.jpeg_error_mgr* %578 to void (%struct.jpeg_common_struct*, ...)**
  %581 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %580, align 8, !tbaa !20
  %582 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %581(%struct.jpeg_common_struct* noundef %582) #27
  br label %583

583:                                              ; preds = %576, %570, %561
  %584 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %585 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %584, i64 0, i32 0
  %586 = load i8*, i8** %585, align 8, !tbaa !314
  %587 = getelementptr inbounds i8, i8* %586, i64 1
  store i8* %587, i8** %585, align 8, !tbaa !314
  store i8 100, i8* %586, align 1, !tbaa !7
  %588 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %584, i64 0, i32 1
  %589 = load i64, i64* %588, align 8, !tbaa !315
  %590 = add i64 %589, -1
  store i64 %590, i64* %588, align 8, !tbaa !315
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %592, label %605

592:                                              ; preds = %583
  %593 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %584, i64 0, i32 3
  %594 = bitcast i32 (...)** %593 to i32 (%struct.jpeg_compress_struct*, ...)**
  %595 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %594, align 8, !tbaa !316
  %596 = tail call i32 (%struct.jpeg_compress_struct*, ...) %595(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %605

598:                                              ; preds = %592
  %599 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %600 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %599, align 8, !tbaa !8
  %601 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %600, i64 0, i32 5
  store i32 24, i32* %601, align 8, !tbaa !19
  %602 = bitcast %struct.jpeg_error_mgr* %600 to void (%struct.jpeg_common_struct*, ...)**
  %603 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %602, align 8, !tbaa !20
  %604 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %603(%struct.jpeg_common_struct* noundef %604) #27
  br label %605

605:                                              ; preds = %598, %592, %583
  %606 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %607 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %606, i64 0, i32 0
  %608 = load i8*, i8** %607, align 8, !tbaa !314
  %609 = getelementptr inbounds i8, i8* %608, i64 1
  store i8* %609, i8** %607, align 8, !tbaa !314
  store i8 111, i8* %608, align 1, !tbaa !7
  %610 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %606, i64 0, i32 1
  %611 = load i64, i64* %610, align 8, !tbaa !315
  %612 = add i64 %611, -1
  store i64 %612, i64* %610, align 8, !tbaa !315
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %627

614:                                              ; preds = %605
  %615 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %606, i64 0, i32 3
  %616 = bitcast i32 (...)** %615 to i32 (%struct.jpeg_compress_struct*, ...)**
  %617 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %616, align 8, !tbaa !316
  %618 = tail call i32 (%struct.jpeg_compress_struct*, ...) %617(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %627

620:                                              ; preds = %614
  %621 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %622 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %621, align 8, !tbaa !8
  %623 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %622, i64 0, i32 5
  store i32 24, i32* %623, align 8, !tbaa !19
  %624 = bitcast %struct.jpeg_error_mgr* %622 to void (%struct.jpeg_common_struct*, ...)**
  %625 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %624, align 8, !tbaa !20
  %626 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %625(%struct.jpeg_common_struct* noundef %626) #27
  br label %627

627:                                              ; preds = %620, %614, %605
  %628 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %629 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %628, i64 0, i32 0
  %630 = load i8*, i8** %629, align 8, !tbaa !314
  %631 = getelementptr inbounds i8, i8* %630, i64 1
  store i8* %631, i8** %629, align 8, !tbaa !314
  store i8 98, i8* %630, align 1, !tbaa !7
  %632 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %628, i64 0, i32 1
  %633 = load i64, i64* %632, align 8, !tbaa !315
  %634 = add i64 %633, -1
  store i64 %634, i64* %632, align 8, !tbaa !315
  %635 = icmp eq i64 %634, 0
  br i1 %635, label %636, label %649

636:                                              ; preds = %627
  %637 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %628, i64 0, i32 3
  %638 = bitcast i32 (...)** %637 to i32 (%struct.jpeg_compress_struct*, ...)**
  %639 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %638, align 8, !tbaa !316
  %640 = tail call i32 (%struct.jpeg_compress_struct*, ...) %639(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %649

642:                                              ; preds = %636
  %643 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %644 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %643, align 8, !tbaa !8
  %645 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %644, i64 0, i32 5
  store i32 24, i32* %645, align 8, !tbaa !19
  %646 = bitcast %struct.jpeg_error_mgr* %644 to void (%struct.jpeg_common_struct*, ...)**
  %647 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %646, align 8, !tbaa !20
  %648 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %647(%struct.jpeg_common_struct* noundef %648) #27
  br label %649

649:                                              ; preds = %642, %636, %627
  %650 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %651 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %650, i64 0, i32 0
  %652 = load i8*, i8** %651, align 8, !tbaa !314
  %653 = getelementptr inbounds i8, i8* %652, i64 1
  store i8* %653, i8** %651, align 8, !tbaa !314
  store i8 101, i8* %652, align 1, !tbaa !7
  %654 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %650, i64 0, i32 1
  %655 = load i64, i64* %654, align 8, !tbaa !315
  %656 = add i64 %655, -1
  store i64 %656, i64* %654, align 8, !tbaa !315
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %671

658:                                              ; preds = %649
  %659 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %650, i64 0, i32 3
  %660 = bitcast i32 (...)** %659 to i32 (%struct.jpeg_compress_struct*, ...)**
  %661 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %660, align 8, !tbaa !316
  %662 = tail call i32 (%struct.jpeg_compress_struct*, ...) %661(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %671

664:                                              ; preds = %658
  %665 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %666 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %665, align 8, !tbaa !8
  %667 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %666, i64 0, i32 5
  store i32 24, i32* %667, align 8, !tbaa !19
  %668 = bitcast %struct.jpeg_error_mgr* %666 to void (%struct.jpeg_common_struct*, ...)**
  %669 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %668, align 8, !tbaa !20
  %670 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %669(%struct.jpeg_common_struct* noundef %670) #27
  br label %671

671:                                              ; preds = %664, %658, %649
  %672 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %673 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %672, i64 0, i32 0
  %674 = load i8*, i8** %673, align 8, !tbaa !314
  %675 = getelementptr inbounds i8, i8* %674, i64 1
  store i8* %675, i8** %673, align 8, !tbaa !314
  store i8 0, i8* %674, align 1, !tbaa !7
  %676 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %672, i64 0, i32 1
  %677 = load i64, i64* %676, align 8, !tbaa !315
  %678 = add i64 %677, -1
  store i64 %678, i64* %676, align 8, !tbaa !315
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %680, label %693

680:                                              ; preds = %671
  %681 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %672, i64 0, i32 3
  %682 = bitcast i32 (...)** %681 to i32 (%struct.jpeg_compress_struct*, ...)**
  %683 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %682, align 8, !tbaa !316
  %684 = tail call i32 (%struct.jpeg_compress_struct*, ...) %683(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %693

686:                                              ; preds = %680
  %687 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %688 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %687, align 8, !tbaa !8
  %689 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %688, i64 0, i32 5
  store i32 24, i32* %689, align 8, !tbaa !19
  %690 = bitcast %struct.jpeg_error_mgr* %688 to void (%struct.jpeg_common_struct*, ...)**
  %691 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %690, align 8, !tbaa !20
  %692 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %691(%struct.jpeg_common_struct* noundef %692) #27
  br label %693

693:                                              ; preds = %686, %680, %671
  %694 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %695 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %694, i64 0, i32 0
  %696 = load i8*, i8** %695, align 8, !tbaa !314
  %697 = getelementptr inbounds i8, i8* %696, i64 1
  store i8* %697, i8** %695, align 8, !tbaa !314
  store i8 100, i8* %696, align 1, !tbaa !7
  %698 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %694, i64 0, i32 1
  %699 = load i64, i64* %698, align 8, !tbaa !315
  %700 = add i64 %699, -1
  store i64 %700, i64* %698, align 8, !tbaa !315
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %702, label %715

702:                                              ; preds = %693
  %703 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %694, i64 0, i32 3
  %704 = bitcast i32 (...)** %703 to i32 (%struct.jpeg_compress_struct*, ...)**
  %705 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %704, align 8, !tbaa !316
  %706 = tail call i32 (%struct.jpeg_compress_struct*, ...) %705(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %708, label %715

708:                                              ; preds = %702
  %709 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %710 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %709, align 8, !tbaa !8
  %711 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %710, i64 0, i32 5
  store i32 24, i32* %711, align 8, !tbaa !19
  %712 = bitcast %struct.jpeg_error_mgr* %710 to void (%struct.jpeg_common_struct*, ...)**
  %713 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %712, align 8, !tbaa !20
  %714 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %713(%struct.jpeg_common_struct* noundef %714) #27
  br label %715

715:                                              ; preds = %708, %702, %693
  %716 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %717 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %716, i64 0, i32 0
  %718 = load i8*, i8** %717, align 8, !tbaa !314
  %719 = getelementptr inbounds i8, i8* %718, i64 1
  store i8* %719, i8** %717, align 8, !tbaa !314
  store i8 0, i8* %718, align 1, !tbaa !7
  %720 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %716, i64 0, i32 1
  %721 = load i64, i64* %720, align 8, !tbaa !315
  %722 = add i64 %721, -1
  store i64 %722, i64* %720, align 8, !tbaa !315
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %724, label %737

724:                                              ; preds = %715
  %725 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %716, i64 0, i32 3
  %726 = bitcast i32 (...)** %725 to i32 (%struct.jpeg_compress_struct*, ...)**
  %727 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %726, align 8, !tbaa !316
  %728 = tail call i32 (%struct.jpeg_compress_struct*, ...) %727(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %737

730:                                              ; preds = %724
  %731 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %732 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %731, align 8, !tbaa !8
  %733 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %732, i64 0, i32 5
  store i32 24, i32* %733, align 8, !tbaa !19
  %734 = bitcast %struct.jpeg_error_mgr* %732 to void (%struct.jpeg_common_struct*, ...)**
  %735 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %734, align 8, !tbaa !20
  %736 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %735(%struct.jpeg_common_struct* noundef %736) #27
  br label %737

737:                                              ; preds = %730, %724, %715
  %738 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %739 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %738, i64 0, i32 0
  %740 = load i8*, i8** %739, align 8, !tbaa !314
  %741 = getelementptr inbounds i8, i8* %740, i64 1
  store i8* %741, i8** %739, align 8, !tbaa !314
  store i8 0, i8* %740, align 1, !tbaa !7
  %742 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %738, i64 0, i32 1
  %743 = load i64, i64* %742, align 8, !tbaa !315
  %744 = add i64 %743, -1
  store i64 %744, i64* %742, align 8, !tbaa !315
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %759

746:                                              ; preds = %737
  %747 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %738, i64 0, i32 3
  %748 = bitcast i32 (...)** %747 to i32 (%struct.jpeg_compress_struct*, ...)**
  %749 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %748, align 8, !tbaa !316
  %750 = tail call i32 (%struct.jpeg_compress_struct*, ...) %749(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %752, label %759

752:                                              ; preds = %746
  %753 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %754 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %753, align 8, !tbaa !8
  %755 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %754, i64 0, i32 5
  store i32 24, i32* %755, align 8, !tbaa !19
  %756 = bitcast %struct.jpeg_error_mgr* %754 to void (%struct.jpeg_common_struct*, ...)**
  %757 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %756, align 8, !tbaa !20
  %758 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %757(%struct.jpeg_common_struct* noundef %758) #27
  br label %759

759:                                              ; preds = %752, %746, %737
  %760 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %761 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %760, i64 0, i32 0
  %762 = load i8*, i8** %761, align 8, !tbaa !314
  %763 = getelementptr inbounds i8, i8* %762, i64 1
  store i8* %763, i8** %761, align 8, !tbaa !314
  store i8 0, i8* %762, align 1, !tbaa !7
  %764 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %760, i64 0, i32 1
  %765 = load i64, i64* %764, align 8, !tbaa !315
  %766 = add i64 %765, -1
  store i64 %766, i64* %764, align 8, !tbaa !315
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %768, label %781

768:                                              ; preds = %759
  %769 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %760, i64 0, i32 3
  %770 = bitcast i32 (...)** %769 to i32 (%struct.jpeg_compress_struct*, ...)**
  %771 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %770, align 8, !tbaa !316
  %772 = tail call i32 (%struct.jpeg_compress_struct*, ...) %771(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %773 = icmp eq i32 %772, 0
  br i1 %773, label %774, label %781

774:                                              ; preds = %768
  %775 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %776 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %775, align 8, !tbaa !8
  %777 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %776, i64 0, i32 5
  store i32 24, i32* %777, align 8, !tbaa !19
  %778 = bitcast %struct.jpeg_error_mgr* %776 to void (%struct.jpeg_common_struct*, ...)**
  %779 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %778, align 8, !tbaa !20
  %780 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %779(%struct.jpeg_common_struct* noundef %780) #27
  br label %781

781:                                              ; preds = %774, %768, %759
  %782 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %783 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %782, i64 0, i32 0
  %784 = load i8*, i8** %783, align 8, !tbaa !314
  %785 = getelementptr inbounds i8, i8* %784, i64 1
  store i8* %785, i8** %783, align 8, !tbaa !314
  store i8 0, i8* %784, align 1, !tbaa !7
  %786 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %782, i64 0, i32 1
  %787 = load i64, i64* %786, align 8, !tbaa !315
  %788 = add i64 %787, -1
  store i64 %788, i64* %786, align 8, !tbaa !315
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %803

790:                                              ; preds = %781
  %791 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %782, i64 0, i32 3
  %792 = bitcast i32 (...)** %791 to i32 (%struct.jpeg_compress_struct*, ...)**
  %793 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %792, align 8, !tbaa !316
  %794 = tail call i32 (%struct.jpeg_compress_struct*, ...) %793(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %796, label %803

796:                                              ; preds = %790
  %797 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %798 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %797, align 8, !tbaa !8
  %799 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %798, i64 0, i32 5
  store i32 24, i32* %799, align 8, !tbaa !19
  %800 = bitcast %struct.jpeg_error_mgr* %798 to void (%struct.jpeg_common_struct*, ...)**
  %801 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %800, align 8, !tbaa !20
  %802 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %801(%struct.jpeg_common_struct* noundef %802) #27
  br label %803

803:                                              ; preds = %796, %790, %781
  %804 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  %805 = load i32, i32* %804, align 8, !tbaa !199
  switch i32 %805, label %836 [
    i32 3, label %806
    i32 5, label %821
  ]

806:                                              ; preds = %803
  %807 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %808 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %807, i64 0, i32 0
  %809 = load i8*, i8** %808, align 8, !tbaa !314
  %810 = getelementptr inbounds i8, i8* %809, i64 1
  store i8* %810, i8** %808, align 8, !tbaa !314
  store i8 1, i8* %809, align 1, !tbaa !7
  %811 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %807, i64 0, i32 1
  %812 = load i64, i64* %811, align 8, !tbaa !315
  %813 = add i64 %812, -1
  store i64 %813, i64* %811, align 8, !tbaa !315
  %814 = icmp eq i64 %813, 0
  br i1 %814, label %815, label %858

815:                                              ; preds = %806
  %816 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %807, i64 0, i32 3
  %817 = bitcast i32 (...)** %816 to i32 (%struct.jpeg_compress_struct*, ...)**
  %818 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %817, align 8, !tbaa !316
  %819 = tail call i32 (%struct.jpeg_compress_struct*, ...) %818(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %851, label %858

821:                                              ; preds = %803
  %822 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %823 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %822, i64 0, i32 0
  %824 = load i8*, i8** %823, align 8, !tbaa !314
  %825 = getelementptr inbounds i8, i8* %824, i64 1
  store i8* %825, i8** %823, align 8, !tbaa !314
  store i8 2, i8* %824, align 1, !tbaa !7
  %826 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %822, i64 0, i32 1
  %827 = load i64, i64* %826, align 8, !tbaa !315
  %828 = add i64 %827, -1
  store i64 %828, i64* %826, align 8, !tbaa !315
  %829 = icmp eq i64 %828, 0
  br i1 %829, label %830, label %858

830:                                              ; preds = %821
  %831 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %822, i64 0, i32 3
  %832 = bitcast i32 (...)** %831 to i32 (%struct.jpeg_compress_struct*, ...)**
  %833 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %832, align 8, !tbaa !316
  %834 = tail call i32 (%struct.jpeg_compress_struct*, ...) %833(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %851, label %858

836:                                              ; preds = %803
  %837 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %838 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %837, i64 0, i32 0
  %839 = load i8*, i8** %838, align 8, !tbaa !314
  %840 = getelementptr inbounds i8, i8* %839, i64 1
  store i8* %840, i8** %838, align 8, !tbaa !314
  store i8 0, i8* %839, align 1, !tbaa !7
  %841 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %837, i64 0, i32 1
  %842 = load i64, i64* %841, align 8, !tbaa !315
  %843 = add i64 %842, -1
  store i64 %843, i64* %841, align 8, !tbaa !315
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %845, label %858

845:                                              ; preds = %836
  %846 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %837, i64 0, i32 3
  %847 = bitcast i32 (...)** %846 to i32 (%struct.jpeg_compress_struct*, ...)**
  %848 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %847, align 8, !tbaa !316
  %849 = tail call i32 (%struct.jpeg_compress_struct*, ...) %848(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %850 = icmp eq i32 %849, 0
  br i1 %850, label %851, label %858

851:                                              ; preds = %845, %830, %815
  %852 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %853 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %852, align 8, !tbaa !8
  %854 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %853, i64 0, i32 5
  store i32 24, i32* %854, align 8, !tbaa !19
  %855 = bitcast %struct.jpeg_error_mgr* %853 to void (%struct.jpeg_common_struct*, ...)**
  %856 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %855, align 8, !tbaa !20
  %857 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %856(%struct.jpeg_common_struct* noundef %857) #27
  br label %858

858:                                              ; preds = %851, %845, %836, %830, %821, %815, %806, %469
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_frame_header(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 4, !tbaa !202
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %2, align 8, !tbaa !145
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %struct.jpeg_component_info* [ %17, %8 ], [ %7, %6 ]
  %10 = phi i32 [ %15, %8 ], [ 0, %6 ]
  %11 = phi i32 [ %16, %8 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 0, i32 4
  %13 = load i32, i32* %12, align 8, !tbaa !146
  %14 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %13)
  %15 = add nsw i32 %14, %10
  %16 = add nuw nsw i32 %11, 1
  %17 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %9, i64 1
  %18 = load i32, i32* %3, align 4, !tbaa !202
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %8, label %20, !llvm.loop !317

20:                                               ; preds = %8, %1
  %21 = phi i32 [ 0, %1 ], [ %15, %8 ]
  %22 = phi i32 [ %4, %1 ], [ %18, %8 ]
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %24 = load i32, i32* %23, align 4, !tbaa !230
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %108

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  %28 = load i32, i32* %27, align 4, !tbaa !231
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %108

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  %32 = load i32, i32* %31, align 8, !tbaa !49
  %33 = icmp eq i32 %32, 8
  br i1 %33, label %34, label %98

34:                                               ; preds = %30
  %35 = icmp sgt i32 %22, 0
  br i1 %35, label %36, label %83

36:                                               ; preds = %34
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %2, align 8, !tbaa !145
  %38 = and i32 %22, 1
  %39 = icmp eq i32 %22, 1
  br i1 %39, label %69, label %40

40:                                               ; preds = %36
  %41 = and i32 %22, -2
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi %struct.jpeg_component_info* [ %37, %40 ], [ %66, %64 ]
  %44 = phi i32 [ 1, %40 ], [ %65, %64 ]
  %45 = phi i32 [ 0, %40 ], [ %67, %64 ]
  %46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 5
  %47 = load i32, i32* %46, align 4, !tbaa !318
  %48 = icmp sgt i32 %47, 1
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 6
  %51 = load i32, i32* %50, align 8, !tbaa !204
  %52 = icmp sgt i32 %51, 1
  br i1 %52, label %53, label %54

53:                                               ; preds = %49, %42
  br label %54

54:                                               ; preds = %49, %53
  %55 = phi i32 [ 0, %53 ], [ %44, %49 ]
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 1, i32 5
  %57 = load i32, i32* %56, align 4, !tbaa !318
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 1, i32 6
  %61 = load i32, i32* %60, align 8, !tbaa !204
  %62 = icmp sgt i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %59, %54
  br label %64

64:                                               ; preds = %63, %59
  %65 = phi i32 [ 0, %63 ], [ %55, %59 ]
  %66 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 2
  %67 = add i32 %45, 2
  %68 = icmp eq i32 %67, %41
  br i1 %68, label %69, label %42, !llvm.loop !319

69:                                               ; preds = %64, %36
  %70 = phi i32 [ undef, %36 ], [ %65, %64 ]
  %71 = phi %struct.jpeg_component_info* [ %37, %36 ], [ %66, %64 ]
  %72 = phi i32 [ 1, %36 ], [ %65, %64 ]
  %73 = icmp eq i32 %38, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %71, i64 0, i32 5
  %76 = load i32, i32* %75, align 4, !tbaa !318
  %77 = icmp sgt i32 %76, 1
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %71, i64 0, i32 6
  %80 = load i32, i32* %79, align 8, !tbaa !204
  %81 = icmp sgt i32 %80, 1
  br i1 %81, label %82, label %83

82:                                               ; preds = %78, %74
  br label %83

83:                                               ; preds = %69, %82, %78, %34
  %84 = phi i32 [ 1, %34 ], [ %70, %69 ], [ 0, %82 ], [ %72, %78 ]
  %85 = icmp ne i32 %21, 0
  %86 = icmp ne i32 %84, 0
  %87 = select i1 %85, i1 %86, i1 false
  br i1 %87, label %88, label %98

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %89, align 8, !tbaa !8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 5
  store i32 75, i32* %91, align 8, !tbaa !19
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 1
  %93 = bitcast void (...)** %92 to void (%struct.jpeg_common_struct*, i32, ...)**
  %94 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %93, align 8, !tbaa !52
  %95 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, i32, ...) %94(%struct.jpeg_common_struct* noundef %95, i32 noundef 0) #27
  %96 = load i32, i32* %23, align 4, !tbaa !230
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %102, label %108

98:                                               ; preds = %83, %30
  %99 = phi i32 [ 0, %30 ], [ %84, %83 ]
  %100 = load i32, i32* %27, align 4, !tbaa !231
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %108

102:                                              ; preds = %88
  %103 = load i32, i32* %27, align 4, !tbaa !231
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %107, label %108

105:                                              ; preds = %98
  %106 = icmp eq i32 %99, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %102, %105
  br label %108

108:                                              ; preds = %105, %98, %102, %26, %88, %20, %107
  %109 = phi i32 [ 193, %107 ], [ 201, %20 ], [ 201, %88 ], [ 194, %26 ], [ 194, %102 ], [ 194, %98 ], [ 192, %105 ]
  tail call fastcc void @emit_sof(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %109)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_scan_header(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %3 = bitcast %struct.jpeg_marker_writer** %2 to %struct.my_marker_writer**
  %4 = load %struct.my_marker_writer*, %struct.my_marker_writer** %3, align 8, !tbaa !178
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %6 = load i32, i32* %5, align 4, !tbaa !230
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %44

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %10 = load i32, i32* %9, align 4, !tbaa !286
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %44

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  br label %16

16:                                               ; preds = %12, %39
  %17 = phi i64 [ 0, %12 ], [ %40, %39 ]
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %17
  %19 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8, !tbaa !3
  %20 = load i32, i32* %13, align 4, !tbaa !231
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %16
  %23 = load i32, i32* %14, align 4, !tbaa !279
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %22
  %26 = load i32, i32* %15, align 4, !tbaa !280
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 0, i32 5
  %30 = load i32, i32* %29, align 4, !tbaa !318
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %30, i32 noundef 0)
  br label %39

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 0, i32 6
  %33 = load i32, i32* %32, align 8, !tbaa !204
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %33, i32 noundef 1)
  br label %39

34:                                               ; preds = %16
  %35 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 0, i32 5
  %36 = load i32, i32* %35, align 4, !tbaa !318
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %36, i32 noundef 0)
  %37 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 0, i32 6
  %38 = load i32, i32* %37, align 8, !tbaa !204
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %38, i32 noundef 1)
  br label %39

39:                                               ; preds = %34, %25, %28, %31
  %40 = add nuw nsw i64 %17, 1
  %41 = load i32, i32* %9, align 4, !tbaa !286
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %16, label %44, !llvm.loop !320

44:                                               ; preds = %39, %8, %1
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %46 = load i32, i32* %45, align 8, !tbaa !40
  %47 = getelementptr inbounds %struct.my_marker_writer, %struct.my_marker_writer* %4, i64 0, i32 1
  %48 = load i32, i32* %47, align 8, !tbaa !313
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %189, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %52 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %51, align 8, !tbaa !156
  %53 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %52, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8, !tbaa !314
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %55, i8** %53, align 8, !tbaa !314
  store i8 -1, i8* %54, align 1, !tbaa !7
  %56 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %52, i64 0, i32 1
  %57 = load i64, i64* %56, align 8, !tbaa !315
  %58 = add i64 %57, -1
  store i64 %58, i64* %56, align 8, !tbaa !315
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %73

60:                                               ; preds = %50
  %61 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %52, i64 0, i32 3
  %62 = bitcast i32 (...)** %61 to i32 (%struct.jpeg_compress_struct*, ...)**
  %63 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %62, align 8, !tbaa !316
  %64 = tail call i32 (%struct.jpeg_compress_struct*, ...) %63(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8, !tbaa !8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 5
  store i32 24, i32* %69, align 8, !tbaa !19
  %70 = bitcast %struct.jpeg_error_mgr* %68 to void (%struct.jpeg_common_struct*, ...)**
  %71 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %70, align 8, !tbaa !20
  %72 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %71(%struct.jpeg_common_struct* noundef %72) #27
  br label %73

73:                                               ; preds = %66, %60, %50
  %74 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %51, align 8, !tbaa !156
  %75 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %74, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8, !tbaa !314
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  store i8* %77, i8** %75, align 8, !tbaa !314
  store i8 -35, i8* %76, align 1, !tbaa !7
  %78 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %74, i64 0, i32 1
  %79 = load i64, i64* %78, align 8, !tbaa !315
  %80 = add i64 %79, -1
  store i64 %80, i64* %78, align 8, !tbaa !315
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %73
  %83 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %74, i64 0, i32 3
  %84 = bitcast i32 (...)** %83 to i32 (%struct.jpeg_compress_struct*, ...)**
  %85 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %84, align 8, !tbaa !316
  %86 = tail call i32 (%struct.jpeg_compress_struct*, ...) %85(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %89, align 8, !tbaa !8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 5
  store i32 24, i32* %91, align 8, !tbaa !19
  %92 = bitcast %struct.jpeg_error_mgr* %90 to void (%struct.jpeg_common_struct*, ...)**
  %93 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %92, align 8, !tbaa !20
  %94 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %93(%struct.jpeg_common_struct* noundef %94) #27
  br label %95

95:                                               ; preds = %88, %82, %73
  %96 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %51, align 8, !tbaa !156
  %97 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %96, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !314
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  store i8* %99, i8** %97, align 8, !tbaa !314
  store i8 0, i8* %98, align 1, !tbaa !7
  %100 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %96, i64 0, i32 1
  %101 = load i64, i64* %100, align 8, !tbaa !315
  %102 = add i64 %101, -1
  store i64 %102, i64* %100, align 8, !tbaa !315
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %117

104:                                              ; preds = %95
  %105 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %96, i64 0, i32 3
  %106 = bitcast i32 (...)** %105 to i32 (%struct.jpeg_compress_struct*, ...)**
  %107 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %106, align 8, !tbaa !316
  %108 = tail call i32 (%struct.jpeg_compress_struct*, ...) %107(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %117

110:                                              ; preds = %104
  %111 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %112 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %111, align 8, !tbaa !8
  %113 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %112, i64 0, i32 5
  store i32 24, i32* %113, align 8, !tbaa !19
  %114 = bitcast %struct.jpeg_error_mgr* %112 to void (%struct.jpeg_common_struct*, ...)**
  %115 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %114, align 8, !tbaa !20
  %116 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %115(%struct.jpeg_common_struct* noundef %116) #27
  br label %117

117:                                              ; preds = %110, %104, %95
  %118 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %51, align 8, !tbaa !156
  %119 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %118, i64 0, i32 0
  %120 = load i8*, i8** %119, align 8, !tbaa !314
  %121 = getelementptr inbounds i8, i8* %120, i64 1
  store i8* %121, i8** %119, align 8, !tbaa !314
  store i8 4, i8* %120, align 1, !tbaa !7
  %122 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %118, i64 0, i32 1
  %123 = load i64, i64* %122, align 8, !tbaa !315
  %124 = add i64 %123, -1
  store i64 %124, i64* %122, align 8, !tbaa !315
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %139

126:                                              ; preds = %117
  %127 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %118, i64 0, i32 3
  %128 = bitcast i32 (...)** %127 to i32 (%struct.jpeg_compress_struct*, ...)**
  %129 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %128, align 8, !tbaa !316
  %130 = tail call i32 (%struct.jpeg_compress_struct*, ...) %129(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %139

132:                                              ; preds = %126
  %133 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %134 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %133, align 8, !tbaa !8
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %134, i64 0, i32 5
  store i32 24, i32* %135, align 8, !tbaa !19
  %136 = bitcast %struct.jpeg_error_mgr* %134 to void (%struct.jpeg_common_struct*, ...)**
  %137 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %136, align 8, !tbaa !20
  %138 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %137(%struct.jpeg_common_struct* noundef %138) #27
  br label %139

139:                                              ; preds = %132, %126, %117
  %140 = load i32, i32* %45, align 8, !tbaa !40
  %141 = lshr i32 %140, 8
  %142 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %51, align 8, !tbaa !156
  %143 = trunc i32 %141 to i8
  %144 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %142, i64 0, i32 0
  %145 = load i8*, i8** %144, align 8, !tbaa !314
  %146 = getelementptr inbounds i8, i8* %145, i64 1
  store i8* %146, i8** %144, align 8, !tbaa !314
  store i8 %143, i8* %145, align 1, !tbaa !7
  %147 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %142, i64 0, i32 1
  %148 = load i64, i64* %147, align 8, !tbaa !315
  %149 = add i64 %148, -1
  store i64 %149, i64* %147, align 8, !tbaa !315
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %164

151:                                              ; preds = %139
  %152 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %142, i64 0, i32 3
  %153 = bitcast i32 (...)** %152 to i32 (%struct.jpeg_compress_struct*, ...)**
  %154 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %153, align 8, !tbaa !316
  %155 = tail call i32 (%struct.jpeg_compress_struct*, ...) %154(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %164

157:                                              ; preds = %151
  %158 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %159 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %158, align 8, !tbaa !8
  %160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %159, i64 0, i32 5
  store i32 24, i32* %160, align 8, !tbaa !19
  %161 = bitcast %struct.jpeg_error_mgr* %159 to void (%struct.jpeg_common_struct*, ...)**
  %162 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %161, align 8, !tbaa !20
  %163 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %162(%struct.jpeg_common_struct* noundef %163) #27
  br label %164

164:                                              ; preds = %157, %151, %139
  %165 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %51, align 8, !tbaa !156
  %166 = trunc i32 %140 to i8
  %167 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %165, i64 0, i32 0
  %168 = load i8*, i8** %167, align 8, !tbaa !314
  %169 = getelementptr inbounds i8, i8* %168, i64 1
  store i8* %169, i8** %167, align 8, !tbaa !314
  store i8 %166, i8* %168, align 1, !tbaa !7
  %170 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %165, i64 0, i32 1
  %171 = load i64, i64* %170, align 8, !tbaa !315
  %172 = add i64 %171, -1
  store i64 %172, i64* %170, align 8, !tbaa !315
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %187

174:                                              ; preds = %164
  %175 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %165, i64 0, i32 3
  %176 = bitcast i32 (...)** %175 to i32 (%struct.jpeg_compress_struct*, ...)**
  %177 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %176, align 8, !tbaa !316
  %178 = tail call i32 (%struct.jpeg_compress_struct*, ...) %177(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %187

180:                                              ; preds = %174
  %181 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %182 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %181, align 8, !tbaa !8
  %183 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %182, i64 0, i32 5
  store i32 24, i32* %183, align 8, !tbaa !19
  %184 = bitcast %struct.jpeg_error_mgr* %182 to void (%struct.jpeg_common_struct*, ...)**
  %185 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %184, align 8, !tbaa !20
  %186 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %185(%struct.jpeg_common_struct* noundef %186) #27
  br label %187

187:                                              ; preds = %164, %174, %180
  %188 = load i32, i32* %45, align 8, !tbaa !40
  store i32 %188, i32* %47, align 8, !tbaa !313
  br label %189

189:                                              ; preds = %187, %44
  %190 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %191 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %192 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %191, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8, !tbaa !314
  %194 = getelementptr inbounds i8, i8* %193, i64 1
  store i8* %194, i8** %192, align 8, !tbaa !314
  store i8 -1, i8* %193, align 1, !tbaa !7
  %195 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %191, i64 0, i32 1
  %196 = load i64, i64* %195, align 8, !tbaa !315
  %197 = add i64 %196, -1
  store i64 %197, i64* %195, align 8, !tbaa !315
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %212

199:                                              ; preds = %189
  %200 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %191, i64 0, i32 3
  %201 = bitcast i32 (...)** %200 to i32 (%struct.jpeg_compress_struct*, ...)**
  %202 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %201, align 8, !tbaa !316
  %203 = tail call i32 (%struct.jpeg_compress_struct*, ...) %202(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %212

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %207 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %206, align 8, !tbaa !8
  %208 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %207, i64 0, i32 5
  store i32 24, i32* %208, align 8, !tbaa !19
  %209 = bitcast %struct.jpeg_error_mgr* %207 to void (%struct.jpeg_common_struct*, ...)**
  %210 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %209, align 8, !tbaa !20
  %211 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %210(%struct.jpeg_common_struct* noundef %211) #27
  br label %212

212:                                              ; preds = %205, %199, %189
  %213 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %214 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %213, i64 0, i32 0
  %215 = load i8*, i8** %214, align 8, !tbaa !314
  %216 = getelementptr inbounds i8, i8* %215, i64 1
  store i8* %216, i8** %214, align 8, !tbaa !314
  store i8 -38, i8* %215, align 1, !tbaa !7
  %217 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %213, i64 0, i32 1
  %218 = load i64, i64* %217, align 8, !tbaa !315
  %219 = add i64 %218, -1
  store i64 %219, i64* %217, align 8, !tbaa !315
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %234

221:                                              ; preds = %212
  %222 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %213, i64 0, i32 3
  %223 = bitcast i32 (...)** %222 to i32 (%struct.jpeg_compress_struct*, ...)**
  %224 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %223, align 8, !tbaa !316
  %225 = tail call i32 (%struct.jpeg_compress_struct*, ...) %224(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %234

227:                                              ; preds = %221
  %228 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %229 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %228, align 8, !tbaa !8
  %230 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %229, i64 0, i32 5
  store i32 24, i32* %230, align 8, !tbaa !19
  %231 = bitcast %struct.jpeg_error_mgr* %229 to void (%struct.jpeg_common_struct*, ...)**
  %232 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %231, align 8, !tbaa !20
  %233 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %232(%struct.jpeg_common_struct* noundef %233) #27
  br label %234

234:                                              ; preds = %227, %221, %212
  %235 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %236 = load i32, i32* %235, align 4, !tbaa !286
  %237 = shl nsw i32 %236, 1
  %238 = add nsw i32 %237, 6
  %239 = lshr i32 %238, 8
  %240 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %241 = trunc i32 %239 to i8
  %242 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8, !tbaa !314
  %244 = getelementptr inbounds i8, i8* %243, i64 1
  store i8* %244, i8** %242, align 8, !tbaa !314
  store i8 %241, i8* %243, align 1, !tbaa !7
  %245 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 1
  %246 = load i64, i64* %245, align 8, !tbaa !315
  %247 = add i64 %246, -1
  store i64 %247, i64* %245, align 8, !tbaa !315
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %262

249:                                              ; preds = %234
  %250 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 3
  %251 = bitcast i32 (...)** %250 to i32 (%struct.jpeg_compress_struct*, ...)**
  %252 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %251, align 8, !tbaa !316
  %253 = tail call i32 (%struct.jpeg_compress_struct*, ...) %252(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %262

255:                                              ; preds = %249
  %256 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %257 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %256, align 8, !tbaa !8
  %258 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %257, i64 0, i32 5
  store i32 24, i32* %258, align 8, !tbaa !19
  %259 = bitcast %struct.jpeg_error_mgr* %257 to void (%struct.jpeg_common_struct*, ...)**
  %260 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %259, align 8, !tbaa !20
  %261 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %260(%struct.jpeg_common_struct* noundef %261) #27
  br label %262

262:                                              ; preds = %255, %249, %234
  %263 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %264 = trunc i32 %238 to i8
  %265 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %263, i64 0, i32 0
  %266 = load i8*, i8** %265, align 8, !tbaa !314
  %267 = getelementptr inbounds i8, i8* %266, i64 1
  store i8* %267, i8** %265, align 8, !tbaa !314
  store i8 %264, i8* %266, align 1, !tbaa !7
  %268 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %263, i64 0, i32 1
  %269 = load i64, i64* %268, align 8, !tbaa !315
  %270 = add i64 %269, -1
  store i64 %270, i64* %268, align 8, !tbaa !315
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %285

272:                                              ; preds = %262
  %273 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %263, i64 0, i32 3
  %274 = bitcast i32 (...)** %273 to i32 (%struct.jpeg_compress_struct*, ...)**
  %275 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %274, align 8, !tbaa !316
  %276 = tail call i32 (%struct.jpeg_compress_struct*, ...) %275(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %285

278:                                              ; preds = %272
  %279 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %280 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %279, align 8, !tbaa !8
  %281 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %280, i64 0, i32 5
  store i32 24, i32* %281, align 8, !tbaa !19
  %282 = bitcast %struct.jpeg_error_mgr* %280 to void (%struct.jpeg_common_struct*, ...)**
  %283 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %282, align 8, !tbaa !20
  %284 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %283(%struct.jpeg_common_struct* noundef %284) #27
  br label %285

285:                                              ; preds = %278, %272, %262
  %286 = load i32, i32* %235, align 4, !tbaa !286
  %287 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %288 = trunc i32 %286 to i8
  %289 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %287, i64 0, i32 0
  %290 = load i8*, i8** %289, align 8, !tbaa !314
  %291 = getelementptr inbounds i8, i8* %290, i64 1
  store i8* %291, i8** %289, align 8, !tbaa !314
  store i8 %288, i8* %290, align 1, !tbaa !7
  %292 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %287, i64 0, i32 1
  %293 = load i64, i64* %292, align 8, !tbaa !315
  %294 = add i64 %293, -1
  store i64 %294, i64* %292, align 8, !tbaa !315
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %309

296:                                              ; preds = %285
  %297 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %287, i64 0, i32 3
  %298 = bitcast i32 (...)** %297 to i32 (%struct.jpeg_compress_struct*, ...)**
  %299 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %298, align 8, !tbaa !316
  %300 = tail call i32 (%struct.jpeg_compress_struct*, ...) %299(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %296
  %303 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %304 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %303, align 8, !tbaa !8
  %305 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 5
  store i32 24, i32* %305, align 8, !tbaa !19
  %306 = bitcast %struct.jpeg_error_mgr* %304 to void (%struct.jpeg_common_struct*, ...)**
  %307 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %306, align 8, !tbaa !20
  %308 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %307(%struct.jpeg_common_struct* noundef %308) #27
  br label %309

309:                                              ; preds = %302, %296, %285
  %310 = load i32, i32* %235, align 4, !tbaa !286
  %311 = icmp sgt i32 %310, 0
  br i1 %311, label %312, label %391

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %314 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %315 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  %316 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %317 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  br label %318

318:                                              ; preds = %386, %312
  %319 = phi i64 [ 0, %312 ], [ %387, %386 ]
  %320 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %319
  %321 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %320, align 8, !tbaa !3
  %322 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %321, i64 0, i32 0
  %323 = load i32, i32* %322, align 8, !tbaa !203
  %324 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %325 = trunc i32 %323 to i8
  %326 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %324, i64 0, i32 0
  %327 = load i8*, i8** %326, align 8, !tbaa !314
  %328 = getelementptr inbounds i8, i8* %327, i64 1
  store i8* %328, i8** %326, align 8, !tbaa !314
  store i8 %325, i8* %327, align 1, !tbaa !7
  %329 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %324, i64 0, i32 1
  %330 = load i64, i64* %329, align 8, !tbaa !315
  %331 = add i64 %330, -1
  store i64 %331, i64* %329, align 8, !tbaa !315
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %344

333:                                              ; preds = %318
  %334 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %324, i64 0, i32 3
  %335 = bitcast i32 (...)** %334 to i32 (%struct.jpeg_compress_struct*, ...)**
  %336 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %335, align 8, !tbaa !316
  %337 = tail call i32 (%struct.jpeg_compress_struct*, ...) %336(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %344

339:                                              ; preds = %333
  %340 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %313, align 8, !tbaa !8
  %341 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %340, i64 0, i32 5
  store i32 24, i32* %341, align 8, !tbaa !19
  %342 = bitcast %struct.jpeg_error_mgr* %340 to void (%struct.jpeg_common_struct*, ...)**
  %343 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %342, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %343(%struct.jpeg_common_struct* noundef nonnull %314) #27
  br label %344

344:                                              ; preds = %339, %333, %318
  %345 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %321, i64 0, i32 5
  %346 = load i32, i32* %345, align 4, !tbaa !318
  %347 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %321, i64 0, i32 6
  %348 = load i32, i32* %347, align 8, !tbaa !204
  %349 = load i32, i32* %315, align 4, !tbaa !231
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %361, label %351

351:                                              ; preds = %344
  %352 = load i32, i32* %316, align 4, !tbaa !279
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %351
  %355 = load i32, i32* %317, align 4, !tbaa !280
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %361, label %357

357:                                              ; preds = %354
  %358 = load i32, i32* %5, align 4, !tbaa !230
  %359 = icmp eq i32 %358, 0
  %360 = select i1 %359, i32 0, i32 %346
  br label %361

361:                                              ; preds = %357, %354, %351, %344
  %362 = phi i32 [ %346, %354 ], [ %346, %344 ], [ %360, %357 ], [ 0, %351 ]
  %363 = phi i32 [ 0, %354 ], [ %348, %344 ], [ 0, %357 ], [ %348, %351 ]
  %364 = shl i32 %362, 4
  %365 = add nsw i32 %364, %363
  %366 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %367 = trunc i32 %365 to i8
  %368 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %366, i64 0, i32 0
  %369 = load i8*, i8** %368, align 8, !tbaa !314
  %370 = getelementptr inbounds i8, i8* %369, i64 1
  store i8* %370, i8** %368, align 8, !tbaa !314
  store i8 %367, i8* %369, align 1, !tbaa !7
  %371 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %366, i64 0, i32 1
  %372 = load i64, i64* %371, align 8, !tbaa !315
  %373 = add i64 %372, -1
  store i64 %373, i64* %371, align 8, !tbaa !315
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %386

375:                                              ; preds = %361
  %376 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %366, i64 0, i32 3
  %377 = bitcast i32 (...)** %376 to i32 (%struct.jpeg_compress_struct*, ...)**
  %378 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %377, align 8, !tbaa !316
  %379 = tail call i32 (%struct.jpeg_compress_struct*, ...) %378(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %386

381:                                              ; preds = %375
  %382 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %313, align 8, !tbaa !8
  %383 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %382, i64 0, i32 5
  store i32 24, i32* %383, align 8, !tbaa !19
  %384 = bitcast %struct.jpeg_error_mgr* %382 to void (%struct.jpeg_common_struct*, ...)**
  %385 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %384, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %385(%struct.jpeg_common_struct* noundef nonnull %314) #27
  br label %386

386:                                              ; preds = %381, %375, %361
  %387 = add nuw nsw i64 %319, 1
  %388 = load i32, i32* %235, align 4, !tbaa !286
  %389 = sext i32 %388 to i64
  %390 = icmp slt i64 %387, %389
  br i1 %390, label %318, label %391, !llvm.loop !321

391:                                              ; preds = %386, %309
  %392 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %393 = load i32, i32* %392, align 4, !tbaa !279
  %394 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %395 = trunc i32 %393 to i8
  %396 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %394, i64 0, i32 0
  %397 = load i8*, i8** %396, align 8, !tbaa !314
  %398 = getelementptr inbounds i8, i8* %397, i64 1
  store i8* %398, i8** %396, align 8, !tbaa !314
  store i8 %395, i8* %397, align 1, !tbaa !7
  %399 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %394, i64 0, i32 1
  %400 = load i64, i64* %399, align 8, !tbaa !315
  %401 = add i64 %400, -1
  store i64 %401, i64* %399, align 8, !tbaa !315
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %416

403:                                              ; preds = %391
  %404 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %394, i64 0, i32 3
  %405 = bitcast i32 (...)** %404 to i32 (%struct.jpeg_compress_struct*, ...)**
  %406 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %405, align 8, !tbaa !316
  %407 = tail call i32 (%struct.jpeg_compress_struct*, ...) %406(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %416

409:                                              ; preds = %403
  %410 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %411 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %410, align 8, !tbaa !8
  %412 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %411, i64 0, i32 5
  store i32 24, i32* %412, align 8, !tbaa !19
  %413 = bitcast %struct.jpeg_error_mgr* %411 to void (%struct.jpeg_common_struct*, ...)**
  %414 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %413, align 8, !tbaa !20
  %415 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %414(%struct.jpeg_common_struct* noundef %415) #27
  br label %416

416:                                              ; preds = %409, %403, %391
  %417 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  %418 = load i32, i32* %417, align 8, !tbaa !289
  %419 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %420 = trunc i32 %418 to i8
  %421 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %419, i64 0, i32 0
  %422 = load i8*, i8** %421, align 8, !tbaa !314
  %423 = getelementptr inbounds i8, i8* %422, i64 1
  store i8* %423, i8** %421, align 8, !tbaa !314
  store i8 %420, i8* %422, align 1, !tbaa !7
  %424 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %419, i64 0, i32 1
  %425 = load i64, i64* %424, align 8, !tbaa !315
  %426 = add i64 %425, -1
  store i64 %426, i64* %424, align 8, !tbaa !315
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %441

428:                                              ; preds = %416
  %429 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %419, i64 0, i32 3
  %430 = bitcast i32 (...)** %429 to i32 (%struct.jpeg_compress_struct*, ...)**
  %431 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %430, align 8, !tbaa !316
  %432 = tail call i32 (%struct.jpeg_compress_struct*, ...) %431(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %441

434:                                              ; preds = %428
  %435 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %436 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %435, align 8, !tbaa !8
  %437 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %436, i64 0, i32 5
  store i32 24, i32* %437, align 8, !tbaa !19
  %438 = bitcast %struct.jpeg_error_mgr* %436 to void (%struct.jpeg_common_struct*, ...)**
  %439 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %438, align 8, !tbaa !20
  %440 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %439(%struct.jpeg_common_struct* noundef %440) #27
  br label %441

441:                                              ; preds = %434, %428, %416
  %442 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  %443 = load i32, i32* %442, align 4, !tbaa !280
  %444 = shl i32 %443, 4
  %445 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  %446 = load i32, i32* %445, align 8, !tbaa !292
  %447 = add nsw i32 %444, %446
  %448 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %190, align 8, !tbaa !156
  %449 = trunc i32 %447 to i8
  %450 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %448, i64 0, i32 0
  %451 = load i8*, i8** %450, align 8, !tbaa !314
  %452 = getelementptr inbounds i8, i8* %451, i64 1
  store i8* %452, i8** %450, align 8, !tbaa !314
  store i8 %449, i8* %451, align 1, !tbaa !7
  %453 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %448, i64 0, i32 1
  %454 = load i64, i64* %453, align 8, !tbaa !315
  %455 = add i64 %454, -1
  store i64 %455, i64* %453, align 8, !tbaa !315
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %470

457:                                              ; preds = %441
  %458 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %448, i64 0, i32 3
  %459 = bitcast i32 (...)** %458 to i32 (%struct.jpeg_compress_struct*, ...)**
  %460 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %459, align 8, !tbaa !316
  %461 = tail call i32 (%struct.jpeg_compress_struct*, ...) %460(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %470

463:                                              ; preds = %457
  %464 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %465 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %464, align 8, !tbaa !8
  %466 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %465, i64 0, i32 5
  store i32 24, i32* %466, align 8, !tbaa !19
  %467 = bitcast %struct.jpeg_error_mgr* %465 to void (%struct.jpeg_common_struct*, ...)**
  %468 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %467, align 8, !tbaa !20
  %469 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %468(%struct.jpeg_common_struct* noundef %469) #27
  br label %470

470:                                              ; preds = %441, %457, %463
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_file_trailer(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8, !tbaa !156
  %4 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8, !tbaa !314
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %6, i8** %4, align 8, !tbaa !314
  store i8 -1, i8* %5, align 1, !tbaa !7
  %7 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !tbaa !315
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8, !tbaa !315
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 3
  %13 = bitcast i32 (...)** %12 to i32 (%struct.jpeg_compress_struct*, ...)**
  %14 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %13, align 8, !tbaa !316
  %15 = tail call i32 (%struct.jpeg_compress_struct*, ...) %14(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 24, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %17, %11, %1
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8, !tbaa !156
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !314
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %28, i8** %26, align 8, !tbaa !314
  store i8 -39, i8* %27, align 1, !tbaa !7
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 1
  %30 = load i64, i64* %29, align 8, !tbaa !315
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8, !tbaa !315
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 3
  %35 = bitcast i32 (...)** %34 to i32 (%struct.jpeg_compress_struct*, ...)**
  %36 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %35, align 8, !tbaa !316
  %37 = tail call i32 (%struct.jpeg_compress_struct*, ...) %36(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8, !tbaa !8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 5
  store i32 24, i32* %42, align 8, !tbaa !19
  %43 = bitcast %struct.jpeg_error_mgr* %41 to void (%struct.jpeg_common_struct*, ...)**
  %44 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %43, align 8, !tbaa !20
  %45 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %44(%struct.jpeg_common_struct* noundef %45) #27
  br label %46

46:                                               ; preds = %24, %33, %39
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_tables_only(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8, !tbaa !156
  %4 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8, !tbaa !314
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %6, i8** %4, align 8, !tbaa !314
  store i8 -1, i8* %5, align 1, !tbaa !7
  %7 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !tbaa !315
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8, !tbaa !315
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 3
  %13 = bitcast i32 (...)** %12 to i32 (%struct.jpeg_compress_struct*, ...)**
  %14 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %13, align 8, !tbaa !316
  %15 = tail call i32 (%struct.jpeg_compress_struct*, ...) %14(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 24, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %17, %11, %1
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8, !tbaa !156
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !314
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %28, i8** %26, align 8, !tbaa !314
  store i8 -40, i8* %27, align 1, !tbaa !7
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 1
  %30 = load i64, i64* %29, align 8, !tbaa !315
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8, !tbaa !315
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 3
  %35 = bitcast i32 (...)** %34 to i32 (%struct.jpeg_compress_struct*, ...)**
  %36 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %35, align 8, !tbaa !316
  %37 = tail call i32 (%struct.jpeg_compress_struct*, ...) %36(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %40, align 8, !tbaa !8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 5
  store i32 24, i32* %42, align 8, !tbaa !19
  %43 = bitcast %struct.jpeg_error_mgr* %41 to void (%struct.jpeg_common_struct*, ...)**
  %44 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %43, align 8, !tbaa !20
  %45 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %44(%struct.jpeg_common_struct* noundef %45) #27
  br label %46

46:                                               ; preds = %24, %33, %39
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 0
  %48 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %47, align 8, !tbaa !3
  %49 = icmp eq %struct.JQUANT_TBL* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0)
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 1
  %54 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %53, align 8, !tbaa !3
  %55 = icmp eq %struct.JQUANT_TBL* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 1)
  br label %58

58:                                               ; preds = %56, %52
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 2
  %60 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %59, align 8, !tbaa !3
  %61 = icmp eq %struct.JQUANT_TBL* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 2)
  br label %64

64:                                               ; preds = %62, %58
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 3
  %66 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %65, align 8, !tbaa !3
  %67 = icmp eq %struct.JQUANT_TBL* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = tail call fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 3)
  br label %70

70:                                               ; preds = %68, %64
  %71 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %72 = load i32, i32* %71, align 4, !tbaa !230
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %114

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 0
  %76 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %75, align 8, !tbaa !3
  %77 = icmp eq %struct.JHUFF_TBL* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0, i32 noundef 0)
  br label %79

79:                                               ; preds = %78, %74
  %80 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 0
  %81 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %80, align 8, !tbaa !3
  %82 = icmp eq %struct.JHUFF_TBL* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0, i32 noundef 1)
  br label %84

84:                                               ; preds = %79, %83
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 1
  %86 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %85, align 8, !tbaa !3
  %87 = icmp eq %struct.JHUFF_TBL* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 1, i32 noundef 0)
  br label %89

89:                                               ; preds = %88, %84
  %90 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 1
  %91 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %90, align 8, !tbaa !3
  %92 = icmp eq %struct.JHUFF_TBL* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 1, i32 noundef 1)
  br label %94

94:                                               ; preds = %93, %89
  %95 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 2
  %96 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %95, align 8, !tbaa !3
  %97 = icmp eq %struct.JHUFF_TBL* %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 2, i32 noundef 0)
  br label %99

99:                                               ; preds = %98, %94
  %100 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 2
  %101 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %100, align 8, !tbaa !3
  %102 = icmp eq %struct.JHUFF_TBL* %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 2, i32 noundef 1)
  br label %104

104:                                              ; preds = %103, %99
  %105 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 3
  %106 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %105, align 8, !tbaa !3
  %107 = icmp eq %struct.JHUFF_TBL* %106, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 3, i32 noundef 0)
  br label %109

109:                                              ; preds = %108, %104
  %110 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 3
  %111 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %110, align 8, !tbaa !3
  %112 = icmp eq %struct.JHUFF_TBL* %111, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %109
  tail call fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 3, i32 noundef 1)
  br label %114

114:                                              ; preds = %109, %113, %70
  %115 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8, !tbaa !156
  %116 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %115, i64 0, i32 0
  %117 = load i8*, i8** %116, align 8, !tbaa !314
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  store i8* %118, i8** %116, align 8, !tbaa !314
  store i8 -1, i8* %117, align 1, !tbaa !7
  %119 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %115, i64 0, i32 1
  %120 = load i64, i64* %119, align 8, !tbaa !315
  %121 = add i64 %120, -1
  store i64 %121, i64* %119, align 8, !tbaa !315
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %136

123:                                              ; preds = %114
  %124 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %115, i64 0, i32 3
  %125 = bitcast i32 (...)** %124 to i32 (%struct.jpeg_compress_struct*, ...)**
  %126 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %125, align 8, !tbaa !316
  %127 = tail call i32 (%struct.jpeg_compress_struct*, ...) %126(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8, !tbaa !8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 5
  store i32 24, i32* %132, align 8, !tbaa !19
  %133 = bitcast %struct.jpeg_error_mgr* %131 to void (%struct.jpeg_common_struct*, ...)**
  %134 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %133, align 8, !tbaa !20
  %135 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %134(%struct.jpeg_common_struct* noundef %135) #27
  br label %136

136:                                              ; preds = %129, %123, %114
  %137 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8, !tbaa !156
  %138 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %137, i64 0, i32 0
  %139 = load i8*, i8** %138, align 8, !tbaa !314
  %140 = getelementptr inbounds i8, i8* %139, i64 1
  store i8* %140, i8** %138, align 8, !tbaa !314
  store i8 -39, i8* %139, align 1, !tbaa !7
  %141 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %137, i64 0, i32 1
  %142 = load i64, i64* %141, align 8, !tbaa !315
  %143 = add i64 %142, -1
  store i64 %143, i64* %141, align 8, !tbaa !315
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %158

145:                                              ; preds = %136
  %146 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %137, i64 0, i32 3
  %147 = bitcast i32 (...)** %146 to i32 (%struct.jpeg_compress_struct*, ...)**
  %148 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %147, align 8, !tbaa !316
  %149 = tail call i32 (%struct.jpeg_compress_struct*, ...) %148(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %158

151:                                              ; preds = %145
  %152 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %153 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %152, align 8, !tbaa !8
  %154 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i64 0, i32 5
  store i32 24, i32* %154, align 8, !tbaa !19
  %155 = bitcast %struct.jpeg_error_mgr* %153 to void (%struct.jpeg_common_struct*, ...)**
  %156 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %155, align 8, !tbaa !20
  %157 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %156(%struct.jpeg_common_struct* noundef %157) #27
  br label %158

158:                                              ; preds = %136, %145, %151
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_marker_header(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32 noundef %2) #2 {
  %4 = icmp ugt i32 %2, 65533
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 5
  store i32 11, i32* %8, align 8, !tbaa !19
  %9 = bitcast %struct.jpeg_error_mgr* %7 to void (%struct.jpeg_common_struct*, ...)**
  %10 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %9, align 8, !tbaa !20
  %11 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %10(%struct.jpeg_common_struct* noundef %11) #27
  br label %12

12:                                               ; preds = %5, %3
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %14 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %13, align 8, !tbaa !156
  %15 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8, !tbaa !314
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %17, i8** %15, align 8, !tbaa !314
  store i8 -1, i8* %16, align 1, !tbaa !7
  %18 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 1
  %19 = load i64, i64* %18, align 8, !tbaa !315
  %20 = add i64 %19, -1
  store i64 %20, i64* %18, align 8, !tbaa !315
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 3
  %24 = bitcast i32 (...)** %23 to i32 (%struct.jpeg_compress_struct*, ...)**
  %25 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %24, align 8, !tbaa !316
  %26 = tail call i32 (%struct.jpeg_compress_struct*, ...) %25(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 24, i32* %31, align 8, !tbaa !19
  %32 = bitcast %struct.jpeg_error_mgr* %30 to void (%struct.jpeg_common_struct*, ...)**
  %33 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %32, align 8, !tbaa !20
  %34 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %33(%struct.jpeg_common_struct* noundef %34) #27
  br label %35

35:                                               ; preds = %28, %22, %12
  %36 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %13, align 8, !tbaa !156
  %37 = trunc i32 %1 to i8
  %38 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %36, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8, !tbaa !314
  %40 = getelementptr inbounds i8, i8* %39, i64 1
  store i8* %40, i8** %38, align 8, !tbaa !314
  store i8 %37, i8* %39, align 1, !tbaa !7
  %41 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !tbaa !315
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8, !tbaa !315
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %58

45:                                               ; preds = %35
  %46 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %36, i64 0, i32 3
  %47 = bitcast i32 (...)** %46 to i32 (%struct.jpeg_compress_struct*, ...)**
  %48 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %47, align 8, !tbaa !316
  %49 = tail call i32 (%struct.jpeg_compress_struct*, ...) %48(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %52, align 8, !tbaa !8
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 5
  store i32 24, i32* %54, align 8, !tbaa !19
  %55 = bitcast %struct.jpeg_error_mgr* %53 to void (%struct.jpeg_common_struct*, ...)**
  %56 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %55, align 8, !tbaa !20
  %57 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %56(%struct.jpeg_common_struct* noundef %57) #27
  br label %58

58:                                               ; preds = %35, %45, %51
  %59 = add i32 %2, 2
  %60 = lshr i32 %59, 8
  %61 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %13, align 8, !tbaa !156
  %62 = trunc i32 %60 to i8
  %63 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %61, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8, !tbaa !314
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  store i8* %65, i8** %63, align 8, !tbaa !314
  store i8 %62, i8* %64, align 1, !tbaa !7
  %66 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8, !tbaa !315
  %68 = add i64 %67, -1
  store i64 %68, i64* %66, align 8, !tbaa !315
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %61, i64 0, i32 3
  %72 = bitcast i32 (...)** %71 to i32 (%struct.jpeg_compress_struct*, ...)**
  %73 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %72, align 8, !tbaa !316
  %74 = tail call i32 (%struct.jpeg_compress_struct*, ...) %73(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %77, align 8, !tbaa !8
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i64 0, i32 5
  store i32 24, i32* %79, align 8, !tbaa !19
  %80 = bitcast %struct.jpeg_error_mgr* %78 to void (%struct.jpeg_common_struct*, ...)**
  %81 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %80, align 8, !tbaa !20
  %82 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %81(%struct.jpeg_common_struct* noundef %82) #27
  br label %83

83:                                               ; preds = %76, %70, %58
  %84 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %13, align 8, !tbaa !156
  %85 = trunc i32 %59 to i8
  %86 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %84, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8, !tbaa !314
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  store i8* %88, i8** %86, align 8, !tbaa !314
  store i8 %85, i8* %87, align 1, !tbaa !7
  %89 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %84, i64 0, i32 1
  %90 = load i64, i64* %89, align 8, !tbaa !315
  %91 = add i64 %90, -1
  store i64 %91, i64* %89, align 8, !tbaa !315
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %106

93:                                               ; preds = %83
  %94 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %84, i64 0, i32 3
  %95 = bitcast i32 (...)** %94 to i32 (%struct.jpeg_compress_struct*, ...)**
  %96 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %95, align 8, !tbaa !316
  %97 = tail call i32 (%struct.jpeg_compress_struct*, ...) %96(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %106

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %100, align 8, !tbaa !8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i64 0, i32 5
  store i32 24, i32* %102, align 8, !tbaa !19
  %103 = bitcast %struct.jpeg_error_mgr* %101 to void (%struct.jpeg_common_struct*, ...)**
  %104 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %103, align 8, !tbaa !20
  %105 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %104(%struct.jpeg_common_struct* noundef %105) #27
  br label %106

106:                                              ; preds = %83, %93, %99
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_marker_byte(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %4 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %5 = trunc i32 %1 to i8
  %6 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !314
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8* %8, i8** %6, align 8, !tbaa !314
  store i8 %5, i8* %7, align 1, !tbaa !7
  %9 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !315
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8, !tbaa !315
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 3
  %15 = bitcast i32 (...)** %14 to i32 (%struct.jpeg_compress_struct*, ...)**
  %16 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %15, align 8, !tbaa !316
  %17 = tail call i32 (%struct.jpeg_compress_struct*, ...) %16(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8, !tbaa !8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 5
  store i32 24, i32* %22, align 8, !tbaa !19
  %23 = bitcast %struct.jpeg_error_mgr* %21 to void (%struct.jpeg_common_struct*, ...)**
  %24 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %23, align 8, !tbaa !20
  %25 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %24(%struct.jpeg_common_struct* noundef %25) #27
  br label %26

26:                                               ; preds = %2, %13, %19
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @emit_dqt(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) unnamed_addr #2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 %3
  %5 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %4, align 8, !tbaa !3
  %6 = icmp eq %struct.JQUANT_TBL* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 52, i32* %10, align 8, !tbaa !19
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %11, align 4, !tbaa !7
  %12 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %13 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %12, align 8, !tbaa !8
  %14 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %13, align 8, !tbaa !20
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %14(%struct.jpeg_common_struct* noundef %15) #27
  br label %16

16:                                               ; preds = %7, %2
  %17 = bitcast %struct.JQUANT_TBL* %5 to <4 x i32>*
  %18 = load <4 x i32>, <4 x i32>* %17, align 4, !tbaa !32
  %19 = icmp ugt <4 x i32> %18, <i32 255, i32 255, i32 255, i32 255>
  %20 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 4
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4, !tbaa !32
  %23 = icmp ugt <4 x i32> %22, <i32 255, i32 255, i32 255, i32 255>
  %24 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 8
  %25 = bitcast i32* %24 to <4 x i32>*
  %26 = load <4 x i32>, <4 x i32>* %25, align 4, !tbaa !32
  %27 = icmp ugt <4 x i32> %26, <i32 255, i32 255, i32 255, i32 255>
  %28 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 12
  %29 = bitcast i32* %28 to <4 x i32>*
  %30 = load <4 x i32>, <4 x i32>* %29, align 4, !tbaa !32
  %31 = icmp ugt <4 x i32> %30, <i32 255, i32 255, i32 255, i32 255>
  %32 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 16
  %33 = bitcast i32* %32 to <4 x i32>*
  %34 = load <4 x i32>, <4 x i32>* %33, align 4, !tbaa !32
  %35 = icmp ugt <4 x i32> %34, <i32 255, i32 255, i32 255, i32 255>
  %36 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 20
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4, !tbaa !32
  %39 = icmp ugt <4 x i32> %38, <i32 255, i32 255, i32 255, i32 255>
  %40 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 24
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 4, !tbaa !32
  %43 = icmp ugt <4 x i32> %42, <i32 255, i32 255, i32 255, i32 255>
  %44 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 28
  %45 = bitcast i32* %44 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4, !tbaa !32
  %47 = icmp ugt <4 x i32> %46, <i32 255, i32 255, i32 255, i32 255>
  %48 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 32
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4, !tbaa !32
  %51 = icmp ugt <4 x i32> %50, <i32 255, i32 255, i32 255, i32 255>
  %52 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 36
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 4, !tbaa !32
  %55 = icmp ugt <4 x i32> %54, <i32 255, i32 255, i32 255, i32 255>
  %56 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 40
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4, !tbaa !32
  %59 = icmp ugt <4 x i32> %58, <i32 255, i32 255, i32 255, i32 255>
  %60 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 44
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4, !tbaa !32
  %63 = icmp ugt <4 x i32> %62, <i32 255, i32 255, i32 255, i32 255>
  %64 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 48
  %65 = bitcast i32* %64 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 4, !tbaa !32
  %67 = icmp ugt <4 x i32> %66, <i32 255, i32 255, i32 255, i32 255>
  %68 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 52
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !tbaa !32
  %71 = icmp ugt <4 x i32> %70, <i32 255, i32 255, i32 255, i32 255>
  %72 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 56
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !tbaa !32
  %75 = icmp ugt <4 x i32> %74, <i32 255, i32 255, i32 255, i32 255>
  %76 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 60
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !tbaa !32
  %79 = icmp ugt <4 x i32> %78, <i32 255, i32 255, i32 255, i32 255>
  %80 = select <4 x i1> %79, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %75
  %81 = select <4 x i1> %80, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %71
  %82 = select <4 x i1> %81, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %67
  %83 = select <4 x i1> %82, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %63
  %84 = select <4 x i1> %83, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %59
  %85 = select <4 x i1> %84, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %55
  %86 = select <4 x i1> %85, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %51
  %87 = select <4 x i1> %86, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %47
  %88 = select <4 x i1> %87, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %43
  %89 = select <4 x i1> %88, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %39
  %90 = select <4 x i1> %89, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %35
  %91 = select <4 x i1> %90, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %31
  %92 = select <4 x i1> %91, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %27
  %93 = select <4 x i1> %92, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %23
  %94 = select <4 x i1> %93, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %19
  %95 = bitcast <4 x i1> %94 to i4
  %96 = icmp ne i4 %95, 0
  %97 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 1
  %98 = load i32, i32* %97, align 4, !tbaa !160
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %272

100:                                              ; preds = %16
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %102 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %103 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %102, i64 0, i32 0
  %104 = load i8*, i8** %103, align 8, !tbaa !314
  %105 = getelementptr inbounds i8, i8* %104, i64 1
  store i8* %105, i8** %103, align 8, !tbaa !314
  store i8 -1, i8* %104, align 1, !tbaa !7
  %106 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %102, i64 0, i32 1
  %107 = load i64, i64* %106, align 8, !tbaa !315
  %108 = add i64 %107, -1
  store i64 %108, i64* %106, align 8, !tbaa !315
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %123

110:                                              ; preds = %100
  %111 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %102, i64 0, i32 3
  %112 = bitcast i32 (...)** %111 to i32 (%struct.jpeg_compress_struct*, ...)**
  %113 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %112, align 8, !tbaa !316
  %114 = tail call i32 (%struct.jpeg_compress_struct*, ...) %113(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %123

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %118 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %117, align 8, !tbaa !8
  %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i64 0, i32 5
  store i32 24, i32* %119, align 8, !tbaa !19
  %120 = bitcast %struct.jpeg_error_mgr* %118 to void (%struct.jpeg_common_struct*, ...)**
  %121 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %120, align 8, !tbaa !20
  %122 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %121(%struct.jpeg_common_struct* noundef %122) #27
  br label %123

123:                                              ; preds = %116, %110, %100
  %124 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %125 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %124, i64 0, i32 0
  %126 = load i8*, i8** %125, align 8, !tbaa !314
  %127 = getelementptr inbounds i8, i8* %126, i64 1
  store i8* %127, i8** %125, align 8, !tbaa !314
  store i8 -37, i8* %126, align 1, !tbaa !7
  %128 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %124, i64 0, i32 1
  %129 = load i64, i64* %128, align 8, !tbaa !315
  %130 = add i64 %129, -1
  store i64 %130, i64* %128, align 8, !tbaa !315
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %145

132:                                              ; preds = %123
  %133 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %124, i64 0, i32 3
  %134 = bitcast i32 (...)** %133 to i32 (%struct.jpeg_compress_struct*, ...)**
  %135 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %134, align 8, !tbaa !316
  %136 = tail call i32 (%struct.jpeg_compress_struct*, ...) %135(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %145

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %140 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %139, align 8, !tbaa !8
  %141 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %140, i64 0, i32 5
  store i32 24, i32* %141, align 8, !tbaa !19
  %142 = bitcast %struct.jpeg_error_mgr* %140 to void (%struct.jpeg_common_struct*, ...)**
  %143 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %142, align 8, !tbaa !20
  %144 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %143(%struct.jpeg_common_struct* noundef %144) #27
  br label %145

145:                                              ; preds = %123, %132, %138
  %146 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %147 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %146, i64 0, i32 0
  %148 = load i8*, i8** %147, align 8, !tbaa !314
  %149 = getelementptr inbounds i8, i8* %148, i64 1
  store i8* %149, i8** %147, align 8, !tbaa !314
  store i8 0, i8* %148, align 1, !tbaa !7
  %150 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %146, i64 0, i32 1
  %151 = load i64, i64* %150, align 8, !tbaa !315
  %152 = add i64 %151, -1
  store i64 %152, i64* %150, align 8, !tbaa !315
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %167

154:                                              ; preds = %145
  %155 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %146, i64 0, i32 3
  %156 = bitcast i32 (...)** %155 to i32 (%struct.jpeg_compress_struct*, ...)**
  %157 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %156, align 8, !tbaa !316
  %158 = tail call i32 (%struct.jpeg_compress_struct*, ...) %157(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %167

160:                                              ; preds = %154
  %161 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %162 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %161, align 8, !tbaa !8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %162, i64 0, i32 5
  store i32 24, i32* %163, align 8, !tbaa !19
  %164 = bitcast %struct.jpeg_error_mgr* %162 to void (%struct.jpeg_common_struct*, ...)**
  %165 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %164, align 8, !tbaa !20
  %166 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %165(%struct.jpeg_common_struct* noundef %166) #27
  br label %167

167:                                              ; preds = %160, %154, %145
  %168 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %169 = select i1 %96, i8 -125, i8 67
  %170 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %168, i64 0, i32 0
  %171 = load i8*, i8** %170, align 8, !tbaa !314
  %172 = getelementptr inbounds i8, i8* %171, i64 1
  store i8* %172, i8** %170, align 8, !tbaa !314
  store i8 %169, i8* %171, align 1, !tbaa !7
  %173 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %168, i64 0, i32 1
  %174 = load i64, i64* %173, align 8, !tbaa !315
  %175 = add i64 %174, -1
  store i64 %175, i64* %173, align 8, !tbaa !315
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %190

177:                                              ; preds = %167
  %178 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %168, i64 0, i32 3
  %179 = bitcast i32 (...)** %178 to i32 (%struct.jpeg_compress_struct*, ...)**
  %180 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %179, align 8, !tbaa !316
  %181 = tail call i32 (%struct.jpeg_compress_struct*, ...) %180(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %190

183:                                              ; preds = %177
  %184 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %185 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %184, align 8, !tbaa !8
  %186 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %185, i64 0, i32 5
  store i32 24, i32* %186, align 8, !tbaa !19
  %187 = bitcast %struct.jpeg_error_mgr* %185 to void (%struct.jpeg_common_struct*, ...)**
  %188 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %187, align 8, !tbaa !20
  %189 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %188(%struct.jpeg_common_struct* noundef %189) #27
  br label %190

190:                                              ; preds = %167, %177, %183
  %191 = select i1 %96, i32 16, i32 0
  %192 = add nsw i32 %191, %1
  %193 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %194 = trunc i32 %192 to i8
  %195 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 0
  %196 = load i8*, i8** %195, align 8, !tbaa !314
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  store i8* %197, i8** %195, align 8, !tbaa !314
  store i8 %194, i8* %196, align 1, !tbaa !7
  %198 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 1
  %199 = load i64, i64* %198, align 8, !tbaa !315
  %200 = add i64 %199, -1
  store i64 %200, i64* %198, align 8, !tbaa !315
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %215

202:                                              ; preds = %190
  %203 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 3
  %204 = bitcast i32 (...)** %203 to i32 (%struct.jpeg_compress_struct*, ...)**
  %205 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %204, align 8, !tbaa !316
  %206 = tail call i32 (%struct.jpeg_compress_struct*, ...) %205(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %210 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8, !tbaa !8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %210, i64 0, i32 5
  store i32 24, i32* %211, align 8, !tbaa !19
  %212 = bitcast %struct.jpeg_error_mgr* %210 to void (%struct.jpeg_common_struct*, ...)**
  %213 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %212, align 8, !tbaa !20
  %214 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %213(%struct.jpeg_common_struct* noundef %214) #27
  br label %215

215:                                              ; preds = %190, %202, %208
  %216 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %217 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %218

218:                                              ; preds = %215, %268
  %219 = phi i64 [ 0, %215 ], [ %269, %268 ]
  %220 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %219
  %221 = load i32, i32* %220, align 4, !tbaa !32
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 %222
  %224 = load i32, i32* %223, align 4, !tbaa !32
  br i1 %96, label %225, label %247

225:                                              ; preds = %218
  %226 = lshr i32 %224, 8
  %227 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %228 = trunc i32 %226 to i8
  %229 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %227, i64 0, i32 0
  %230 = load i8*, i8** %229, align 8, !tbaa !314
  %231 = getelementptr inbounds i8, i8* %230, i64 1
  store i8* %231, i8** %229, align 8, !tbaa !314
  store i8 %228, i8* %230, align 1, !tbaa !7
  %232 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %227, i64 0, i32 1
  %233 = load i64, i64* %232, align 8, !tbaa !315
  %234 = add i64 %233, -1
  store i64 %234, i64* %232, align 8, !tbaa !315
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %247

236:                                              ; preds = %225
  %237 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %227, i64 0, i32 3
  %238 = bitcast i32 (...)** %237 to i32 (%struct.jpeg_compress_struct*, ...)**
  %239 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %238, align 8, !tbaa !316
  %240 = tail call i32 (%struct.jpeg_compress_struct*, ...) %239(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %247

242:                                              ; preds = %236
  %243 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %216, align 8, !tbaa !8
  %244 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %243, i64 0, i32 5
  store i32 24, i32* %244, align 8, !tbaa !19
  %245 = bitcast %struct.jpeg_error_mgr* %243 to void (%struct.jpeg_common_struct*, ...)**
  %246 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %245, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %246(%struct.jpeg_common_struct* noundef nonnull %217) #27
  br label %247

247:                                              ; preds = %242, %236, %225, %218
  %248 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %249 = trunc i32 %224 to i8
  %250 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %248, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8, !tbaa !314
  %252 = getelementptr inbounds i8, i8* %251, i64 1
  store i8* %252, i8** %250, align 8, !tbaa !314
  store i8 %249, i8* %251, align 1, !tbaa !7
  %253 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %248, i64 0, i32 1
  %254 = load i64, i64* %253, align 8, !tbaa !315
  %255 = add i64 %254, -1
  store i64 %255, i64* %253, align 8, !tbaa !315
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %268

257:                                              ; preds = %247
  %258 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %248, i64 0, i32 3
  %259 = bitcast i32 (...)** %258 to i32 (%struct.jpeg_compress_struct*, ...)**
  %260 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %259, align 8, !tbaa !316
  %261 = tail call i32 (%struct.jpeg_compress_struct*, ...) %260(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %268

263:                                              ; preds = %257
  %264 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %216, align 8, !tbaa !8
  %265 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %264, i64 0, i32 5
  store i32 24, i32* %265, align 8, !tbaa !19
  %266 = bitcast %struct.jpeg_error_mgr* %264 to void (%struct.jpeg_common_struct*, ...)**
  %267 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %266, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %267(%struct.jpeg_common_struct* noundef nonnull %217) #27
  br label %268

268:                                              ; preds = %247, %257, %263
  %269 = add nuw nsw i64 %219, 1
  %270 = icmp eq i64 %269, 64
  br i1 %270, label %271, label %218, !llvm.loop !322

271:                                              ; preds = %268
  store i32 1, i32* %97, align 4, !tbaa !160
  br label %272

272:                                              ; preds = %271, %16
  %273 = zext i1 %96 to i32
  ret i32 %273
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_dht(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #2 {
  %4 = icmp eq i32 %2, 0
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 %5
  %7 = add nsw i32 %1, 16
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 %5
  %9 = select i1 %4, i32 %1, i32 %7
  %10 = select i1 %4, %struct.JHUFF_TBL** %8, %struct.JHUFF_TBL** %6
  %11 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %10, align 8, !tbaa !3
  %12 = icmp eq %struct.JHUFF_TBL* %11, null
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8, !tbaa !8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 5
  store i32 50, i32* %16, align 8, !tbaa !19
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 6, i32 0, i64 0
  store i32 %9, i32* %17, align 4, !tbaa !7
  %18 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %19 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %18, align 8, !tbaa !8
  %20 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %19, align 8, !tbaa !20
  %21 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %20(%struct.jpeg_common_struct* noundef %21) #27
  br label %22

22:                                               ; preds = %13, %3
  %23 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 2
  %24 = load i32, i32* %23, align 4, !tbaa !162
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %267

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %28 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8, !tbaa !314
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %29, align 8, !tbaa !314
  store i8 -1, i8* %30, align 1, !tbaa !7
  %32 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i64 0, i32 1
  %33 = load i64, i64* %32, align 8, !tbaa !315
  %34 = add i64 %33, -1
  store i64 %34, i64* %32, align 8, !tbaa !315
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %28, i64 0, i32 3
  %38 = bitcast i32 (...)** %37 to i32 (%struct.jpeg_compress_struct*, ...)**
  %39 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %38, align 8, !tbaa !316
  %40 = tail call i32 (%struct.jpeg_compress_struct*, ...) %39(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8, !tbaa !8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i64 0, i32 5
  store i32 24, i32* %45, align 8, !tbaa !19
  %46 = bitcast %struct.jpeg_error_mgr* %44 to void (%struct.jpeg_common_struct*, ...)**
  %47 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %46, align 8, !tbaa !20
  %48 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %47(%struct.jpeg_common_struct* noundef %48) #27
  br label %49

49:                                               ; preds = %42, %36, %26
  %50 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %51 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8, !tbaa !314
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %53, i8** %51, align 8, !tbaa !314
  store i8 -60, i8* %52, align 1, !tbaa !7
  %54 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %50, i64 0, i32 1
  %55 = load i64, i64* %54, align 8, !tbaa !315
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8, !tbaa !315
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %71

58:                                               ; preds = %49
  %59 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %50, i64 0, i32 3
  %60 = bitcast i32 (...)** %59 to i32 (%struct.jpeg_compress_struct*, ...)**
  %61 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %60, align 8, !tbaa !316
  %62 = tail call i32 (%struct.jpeg_compress_struct*, ...) %61(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 5
  store i32 24, i32* %67, align 8, !tbaa !19
  %68 = bitcast %struct.jpeg_error_mgr* %66 to void (%struct.jpeg_common_struct*, ...)**
  %69 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %68, align 8, !tbaa !20
  %70 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %69(%struct.jpeg_common_struct* noundef %70) #27
  br label %71

71:                                               ; preds = %49, %58, %64
  %72 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 1
  %73 = load i16, i16* %72, align 2, !tbaa !96
  %74 = sext i16 %73 to i32
  %75 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 2
  %76 = load i16, i16* %75, align 2, !tbaa !96
  %77 = sext i16 %76 to i32
  %78 = add nsw i32 %74, %77
  %79 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 3
  %80 = load i16, i16* %79, align 2, !tbaa !96
  %81 = sext i16 %80 to i32
  %82 = add nsw i32 %78, %81
  %83 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 4
  %84 = load i16, i16* %83, align 2, !tbaa !96
  %85 = sext i16 %84 to i32
  %86 = add nsw i32 %82, %85
  %87 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 5
  %88 = load i16, i16* %87, align 2, !tbaa !96
  %89 = sext i16 %88 to i32
  %90 = add nsw i32 %86, %89
  %91 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 6
  %92 = load i16, i16* %91, align 2, !tbaa !96
  %93 = sext i16 %92 to i32
  %94 = add nsw i32 %90, %93
  %95 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 7
  %96 = load i16, i16* %95, align 2, !tbaa !96
  %97 = sext i16 %96 to i32
  %98 = add nsw i32 %94, %97
  %99 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 8
  %100 = load i16, i16* %99, align 2, !tbaa !96
  %101 = sext i16 %100 to i32
  %102 = add nsw i32 %98, %101
  %103 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 9
  %104 = load i16, i16* %103, align 2, !tbaa !96
  %105 = sext i16 %104 to i32
  %106 = add nsw i32 %102, %105
  %107 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 10
  %108 = load i16, i16* %107, align 2, !tbaa !96
  %109 = sext i16 %108 to i32
  %110 = add nsw i32 %106, %109
  %111 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 11
  %112 = load i16, i16* %111, align 2, !tbaa !96
  %113 = sext i16 %112 to i32
  %114 = add nsw i32 %110, %113
  %115 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 12
  %116 = load i16, i16* %115, align 2, !tbaa !96
  %117 = sext i16 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 13
  %120 = load i16, i16* %119, align 2, !tbaa !96
  %121 = sext i16 %120 to i32
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 14
  %124 = load i16, i16* %123, align 2, !tbaa !96
  %125 = sext i16 %124 to i32
  %126 = add nsw i32 %122, %125
  %127 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 15
  %128 = load i16, i16* %127, align 2, !tbaa !96
  %129 = sext i16 %128 to i32
  %130 = add nsw i32 %126, %129
  %131 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 16
  %132 = load i16, i16* %131, align 2, !tbaa !96
  %133 = sext i16 %132 to i32
  %134 = add nsw i32 %130, %133
  %135 = add nsw i32 %134, 19
  %136 = lshr i32 %135, 8
  %137 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %138 = trunc i32 %136 to i8
  %139 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %137, i64 0, i32 0
  %140 = load i8*, i8** %139, align 8, !tbaa !314
  %141 = getelementptr inbounds i8, i8* %140, i64 1
  store i8* %141, i8** %139, align 8, !tbaa !314
  store i8 %138, i8* %140, align 1, !tbaa !7
  %142 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %137, i64 0, i32 1
  %143 = load i64, i64* %142, align 8, !tbaa !315
  %144 = add i64 %143, -1
  store i64 %144, i64* %142, align 8, !tbaa !315
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %159

146:                                              ; preds = %71
  %147 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %137, i64 0, i32 3
  %148 = bitcast i32 (...)** %147 to i32 (%struct.jpeg_compress_struct*, ...)**
  %149 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %148, align 8, !tbaa !316
  %150 = tail call i32 (%struct.jpeg_compress_struct*, ...) %149(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %146
  %153 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8, !tbaa !8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 5
  store i32 24, i32* %155, align 8, !tbaa !19
  %156 = bitcast %struct.jpeg_error_mgr* %154 to void (%struct.jpeg_common_struct*, ...)**
  %157 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %156, align 8, !tbaa !20
  %158 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %157(%struct.jpeg_common_struct* noundef %158) #27
  br label %159

159:                                              ; preds = %152, %146, %71
  %160 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %161 = trunc i32 %135 to i8
  %162 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %160, i64 0, i32 0
  %163 = load i8*, i8** %162, align 8, !tbaa !314
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  store i8* %164, i8** %162, align 8, !tbaa !314
  store i8 %161, i8* %163, align 1, !tbaa !7
  %165 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %160, i64 0, i32 1
  %166 = load i64, i64* %165, align 8, !tbaa !315
  %167 = add i64 %166, -1
  store i64 %167, i64* %165, align 8, !tbaa !315
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %182

169:                                              ; preds = %159
  %170 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %160, i64 0, i32 3
  %171 = bitcast i32 (...)** %170 to i32 (%struct.jpeg_compress_struct*, ...)**
  %172 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %171, align 8, !tbaa !316
  %173 = tail call i32 (%struct.jpeg_compress_struct*, ...) %172(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %182

175:                                              ; preds = %169
  %176 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %177 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %176, align 8, !tbaa !8
  %178 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %177, i64 0, i32 5
  store i32 24, i32* %178, align 8, !tbaa !19
  %179 = bitcast %struct.jpeg_error_mgr* %177 to void (%struct.jpeg_common_struct*, ...)**
  %180 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %179, align 8, !tbaa !20
  %181 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %180(%struct.jpeg_common_struct* noundef %181) #27
  br label %182

182:                                              ; preds = %159, %169, %175
  %183 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %184 = trunc i32 %9 to i8
  %185 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %183, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8, !tbaa !314
  %187 = getelementptr inbounds i8, i8* %186, i64 1
  store i8* %187, i8** %185, align 8, !tbaa !314
  store i8 %184, i8* %186, align 1, !tbaa !7
  %188 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %183, i64 0, i32 1
  %189 = load i64, i64* %188, align 8, !tbaa !315
  %190 = add i64 %189, -1
  store i64 %190, i64* %188, align 8, !tbaa !315
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %205

192:                                              ; preds = %182
  %193 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %183, i64 0, i32 3
  %194 = bitcast i32 (...)** %193 to i32 (%struct.jpeg_compress_struct*, ...)**
  %195 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %194, align 8, !tbaa !316
  %196 = tail call i32 (%struct.jpeg_compress_struct*, ...) %195(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %205

198:                                              ; preds = %192
  %199 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %200 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %199, align 8, !tbaa !8
  %201 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %200, i64 0, i32 5
  store i32 24, i32* %201, align 8, !tbaa !19
  %202 = bitcast %struct.jpeg_error_mgr* %200 to void (%struct.jpeg_common_struct*, ...)**
  %203 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %202, align 8, !tbaa !20
  %204 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %203(%struct.jpeg_common_struct* noundef %204) #27
  br label %205

205:                                              ; preds = %182, %192, %198
  %206 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %207 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %212

208:                                              ; preds = %236
  %209 = icmp sgt i32 %134, 0
  br i1 %209, label %210, label %266

210:                                              ; preds = %208
  %211 = zext i32 %134 to i64
  br label %239

212:                                              ; preds = %205, %236
  %213 = phi i64 [ 1, %205 ], [ %237, %236 ]
  %214 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 %213
  %215 = load i16, i16* %214, align 2, !tbaa !96
  %216 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %217 = trunc i16 %215 to i8
  %218 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %216, i64 0, i32 0
  %219 = load i8*, i8** %218, align 8, !tbaa !314
  %220 = getelementptr inbounds i8, i8* %219, i64 1
  store i8* %220, i8** %218, align 8, !tbaa !314
  store i8 %217, i8* %219, align 1, !tbaa !7
  %221 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %216, i64 0, i32 1
  %222 = load i64, i64* %221, align 8, !tbaa !315
  %223 = add i64 %222, -1
  store i64 %223, i64* %221, align 8, !tbaa !315
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %236

225:                                              ; preds = %212
  %226 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %216, i64 0, i32 3
  %227 = bitcast i32 (...)** %226 to i32 (%struct.jpeg_compress_struct*, ...)**
  %228 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %227, align 8, !tbaa !316
  %229 = tail call i32 (%struct.jpeg_compress_struct*, ...) %228(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %236

231:                                              ; preds = %225
  %232 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %206, align 8, !tbaa !8
  %233 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %232, i64 0, i32 5
  store i32 24, i32* %233, align 8, !tbaa !19
  %234 = bitcast %struct.jpeg_error_mgr* %232 to void (%struct.jpeg_common_struct*, ...)**
  %235 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %234, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %235(%struct.jpeg_common_struct* noundef nonnull %207) #27
  br label %236

236:                                              ; preds = %212, %225, %231
  %237 = add nuw nsw i64 %213, 1
  %238 = icmp eq i64 %237, 17
  br i1 %238, label %208, label %212, !llvm.loop !323

239:                                              ; preds = %210, %263
  %240 = phi i64 [ 0, %210 ], [ %264, %263 ]
  %241 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 1, i64 %240
  %242 = load i16, i16* %241, align 2, !tbaa !96
  %243 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %27, align 8, !tbaa !156
  %244 = trunc i16 %242 to i8
  %245 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %243, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8, !tbaa !314
  %247 = getelementptr inbounds i8, i8* %246, i64 1
  store i8* %247, i8** %245, align 8, !tbaa !314
  store i8 %244, i8* %246, align 1, !tbaa !7
  %248 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %243, i64 0, i32 1
  %249 = load i64, i64* %248, align 8, !tbaa !315
  %250 = add i64 %249, -1
  store i64 %250, i64* %248, align 8, !tbaa !315
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %263

252:                                              ; preds = %239
  %253 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %243, i64 0, i32 3
  %254 = bitcast i32 (...)** %253 to i32 (%struct.jpeg_compress_struct*, ...)**
  %255 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %254, align 8, !tbaa !316
  %256 = tail call i32 (%struct.jpeg_compress_struct*, ...) %255(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %263

258:                                              ; preds = %252
  %259 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %206, align 8, !tbaa !8
  %260 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %259, i64 0, i32 5
  store i32 24, i32* %260, align 8, !tbaa !19
  %261 = bitcast %struct.jpeg_error_mgr* %259 to void (%struct.jpeg_common_struct*, ...)**
  %262 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %261, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %262(%struct.jpeg_common_struct* noundef nonnull %207) #27
  br label %263

263:                                              ; preds = %239, %252, %258
  %264 = add nuw nsw i64 %240, 1
  %265 = icmp ult i64 %264, %211
  br i1 %265, label %239, label %266, !llvm.loop !324

266:                                              ; preds = %263, %208
  store i32 1, i32* %23, align 4, !tbaa !162
  br label %267

267:                                              ; preds = %266, %22
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_sof(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %4 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %5 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !314
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %7, i8** %5, align 8, !tbaa !314
  store i8 -1, i8* %6, align 1, !tbaa !7
  %8 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !315
  %10 = add i64 %9, -1
  store i64 %10, i64* %8, align 8, !tbaa !315
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %4, i64 0, i32 3
  %14 = bitcast i32 (...)** %13 to i32 (%struct.jpeg_compress_struct*, ...)**
  %15 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %14, align 8, !tbaa !316
  %16 = tail call i32 (%struct.jpeg_compress_struct*, ...) %15(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8, !tbaa !8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 24, i32* %21, align 8, !tbaa !19
  %22 = bitcast %struct.jpeg_error_mgr* %20 to void (%struct.jpeg_common_struct*, ...)**
  %23 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %22, align 8, !tbaa !20
  %24 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %23(%struct.jpeg_common_struct* noundef %24) #27
  br label %25

25:                                               ; preds = %18, %12, %2
  %26 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %27 = trunc i32 %1 to i8
  %28 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !314
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %30, i8** %28, align 8, !tbaa !314
  store i8 %27, i8* %29, align 1, !tbaa !7
  %31 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 1
  %32 = load i64, i64* %31, align 8, !tbaa !315
  %33 = add i64 %32, -1
  store i64 %33, i64* %31, align 8, !tbaa !315
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %26, i64 0, i32 3
  %37 = bitcast i32 (...)** %36 to i32 (%struct.jpeg_compress_struct*, ...)**
  %38 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %37, align 8, !tbaa !316
  %39 = tail call i32 (%struct.jpeg_compress_struct*, ...) %38(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %42, align 8, !tbaa !8
  %44 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 5
  store i32 24, i32* %44, align 8, !tbaa !19
  %45 = bitcast %struct.jpeg_error_mgr* %43 to void (%struct.jpeg_common_struct*, ...)**
  %46 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %45, align 8, !tbaa !20
  %47 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %46(%struct.jpeg_common_struct* noundef %47) #27
  br label %48

48:                                               ; preds = %25, %35, %41
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %50 = load i32, i32* %49, align 4, !tbaa !202
  %51 = mul nsw i32 %50, 3
  %52 = add nsw i32 %51, 8
  %53 = lshr i32 %52, 8
  %54 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %55 = trunc i32 %53 to i8
  %56 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %54, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8, !tbaa !314
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %56, align 8, !tbaa !314
  store i8 %55, i8* %57, align 1, !tbaa !7
  %59 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %54, i64 0, i32 1
  %60 = load i64, i64* %59, align 8, !tbaa !315
  %61 = add i64 %60, -1
  store i64 %61, i64* %59, align 8, !tbaa !315
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %48
  %64 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %54, i64 0, i32 3
  %65 = bitcast i32 (...)** %64 to i32 (%struct.jpeg_compress_struct*, ...)**
  %66 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %65, align 8, !tbaa !316
  %67 = tail call i32 (%struct.jpeg_compress_struct*, ...) %66(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8, !tbaa !8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 5
  store i32 24, i32* %72, align 8, !tbaa !19
  %73 = bitcast %struct.jpeg_error_mgr* %71 to void (%struct.jpeg_common_struct*, ...)**
  %74 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %73, align 8, !tbaa !20
  %75 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %74(%struct.jpeg_common_struct* noundef %75) #27
  br label %76

76:                                               ; preds = %69, %63, %48
  %77 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %78 = trunc i32 %52 to i8
  %79 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %77, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8, !tbaa !314
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %81, i8** %79, align 8, !tbaa !314
  store i8 %78, i8* %80, align 1, !tbaa !7
  %82 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %77, i64 0, i32 1
  %83 = load i64, i64* %82, align 8, !tbaa !315
  %84 = add i64 %83, -1
  store i64 %84, i64* %82, align 8, !tbaa !315
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %76
  %87 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %77, i64 0, i32 3
  %88 = bitcast i32 (...)** %87 to i32 (%struct.jpeg_compress_struct*, ...)**
  %89 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %88, align 8, !tbaa !316
  %90 = tail call i32 (%struct.jpeg_compress_struct*, ...) %89(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %86
  %93 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %94 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %93, align 8, !tbaa !8
  %95 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %94, i64 0, i32 5
  store i32 24, i32* %95, align 8, !tbaa !19
  %96 = bitcast %struct.jpeg_error_mgr* %94 to void (%struct.jpeg_common_struct*, ...)**
  %97 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %96, align 8, !tbaa !20
  %98 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %97(%struct.jpeg_common_struct* noundef %98) #27
  br label %99

99:                                               ; preds = %76, %86, %92
  %100 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %101 = load i32, i32* %100, align 4, !tbaa !25
  %102 = icmp ugt i32 %101, 65535
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %105 = load i32, i32* %104, align 8, !tbaa !50
  %106 = icmp ugt i32 %105, 65535
  br i1 %106, label %107, label %116

107:                                              ; preds = %103, %99
  %108 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %109 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %108, align 8, !tbaa !8
  %110 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %109, i64 0, i32 5
  store i32 41, i32* %110, align 8, !tbaa !19
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %109, i64 0, i32 6, i32 0, i64 0
  store i32 65535, i32* %111, align 4, !tbaa !7
  %112 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %113 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %112, align 8, !tbaa !8
  %114 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %113, align 8, !tbaa !20
  %115 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %114(%struct.jpeg_common_struct* noundef %115) #27
  br label %116

116:                                              ; preds = %107, %103
  %117 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  %118 = load i32, i32* %117, align 8, !tbaa !49
  %119 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %120 = trunc i32 %118 to i8
  %121 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %119, i64 0, i32 0
  %122 = load i8*, i8** %121, align 8, !tbaa !314
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  store i8* %123, i8** %121, align 8, !tbaa !314
  store i8 %120, i8* %122, align 1, !tbaa !7
  %124 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %119, i64 0, i32 1
  %125 = load i64, i64* %124, align 8, !tbaa !315
  %126 = add i64 %125, -1
  store i64 %126, i64* %124, align 8, !tbaa !315
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %141

128:                                              ; preds = %116
  %129 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %119, i64 0, i32 3
  %130 = bitcast i32 (...)** %129 to i32 (%struct.jpeg_compress_struct*, ...)**
  %131 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %130, align 8, !tbaa !316
  %132 = tail call i32 (%struct.jpeg_compress_struct*, ...) %131(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %135, align 8, !tbaa !8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 5
  store i32 24, i32* %137, align 8, !tbaa !19
  %138 = bitcast %struct.jpeg_error_mgr* %136 to void (%struct.jpeg_common_struct*, ...)**
  %139 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %138, align 8, !tbaa !20
  %140 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %139(%struct.jpeg_common_struct* noundef %140) #27
  br label %141

141:                                              ; preds = %116, %128, %134
  %142 = load i32, i32* %100, align 4, !tbaa !25
  %143 = lshr i32 %142, 8
  %144 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %145 = trunc i32 %143 to i8
  %146 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %144, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8, !tbaa !314
  %148 = getelementptr inbounds i8, i8* %147, i64 1
  store i8* %148, i8** %146, align 8, !tbaa !314
  store i8 %145, i8* %147, align 1, !tbaa !7
  %149 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %144, i64 0, i32 1
  %150 = load i64, i64* %149, align 8, !tbaa !315
  %151 = add i64 %150, -1
  store i64 %151, i64* %149, align 8, !tbaa !315
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %166

153:                                              ; preds = %141
  %154 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %144, i64 0, i32 3
  %155 = bitcast i32 (...)** %154 to i32 (%struct.jpeg_compress_struct*, ...)**
  %156 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %155, align 8, !tbaa !316
  %157 = tail call i32 (%struct.jpeg_compress_struct*, ...) %156(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %166

159:                                              ; preds = %153
  %160 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %161 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %160, align 8, !tbaa !8
  %162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %161, i64 0, i32 5
  store i32 24, i32* %162, align 8, !tbaa !19
  %163 = bitcast %struct.jpeg_error_mgr* %161 to void (%struct.jpeg_common_struct*, ...)**
  %164 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %163, align 8, !tbaa !20
  %165 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %164(%struct.jpeg_common_struct* noundef %165) #27
  br label %166

166:                                              ; preds = %159, %153, %141
  %167 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %168 = trunc i32 %142 to i8
  %169 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %167, i64 0, i32 0
  %170 = load i8*, i8** %169, align 8, !tbaa !314
  %171 = getelementptr inbounds i8, i8* %170, i64 1
  store i8* %171, i8** %169, align 8, !tbaa !314
  store i8 %168, i8* %170, align 1, !tbaa !7
  %172 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %167, i64 0, i32 1
  %173 = load i64, i64* %172, align 8, !tbaa !315
  %174 = add i64 %173, -1
  store i64 %174, i64* %172, align 8, !tbaa !315
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %189

176:                                              ; preds = %166
  %177 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %167, i64 0, i32 3
  %178 = bitcast i32 (...)** %177 to i32 (%struct.jpeg_compress_struct*, ...)**
  %179 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %178, align 8, !tbaa !316
  %180 = tail call i32 (%struct.jpeg_compress_struct*, ...) %179(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %189

182:                                              ; preds = %176
  %183 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %184 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %183, align 8, !tbaa !8
  %185 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %184, i64 0, i32 5
  store i32 24, i32* %185, align 8, !tbaa !19
  %186 = bitcast %struct.jpeg_error_mgr* %184 to void (%struct.jpeg_common_struct*, ...)**
  %187 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %186, align 8, !tbaa !20
  %188 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %187(%struct.jpeg_common_struct* noundef %188) #27
  br label %189

189:                                              ; preds = %166, %176, %182
  %190 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %191 = load i32, i32* %190, align 8, !tbaa !50
  %192 = lshr i32 %191, 8
  %193 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %194 = trunc i32 %192 to i8
  %195 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 0
  %196 = load i8*, i8** %195, align 8, !tbaa !314
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  store i8* %197, i8** %195, align 8, !tbaa !314
  store i8 %194, i8* %196, align 1, !tbaa !7
  %198 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 1
  %199 = load i64, i64* %198, align 8, !tbaa !315
  %200 = add i64 %199, -1
  store i64 %200, i64* %198, align 8, !tbaa !315
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %215

202:                                              ; preds = %189
  %203 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %193, i64 0, i32 3
  %204 = bitcast i32 (...)** %203 to i32 (%struct.jpeg_compress_struct*, ...)**
  %205 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %204, align 8, !tbaa !316
  %206 = tail call i32 (%struct.jpeg_compress_struct*, ...) %205(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %210 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8, !tbaa !8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %210, i64 0, i32 5
  store i32 24, i32* %211, align 8, !tbaa !19
  %212 = bitcast %struct.jpeg_error_mgr* %210 to void (%struct.jpeg_common_struct*, ...)**
  %213 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %212, align 8, !tbaa !20
  %214 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %213(%struct.jpeg_common_struct* noundef %214) #27
  br label %215

215:                                              ; preds = %208, %202, %189
  %216 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %217 = trunc i32 %191 to i8
  %218 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %216, i64 0, i32 0
  %219 = load i8*, i8** %218, align 8, !tbaa !314
  %220 = getelementptr inbounds i8, i8* %219, i64 1
  store i8* %220, i8** %218, align 8, !tbaa !314
  store i8 %217, i8* %219, align 1, !tbaa !7
  %221 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %216, i64 0, i32 1
  %222 = load i64, i64* %221, align 8, !tbaa !315
  %223 = add i64 %222, -1
  store i64 %223, i64* %221, align 8, !tbaa !315
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %238

225:                                              ; preds = %215
  %226 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %216, i64 0, i32 3
  %227 = bitcast i32 (...)** %226 to i32 (%struct.jpeg_compress_struct*, ...)**
  %228 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %227, align 8, !tbaa !316
  %229 = tail call i32 (%struct.jpeg_compress_struct*, ...) %228(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %238

231:                                              ; preds = %225
  %232 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %233 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %232, align 8, !tbaa !8
  %234 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %233, i64 0, i32 5
  store i32 24, i32* %234, align 8, !tbaa !19
  %235 = bitcast %struct.jpeg_error_mgr* %233 to void (%struct.jpeg_common_struct*, ...)**
  %236 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %235, align 8, !tbaa !20
  %237 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %236(%struct.jpeg_common_struct* noundef %237) #27
  br label %238

238:                                              ; preds = %215, %225, %231
  %239 = load i32, i32* %49, align 4, !tbaa !202
  %240 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %241 = trunc i32 %239 to i8
  %242 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8, !tbaa !314
  %244 = getelementptr inbounds i8, i8* %243, i64 1
  store i8* %244, i8** %242, align 8, !tbaa !314
  store i8 %241, i8* %243, align 1, !tbaa !7
  %245 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 1
  %246 = load i64, i64* %245, align 8, !tbaa !315
  %247 = add i64 %246, -1
  store i64 %247, i64* %245, align 8, !tbaa !315
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %262

249:                                              ; preds = %238
  %250 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 3
  %251 = bitcast i32 (...)** %250 to i32 (%struct.jpeg_compress_struct*, ...)**
  %252 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %251, align 8, !tbaa !316
  %253 = tail call i32 (%struct.jpeg_compress_struct*, ...) %252(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %262

255:                                              ; preds = %249
  %256 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %257 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %256, align 8, !tbaa !8
  %258 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %257, i64 0, i32 5
  store i32 24, i32* %258, align 8, !tbaa !19
  %259 = bitcast %struct.jpeg_error_mgr* %257 to void (%struct.jpeg_common_struct*, ...)**
  %260 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %259, align 8, !tbaa !20
  %261 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %260(%struct.jpeg_common_struct* noundef %261) #27
  br label %262

262:                                              ; preds = %238, %249, %255
  %263 = load i32, i32* %49, align 4, !tbaa !202
  %264 = icmp sgt i32 %263, 0
  br i1 %264, label %265, label %350

265:                                              ; preds = %262
  %266 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %267 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %266, align 8, !tbaa !145
  %268 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %269 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %270

270:                                              ; preds = %265, %345
  %271 = phi %struct.jpeg_component_info* [ %267, %265 ], [ %347, %345 ]
  %272 = phi i32 [ 0, %265 ], [ %346, %345 ]
  %273 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %271, i64 0, i32 0
  %274 = load i32, i32* %273, align 8, !tbaa !203
  %275 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %276 = trunc i32 %274 to i8
  %277 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %275, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8, !tbaa !314
  %279 = getelementptr inbounds i8, i8* %278, i64 1
  store i8* %279, i8** %277, align 8, !tbaa !314
  store i8 %276, i8* %278, align 1, !tbaa !7
  %280 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %275, i64 0, i32 1
  %281 = load i64, i64* %280, align 8, !tbaa !315
  %282 = add i64 %281, -1
  store i64 %282, i64* %280, align 8, !tbaa !315
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %284, label %295

284:                                              ; preds = %270
  %285 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %275, i64 0, i32 3
  %286 = bitcast i32 (...)** %285 to i32 (%struct.jpeg_compress_struct*, ...)**
  %287 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %286, align 8, !tbaa !316
  %288 = tail call i32 (%struct.jpeg_compress_struct*, ...) %287(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %295

290:                                              ; preds = %284
  %291 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %268, align 8, !tbaa !8
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %291, i64 0, i32 5
  store i32 24, i32* %292, align 8, !tbaa !19
  %293 = bitcast %struct.jpeg_error_mgr* %291 to void (%struct.jpeg_common_struct*, ...)**
  %294 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %293, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %294(%struct.jpeg_common_struct* noundef nonnull %269) #27
  br label %295

295:                                              ; preds = %270, %284, %290
  %296 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %271, i64 0, i32 2
  %297 = load i32, i32* %296, align 8, !tbaa !150
  %298 = shl i32 %297, 4
  %299 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %271, i64 0, i32 3
  %300 = load i32, i32* %299, align 4, !tbaa !151
  %301 = add nsw i32 %298, %300
  %302 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %303 = trunc i32 %301 to i8
  %304 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %302, i64 0, i32 0
  %305 = load i8*, i8** %304, align 8, !tbaa !314
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  store i8* %306, i8** %304, align 8, !tbaa !314
  store i8 %303, i8* %305, align 1, !tbaa !7
  %307 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %302, i64 0, i32 1
  %308 = load i64, i64* %307, align 8, !tbaa !315
  %309 = add i64 %308, -1
  store i64 %309, i64* %307, align 8, !tbaa !315
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %322

311:                                              ; preds = %295
  %312 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %302, i64 0, i32 3
  %313 = bitcast i32 (...)** %312 to i32 (%struct.jpeg_compress_struct*, ...)**
  %314 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %313, align 8, !tbaa !316
  %315 = tail call i32 (%struct.jpeg_compress_struct*, ...) %314(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %322

317:                                              ; preds = %311
  %318 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %268, align 8, !tbaa !8
  %319 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %318, i64 0, i32 5
  store i32 24, i32* %319, align 8, !tbaa !19
  %320 = bitcast %struct.jpeg_error_mgr* %318 to void (%struct.jpeg_common_struct*, ...)**
  %321 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %320, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %321(%struct.jpeg_common_struct* noundef nonnull %269) #27
  br label %322

322:                                              ; preds = %295, %311, %317
  %323 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %271, i64 0, i32 4
  %324 = load i32, i32* %323, align 8, !tbaa !146
  %325 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %3, align 8, !tbaa !156
  %326 = trunc i32 %324 to i8
  %327 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %325, i64 0, i32 0
  %328 = load i8*, i8** %327, align 8, !tbaa !314
  %329 = getelementptr inbounds i8, i8* %328, i64 1
  store i8* %329, i8** %327, align 8, !tbaa !314
  store i8 %326, i8* %328, align 1, !tbaa !7
  %330 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %325, i64 0, i32 1
  %331 = load i64, i64* %330, align 8, !tbaa !315
  %332 = add i64 %331, -1
  store i64 %332, i64* %330, align 8, !tbaa !315
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %345

334:                                              ; preds = %322
  %335 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %325, i64 0, i32 3
  %336 = bitcast i32 (...)** %335 to i32 (%struct.jpeg_compress_struct*, ...)**
  %337 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %336, align 8, !tbaa !316
  %338 = tail call i32 (%struct.jpeg_compress_struct*, ...) %337(%struct.jpeg_compress_struct* noundef nonnull %0) #27
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %345

340:                                              ; preds = %334
  %341 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %268, align 8, !tbaa !8
  %342 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 5
  store i32 24, i32* %342, align 8, !tbaa !19
  %343 = bitcast %struct.jpeg_error_mgr* %341 to void (%struct.jpeg_common_struct*, ...)**
  %344 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %343, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %344(%struct.jpeg_common_struct* noundef nonnull %269) #27
  br label %345

345:                                              ; preds = %322, %334, %340
  %346 = add nuw nsw i32 %272, 1
  %347 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %271, i64 1
  %348 = load i32, i32* %49, align 4, !tbaa !202
  %349 = icmp slt i32 %346, %348
  br i1 %349, label %270, label %350, !llvm.loop !325

350:                                              ; preds = %345, %262
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_c_main_controller(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %4 = bitcast %struct.jpeg_memory_mgr** %3 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %4, align 8, !tbaa !36
  %6 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %5, align 8, !tbaa !44
  %7 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %8 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %6(%struct.jpeg_common_struct* noundef %7, i32 noundef 1, i64 noundef 112) #27
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 55
  %10 = bitcast %struct.jpeg_c_main_controller** %9 to i8**
  store i8* %8, i8** %10, align 8, !tbaa !192
  %11 = bitcast i8* %8 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32)* @start_pass_main to void (...)*), void (...)** %11, align 8, !tbaa !326
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 24
  %13 = load i32, i32* %12, align 8, !tbaa !189
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %52

15:                                               ; preds = %2
  %16 = icmp eq i32 %1, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 4, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef nonnull %7) #27
  br label %52

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %25 = load i32, i32* %24, align 4, !tbaa !202
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %29 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %28, align 8, !tbaa !145
  %30 = getelementptr inbounds i8, i8* %8, i64 32
  %31 = bitcast i8* %30 to [10 x i8**]*
  br label %32

32:                                               ; preds = %27, %32
  %33 = phi i64 [ 0, %27 ], [ %47, %32 ]
  %34 = phi %struct.jpeg_component_info* [ %29, %27 ], [ %48, %32 ]
  %35 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %3, align 8, !tbaa !36
  %36 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %35, i64 0, i32 2
  %37 = bitcast i8** (...)** %36 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %38 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %37, align 8, !tbaa !56
  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %34, i64 0, i32 7
  %40 = load i32, i32* %39, align 4, !tbaa !243
  %41 = shl i32 %40, 3
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %34, i64 0, i32 3
  %43 = load i32, i32* %42, align 4, !tbaa !151
  %44 = shl nsw i32 %43, 3
  %45 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %38(%struct.jpeg_common_struct* noundef nonnull %7, i32 noundef 1, i32 noundef %41, i32 noundef %44) #27
  %46 = getelementptr inbounds [10 x i8**], [10 x i8**]* %31, i64 0, i64 %33
  store i8** %45, i8*** %46, align 8, !tbaa !3
  %47 = add nuw nsw i64 %33, 1
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %34, i64 1
  %49 = load i32, i32* %24, align 4, !tbaa !202
  %50 = sext i32 %49 to i64
  %51 = icmp slt i64 %47, %50
  br i1 %51, label %32, label %52, !llvm.loop !328

52:                                               ; preds = %32, %23, %17, %2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_pass_main(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 55
  %4 = bitcast %struct.jpeg_c_main_controller** %3 to %struct.my_main_controller**
  %5 = load %struct.my_main_controller*, %struct.my_main_controller** %4, align 8, !tbaa !192
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 24
  %7 = load i32, i32* %6, align 8, !tbaa !189
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %5, i64 0, i32 1
  store i32 0, i32* %10, align 8, !tbaa !329
  %11 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %5, i64 0, i32 2
  store i32 0, i32* %11, align 4, !tbaa !330
  %12 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %5, i64 0, i32 3
  store i32 0, i32* %12, align 8, !tbaa !331
  %13 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %5, i64 0, i32 4
  store i32 %1, i32* %13, align 4, !tbaa !332
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %5, i64 0, i32 0, i32 1
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* @process_data_simple_main to void (...)*), void (...)** %16, align 8, !tbaa !333
  br label %24

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8, !tbaa !8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 4, i32* %20, align 8, !tbaa !19
  %21 = bitcast %struct.jpeg_error_mgr* %19 to void (%struct.jpeg_common_struct*, ...)**
  %22 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %21, align 8, !tbaa !20
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %22(%struct.jpeg_common_struct* noundef %23) #27
  br label %24

24:                                               ; preds = %15, %17, %2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @process_data_simple_main(%struct.jpeg_compress_struct* noundef %0, i8** noundef %1, i32* noundef %2, i32 noundef %3) #2 {
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 55
  %6 = bitcast %struct.jpeg_c_main_controller** %5 to %struct.my_main_controller**
  %7 = load %struct.my_main_controller*, %struct.my_main_controller** %6, align 8, !tbaa !192
  %8 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %7, i64 0, i32 1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %10 = load i32, i32* %8, align 8, !tbaa !329
  %11 = load i32, i32* %9, align 8, !tbaa !169
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %54

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %7, i64 0, i32 2
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %16 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %7, i64 0, i32 5, i64 0
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %18 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %7, i64 0, i32 3
  %19 = load i32, i32* %14, align 4, !tbaa !330
  br label %20

20:                                               ; preds = %13, %49
  %21 = phi i32 [ %19, %13 ], [ 0, %49 ]
  %22 = icmp ult i32 %21, 8
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = load %struct.jpeg_c_prep_controller*, %struct.jpeg_c_prep_controller** %15, align 8, !tbaa !267
  %25 = getelementptr inbounds %struct.jpeg_c_prep_controller, %struct.jpeg_c_prep_controller* %24, i64 0, i32 1
  %26 = bitcast void (...)** %25 to void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32, ...)**
  %27 = load void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32, ...)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32, ...)** %26, align 8, !tbaa !334
  tail call void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32, ...) %27(%struct.jpeg_compress_struct* noundef nonnull %0, i8** noundef %1, i32* noundef %2, i32 noundef %3, i8*** noundef nonnull %16, i32* noundef nonnull %14, i32 noundef 8) #27
  %28 = load i32, i32* %14, align 4, !tbaa !330
  br label %29

29:                                               ; preds = %23, %20
  %30 = phi i32 [ %28, %23 ], [ %21, %20 ]
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %54

32:                                               ; preds = %29
  %33 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %17, align 8, !tbaa !173
  %34 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %33, i64 0, i32 1
  %35 = bitcast i32 (...)** %34 to i32 (%struct.jpeg_compress_struct*, i8***, ...)**
  %36 = load i32 (%struct.jpeg_compress_struct*, i8***, ...)*, i32 (%struct.jpeg_compress_struct*, i8***, ...)** %35, align 8, !tbaa !174
  %37 = tail call i32 (%struct.jpeg_compress_struct*, i8***, ...) %36(%struct.jpeg_compress_struct* noundef nonnull %0, i8*** noundef nonnull %16) #27
  %38 = icmp eq i32 %37, 0
  %39 = load i32, i32* %18, align 8, !tbaa !331
  %40 = icmp eq i32 %39, 0
  br i1 %38, label %41, label %45

41:                                               ; preds = %32
  br i1 %40, label %42, label %54

42:                                               ; preds = %41
  %43 = load i32, i32* %2, align 4, !tbaa !32
  %44 = add i32 %43, -1
  store i32 %44, i32* %2, align 4, !tbaa !32
  store i32 1, i32* %18, align 8, !tbaa !331
  br label %54

45:                                               ; preds = %32
  br i1 %40, label %49, label %46

46:                                               ; preds = %45
  %47 = load i32, i32* %2, align 4, !tbaa !32
  %48 = add i32 %47, 1
  store i32 %48, i32* %2, align 4, !tbaa !32
  store i32 0, i32* %18, align 8, !tbaa !331
  br label %49

49:                                               ; preds = %46, %45
  store i32 0, i32* %14, align 4, !tbaa !330
  %50 = load i32, i32* %8, align 8, !tbaa !329
  %51 = add i32 %50, 1
  store i32 %51, i32* %8, align 8, !tbaa !329
  %52 = load i32, i32* %9, align 8, !tbaa !169
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %20, label %54, !llvm.loop !335

54:                                               ; preds = %29, %49, %4, %41, %42
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_c_prep_controller(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %6, i64 0, i32 5
  store i32 4, i32* %7, align 8, !tbaa !19
  %8 = bitcast %struct.jpeg_error_mgr* %6 to void (%struct.jpeg_common_struct*, ...)**
  %9 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %8, align 8, !tbaa !20
  %10 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %9(%struct.jpeg_common_struct* noundef %10) #27
  br label %11

11:                                               ; preds = %2, %4
  %12 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %14 = bitcast %struct.jpeg_memory_mgr** %13 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %15 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %14, align 8, !tbaa !36
  %16 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %15, align 8, !tbaa !44
  %17 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %16(%struct.jpeg_common_struct* noundef %12, i32 noundef 1, i64 noundef 112) #27
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %19 = bitcast %struct.jpeg_c_prep_controller** %18 to i8**
  store i8* %17, i8** %19, align 8, !tbaa !267
  %20 = bitcast i8* %17 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32)* @start_pass_prep to void (...)*), void (...)** %20, align 8, !tbaa !336
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  %22 = load %struct.jpeg_downsampler*, %struct.jpeg_downsampler** %21, align 8, !tbaa !264
  %23 = getelementptr inbounds %struct.jpeg_downsampler, %struct.jpeg_downsampler* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8, !tbaa !338
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %17 to %struct.my_prep_controller*
  %27 = getelementptr inbounds i8, i8* %17, i64 8
  %28 = bitcast i8* %27 to void (...)**
  br i1 %25, label %261, label %29

29:                                               ; preds = %11
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* @pre_process_context to void (...)*), void (...)** %28, align 8, !tbaa !339
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %31 = load i32, i32* %30, align 4, !tbaa !195
  %32 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %14, align 8, !tbaa !36
  %33 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %32, align 8, !tbaa !44
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %35 = load i32, i32* %34, align 4, !tbaa !202
  %36 = mul i32 %31, 5
  %37 = mul i32 %35, %36
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 3
  %40 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %33(%struct.jpeg_common_struct* noundef nonnull %12, i32 noundef 1, i64 noundef %39) #27
  %41 = load i32, i32* %34, align 4, !tbaa !202
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %299

43:                                               ; preds = %29
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %45 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %44, align 8, !tbaa !145
  %46 = bitcast i8* %40 to i8**
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  %48 = mul nsw i32 %31, 3
  %49 = sext i32 %31 to i64
  %50 = sext i32 %48 to i64
  %51 = shl nsw i64 %50, 3
  %52 = icmp sgt i32 %31, 0
  %53 = shl nsw i32 %31, 1
  %54 = shl i32 %31, 2
  %55 = sext i32 %36 to i64
  %56 = sext i32 %53 to i64
  %57 = sext i32 %54 to i64
  %58 = zext i32 %31 to i64
  %59 = shl nsw i64 %55, 3
  %60 = shl nuw nsw i64 %58, 3
  %61 = shl nsw i64 %57, 3
  %62 = add nsw i64 %61, %60
  %63 = add nsw i64 %56, %58
  %64 = and i64 %58, 4294967292
  %65 = add nsw i64 %64, -4
  %66 = lshr exact i64 %65, 2
  %67 = add nuw nsw i64 %66, 1
  %68 = icmp ult i32 %31, 4
  %69 = and i64 %58, 4294967292
  %70 = and i64 %67, 1
  %71 = icmp eq i64 %65, 0
  %72 = and i64 %67, 9223372036854775806
  %73 = icmp eq i64 %70, 0
  %74 = icmp eq i64 %69, %58
  %75 = and i64 %58, 1
  %76 = icmp eq i64 %75, 0
  %77 = sub nsw i64 0, %58
  br label %78

78:                                               ; preds = %253, %43
  %79 = phi i64 [ 0, %43 ], [ %256, %253 ]
  %80 = phi i8** [ %46, %43 ], [ %255, %253 ]
  %81 = phi %struct.jpeg_component_info* [ %45, %43 ], [ %257, %253 ]
  %82 = mul i64 %59, %79
  %83 = getelementptr i8, i8* %40, i64 %82
  %84 = add i64 %60, %82
  %85 = getelementptr i8, i8* %40, i64 %84
  %86 = add i64 %61, %82
  %87 = getelementptr i8, i8* %40, i64 %86
  %88 = add i64 %62, %82
  %89 = getelementptr i8, i8* %40, i64 %88
  %90 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %13, align 8, !tbaa !36
  %91 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %90, i64 0, i32 2
  %92 = bitcast i8** (...)** %91 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %93 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %92, align 8, !tbaa !56
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i64 0, i32 7
  %95 = load i32, i32* %94, align 4, !tbaa !243
  %96 = zext i32 %95 to i64
  %97 = shl nuw nsw i64 %96, 3
  %98 = load i32, i32* %47, align 8, !tbaa !239
  %99 = sext i32 %98 to i64
  %100 = mul nsw i64 %97, %99
  %101 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i64 0, i32 2
  %102 = load i32, i32* %101, align 8, !tbaa !150
  %103 = sext i32 %102 to i64
  %104 = sdiv i64 %100, %103
  %105 = trunc i64 %104 to i32
  %106 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %93(%struct.jpeg_common_struct* noundef nonnull %12, i32 noundef 1, i32 noundef %105, i32 noundef %48) #27
  %107 = bitcast i8** %106 to i8*
  %108 = getelementptr inbounds i8*, i8** %80, i64 %49
  %109 = bitcast i8** %108 to i8*
  %110 = bitcast i8** %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* align 1 %110, i64 %51, i1 false) #27
  br i1 %52, label %111, label %253

111:                                              ; preds = %78
  br i1 %68, label %216, label %112

112:                                              ; preds = %111
  %113 = getelementptr i8*, i8** %106, i64 %56
  %114 = bitcast i8** %113 to i8*
  %115 = getelementptr i8*, i8** %106, i64 %63
  %116 = bitcast i8** %115 to i8*
  %117 = getelementptr i8*, i8** %106, i64 %58
  %118 = bitcast i8** %117 to i8*
  %119 = icmp ult i8* %83, %89
  %120 = icmp ult i8* %87, %85
  %121 = and i1 %119, %120
  %122 = icmp ult i8* %83, %116
  %123 = icmp ugt i8* %85, %114
  %124 = and i1 %122, %123
  %125 = or i1 %121, %124
  %126 = icmp ult i8* %83, %118
  %127 = icmp ugt i8* %85, %107
  %128 = and i1 %126, %127
  %129 = or i1 %125, %128
  %130 = icmp ult i8* %87, %116
  %131 = icmp ugt i8* %89, %114
  %132 = and i1 %130, %131
  %133 = or i1 %129, %132
  %134 = icmp ult i8* %87, %118
  %135 = icmp ugt i8* %89, %107
  %136 = and i1 %134, %135
  %137 = or i1 %133, %136
  br i1 %137, label %216, label %138

138:                                              ; preds = %112
  br i1 %71, label %190, label %139

139:                                              ; preds = %138, %139
  %140 = phi i64 [ %187, %139 ], [ 0, %138 ]
  %141 = phi i64 [ %188, %139 ], [ 0, %138 ]
  %142 = add nsw i64 %140, %56
  %143 = getelementptr inbounds i8*, i8** %106, i64 %142
  %144 = bitcast i8** %143 to <2 x i8*>*
  %145 = load <2 x i8*>, <2 x i8*>* %144, align 8, !tbaa !3, !alias.scope !340
  %146 = getelementptr inbounds i8*, i8** %143, i64 2
  %147 = bitcast i8** %146 to <2 x i8*>*
  %148 = load <2 x i8*>, <2 x i8*>* %147, align 8, !tbaa !3, !alias.scope !340
  %149 = getelementptr inbounds i8*, i8** %80, i64 %140
  %150 = bitcast i8** %149 to <2 x i8*>*
  store <2 x i8*> %145, <2 x i8*>* %150, align 8, !tbaa !3, !alias.scope !343, !noalias !345
  %151 = getelementptr inbounds i8*, i8** %149, i64 2
  %152 = bitcast i8** %151 to <2 x i8*>*
  store <2 x i8*> %148, <2 x i8*>* %152, align 8, !tbaa !3, !alias.scope !343, !noalias !345
  %153 = getelementptr inbounds i8*, i8** %106, i64 %140
  %154 = bitcast i8** %153 to <2 x i8*>*
  %155 = load <2 x i8*>, <2 x i8*>* %154, align 8, !tbaa !3, !alias.scope !348
  %156 = getelementptr inbounds i8*, i8** %153, i64 2
  %157 = bitcast i8** %156 to <2 x i8*>*
  %158 = load <2 x i8*>, <2 x i8*>* %157, align 8, !tbaa !3, !alias.scope !348
  %159 = add nsw i64 %140, %57
  %160 = getelementptr inbounds i8*, i8** %80, i64 %159
  %161 = bitcast i8** %160 to <2 x i8*>*
  store <2 x i8*> %155, <2 x i8*>* %161, align 8, !tbaa !3, !alias.scope !349, !noalias !350
  %162 = getelementptr inbounds i8*, i8** %160, i64 2
  %163 = bitcast i8** %162 to <2 x i8*>*
  store <2 x i8*> %158, <2 x i8*>* %163, align 8, !tbaa !3, !alias.scope !349, !noalias !350
  %164 = or i64 %140, 4
  %165 = add nsw i64 %164, %56
  %166 = getelementptr inbounds i8*, i8** %106, i64 %165
  %167 = bitcast i8** %166 to <2 x i8*>*
  %168 = load <2 x i8*>, <2 x i8*>* %167, align 8, !tbaa !3, !alias.scope !340
  %169 = getelementptr inbounds i8*, i8** %166, i64 2
  %170 = bitcast i8** %169 to <2 x i8*>*
  %171 = load <2 x i8*>, <2 x i8*>* %170, align 8, !tbaa !3, !alias.scope !340
  %172 = getelementptr inbounds i8*, i8** %80, i64 %164
  %173 = bitcast i8** %172 to <2 x i8*>*
  store <2 x i8*> %168, <2 x i8*>* %173, align 8, !tbaa !3, !alias.scope !343, !noalias !345
  %174 = getelementptr inbounds i8*, i8** %172, i64 2
  %175 = bitcast i8** %174 to <2 x i8*>*
  store <2 x i8*> %171, <2 x i8*>* %175, align 8, !tbaa !3, !alias.scope !343, !noalias !345
  %176 = getelementptr inbounds i8*, i8** %106, i64 %164
  %177 = bitcast i8** %176 to <2 x i8*>*
  %178 = load <2 x i8*>, <2 x i8*>* %177, align 8, !tbaa !3, !alias.scope !348
  %179 = getelementptr inbounds i8*, i8** %176, i64 2
  %180 = bitcast i8** %179 to <2 x i8*>*
  %181 = load <2 x i8*>, <2 x i8*>* %180, align 8, !tbaa !3, !alias.scope !348
  %182 = add nsw i64 %164, %57
  %183 = getelementptr inbounds i8*, i8** %80, i64 %182
  %184 = bitcast i8** %183 to <2 x i8*>*
  store <2 x i8*> %178, <2 x i8*>* %184, align 8, !tbaa !3, !alias.scope !349, !noalias !350
  %185 = getelementptr inbounds i8*, i8** %183, i64 2
  %186 = bitcast i8** %185 to <2 x i8*>*
  store <2 x i8*> %181, <2 x i8*>* %186, align 8, !tbaa !3, !alias.scope !349, !noalias !350
  %187 = add nuw i64 %140, 8
  %188 = add i64 %141, 2
  %189 = icmp eq i64 %188, %72
  br i1 %189, label %190, label %139, !llvm.loop !351

190:                                              ; preds = %139, %138
  %191 = phi i64 [ 0, %138 ], [ %187, %139 ]
  br i1 %73, label %215, label %192

192:                                              ; preds = %190
  %193 = add nsw i64 %191, %56
  %194 = getelementptr inbounds i8*, i8** %106, i64 %193
  %195 = bitcast i8** %194 to <2 x i8*>*
  %196 = load <2 x i8*>, <2 x i8*>* %195, align 8, !tbaa !3, !alias.scope !340
  %197 = getelementptr inbounds i8*, i8** %194, i64 2
  %198 = bitcast i8** %197 to <2 x i8*>*
  %199 = load <2 x i8*>, <2 x i8*>* %198, align 8, !tbaa !3, !alias.scope !340
  %200 = getelementptr inbounds i8*, i8** %80, i64 %191
  %201 = bitcast i8** %200 to <2 x i8*>*
  store <2 x i8*> %196, <2 x i8*>* %201, align 8, !tbaa !3, !alias.scope !343, !noalias !345
  %202 = getelementptr inbounds i8*, i8** %200, i64 2
  %203 = bitcast i8** %202 to <2 x i8*>*
  store <2 x i8*> %199, <2 x i8*>* %203, align 8, !tbaa !3, !alias.scope !343, !noalias !345
  %204 = getelementptr inbounds i8*, i8** %106, i64 %191
  %205 = bitcast i8** %204 to <2 x i8*>*
  %206 = load <2 x i8*>, <2 x i8*>* %205, align 8, !tbaa !3, !alias.scope !348
  %207 = getelementptr inbounds i8*, i8** %204, i64 2
  %208 = bitcast i8** %207 to <2 x i8*>*
  %209 = load <2 x i8*>, <2 x i8*>* %208, align 8, !tbaa !3, !alias.scope !348
  %210 = add nsw i64 %191, %57
  %211 = getelementptr inbounds i8*, i8** %80, i64 %210
  %212 = bitcast i8** %211 to <2 x i8*>*
  store <2 x i8*> %206, <2 x i8*>* %212, align 8, !tbaa !3, !alias.scope !349, !noalias !350
  %213 = getelementptr inbounds i8*, i8** %211, i64 2
  %214 = bitcast i8** %213 to <2 x i8*>*
  store <2 x i8*> %209, <2 x i8*>* %214, align 8, !tbaa !3, !alias.scope !349, !noalias !350
  br label %215

215:                                              ; preds = %190, %192
  br i1 %74, label %253, label %216

216:                                              ; preds = %112, %111, %215
  %217 = phi i64 [ 0, %112 ], [ 0, %111 ], [ %69, %215 ]
  %218 = xor i64 %217, -1
  br i1 %76, label %229, label %219

219:                                              ; preds = %216
  %220 = add nsw i64 %217, %56
  %221 = getelementptr inbounds i8*, i8** %106, i64 %220
  %222 = load i8*, i8** %221, align 8, !tbaa !3
  %223 = getelementptr inbounds i8*, i8** %80, i64 %217
  store i8* %222, i8** %223, align 8, !tbaa !3
  %224 = getelementptr inbounds i8*, i8** %106, i64 %217
  %225 = load i8*, i8** %224, align 8, !tbaa !3
  %226 = add nsw i64 %217, %57
  %227 = getelementptr inbounds i8*, i8** %80, i64 %226
  store i8* %225, i8** %227, align 8, !tbaa !3
  %228 = or i64 %217, 1
  br label %229

229:                                              ; preds = %219, %216
  %230 = phi i64 [ %217, %216 ], [ %228, %219 ]
  %231 = icmp eq i64 %218, %77
  br i1 %231, label %253, label %232

232:                                              ; preds = %229, %232
  %233 = phi i64 [ %251, %232 ], [ %230, %229 ]
  %234 = add nsw i64 %233, %56
  %235 = getelementptr inbounds i8*, i8** %106, i64 %234
  %236 = load i8*, i8** %235, align 8, !tbaa !3
  %237 = getelementptr inbounds i8*, i8** %80, i64 %233
  store i8* %236, i8** %237, align 8, !tbaa !3
  %238 = getelementptr inbounds i8*, i8** %106, i64 %233
  %239 = load i8*, i8** %238, align 8, !tbaa !3
  %240 = add nsw i64 %233, %57
  %241 = getelementptr inbounds i8*, i8** %80, i64 %240
  store i8* %239, i8** %241, align 8, !tbaa !3
  %242 = add nuw nsw i64 %233, 1
  %243 = add nsw i64 %242, %56
  %244 = getelementptr inbounds i8*, i8** %106, i64 %243
  %245 = load i8*, i8** %244, align 8, !tbaa !3
  %246 = getelementptr inbounds i8*, i8** %80, i64 %242
  store i8* %245, i8** %246, align 8, !tbaa !3
  %247 = getelementptr inbounds i8*, i8** %106, i64 %242
  %248 = load i8*, i8** %247, align 8, !tbaa !3
  %249 = add nsw i64 %242, %57
  %250 = getelementptr inbounds i8*, i8** %80, i64 %249
  store i8* %248, i8** %250, align 8, !tbaa !3
  %251 = add nuw nsw i64 %233, 2
  %252 = icmp eq i64 %251, %58
  br i1 %252, label %253, label %232, !llvm.loop !352

253:                                              ; preds = %229, %232, %215, %78
  %254 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %26, i64 0, i32 1, i64 %79
  store i8** %108, i8*** %254, align 8, !tbaa !3
  %255 = getelementptr inbounds i8*, i8** %80, i64 %55
  %256 = add nuw nsw i64 %79, 1
  %257 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i64 1
  %258 = load i32, i32* %34, align 4, !tbaa !202
  %259 = sext i32 %258 to i64
  %260 = icmp slt i64 %256, %259
  br i1 %260, label %78, label %299, !llvm.loop !353

261:                                              ; preds = %11
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* @pre_process_data to void (...)*), void (...)** %28, align 8, !tbaa !339
  %262 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %263 = load i32, i32* %262, align 4, !tbaa !202
  %264 = icmp sgt i32 %263, 0
  br i1 %264, label %265, label %299

265:                                              ; preds = %261
  %266 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %267 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %266, align 8, !tbaa !145
  %268 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  %269 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %270 = getelementptr inbounds i8, i8* %17, i64 16
  %271 = bitcast i8* %270 to [10 x i8**]*
  br label %272

272:                                              ; preds = %265, %272
  %273 = phi i64 [ 0, %265 ], [ %294, %272 ]
  %274 = phi %struct.jpeg_component_info* [ %267, %265 ], [ %295, %272 ]
  %275 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %13, align 8, !tbaa !36
  %276 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %275, i64 0, i32 2
  %277 = bitcast i8** (...)** %276 to i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)**
  %278 = load i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...)** %277, align 8, !tbaa !56
  %279 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %274, i64 0, i32 7
  %280 = load i32, i32* %279, align 4, !tbaa !243
  %281 = zext i32 %280 to i64
  %282 = shl nuw nsw i64 %281, 3
  %283 = load i32, i32* %268, align 8, !tbaa !239
  %284 = sext i32 %283 to i64
  %285 = mul nsw i64 %282, %284
  %286 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %274, i64 0, i32 2
  %287 = load i32, i32* %286, align 8, !tbaa !150
  %288 = sext i32 %287 to i64
  %289 = sdiv i64 %285, %288
  %290 = trunc i64 %289 to i32
  %291 = load i32, i32* %269, align 4, !tbaa !195
  %292 = tail call i8** (%struct.jpeg_common_struct*, i32, i32, i32, ...) %278(%struct.jpeg_common_struct* noundef nonnull %12, i32 noundef 1, i32 noundef %290, i32 noundef %291) #27
  %293 = getelementptr inbounds [10 x i8**], [10 x i8**]* %271, i64 0, i64 %273
  store i8** %292, i8*** %293, align 8, !tbaa !3
  %294 = add nuw nsw i64 %273, 1
  %295 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %274, i64 1
  %296 = load i32, i32* %262, align 4, !tbaa !202
  %297 = sext i32 %296 to i64
  %298 = icmp slt i64 %294, %297
  br i1 %298, label %272, label %299, !llvm.loop !354

299:                                              ; preds = %253, %272, %261, %29
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_pass_prep(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %4 = bitcast %struct.jpeg_c_prep_controller** %3 to %struct.my_prep_controller**
  %5 = load %struct.my_prep_controller*, %struct.my_prep_controller** %4, align 8, !tbaa !267
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 4, i32* %10, align 8, !tbaa !19
  %11 = bitcast %struct.jpeg_error_mgr* %9 to void (%struct.jpeg_common_struct*, ...)**
  %12 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %11, align 8, !tbaa !20
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %12(%struct.jpeg_common_struct* noundef %13) #27
  br label %14

14:                                               ; preds = %7, %2
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 4, !tbaa !25
  %17 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %5, i64 0, i32 2
  store i32 %16, i32* %17, align 8, !tbaa !355
  %18 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %5, i64 0, i32 3
  store i32 0, i32* %18, align 4, !tbaa !356
  %19 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %5, i64 0, i32 4
  store i32 0, i32* %19, align 8, !tbaa !357
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %21 = load i32, i32* %20, align 4, !tbaa !195
  %22 = shl nsw i32 %21, 1
  %23 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %5, i64 0, i32 5
  store i32 %22, i32* %23, align 4, !tbaa !358
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pre_process_context(%struct.jpeg_compress_struct* noundef %0, i8** noundef %1, i32* nocapture noundef %2, i32 noundef %3, i8*** noundef %4, i32* nocapture noundef %5, i32 noundef %6) #2 {
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %9 = bitcast %struct.jpeg_c_prep_controller** %8 to %struct.my_prep_controller**
  %10 = load %struct.my_prep_controller*, %struct.my_prep_controller** %9, align 8, !tbaa !267
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %12 = load i32, i32* %11, align 4, !tbaa !195
  %13 = mul nsw i32 %12, 3
  %14 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 2
  %15 = load i32, i32* %5, align 4, !tbaa !32
  %16 = icmp ult i32 %15, %6
  br i1 %16, label %17, label %148

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 3
  %19 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 5
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %23 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 0
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  %26 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 4
  br label %27

27:                                               ; preds = %17, %145
  %28 = load i32, i32* %2, align 4, !tbaa !32
  %29 = icmp ult i32 %28, %3
  br i1 %29, label %30, label %82

30:                                               ; preds = %27
  %31 = sub i32 %3, %28
  %32 = load i32, i32* %19, align 4, !tbaa !358
  %33 = load i32, i32* %18, align 4, !tbaa !356
  %34 = sub nsw i32 %32, %33
  %35 = icmp ult i32 %34, %31
  %36 = select i1 %35, i32 %34, i32 %31
  %37 = load %struct.jpeg_color_converter*, %struct.jpeg_color_converter** %22, align 8, !tbaa !261
  %38 = getelementptr inbounds %struct.jpeg_color_converter, %struct.jpeg_color_converter* %37, i64 0, i32 1
  %39 = bitcast void (...)** %38 to void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...)**
  %40 = load void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...)** %39, align 8, !tbaa !359
  %41 = zext i32 %28 to i64
  %42 = getelementptr inbounds i8*, i8** %1, i64 %41
  tail call void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...) %40(%struct.jpeg_compress_struct* noundef %0, i8** noundef %42, i8*** noundef nonnull %23, i32 noundef %33, i32 noundef %36) #27
  %43 = load i32, i32* %14, align 8, !tbaa !355
  %44 = load i32, i32* %24, align 4, !tbaa !25
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %74

46:                                               ; preds = %30
  %47 = load i32, i32* %20, align 4, !tbaa !202
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %74

49:                                               ; preds = %46
  %50 = load i32, i32* %11, align 4, !tbaa !195
  br label %51

51:                                               ; preds = %49, %68
  %52 = phi i32 [ %47, %49 ], [ %69, %68 ]
  %53 = phi i32 [ %50, %49 ], [ %70, %68 ]
  %54 = phi i64 [ 0, %49 ], [ %71, %68 ]
  %55 = icmp slt i32 %53, 1
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 %54
  br label %58

58:                                               ; preds = %56, %58
  %59 = phi i32 [ 1, %56 ], [ %63, %58 ]
  %60 = load i8**, i8*** %57, align 8, !tbaa !3
  %61 = sub nsw i32 0, %59
  %62 = load i32, i32* %21, align 8, !tbaa !50
  tail call void (i8**, i32, i8**, i32, i32, i32, ...) bitcast (void (i8**, i32, i8**, i32, i32, i32)* @jcopy_sample_rows to void (i8**, i32, i8**, i32, i32, i32, ...)*)(i8** noundef %60, i32 noundef 0, i8** noundef %60, i32 noundef %61, i32 noundef 1, i32 noundef %62) #27
  %63 = add nuw nsw i32 %59, 1
  %64 = load i32, i32* %11, align 4, !tbaa !195
  %65 = icmp slt i32 %59, %64
  br i1 %65, label %58, label %66, !llvm.loop !360

66:                                               ; preds = %58
  %67 = load i32, i32* %20, align 4, !tbaa !202
  br label %68

68:                                               ; preds = %66, %51
  %69 = phi i32 [ %67, %66 ], [ %52, %51 ]
  %70 = phi i32 [ %64, %66 ], [ %53, %51 ]
  %71 = add nuw nsw i64 %54, 1
  %72 = sext i32 %69 to i64
  %73 = icmp slt i64 %71, %72
  br i1 %73, label %51, label %74, !llvm.loop !361

74:                                               ; preds = %68, %46, %30
  %75 = load i32, i32* %2, align 4, !tbaa !32
  %76 = add i32 %75, %36
  store i32 %76, i32* %2, align 4, !tbaa !32
  %77 = load i32, i32* %18, align 4, !tbaa !356
  %78 = add nsw i32 %77, %36
  store i32 %78, i32* %18, align 4, !tbaa !356
  %79 = load i32, i32* %14, align 8, !tbaa !355
  %80 = sub i32 %79, %36
  store i32 %80, i32* %14, align 8, !tbaa !355
  %81 = load i32, i32* %19, align 4, !tbaa !358
  br label %121

82:                                               ; preds = %27
  %83 = load i32, i32* %14, align 8, !tbaa !355
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %148

85:                                               ; preds = %82
  %86 = load i32, i32* %18, align 4, !tbaa !356
  %87 = load i32, i32* %19, align 4, !tbaa !358
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %89, label %121

89:                                               ; preds = %85
  %90 = load i32, i32* %20, align 4, !tbaa !202
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %119

92:                                               ; preds = %89, %114
  %93 = phi i32 [ %110, %114 ], [ %90, %89 ]
  %94 = phi i32 [ %116, %114 ], [ %87, %89 ]
  %95 = phi i32 [ %115, %114 ], [ %86, %89 ]
  %96 = phi i64 [ %111, %114 ], [ 0, %89 ]
  %97 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 %96
  %98 = load i8**, i8*** %97, align 8, !tbaa !3
  %99 = load i32, i32* %21, align 8, !tbaa !50
  %100 = icmp slt i32 %95, %94
  br i1 %100, label %101, label %109

101:                                              ; preds = %92
  %102 = add nsw i32 %95, -1
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i32 [ %95, %101 ], [ %105, %103 ]
  tail call void (i8**, i32, i8**, i32, i32, i32, ...) bitcast (void (i8**, i32, i8**, i32, i32, i32)* @jcopy_sample_rows to void (i8**, i32, i8**, i32, i32, i32, ...)*)(i8** noundef %98, i32 noundef %102, i8** noundef %98, i32 noundef %104, i32 noundef 1, i32 noundef %99) #27
  %105 = add i32 %104, 1
  %106 = icmp eq i32 %105, %94
  br i1 %106, label %107, label %103, !llvm.loop !362

107:                                              ; preds = %103
  %108 = load i32, i32* %20, align 4, !tbaa !202
  br label %109

109:                                              ; preds = %107, %92
  %110 = phi i32 [ %108, %107 ], [ %93, %92 ]
  %111 = add nuw nsw i64 %96, 1
  %112 = sext i32 %110 to i64
  %113 = icmp slt i64 %111, %112
  br i1 %113, label %114, label %117, !llvm.loop !363

114:                                              ; preds = %109
  %115 = load i32, i32* %18, align 4, !tbaa !356
  %116 = load i32, i32* %19, align 4, !tbaa !358
  br label %92

117:                                              ; preds = %109
  %118 = load i32, i32* %19, align 4, !tbaa !358
  br label %119

119:                                              ; preds = %89, %117
  %120 = phi i32 [ %118, %117 ], [ %87, %89 ]
  store i32 %120, i32* %18, align 4, !tbaa !356
  br label %125

121:                                              ; preds = %85, %74
  %122 = phi i32 [ %87, %85 ], [ %81, %74 ]
  %123 = phi i32 [ %86, %85 ], [ %78, %74 ]
  %124 = icmp eq i32 %123, %122
  br i1 %124, label %125, label %145

125:                                              ; preds = %119, %121
  %126 = load %struct.jpeg_downsampler*, %struct.jpeg_downsampler** %25, align 8, !tbaa !264
  %127 = getelementptr inbounds %struct.jpeg_downsampler, %struct.jpeg_downsampler* %126, i64 0, i32 1
  %128 = bitcast void (...)** %127 to void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...)**
  %129 = load void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...)** %128, align 8, !tbaa !364
  %130 = load i32, i32* %26, align 8, !tbaa !357
  %131 = load i32, i32* %5, align 4, !tbaa !32
  tail call void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...) %129(%struct.jpeg_compress_struct* noundef %0, i8*** noundef nonnull %23, i32 noundef %130, i8*** noundef %4, i32 noundef %131) #27
  %132 = load i32, i32* %5, align 4, !tbaa !32
  %133 = add i32 %132, 1
  store i32 %133, i32* %5, align 4, !tbaa !32
  %134 = load i32, i32* %11, align 4, !tbaa !195
  %135 = load i32, i32* %26, align 8, !tbaa !357
  %136 = add nsw i32 %135, %134
  %137 = icmp slt i32 %136, %13
  %138 = select i1 %137, i32 %136, i32 0
  store i32 %138, i32* %26, align 8, !tbaa !357
  %139 = load i32, i32* %18, align 4, !tbaa !356
  %140 = icmp slt i32 %139, %13
  br i1 %140, label %142, label %141

141:                                              ; preds = %125
  store i32 0, i32* %18, align 4, !tbaa !356
  br label %142

142:                                              ; preds = %141, %125
  %143 = phi i32 [ 0, %141 ], [ %139, %125 ]
  %144 = add nsw i32 %143, %134
  store i32 %144, i32* %19, align 4, !tbaa !358
  br label %145

145:                                              ; preds = %142, %121
  %146 = load i32, i32* %5, align 4, !tbaa !32
  %147 = icmp ult i32 %146, %6
  br i1 %147, label %27, label %148, !llvm.loop !365

148:                                              ; preds = %145, %82, %7
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pre_process_data(%struct.jpeg_compress_struct* noundef %0, i8** noundef %1, i32* nocapture noundef %2, i32 noundef %3, i8*** noundef %4, i32* nocapture noundef %5, i32 noundef %6) #2 {
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %9 = bitcast %struct.jpeg_c_prep_controller** %8 to %struct.my_prep_controller**
  %10 = load %struct.my_prep_controller*, %struct.my_prep_controller** %9, align 8, !tbaa !267
  %11 = load i32, i32* %2, align 4, !tbaa !32
  %12 = icmp ult i32 %11, %3
  br i1 %12, label %13, label %138

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %15 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 3
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %17 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 2
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  br label %22

22:                                               ; preds = %13, %135
  %23 = phi i32 [ %11, %13 ], [ %136, %135 ]
  %24 = load i32, i32* %5, align 4, !tbaa !32
  %25 = icmp ult i32 %24, %6
  br i1 %25, label %26, label %138

26:                                               ; preds = %22
  %27 = sub i32 %3, %23
  %28 = load i32, i32* %14, align 4, !tbaa !195
  %29 = load i32, i32* %15, align 4, !tbaa !356
  %30 = sub nsw i32 %28, %29
  %31 = icmp ult i32 %30, %27
  %32 = select i1 %31, i32 %30, i32 %27
  %33 = load %struct.jpeg_color_converter*, %struct.jpeg_color_converter** %16, align 8, !tbaa !261
  %34 = getelementptr inbounds %struct.jpeg_color_converter, %struct.jpeg_color_converter* %33, i64 0, i32 1
  %35 = bitcast void (...)** %34 to void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...)**
  %36 = load void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...)** %35, align 8, !tbaa !359
  %37 = zext i32 %23 to i64
  %38 = getelementptr inbounds i8*, i8** %1, i64 %37
  tail call void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32, ...) %36(%struct.jpeg_compress_struct* noundef nonnull %0, i8** noundef %38, i8*** noundef nonnull %17, i32 noundef %29, i32 noundef %32) #27
  %39 = load i32, i32* %2, align 4, !tbaa !32
  %40 = add i32 %39, %32
  store i32 %40, i32* %2, align 4, !tbaa !32
  %41 = load i32, i32* %15, align 4, !tbaa !356
  %42 = add nsw i32 %41, %32
  store i32 %42, i32* %15, align 4, !tbaa !356
  %43 = load i32, i32* %18, align 8, !tbaa !355
  %44 = sub i32 %43, %32
  store i32 %44, i32* %18, align 8, !tbaa !355
  %45 = icmp eq i32 %44, 0
  %46 = load i32, i32* %14, align 4, !tbaa !195
  %47 = icmp slt i32 %42, %46
  %48 = select i1 %45, i1 %47, i1 false
  br i1 %48, label %49, label %81

49:                                               ; preds = %26
  %50 = load i32, i32* %19, align 4, !tbaa !202
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %79

52:                                               ; preds = %49, %74
  %53 = phi i32 [ %70, %74 ], [ %50, %49 ]
  %54 = phi i32 [ %76, %74 ], [ %46, %49 ]
  %55 = phi i32 [ %75, %74 ], [ %42, %49 ]
  %56 = phi i64 [ %71, %74 ], [ 0, %49 ]
  %57 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 %56
  %58 = load i8**, i8*** %57, align 8, !tbaa !3
  %59 = load i32, i32* %20, align 8, !tbaa !50
  %60 = icmp slt i32 %55, %54
  br i1 %60, label %61, label %69

61:                                               ; preds = %52
  %62 = add nsw i32 %55, -1
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i32 [ %55, %61 ], [ %65, %63 ]
  tail call void (i8**, i32, i8**, i32, i32, i32, ...) bitcast (void (i8**, i32, i8**, i32, i32, i32)* @jcopy_sample_rows to void (i8**, i32, i8**, i32, i32, i32, ...)*)(i8** noundef %58, i32 noundef %62, i8** noundef %58, i32 noundef %64, i32 noundef 1, i32 noundef %59) #27
  %65 = add i32 %64, 1
  %66 = icmp eq i32 %65, %54
  br i1 %66, label %67, label %63, !llvm.loop !362

67:                                               ; preds = %63
  %68 = load i32, i32* %19, align 4, !tbaa !202
  br label %69

69:                                               ; preds = %67, %52
  %70 = phi i32 [ %68, %67 ], [ %53, %52 ]
  %71 = add nuw nsw i64 %56, 1
  %72 = sext i32 %70 to i64
  %73 = icmp slt i64 %71, %72
  br i1 %73, label %74, label %77, !llvm.loop !366

74:                                               ; preds = %69
  %75 = load i32, i32* %15, align 4, !tbaa !356
  %76 = load i32, i32* %14, align 4, !tbaa !195
  br label %52

77:                                               ; preds = %69
  %78 = load i32, i32* %14, align 4, !tbaa !195
  br label %79

79:                                               ; preds = %49, %77
  %80 = phi i32 [ %78, %77 ], [ %46, %49 ]
  store i32 %80, i32* %15, align 4, !tbaa !356
  br label %83

81:                                               ; preds = %26
  %82 = icmp eq i32 %42, %46
  br i1 %82, label %83, label %91

83:                                               ; preds = %79, %81
  %84 = load %struct.jpeg_downsampler*, %struct.jpeg_downsampler** %21, align 8, !tbaa !264
  %85 = getelementptr inbounds %struct.jpeg_downsampler, %struct.jpeg_downsampler* %84, i64 0, i32 1
  %86 = bitcast void (...)** %85 to void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...)**
  %87 = load void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...)** %86, align 8, !tbaa !364
  %88 = load i32, i32* %5, align 4, !tbaa !32
  tail call void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32, ...) %87(%struct.jpeg_compress_struct* noundef nonnull %0, i8*** noundef nonnull %17, i32 noundef 0, i8*** noundef %4, i32 noundef %88) #27
  store i32 0, i32* %15, align 4, !tbaa !356
  %89 = load i32, i32* %5, align 4, !tbaa !32
  %90 = add i32 %89, 1
  store i32 %90, i32* %5, align 4, !tbaa !32
  br label %91

91:                                               ; preds = %83, %81
  %92 = load i32, i32* %18, align 8, !tbaa !355
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %135

94:                                               ; preds = %91
  %95 = load i32, i32* %5, align 4, !tbaa !32
  %96 = icmp ult i32 %95, %6
  br i1 %96, label %97, label %135

97:                                               ; preds = %94
  %98 = load i32, i32* %19, align 4, !tbaa !202
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %134

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %102 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %101, align 8, !tbaa !145
  br label %103

103:                                              ; preds = %131, %100
  %104 = phi i32 [ %98, %100 ], [ %127, %131 ]
  %105 = phi i32 [ %95, %100 ], [ %133, %131 ]
  %106 = phi i64 [ 0, %100 ], [ %128, %131 ]
  %107 = phi %struct.jpeg_component_info* [ %102, %100 ], [ %132, %131 ]
  %108 = getelementptr inbounds i8**, i8*** %4, i64 %106
  %109 = load i8**, i8*** %108, align 8, !tbaa !3
  %110 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i64 0, i32 7
  %111 = load i32, i32* %110, align 4, !tbaa !243
  %112 = shl i32 %111, 3
  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i64 0, i32 3
  %114 = load i32, i32* %113, align 4, !tbaa !151
  %115 = mul i32 %114, %105
  %116 = mul i32 %114, %6
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %118, label %126

118:                                              ; preds = %103
  %119 = add nsw i32 %115, -1
  br label %120

120:                                              ; preds = %120, %118
  %121 = phi i32 [ %115, %118 ], [ %122, %120 ]
  tail call void (i8**, i32, i8**, i32, i32, i32, ...) bitcast (void (i8**, i32, i8**, i32, i32, i32)* @jcopy_sample_rows to void (i8**, i32, i8**, i32, i32, i32, ...)*)(i8** noundef %109, i32 noundef %119, i8** noundef %109, i32 noundef %121, i32 noundef 1, i32 noundef %112) #27
  %122 = add i32 %121, 1
  %123 = icmp eq i32 %122, %116
  br i1 %123, label %124, label %120, !llvm.loop !362

124:                                              ; preds = %120
  %125 = load i32, i32* %19, align 4, !tbaa !202
  br label %126

126:                                              ; preds = %124, %103
  %127 = phi i32 [ %125, %124 ], [ %104, %103 ]
  %128 = add nuw nsw i64 %106, 1
  %129 = sext i32 %127 to i64
  %130 = icmp slt i64 %128, %129
  br i1 %130, label %131, label %134, !llvm.loop !367

131:                                              ; preds = %126
  %132 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %107, i64 1
  %133 = load i32, i32* %5, align 4, !tbaa !32
  br label %103

134:                                              ; preds = %126, %97
  store i32 %6, i32* %5, align 4, !tbaa !32
  br label %138

135:                                              ; preds = %94, %91
  %136 = load i32, i32* %2, align 4, !tbaa !32
  %137 = icmp ult i32 %136, %3
  br i1 %137, label %22, label %138, !llvm.loop !368

138:                                              ; preds = %22, %135, %7, %134
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_c_coef_controller(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %4 = bitcast %struct.jpeg_memory_mgr** %3 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %4, align 8, !tbaa !36
  %6 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %5, align 8, !tbaa !44
  %7 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %8 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %6(%struct.jpeg_common_struct* noundef %7, i32 noundef 1, i64 noundef 192) #27
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %10 = bitcast %struct.jpeg_c_coef_controller** %9 to i8**
  store i8* %8, i8** %10, align 8, !tbaa !173
  %11 = bitcast i8* %8 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32)* @start_pass_coef to void (...)*), void (...)** %11, align 8, !tbaa !369
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %15 = load i32, i32* %14, align 4, !tbaa !202
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %80

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %19 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8, !tbaa !145
  %20 = getelementptr inbounds i8, i8* %8, i64 112
  %21 = bitcast i8* %20 to [10 x %struct.jvirt_barray_control*]*
  br label %22

22:                                               ; preds = %17, %22
  %23 = phi i64 [ 0, %17 ], [ %48, %22 ]
  %24 = phi %struct.jpeg_component_info* [ %19, %17 ], [ %49, %22 ]
  %25 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %3, align 8, !tbaa !36
  %26 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %25, i64 0, i32 5
  %27 = bitcast %struct.jvirt_barray_control* (...)** %26 to %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)**
  %28 = load %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...)** %27, align 8, !tbaa !371
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 7
  %30 = load i32, i32* %29, align 4, !tbaa !243
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 2
  %33 = load i32, i32* %32, align 8, !tbaa !150
  %34 = sext i32 %33 to i64
  %35 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jround_up to i64 (i64, i64, ...)*)(i64 noundef %31, i64 noundef %34) #27
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 8
  %38 = load i32, i32* %37, align 8, !tbaa !244
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 3
  %41 = load i32, i32* %40, align 4, !tbaa !151
  %42 = sext i32 %41 to i64
  %43 = tail call i64 (i64, i64, ...) bitcast (i64 (i64, i64)* @jround_up to i64 (i64, i64, ...)*)(i64 noundef %39, i64 noundef %42) #27
  %44 = trunc i64 %43 to i32
  %45 = load i32, i32* %40, align 4, !tbaa !151
  %46 = tail call %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32, ...) %28(%struct.jpeg_common_struct* noundef nonnull %7, i32 noundef 1, i32 noundef 0, i32 noundef %36, i32 noundef %44, i32 noundef %45) #27
  %47 = getelementptr inbounds [10 x %struct.jvirt_barray_control*], [10 x %struct.jvirt_barray_control*]* %21, i64 0, i64 %23
  store %struct.jvirt_barray_control* %46, %struct.jvirt_barray_control** %47, align 8, !tbaa !3
  %48 = add nuw nsw i64 %23, 1
  %49 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 1
  %50 = load i32, i32* %14, align 4, !tbaa !202
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %48, %51
  br i1 %52, label %22, label %80, !llvm.loop !372

53:                                               ; preds = %2
  %54 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %3, align 8, !tbaa !36
  %55 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %54, i64 0, i32 1
  %56 = bitcast i8* (...)** %55 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)**
  %57 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %56, align 8, !tbaa !373
  %58 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %57(%struct.jpeg_common_struct* noundef nonnull %7, i32 noundef 1, i64 noundef 1280) #27
  %59 = getelementptr inbounds i8, i8* %8, i64 32
  %60 = bitcast i8* %59 to i8**
  store i8* %58, i8** %60, align 8, !tbaa !3
  %61 = getelementptr inbounds i8, i8* %8, i64 40
  %62 = insertelement <2 x i8*> poison, i8* %58, i64 0
  %63 = shufflevector <2 x i8*> %62, <2 x i8*> poison, <2 x i32> zeroinitializer
  %64 = getelementptr i8, <2 x i8*> %63, <2 x i64> <i64 128, i64 256>
  %65 = bitcast i8* %61 to <2 x i8*>*
  store <2 x i8*> %64, <2 x i8*>* %65, align 8, !tbaa !3
  %66 = getelementptr inbounds i8, i8* %8, i64 56
  %67 = getelementptr i8, <2 x i8*> %63, <2 x i64> <i64 384, i64 512>
  %68 = bitcast i8* %66 to <2 x i8*>*
  store <2 x i8*> %67, <2 x i8*>* %68, align 8, !tbaa !3
  %69 = getelementptr inbounds i8, i8* %8, i64 72
  %70 = getelementptr i8, <2 x i8*> %63, <2 x i64> <i64 640, i64 768>
  %71 = bitcast i8* %69 to <2 x i8*>*
  store <2 x i8*> %70, <2 x i8*>* %71, align 8, !tbaa !3
  %72 = getelementptr inbounds i8, i8* %8, i64 88
  %73 = getelementptr i8, <2 x i8*> %63, <2 x i64> <i64 896, i64 1024>
  %74 = bitcast i8* %72 to <2 x i8*>*
  store <2 x i8*> %73, <2 x i8*>* %74, align 8, !tbaa !3
  %75 = getelementptr inbounds i8, i8* %58, i64 1152
  %76 = getelementptr inbounds i8, i8* %8, i64 104
  %77 = bitcast i8* %76 to i8**
  store i8* %75, i8** %77, align 8, !tbaa !3
  %78 = getelementptr inbounds i8, i8* %8, i64 112
  %79 = bitcast i8* %78 to %struct.jvirt_barray_control**
  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control** %79, align 8, !tbaa !3
  br label %80

80:                                               ; preds = %22, %13, %53
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_pass_coef(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %4 = bitcast %struct.jpeg_c_coef_controller** %3 to %struct.my_coef_controller**
  %5 = load %struct.my_coef_controller*, %struct.my_coef_controller** %4, align 8, !tbaa !173
  %6 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !374
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %8 = load i32, i32* %7, align 4, !tbaa !286
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %22, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %12 = load i32, i32* %11, align 8, !tbaa !169
  %13 = icmp eq i32 %12, 1
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 0
  %15 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8, !tbaa !3
  br i1 %13, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 3
  %18 = load i32, i32* %17, align 4, !tbaa !151
  br label %22

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 18
  %21 = load i32, i32* %20, align 8, !tbaa !296
  br label %22

22:                                               ; preds = %2, %16, %19
  %23 = phi i32 [ %18, %16 ], [ %21, %19 ], [ 1, %2 ]
  %24 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 4
  store i32 %23, i32* %24, align 4, !tbaa !375
  %25 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 2
  store i32 0, i32* %25, align 4, !tbaa !376
  %26 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 3
  store i32 0, i32* %26, align 8, !tbaa !377
  switch i32 %1, label %66 [
    i32 0, label %27
    i32 3, label %40
    i32 2, label %53
  ]

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 6, i64 0
  %29 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %28, align 8, !tbaa !3
  %30 = icmp eq %struct.jvirt_barray_control* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %32, align 8, !tbaa !8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 5
  store i32 4, i32* %34, align 8, !tbaa !19
  %35 = bitcast %struct.jpeg_error_mgr* %33 to void (%struct.jpeg_common_struct*, ...)**
  %36 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %35, align 8, !tbaa !20
  %37 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %36(%struct.jpeg_common_struct* noundef %37) #27
  br label %38

38:                                               ; preds = %31, %27
  %39 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, i8***)* @compress_data to i32 (...)*), i32 (...)** %39, align 8, !tbaa !378
  br label %73

40:                                               ; preds = %22
  %41 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 6, i64 0
  %42 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %41, align 8, !tbaa !3
  %43 = icmp eq %struct.jvirt_barray_control* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %45, align 8, !tbaa !8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i64 0, i32 5
  store i32 4, i32* %47, align 8, !tbaa !19
  %48 = bitcast %struct.jpeg_error_mgr* %46 to void (%struct.jpeg_common_struct*, ...)**
  %49 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %48, align 8, !tbaa !20
  %50 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %49(%struct.jpeg_common_struct* noundef %50) #27
  br label %51

51:                                               ; preds = %44, %40
  %52 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, i8***)* @compress_first_pass to i32 (...)*), i32 (...)** %52, align 8, !tbaa !378
  br label %73

53:                                               ; preds = %22
  %54 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 6, i64 0
  %55 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %54, align 8, !tbaa !3
  %56 = icmp eq %struct.jvirt_barray_control* %55, null
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %58, align 8, !tbaa !8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i64 0, i32 5
  store i32 4, i32* %60, align 8, !tbaa !19
  %61 = bitcast %struct.jpeg_error_mgr* %59 to void (%struct.jpeg_common_struct*, ...)**
  %62 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %61, align 8, !tbaa !20
  %63 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %62(%struct.jpeg_common_struct* noundef %63) #27
  br label %64

64:                                               ; preds = %57, %53
  %65 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 0, i32 1
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, i8***)* @compress_output to i32 (...)*), i32 (...)** %65, align 8, !tbaa !378
  br label %73

66:                                               ; preds = %22
  %67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8, !tbaa !8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 5
  store i32 4, i32* %69, align 8, !tbaa !19
  %70 = bitcast %struct.jpeg_error_mgr* %68 to void (%struct.jpeg_common_struct*, ...)**
  %71 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %70, align 8, !tbaa !20
  %72 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %71(%struct.jpeg_common_struct* noundef %72) #27
  br label %73

73:                                               ; preds = %66, %64, %51, %38
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_data(%struct.jpeg_compress_struct* noundef %0, i8*** nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %4 = bitcast %struct.jpeg_c_coef_controller** %3 to %struct.my_coef_controller**
  %5 = load %struct.my_coef_controller*, %struct.my_coef_controller** %4, align 8, !tbaa !173
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  %7 = load i32, i32* %6, align 8, !tbaa !293
  %8 = add i32 %7, -1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %10 = load i32, i32* %9, align 8, !tbaa !169
  %11 = add i32 %10, -1
  %12 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 3
  %13 = load i32, i32* %12, align 8, !tbaa !377
  %14 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 4
  %15 = load i32, i32* %14, align 4, !tbaa !375
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %236

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 2
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %20 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 1
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %23 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 0
  %24 = load i32, i32* %18, align 4, !tbaa !376
  br label %25

25:                                               ; preds = %17, %230
  %26 = phi i32 [ %15, %17 ], [ %231, %230 ]
  %27 = phi i32 [ %24, %17 ], [ 0, %230 ]
  %28 = phi i32 [ %13, %17 ], [ %232, %230 ]
  %29 = icmp ugt i32 %27, %8
  br i1 %29, label %230, label %30

30:                                               ; preds = %25
  %31 = shl nsw i32 %28, 3
  br label %32

32:                                               ; preds = %30, %225
  %33 = phi i32 [ %27, %30 ], [ %226, %225 ]
  %34 = load i32, i32* %19, align 4, !tbaa !286
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %217

36:                                               ; preds = %32
  %37 = icmp ult i32 %33, %8
  br label %38

38:                                               ; preds = %36, %211
  %39 = phi i32 [ %34, %36 ], [ %212, %211 ]
  %40 = phi i64 [ 0, %36 ], [ %214, %211 ]
  %41 = phi i32 [ 0, %36 ], [ %213, %211 ]
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %40
  %43 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %42, align 8, !tbaa !3
  %44 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 13
  %45 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 17
  %46 = select i1 %37, i32* %44, i32* %45
  %47 = load i32, i32* %46, align 4, !tbaa !32
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 8, !tbaa !301
  %50 = mul i32 %49, %33
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 14
  %52 = load i32, i32* %51, align 8, !tbaa !299
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %211

54:                                               ; preds = %38
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 18
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %43, i64 0, i32 1
  %57 = sext i32 %47 to i64
  %58 = xor i64 %57, -1
  %59 = add nsw i64 %57, 1
  br label %60

60:                                               ; preds = %54, %202
  %61 = phi i32 [ %31, %54 ], [ %205, %202 ]
  %62 = phi i32 [ %41, %54 ], [ %204, %202 ]
  %63 = phi i32 [ 0, %54 ], [ %206, %202 ]
  %64 = load i32, i32* %20, align 8, !tbaa !374
  %65 = icmp ult i32 %64, %11
  br i1 %65, label %70, label %66

66:                                               ; preds = %60
  %67 = add nsw i32 %63, %28
  %68 = load i32, i32* %55, align 8, !tbaa !296
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %137

70:                                               ; preds = %66, %60
  %71 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %21, align 8, !tbaa !270
  %72 = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %71, i64 0, i32 1
  %73 = bitcast void (...)** %72 to void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...)**
  %74 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...)** %73, align 8, !tbaa !379
  %75 = load i32, i32* %56, align 4, !tbaa !241
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8**, i8*** %1, i64 %76
  %78 = load i8**, i8*** %77, align 8, !tbaa !3
  %79 = sext i32 %62 to i64
  %80 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %79
  %81 = load [64 x i16]*, [64 x i16]** %80, align 8, !tbaa !3
  tail call void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...) %74(%struct.jpeg_compress_struct* noundef %0, %struct.jpeg_component_info* noundef nonnull %43, i8** noundef %78, [64 x i16]* noundef %81, i32 noundef %61, i32 noundef %50, i32 noundef %47) #27
  %82 = load i32, i32* %44, align 4, !tbaa !298
  %83 = icmp sgt i32 %82, %47
  br i1 %83, label %84, label %202

84:                                               ; preds = %70
  %85 = add nsw i32 %62, %47
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %86
  %88 = bitcast [64 x i16]** %87 to i8**
  %89 = load i8*, i8** %88, align 8, !tbaa !3
  %90 = sub nsw i32 %82, %47
  %91 = sext i32 %90 to i64
  %92 = shl nsw i64 %91, 7
  tail call void (i8*, i64, ...) bitcast (void (i8*, i64)* @jzero_far to void (i8*, i64, ...)*)(i8* noundef %89, i64 noundef %92) #27
  %93 = load i32, i32* %44, align 4, !tbaa !298
  %94 = icmp slt i32 %47, %93
  br i1 %94, label %95, label %202

95:                                               ; preds = %84
  %96 = sext i32 %93 to i64
  %97 = sub nsw i64 %96, %57
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = add nsw i64 %57, %79
  %102 = add nsw i64 %101, -1
  %103 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %102
  %104 = load [64 x i16]*, [64 x i16]** %103, align 8, !tbaa !3
  %105 = getelementptr inbounds [64 x i16], [64 x i16]* %104, i64 0, i64 0
  %106 = load i16, i16* %105, align 2, !tbaa !96
  %107 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %101
  %108 = load [64 x i16]*, [64 x i16]** %107, align 8, !tbaa !3
  %109 = getelementptr inbounds [64 x i16], [64 x i16]* %108, i64 0, i64 0
  store i16 %106, i16* %109, align 2, !tbaa !96
  br label %110

110:                                              ; preds = %100, %95
  %111 = phi i64 [ %57, %95 ], [ %59, %100 ]
  %112 = sub nsw i64 0, %96
  %113 = icmp eq i64 %58, %112
  br i1 %113, label %202, label %114

114:                                              ; preds = %110, %114
  %115 = phi i64 [ %135, %114 ], [ %111, %110 ]
  %116 = add nsw i64 %115, %79
  %117 = add nsw i64 %116, -1
  %118 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %117
  %119 = load [64 x i16]*, [64 x i16]** %118, align 8, !tbaa !3
  %120 = getelementptr inbounds [64 x i16], [64 x i16]* %119, i64 0, i64 0
  %121 = load i16, i16* %120, align 2, !tbaa !96
  %122 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %116
  %123 = load [64 x i16]*, [64 x i16]** %122, align 8, !tbaa !3
  %124 = getelementptr inbounds [64 x i16], [64 x i16]* %123, i64 0, i64 0
  store i16 %121, i16* %124, align 2, !tbaa !96
  %125 = add nsw i64 %115, 1
  %126 = add nsw i64 %125, %79
  %127 = add i64 %115, %79
  %128 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %127
  %129 = load [64 x i16]*, [64 x i16]** %128, align 8, !tbaa !3
  %130 = getelementptr inbounds [64 x i16], [64 x i16]* %129, i64 0, i64 0
  %131 = load i16, i16* %130, align 2, !tbaa !96
  %132 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %126
  %133 = load [64 x i16]*, [64 x i16]** %132, align 8, !tbaa !3
  %134 = getelementptr inbounds [64 x i16], [64 x i16]* %133, i64 0, i64 0
  store i16 %131, i16* %134, align 2, !tbaa !96
  %135 = add nsw i64 %115, 2
  %136 = icmp eq i64 %135, %96
  br i1 %136, label %202, label %114, !llvm.loop !380

137:                                              ; preds = %66
  %138 = sext i32 %62 to i64
  %139 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %138
  %140 = bitcast [64 x i16]** %139 to i8**
  %141 = load i8*, i8** %140, align 8, !tbaa !3
  %142 = load i32, i32* %44, align 4, !tbaa !298
  %143 = sext i32 %142 to i64
  %144 = shl nsw i64 %143, 7
  tail call void (i8*, i64, ...) bitcast (void (i8*, i64)* @jzero_far to void (i8*, i64, ...)*)(i8* noundef %141, i64 noundef %144) #27
  %145 = load i32, i32* %44, align 4, !tbaa !298
  %146 = icmp sgt i32 %145, 0
  br i1 %146, label %147, label %202

147:                                              ; preds = %137
  %148 = add nsw i32 %62, -1
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %149
  %151 = load [64 x i16]*, [64 x i16]** %150, align 8, !tbaa !3
  %152 = getelementptr inbounds [64 x i16], [64 x i16]* %151, i64 0, i64 0
  %153 = zext i32 %145 to i64
  %154 = add nsw i64 %153, -1
  %155 = and i64 %153, 3
  %156 = icmp ult i64 %154, 3
  br i1 %156, label %188, label %157

157:                                              ; preds = %147
  %158 = and i64 %153, 4294967292
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %185, %159 ]
  %161 = phi i64 [ 0, %157 ], [ %186, %159 ]
  %162 = load i16, i16* %152, align 2, !tbaa !96
  %163 = add nsw i64 %160, %138
  %164 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %163
  %165 = load [64 x i16]*, [64 x i16]** %164, align 8, !tbaa !3
  %166 = getelementptr inbounds [64 x i16], [64 x i16]* %165, i64 0, i64 0
  store i16 %162, i16* %166, align 2, !tbaa !96
  %167 = or i64 %160, 1
  %168 = load i16, i16* %152, align 2, !tbaa !96
  %169 = add nsw i64 %167, %138
  %170 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %169
  %171 = load [64 x i16]*, [64 x i16]** %170, align 8, !tbaa !3
  %172 = getelementptr inbounds [64 x i16], [64 x i16]* %171, i64 0, i64 0
  store i16 %168, i16* %172, align 2, !tbaa !96
  %173 = or i64 %160, 2
  %174 = load i16, i16* %152, align 2, !tbaa !96
  %175 = add nsw i64 %173, %138
  %176 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %175
  %177 = load [64 x i16]*, [64 x i16]** %176, align 8, !tbaa !3
  %178 = getelementptr inbounds [64 x i16], [64 x i16]* %177, i64 0, i64 0
  store i16 %174, i16* %178, align 2, !tbaa !96
  %179 = or i64 %160, 3
  %180 = load i16, i16* %152, align 2, !tbaa !96
  %181 = add nsw i64 %179, %138
  %182 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %181
  %183 = load [64 x i16]*, [64 x i16]** %182, align 8, !tbaa !3
  %184 = getelementptr inbounds [64 x i16], [64 x i16]* %183, i64 0, i64 0
  store i16 %180, i16* %184, align 2, !tbaa !96
  %185 = add nuw nsw i64 %160, 4
  %186 = add i64 %161, 4
  %187 = icmp eq i64 %186, %158
  br i1 %187, label %188, label %159, !llvm.loop !381

188:                                              ; preds = %159, %147
  %189 = phi i64 [ 0, %147 ], [ %185, %159 ]
  %190 = icmp eq i64 %155, 0
  br i1 %190, label %202, label %191

191:                                              ; preds = %188, %191
  %192 = phi i64 [ %199, %191 ], [ %189, %188 ]
  %193 = phi i64 [ %200, %191 ], [ 0, %188 ]
  %194 = load i16, i16* %152, align 2, !tbaa !96
  %195 = add nsw i64 %192, %138
  %196 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 5, i64 %195
  %197 = load [64 x i16]*, [64 x i16]** %196, align 8, !tbaa !3
  %198 = getelementptr inbounds [64 x i16], [64 x i16]* %197, i64 0, i64 0
  store i16 %194, i16* %198, align 2, !tbaa !96
  %199 = add nuw nsw i64 %192, 1
  %200 = add i64 %193, 1
  %201 = icmp eq i64 %200, %155
  br i1 %201, label %202, label %191, !llvm.loop !382

202:                                              ; preds = %188, %191, %110, %114, %137, %84, %70
  %203 = phi i32 [ %145, %137 ], [ %93, %84 ], [ %82, %70 ], [ %93, %114 ], [ %93, %110 ], [ %145, %191 ], [ %145, %188 ]
  %204 = add nsw i32 %203, %62
  %205 = add i32 %61, 8
  %206 = add nuw nsw i32 %63, 1
  %207 = load i32, i32* %51, align 8, !tbaa !299
  %208 = icmp slt i32 %206, %207
  br i1 %208, label %60, label %209, !llvm.loop !383

209:                                              ; preds = %202
  %210 = load i32, i32* %19, align 4, !tbaa !286
  br label %211

211:                                              ; preds = %209, %38
  %212 = phi i32 [ %39, %38 ], [ %210, %209 ]
  %213 = phi i32 [ %41, %38 ], [ %204, %209 ]
  %214 = add nuw nsw i64 %40, 1
  %215 = sext i32 %212 to i64
  %216 = icmp slt i64 %214, %215
  br i1 %216, label %38, label %217, !llvm.loop !384

217:                                              ; preds = %211, %32
  %218 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %22, align 8, !tbaa !273
  %219 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %218, i64 0, i32 1
  %220 = bitcast i32 (...)** %219 to i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...)**
  %221 = load i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...)** %220, align 8, !tbaa !385
  %222 = tail call i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...) %221(%struct.jpeg_compress_struct* noundef nonnull %0, [64 x i16]** noundef nonnull %23) #27
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %217
  store i32 %28, i32* %12, align 8, !tbaa !377
  store i32 %33, i32* %18, align 4, !tbaa !376
  br label %263

225:                                              ; preds = %217
  %226 = add i32 %33, 1
  %227 = icmp ugt i32 %226, %8
  br i1 %227, label %228, label %32, !llvm.loop !386

228:                                              ; preds = %225
  %229 = load i32, i32* %14, align 4, !tbaa !375
  br label %230

230:                                              ; preds = %228, %25
  %231 = phi i32 [ %229, %228 ], [ %26, %25 ]
  store i32 0, i32* %18, align 4, !tbaa !376
  %232 = add nsw i32 %28, 1
  %233 = icmp slt i32 %232, %231
  br i1 %233, label %25, label %234, !llvm.loop !387

234:                                              ; preds = %230
  %235 = load %struct.my_coef_controller*, %struct.my_coef_controller** %4, align 8, !tbaa !173
  br label %236

236:                                              ; preds = %234, %2
  %237 = phi %struct.my_coef_controller* [ %235, %234 ], [ %5, %2 ]
  %238 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 1
  %239 = load i32, i32* %238, align 8, !tbaa !374
  %240 = add i32 %239, 1
  store i32 %240, i32* %238, align 8, !tbaa !374
  %241 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %242 = load i32, i32* %241, align 4, !tbaa !286
  %243 = icmp sgt i32 %242, 1
  br i1 %243, label %258, label %244

244:                                              ; preds = %236
  %245 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %237, i64 0, i32 1
  %246 = load i32, i32* %245, align 8, !tbaa !374
  %247 = load i32, i32* %9, align 8, !tbaa !169
  %248 = add i32 %247, -1
  %249 = icmp ult i32 %246, %248
  %250 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 0
  %251 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %250, align 8, !tbaa !3
  br i1 %249, label %252, label %255

252:                                              ; preds = %244
  %253 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %251, i64 0, i32 3
  %254 = load i32, i32* %253, align 4, !tbaa !151
  br label %258

255:                                              ; preds = %244
  %256 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %251, i64 0, i32 18
  %257 = load i32, i32* %256, align 8, !tbaa !296
  br label %258

258:                                              ; preds = %236, %252, %255
  %259 = phi i32 [ %254, %252 ], [ %257, %255 ], [ 1, %236 ]
  %260 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %237, i64 0, i32 4
  store i32 %259, i32* %260, align 4, !tbaa !375
  %261 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %237, i64 0, i32 2
  store i32 0, i32* %261, align 4, !tbaa !376
  %262 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %237, i64 0, i32 3
  store i32 0, i32* %262, align 8, !tbaa !377
  br label %263

263:                                              ; preds = %258, %224
  %264 = phi i32 [ 0, %224 ], [ 1, %258 ]
  ret i32 %264
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_first_pass(%struct.jpeg_compress_struct* noundef %0, i8*** nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %4 = bitcast %struct.jpeg_c_coef_controller** %3 to %struct.my_coef_controller**
  %5 = load %struct.my_coef_controller*, %struct.my_coef_controller** %4, align 8, !tbaa !173
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %7 = load i32, i32* %6, align 8, !tbaa !169
  %8 = add i32 %7, -1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %10 = load i32, i32* %9, align 4, !tbaa !202
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %205

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %14 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8, !tbaa !145
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %17 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 1
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  br label %19

19:                                               ; preds = %12, %199
  %20 = phi i64 [ 0, %12 ], [ %200, %199 ]
  %21 = phi %struct.jpeg_component_info* [ %14, %12 ], [ %201, %199 ]
  %22 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %15, align 8, !tbaa !36
  %23 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %22, i64 0, i32 8
  %24 = bitcast [64 x i16]** (...)** %23 to [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...)**
  %25 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...)** %24, align 8, !tbaa !388
  %26 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %5, i64 0, i32 6, i64 %20
  %27 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %26, align 8, !tbaa !3
  %28 = load i32, i32* %17, align 8, !tbaa !374
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i64 0, i32 3
  %30 = load i32, i32* %29, align 4, !tbaa !151
  %31 = mul i32 %30, %28
  %32 = tail call [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...) %25(%struct.jpeg_common_struct* noundef nonnull %16, %struct.jvirt_barray_control* noundef %27, i32 noundef %31, i32 noundef %30, i32 noundef 1) #27
  %33 = load i32, i32* %17, align 8, !tbaa !374
  %34 = icmp ult i32 %33, %8
  br i1 %34, label %35, label %37

35:                                               ; preds = %19
  %36 = load i32, i32* %29, align 4, !tbaa !151
  br label %44

37:                                               ; preds = %19
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i64 0, i32 8
  %39 = load i32, i32* %38, align 8, !tbaa !244
  %40 = load i32, i32* %29, align 4, !tbaa !151
  %41 = urem i32 %39, %40
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %42, i32 %40, i32 %41
  br label %44

44:                                               ; preds = %37, %35
  %45 = phi i32 [ %36, %35 ], [ %43, %37 ]
  %46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i64 0, i32 7
  %47 = load i32, i32* %46, align 4, !tbaa !243
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i64 0, i32 2
  %49 = load i32, i32* %48, align 8, !tbaa !150
  %50 = urem i32 %47, %49
  %51 = icmp sgt i32 %50, 0
  %52 = sub nsw i32 %49, %50
  %53 = select i1 %51, i32 %52, i32 %50
  %54 = icmp sgt i32 %45, 0
  br i1 %54, label %55, label %128

55:                                               ; preds = %44
  %56 = getelementptr inbounds i8**, i8*** %1, i64 %20
  %57 = icmp sgt i32 %53, 0
  %58 = zext i32 %47 to i64
  %59 = zext i32 %53 to i64
  %60 = shl nuw nsw i64 %59, 7
  %61 = zext i32 %45 to i64
  %62 = add nsw i64 %59, -1
  %63 = and i64 %59, 7
  %64 = icmp ult i64 %62, 7
  %65 = and i64 %59, 4294967288
  %66 = icmp eq i64 %63, 0
  br label %67

67:                                               ; preds = %55, %123
  %68 = phi i64 [ 0, %55 ], [ %124, %123 ]
  %69 = getelementptr inbounds [64 x i16]*, [64 x i16]** %32, i64 %68
  %70 = load [64 x i16]*, [64 x i16]** %69, align 8, !tbaa !3
  %71 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %18, align 8, !tbaa !270
  %72 = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %71, i64 0, i32 1
  %73 = bitcast void (...)** %72 to void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...)**
  %74 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...)** %73, align 8, !tbaa !379
  %75 = load i8**, i8*** %56, align 8, !tbaa !3
  %76 = trunc i64 %68 to i32
  %77 = shl i32 %76, 3
  tail call void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32, ...) %74(%struct.jpeg_compress_struct* noundef %0, %struct.jpeg_component_info* noundef %21, i8** noundef %75, [64 x i16]* noundef %70, i32 noundef %77, i32 noundef 0, i32 noundef %47) #27
  br i1 %57, label %78, label %123

78:                                               ; preds = %67
  %79 = getelementptr inbounds [64 x i16], [64 x i16]* %70, i64 %58
  %80 = bitcast [64 x i16]* %79 to i8*
  tail call void (i8*, i64, ...) bitcast (void (i8*, i64)* @jzero_far to void (i8*, i64, ...)*)(i8* noundef %80, i64 noundef %60) #27
  %81 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 -1
  %82 = getelementptr inbounds [64 x i16], [64 x i16]* %81, i64 0, i64 0
  %83 = load i16, i16* %82, align 2, !tbaa !96
  br i1 %64, label %113, label %84

84:                                               ; preds = %78, %84
  %85 = phi i64 [ %110, %84 ], [ 0, %78 ]
  %86 = phi i64 [ %111, %84 ], [ 0, %78 ]
  %87 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %85
  %88 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0
  store i16 %83, i16* %88, align 2, !tbaa !96
  %89 = or i64 %85, 1
  %90 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %89
  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %90, i64 0, i64 0
  store i16 %83, i16* %91, align 2, !tbaa !96
  %92 = or i64 %85, 2
  %93 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %92
  %94 = getelementptr inbounds [64 x i16], [64 x i16]* %93, i64 0, i64 0
  store i16 %83, i16* %94, align 2, !tbaa !96
  %95 = or i64 %85, 3
  %96 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %95
  %97 = getelementptr inbounds [64 x i16], [64 x i16]* %96, i64 0, i64 0
  store i16 %83, i16* %97, align 2, !tbaa !96
  %98 = or i64 %85, 4
  %99 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %98
  %100 = getelementptr inbounds [64 x i16], [64 x i16]* %99, i64 0, i64 0
  store i16 %83, i16* %100, align 2, !tbaa !96
  %101 = or i64 %85, 5
  %102 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %101
  %103 = getelementptr inbounds [64 x i16], [64 x i16]* %102, i64 0, i64 0
  store i16 %83, i16* %103, align 2, !tbaa !96
  %104 = or i64 %85, 6
  %105 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %104
  %106 = getelementptr inbounds [64 x i16], [64 x i16]* %105, i64 0, i64 0
  store i16 %83, i16* %106, align 2, !tbaa !96
  %107 = or i64 %85, 7
  %108 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %107
  %109 = getelementptr inbounds [64 x i16], [64 x i16]* %108, i64 0, i64 0
  store i16 %83, i16* %109, align 2, !tbaa !96
  %110 = add nuw nsw i64 %85, 8
  %111 = add i64 %86, 8
  %112 = icmp eq i64 %111, %65
  br i1 %112, label %113, label %84, !llvm.loop !389

113:                                              ; preds = %84, %78
  %114 = phi i64 [ 0, %78 ], [ %110, %84 ]
  br i1 %66, label %123, label %115

115:                                              ; preds = %113, %115
  %116 = phi i64 [ %120, %115 ], [ %114, %113 ]
  %117 = phi i64 [ %121, %115 ], [ 0, %113 ]
  %118 = getelementptr inbounds [64 x i16], [64 x i16]* %79, i64 %116
  %119 = getelementptr inbounds [64 x i16], [64 x i16]* %118, i64 0, i64 0
  store i16 %83, i16* %119, align 2, !tbaa !96
  %120 = add nuw nsw i64 %116, 1
  %121 = add i64 %117, 1
  %122 = icmp eq i64 %121, %63
  br i1 %122, label %123, label %115, !llvm.loop !390

123:                                              ; preds = %113, %115, %67
  %124 = add nuw nsw i64 %68, 1
  %125 = icmp eq i64 %124, %61
  br i1 %125, label %126, label %67, !llvm.loop !391

126:                                              ; preds = %123
  %127 = load i32, i32* %17, align 8, !tbaa !374
  br label %128

128:                                              ; preds = %126, %44
  %129 = phi i32 [ %127, %126 ], [ %33, %44 ]
  %130 = icmp eq i32 %129, %8
  br i1 %130, label %131, label %199

131:                                              ; preds = %128
  %132 = add i32 %53, %47
  %133 = load i32, i32* %29, align 4, !tbaa !151
  %134 = icmp slt i32 %45, %133
  br i1 %134, label %135, label %199

135:                                              ; preds = %131
  %136 = udiv i32 %132, %49
  %137 = zext i32 %132 to i64
  %138 = shl nuw nsw i64 %137, 7
  %139 = icmp ugt i32 %49, %132
  %140 = add nsw i32 %49, -1
  %141 = sext i32 %140 to i64
  %142 = icmp sgt i32 %49, 0
  %143 = sext i32 %49 to i64
  %144 = sext i32 %45 to i64
  %145 = zext i32 %49 to i64
  %146 = call i32 @llvm.umax.i32(i32 %136, i32 1)
  %147 = add nsw i64 %145, -1
  %148 = and i64 %145, 3
  %149 = icmp ult i64 %147, 3
  %150 = and i64 %145, 4294967292
  %151 = icmp eq i64 %148, 0
  br label %152

152:                                              ; preds = %135, %194
  %153 = phi i64 [ %144, %135 ], [ %195, %194 ]
  %154 = getelementptr inbounds [64 x i16]*, [64 x i16]** %32, i64 %153
  %155 = load [64 x i16]*, [64 x i16]** %154, align 8, !tbaa !3
  %156 = add nsw i64 %153, -1
  %157 = getelementptr inbounds [64 x i16]*, [64 x i16]** %32, i64 %156
  %158 = load [64 x i16]*, [64 x i16]** %157, align 8, !tbaa !3
  %159 = bitcast [64 x i16]* %155 to i8*
  tail call void (i8*, i64, ...) bitcast (void (i8*, i64)* @jzero_far to void (i8*, i64, ...)*)(i8* noundef %159, i64 noundef %138) #27
  br i1 %139, label %194, label %160

160:                                              ; preds = %152, %189
  %161 = phi [64 x i16]* [ %191, %189 ], [ %158, %152 ]
  %162 = phi [64 x i16]* [ %190, %189 ], [ %155, %152 ]
  %163 = phi i32 [ %192, %189 ], [ 0, %152 ]
  %164 = getelementptr inbounds [64 x i16], [64 x i16]* %161, i64 %141, i64 0
  %165 = load i16, i16* %164, align 2, !tbaa !96
  br i1 %142, label %166, label %189

166:                                              ; preds = %160
  br i1 %149, label %180, label %167

167:                                              ; preds = %166, %167
  %168 = phi i64 [ %177, %167 ], [ 0, %166 ]
  %169 = phi i64 [ %178, %167 ], [ 0, %166 ]
  %170 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 %168, i64 0
  store i16 %165, i16* %170, align 2, !tbaa !96
  %171 = or i64 %168, 1
  %172 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 %171, i64 0
  store i16 %165, i16* %172, align 2, !tbaa !96
  %173 = or i64 %168, 2
  %174 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 %173, i64 0
  store i16 %165, i16* %174, align 2, !tbaa !96
  %175 = or i64 %168, 3
  %176 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 %175, i64 0
  store i16 %165, i16* %176, align 2, !tbaa !96
  %177 = add nuw nsw i64 %168, 4
  %178 = add i64 %169, 4
  %179 = icmp eq i64 %178, %150
  br i1 %179, label %180, label %167, !llvm.loop !392

180:                                              ; preds = %167, %166
  %181 = phi i64 [ 0, %166 ], [ %177, %167 ]
  br i1 %151, label %189, label %182

182:                                              ; preds = %180, %182
  %183 = phi i64 [ %186, %182 ], [ %181, %180 ]
  %184 = phi i64 [ %187, %182 ], [ 0, %180 ]
  %185 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 %183, i64 0
  store i16 %165, i16* %185, align 2, !tbaa !96
  %186 = add nuw nsw i64 %183, 1
  %187 = add i64 %184, 1
  %188 = icmp eq i64 %187, %148
  br i1 %188, label %189, label %182, !llvm.loop !393

189:                                              ; preds = %180, %182, %160
  %190 = getelementptr inbounds [64 x i16], [64 x i16]* %162, i64 %143
  %191 = getelementptr inbounds [64 x i16], [64 x i16]* %161, i64 %143
  %192 = add nuw i32 %163, 1
  %193 = icmp eq i32 %192, %146
  br i1 %193, label %194, label %160, !llvm.loop !394

194:                                              ; preds = %189, %152
  %195 = add nsw i64 %153, 1
  %196 = load i32, i32* %29, align 4, !tbaa !151
  %197 = sext i32 %196 to i64
  %198 = icmp slt i64 %195, %197
  br i1 %198, label %152, label %199, !llvm.loop !395

199:                                              ; preds = %194, %131, %128
  %200 = add nuw nsw i64 %20, 1
  %201 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i64 1
  %202 = load i32, i32* %9, align 4, !tbaa !202
  %203 = sext i32 %202 to i64
  %204 = icmp slt i64 %200, %203
  br i1 %204, label %19, label %205, !llvm.loop !396

205:                                              ; preds = %199, %2
  %206 = tail call i32 @compress_output(%struct.jpeg_compress_struct* noundef nonnull %0, i8*** noundef %1)
  ret i32 %206
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_output(%struct.jpeg_compress_struct* noundef %0, i8*** nocapture noundef readnone %1) #2 {
  %3 = alloca [4 x [64 x i16]**], align 16
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %5 = bitcast %struct.jpeg_c_coef_controller** %4 to %struct.my_coef_controller**
  %6 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8, !tbaa !173
  %7 = bitcast [4 x [64 x i16]**]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %9 = load i32, i32* %8, align 4, !tbaa !286
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %38

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %14 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 1
  br label %15

15:                                               ; preds = %11, %15
  %16 = phi i64 [ 0, %11 ], [ %34, %15 ]
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %16
  %18 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8, !tbaa !3
  %19 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %12, align 8, !tbaa !36
  %20 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %19, i64 0, i32 8
  %21 = bitcast [64 x i16]** (...)** %20 to [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...)**
  %22 = load [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...)** %21, align 8, !tbaa !388
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 0, i32 1
  %24 = load i32, i32* %23, align 4, !tbaa !241
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 6, i64 %25
  %27 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %26, align 8, !tbaa !3
  %28 = load i32, i32* %14, align 8, !tbaa !374
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 0, i32 3
  %30 = load i32, i32* %29, align 4, !tbaa !151
  %31 = mul i32 %30, %28
  %32 = tail call [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32, ...) %22(%struct.jpeg_common_struct* noundef %13, %struct.jvirt_barray_control* noundef %27, i32 noundef %31, i32 noundef %30, i32 noundef 0) #27
  %33 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %3, i64 0, i64 %16
  store [64 x i16]** %32, [64 x i16]*** %33, align 8, !tbaa !3
  %34 = add nuw nsw i64 %16, 1
  %35 = load i32, i32* %8, align 4, !tbaa !286
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %34, %36
  br i1 %37, label %15, label %38, !llvm.loop !397

38:                                               ; preds = %15, %2
  %39 = phi i32 [ %9, %2 ], [ %35, %15 ]
  %40 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 3
  %41 = load i32, i32* %40, align 8, !tbaa !377
  %42 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 4
  %43 = load i32, i32* %42, align 4, !tbaa !375
  %44 = icmp slt i32 %41, %43
  br i1 %44, label %45, label %217

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 2
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %49 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 0
  %50 = sext i32 %41 to i64
  %51 = load i32, i32* %46, align 4, !tbaa !376
  %52 = load i32, i32* %47, align 8, !tbaa !293
  br label %53

53:                                               ; preds = %45, %209
  %54 = phi i32 [ %43, %45 ], [ %210, %209 ]
  %55 = phi i32 [ %52, %45 ], [ %211, %209 ]
  %56 = phi i32 [ %51, %45 ], [ 0, %209 ]
  %57 = phi i64 [ %50, %45 ], [ %212, %209 ]
  %58 = icmp ult i32 %56, %55
  br i1 %58, label %59, label %209

59:                                               ; preds = %53, %203
  %60 = phi i32 [ %204, %203 ], [ %56, %53 ]
  %61 = load i32, i32* %8, align 4, !tbaa !286
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %194

63:                                               ; preds = %59
  %64 = zext i32 %61 to i64
  br label %65

65:                                               ; preds = %63, %190
  %66 = phi i64 [ 0, %63 ], [ %192, %190 ]
  %67 = phi i32 [ 0, %63 ], [ %191, %190 ]
  %68 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %66
  %69 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %68, align 8, !tbaa !3
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %69, i64 0, i32 13
  %71 = load i32, i32* %70, align 4, !tbaa !298
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %69, i64 0, i32 14
  %73 = load i32, i32* %72, align 8, !tbaa !299
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %190

75:                                               ; preds = %65
  %76 = mul i32 %71, %60
  %77 = getelementptr inbounds [4 x [64 x i16]**], [4 x [64 x i16]**]* %3, i64 0, i64 %66
  %78 = load [64 x i16]**, [64 x i16]*** %77, align 8, !tbaa !3
  %79 = zext i32 %76 to i64
  %80 = icmp sgt i32 %71, 0
  %81 = zext i32 %73 to i64
  %82 = add i32 %71, -1
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 8589934588
  %86 = add nsw i64 %85, -4
  %87 = lshr exact i64 %86, 2
  %88 = add nuw nsw i64 %87, 1
  %89 = icmp ult i32 %82, 3
  %90 = and i64 %84, 8589934588
  %91 = trunc i64 %90 to i32
  %92 = and i64 %88, 3
  %93 = icmp ult i64 %86, 12
  %94 = and i64 %88, 9223372036854775804
  %95 = icmp eq i64 %92, 0
  %96 = icmp eq i64 %84, %90
  br label %97

97:                                               ; preds = %75, %186
  %98 = phi i64 [ 0, %75 ], [ %188, %186 ]
  %99 = phi i32 [ %67, %75 ], [ %187, %186 ]
  br i1 %80, label %100, label %186

100:                                              ; preds = %97
  %101 = add nsw i64 %98, %57
  %102 = getelementptr inbounds [64 x i16]*, [64 x i16]** %78, i64 %101
  %103 = load [64 x i16]*, [64 x i16]** %102, align 8, !tbaa !3
  %104 = getelementptr inbounds [64 x i16], [64 x i16]* %103, i64 %79
  %105 = sext i32 %99 to i64
  br i1 %89, label %170, label %106

106:                                              ; preds = %100
  %107 = add nsw i64 %90, %105
  %108 = getelementptr [64 x i16], [64 x i16]* %104, i64 %90
  br i1 %93, label %151, label %109

109:                                              ; preds = %106, %109
  %110 = phi [64 x i16]* [ %148, %109 ], [ %104, %106 ]
  %111 = phi i64 [ %147, %109 ], [ 0, %106 ]
  %112 = phi i64 [ %149, %109 ], [ 0, %106 ]
  %113 = add i64 %111, %105
  %114 = getelementptr [64 x i16], [64 x i16]* %110, <2 x i64> <i64 0, i64 1>
  %115 = getelementptr [64 x i16], [64 x i16]* %110, <2 x i64> <i64 2, i64 3>
  %116 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 %113
  %117 = bitcast [64 x i16]** %116 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %114, <2 x [64 x i16]*>* %117, align 8, !tbaa !3
  %118 = getelementptr inbounds [64 x i16]*, [64 x i16]** %116, i64 2
  %119 = bitcast [64 x i16]** %118 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %115, <2 x [64 x i16]*>* %119, align 8, !tbaa !3
  %120 = or i64 %111, 4
  %121 = getelementptr [64 x i16], [64 x i16]* %110, i64 4
  %122 = add i64 %120, %105
  %123 = getelementptr [64 x i16], [64 x i16]* %121, <2 x i64> <i64 0, i64 1>
  %124 = getelementptr [64 x i16], [64 x i16]* %121, <2 x i64> <i64 2, i64 3>
  %125 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 %122
  %126 = bitcast [64 x i16]** %125 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %123, <2 x [64 x i16]*>* %126, align 8, !tbaa !3
  %127 = getelementptr inbounds [64 x i16]*, [64 x i16]** %125, i64 2
  %128 = bitcast [64 x i16]** %127 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %124, <2 x [64 x i16]*>* %128, align 8, !tbaa !3
  %129 = or i64 %111, 8
  %130 = getelementptr [64 x i16], [64 x i16]* %110, i64 8
  %131 = add i64 %129, %105
  %132 = getelementptr [64 x i16], [64 x i16]* %130, <2 x i64> <i64 0, i64 1>
  %133 = getelementptr [64 x i16], [64 x i16]* %130, <2 x i64> <i64 2, i64 3>
  %134 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 %131
  %135 = bitcast [64 x i16]** %134 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %132, <2 x [64 x i16]*>* %135, align 8, !tbaa !3
  %136 = getelementptr inbounds [64 x i16]*, [64 x i16]** %134, i64 2
  %137 = bitcast [64 x i16]** %136 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %133, <2 x [64 x i16]*>* %137, align 8, !tbaa !3
  %138 = or i64 %111, 12
  %139 = getelementptr [64 x i16], [64 x i16]* %110, i64 12
  %140 = add i64 %138, %105
  %141 = getelementptr [64 x i16], [64 x i16]* %139, <2 x i64> <i64 0, i64 1>
  %142 = getelementptr [64 x i16], [64 x i16]* %139, <2 x i64> <i64 2, i64 3>
  %143 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 %140
  %144 = bitcast [64 x i16]** %143 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %141, <2 x [64 x i16]*>* %144, align 8, !tbaa !3
  %145 = getelementptr inbounds [64 x i16]*, [64 x i16]** %143, i64 2
  %146 = bitcast [64 x i16]** %145 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %142, <2 x [64 x i16]*>* %146, align 8, !tbaa !3
  %147 = add nuw i64 %111, 16
  %148 = getelementptr [64 x i16], [64 x i16]* %110, i64 16
  %149 = add nuw i64 %112, 4
  %150 = icmp eq i64 %149, %94
  br i1 %150, label %151, label %109, !llvm.loop !398

151:                                              ; preds = %109, %106
  %152 = phi [64 x i16]* [ %104, %106 ], [ %148, %109 ]
  %153 = phi i64 [ 0, %106 ], [ %147, %109 ]
  br i1 %95, label %169, label %154

154:                                              ; preds = %151, %154
  %155 = phi [64 x i16]* [ %166, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %165, %154 ], [ %153, %151 ]
  %157 = phi i64 [ %167, %154 ], [ 0, %151 ]
  %158 = add i64 %156, %105
  %159 = getelementptr [64 x i16], [64 x i16]* %155, <2 x i64> <i64 0, i64 1>
  %160 = getelementptr [64 x i16], [64 x i16]* %155, <2 x i64> <i64 2, i64 3>
  %161 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 %158
  %162 = bitcast [64 x i16]** %161 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %159, <2 x [64 x i16]*>* %162, align 8, !tbaa !3
  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %161, i64 2
  %164 = bitcast [64 x i16]** %163 to <2 x [64 x i16]*>*
  store <2 x [64 x i16]*> %160, <2 x [64 x i16]*>* %164, align 8, !tbaa !3
  %165 = add nuw i64 %156, 4
  %166 = getelementptr [64 x i16], [64 x i16]* %155, i64 4
  %167 = add i64 %157, 1
  %168 = icmp eq i64 %167, %92
  br i1 %168, label %169, label %154, !llvm.loop !399

169:                                              ; preds = %154, %151
  br i1 %96, label %183, label %170

170:                                              ; preds = %100, %169
  %171 = phi i64 [ %105, %100 ], [ %107, %169 ]
  %172 = phi [64 x i16]* [ %104, %100 ], [ %108, %169 ]
  %173 = phi i32 [ 0, %100 ], [ %91, %169 ]
  br label %174

174:                                              ; preds = %170, %174
  %175 = phi i64 [ %179, %174 ], [ %171, %170 ]
  %176 = phi [64 x i16]* [ %178, %174 ], [ %172, %170 ]
  %177 = phi i32 [ %181, %174 ], [ %173, %170 ]
  %178 = getelementptr inbounds [64 x i16], [64 x i16]* %176, i64 1
  %179 = add nsw i64 %175, 1
  %180 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 5, i64 %175
  store [64 x i16]* %176, [64 x i16]** %180, align 8, !tbaa !3
  %181 = add nuw nsw i32 %177, 1
  %182 = icmp eq i32 %181, %71
  br i1 %182, label %183, label %174, !llvm.loop !400

183:                                              ; preds = %174, %169
  %184 = phi i64 [ %107, %169 ], [ %179, %174 ]
  %185 = trunc i64 %184 to i32
  br label %186

186:                                              ; preds = %183, %97
  %187 = phi i32 [ %99, %97 ], [ %185, %183 ]
  %188 = add nuw nsw i64 %98, 1
  %189 = icmp eq i64 %188, %81
  br i1 %189, label %190, label %97, !llvm.loop !401

190:                                              ; preds = %186, %65
  %191 = phi i32 [ %67, %65 ], [ %187, %186 ]
  %192 = add nuw nsw i64 %66, 1
  %193 = icmp eq i64 %192, %64
  br i1 %193, label %194, label %65, !llvm.loop !402

194:                                              ; preds = %190, %59
  %195 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %48, align 8, !tbaa !273
  %196 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %195, i64 0, i32 1
  %197 = bitcast i32 (...)** %196 to i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...)**
  %198 = load i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...)** %197, align 8, !tbaa !385
  %199 = tail call i32 (%struct.jpeg_compress_struct*, [64 x i16]**, ...) %198(%struct.jpeg_compress_struct* noundef nonnull %0, [64 x i16]** noundef nonnull %49) #27
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %194
  %202 = trunc i64 %57 to i32
  store i32 %202, i32* %40, align 8, !tbaa !377
  store i32 %60, i32* %46, align 4, !tbaa !376
  br label %244

203:                                              ; preds = %194
  %204 = add nuw i32 %60, 1
  %205 = load i32, i32* %47, align 8, !tbaa !293
  %206 = icmp ult i32 %204, %205
  br i1 %206, label %59, label %207, !llvm.loop !403

207:                                              ; preds = %203
  %208 = load i32, i32* %42, align 4, !tbaa !375
  br label %209

209:                                              ; preds = %207, %53
  %210 = phi i32 [ %208, %207 ], [ %54, %53 ]
  %211 = phi i32 [ %205, %207 ], [ %55, %53 ]
  store i32 0, i32* %46, align 4, !tbaa !376
  %212 = add nsw i64 %57, 1
  %213 = sext i32 %210 to i64
  %214 = icmp slt i64 %212, %213
  br i1 %214, label %53, label %215, !llvm.loop !404

215:                                              ; preds = %209
  %216 = load i32, i32* %8, align 4, !tbaa !286
  br label %217

217:                                              ; preds = %215, %38
  %218 = phi i32 [ %216, %215 ], [ %39, %38 ]
  %219 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %6, i64 0, i32 1
  %220 = load i32, i32* %219, align 8, !tbaa !374
  %221 = add i32 %220, 1
  store i32 %221, i32* %219, align 8, !tbaa !374
  %222 = load %struct.my_coef_controller*, %struct.my_coef_controller** %5, align 8, !tbaa !173
  %223 = icmp sgt i32 %218, 1
  br i1 %223, label %239, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %222, i64 0, i32 1
  %226 = load i32, i32* %225, align 8, !tbaa !374
  %227 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %228 = load i32, i32* %227, align 8, !tbaa !169
  %229 = add i32 %228, -1
  %230 = icmp ult i32 %226, %229
  %231 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 0
  %232 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %231, align 8, !tbaa !3
  br i1 %230, label %233, label %236

233:                                              ; preds = %224
  %234 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %232, i64 0, i32 3
  %235 = load i32, i32* %234, align 4, !tbaa !151
  br label %239

236:                                              ; preds = %224
  %237 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %232, i64 0, i32 18
  %238 = load i32, i32* %237, align 8, !tbaa !296
  br label %239

239:                                              ; preds = %217, %233, %236
  %240 = phi i32 [ %235, %233 ], [ %238, %236 ], [ 1, %217 ]
  %241 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %222, i64 0, i32 4
  store i32 %240, i32* %241, align 4, !tbaa !375
  %242 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %222, i64 0, i32 2
  store i32 0, i32* %242, align 4, !tbaa !376
  %243 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %222, i64 0, i32 3
  store i32 0, i32* %243, align 8, !tbaa !377
  br label %244

244:                                              ; preds = %239, %201
  %245 = phi i32 [ 0, %201 ], [ 1, %239 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #27
  ret i32 %245
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #15

; Function Attrs: nounwind uwtable
define dso_local void @jinit_color_converter(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 24) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %9 = bitcast %struct.jpeg_color_converter** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !261
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @null_method to void (...)*), void (...)** %10, align 8, !tbaa !405
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  %12 = load i32, i32* %11, align 4, !tbaa !18
  switch i32 %12, label %25 [
    i32 1, label %13
    i32 2, label %17
    i32 3, label %17
    i32 4, label %21
    i32 5, label %21
  ]

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %15 = load i32, i32* %14, align 8, !tbaa !51
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %35, label %29

17:                                               ; preds = %1, %1
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 8, !tbaa !51
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %35, label %29

21:                                               ; preds = %1, %1
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %23 = load i32, i32* %22, align 8, !tbaa !51
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %35, label %29

25:                                               ; preds = %1
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %27 = load i32, i32* %26, align 8, !tbaa !51
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25, %21, %17, %13
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 5
  store i32 9, i32* %32, align 8, !tbaa !19
  %33 = bitcast %struct.jpeg_error_mgr* %31 to void (%struct.jpeg_common_struct*, ...)**
  %34 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %33, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %34(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %35

35:                                               ; preds = %29, %25, %21, %17, %13
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  %37 = load i32, i32* %36, align 8, !tbaa !199
  switch i32 %37, label %157 [
    i32 1, label %38
    i32 2, label %65
    i32 3, label %87
    i32 4, label %111
    i32 5, label %133
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %40 = load i32, i32* %39, align 4, !tbaa !202
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %44 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %43, align 8, !tbaa !8
  %45 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %44, i64 0, i32 5
  store i32 10, i32* %45, align 8, !tbaa !19
  %46 = bitcast %struct.jpeg_error_mgr* %44 to void (%struct.jpeg_common_struct*, ...)**
  %47 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %46, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %47(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %48

48:                                               ; preds = %42, %38
  %49 = load i32, i32* %11, align 4, !tbaa !18
  switch i32 %49, label %59 [
    i32 1, label %50
    i32 2, label %53
    i32 3, label %56
  ]

50:                                               ; preds = %48
  %51 = getelementptr inbounds i8, i8* %7, i64 8
  %52 = bitcast i8* %51 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @grayscale_convert to void (...)*), void (...)** %52, align 8, !tbaa !407
  br label %175

53:                                               ; preds = %48
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @rgb_ycc_start to void (...)*), void (...)** %10, align 8, !tbaa !405
  %54 = getelementptr inbounds i8, i8* %7, i64 8
  %55 = bitcast i8* %54 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @rgb_gray_convert to void (...)*), void (...)** %55, align 8, !tbaa !407
  br label %175

56:                                               ; preds = %48
  %57 = getelementptr inbounds i8, i8* %7, i64 8
  %58 = bitcast i8* %57 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @grayscale_convert to void (...)*), void (...)** %58, align 8, !tbaa !407
  br label %175

59:                                               ; preds = %48
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8, !tbaa !8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i64 0, i32 5
  store i32 27, i32* %62, align 8, !tbaa !19
  %63 = bitcast %struct.jpeg_error_mgr* %61 to void (%struct.jpeg_common_struct*, ...)**
  %64 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %63, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %64(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %175

65:                                               ; preds = %35
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %67 = load i32, i32* %66, align 4, !tbaa !202
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %70, align 8, !tbaa !8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 5
  store i32 10, i32* %72, align 8, !tbaa !19
  %73 = bitcast %struct.jpeg_error_mgr* %71 to void (%struct.jpeg_common_struct*, ...)**
  %74 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %73, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %74(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %75

75:                                               ; preds = %69, %65
  %76 = load i32, i32* %11, align 4, !tbaa !18
  %77 = icmp eq i32 %76, 2
  br i1 %77, label %78, label %81

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %7, i64 8
  %80 = bitcast i8* %79 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @null_convert to void (...)*), void (...)** %80, align 8, !tbaa !407
  br label %175

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8, !tbaa !8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 5
  store i32 27, i32* %84, align 8, !tbaa !19
  %85 = bitcast %struct.jpeg_error_mgr* %83 to void (%struct.jpeg_common_struct*, ...)**
  %86 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %85, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %86(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %175

87:                                               ; preds = %35
  %88 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %89 = load i32, i32* %88, align 4, !tbaa !202
  %90 = icmp eq i32 %89, 3
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %93 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %92, align 8, !tbaa !8
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %93, i64 0, i32 5
  store i32 10, i32* %94, align 8, !tbaa !19
  %95 = bitcast %struct.jpeg_error_mgr* %93 to void (%struct.jpeg_common_struct*, ...)**
  %96 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %95, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %96(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %97

97:                                               ; preds = %91, %87
  %98 = load i32, i32* %11, align 4, !tbaa !18
  switch i32 %98, label %105 [
    i32 2, label %99
    i32 3, label %102
  ]

99:                                               ; preds = %97
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @rgb_ycc_start to void (...)*), void (...)** %10, align 8, !tbaa !405
  %100 = getelementptr inbounds i8, i8* %7, i64 8
  %101 = bitcast i8* %100 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @rgb_ycc_convert to void (...)*), void (...)** %101, align 8, !tbaa !407
  br label %175

102:                                              ; preds = %97
  %103 = getelementptr inbounds i8, i8* %7, i64 8
  %104 = bitcast i8* %103 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @null_convert to void (...)*), void (...)** %104, align 8, !tbaa !407
  br label %175

105:                                              ; preds = %97
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %107 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %106, align 8, !tbaa !8
  %108 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 5
  store i32 27, i32* %108, align 8, !tbaa !19
  %109 = bitcast %struct.jpeg_error_mgr* %107 to void (%struct.jpeg_common_struct*, ...)**
  %110 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %109, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %110(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %175

111:                                              ; preds = %35
  %112 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %113 = load i32, i32* %112, align 4, !tbaa !202
  %114 = icmp eq i32 %113, 4
  br i1 %114, label %121, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %116, align 8, !tbaa !8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 5
  store i32 10, i32* %118, align 8, !tbaa !19
  %119 = bitcast %struct.jpeg_error_mgr* %117 to void (%struct.jpeg_common_struct*, ...)**
  %120 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %119, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %120(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %121

121:                                              ; preds = %115, %111
  %122 = load i32, i32* %11, align 4, !tbaa !18
  %123 = icmp eq i32 %122, 4
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = getelementptr inbounds i8, i8* %7, i64 8
  %126 = bitcast i8* %125 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @null_convert to void (...)*), void (...)** %126, align 8, !tbaa !407
  br label %175

127:                                              ; preds = %121
  %128 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %129 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %128, align 8, !tbaa !8
  %130 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %129, i64 0, i32 5
  store i32 27, i32* %130, align 8, !tbaa !19
  %131 = bitcast %struct.jpeg_error_mgr* %129 to void (%struct.jpeg_common_struct*, ...)**
  %132 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %131, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %132(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %175

133:                                              ; preds = %35
  %134 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %135 = load i32, i32* %134, align 4, !tbaa !202
  %136 = icmp eq i32 %135, 4
  br i1 %136, label %143, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %139 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %138, align 8, !tbaa !8
  %140 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %139, i64 0, i32 5
  store i32 10, i32* %140, align 8, !tbaa !19
  %141 = bitcast %struct.jpeg_error_mgr* %139 to void (%struct.jpeg_common_struct*, ...)**
  %142 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %141, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %142(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %143

143:                                              ; preds = %137, %133
  %144 = load i32, i32* %11, align 4, !tbaa !18
  switch i32 %144, label %151 [
    i32 4, label %145
    i32 5, label %148
  ]

145:                                              ; preds = %143
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @rgb_ycc_start to void (...)*), void (...)** %10, align 8, !tbaa !405
  %146 = getelementptr inbounds i8, i8* %7, i64 8
  %147 = bitcast i8* %146 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @cmyk_ycck_convert to void (...)*), void (...)** %147, align 8, !tbaa !407
  br label %175

148:                                              ; preds = %143
  %149 = getelementptr inbounds i8, i8* %7, i64 8
  %150 = bitcast i8* %149 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @null_convert to void (...)*), void (...)** %150, align 8, !tbaa !407
  br label %175

151:                                              ; preds = %143
  %152 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %153 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %152, align 8, !tbaa !8
  %154 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %153, i64 0, i32 5
  store i32 27, i32* %154, align 8, !tbaa !19
  %155 = bitcast %struct.jpeg_error_mgr* %153 to void (%struct.jpeg_common_struct*, ...)**
  %156 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %155, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %156(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %175

157:                                              ; preds = %35
  %158 = load i32, i32* %11, align 4, !tbaa !18
  %159 = icmp eq i32 %37, %158
  br i1 %159, label %160, label %166

160:                                              ; preds = %157
  %161 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %162 = load i32, i32* %161, align 4, !tbaa !202
  %163 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %164 = load i32, i32* %163, align 8, !tbaa !51
  %165 = icmp eq i32 %162, %164
  br i1 %165, label %172, label %166

166:                                              ; preds = %160, %157
  %167 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %168 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %167, align 8, !tbaa !8
  %169 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %168, i64 0, i32 5
  store i32 27, i32* %169, align 8, !tbaa !19
  %170 = bitcast %struct.jpeg_error_mgr* %168 to void (%struct.jpeg_common_struct*, ...)**
  %171 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %170, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %171(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %172

172:                                              ; preds = %166, %160
  %173 = getelementptr inbounds i8, i8* %7, i64 8
  %174 = bitcast i8* %173 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* @null_convert to void (...)*), void (...)** %174, align 8, !tbaa !407
  br label %175

175:                                              ; preds = %145, %151, %148, %124, %127, %99, %105, %102, %78, %81, %50, %56, %59, %53, %172
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define internal void @null_method(%struct.jpeg_compress_struct* nocapture noundef %0) #6 {
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal void @grayscale_convert(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8** nocapture noundef readonly %1, i8*** nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #13 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8, !tbaa !50
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %70

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8, !tbaa !51
  %12 = icmp eq i32 %7, 0
  %13 = sext i32 %11 to i64
  %14 = zext i32 %7 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 3
  %17 = icmp ult i64 %15, 3
  %18 = and i64 %14, 4294967292
  %19 = icmp eq i64 %16, 0
  br label %35

20:                                               ; preds = %48, %46
  %21 = phi i64 [ 0, %46 ], [ %67, %48 ]
  %22 = phi i8* [ %47, %46 ], [ %66, %48 ]
  br i1 %19, label %33, label %23

23:                                               ; preds = %20, %23
  %24 = phi i64 [ %30, %23 ], [ %21, %20 ]
  %25 = phi i8* [ %29, %23 ], [ %22, %20 ]
  %26 = phi i64 [ %31, %23 ], [ 0, %20 ]
  %27 = load i8, i8* %25, align 1, !tbaa !7
  %28 = getelementptr inbounds i8, i8* %44, i64 %24
  store i8 %27, i8* %28, align 1, !tbaa !7
  %29 = getelementptr inbounds i8, i8* %25, i64 %13
  %30 = add nuw nsw i64 %24, 1
  %31 = add i64 %26, 1
  %32 = icmp eq i64 %31, %16
  br i1 %32, label %33, label %23, !llvm.loop !408

33:                                               ; preds = %20, %23, %35
  %34 = icmp sgt i32 %36, 1
  br i1 %34, label %35, label %70, !llvm.loop !409

35:                                               ; preds = %9, %33
  %36 = phi i32 [ %4, %9 ], [ %39, %33 ]
  %37 = phi i8** [ %1, %9 ], [ %40, %33 ]
  %38 = phi i32 [ %3, %9 ], [ %45, %33 ]
  %39 = add nsw i32 %36, -1
  %40 = getelementptr inbounds i8*, i8** %37, i64 1
  %41 = load i8**, i8*** %2, align 8, !tbaa !3
  %42 = zext i32 %38 to i64
  %43 = getelementptr inbounds i8*, i8** %41, i64 %42
  %44 = load i8*, i8** %43, align 8, !tbaa !3
  %45 = add i32 %38, 1
  br i1 %12, label %33, label %46

46:                                               ; preds = %35
  %47 = load i8*, i8** %37, align 8, !tbaa !3
  br i1 %17, label %20, label %48

48:                                               ; preds = %46, %48
  %49 = phi i64 [ %67, %48 ], [ 0, %46 ]
  %50 = phi i8* [ %66, %48 ], [ %47, %46 ]
  %51 = phi i64 [ %68, %48 ], [ 0, %46 ]
  %52 = load i8, i8* %50, align 1, !tbaa !7
  %53 = getelementptr inbounds i8, i8* %44, i64 %49
  store i8 %52, i8* %53, align 1, !tbaa !7
  %54 = getelementptr inbounds i8, i8* %50, i64 %13
  %55 = or i64 %49, 1
  %56 = load i8, i8* %54, align 1, !tbaa !7
  %57 = getelementptr inbounds i8, i8* %44, i64 %55
  store i8 %56, i8* %57, align 1, !tbaa !7
  %58 = getelementptr inbounds i8, i8* %54, i64 %13
  %59 = or i64 %49, 2
  %60 = load i8, i8* %58, align 1, !tbaa !7
  %61 = getelementptr inbounds i8, i8* %44, i64 %59
  store i8 %60, i8* %61, align 1, !tbaa !7
  %62 = getelementptr inbounds i8, i8* %58, i64 %13
  %63 = or i64 %49, 3
  %64 = load i8, i8* %62, align 1, !tbaa !7
  %65 = getelementptr inbounds i8, i8* %44, i64 %63
  store i8 %64, i8* %65, align 1, !tbaa !7
  %66 = getelementptr inbounds i8, i8* %62, i64 %13
  %67 = add nuw nsw i64 %49, 4
  %68 = add i64 %51, 4
  %69 = icmp eq i64 %68, %18
  br i1 %69, label %20, label %48, !llvm.loop !410

70:                                               ; preds = %33, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @rgb_ycc_start(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %3 = bitcast %struct.jpeg_color_converter** %2 to %struct.my_color_converter**
  %4 = load %struct.my_color_converter*, %struct.my_color_converter** %3, align 8, !tbaa !261
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %6 = bitcast %struct.jpeg_memory_mgr** %5 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %7 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %6, align 8, !tbaa !36
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %7, align 8, !tbaa !44
  %9 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %10 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %8(%struct.jpeg_common_struct* noundef %9, i32 noundef 1, i64 noundef 16384) #27
  %11 = bitcast i8* %10 to i64*
  %12 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %4, i64 0, i32 1
  %13 = bitcast i64** %12 to i8**
  store i8* %10, i8** %13, align 8, !tbaa !411
  br label %14

14:                                               ; preds = %1, %14
  %15 = phi i64 [ 0, %1 ], [ %41, %14 ]
  %16 = mul nuw nsw i64 %15, 19595
  %17 = getelementptr inbounds i64, i64* %11, i64 %15
  store i64 %16, i64* %17, align 8, !tbaa !35
  %18 = mul nuw nsw i64 %15, 38470
  %19 = add nuw nsw i64 %15, 256
  %20 = getelementptr inbounds i64, i64* %11, i64 %19
  store i64 %18, i64* %20, align 8, !tbaa !35
  %21 = mul nuw nsw i64 %15, 7471
  %22 = add nuw nsw i64 %21, 32768
  %23 = add nuw nsw i64 %15, 512
  %24 = getelementptr inbounds i64, i64* %11, i64 %23
  store i64 %22, i64* %24, align 8, !tbaa !35
  %25 = mul nsw i64 %15, -11059
  %26 = add nuw nsw i64 %15, 768
  %27 = getelementptr inbounds i64, i64* %11, i64 %26
  store i64 %25, i64* %27, align 8, !tbaa !35
  %28 = mul nsw i64 %15, -21709
  %29 = add nuw nsw i64 %15, 1024
  %30 = getelementptr inbounds i64, i64* %11, i64 %29
  store i64 %28, i64* %30, align 8, !tbaa !35
  %31 = shl nuw nsw i64 %15, 15
  %32 = add nuw nsw i64 %31, 8421375
  %33 = add nuw nsw i64 %15, 1280
  %34 = getelementptr inbounds i64, i64* %11, i64 %33
  store i64 %32, i64* %34, align 8, !tbaa !35
  %35 = mul nsw i64 %15, -27439
  %36 = add nuw nsw i64 %15, 1536
  %37 = getelementptr inbounds i64, i64* %11, i64 %36
  store i64 %35, i64* %37, align 8, !tbaa !35
  %38 = mul nsw i64 %15, -5329
  %39 = add nuw nsw i64 %15, 1792
  %40 = getelementptr inbounds i64, i64* %11, i64 %39
  store i64 %38, i64* %40, align 8, !tbaa !35
  %41 = add nuw nsw i64 %15, 1
  %42 = icmp eq i64 %41, 256
  br i1 %42, label %43, label %14, !llvm.loop !412

43:                                               ; preds = %14
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal void @rgb_gray_convert(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8** nocapture noundef readonly %1, i8*** nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #13 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %7 = bitcast %struct.jpeg_color_converter** %6 to %struct.my_color_converter**
  %8 = load %struct.my_color_converter*, %struct.my_color_converter** %7, align 8, !tbaa !261
  %9 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %8, i64 0, i32 1
  %10 = load i64*, i64** %9, align 8, !tbaa !411
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8, !tbaa !50
  %13 = icmp sgt i32 %4, 0
  br i1 %13, label %14, label %59

14:                                               ; preds = %5
  %15 = icmp eq i32 %12, 0
  %16 = zext i32 %12 to i64
  br label %19

17:                                               ; preds = %32, %19
  %18 = icmp sgt i32 %20, 1
  br i1 %18, label %19, label %59, !llvm.loop !413

19:                                               ; preds = %14, %17
  %20 = phi i32 [ %4, %14 ], [ %23, %17 ]
  %21 = phi i8** [ %1, %14 ], [ %24, %17 ]
  %22 = phi i32 [ %3, %14 ], [ %29, %17 ]
  %23 = add nsw i32 %20, -1
  %24 = getelementptr inbounds i8*, i8** %21, i64 1
  %25 = load i8**, i8*** %2, align 8, !tbaa !3
  %26 = zext i32 %22 to i64
  %27 = getelementptr inbounds i8*, i8** %25, i64 %26
  %28 = load i8*, i8** %27, align 8, !tbaa !3
  %29 = add i32 %22, 1
  br i1 %15, label %17, label %30

30:                                               ; preds = %19
  %31 = load i8*, i8** %21, align 8, !tbaa !3
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi i64 [ 0, %30 ], [ %57, %32 ]
  %34 = phi i8* [ %31, %30 ], [ %42, %32 ]
  %35 = load i8, i8* %34, align 1, !tbaa !7
  %36 = getelementptr inbounds i8, i8* %34, i64 1
  %37 = load i8, i8* %36, align 1, !tbaa !7
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds i8, i8* %34, i64 2
  %40 = load i8, i8* %39, align 1, !tbaa !7
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds i8, i8* %34, i64 3
  %43 = zext i8 %35 to i64
  %44 = getelementptr inbounds i64, i64* %10, i64 %43
  %45 = load i64, i64* %44, align 8, !tbaa !35
  %46 = or i64 %38, 256
  %47 = getelementptr inbounds i64, i64* %10, i64 %46
  %48 = load i64, i64* %47, align 8, !tbaa !35
  %49 = add nsw i64 %48, %45
  %50 = or i64 %41, 512
  %51 = getelementptr inbounds i64, i64* %10, i64 %50
  %52 = load i64, i64* %51, align 8, !tbaa !35
  %53 = add nsw i64 %49, %52
  %54 = lshr i64 %53, 16
  %55 = trunc i64 %54 to i8
  %56 = getelementptr inbounds i8, i8* %28, i64 %33
  store i8 %55, i8* %56, align 1, !tbaa !7
  %57 = add nuw nsw i64 %33, 1
  %58 = icmp eq i64 %57, %16
  br i1 %58, label %17, label %32, !llvm.loop !414

59:                                               ; preds = %17, %5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal void @null_convert(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8** nocapture noundef readonly %1, i8*** nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #13 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 4, !tbaa !202
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8, !tbaa !50
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %84

11:                                               ; preds = %5
  %12 = icmp sgt i32 %7, 0
  %13 = icmp eq i32 %9, 0
  %14 = sext i32 %7 to i64
  %15 = zext i32 %7 to i64
  %16 = zext i32 %9 to i64
  %17 = add nsw i64 %16, -1
  %18 = and i64 %16, 3
  %19 = icmp ult i64 %17, 3
  %20 = and i64 %16, 4294967292
  %21 = icmp eq i64 %18, 0
  br label %22

22:                                               ; preds = %11, %80
  %23 = phi i32 [ %4, %11 ], [ %26, %80 ]
  %24 = phi i8** [ %1, %11 ], [ %81, %80 ]
  %25 = phi i32 [ %3, %11 ], [ %82, %80 ]
  %26 = add nsw i32 %23, -1
  br i1 %12, label %27, label %80

27:                                               ; preds = %22
  %28 = zext i32 %25 to i64
  br label %29

29:                                               ; preds = %27, %77
  %30 = phi i64 [ 0, %27 ], [ %78, %77 ]
  %31 = getelementptr inbounds i8**, i8*** %2, i64 %30
  %32 = load i8**, i8*** %31, align 8, !tbaa !3
  %33 = getelementptr inbounds i8*, i8** %32, i64 %28
  %34 = load i8*, i8** %33, align 8, !tbaa !3
  br i1 %13, label %77, label %35

35:                                               ; preds = %29
  %36 = load i8*, i8** %24, align 8, !tbaa !3
  br i1 %19, label %63, label %37

37:                                               ; preds = %35, %37
  %38 = phi i64 [ %60, %37 ], [ 0, %35 ]
  %39 = phi i8* [ %59, %37 ], [ %36, %35 ]
  %40 = phi i64 [ %61, %37 ], [ 0, %35 ]
  %41 = getelementptr inbounds i8, i8* %39, i64 %30
  %42 = load i8, i8* %41, align 1, !tbaa !7
  %43 = getelementptr inbounds i8, i8* %34, i64 %38
  store i8 %42, i8* %43, align 1, !tbaa !7
  %44 = getelementptr inbounds i8, i8* %39, i64 %14
  %45 = or i64 %38, 1
  %46 = getelementptr inbounds i8, i8* %44, i64 %30
  %47 = load i8, i8* %46, align 1, !tbaa !7
  %48 = getelementptr inbounds i8, i8* %34, i64 %45
  store i8 %47, i8* %48, align 1, !tbaa !7
  %49 = getelementptr inbounds i8, i8* %44, i64 %14
  %50 = or i64 %38, 2
  %51 = getelementptr inbounds i8, i8* %49, i64 %30
  %52 = load i8, i8* %51, align 1, !tbaa !7
  %53 = getelementptr inbounds i8, i8* %34, i64 %50
  store i8 %52, i8* %53, align 1, !tbaa !7
  %54 = getelementptr inbounds i8, i8* %49, i64 %14
  %55 = or i64 %38, 3
  %56 = getelementptr inbounds i8, i8* %54, i64 %30
  %57 = load i8, i8* %56, align 1, !tbaa !7
  %58 = getelementptr inbounds i8, i8* %34, i64 %55
  store i8 %57, i8* %58, align 1, !tbaa !7
  %59 = getelementptr inbounds i8, i8* %54, i64 %14
  %60 = add nuw nsw i64 %38, 4
  %61 = add i64 %40, 4
  %62 = icmp eq i64 %61, %20
  br i1 %62, label %63, label %37, !llvm.loop !415

63:                                               ; preds = %37, %35
  %64 = phi i64 [ 0, %35 ], [ %60, %37 ]
  %65 = phi i8* [ %36, %35 ], [ %59, %37 ]
  br i1 %21, label %77, label %66

66:                                               ; preds = %63, %66
  %67 = phi i64 [ %74, %66 ], [ %64, %63 ]
  %68 = phi i8* [ %73, %66 ], [ %65, %63 ]
  %69 = phi i64 [ %75, %66 ], [ 0, %63 ]
  %70 = getelementptr inbounds i8, i8* %68, i64 %30
  %71 = load i8, i8* %70, align 1, !tbaa !7
  %72 = getelementptr inbounds i8, i8* %34, i64 %67
  store i8 %71, i8* %72, align 1, !tbaa !7
  %73 = getelementptr inbounds i8, i8* %68, i64 %14
  %74 = add nuw nsw i64 %67, 1
  %75 = add i64 %69, 1
  %76 = icmp eq i64 %75, %18
  br i1 %76, label %77, label %66, !llvm.loop !416

77:                                               ; preds = %63, %66, %29
  %78 = add nuw nsw i64 %30, 1
  %79 = icmp eq i64 %78, %15
  br i1 %79, label %80, label %29, !llvm.loop !417

80:                                               ; preds = %77, %22
  %81 = getelementptr inbounds i8*, i8** %24, i64 1
  %82 = add i32 %25, 1
  %83 = icmp sgt i32 %23, 1
  br i1 %83, label %22, label %84, !llvm.loop !418

84:                                               ; preds = %80, %5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal void @rgb_ycc_convert(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8** nocapture noundef readonly %1, i8*** nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #13 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %7 = bitcast %struct.jpeg_color_converter** %6 to %struct.my_color_converter**
  %8 = load %struct.my_color_converter*, %struct.my_color_converter** %7, align 8, !tbaa !261
  %9 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %8, i64 0, i32 1
  %10 = load i64*, i64** %9, align 8, !tbaa !411
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8, !tbaa !50
  %13 = icmp sgt i32 %4, 0
  br i1 %13, label %14, label %104

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8**, i8*** %2, i64 1
  %16 = getelementptr inbounds i8**, i8*** %2, i64 2
  %17 = icmp eq i32 %12, 0
  %18 = zext i32 %12 to i64
  br label %21

19:                                               ; preds = %40, %21
  %20 = icmp sgt i32 %22, 1
  br i1 %20, label %21, label %104, !llvm.loop !419

21:                                               ; preds = %14, %19
  %22 = phi i32 [ %4, %14 ], [ %25, %19 ]
  %23 = phi i8** [ %1, %14 ], [ %26, %19 ]
  %24 = phi i32 [ %3, %14 ], [ %37, %19 ]
  %25 = add nsw i32 %22, -1
  %26 = getelementptr inbounds i8*, i8** %23, i64 1
  %27 = load i8**, i8*** %2, align 8, !tbaa !3
  %28 = zext i32 %24 to i64
  %29 = getelementptr inbounds i8*, i8** %27, i64 %28
  %30 = load i8*, i8** %29, align 8, !tbaa !3
  %31 = load i8**, i8*** %15, align 8, !tbaa !3
  %32 = getelementptr inbounds i8*, i8** %31, i64 %28
  %33 = load i8*, i8** %32, align 8, !tbaa !3
  %34 = load i8**, i8*** %16, align 8, !tbaa !3
  %35 = getelementptr inbounds i8*, i8** %34, i64 %28
  %36 = load i8*, i8** %35, align 8, !tbaa !3
  %37 = add i32 %24, 1
  br i1 %17, label %19, label %38

38:                                               ; preds = %21
  %39 = load i8*, i8** %23, align 8, !tbaa !3
  br label %40

40:                                               ; preds = %38, %40
  %41 = phi i64 [ 0, %38 ], [ %102, %40 ]
  %42 = phi i8* [ %39, %38 ], [ %51, %40 ]
  %43 = load i8, i8* %42, align 1, !tbaa !7
  %44 = zext i8 %43 to i32
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = load i8, i8* %45, align 1, !tbaa !7
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds i8, i8* %42, i64 2
  %49 = load i8, i8* %48, align 1, !tbaa !7
  %50 = zext i8 %49 to i32
  %51 = getelementptr inbounds i8, i8* %42, i64 3
  %52 = zext i8 %43 to i64
  %53 = getelementptr inbounds i64, i64* %10, i64 %52
  %54 = load i64, i64* %53, align 8, !tbaa !35
  %55 = or i32 %47, 256
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %10, i64 %56
  %58 = load i64, i64* %57, align 8, !tbaa !35
  %59 = add nsw i64 %58, %54
  %60 = or i32 %50, 512
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i64, i64* %10, i64 %61
  %63 = load i64, i64* %62, align 8, !tbaa !35
  %64 = add nsw i64 %59, %63
  %65 = lshr i64 %64, 16
  %66 = trunc i64 %65 to i8
  %67 = getelementptr inbounds i8, i8* %30, i64 %41
  store i8 %66, i8* %67, align 1, !tbaa !7
  %68 = or i32 %44, 768
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i64, i64* %10, i64 %69
  %71 = load i64, i64* %70, align 8, !tbaa !35
  %72 = or i32 %47, 1024
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i64, i64* %10, i64 %73
  %75 = load i64, i64* %74, align 8, !tbaa !35
  %76 = add nsw i64 %75, %71
  %77 = or i32 %50, 1280
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i64, i64* %10, i64 %78
  %80 = load i64, i64* %79, align 8, !tbaa !35
  %81 = add nsw i64 %76, %80
  %82 = lshr i64 %81, 16
  %83 = trunc i64 %82 to i8
  %84 = getelementptr inbounds i8, i8* %33, i64 %41
  store i8 %83, i8* %84, align 1, !tbaa !7
  %85 = or i32 %44, 1280
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i64, i64* %10, i64 %86
  %88 = load i64, i64* %87, align 8, !tbaa !35
  %89 = or i32 %47, 1536
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i64, i64* %10, i64 %90
  %92 = load i64, i64* %91, align 8, !tbaa !35
  %93 = add nsw i64 %92, %88
  %94 = or i32 %50, 1792
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i64, i64* %10, i64 %95
  %97 = load i64, i64* %96, align 8, !tbaa !35
  %98 = add nsw i64 %93, %97
  %99 = lshr i64 %98, 16
  %100 = trunc i64 %99 to i8
  %101 = getelementptr inbounds i8, i8* %36, i64 %41
  store i8 %100, i8* %101, align 1, !tbaa !7
  %102 = add nuw nsw i64 %41, 1
  %103 = icmp eq i64 %102, %18
  br i1 %103, label %19, label %40, !llvm.loop !420

104:                                              ; preds = %19, %5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define internal void @cmyk_ycck_convert(%struct.jpeg_compress_struct* nocapture noundef readonly %0, i8** nocapture noundef readonly %1, i8*** nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #13 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %7 = bitcast %struct.jpeg_color_converter** %6 to %struct.my_color_converter**
  %8 = load %struct.my_color_converter*, %struct.my_color_converter** %7, align 8, !tbaa !261
  %9 = getelementptr inbounds %struct.my_color_converter, %struct.my_color_converter* %8, i64 0, i32 1
  %10 = load i64*, i64** %9, align 8, !tbaa !411
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8, !tbaa !50
  %13 = icmp sgt i32 %4, 0
  br i1 %13, label %14, label %114

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8**, i8*** %2, i64 1
  %16 = getelementptr inbounds i8**, i8*** %2, i64 2
  %17 = getelementptr inbounds i8**, i8*** %2, i64 3
  %18 = icmp eq i32 %12, 0
  %19 = zext i32 %12 to i64
  br label %22

20:                                               ; preds = %44, %22
  %21 = icmp sgt i32 %23, 1
  br i1 %21, label %22, label %114, !llvm.loop !421

22:                                               ; preds = %14, %20
  %23 = phi i32 [ %4, %14 ], [ %26, %20 ]
  %24 = phi i8** [ %1, %14 ], [ %27, %20 ]
  %25 = phi i32 [ %3, %14 ], [ %41, %20 ]
  %26 = add nsw i32 %23, -1
  %27 = getelementptr inbounds i8*, i8** %24, i64 1
  %28 = load i8**, i8*** %2, align 8, !tbaa !3
  %29 = zext i32 %25 to i64
  %30 = getelementptr inbounds i8*, i8** %28, i64 %29
  %31 = load i8*, i8** %30, align 8, !tbaa !3
  %32 = load i8**, i8*** %15, align 8, !tbaa !3
  %33 = getelementptr inbounds i8*, i8** %32, i64 %29
  %34 = load i8*, i8** %33, align 8, !tbaa !3
  %35 = load i8**, i8*** %16, align 8, !tbaa !3
  %36 = getelementptr inbounds i8*, i8** %35, i64 %29
  %37 = load i8*, i8** %36, align 8, !tbaa !3
  %38 = load i8**, i8*** %17, align 8, !tbaa !3
  %39 = getelementptr inbounds i8*, i8** %38, i64 %29
  %40 = load i8*, i8** %39, align 8, !tbaa !3
  %41 = add i32 %25, 1
  br i1 %18, label %20, label %42

42:                                               ; preds = %22
  %43 = load i8*, i8** %24, align 8, !tbaa !3
  br label %44

44:                                               ; preds = %42, %44
  %45 = phi i64 [ 0, %42 ], [ %112, %44 ]
  %46 = phi i8* [ %43, %42 ], [ %61, %44 ]
  %47 = load i8, i8* %46, align 1, !tbaa !7
  %48 = xor i8 %47, -1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = load i8, i8* %50, align 1, !tbaa !7
  %52 = xor i8 %51, -1
  %53 = zext i8 %52 to i32
  %54 = getelementptr inbounds i8, i8* %46, i64 2
  %55 = load i8, i8* %54, align 1, !tbaa !7
  %56 = xor i8 %55, -1
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds i8, i8* %46, i64 3
  %59 = load i8, i8* %58, align 1, !tbaa !7
  %60 = getelementptr inbounds i8, i8* %40, i64 %45
  store i8 %59, i8* %60, align 1, !tbaa !7
  %61 = getelementptr inbounds i8, i8* %46, i64 4
  %62 = zext i8 %48 to i64
  %63 = getelementptr inbounds i64, i64* %10, i64 %62
  %64 = load i64, i64* %63, align 8, !tbaa !35
  %65 = or i32 %53, 256
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i64, i64* %10, i64 %66
  %68 = load i64, i64* %67, align 8, !tbaa !35
  %69 = add nsw i64 %68, %64
  %70 = or i32 %57, 512
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i64, i64* %10, i64 %71
  %73 = load i64, i64* %72, align 8, !tbaa !35
  %74 = add nsw i64 %69, %73
  %75 = lshr i64 %74, 16
  %76 = trunc i64 %75 to i8
  %77 = getelementptr inbounds i8, i8* %31, i64 %45
  store i8 %76, i8* %77, align 1, !tbaa !7
  %78 = or i32 %49, 768
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i64, i64* %10, i64 %79
  %81 = load i64, i64* %80, align 8, !tbaa !35
  %82 = or i32 %53, 1024
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i64, i64* %10, i64 %83
  %85 = load i64, i64* %84, align 8, !tbaa !35
  %86 = add nsw i64 %85, %81
  %87 = or i32 %57, 1280
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i64, i64* %10, i64 %88
  %90 = load i64, i64* %89, align 8, !tbaa !35
  %91 = add nsw i64 %86, %90
  %92 = lshr i64 %91, 16
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds i8, i8* %34, i64 %45
  store i8 %93, i8* %94, align 1, !tbaa !7
  %95 = or i32 %49, 1280
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, i64* %10, i64 %96
  %98 = load i64, i64* %97, align 8, !tbaa !35
  %99 = or i32 %53, 1536
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i64, i64* %10, i64 %100
  %102 = load i64, i64* %101, align 8, !tbaa !35
  %103 = add nsw i64 %102, %98
  %104 = or i32 %57, 1792
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i64, i64* %10, i64 %105
  %107 = load i64, i64* %106, align 8, !tbaa !35
  %108 = add nsw i64 %103, %107
  %109 = lshr i64 %108, 16
  %110 = trunc i64 %109 to i8
  %111 = getelementptr inbounds i8, i8* %37, i64 %45
  store i8 %110, i8* %111, align 1, !tbaa !7
  %112 = add nuw nsw i64 %45, 1
  %113 = icmp eq i64 %112, %19
  br i1 %113, label %20, label %44, !llvm.loop !422

114:                                              ; preds = %20, %5
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_downsampler(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 104) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  %9 = bitcast %struct.jpeg_downsampler** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !264
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @start_pass_downsample to void (...)*), void (...)** %10, align 8, !tbaa !423
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)* @sep_downsample to void (...)*), void (...)** %12, align 8, !tbaa !425
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8, !tbaa !426
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 27
  %16 = load i32, i32* %15, align 4, !tbaa !427
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8, !tbaa !8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 25, i32* %21, align 8, !tbaa !19
  %22 = bitcast %struct.jpeg_error_mgr* %20 to void (%struct.jpeg_common_struct*, ...)**
  %23 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %22, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %23(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %24

24:                                               ; preds = %18, %1
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %26 = load i32, i32* %25, align 4, !tbaa !202
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %113

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %30 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %29, align 8, !tbaa !145
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %34 = getelementptr inbounds i8, i8* %7, i64 24
  %35 = bitcast i8* %34 to [10 x void (...)*]*
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 28
  br label %37

37:                                               ; preds = %28, %93
  %38 = phi i32 [ %26, %28 ], [ %94, %93 ]
  %39 = phi i64 [ 0, %28 ], [ %96, %93 ]
  %40 = phi i32 [ 1, %28 ], [ %95, %93 ]
  %41 = phi %struct.jpeg_component_info* [ %30, %28 ], [ %97, %93 ]
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i64 0, i32 2
  %43 = load i32, i32* %42, align 8, !tbaa !150
  %44 = load i32, i32* %31, align 8, !tbaa !239
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %57

46:                                               ; preds = %37
  %47 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i64 0, i32 3
  %48 = load i32, i32* %47, align 4, !tbaa !151
  %49 = load i32, i32* %32, align 4, !tbaa !195
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = load i32, i32* %36, align 8, !tbaa !42
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds [10 x void (...)*], [10 x void (...)*]* %35, i64 0, i64 %39
  br i1 %53, label %56, label %55

55:                                               ; preds = %51
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)* @fullsize_smooth_downsample to void (...)*), void (...)** %54, align 8, !tbaa !3
  store i32 1, i32* %14, align 8, !tbaa !426
  br label %93

56:                                               ; preds = %51
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)* @fullsize_downsample to void (...)*), void (...)** %54, align 8, !tbaa !3
  br label %93

57:                                               ; preds = %46, %37
  %58 = shl nsw i32 %43, 1
  %59 = icmp eq i32 %58, %44
  br i1 %59, label %60, label %76

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i64 0, i32 3
  %62 = load i32, i32* %61, align 4, !tbaa !151
  %63 = load i32, i32* %32, align 4, !tbaa !195
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = getelementptr inbounds [10 x void (...)*], [10 x void (...)*]* %35, i64 0, i64 %39
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)* @h2v1_downsample to void (...)*), void (...)** %66, align 8, !tbaa !3
  br label %93

67:                                               ; preds = %60
  %68 = shl nsw i32 %62, 1
  %69 = icmp eq i32 %68, %63
  br i1 %69, label %70, label %76

70:                                               ; preds = %67
  %71 = load i32, i32* %36, align 8, !tbaa !42
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds [10 x void (...)*], [10 x void (...)*]* %35, i64 0, i64 %39
  br i1 %72, label %75, label %74

74:                                               ; preds = %70
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)* @h2v2_smooth_downsample to void (...)*), void (...)** %73, align 8, !tbaa !3
  store i32 1, i32* %14, align 8, !tbaa !426
  br label %93

75:                                               ; preds = %70
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)* @h2v2_downsample to void (...)*), void (...)** %73, align 8, !tbaa !3
  br label %93

76:                                               ; preds = %57, %67
  %77 = srem i32 %44, %43
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %87

79:                                               ; preds = %76
  %80 = load i32, i32* %32, align 4, !tbaa !195
  %81 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i64 0, i32 3
  %82 = load i32, i32* %81, align 4, !tbaa !151
  %83 = srem i32 %80, %82
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  %86 = getelementptr inbounds [10 x void (...)*], [10 x void (...)*]* %35, i64 0, i64 %39
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**)* @int_downsample to void (...)*), void (...)** %86, align 8, !tbaa !3
  br label %93

87:                                               ; preds = %79, %76
  %88 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %33, align 8, !tbaa !8
  %89 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %88, i64 0, i32 5
  store i32 38, i32* %89, align 8, !tbaa !19
  %90 = bitcast %struct.jpeg_error_mgr* %88 to void (%struct.jpeg_common_struct*, ...)**
  %91 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %90, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %91(%struct.jpeg_common_struct* noundef nonnull %6) #27
  %92 = load i32, i32* %25, align 4, !tbaa !202
  br label %93

93:                                               ; preds = %56, %55, %75, %74, %87, %85, %65
  %94 = phi i32 [ %38, %55 ], [ %38, %56 ], [ %38, %65 ], [ %38, %74 ], [ %38, %75 ], [ %38, %85 ], [ %92, %87 ]
  %95 = phi i32 [ %40, %55 ], [ %40, %56 ], [ 0, %65 ], [ %40, %74 ], [ %40, %75 ], [ 0, %85 ], [ %40, %87 ]
  %96 = add nuw nsw i64 %39, 1
  %97 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i64 1
  %98 = sext i32 %94 to i64
  %99 = icmp slt i64 %96, %98
  br i1 %99, label %37, label %100, !llvm.loop !428

100:                                              ; preds = %93
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 28
  %102 = load i32, i32* %101, align 8, !tbaa !42
  %103 = icmp eq i32 %102, 0
  %104 = icmp ne i32 %95, 0
  %105 = select i1 %103, i1 true, i1 %104
  br i1 %105, label %113, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8, !tbaa !8
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 5
  store i32 99, i32* %109, align 8, !tbaa !19
  %110 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 1
  %111 = bitcast void (...)** %110 to void (%struct.jpeg_common_struct*, i32, ...)**
  %112 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %111, align 8, !tbaa !52
  tail call void (%struct.jpeg_common_struct*, i32, ...) %112(%struct.jpeg_common_struct* noundef nonnull %6, i32 noundef 0) #27
  br label %113

113:                                              ; preds = %24, %106, %100
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define internal void @start_pass_downsample(%struct.jpeg_compress_struct* nocapture noundef %0) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @sep_downsample(%struct.jpeg_compress_struct* noundef %0, i8*** nocapture noundef readonly %1, i32 noundef %2, i8*** nocapture noundef readonly %3, i32 noundef %4) #2 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  %7 = bitcast %struct.jpeg_downsampler** %6 to %struct.my_downsampler**
  %8 = load %struct.my_downsampler*, %struct.my_downsampler** %7, align 8, !tbaa !264
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %10 = load i32, i32* %9, align 4, !tbaa !202
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %37

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %14 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %13, align 8, !tbaa !145
  %15 = zext i32 %2 to i64
  br label %16

16:                                               ; preds = %12, %16
  %17 = phi i64 [ 0, %12 ], [ %32, %16 ]
  %18 = phi %struct.jpeg_component_info* [ %14, %12 ], [ %33, %16 ]
  %19 = getelementptr inbounds i8**, i8*** %1, i64 %17
  %20 = load i8**, i8*** %19, align 8, !tbaa !3
  %21 = getelementptr inbounds i8*, i8** %20, i64 %15
  %22 = getelementptr inbounds i8**, i8*** %3, i64 %17
  %23 = load i8**, i8*** %22, align 8, !tbaa !3
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 0, i32 3
  %25 = load i32, i32* %24, align 4, !tbaa !151
  %26 = mul i32 %25, %4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %23, i64 %27
  %29 = getelementptr inbounds %struct.my_downsampler, %struct.my_downsampler* %8, i64 0, i32 1, i64 %17
  %30 = bitcast void (...)** %29 to void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**, ...)**
  %31 = load void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**, ...)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**, ...)** %30, align 8, !tbaa !3
  tail call void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, i8**, ...) %31(%struct.jpeg_compress_struct* noundef nonnull %0, %struct.jpeg_component_info* noundef %18, i8** noundef %21, i8** noundef %28) #27
  %32 = add nuw nsw i64 %17, 1
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %18, i64 1
  %34 = load i32, i32* %9, align 4, !tbaa !202
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %32, %35
  br i1 %36, label %16, label %37, !llvm.loop !429

37:                                               ; preds = %16, %5
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal void @fullsize_smooth_downsample(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, i8** nocapture noundef readonly %3) #16 {
  %5 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 7
  %6 = load i32, i32* %5, align 4, !tbaa !243
  %7 = shl i32 %6, 3
  %8 = getelementptr inbounds i8*, i8** %2, i64 -1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %10 = load i32, i32* %9, align 4, !tbaa !195
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8, !tbaa !50
  %13 = sub i32 %7, %12
  %14 = icmp sgt i32 %13, 0
  %15 = icmp sgt i32 %10, -2
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %72

17:                                               ; preds = %4
  %18 = add nsw i32 %10, 2
  %19 = zext i32 %12 to i64
  %20 = xor i32 %12, -1
  %21 = add i32 %7, %20
  %22 = zext i32 %21 to i64
  %23 = add nuw nsw i64 %22, 1
  %24 = zext i32 %18 to i64
  %25 = add nsw i64 %24, -1
  %26 = and i64 %24, 3
  %27 = icmp ult i64 %25, 3
  br i1 %27, label %58, label %28

28:                                               ; preds = %17
  %29 = and i64 %24, 4294967292
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %55, %30 ]
  %32 = phi i64 [ 0, %28 ], [ %56, %30 ]
  %33 = getelementptr inbounds i8*, i8** %8, i64 %31
  %34 = load i8*, i8** %33, align 8, !tbaa !3
  %35 = getelementptr inbounds i8, i8* %34, i64 %19
  %36 = getelementptr inbounds i8, i8* %35, i64 -1
  %37 = load i8, i8* %36, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %35, i8 %37, i64 %23, i1 false) #27, !tbaa !7
  %38 = getelementptr inbounds i8*, i8** %2, i64 %31
  %39 = load i8*, i8** %38, align 8, !tbaa !3
  %40 = getelementptr inbounds i8, i8* %39, i64 %19
  %41 = getelementptr inbounds i8, i8* %40, i64 -1
  %42 = load i8, i8* %41, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %40, i8 %42, i64 %23, i1 false) #27, !tbaa !7
  %43 = or i64 %31, 2
  %44 = getelementptr inbounds i8*, i8** %8, i64 %43
  %45 = load i8*, i8** %44, align 8, !tbaa !3
  %46 = getelementptr inbounds i8, i8* %45, i64 %19
  %47 = getelementptr inbounds i8, i8* %46, i64 -1
  %48 = load i8, i8* %47, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %46, i8 %48, i64 %23, i1 false) #27, !tbaa !7
  %49 = or i64 %31, 3
  %50 = getelementptr inbounds i8*, i8** %8, i64 %49
  %51 = load i8*, i8** %50, align 8, !tbaa !3
  %52 = getelementptr inbounds i8, i8* %51, i64 %19
  %53 = getelementptr inbounds i8, i8* %52, i64 -1
  %54 = load i8, i8* %53, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %52, i8 %54, i64 %23, i1 false) #27, !tbaa !7
  %55 = add nuw nsw i64 %31, 4
  %56 = add i64 %32, 4
  %57 = icmp eq i64 %56, %29
  br i1 %57, label %58, label %30, !llvm.loop !430

58:                                               ; preds = %30, %17
  %59 = phi i64 [ 0, %17 ], [ %55, %30 ]
  %60 = icmp eq i64 %26, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %69, %61 ], [ %59, %58 ]
  %63 = phi i64 [ %70, %61 ], [ 0, %58 ]
  %64 = getelementptr inbounds i8*, i8** %8, i64 %62
  %65 = load i8*, i8** %64, align 8, !tbaa !3
  %66 = getelementptr inbounds i8, i8* %65, i64 %19
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  %68 = load i8, i8* %67, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %66, i8 %68, i64 %23, i1 false) #27, !tbaa !7
  %69 = add nuw nsw i64 %62, 1
  %70 = add i64 %63, 1
  %71 = icmp eq i64 %70, %26
  br i1 %71, label %72, label %61, !llvm.loop !431

72:                                               ; preds = %58, %61, %4
  %73 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 28
  %74 = load i32, i32* %73, align 8, !tbaa !42
  %75 = zext i32 %74 to i64
  %76 = mul nsw i64 %75, -512
  %77 = add nsw i64 %76, 65536
  %78 = shl nsw i32 %74, 6
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 3
  %81 = load i32, i32* %80, align 4, !tbaa !151
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %182

83:                                               ; preds = %72
  %84 = add i32 %7, -2
  br label %85

85:                                               ; preds = %83, %165
  %86 = phi i64 [ 0, %83 ], [ %94, %165 ]
  %87 = getelementptr inbounds i8*, i8** %3, i64 %86
  %88 = load i8*, i8** %87, align 8, !tbaa !3
  %89 = getelementptr inbounds i8*, i8** %2, i64 %86
  %90 = load i8*, i8** %89, align 8, !tbaa !3
  %91 = add nsw i64 %86, -1
  %92 = getelementptr inbounds i8*, i8** %2, i64 %91
  %93 = load i8*, i8** %92, align 8, !tbaa !3
  %94 = add nuw nsw i64 %86, 1
  %95 = getelementptr inbounds i8*, i8** %2, i64 %94
  %96 = load i8*, i8** %95, align 8, !tbaa !3
  %97 = getelementptr inbounds i8, i8* %93, i64 1
  %98 = load i8, i8* %93, align 1, !tbaa !7
  %99 = zext i8 %98 to i32
  %100 = getelementptr inbounds i8, i8* %96, i64 1
  %101 = load i8, i8* %96, align 1, !tbaa !7
  %102 = zext i8 %101 to i32
  %103 = add nuw nsw i32 %102, %99
  %104 = load i8, i8* %90, align 1, !tbaa !7
  %105 = zext i8 %104 to i32
  %106 = add nuw nsw i32 %103, %105
  %107 = getelementptr inbounds i8, i8* %90, i64 1
  %108 = zext i8 %104 to i64
  %109 = load i8, i8* %97, align 1, !tbaa !7
  %110 = zext i8 %109 to i32
  %111 = load i8, i8* %100, align 1, !tbaa !7
  %112 = zext i8 %111 to i32
  %113 = add nuw nsw i32 %112, %110
  %114 = load i8, i8* %107, align 1, !tbaa !7
  %115 = zext i8 %114 to i32
  %116 = add nuw nsw i32 %113, %115
  %117 = zext i32 %116 to i64
  %118 = shl nuw nsw i32 %106, 1
  %119 = zext i32 %118 to i64
  %120 = sub nsw i64 %119, %108
  %121 = add nsw i64 %120, %117
  %122 = mul nsw i64 %77, %108
  %123 = mul i64 %121, %79
  %124 = add nsw i64 %122, 32768
  %125 = add i64 %124, %123
  %126 = lshr i64 %125, 16
  %127 = trunc i64 %126 to i8
  store i8 %127, i8* %88, align 1, !tbaa !7
  %128 = getelementptr inbounds i8, i8* %88, i64 1
  br label %129

129:                                              ; preds = %85, %129
  %130 = phi i8* [ %128, %85 ], [ %163, %129 ]
  %131 = phi i32 [ %106, %85 ], [ %132, %129 ]
  %132 = phi i32 [ %116, %85 ], [ %149, %129 ]
  %133 = phi i32 [ %84, %85 ], [ %162, %129 ]
  %134 = phi i8* [ %100, %85 ], [ %141, %129 ]
  %135 = phi i8* [ %97, %85 ], [ %140, %129 ]
  %136 = phi i8* [ %107, %85 ], [ %137, %129 ]
  %137 = getelementptr inbounds i8, i8* %136, i64 1
  %138 = load i8, i8* %136, align 1, !tbaa !7
  %139 = zext i8 %138 to i64
  %140 = getelementptr inbounds i8, i8* %135, i64 1
  %141 = getelementptr inbounds i8, i8* %134, i64 1
  %142 = load i8, i8* %140, align 1, !tbaa !7
  %143 = zext i8 %142 to i32
  %144 = load i8, i8* %141, align 1, !tbaa !7
  %145 = zext i8 %144 to i32
  %146 = add nuw nsw i32 %145, %143
  %147 = load i8, i8* %137, align 1, !tbaa !7
  %148 = zext i8 %147 to i32
  %149 = add nuw nsw i32 %146, %148
  %150 = zext i32 %131 to i64
  %151 = zext i32 %132 to i64
  %152 = zext i32 %149 to i64
  %153 = add nuw nsw i64 %150, %151
  %154 = sub nsw i64 %153, %139
  %155 = add nsw i64 %154, %152
  %156 = mul nsw i64 %77, %139
  %157 = mul i64 %155, %79
  %158 = add nsw i64 %156, 32768
  %159 = add i64 %158, %157
  %160 = lshr i64 %159, 16
  %161 = trunc i64 %160 to i8
  store i8 %161, i8* %130, align 1, !tbaa !7
  %162 = add i32 %133, -1
  %163 = getelementptr inbounds i8, i8* %130, i64 1
  %164 = icmp eq i32 %162, 0
  br i1 %164, label %165, label %129, !llvm.loop !432

165:                                              ; preds = %129
  %166 = zext i32 %132 to i64
  %167 = load i8, i8* %137, align 1, !tbaa !7
  %168 = zext i8 %167 to i64
  %169 = shl nuw nsw i32 %149, 1
  %170 = zext i32 %169 to i64
  %171 = add nuw nsw i64 %170, %166
  %172 = sub nsw i64 %171, %168
  %173 = mul nsw i64 %77, %168
  %174 = mul i64 %172, %79
  %175 = add nsw i64 %173, 32768
  %176 = add i64 %175, %174
  %177 = lshr i64 %176, 16
  %178 = trunc i64 %177 to i8
  store i8 %178, i8* %163, align 1, !tbaa !7
  %179 = load i32, i32* %80, align 4, !tbaa !151
  %180 = sext i32 %179 to i64
  %181 = icmp slt i64 %94, %180
  br i1 %181, label %85, label %182, !llvm.loop !433

182:                                              ; preds = %165, %72
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @fullsize_downsample(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** noundef %2, i8** noundef %3) #2 {
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %6 = load i32, i32* %5, align 4, !tbaa !195
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8, !tbaa !50
  tail call void (i8**, i32, i8**, i32, i32, i32, ...) bitcast (void (i8**, i32, i8**, i32, i32, i32)* @jcopy_sample_rows to void (i8**, i32, i8**, i32, i32, i32, ...)*)(i8** noundef %2, i32 noundef 0, i8** noundef %3, i32 noundef 0, i32 noundef %6, i32 noundef %8) #27
  %9 = load i32, i32* %5, align 4, !tbaa !195
  %10 = load i32, i32* %7, align 8, !tbaa !50
  %11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 4, !tbaa !243
  %13 = shl i32 %12, 3
  %14 = sub i32 %13, %10
  %15 = icmp sgt i32 %14, 0
  %16 = icmp sgt i32 %9, 0
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %73

18:                                               ; preds = %4
  %19 = zext i32 %10 to i64
  %20 = xor i32 %10, -1
  %21 = add i32 %13, %20
  %22 = zext i32 %21 to i64
  %23 = add nuw nsw i64 %22, 1
  %24 = zext i32 %9 to i64
  %25 = add nsw i64 %24, -1
  %26 = and i64 %24, 3
  %27 = icmp ult i64 %25, 3
  br i1 %27, label %59, label %28

28:                                               ; preds = %18
  %29 = and i64 %24, 4294967292
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %56, %30 ]
  %32 = phi i64 [ 0, %28 ], [ %57, %30 ]
  %33 = getelementptr inbounds i8*, i8** %3, i64 %31
  %34 = load i8*, i8** %33, align 8, !tbaa !3
  %35 = getelementptr inbounds i8, i8* %34, i64 %19
  %36 = getelementptr inbounds i8, i8* %35, i64 -1
  %37 = load i8, i8* %36, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %35, i8 %37, i64 %23, i1 false) #27, !tbaa !7
  %38 = or i64 %31, 1
  %39 = getelementptr inbounds i8*, i8** %3, i64 %38
  %40 = load i8*, i8** %39, align 8, !tbaa !3
  %41 = getelementptr inbounds i8, i8* %40, i64 %19
  %42 = getelementptr inbounds i8, i8* %41, i64 -1
  %43 = load i8, i8* %42, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %41, i8 %43, i64 %23, i1 false) #27, !tbaa !7
  %44 = or i64 %31, 2
  %45 = getelementptr inbounds i8*, i8** %3, i64 %44
  %46 = load i8*, i8** %45, align 8, !tbaa !3
  %47 = getelementptr inbounds i8, i8* %46, i64 %19
  %48 = getelementptr inbounds i8, i8* %47, i64 -1
  %49 = load i8, i8* %48, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %47, i8 %49, i64 %23, i1 false) #27, !tbaa !7
  %50 = or i64 %31, 3
  %51 = getelementptr inbounds i8*, i8** %3, i64 %50
  %52 = load i8*, i8** %51, align 8, !tbaa !3
  %53 = getelementptr inbounds i8, i8* %52, i64 %19
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = load i8, i8* %54, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %53, i8 %55, i64 %23, i1 false) #27, !tbaa !7
  %56 = add nuw nsw i64 %31, 4
  %57 = add i64 %32, 4
  %58 = icmp eq i64 %57, %29
  br i1 %58, label %59, label %30, !llvm.loop !430

59:                                               ; preds = %30, %18
  %60 = phi i64 [ 0, %18 ], [ %56, %30 ]
  %61 = icmp eq i64 %26, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %59, %62
  %63 = phi i64 [ %70, %62 ], [ %60, %59 ]
  %64 = phi i64 [ %71, %62 ], [ 0, %59 ]
  %65 = getelementptr inbounds i8*, i8** %3, i64 %63
  %66 = load i8*, i8** %65, align 8, !tbaa !3
  %67 = getelementptr inbounds i8, i8* %66, i64 %19
  %68 = getelementptr inbounds i8, i8* %67, i64 -1
  %69 = load i8, i8* %68, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %67, i8 %69, i64 %23, i1 false) #27, !tbaa !7
  %70 = add nuw nsw i64 %63, 1
  %71 = add i64 %64, 1
  %72 = icmp eq i64 %71, %26
  br i1 %72, label %73, label %62, !llvm.loop !434

73:                                               ; preds = %59, %62, %4
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal void @h2v1_downsample(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, i8** nocapture noundef readonly %3) #16 {
  %5 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 7
  %6 = load i32, i32* %5, align 4, !tbaa !243
  %7 = shl i32 %6, 3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %9 = load i32, i32* %8, align 4, !tbaa !195
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 8, !tbaa !50
  %12 = shl i32 %6, 4
  %13 = sub i32 %12, %11
  %14 = icmp sgt i32 %13, 0
  %15 = icmp sgt i32 %9, 0
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %72

17:                                               ; preds = %4
  %18 = zext i32 %11 to i64
  %19 = xor i32 %11, -1
  %20 = add i32 %12, %19
  %21 = zext i32 %20 to i64
  %22 = add nuw nsw i64 %21, 1
  %23 = zext i32 %9 to i64
  %24 = add nsw i64 %23, -1
  %25 = and i64 %23, 3
  %26 = icmp ult i64 %24, 3
  br i1 %26, label %58, label %27

27:                                               ; preds = %17
  %28 = and i64 %23, 4294967292
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %55, %29 ]
  %31 = phi i64 [ 0, %27 ], [ %56, %29 ]
  %32 = getelementptr inbounds i8*, i8** %2, i64 %30
  %33 = load i8*, i8** %32, align 8, !tbaa !3
  %34 = getelementptr inbounds i8, i8* %33, i64 %18
  %35 = getelementptr inbounds i8, i8* %34, i64 -1
  %36 = load i8, i8* %35, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %34, i8 %36, i64 %22, i1 false) #27, !tbaa !7
  %37 = or i64 %30, 1
  %38 = getelementptr inbounds i8*, i8** %2, i64 %37
  %39 = load i8*, i8** %38, align 8, !tbaa !3
  %40 = getelementptr inbounds i8, i8* %39, i64 %18
  %41 = getelementptr inbounds i8, i8* %40, i64 -1
  %42 = load i8, i8* %41, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %40, i8 %42, i64 %22, i1 false) #27, !tbaa !7
  %43 = or i64 %30, 2
  %44 = getelementptr inbounds i8*, i8** %2, i64 %43
  %45 = load i8*, i8** %44, align 8, !tbaa !3
  %46 = getelementptr inbounds i8, i8* %45, i64 %18
  %47 = getelementptr inbounds i8, i8* %46, i64 -1
  %48 = load i8, i8* %47, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %46, i8 %48, i64 %22, i1 false) #27, !tbaa !7
  %49 = or i64 %30, 3
  %50 = getelementptr inbounds i8*, i8** %2, i64 %49
  %51 = load i8*, i8** %50, align 8, !tbaa !3
  %52 = getelementptr inbounds i8, i8* %51, i64 %18
  %53 = getelementptr inbounds i8, i8* %52, i64 -1
  %54 = load i8, i8* %53, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %52, i8 %54, i64 %22, i1 false) #27, !tbaa !7
  %55 = add nuw nsw i64 %30, 4
  %56 = add i64 %31, 4
  %57 = icmp eq i64 %56, %28
  br i1 %57, label %58, label %29, !llvm.loop !430

58:                                               ; preds = %29, %17
  %59 = phi i64 [ 0, %17 ], [ %55, %29 ]
  %60 = icmp eq i64 %25, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %69, %61 ], [ %59, %58 ]
  %63 = phi i64 [ %70, %61 ], [ 0, %58 ]
  %64 = getelementptr inbounds i8*, i8** %2, i64 %62
  %65 = load i8*, i8** %64, align 8, !tbaa !3
  %66 = getelementptr inbounds i8, i8* %65, i64 %18
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  %68 = load i8, i8* %67, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %66, i8 %68, i64 %22, i1 false) #27, !tbaa !7
  %69 = add nuw nsw i64 %62, 1
  %70 = add i64 %63, 1
  %71 = icmp eq i64 %70, %25
  br i1 %71, label %72, label %61, !llvm.loop !435

72:                                               ; preds = %58, %61, %4
  %73 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 3
  %74 = load i32, i32* %73, align 4, !tbaa !151
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %120

76:                                               ; preds = %72
  %77 = icmp eq i32 %7, 0
  br label %78

78:                                               ; preds = %76, %115
  %79 = phi i32 [ %74, %76 ], [ %116, %115 ]
  %80 = phi i64 [ 0, %76 ], [ %117, %115 ]
  br i1 %77, label %115, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds i8*, i8** %2, i64 %80
  %83 = load i8*, i8** %82, align 8, !tbaa !3
  %84 = getelementptr inbounds i8*, i8** %3, i64 %80
  %85 = load i8*, i8** %84, align 8, !tbaa !3
  br label %86

86:                                               ; preds = %86, %81
  %87 = phi i8* [ %85, %81 ], [ %109, %86 ]
  %88 = phi i8* [ %83, %81 ], [ %110, %86 ]
  %89 = phi i32 [ 0, %81 ], [ %111, %86 ]
  %90 = load i8, i8* %88, align 1, !tbaa !7
  %91 = zext i8 %90 to i16
  %92 = getelementptr inbounds i8, i8* %88, i64 1
  %93 = load i8, i8* %92, align 1, !tbaa !7
  %94 = zext i8 %93 to i16
  %95 = add nuw nsw i16 %91, %94
  %96 = lshr i16 %95, 1
  %97 = trunc i16 %96 to i8
  %98 = getelementptr inbounds i8, i8* %87, i64 1
  store i8 %97, i8* %87, align 1, !tbaa !7
  %99 = getelementptr inbounds i8, i8* %88, i64 2
  %100 = load i8, i8* %99, align 1, !tbaa !7
  %101 = zext i8 %100 to i16
  %102 = getelementptr inbounds i8, i8* %88, i64 3
  %103 = load i8, i8* %102, align 1, !tbaa !7
  %104 = zext i8 %103 to i16
  %105 = add nuw nsw i16 %101, 1
  %106 = add nuw nsw i16 %105, %104
  %107 = lshr i16 %106, 1
  %108 = trunc i16 %107 to i8
  %109 = getelementptr inbounds i8, i8* %87, i64 2
  store i8 %108, i8* %98, align 1, !tbaa !7
  %110 = getelementptr inbounds i8, i8* %88, i64 4
  %111 = add nuw i32 %89, 2
  %112 = icmp eq i32 %111, %7
  br i1 %112, label %113, label %86, !llvm.loop !436

113:                                              ; preds = %86
  %114 = load i32, i32* %73, align 4, !tbaa !151
  br label %115

115:                                              ; preds = %113, %78
  %116 = phi i32 [ %114, %113 ], [ %79, %78 ]
  %117 = add nuw nsw i64 %80, 1
  %118 = sext i32 %116 to i64
  %119 = icmp slt i64 %117, %118
  br i1 %119, label %78, label %120, !llvm.loop !437

120:                                              ; preds = %115, %72
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal void @h2v2_smooth_downsample(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, i8** nocapture noundef readonly %3) #16 {
  %5 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 7
  %6 = load i32, i32* %5, align 4, !tbaa !243
  %7 = shl i32 %6, 3
  %8 = getelementptr inbounds i8*, i8** %2, i64 -1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %10 = load i32, i32* %9, align 4, !tbaa !195
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8, !tbaa !50
  %13 = shl i32 %6, 4
  %14 = sub i32 %13, %12
  %15 = icmp sgt i32 %14, 0
  %16 = icmp sgt i32 %10, -2
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %73

18:                                               ; preds = %4
  %19 = add nsw i32 %10, 2
  %20 = zext i32 %12 to i64
  %21 = xor i32 %12, -1
  %22 = add i32 %13, %21
  %23 = zext i32 %22 to i64
  %24 = add nuw nsw i64 %23, 1
  %25 = zext i32 %19 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %59, label %29

29:                                               ; preds = %18
  %30 = and i64 %25, 4294967292
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %56, %31 ]
  %33 = phi i64 [ 0, %29 ], [ %57, %31 ]
  %34 = getelementptr inbounds i8*, i8** %8, i64 %32
  %35 = load i8*, i8** %34, align 8, !tbaa !3
  %36 = getelementptr inbounds i8, i8* %35, i64 %20
  %37 = getelementptr inbounds i8, i8* %36, i64 -1
  %38 = load i8, i8* %37, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %36, i8 %38, i64 %24, i1 false) #27, !tbaa !7
  %39 = getelementptr inbounds i8*, i8** %2, i64 %32
  %40 = load i8*, i8** %39, align 8, !tbaa !3
  %41 = getelementptr inbounds i8, i8* %40, i64 %20
  %42 = getelementptr inbounds i8, i8* %41, i64 -1
  %43 = load i8, i8* %42, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %41, i8 %43, i64 %24, i1 false) #27, !tbaa !7
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds i8*, i8** %8, i64 %44
  %46 = load i8*, i8** %45, align 8, !tbaa !3
  %47 = getelementptr inbounds i8, i8* %46, i64 %20
  %48 = getelementptr inbounds i8, i8* %47, i64 -1
  %49 = load i8, i8* %48, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %47, i8 %49, i64 %24, i1 false) #27, !tbaa !7
  %50 = or i64 %32, 3
  %51 = getelementptr inbounds i8*, i8** %8, i64 %50
  %52 = load i8*, i8** %51, align 8, !tbaa !3
  %53 = getelementptr inbounds i8, i8* %52, i64 %20
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = load i8, i8* %54, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %53, i8 %55, i64 %24, i1 false) #27, !tbaa !7
  %56 = add nuw nsw i64 %32, 4
  %57 = add i64 %33, 4
  %58 = icmp eq i64 %57, %30
  br i1 %58, label %59, label %31, !llvm.loop !430

59:                                               ; preds = %31, %18
  %60 = phi i64 [ 0, %18 ], [ %56, %31 ]
  %61 = icmp eq i64 %27, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %59, %62
  %63 = phi i64 [ %70, %62 ], [ %60, %59 ]
  %64 = phi i64 [ %71, %62 ], [ 0, %59 ]
  %65 = getelementptr inbounds i8*, i8** %8, i64 %63
  %66 = load i8*, i8** %65, align 8, !tbaa !3
  %67 = getelementptr inbounds i8, i8* %66, i64 %20
  %68 = getelementptr inbounds i8, i8* %67, i64 -1
  %69 = load i8, i8* %68, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %67, i8 %69, i64 %24, i1 false) #27, !tbaa !7
  %70 = add nuw nsw i64 %63, 1
  %71 = add i64 %64, 1
  %72 = icmp eq i64 %71, %27
  br i1 %72, label %73, label %62, !llvm.loop !438

73:                                               ; preds = %59, %62, %4
  %74 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 28
  %75 = load i32, i32* %74, align 8, !tbaa !42
  %76 = mul i32 %75, -80
  %77 = add i32 %76, 16384
  %78 = zext i32 %77 to i64
  %79 = shl nsw i32 %75, 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 3
  %82 = load i32, i32* %81, align 4, !tbaa !151
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %294

84:                                               ; preds = %73
  %85 = add i32 %7, -2
  br label %86

86:                                               ; preds = %84, %234
  %87 = phi i64 [ 0, %84 ], [ %290, %234 ]
  %88 = phi i64 [ 0, %84 ], [ %99, %234 ]
  %89 = getelementptr inbounds i8*, i8** %3, i64 %87
  %90 = load i8*, i8** %89, align 8, !tbaa !3
  %91 = getelementptr inbounds i8*, i8** %2, i64 %88
  %92 = load i8*, i8** %91, align 8, !tbaa !3
  %93 = or i64 %88, 1
  %94 = getelementptr inbounds i8*, i8** %2, i64 %93
  %95 = load i8*, i8** %94, align 8, !tbaa !3
  %96 = add nsw i64 %88, -1
  %97 = getelementptr inbounds i8*, i8** %2, i64 %96
  %98 = load i8*, i8** %97, align 8, !tbaa !3
  %99 = add nuw nsw i64 %88, 2
  %100 = getelementptr inbounds i8*, i8** %2, i64 %99
  %101 = load i8*, i8** %100, align 8, !tbaa !3
  %102 = load i8, i8* %92, align 1, !tbaa !7
  %103 = zext i8 %102 to i32
  %104 = getelementptr inbounds i8, i8* %92, i64 1
  %105 = load i8, i8* %104, align 1, !tbaa !7
  %106 = zext i8 %105 to i32
  %107 = load i8, i8* %95, align 1, !tbaa !7
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds i8, i8* %95, i64 1
  %110 = load i8, i8* %109, align 1, !tbaa !7
  %111 = zext i8 %110 to i32
  %112 = add nuw nsw i32 %108, %103
  %113 = add nuw nsw i32 %112, %106
  %114 = add nuw nsw i32 %113, %111
  %115 = zext i32 %114 to i64
  %116 = load i8, i8* %98, align 1, !tbaa !7
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds i8, i8* %98, i64 1
  %119 = load i8, i8* %118, align 1, !tbaa !7
  %120 = zext i8 %119 to i32
  %121 = load i8, i8* %101, align 1, !tbaa !7
  %122 = zext i8 %121 to i32
  %123 = getelementptr inbounds i8, i8* %101, i64 1
  %124 = load i8, i8* %123, align 1, !tbaa !7
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds i8, i8* %92, i64 2
  %127 = load i8, i8* %126, align 1, !tbaa !7
  %128 = zext i8 %127 to i32
  %129 = getelementptr inbounds i8, i8* %95, i64 2
  %130 = load i8, i8* %129, align 1, !tbaa !7
  %131 = zext i8 %130 to i32
  %132 = add nuw nsw i32 %112, %117
  %133 = add nuw nsw i32 %132, %120
  %134 = add nuw nsw i32 %133, %122
  %135 = add nuw nsw i32 %134, %125
  %136 = add nuw nsw i32 %135, %128
  %137 = add nuw nsw i32 %136, %131
  %138 = zext i32 %137 to i64
  %139 = shl nuw nsw i64 %138, 1
  %140 = getelementptr inbounds i8, i8* %98, i64 2
  %141 = load i8, i8* %140, align 1, !tbaa !7
  %142 = zext i8 %141 to i32
  %143 = getelementptr inbounds i8, i8* %101, i64 2
  %144 = load i8, i8* %143, align 1, !tbaa !7
  %145 = zext i8 %144 to i32
  %146 = add nuw nsw i32 %122, %117
  %147 = add nuw nsw i32 %146, %142
  %148 = add nuw nsw i32 %147, %145
  %149 = zext i32 %148 to i64
  %150 = add nuw nsw i64 %139, %149
  %151 = mul nuw nsw i64 %115, %78
  %152 = mul i64 %150, %80
  %153 = add nuw nsw i64 %151, 32768
  %154 = add i64 %153, %152
  %155 = lshr i64 %154, 16
  %156 = trunc i64 %155 to i8
  store i8 %156, i8* %90, align 1, !tbaa !7
  %157 = getelementptr inbounds i8, i8* %90, i64 1
  br label %158

158:                                              ; preds = %86, %158
  %159 = phi i8* [ %157, %86 ], [ %232, %158 ]
  %160 = phi i8* [ %143, %86 ], [ %220, %158 ]
  %161 = phi i8* [ %140, %86 ], [ %212, %158 ]
  %162 = phi i8* [ %129, %86 ], [ %203, %158 ]
  %163 = phi i8* [ %126, %86 ], [ %195, %158 ]
  %164 = phi i32 [ %85, %86 ], [ %231, %158 ]
  %165 = load i8, i8* %163, align 1, !tbaa !7
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds i8, i8* %163, i64 1
  %168 = load i8, i8* %167, align 1, !tbaa !7
  %169 = zext i8 %168 to i64
  %170 = add nuw nsw i64 %169, %166
  %171 = load i8, i8* %162, align 1, !tbaa !7
  %172 = zext i8 %171 to i64
  %173 = add nuw nsw i64 %170, %172
  %174 = getelementptr inbounds i8, i8* %162, i64 1
  %175 = load i8, i8* %174, align 1, !tbaa !7
  %176 = zext i8 %175 to i64
  %177 = add nuw nsw i64 %173, %176
  %178 = load i8, i8* %161, align 1, !tbaa !7
  %179 = zext i8 %178 to i64
  %180 = getelementptr inbounds i8, i8* %161, i64 1
  %181 = load i8, i8* %180, align 1, !tbaa !7
  %182 = zext i8 %181 to i64
  %183 = add nuw nsw i64 %182, %179
  %184 = load i8, i8* %160, align 1, !tbaa !7
  %185 = zext i8 %184 to i64
  %186 = add nuw nsw i64 %183, %185
  %187 = getelementptr inbounds i8, i8* %160, i64 1
  %188 = load i8, i8* %187, align 1, !tbaa !7
  %189 = zext i8 %188 to i64
  %190 = add nuw nsw i64 %186, %189
  %191 = getelementptr inbounds i8, i8* %163, i64 -1
  %192 = load i8, i8* %191, align 1, !tbaa !7
  %193 = zext i8 %192 to i64
  %194 = add nuw nsw i64 %190, %193
  %195 = getelementptr inbounds i8, i8* %163, i64 2
  %196 = load i8, i8* %195, align 1, !tbaa !7
  %197 = zext i8 %196 to i64
  %198 = add nuw nsw i64 %194, %197
  %199 = getelementptr inbounds i8, i8* %162, i64 -1
  %200 = load i8, i8* %199, align 1, !tbaa !7
  %201 = zext i8 %200 to i64
  %202 = add nuw nsw i64 %198, %201
  %203 = getelementptr inbounds i8, i8* %162, i64 2
  %204 = load i8, i8* %203, align 1, !tbaa !7
  %205 = zext i8 %204 to i64
  %206 = add nuw nsw i64 %202, %205
  %207 = shl nuw nsw i64 %206, 1
  %208 = and i64 %207, 8589934590
  %209 = getelementptr inbounds i8, i8* %161, i64 -1
  %210 = load i8, i8* %209, align 1, !tbaa !7
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds i8, i8* %161, i64 2
  %213 = load i8, i8* %212, align 1, !tbaa !7
  %214 = zext i8 %213 to i64
  %215 = add nuw nsw i64 %214, %211
  %216 = getelementptr inbounds i8, i8* %160, i64 -1
  %217 = load i8, i8* %216, align 1, !tbaa !7
  %218 = zext i8 %217 to i64
  %219 = add nuw nsw i64 %215, %218
  %220 = getelementptr inbounds i8, i8* %160, i64 2
  %221 = load i8, i8* %220, align 1, !tbaa !7
  %222 = zext i8 %221 to i64
  %223 = add nuw nsw i64 %219, %208
  %224 = add nuw nsw i64 %223, %222
  %225 = mul nuw nsw i64 %177, %78
  %226 = mul i64 %224, %80
  %227 = add nuw nsw i64 %225, 32768
  %228 = add i64 %227, %226
  %229 = lshr i64 %228, 16
  %230 = trunc i64 %229 to i8
  store i8 %230, i8* %159, align 1, !tbaa !7
  %231 = add i32 %164, -1
  %232 = getelementptr inbounds i8, i8* %159, i64 1
  %233 = icmp eq i32 %231, 0
  br i1 %233, label %234, label %158, !llvm.loop !439

234:                                              ; preds = %158
  %235 = getelementptr inbounds i8, i8* %163, i64 1
  %236 = getelementptr inbounds i8, i8* %162, i64 1
  %237 = getelementptr inbounds i8, i8* %161, i64 1
  %238 = getelementptr inbounds i8, i8* %160, i64 1
  %239 = load i8, i8* %195, align 1, !tbaa !7
  %240 = zext i8 %239 to i32
  %241 = getelementptr inbounds i8, i8* %163, i64 3
  %242 = load i8, i8* %241, align 1, !tbaa !7
  %243 = zext i8 %242 to i32
  %244 = load i8, i8* %203, align 1, !tbaa !7
  %245 = zext i8 %244 to i32
  %246 = getelementptr inbounds i8, i8* %162, i64 3
  %247 = load i8, i8* %246, align 1, !tbaa !7
  %248 = zext i8 %247 to i32
  %249 = add nuw nsw i32 %248, %243
  %250 = add nuw nsw i32 %249, %240
  %251 = add nuw nsw i32 %250, %245
  %252 = zext i32 %251 to i64
  %253 = load i8, i8* %212, align 1, !tbaa !7
  %254 = zext i8 %253 to i32
  %255 = getelementptr inbounds i8, i8* %161, i64 3
  %256 = load i8, i8* %255, align 1, !tbaa !7
  %257 = zext i8 %256 to i32
  %258 = load i8, i8* %220, align 1, !tbaa !7
  %259 = zext i8 %258 to i32
  %260 = getelementptr inbounds i8, i8* %160, i64 3
  %261 = load i8, i8* %260, align 1, !tbaa !7
  %262 = zext i8 %261 to i32
  %263 = load i8, i8* %235, align 1, !tbaa !7
  %264 = zext i8 %263 to i32
  %265 = load i8, i8* %236, align 1, !tbaa !7
  %266 = zext i8 %265 to i32
  %267 = add nuw nsw i32 %249, %254
  %268 = add nuw nsw i32 %267, %257
  %269 = add nuw nsw i32 %268, %259
  %270 = add nuw nsw i32 %269, %262
  %271 = add nuw nsw i32 %270, %264
  %272 = add nuw nsw i32 %271, %266
  %273 = zext i32 %272 to i64
  %274 = shl nuw nsw i64 %273, 1
  %275 = load i8, i8* %237, align 1, !tbaa !7
  %276 = zext i8 %275 to i32
  %277 = load i8, i8* %238, align 1, !tbaa !7
  %278 = zext i8 %277 to i32
  %279 = add nuw nsw i32 %262, %257
  %280 = add nuw nsw i32 %279, %276
  %281 = add nuw nsw i32 %280, %278
  %282 = zext i32 %281 to i64
  %283 = add nuw nsw i64 %274, %282
  %284 = mul nuw nsw i64 %252, %78
  %285 = mul i64 %283, %80
  %286 = add nuw nsw i64 %284, 32768
  %287 = add i64 %286, %285
  %288 = lshr i64 %287, 16
  %289 = trunc i64 %288 to i8
  store i8 %289, i8* %232, align 1, !tbaa !7
  %290 = add nuw nsw i64 %87, 1
  %291 = load i32, i32* %81, align 4, !tbaa !151
  %292 = sext i32 %291 to i64
  %293 = icmp slt i64 %290, %292
  br i1 %293, label %86, label %294, !llvm.loop !440

294:                                              ; preds = %234, %73
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal void @h2v2_downsample(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, i8** nocapture noundef readonly %3) #16 {
  %5 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 7
  %6 = load i32, i32* %5, align 4, !tbaa !243
  %7 = shl i32 %6, 3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %9 = load i32, i32* %8, align 4, !tbaa !195
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 8, !tbaa !50
  %12 = shl i32 %6, 4
  %13 = sub i32 %12, %11
  %14 = icmp sgt i32 %13, 0
  %15 = icmp sgt i32 %9, 0
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %72

17:                                               ; preds = %4
  %18 = zext i32 %11 to i64
  %19 = xor i32 %11, -1
  %20 = add i32 %12, %19
  %21 = zext i32 %20 to i64
  %22 = add nuw nsw i64 %21, 1
  %23 = zext i32 %9 to i64
  %24 = add nsw i64 %23, -1
  %25 = and i64 %23, 3
  %26 = icmp ult i64 %24, 3
  br i1 %26, label %58, label %27

27:                                               ; preds = %17
  %28 = and i64 %23, 4294967292
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %55, %29 ]
  %31 = phi i64 [ 0, %27 ], [ %56, %29 ]
  %32 = getelementptr inbounds i8*, i8** %2, i64 %30
  %33 = load i8*, i8** %32, align 8, !tbaa !3
  %34 = getelementptr inbounds i8, i8* %33, i64 %18
  %35 = getelementptr inbounds i8, i8* %34, i64 -1
  %36 = load i8, i8* %35, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %34, i8 %36, i64 %22, i1 false) #27, !tbaa !7
  %37 = or i64 %30, 1
  %38 = getelementptr inbounds i8*, i8** %2, i64 %37
  %39 = load i8*, i8** %38, align 8, !tbaa !3
  %40 = getelementptr inbounds i8, i8* %39, i64 %18
  %41 = getelementptr inbounds i8, i8* %40, i64 -1
  %42 = load i8, i8* %41, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %40, i8 %42, i64 %22, i1 false) #27, !tbaa !7
  %43 = or i64 %30, 2
  %44 = getelementptr inbounds i8*, i8** %2, i64 %43
  %45 = load i8*, i8** %44, align 8, !tbaa !3
  %46 = getelementptr inbounds i8, i8* %45, i64 %18
  %47 = getelementptr inbounds i8, i8* %46, i64 -1
  %48 = load i8, i8* %47, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %46, i8 %48, i64 %22, i1 false) #27, !tbaa !7
  %49 = or i64 %30, 3
  %50 = getelementptr inbounds i8*, i8** %2, i64 %49
  %51 = load i8*, i8** %50, align 8, !tbaa !3
  %52 = getelementptr inbounds i8, i8* %51, i64 %18
  %53 = getelementptr inbounds i8, i8* %52, i64 -1
  %54 = load i8, i8* %53, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %52, i8 %54, i64 %22, i1 false) #27, !tbaa !7
  %55 = add nuw nsw i64 %30, 4
  %56 = add i64 %31, 4
  %57 = icmp eq i64 %56, %28
  br i1 %57, label %58, label %29, !llvm.loop !430

58:                                               ; preds = %29, %17
  %59 = phi i64 [ 0, %17 ], [ %55, %29 ]
  %60 = icmp eq i64 %25, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %69, %61 ], [ %59, %58 ]
  %63 = phi i64 [ %70, %61 ], [ 0, %58 ]
  %64 = getelementptr inbounds i8*, i8** %2, i64 %62
  %65 = load i8*, i8** %64, align 8, !tbaa !3
  %66 = getelementptr inbounds i8, i8* %65, i64 %18
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  %68 = load i8, i8* %67, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %66, i8 %68, i64 %22, i1 false) #27, !tbaa !7
  %69 = add nuw nsw i64 %62, 1
  %70 = add i64 %63, 1
  %71 = icmp eq i64 %70, %25
  br i1 %71, label %72, label %61, !llvm.loop !441

72:                                               ; preds = %58, %61, %4
  %73 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 3
  %74 = load i32, i32* %73, align 4, !tbaa !151
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %143

76:                                               ; preds = %72
  %77 = icmp eq i32 %7, 0
  br label %78

78:                                               ; preds = %76, %137
  %79 = phi i32 [ %74, %76 ], [ %138, %137 ]
  %80 = phi i64 [ 0, %76 ], [ %140, %137 ]
  %81 = phi i64 [ 0, %76 ], [ %139, %137 ]
  br i1 %77, label %137, label %82

82:                                               ; preds = %78
  %83 = or i64 %81, 1
  %84 = getelementptr inbounds i8*, i8** %2, i64 %83
  %85 = load i8*, i8** %84, align 8, !tbaa !3
  %86 = getelementptr inbounds i8*, i8** %2, i64 %81
  %87 = load i8*, i8** %86, align 8, !tbaa !3
  %88 = getelementptr inbounds i8*, i8** %3, i64 %80
  %89 = load i8*, i8** %88, align 8, !tbaa !3
  br label %90

90:                                               ; preds = %90, %82
  %91 = phi i8* [ %89, %82 ], [ %130, %90 ]
  %92 = phi i8* [ %85, %82 ], [ %132, %90 ]
  %93 = phi i8* [ %87, %82 ], [ %131, %90 ]
  %94 = phi i32 [ 0, %82 ], [ %133, %90 ]
  %95 = load i8, i8* %93, align 1, !tbaa !7
  %96 = zext i8 %95 to i16
  %97 = getelementptr inbounds i8, i8* %93, i64 1
  %98 = load i8, i8* %97, align 1, !tbaa !7
  %99 = zext i8 %98 to i16
  %100 = load i8, i8* %92, align 1, !tbaa !7
  %101 = zext i8 %100 to i16
  %102 = getelementptr inbounds i8, i8* %92, i64 1
  %103 = load i8, i8* %102, align 1, !tbaa !7
  %104 = zext i8 %103 to i16
  %105 = add nuw nsw i16 %96, 1
  %106 = add nuw nsw i16 %105, %99
  %107 = add nuw nsw i16 %106, %101
  %108 = add nuw nsw i16 %107, %104
  %109 = lshr i16 %108, 2
  %110 = trunc i16 %109 to i8
  %111 = getelementptr inbounds i8, i8* %91, i64 1
  store i8 %110, i8* %91, align 1, !tbaa !7
  %112 = getelementptr inbounds i8, i8* %93, i64 2
  %113 = getelementptr inbounds i8, i8* %92, i64 2
  %114 = load i8, i8* %112, align 1, !tbaa !7
  %115 = zext i8 %114 to i16
  %116 = getelementptr inbounds i8, i8* %93, i64 3
  %117 = load i8, i8* %116, align 1, !tbaa !7
  %118 = zext i8 %117 to i16
  %119 = load i8, i8* %113, align 1, !tbaa !7
  %120 = zext i8 %119 to i16
  %121 = getelementptr inbounds i8, i8* %92, i64 3
  %122 = load i8, i8* %121, align 1, !tbaa !7
  %123 = zext i8 %122 to i16
  %124 = add nuw nsw i16 %115, 2
  %125 = add nuw nsw i16 %124, %118
  %126 = add nuw nsw i16 %125, %120
  %127 = add nuw nsw i16 %126, %123
  %128 = lshr i16 %127, 2
  %129 = trunc i16 %128 to i8
  %130 = getelementptr inbounds i8, i8* %91, i64 2
  store i8 %129, i8* %111, align 1, !tbaa !7
  %131 = getelementptr inbounds i8, i8* %93, i64 4
  %132 = getelementptr inbounds i8, i8* %92, i64 4
  %133 = add nuw i32 %94, 2
  %134 = icmp eq i32 %133, %7
  br i1 %134, label %135, label %90, !llvm.loop !442

135:                                              ; preds = %90
  %136 = load i32, i32* %73, align 4, !tbaa !151
  br label %137

137:                                              ; preds = %135, %78
  %138 = phi i32 [ %136, %135 ], [ %79, %78 ]
  %139 = add nuw nsw i64 %81, 2
  %140 = add nuw nsw i64 %80, 1
  %141 = sext i32 %138 to i64
  %142 = icmp slt i64 %140, %141
  br i1 %142, label %78, label %143, !llvm.loop !443

143:                                              ; preds = %137, %72
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define internal void @int_downsample(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, i8** nocapture noundef readonly %3) #16 {
  %5 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 7
  %6 = load i32, i32* %5, align 4, !tbaa !243
  %7 = shl i32 %6, 3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  %9 = load i32, i32* %8, align 8, !tbaa !239
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8, !tbaa !150
  %12 = sdiv i32 %9, %11
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %14 = load i32, i32* %13, align 4, !tbaa !195
  %15 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4, !tbaa !151
  %17 = sdiv i32 %14, %16
  %18 = mul nsw i32 %17, %12
  %19 = sdiv i32 %18, 2
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %21 = load i32, i32* %20, align 8, !tbaa !50
  %22 = mul i32 %12, %7
  %23 = sub i32 %22, %21
  %24 = icmp sgt i32 %23, 0
  %25 = icmp sgt i32 %14, 0
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %84

27:                                               ; preds = %4
  %28 = zext i32 %21 to i64
  %29 = xor i32 %21, -1
  %30 = add i32 %22, %29
  %31 = zext i32 %30 to i64
  %32 = add nuw nsw i64 %31, 1
  %33 = zext i32 %14 to i64
  %34 = add nsw i64 %33, -1
  %35 = and i64 %33, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %68, label %37

37:                                               ; preds = %27
  %38 = and i64 %33, 4294967292
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %65, %39 ]
  %41 = phi i64 [ 0, %37 ], [ %66, %39 ]
  %42 = getelementptr inbounds i8*, i8** %2, i64 %40
  %43 = load i8*, i8** %42, align 8, !tbaa !3
  %44 = getelementptr inbounds i8, i8* %43, i64 %28
  %45 = getelementptr inbounds i8, i8* %44, i64 -1
  %46 = load i8, i8* %45, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %44, i8 %46, i64 %32, i1 false) #27, !tbaa !7
  %47 = or i64 %40, 1
  %48 = getelementptr inbounds i8*, i8** %2, i64 %47
  %49 = load i8*, i8** %48, align 8, !tbaa !3
  %50 = getelementptr inbounds i8, i8* %49, i64 %28
  %51 = getelementptr inbounds i8, i8* %50, i64 -1
  %52 = load i8, i8* %51, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %50, i8 %52, i64 %32, i1 false) #27, !tbaa !7
  %53 = or i64 %40, 2
  %54 = getelementptr inbounds i8*, i8** %2, i64 %53
  %55 = load i8*, i8** %54, align 8, !tbaa !3
  %56 = getelementptr inbounds i8, i8* %55, i64 %28
  %57 = getelementptr inbounds i8, i8* %56, i64 -1
  %58 = load i8, i8* %57, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %56, i8 %58, i64 %32, i1 false) #27, !tbaa !7
  %59 = or i64 %40, 3
  %60 = getelementptr inbounds i8*, i8** %2, i64 %59
  %61 = load i8*, i8** %60, align 8, !tbaa !3
  %62 = getelementptr inbounds i8, i8* %61, i64 %28
  %63 = getelementptr inbounds i8, i8* %62, i64 -1
  %64 = load i8, i8* %63, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %62, i8 %64, i64 %32, i1 false) #27, !tbaa !7
  %65 = add nuw nsw i64 %40, 4
  %66 = add i64 %41, 4
  %67 = icmp eq i64 %66, %38
  br i1 %67, label %68, label %39, !llvm.loop !430

68:                                               ; preds = %39, %27
  %69 = phi i64 [ 0, %27 ], [ %65, %39 ]
  %70 = icmp eq i64 %35, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %79, %71 ], [ %69, %68 ]
  %73 = phi i64 [ %80, %71 ], [ 0, %68 ]
  %74 = getelementptr inbounds i8*, i8** %2, i64 %72
  %75 = load i8*, i8** %74, align 8, !tbaa !3
  %76 = getelementptr inbounds i8, i8* %75, i64 %28
  %77 = getelementptr inbounds i8, i8* %76, i64 -1
  %78 = load i8, i8* %77, align 1, !tbaa !7
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %76, i8 %78, i64 %32, i1 false) #27, !tbaa !7
  %79 = add nuw nsw i64 %72, 1
  %80 = add i64 %73, 1
  %81 = icmp eq i64 %80, %35
  br i1 %81, label %82, label %71, !llvm.loop !444

82:                                               ; preds = %71, %68
  %83 = load i32, i32* %15, align 4, !tbaa !151
  br label %84

84:                                               ; preds = %82, %4
  %85 = phi i32 [ %83, %82 ], [ %16, %4 ]
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %87, label %194

87:                                               ; preds = %84
  %88 = icmp eq i32 %7, 0
  %89 = icmp sgt i32 %17, 0
  %90 = icmp sgt i32 %12, 0
  %91 = sext i32 %19 to i64
  %92 = sext i32 %18 to i64
  %93 = sext i32 %17 to i64
  %94 = zext i32 %17 to i64
  %95 = add i32 %12, -1
  %96 = and i32 %12, 7
  %97 = icmp ult i32 %95, 7
  %98 = and i32 %12, -8
  %99 = icmp eq i32 %96, 0
  br label %100

100:                                              ; preds = %87, %188
  %101 = phi i32 [ %85, %87 ], [ %189, %188 ]
  %102 = phi i64 [ 0, %87 ], [ %191, %188 ]
  %103 = phi i64 [ 0, %87 ], [ %190, %188 ]
  br i1 %88, label %188, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds i8*, i8** %3, i64 %102
  %106 = load i8*, i8** %105, align 8, !tbaa !3
  br label %107

107:                                              ; preds = %104, %177
  %108 = phi i8* [ %182, %177 ], [ %106, %104 ]
  %109 = phi i32 [ %184, %177 ], [ 0, %104 ]
  %110 = phi i32 [ %183, %177 ], [ 0, %104 ]
  br i1 %89, label %111, label %177

111:                                              ; preds = %107
  %112 = zext i32 %109 to i64
  br label %113

113:                                              ; preds = %111, %173
  %114 = phi i64 [ 0, %111 ], [ %175, %173 ]
  %115 = phi i64 [ 0, %111 ], [ %174, %173 ]
  br i1 %90, label %116, label %173

116:                                              ; preds = %113
  %117 = add nsw i64 %114, %103
  %118 = getelementptr inbounds i8*, i8** %2, i64 %117
  %119 = load i8*, i8** %118, align 8, !tbaa !3
  %120 = getelementptr inbounds i8, i8* %119, i64 %112
  br i1 %97, label %159, label %121

121:                                              ; preds = %116, %121
  %122 = phi i64 [ %156, %121 ], [ %115, %116 ]
  %123 = phi i8* [ %153, %121 ], [ %120, %116 ]
  %124 = phi i32 [ %157, %121 ], [ 0, %116 ]
  %125 = getelementptr inbounds i8, i8* %123, i64 1
  %126 = load i8, i8* %123, align 1, !tbaa !7
  %127 = zext i8 %126 to i64
  %128 = add nsw i64 %122, %127
  %129 = getelementptr inbounds i8, i8* %123, i64 2
  %130 = load i8, i8* %125, align 1, !tbaa !7
  %131 = zext i8 %130 to i64
  %132 = add nsw i64 %128, %131
  %133 = getelementptr inbounds i8, i8* %123, i64 3
  %134 = load i8, i8* %129, align 1, !tbaa !7
  %135 = zext i8 %134 to i64
  %136 = add nsw i64 %132, %135
  %137 = getelementptr inbounds i8, i8* %123, i64 4
  %138 = load i8, i8* %133, align 1, !tbaa !7
  %139 = zext i8 %138 to i64
  %140 = add nsw i64 %136, %139
  %141 = getelementptr inbounds i8, i8* %123, i64 5
  %142 = load i8, i8* %137, align 1, !tbaa !7
  %143 = zext i8 %142 to i64
  %144 = add nsw i64 %140, %143
  %145 = getelementptr inbounds i8, i8* %123, i64 6
  %146 = load i8, i8* %141, align 1, !tbaa !7
  %147 = zext i8 %146 to i64
  %148 = add nsw i64 %144, %147
  %149 = getelementptr inbounds i8, i8* %123, i64 7
  %150 = load i8, i8* %145, align 1, !tbaa !7
  %151 = zext i8 %150 to i64
  %152 = add nsw i64 %148, %151
  %153 = getelementptr inbounds i8, i8* %123, i64 8
  %154 = load i8, i8* %149, align 1, !tbaa !7
  %155 = zext i8 %154 to i64
  %156 = add nsw i64 %152, %155
  %157 = add i32 %124, 8
  %158 = icmp eq i32 %157, %98
  br i1 %158, label %159, label %121, !llvm.loop !445

159:                                              ; preds = %121, %116
  %160 = phi i64 [ undef, %116 ], [ %156, %121 ]
  %161 = phi i64 [ %115, %116 ], [ %156, %121 ]
  %162 = phi i8* [ %120, %116 ], [ %153, %121 ]
  br i1 %99, label %173, label %163

163:                                              ; preds = %159, %163
  %164 = phi i64 [ %170, %163 ], [ %161, %159 ]
  %165 = phi i8* [ %167, %163 ], [ %162, %159 ]
  %166 = phi i32 [ %171, %163 ], [ 0, %159 ]
  %167 = getelementptr inbounds i8, i8* %165, i64 1
  %168 = load i8, i8* %165, align 1, !tbaa !7
  %169 = zext i8 %168 to i64
  %170 = add nsw i64 %164, %169
  %171 = add i32 %166, 1
  %172 = icmp eq i32 %171, %96
  br i1 %172, label %173, label %163, !llvm.loop !446

173:                                              ; preds = %159, %163, %113
  %174 = phi i64 [ %115, %113 ], [ %160, %159 ], [ %170, %163 ]
  %175 = add nuw nsw i64 %114, 1
  %176 = icmp eq i64 %175, %94
  br i1 %176, label %177, label %113, !llvm.loop !447

177:                                              ; preds = %173, %107
  %178 = phi i64 [ 0, %107 ], [ %174, %173 ]
  %179 = add nsw i64 %178, %91
  %180 = sdiv i64 %179, %92
  %181 = trunc i64 %180 to i8
  %182 = getelementptr inbounds i8, i8* %108, i64 1
  store i8 %181, i8* %108, align 1, !tbaa !7
  %183 = add nuw i32 %110, 1
  %184 = add i32 %109, %12
  %185 = icmp eq i32 %183, %7
  br i1 %185, label %186, label %107, !llvm.loop !448

186:                                              ; preds = %177
  %187 = load i32, i32* %15, align 4, !tbaa !151
  br label %188

188:                                              ; preds = %186, %100
  %189 = phi i32 [ %187, %186 ], [ %101, %100 ]
  %190 = add nsw i64 %103, %93
  %191 = add nuw nsw i64 %102, 1
  %192 = sext i32 %189 to i64
  %193 = icmp slt i64 %191, %192
  br i1 %193, label %100, label %194, !llvm.loop !449

194:                                              ; preds = %188, %84
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1, i32 noundef %2, %struct.c_derived_tbl** nocapture noundef %3) local_unnamed_addr #2 {
  %5 = alloca [257 x i8], align 16
  %6 = alloca [257 x i32], align 16
  %7 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 257, i8* nonnull %7) #27
  %8 = bitcast [257 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %8) #27
  %9 = icmp ugt i32 %2, 3
  br i1 %9, label %10, label %19

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 50, i32* %13, align 8, !tbaa !19
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0
  store i32 %2, i32* %14, align 4, !tbaa !7
  %15 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %16 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %15, align 8, !tbaa !8
  %17 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %16, align 8, !tbaa !20
  %18 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %17(%struct.jpeg_common_struct* noundef %18) #27
  br label %19

19:                                               ; preds = %4, %10
  %20 = icmp eq i32 %1, 0
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 %21
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 %21
  %24 = select i1 %20, %struct.JHUFF_TBL** %23, %struct.JHUFF_TBL** %22
  %25 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %24, align 8, !tbaa !3
  %26 = icmp eq %struct.JHUFF_TBL* %25, null
  br i1 %26, label %27, label %36

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8, !tbaa !8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 5
  store i32 50, i32* %30, align 8, !tbaa !19
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 0
  store i32 %2, i32* %31, align 4, !tbaa !7
  %32 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %33 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %32, align 8, !tbaa !8
  %34 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %33, align 8, !tbaa !20
  %35 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %34(%struct.jpeg_common_struct* noundef %35) #27
  br label %36

36:                                               ; preds = %27, %19
  %37 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %3, align 8, !tbaa !3
  %38 = icmp eq %struct.c_derived_tbl* %37, null
  br i1 %38, label %39, label %48

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %41 = bitcast %struct.jpeg_memory_mgr** %40 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %42 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %41, align 8, !tbaa !36
  %43 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %42, align 8, !tbaa !44
  %44 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %45 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %43(%struct.jpeg_common_struct* noundef %44, i32 noundef 1, i64 noundef 1280) #27
  %46 = bitcast %struct.c_derived_tbl** %3 to i8**
  store i8* %45, i8** %46, align 8, !tbaa !3
  %47 = bitcast i8* %45 to %struct.c_derived_tbl*
  br label %48

48:                                               ; preds = %36, %39
  %49 = phi %struct.c_derived_tbl* [ %47, %39 ], [ %37, %36 ]
  %50 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %77
  %53 = phi i64 [ 1, %48 ], [ %79, %77 ]
  %54 = phi i32 [ 0, %48 ], [ %78, %77 ]
  %55 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %25, i64 0, i32 0, i64 %53
  %56 = load i16, i16* %55, align 2, !tbaa !96
  %57 = sext i16 %56 to i32
  %58 = icmp slt i16 %56, 0
  %59 = add nsw i32 %54, %57
  %60 = icmp sgt i32 %59, 256
  %61 = select i1 %58, i1 true, i1 %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %52
  %63 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %64 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %63, i64 0, i32 5
  store i32 8, i32* %64, align 8, !tbaa !19
  %65 = bitcast %struct.jpeg_error_mgr* %63 to void (%struct.jpeg_common_struct*, ...)**
  %66 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %65, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %66(%struct.jpeg_common_struct* noundef %50) #27
  br label %67

67:                                               ; preds = %52, %62
  %68 = icmp eq i16 %56, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = trunc i64 %53 to i8
  %71 = sext i32 %54 to i64
  %72 = getelementptr [257 x i8], [257 x i8]* %5, i64 0, i64 %71
  %73 = add nsw i32 %57, -1
  %74 = zext i32 %73 to i64
  %75 = add nuw nsw i64 %74, 1
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %72, i8 %70, i64 %75, i1 false), !tbaa !7
  %76 = add i32 %54, %57
  br label %77

77:                                               ; preds = %69, %67
  %78 = phi i32 [ %54, %67 ], [ %76, %69 ]
  %79 = add nuw nsw i64 %53, 1
  %80 = icmp eq i64 %79, 17
  br i1 %80, label %81, label %52, !llvm.loop !450

81:                                               ; preds = %77
  %82 = sext i32 %78 to i64
  %83 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %82
  store i8 0, i8* %83, align 1, !tbaa !7
  %84 = load i8, i8* %7, align 16, !tbaa !7
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %128, label %86

86:                                               ; preds = %81
  %87 = sext i8 %84 to i32
  br label %88

88:                                               ; preds = %86, %121
  %89 = phi i8 [ %84, %86 ], [ %126, %121 ]
  %90 = phi i32 [ 0, %86 ], [ %122, %121 ]
  %91 = phi i32 [ 0, %86 ], [ %110, %121 ]
  %92 = phi i32 [ %87, %86 ], [ %123, %121 ]
  %93 = sext i8 %89 to i32
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %95, label %109

95:                                               ; preds = %88
  %96 = sext i32 %91 to i64
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %96, %95 ], [ %100, %97 ]
  %99 = phi i32 [ %90, %95 ], [ %102, %97 ]
  %100 = add i64 %98, 1
  %101 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %98
  store i32 %99, i32* %101, align 4, !tbaa !32
  %102 = add i32 %99, 1
  %103 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %100
  %104 = load i8, i8* %103, align 1, !tbaa !7
  %105 = sext i8 %104 to i32
  %106 = icmp eq i32 %92, %105
  br i1 %106, label %97, label %107, !llvm.loop !451

107:                                              ; preds = %97
  %108 = trunc i64 %100 to i32
  br label %109

109:                                              ; preds = %107, %88
  %110 = phi i32 [ %91, %88 ], [ %108, %107 ]
  %111 = phi i32 [ %90, %88 ], [ %102, %107 ]
  %112 = zext i32 %111 to i64
  %113 = zext i32 %92 to i64
  %114 = shl nuw i64 1, %113
  %115 = icmp sgt i64 %114, %112
  br i1 %115, label %121, label %116

116:                                              ; preds = %109
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 5
  store i32 8, i32* %118, align 8, !tbaa !19
  %119 = bitcast %struct.jpeg_error_mgr* %117 to void (%struct.jpeg_common_struct*, ...)**
  %120 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %119, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %120(%struct.jpeg_common_struct* noundef %50) #27
  br label %121

121:                                              ; preds = %116, %109
  %122 = shl i32 %111, 1
  %123 = add nsw i32 %92, 1
  %124 = sext i32 %110 to i64
  %125 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1, !tbaa !7
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %88, !llvm.loop !452

128:                                              ; preds = %121, %81
  %129 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %49, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(256) %129, i8 0, i64 256, i1 false)
  %130 = select i1 %20, i32 255, i32 15
  %131 = icmp sgt i32 %78, 0
  br i1 %131, label %132, label %162

132:                                              ; preds = %128
  %133 = zext i32 %78 to i64
  br label %134

134:                                              ; preds = %132, %152
  %135 = phi i64 [ 0, %132 ], [ %160, %152 ]
  %136 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %25, i64 0, i32 1, i64 %135
  %137 = load i16, i16* %136, align 2, !tbaa !96
  %138 = icmp slt i16 %137, 0
  %139 = sext i16 %137 to i32
  %140 = icmp slt i32 %130, %139
  %141 = or i1 %138, %140
  br i1 %141, label %147, label %142

142:                                              ; preds = %134
  %143 = zext i16 %137 to i64
  %144 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %49, i64 0, i32 1, i64 %143
  %145 = load i8, i8* %144, align 1, !tbaa !7
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %142, %134
  %148 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %51, align 8, !tbaa !8
  %149 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %148, i64 0, i32 5
  store i32 8, i32* %149, align 8, !tbaa !19
  %150 = bitcast %struct.jpeg_error_mgr* %148 to void (%struct.jpeg_common_struct*, ...)**
  %151 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %150, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %151(%struct.jpeg_common_struct* noundef %50) #27
  br label %152

152:                                              ; preds = %147, %142
  %153 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %135
  %154 = load i32, i32* %153, align 4, !tbaa !32
  %155 = sext i16 %137 to i64
  %156 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %49, i64 0, i32 0, i64 %155
  store i32 %154, i32* %156, align 4, !tbaa !32
  %157 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %135
  %158 = load i8, i8* %157, align 1, !tbaa !7
  %159 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %49, i64 0, i32 1, i64 %155
  store i8 %158, i8* %159, align 1, !tbaa !7
  %160 = add nuw nsw i64 %135, 1
  %161 = icmp eq i64 %160, %133
  br i1 %161, label %162, label %134, !llvm.loop !453

162:                                              ; preds = %152, %128
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %8) #27
  call void @llvm.lifetime.end.p0i8(i64 257, i8* nonnull %7) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* noundef %0, %struct.JHUFF_TBL* nocapture noundef writeonly %1, i64* nocapture noundef %2) local_unnamed_addr #2 {
  %4 = alloca [33 x i16], align 16
  %5 = alloca [257 x i32], align 16
  %6 = alloca [257 x i32], align 16
  %7 = bitcast [257 x i32]* %6 to i8*
  %8 = bitcast [33 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %8) #27
  %9 = bitcast [257 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %9) #27
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %7) #27
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(66) %8, i8 0, i64 66, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1028) %9, i8 0, i64 1028, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1028) %7, i8 -1, i64 1028, i1 false), !tbaa !32
  %10 = getelementptr inbounds i64, i64* %2, i64 256
  store i64 1, i64* %10, align 8, !tbaa !35
  br label %13

11:                                               ; preds = %13
  %12 = zext i32 %23 to i64
  br label %31

13:                                               ; preds = %27, %3
  %14 = phi i64 [ 0, %3 ], [ %28, %27 ]
  %15 = phi i64 [ 1000000000, %3 ], [ %29, %27 ]
  %16 = phi i32 [ -1, %3 ], [ %30, %27 ]
  %17 = getelementptr inbounds i64, i64* %2, i64 %14
  %18 = load i64, i64* %17, align 8, !tbaa !35
  %19 = icmp eq i64 %18, 0
  %20 = icmp sgt i64 %18, %15
  %21 = select i1 %19, i1 true, i1 %20
  %22 = trunc i64 %14 to i32
  %23 = select i1 %21, i32 %16, i32 %22
  %24 = select i1 %21, i64 %15, i64 %18
  %25 = add nuw nsw i64 %14, 1
  %26 = icmp eq i64 %25, 257
  br i1 %26, label %11, label %27

27:                                               ; preds = %100, %13, %90
  %28 = phi i64 [ %25, %13 ], [ 0, %90 ], [ 0, %100 ]
  %29 = phi i64 [ %24, %13 ], [ 1000000000, %90 ], [ 1000000000, %100 ]
  %30 = phi i32 [ %23, %13 ], [ -1, %90 ], [ -1, %100 ]
  br label %13, !llvm.loop !454

31:                                               ; preds = %47, %11
  %32 = phi i64 [ 0, %11 ], [ %58, %47 ]
  %33 = phi i64 [ 1000000000, %11 ], [ %57, %47 ]
  %34 = phi i32 [ -1, %11 ], [ %56, %47 ]
  %35 = getelementptr inbounds i64, i64* %2, i64 %32
  %36 = load i64, i64* %35, align 8, !tbaa !35
  %37 = icmp eq i64 %36, 0
  %38 = icmp sgt i64 %36, %33
  %39 = select i1 %37, i1 true, i1 %38
  %40 = icmp eq i64 %32, %12
  %41 = select i1 %39, i1 true, i1 %40
  %42 = trunc i64 %32 to i32
  %43 = select i1 %41, i32 %34, i32 %42
  %44 = select i1 %41, i64 %33, i64 %36
  %45 = or i64 %32, 1
  %46 = icmp eq i64 %45, 257
  br i1 %46, label %59, label %47, !llvm.loop !455

47:                                               ; preds = %31
  %48 = getelementptr inbounds i64, i64* %2, i64 %45
  %49 = load i64, i64* %48, align 8, !tbaa !35
  %50 = icmp eq i64 %49, 0
  %51 = icmp sgt i64 %49, %44
  %52 = select i1 %50, i1 true, i1 %51
  %53 = icmp eq i64 %45, %12
  %54 = select i1 %52, i1 true, i1 %53
  %55 = trunc i64 %45 to i32
  %56 = select i1 %54, i32 %43, i32 %55
  %57 = select i1 %54, i64 %44, i64 %49
  %58 = add nuw nsw i64 %32, 2
  br label %31

59:                                               ; preds = %31
  %60 = icmp slt i32 %43, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %63 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %110

64:                                               ; preds = %59
  %65 = zext i32 %43 to i64
  %66 = getelementptr inbounds i64, i64* %2, i64 %65
  %67 = load i64, i64* %66, align 8, !tbaa !35
  %68 = sext i32 %23 to i64
  %69 = getelementptr inbounds i64, i64* %2, i64 %68
  %70 = load i64, i64* %69, align 8, !tbaa !35
  %71 = add nsw i64 %70, %67
  store i64 %71, i64* %69, align 8, !tbaa !35
  store i64 0, i64* %66, align 8, !tbaa !35
  %72 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %68
  %73 = load i32, i32* %72, align 4, !tbaa !32
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 4, !tbaa !32
  %75 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %68
  %76 = load i32, i32* %75, align 4, !tbaa !32
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %90

78:                                               ; preds = %64, %78
  %79 = phi i32 [ %86, %78 ], [ %76, %64 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4, !tbaa !32
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 4, !tbaa !32
  %84 = zext i32 %79 to i64
  %85 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4, !tbaa !32
  %87 = icmp sgt i32 %86, -1
  br i1 %87, label %78, label %88, !llvm.loop !456

88:                                               ; preds = %78
  %89 = zext i32 %79 to i64
  br label %90

90:                                               ; preds = %88, %64
  %91 = phi i64 [ %68, %64 ], [ %89, %88 ]
  %92 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %91
  store i32 %43, i32* %92, align 4, !tbaa !32
  %93 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %65
  %94 = load i32, i32* %93, align 4, !tbaa !32
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %93, align 4, !tbaa !32
  %96 = sext i32 %43 to i64
  %97 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4, !tbaa !32
  %99 = icmp sgt i32 %98, -1
  br i1 %99, label %100, label %27

100:                                              ; preds = %90, %100
  %101 = phi i32 [ %108, %100 ], [ %98, %90 ]
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4, !tbaa !32
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %103, align 4, !tbaa !32
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4, !tbaa !32
  %109 = icmp sgt i32 %108, -1
  br i1 %109, label %100, label %27, !llvm.loop !457

110:                                              ; preds = %61, %127
  %111 = phi i64 [ 0, %61 ], [ %128, %127 ]
  %112 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4, !tbaa !32
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %127, label %115

115:                                              ; preds = %110
  %116 = icmp sgt i32 %113, 32
  br i1 %116, label %117, label %122

117:                                              ; preds = %115
  %118 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %62, align 8, !tbaa !8
  %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i64 0, i32 5
  store i32 39, i32* %119, align 8, !tbaa !19
  %120 = bitcast %struct.jpeg_error_mgr* %118 to void (%struct.jpeg_common_struct*, ...)**
  %121 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %120, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %121(%struct.jpeg_common_struct* noundef %63) #27
  br label %122

122:                                              ; preds = %117, %115
  %123 = sext i32 %113 to i64
  %124 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %123
  %125 = load i16, i16* %124, align 2, !tbaa !96
  %126 = add i16 %125, 1
  store i16 %126, i16* %124, align 2, !tbaa !96
  br label %127

127:                                              ; preds = %110, %122
  %128 = add nuw nsw i64 %111, 1
  %129 = icmp eq i64 %128, 257
  br i1 %129, label %130, label %110, !llvm.loop !458

130:                                              ; preds = %127, %162
  %131 = phi i64 [ %136, %162 ], [ 32, %127 ]
  %132 = phi i64 [ %164, %162 ], [ 30, %127 ]
  %133 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %131
  %134 = load i16, i16* %133, align 2, !tbaa !96
  %135 = icmp sgt i16 %134, 0
  %136 = add nsw i64 %131, -1
  br i1 %135, label %137, label %162

137:                                              ; preds = %130
  %138 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %136
  br label %139

139:                                              ; preds = %137, %147
  %140 = phi i16 [ %134, %137 ], [ %160, %147 ]
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ %146, %141 ], [ %132, %139 ]
  %143 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %142
  %144 = load i16, i16* %143, align 2, !tbaa !96
  %145 = icmp eq i16 %144, 0
  %146 = add i64 %142, -1
  br i1 %145, label %141, label %147, !llvm.loop !459

147:                                              ; preds = %141
  %148 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %142
  %149 = add i16 %140, -2
  store i16 %149, i16* %133, align 2, !tbaa !96
  %150 = load i16, i16* %138, align 2, !tbaa !96
  %151 = add i16 %150, 1
  store i16 %151, i16* %138, align 2, !tbaa !96
  %152 = shl i64 %142, 32
  %153 = add i64 %152, 4294967296
  %154 = ashr exact i64 %153, 32
  %155 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %154
  %156 = load i16, i16* %155, align 2, !tbaa !96
  %157 = add i16 %156, 2
  store i16 %157, i16* %155, align 2, !tbaa !96
  %158 = load i16, i16* %148, align 2, !tbaa !96
  %159 = add i16 %158, -1
  store i16 %159, i16* %148, align 2, !tbaa !96
  %160 = load i16, i16* %133, align 2, !tbaa !96
  %161 = icmp sgt i16 %160, 0
  br i1 %161, label %139, label %162, !llvm.loop !460

162:                                              ; preds = %147, %130
  %163 = icmp ugt i64 %131, 17
  %164 = add nsw i64 %132, -1
  br i1 %163, label %130, label %165, !llvm.loop !461

165:                                              ; preds = %162, %165
  %166 = phi i64 [ %170, %165 ], [ 16, %162 ]
  %167 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %166
  %168 = load i16, i16* %167, align 2, !tbaa !96
  %169 = icmp eq i16 %168, 0
  %170 = add i64 %166, -1
  br i1 %169, label %165, label %171, !llvm.loop !462

171:                                              ; preds = %165
  %172 = getelementptr inbounds [33 x i16], [33 x i16]* %4, i64 0, i64 %166
  %173 = add i16 %168, -1
  store i16 %173, i16* %172, align 2, !tbaa !96
  %174 = bitcast %struct.JHUFF_TBL* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(34) %174, i8* noundef nonnull align 16 dereferenceable(34) %8, i64 34, i1 false)
  br label %175

175:                                              ; preds = %171, %204
  %176 = phi i32 [ 1, %171 ], [ %205, %204 ]
  %177 = phi i32 [ 0, %171 ], [ %201, %204 ]
  br label %178

178:                                              ; preds = %200, %175
  %179 = phi i64 [ 0, %175 ], [ %202, %200 ]
  %180 = phi i32 [ %177, %175 ], [ %201, %200 ]
  %181 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %179
  %182 = load i32, i32* %181, align 8, !tbaa !32
  %183 = icmp eq i32 %182, %176
  br i1 %183, label %184, label %189

184:                                              ; preds = %178
  %185 = trunc i64 %179 to i16
  %186 = sext i32 %180 to i64
  %187 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %186
  store i16 %185, i16* %187, align 2, !tbaa !96
  %188 = add nsw i32 %180, 1
  br label %189

189:                                              ; preds = %178, %184
  %190 = phi i32 [ %188, %184 ], [ %180, %178 ]
  %191 = or i64 %179, 1
  %192 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %191
  %193 = load i32, i32* %192, align 4, !tbaa !32
  %194 = icmp eq i32 %193, %176
  br i1 %194, label %195, label %200

195:                                              ; preds = %189
  %196 = trunc i64 %191 to i16
  %197 = sext i32 %190 to i64
  %198 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %197
  store i16 %196, i16* %198, align 2, !tbaa !96
  %199 = add nsw i32 %190, 1
  br label %200

200:                                              ; preds = %195, %189
  %201 = phi i32 [ %199, %195 ], [ %190, %189 ]
  %202 = add nuw nsw i64 %179, 2
  %203 = icmp eq i64 %202, 256
  br i1 %203, label %204, label %178, !llvm.loop !463

204:                                              ; preds = %200
  %205 = add nuw nsw i32 %176, 1
  %206 = icmp eq i32 %205, 33
  br i1 %206, label %207, label %175, !llvm.loop !464

207:                                              ; preds = %204
  %208 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 2
  store i32 0, i32* %208, align 4, !tbaa !162
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %7) #27
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %9) #27
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %8) #27
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_huff_encoder(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 192) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %9 = bitcast %struct.jpeg_entropy_encoder** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !273
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32)* @start_pass_huff to void (...)*), void (...)** %10, align 8, !tbaa !465
  %11 = getelementptr inbounds i8, i8* %7, i64 64
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(128) %11, i8 0, i64 128, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_pass_huff(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.huff_entropy_encoder**
  %5 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = icmp eq i32 %1, 0
  %7 = select i1 %6, i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_huff to i32 (...)*), i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_gather to i32 (...)*)
  %8 = select i1 %6, void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @finish_pass_huff to void (...)*), void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @finish_pass_gather to void (...)*)
  %9 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 0, i32 1
  store i32 (...)* %7, i32 (...)** %9, align 8
  %10 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 0, i32 2
  store void (...)* %8, void (...)** %10, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %12 = load i32, i32* %11, align 4, !tbaa !286
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %82

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %16 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %19 = bitcast %struct.jpeg_memory_mgr** %18 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  br label %20

20:                                               ; preds = %14, %76
  %21 = phi i64 [ 0, %14 ], [ %78, %76 ]
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %21
  %23 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %22, align 8, !tbaa !3
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 5
  %25 = load i32, i32* %24, align 4, !tbaa !318
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 6
  %27 = load i32, i32* %26, align 8, !tbaa !204
  br i1 %6, label %71, label %28

28:                                               ; preds = %20
  %29 = icmp ugt i32 %25, 3
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 5
  store i32 50, i32* %32, align 8, !tbaa !19
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 6, i32 0, i64 0
  store i32 %25, i32* %33, align 4, !tbaa !7
  %34 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %16, align 8, !tbaa !8
  %35 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %34, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %35(%struct.jpeg_common_struct* noundef nonnull %17) #27
  br label %36

36:                                               ; preds = %28, %30
  %37 = icmp ugt i32 %27, 3
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 50, i32* %40, align 8, !tbaa !19
  %41 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 6, i32 0, i64 0
  store i32 %27, i32* %41, align 4, !tbaa !7
  %42 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %16, align 8, !tbaa !8
  %43 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %42, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %43(%struct.jpeg_common_struct* noundef nonnull %17) #27
  br label %44

44:                                               ; preds = %36, %38
  %45 = sext i32 %25 to i64
  %46 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 6, i64 %45
  %47 = load i64*, i64** %46, align 8, !tbaa !3
  %48 = icmp eq i64* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = bitcast i64* %47 to i8*
  br label %56

51:                                               ; preds = %44
  %52 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %19, align 8, !tbaa !36
  %53 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %52, align 8, !tbaa !44
  %54 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %53(%struct.jpeg_common_struct* noundef nonnull %17, i32 noundef 1, i64 noundef 2056) #27
  %55 = bitcast i64** %46 to i8**
  store i8* %54, i8** %55, align 8, !tbaa !3
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i8* [ %54, %51 ], [ %50, %49 ]
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(2056) %57, i8 0, i64 2056, i1 false)
  %58 = sext i32 %27 to i64
  %59 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 7, i64 %58
  %60 = load i64*, i64** %59, align 8, !tbaa !3
  %61 = icmp eq i64* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %56
  %63 = bitcast i64* %60 to i8*
  br label %69

64:                                               ; preds = %56
  %65 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %19, align 8, !tbaa !36
  %66 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %65, align 8, !tbaa !44
  %67 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %66(%struct.jpeg_common_struct* noundef nonnull %17, i32 noundef 1, i64 noundef 2056) #27
  %68 = bitcast i64** %59 to i8**
  store i8* %67, i8** %68, align 8, !tbaa !3
  br label %69

69:                                               ; preds = %62, %64
  %70 = phi i8* [ %67, %64 ], [ %63, %62 ]
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(2056) %70, i8 0, i64 2056, i1 false)
  br label %76

71:                                               ; preds = %20
  %72 = sext i32 %25 to i64
  %73 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 4, i64 %72
  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 1, i32 noundef %25, %struct.c_derived_tbl** noundef nonnull %73)
  %74 = sext i32 %27 to i64
  %75 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 5, i64 %74
  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef 0, i32 noundef %27, %struct.c_derived_tbl** noundef nonnull %75)
  br label %76

76:                                               ; preds = %71, %69
  %77 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %21
  store i32 0, i32* %77, align 4, !tbaa !32
  %78 = add nuw nsw i64 %21, 1
  %79 = load i32, i32* %11, align 4, !tbaa !286
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %78, %80
  br i1 %81, label %20, label %82, !llvm.loop !468

82:                                               ; preds = %76, %2
  %83 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 0
  store i64 0, i64* %83, align 8, !tbaa !469
  %84 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 1
  store i32 0, i32* %84, align 8, !tbaa !470
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %86 = load i32, i32* %85, align 8, !tbaa !40
  %87 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 2
  store i32 %86, i32* %87, align 8, !tbaa !471
  %88 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 3
  store i32 0, i32* %88, align 4, !tbaa !472
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_huff(%struct.jpeg_compress_struct* noundef %0, [64 x i16]** nocapture noundef readonly %1) #2 {
  %3 = alloca %struct.working_state, align 8
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %5 = bitcast %struct.jpeg_entropy_encoder** %4 to %struct.huff_entropy_encoder**
  %6 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8, !tbaa !273
  %7 = bitcast %struct.working_state* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %9 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8, !tbaa !156
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !314
  %12 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 0
  store i8* %11, i8** %12, align 8, !tbaa !473
  %13 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !tbaa !315
  %15 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 1
  store i64 %14, i64* %15, align 8, !tbaa !475
  %16 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2
  %17 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 1
  %18 = bitcast %struct.savable_state* %16 to i8*
  %19 = bitcast %struct.savable_state* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %18, i8* noundef nonnull align 8 dereferenceable(32) %19, i64 32, i1 false), !tbaa.struct !476
  %20 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 3
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %22 = load i32, i32* %21, align 8, !tbaa !40
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %153, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 2
  %26 = load i32, i32* %25, align 8, !tbaa !471
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %153

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 3
  %30 = load i32, i32* %29, align 4, !tbaa !472
  %31 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 1
  %32 = load i32, i32* %31, align 8, !tbaa !478
  %33 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 0
  %34 = icmp sgt i32 %32, 0
  br i1 %34, label %35, label %97

35:                                               ; preds = %28
  %36 = sub nsw i32 17, %32
  %37 = zext i32 %36 to i64
  %38 = shl i64 127, %37
  %39 = load i64, i64* %33, align 8, !tbaa !479
  %40 = or i64 %39, %38
  %41 = add nuw nsw i32 %32, 7
  br label %42

42:                                               ; preds = %91, %35
  %43 = phi i8* [ %11, %35 ], [ %94, %91 ]
  %44 = phi i32 [ %41, %35 ], [ %92, %91 ]
  %45 = phi i64 [ %40, %35 ], [ %93, %91 ]
  %46 = lshr i64 %45, 16
  %47 = trunc i64 %46 to i8
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %48, i8** %12, align 8, !tbaa !473
  store i8 %47, i8* %43, align 1, !tbaa !7
  %49 = load i64, i64* %15, align 8, !tbaa !475
  %50 = add i64 %49, -1
  store i64 %50, i64* %15, align 8, !tbaa !475
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %42
  %53 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %54 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %53, i64 0, i32 6
  %55 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %54, align 8, !tbaa !156
  %56 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %55, i64 0, i32 3
  %57 = bitcast i32 (...)** %56 to i32 (%struct.jpeg_compress_struct*, ...)**
  %58 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %57, align 8, !tbaa !316
  %59 = tail call i32 (%struct.jpeg_compress_struct*, ...) %58(%struct.jpeg_compress_struct* noundef %53) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %778, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %55, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8, !tbaa !314
  store i8* %63, i8** %12, align 8, !tbaa !473
  %64 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %55, i64 0, i32 1
  %65 = load i64, i64* %64, align 8, !tbaa !315
  store i64 %65, i64* %15, align 8, !tbaa !475
  br label %66

66:                                               ; preds = %61, %42
  %67 = and i64 %45, 16711680
  %68 = icmp eq i64 %67, 16711680
  br i1 %68, label %69, label %89

69:                                               ; preds = %66
  %70 = load i8*, i8** %12, align 8, !tbaa !473
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  store i8* %71, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %70, align 1, !tbaa !7
  %72 = load i64, i64* %15, align 8, !tbaa !475
  %73 = add i64 %72, -1
  store i64 %73, i64* %15, align 8, !tbaa !475
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %89

75:                                               ; preds = %69
  %76 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %76, i64 0, i32 6
  %78 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %77, align 8, !tbaa !156
  %79 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %78, i64 0, i32 3
  %80 = bitcast i32 (...)** %79 to i32 (%struct.jpeg_compress_struct*, ...)**
  %81 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %80, align 8, !tbaa !316
  %82 = tail call i32 (%struct.jpeg_compress_struct*, ...) %81(%struct.jpeg_compress_struct* noundef %76) #27
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %778, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %78, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8, !tbaa !314
  store i8* %86, i8** %12, align 8, !tbaa !473
  %87 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %78, i64 0, i32 1
  %88 = load i64, i64* %87, align 8, !tbaa !315
  store i64 %88, i64* %15, align 8, !tbaa !475
  br label %89

89:                                               ; preds = %84, %69, %66
  %90 = icmp sgt i32 %44, 15
  br i1 %90, label %91, label %95, !llvm.loop !480

91:                                               ; preds = %89
  %92 = add nsw i32 %44, -8
  %93 = shl i64 %45, 8
  %94 = load i8*, i8** %12, align 8, !tbaa !473
  br label %42

95:                                               ; preds = %89
  %96 = load i8*, i8** %12, align 8, !tbaa !473
  br label %97

97:                                               ; preds = %95, %28
  %98 = phi i8* [ %96, %95 ], [ %11, %28 ]
  store i64 0, i64* %33, align 8, !tbaa !479
  store i32 0, i32* %31, align 8, !tbaa !478
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  store i8* %99, i8** %12, align 8, !tbaa !473
  store i8 -1, i8* %98, align 1, !tbaa !7
  %100 = load i64, i64* %15, align 8, !tbaa !475
  %101 = add i64 %100, -1
  store i64 %101, i64* %15, align 8, !tbaa !475
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %97
  %104 = load i8*, i8** %12, align 8, !tbaa !473
  br label %119

105:                                              ; preds = %97
  %106 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %106, i64 0, i32 6
  %108 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %107, align 8, !tbaa !156
  %109 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %108, i64 0, i32 3
  %110 = bitcast i32 (...)** %109 to i32 (%struct.jpeg_compress_struct*, ...)**
  %111 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %110, align 8, !tbaa !316
  %112 = tail call i32 (%struct.jpeg_compress_struct*, ...) %111(%struct.jpeg_compress_struct* noundef %106) #27
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %778, label %114

114:                                              ; preds = %105
  %115 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %108, i64 0, i32 0
  %116 = load i8*, i8** %115, align 8, !tbaa !314
  %117 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %108, i64 0, i32 1
  %118 = load i64, i64* %117, align 8, !tbaa !315
  store i64 %118, i64* %15, align 8, !tbaa !475
  br label %119

119:                                              ; preds = %114, %103
  %120 = phi i8* [ %104, %103 ], [ %116, %114 ]
  %121 = trunc i32 %30 to i8
  %122 = add i8 %121, -48
  %123 = getelementptr inbounds i8, i8* %120, i64 1
  store i8* %123, i8** %12, align 8, !tbaa !473
  store i8 %122, i8* %120, align 1, !tbaa !7
  %124 = load i64, i64* %15, align 8, !tbaa !475
  %125 = add i64 %124, -1
  store i64 %125, i64* %15, align 8, !tbaa !475
  %126 = icmp eq i64 %125, 0
  %127 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  br i1 %126, label %128, label %141

128:                                              ; preds = %119
  %129 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %127, i64 0, i32 6
  %130 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %129, align 8, !tbaa !156
  %131 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %130, i64 0, i32 3
  %132 = bitcast i32 (...)** %131 to i32 (%struct.jpeg_compress_struct*, ...)**
  %133 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %132, align 8, !tbaa !316
  %134 = tail call i32 (%struct.jpeg_compress_struct*, ...) %133(%struct.jpeg_compress_struct* noundef %127) #27
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %778, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %130, i64 0, i32 0
  %138 = load i8*, i8** %137, align 8, !tbaa !314
  store i8* %138, i8** %12, align 8, !tbaa !473
  %139 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %130, i64 0, i32 1
  %140 = load i64, i64* %139, align 8, !tbaa !315
  store i64 %140, i64* %15, align 8, !tbaa !475
  br label %141

141:                                              ; preds = %119, %136
  %142 = phi i64 [ %140, %136 ], [ %125, %119 ]
  %143 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %127, i64 0, i32 44
  %144 = load i32, i32* %143, align 4, !tbaa !286
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %141, %146
  %147 = phi i64 [ %149, %146 ], [ 0, %141 ]
  %148 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 2, i64 %147
  store i32 0, i32* %148, align 4, !tbaa !32
  %149 = add nuw nsw i64 %147, 1
  %150 = load i32, i32* %143, align 4, !tbaa !286
  %151 = sext i32 %150 to i64
  %152 = icmp slt i64 %149, %151
  br i1 %152, label %146, label %153, !llvm.loop !481

153:                                              ; preds = %146, %141, %24, %2
  %154 = phi i64 [ %142, %141 ], [ %14, %24 ], [ %14, %2 ], [ %142, %146 ]
  %155 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  %156 = load i32, i32* %155, align 8, !tbaa !297
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %758

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 1
  %160 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 0
  br label %161

161:                                              ; preds = %158, %748
  %162 = phi i64 [ %154, %158 ], [ %749, %748 ]
  %163 = phi i64 [ 0, %158 ], [ %754, %748 ]
  %164 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %163
  %165 = load i32, i32* %164, align 4, !tbaa !32
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %166
  %168 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %167, align 8, !tbaa !3
  %169 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %163
  %170 = load [64 x i16]*, [64 x i16]** %169, align 8, !tbaa !3
  %171 = getelementptr inbounds [64 x i16], [64 x i16]* %170, i64 0, i64 0
  %172 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 2, i64 %166
  %173 = load i32, i32* %172, align 4, !tbaa !32
  %174 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %168, i64 0, i32 5
  %175 = load i32, i32* %174, align 4, !tbaa !318
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 4, i64 %176
  %178 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %177, align 8, !tbaa !3
  %179 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %168, i64 0, i32 6
  %180 = load i32, i32* %179, align 8, !tbaa !204
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 5, i64 %181
  %183 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %182, align 8, !tbaa !3
  %184 = load i16, i16* %171, align 2, !tbaa !96
  %185 = sext i16 %184 to i32
  %186 = sub nsw i32 %185, %173
  %187 = ashr i32 %186, 31
  %188 = add nsw i32 %187, %186
  %189 = icmp eq i32 %186, 0
  br i1 %189, label %208, label %190

190:                                              ; preds = %161
  %191 = tail call i32 @llvm.abs.i32(i32 %186, i1 true) #27
  br label %192

192:                                              ; preds = %192, %190
  %193 = phi i32 [ %195, %192 ], [ 0, %190 ]
  %194 = phi i32 [ %196, %192 ], [ %191, %190 ]
  %195 = add nuw nsw i32 %193, 1
  %196 = lshr i32 %194, 1
  %197 = icmp ult i32 %194, 2
  br i1 %197, label %198, label %192, !llvm.loop !482

198:                                              ; preds = %192
  %199 = icmp ugt i32 %193, 10
  br i1 %199, label %200, label %208

200:                                              ; preds = %198
  %201 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %202 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %201, i64 0, i32 0
  %203 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %202, align 8, !tbaa !8
  %204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %203, i64 0, i32 5
  store i32 6, i32* %204, align 8, !tbaa !19
  %205 = bitcast %struct.jpeg_error_mgr* %203 to void (%struct.jpeg_common_struct*, ...)**
  %206 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %205, align 8, !tbaa !20
  %207 = bitcast %struct.jpeg_compress_struct* %201 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %206(%struct.jpeg_common_struct* noundef %207) #27
  br label %208

208:                                              ; preds = %200, %198, %161
  %209 = phi i32 [ %195, %200 ], [ %195, %198 ], [ 0, %161 ]
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %178, i64 0, i32 0, i64 %210
  %212 = load i32, i32* %211, align 4, !tbaa !32
  %213 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %178, i64 0, i32 1, i64 %210
  %214 = load i8, i8* %213, align 1, !tbaa !7
  %215 = sext i8 %214 to i32
  %216 = zext i32 %212 to i64
  %217 = load i32, i32* %159, align 8, !tbaa !478
  %218 = icmp eq i8 %214, 0
  br i1 %218, label %219, label %227

219:                                              ; preds = %208
  %220 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %221 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %220, i64 0, i32 0
  %222 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %221, align 8, !tbaa !8
  %223 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %222, i64 0, i32 5
  store i32 40, i32* %223, align 8, !tbaa !19
  %224 = bitcast %struct.jpeg_error_mgr* %222 to void (%struct.jpeg_common_struct*, ...)**
  %225 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %224, align 8, !tbaa !20
  %226 = bitcast %struct.jpeg_compress_struct* %220 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %225(%struct.jpeg_common_struct* noundef %226) #27
  br label %227

227:                                              ; preds = %219, %208
  %228 = zext i32 %215 to i64
  %229 = shl nsw i64 -1, %228
  %230 = xor i64 %229, -1
  %231 = and i64 %230, %216
  %232 = add nsw i32 %217, %215
  %233 = sub nsw i32 24, %232
  %234 = zext i32 %233 to i64
  %235 = shl i64 %231, %234
  %236 = load i64, i64* %160, align 8, !tbaa !479
  %237 = or i64 %236, %235
  %238 = icmp sgt i32 %232, 7
  br i1 %238, label %239, label %292

239:                                              ; preds = %227, %287
  %240 = phi i32 [ %290, %287 ], [ %232, %227 ]
  %241 = phi i64 [ %289, %287 ], [ %237, %227 ]
  %242 = lshr i64 %241, 16
  %243 = trunc i64 %242 to i8
  %244 = load i8*, i8** %12, align 8, !tbaa !473
  %245 = getelementptr inbounds i8, i8* %244, i64 1
  store i8* %245, i8** %12, align 8, !tbaa !473
  store i8 %243, i8* %244, align 1, !tbaa !7
  %246 = load i64, i64* %15, align 8, !tbaa !475
  %247 = add i64 %246, -1
  store i64 %247, i64* %15, align 8, !tbaa !475
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %263

249:                                              ; preds = %239
  %250 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %251 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %250, i64 0, i32 6
  %252 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %251, align 8, !tbaa !156
  %253 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %252, i64 0, i32 3
  %254 = bitcast i32 (...)** %253 to i32 (%struct.jpeg_compress_struct*, ...)**
  %255 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %254, align 8, !tbaa !316
  %256 = tail call i32 (%struct.jpeg_compress_struct*, ...) %255(%struct.jpeg_compress_struct* noundef %250) #27
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %778, label %258

258:                                              ; preds = %249
  %259 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %252, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8, !tbaa !314
  store i8* %260, i8** %12, align 8, !tbaa !473
  %261 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %252, i64 0, i32 1
  %262 = load i64, i64* %261, align 8, !tbaa !315
  store i64 %262, i64* %15, align 8, !tbaa !475
  br label %263

263:                                              ; preds = %258, %239
  %264 = phi i64 [ %262, %258 ], [ %247, %239 ]
  %265 = and i64 %241, 16711680
  %266 = icmp eq i64 %265, 16711680
  br i1 %266, label %267, label %287

267:                                              ; preds = %263
  %268 = load i8*, i8** %12, align 8, !tbaa !473
  %269 = getelementptr inbounds i8, i8* %268, i64 1
  store i8* %269, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %268, align 1, !tbaa !7
  %270 = load i64, i64* %15, align 8, !tbaa !475
  %271 = add i64 %270, -1
  store i64 %271, i64* %15, align 8, !tbaa !475
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %287

273:                                              ; preds = %267
  %274 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %275 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %274, i64 0, i32 6
  %276 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %275, align 8, !tbaa !156
  %277 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %276, i64 0, i32 3
  %278 = bitcast i32 (...)** %277 to i32 (%struct.jpeg_compress_struct*, ...)**
  %279 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %278, align 8, !tbaa !316
  %280 = tail call i32 (%struct.jpeg_compress_struct*, ...) %279(%struct.jpeg_compress_struct* noundef %274) #27
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %778, label %282

282:                                              ; preds = %273
  %283 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %276, i64 0, i32 0
  %284 = load i8*, i8** %283, align 8, !tbaa !314
  store i8* %284, i8** %12, align 8, !tbaa !473
  %285 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %276, i64 0, i32 1
  %286 = load i64, i64* %285, align 8, !tbaa !315
  store i64 %286, i64* %15, align 8, !tbaa !475
  br label %287

287:                                              ; preds = %282, %267, %263
  %288 = phi i64 [ %286, %282 ], [ %271, %267 ], [ %264, %263 ]
  %289 = shl i64 %241, 8
  %290 = add nsw i32 %240, -8
  %291 = icmp sgt i32 %240, 15
  br i1 %291, label %239, label %292, !llvm.loop !480

292:                                              ; preds = %287, %227
  %293 = phi i64 [ %162, %227 ], [ %288, %287 ]
  %294 = phi i64 [ %237, %227 ], [ %289, %287 ]
  %295 = phi i32 [ %232, %227 ], [ %290, %287 ]
  store i64 %294, i64* %160, align 8, !tbaa !479
  store i32 %295, i32* %159, align 8, !tbaa !478
  %296 = icmp eq i32 %209, 0
  br i1 %296, label %365, label %297

297:                                              ; preds = %292
  %298 = zext i32 %188 to i64
  %299 = shl nsw i64 -1, %210
  %300 = xor i64 %299, -1
  %301 = and i64 %300, %298
  %302 = add nsw i32 %295, %209
  %303 = sub nsw i32 24, %302
  %304 = zext i32 %303 to i64
  %305 = shl i64 %301, %304
  %306 = or i64 %305, %294
  %307 = icmp sgt i32 %302, 7
  br i1 %307, label %308, label %361

308:                                              ; preds = %297, %356
  %309 = phi i32 [ %359, %356 ], [ %302, %297 ]
  %310 = phi i64 [ %358, %356 ], [ %306, %297 ]
  %311 = lshr i64 %310, 16
  %312 = trunc i64 %311 to i8
  %313 = load i8*, i8** %12, align 8, !tbaa !473
  %314 = getelementptr inbounds i8, i8* %313, i64 1
  store i8* %314, i8** %12, align 8, !tbaa !473
  store i8 %312, i8* %313, align 1, !tbaa !7
  %315 = load i64, i64* %15, align 8, !tbaa !475
  %316 = add i64 %315, -1
  store i64 %316, i64* %15, align 8, !tbaa !475
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %332

318:                                              ; preds = %308
  %319 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %320 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %319, i64 0, i32 6
  %321 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %320, align 8, !tbaa !156
  %322 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %321, i64 0, i32 3
  %323 = bitcast i32 (...)** %322 to i32 (%struct.jpeg_compress_struct*, ...)**
  %324 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %323, align 8, !tbaa !316
  %325 = tail call i32 (%struct.jpeg_compress_struct*, ...) %324(%struct.jpeg_compress_struct* noundef %319) #27
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %778, label %327

327:                                              ; preds = %318
  %328 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %321, i64 0, i32 0
  %329 = load i8*, i8** %328, align 8, !tbaa !314
  store i8* %329, i8** %12, align 8, !tbaa !473
  %330 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %321, i64 0, i32 1
  %331 = load i64, i64* %330, align 8, !tbaa !315
  store i64 %331, i64* %15, align 8, !tbaa !475
  br label %332

332:                                              ; preds = %327, %308
  %333 = phi i64 [ %331, %327 ], [ %316, %308 ]
  %334 = and i64 %310, 16711680
  %335 = icmp eq i64 %334, 16711680
  br i1 %335, label %336, label %356

336:                                              ; preds = %332
  %337 = load i8*, i8** %12, align 8, !tbaa !473
  %338 = getelementptr inbounds i8, i8* %337, i64 1
  store i8* %338, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %337, align 1, !tbaa !7
  %339 = load i64, i64* %15, align 8, !tbaa !475
  %340 = add i64 %339, -1
  store i64 %340, i64* %15, align 8, !tbaa !475
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %356

342:                                              ; preds = %336
  %343 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %344 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %343, i64 0, i32 6
  %345 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %344, align 8, !tbaa !156
  %346 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %345, i64 0, i32 3
  %347 = bitcast i32 (...)** %346 to i32 (%struct.jpeg_compress_struct*, ...)**
  %348 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %347, align 8, !tbaa !316
  %349 = tail call i32 (%struct.jpeg_compress_struct*, ...) %348(%struct.jpeg_compress_struct* noundef %343) #27
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %778, label %351

351:                                              ; preds = %342
  %352 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %345, i64 0, i32 0
  %353 = load i8*, i8** %352, align 8, !tbaa !314
  store i8* %353, i8** %12, align 8, !tbaa !473
  %354 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %345, i64 0, i32 1
  %355 = load i64, i64* %354, align 8, !tbaa !315
  store i64 %355, i64* %15, align 8, !tbaa !475
  br label %356

356:                                              ; preds = %351, %336, %332
  %357 = phi i64 [ %355, %351 ], [ %340, %336 ], [ %333, %332 ]
  %358 = shl i64 %310, 8
  %359 = add nsw i32 %309, -8
  %360 = icmp sgt i32 %309, 15
  br i1 %360, label %308, label %361, !llvm.loop !480

361:                                              ; preds = %356, %297
  %362 = phi i64 [ %293, %297 ], [ %357, %356 ]
  %363 = phi i64 [ %306, %297 ], [ %358, %356 ]
  %364 = phi i32 [ %302, %297 ], [ %359, %356 ]
  store i64 %363, i64* %160, align 8, !tbaa !479
  store i32 %364, i32* %159, align 8, !tbaa !478
  br label %365

365:                                              ; preds = %361, %292
  %366 = phi i64 [ %362, %361 ], [ %293, %292 ]
  %367 = phi i64 [ %363, %361 ], [ %294, %292 ]
  %368 = phi i32 [ %364, %361 ], [ %295, %292 ]
  %369 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %183, i64 0, i32 0, i64 240
  %370 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %183, i64 0, i32 1, i64 240
  br label %371

371:                                              ; preds = %658, %365
  %372 = phi i64 [ %659, %658 ], [ %366, %365 ]
  %373 = phi i64 [ %660, %658 ], [ %367, %365 ]
  %374 = phi i32 [ %661, %658 ], [ %368, %365 ]
  %375 = phi i64 [ %662, %658 ], [ 1, %365 ]
  br label %376

376:                                              ; preds = %654, %371
  %377 = phi i64 [ %656, %654 ], [ %375, %371 ]
  %378 = phi i32 [ %655, %654 ], [ 0, %371 ]
  %379 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %377
  %380 = load i32, i32* %379, align 4, !tbaa !32
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [64 x i16], [64 x i16]* %170, i64 0, i64 %381
  %383 = load i16, i16* %382, align 2, !tbaa !96
  %384 = icmp eq i16 %383, 0
  br i1 %384, label %654, label %385

385:                                              ; preds = %376
  %386 = sext i16 %383 to i32
  %387 = icmp ugt i32 %378, 15
  br i1 %387, label %388, label %476

388:                                              ; preds = %385, %470
  %389 = phi i64 [ %471, %470 ], [ %372, %385 ]
  %390 = phi i64 [ %472, %470 ], [ %373, %385 ]
  %391 = phi i32 [ %473, %470 ], [ %374, %385 ]
  %392 = phi i32 [ %474, %470 ], [ %378, %385 ]
  %393 = load i32, i32* %369, align 4, !tbaa !32
  %394 = load i8, i8* %370, align 4, !tbaa !7
  %395 = sext i8 %394 to i32
  %396 = zext i32 %393 to i64
  %397 = icmp eq i8 %394, 0
  br i1 %397, label %398, label %406

398:                                              ; preds = %388
  %399 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %400 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %399, i64 0, i32 0
  %401 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %400, align 8, !tbaa !8
  %402 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %401, i64 0, i32 5
  store i32 40, i32* %402, align 8, !tbaa !19
  %403 = bitcast %struct.jpeg_error_mgr* %401 to void (%struct.jpeg_common_struct*, ...)**
  %404 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %403, align 8, !tbaa !20
  %405 = bitcast %struct.jpeg_compress_struct* %399 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %404(%struct.jpeg_common_struct* noundef %405) #27
  br label %406

406:                                              ; preds = %398, %388
  %407 = zext i32 %395 to i64
  %408 = shl nsw i64 -1, %407
  %409 = xor i64 %408, -1
  %410 = and i64 %409, %396
  %411 = add nsw i32 %391, %395
  %412 = sub nsw i32 24, %411
  %413 = zext i32 %412 to i64
  %414 = shl i64 %410, %413
  %415 = or i64 %390, %414
  %416 = icmp sgt i32 %411, 7
  br i1 %416, label %417, label %470

417:                                              ; preds = %406, %465
  %418 = phi i32 [ %468, %465 ], [ %411, %406 ]
  %419 = phi i64 [ %467, %465 ], [ %415, %406 ]
  %420 = lshr i64 %419, 16
  %421 = trunc i64 %420 to i8
  %422 = load i8*, i8** %12, align 8, !tbaa !473
  %423 = getelementptr inbounds i8, i8* %422, i64 1
  store i8* %423, i8** %12, align 8, !tbaa !473
  store i8 %421, i8* %422, align 1, !tbaa !7
  %424 = load i64, i64* %15, align 8, !tbaa !475
  %425 = add i64 %424, -1
  store i64 %425, i64* %15, align 8, !tbaa !475
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %427, label %441

427:                                              ; preds = %417
  %428 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %429 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %428, i64 0, i32 6
  %430 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %429, align 8, !tbaa !156
  %431 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %430, i64 0, i32 3
  %432 = bitcast i32 (...)** %431 to i32 (%struct.jpeg_compress_struct*, ...)**
  %433 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %432, align 8, !tbaa !316
  %434 = tail call i32 (%struct.jpeg_compress_struct*, ...) %433(%struct.jpeg_compress_struct* noundef %428) #27
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %778, label %436

436:                                              ; preds = %427
  %437 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %430, i64 0, i32 0
  %438 = load i8*, i8** %437, align 8, !tbaa !314
  store i8* %438, i8** %12, align 8, !tbaa !473
  %439 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %430, i64 0, i32 1
  %440 = load i64, i64* %439, align 8, !tbaa !315
  store i64 %440, i64* %15, align 8, !tbaa !475
  br label %441

441:                                              ; preds = %436, %417
  %442 = phi i64 [ %440, %436 ], [ %425, %417 ]
  %443 = and i64 %419, 16711680
  %444 = icmp eq i64 %443, 16711680
  br i1 %444, label %445, label %465

445:                                              ; preds = %441
  %446 = load i8*, i8** %12, align 8, !tbaa !473
  %447 = getelementptr inbounds i8, i8* %446, i64 1
  store i8* %447, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %446, align 1, !tbaa !7
  %448 = load i64, i64* %15, align 8, !tbaa !475
  %449 = add i64 %448, -1
  store i64 %449, i64* %15, align 8, !tbaa !475
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %465

451:                                              ; preds = %445
  %452 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %453 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %452, i64 0, i32 6
  %454 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %453, align 8, !tbaa !156
  %455 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %454, i64 0, i32 3
  %456 = bitcast i32 (...)** %455 to i32 (%struct.jpeg_compress_struct*, ...)**
  %457 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %456, align 8, !tbaa !316
  %458 = tail call i32 (%struct.jpeg_compress_struct*, ...) %457(%struct.jpeg_compress_struct* noundef %452) #27
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %778, label %460

460:                                              ; preds = %451
  %461 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %454, i64 0, i32 0
  %462 = load i8*, i8** %461, align 8, !tbaa !314
  store i8* %462, i8** %12, align 8, !tbaa !473
  %463 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %454, i64 0, i32 1
  %464 = load i64, i64* %463, align 8, !tbaa !315
  store i64 %464, i64* %15, align 8, !tbaa !475
  br label %465

465:                                              ; preds = %460, %445, %441
  %466 = phi i64 [ %464, %460 ], [ %449, %445 ], [ %442, %441 ]
  %467 = shl i64 %419, 8
  %468 = add nsw i32 %418, -8
  %469 = icmp ugt i32 %418, 15
  br i1 %469, label %417, label %470, !llvm.loop !480

470:                                              ; preds = %465, %406
  %471 = phi i64 [ %389, %406 ], [ %466, %465 ]
  %472 = phi i64 [ %415, %406 ], [ %467, %465 ]
  %473 = phi i32 [ %411, %406 ], [ %468, %465 ]
  store i64 %472, i64* %160, align 8, !tbaa !479
  store i32 %473, i32* %159, align 8, !tbaa !478
  %474 = add nsw i32 %392, -16
  %475 = icmp sgt i32 %392, 31
  br i1 %475, label %388, label %476, !llvm.loop !483

476:                                              ; preds = %470, %385
  %477 = phi i64 [ %372, %385 ], [ %471, %470 ]
  %478 = phi i64 [ %373, %385 ], [ %472, %470 ]
  %479 = phi i32 [ %374, %385 ], [ %473, %470 ]
  %480 = phi i32 [ %378, %385 ], [ %474, %470 ]
  %481 = tail call i32 @llvm.abs.i32(i32 %386, i1 true) #27
  %482 = ashr i16 %383, 15
  %483 = sext i16 %482 to i32
  %484 = add nsw i32 %483, %386
  %485 = icmp ult i32 %481, 2
  br i1 %485, label %502, label %486

486:                                              ; preds = %476, %486
  %487 = phi i32 [ %490, %486 ], [ 1, %476 ]
  %488 = phi i32 [ %489, %486 ], [ %481, %476 ]
  %489 = lshr i32 %488, 1
  %490 = add nuw nsw i32 %487, 1
  %491 = icmp ult i32 %488, 4
  br i1 %491, label %492, label %486, !llvm.loop !484

492:                                              ; preds = %486
  %493 = icmp ugt i32 %487, 9
  br i1 %493, label %494, label %502

494:                                              ; preds = %492
  %495 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %496 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %495, i64 0, i32 0
  %497 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %496, align 8, !tbaa !8
  %498 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %497, i64 0, i32 5
  store i32 6, i32* %498, align 8, !tbaa !19
  %499 = bitcast %struct.jpeg_error_mgr* %497 to void (%struct.jpeg_common_struct*, ...)**
  %500 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %499, align 8, !tbaa !20
  %501 = bitcast %struct.jpeg_compress_struct* %495 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %500(%struct.jpeg_common_struct* noundef %501) #27
  br label %502

502:                                              ; preds = %494, %492, %476
  %503 = phi i32 [ %490, %494 ], [ %490, %492 ], [ 1, %476 ]
  %504 = shl i32 %480, 4
  %505 = add nsw i32 %503, %504
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %183, i64 0, i32 0, i64 %506
  %508 = load i32, i32* %507, align 4, !tbaa !32
  %509 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %183, i64 0, i32 1, i64 %506
  %510 = load i8, i8* %509, align 1, !tbaa !7
  %511 = sext i8 %510 to i32
  %512 = zext i32 %508 to i64
  %513 = icmp eq i8 %510, 0
  br i1 %513, label %514, label %522

514:                                              ; preds = %502
  %515 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %516 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %515, i64 0, i32 0
  %517 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %516, align 8, !tbaa !8
  %518 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %517, i64 0, i32 5
  store i32 40, i32* %518, align 8, !tbaa !19
  %519 = bitcast %struct.jpeg_error_mgr* %517 to void (%struct.jpeg_common_struct*, ...)**
  %520 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %519, align 8, !tbaa !20
  %521 = bitcast %struct.jpeg_compress_struct* %515 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %520(%struct.jpeg_common_struct* noundef %521) #27
  br label %522

522:                                              ; preds = %514, %502
  %523 = zext i32 %511 to i64
  %524 = shl nsw i64 -1, %523
  %525 = xor i64 %524, -1
  %526 = and i64 %525, %512
  %527 = add nsw i32 %479, %511
  %528 = sub nsw i32 24, %527
  %529 = zext i32 %528 to i64
  %530 = shl i64 %526, %529
  %531 = or i64 %478, %530
  %532 = icmp sgt i32 %527, 7
  br i1 %532, label %533, label %586

533:                                              ; preds = %522, %581
  %534 = phi i32 [ %584, %581 ], [ %527, %522 ]
  %535 = phi i64 [ %583, %581 ], [ %531, %522 ]
  %536 = lshr i64 %535, 16
  %537 = trunc i64 %536 to i8
  %538 = load i8*, i8** %12, align 8, !tbaa !473
  %539 = getelementptr inbounds i8, i8* %538, i64 1
  store i8* %539, i8** %12, align 8, !tbaa !473
  store i8 %537, i8* %538, align 1, !tbaa !7
  %540 = load i64, i64* %15, align 8, !tbaa !475
  %541 = add i64 %540, -1
  store i64 %541, i64* %15, align 8, !tbaa !475
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %557

543:                                              ; preds = %533
  %544 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %545 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %544, i64 0, i32 6
  %546 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %545, align 8, !tbaa !156
  %547 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %546, i64 0, i32 3
  %548 = bitcast i32 (...)** %547 to i32 (%struct.jpeg_compress_struct*, ...)**
  %549 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %548, align 8, !tbaa !316
  %550 = tail call i32 (%struct.jpeg_compress_struct*, ...) %549(%struct.jpeg_compress_struct* noundef %544) #27
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %778, label %552

552:                                              ; preds = %543
  %553 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %546, i64 0, i32 0
  %554 = load i8*, i8** %553, align 8, !tbaa !314
  store i8* %554, i8** %12, align 8, !tbaa !473
  %555 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %546, i64 0, i32 1
  %556 = load i64, i64* %555, align 8, !tbaa !315
  store i64 %556, i64* %15, align 8, !tbaa !475
  br label %557

557:                                              ; preds = %552, %533
  %558 = phi i64 [ %556, %552 ], [ %541, %533 ]
  %559 = and i64 %535, 16711680
  %560 = icmp eq i64 %559, 16711680
  br i1 %560, label %561, label %581

561:                                              ; preds = %557
  %562 = load i8*, i8** %12, align 8, !tbaa !473
  %563 = getelementptr inbounds i8, i8* %562, i64 1
  store i8* %563, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %562, align 1, !tbaa !7
  %564 = load i64, i64* %15, align 8, !tbaa !475
  %565 = add i64 %564, -1
  store i64 %565, i64* %15, align 8, !tbaa !475
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %567, label %581

567:                                              ; preds = %561
  %568 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %569 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %568, i64 0, i32 6
  %570 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %569, align 8, !tbaa !156
  %571 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %570, i64 0, i32 3
  %572 = bitcast i32 (...)** %571 to i32 (%struct.jpeg_compress_struct*, ...)**
  %573 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %572, align 8, !tbaa !316
  %574 = tail call i32 (%struct.jpeg_compress_struct*, ...) %573(%struct.jpeg_compress_struct* noundef %568) #27
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %778, label %576

576:                                              ; preds = %567
  %577 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %570, i64 0, i32 0
  %578 = load i8*, i8** %577, align 8, !tbaa !314
  store i8* %578, i8** %12, align 8, !tbaa !473
  %579 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %570, i64 0, i32 1
  %580 = load i64, i64* %579, align 8, !tbaa !315
  store i64 %580, i64* %15, align 8, !tbaa !475
  br label %581

581:                                              ; preds = %576, %561, %557
  %582 = phi i64 [ %580, %576 ], [ %565, %561 ], [ %558, %557 ]
  %583 = shl i64 %535, 8
  %584 = add nsw i32 %534, -8
  %585 = icmp sgt i32 %534, 15
  br i1 %585, label %533, label %586, !llvm.loop !480

586:                                              ; preds = %581, %522
  %587 = phi i64 [ %477, %522 ], [ %582, %581 ]
  %588 = phi i64 [ %531, %522 ], [ %583, %581 ]
  %589 = phi i32 [ %527, %522 ], [ %584, %581 ]
  %590 = zext i32 %484 to i64
  %591 = zext i32 %503 to i64
  %592 = shl nsw i64 -1, %591
  %593 = xor i64 %592, -1
  %594 = and i64 %593, %590
  %595 = add nsw i32 %589, %503
  %596 = sub nsw i32 24, %595
  %597 = zext i32 %596 to i64
  %598 = shl i64 %594, %597
  %599 = or i64 %598, %588
  %600 = icmp sgt i32 %595, 7
  br i1 %600, label %601, label %658

601:                                              ; preds = %586, %649
  %602 = phi i32 [ %652, %649 ], [ %595, %586 ]
  %603 = phi i64 [ %651, %649 ], [ %599, %586 ]
  %604 = lshr i64 %603, 16
  %605 = trunc i64 %604 to i8
  %606 = load i8*, i8** %12, align 8, !tbaa !473
  %607 = getelementptr inbounds i8, i8* %606, i64 1
  store i8* %607, i8** %12, align 8, !tbaa !473
  store i8 %605, i8* %606, align 1, !tbaa !7
  %608 = load i64, i64* %15, align 8, !tbaa !475
  %609 = add i64 %608, -1
  store i64 %609, i64* %15, align 8, !tbaa !475
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %611, label %625

611:                                              ; preds = %601
  %612 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %613 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %612, i64 0, i32 6
  %614 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %613, align 8, !tbaa !156
  %615 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %614, i64 0, i32 3
  %616 = bitcast i32 (...)** %615 to i32 (%struct.jpeg_compress_struct*, ...)**
  %617 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %616, align 8, !tbaa !316
  %618 = tail call i32 (%struct.jpeg_compress_struct*, ...) %617(%struct.jpeg_compress_struct* noundef %612) #27
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %778, label %620

620:                                              ; preds = %611
  %621 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %614, i64 0, i32 0
  %622 = load i8*, i8** %621, align 8, !tbaa !314
  store i8* %622, i8** %12, align 8, !tbaa !473
  %623 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %614, i64 0, i32 1
  %624 = load i64, i64* %623, align 8, !tbaa !315
  store i64 %624, i64* %15, align 8, !tbaa !475
  br label %625

625:                                              ; preds = %620, %601
  %626 = phi i64 [ %624, %620 ], [ %609, %601 ]
  %627 = and i64 %603, 16711680
  %628 = icmp eq i64 %627, 16711680
  br i1 %628, label %629, label %649

629:                                              ; preds = %625
  %630 = load i8*, i8** %12, align 8, !tbaa !473
  %631 = getelementptr inbounds i8, i8* %630, i64 1
  store i8* %631, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %630, align 1, !tbaa !7
  %632 = load i64, i64* %15, align 8, !tbaa !475
  %633 = add i64 %632, -1
  store i64 %633, i64* %15, align 8, !tbaa !475
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %649

635:                                              ; preds = %629
  %636 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %637 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %636, i64 0, i32 6
  %638 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %637, align 8, !tbaa !156
  %639 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %638, i64 0, i32 3
  %640 = bitcast i32 (...)** %639 to i32 (%struct.jpeg_compress_struct*, ...)**
  %641 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %640, align 8, !tbaa !316
  %642 = tail call i32 (%struct.jpeg_compress_struct*, ...) %641(%struct.jpeg_compress_struct* noundef %636) #27
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %778, label %644

644:                                              ; preds = %635
  %645 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %638, i64 0, i32 0
  %646 = load i8*, i8** %645, align 8, !tbaa !314
  store i8* %646, i8** %12, align 8, !tbaa !473
  %647 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %638, i64 0, i32 1
  %648 = load i64, i64* %647, align 8, !tbaa !315
  store i64 %648, i64* %15, align 8, !tbaa !475
  br label %649

649:                                              ; preds = %644, %629, %625
  %650 = phi i64 [ %648, %644 ], [ %633, %629 ], [ %626, %625 ]
  %651 = shl i64 %603, 8
  %652 = add nsw i32 %602, -8
  %653 = icmp sgt i32 %602, 15
  br i1 %653, label %601, label %658, !llvm.loop !480

654:                                              ; preds = %376
  %655 = add nuw nsw i32 %378, 1
  %656 = add nuw nsw i64 %377, 1
  %657 = icmp eq i64 %656, 64
  br i1 %657, label %664, label %376, !llvm.loop !485

658:                                              ; preds = %649, %586
  %659 = phi i64 [ %587, %586 ], [ %650, %649 ]
  %660 = phi i64 [ %599, %586 ], [ %651, %649 ]
  %661 = phi i32 [ %595, %586 ], [ %652, %649 ]
  store i64 %660, i64* %160, align 8, !tbaa !479
  store i32 %661, i32* %159, align 8, !tbaa !478
  %662 = add nuw nsw i64 %377, 1
  %663 = icmp eq i64 %662, 64
  br i1 %663, label %748, label %371, !llvm.loop !485

664:                                              ; preds = %654
  %665 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %183, i64 0, i32 0, i64 0
  %666 = load i32, i32* %665, align 4, !tbaa !32
  %667 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %183, i64 0, i32 1, i64 0
  %668 = load i8, i8* %667, align 4, !tbaa !7
  %669 = sext i8 %668 to i32
  %670 = zext i32 %666 to i64
  %671 = icmp eq i8 %668, 0
  br i1 %671, label %672, label %680

672:                                              ; preds = %664
  %673 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %674 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %673, i64 0, i32 0
  %675 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %674, align 8, !tbaa !8
  %676 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %675, i64 0, i32 5
  store i32 40, i32* %676, align 8, !tbaa !19
  %677 = bitcast %struct.jpeg_error_mgr* %675 to void (%struct.jpeg_common_struct*, ...)**
  %678 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %677, align 8, !tbaa !20
  %679 = bitcast %struct.jpeg_compress_struct* %673 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %678(%struct.jpeg_common_struct* noundef %679) #27
  br label %680

680:                                              ; preds = %672, %664
  %681 = zext i32 %669 to i64
  %682 = shl nsw i64 -1, %681
  %683 = xor i64 %682, -1
  %684 = and i64 %683, %670
  %685 = add nsw i32 %374, %669
  %686 = sub nsw i32 24, %685
  %687 = zext i32 %686 to i64
  %688 = shl i64 %684, %687
  %689 = or i64 %373, %688
  %690 = icmp sgt i32 %685, 7
  br i1 %690, label %691, label %744

691:                                              ; preds = %680, %739
  %692 = phi i32 [ %742, %739 ], [ %685, %680 ]
  %693 = phi i64 [ %741, %739 ], [ %689, %680 ]
  %694 = lshr i64 %693, 16
  %695 = trunc i64 %694 to i8
  %696 = load i8*, i8** %12, align 8, !tbaa !473
  %697 = getelementptr inbounds i8, i8* %696, i64 1
  store i8* %697, i8** %12, align 8, !tbaa !473
  store i8 %695, i8* %696, align 1, !tbaa !7
  %698 = load i64, i64* %15, align 8, !tbaa !475
  %699 = add i64 %698, -1
  store i64 %699, i64* %15, align 8, !tbaa !475
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %701, label %715

701:                                              ; preds = %691
  %702 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %703 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %702, i64 0, i32 6
  %704 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %703, align 8, !tbaa !156
  %705 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %704, i64 0, i32 3
  %706 = bitcast i32 (...)** %705 to i32 (%struct.jpeg_compress_struct*, ...)**
  %707 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %706, align 8, !tbaa !316
  %708 = tail call i32 (%struct.jpeg_compress_struct*, ...) %707(%struct.jpeg_compress_struct* noundef %702) #27
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %778, label %710

710:                                              ; preds = %701
  %711 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %704, i64 0, i32 0
  %712 = load i8*, i8** %711, align 8, !tbaa !314
  store i8* %712, i8** %12, align 8, !tbaa !473
  %713 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %704, i64 0, i32 1
  %714 = load i64, i64* %713, align 8, !tbaa !315
  store i64 %714, i64* %15, align 8, !tbaa !475
  br label %715

715:                                              ; preds = %710, %691
  %716 = phi i64 [ %714, %710 ], [ %699, %691 ]
  %717 = and i64 %693, 16711680
  %718 = icmp eq i64 %717, 16711680
  br i1 %718, label %719, label %739

719:                                              ; preds = %715
  %720 = load i8*, i8** %12, align 8, !tbaa !473
  %721 = getelementptr inbounds i8, i8* %720, i64 1
  store i8* %721, i8** %12, align 8, !tbaa !473
  store i8 0, i8* %720, align 1, !tbaa !7
  %722 = load i64, i64* %15, align 8, !tbaa !475
  %723 = add i64 %722, -1
  store i64 %723, i64* %15, align 8, !tbaa !475
  %724 = icmp eq i64 %723, 0
  br i1 %724, label %725, label %739

725:                                              ; preds = %719
  %726 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %20, align 8, !tbaa !477
  %727 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %726, i64 0, i32 6
  %728 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %727, align 8, !tbaa !156
  %729 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %728, i64 0, i32 3
  %730 = bitcast i32 (...)** %729 to i32 (%struct.jpeg_compress_struct*, ...)**
  %731 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %730, align 8, !tbaa !316
  %732 = tail call i32 (%struct.jpeg_compress_struct*, ...) %731(%struct.jpeg_compress_struct* noundef %726) #27
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %778, label %734

734:                                              ; preds = %725
  %735 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %728, i64 0, i32 0
  %736 = load i8*, i8** %735, align 8, !tbaa !314
  store i8* %736, i8** %12, align 8, !tbaa !473
  %737 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %728, i64 0, i32 1
  %738 = load i64, i64* %737, align 8, !tbaa !315
  store i64 %738, i64* %15, align 8, !tbaa !475
  br label %739

739:                                              ; preds = %734, %719, %715
  %740 = phi i64 [ %738, %734 ], [ %723, %719 ], [ %716, %715 ]
  %741 = shl i64 %693, 8
  %742 = add nsw i32 %692, -8
  %743 = icmp sgt i32 %692, 15
  br i1 %743, label %691, label %744, !llvm.loop !480

744:                                              ; preds = %739, %680
  %745 = phi i64 [ %372, %680 ], [ %740, %739 ]
  %746 = phi i64 [ %689, %680 ], [ %741, %739 ]
  %747 = phi i32 [ %685, %680 ], [ %742, %739 ]
  store i64 %746, i64* %160, align 8, !tbaa !479
  store i32 %747, i32* %159, align 8, !tbaa !478
  br label %748

748:                                              ; preds = %658, %744
  %749 = phi i64 [ %745, %744 ], [ %659, %658 ]
  %750 = load [64 x i16]*, [64 x i16]** %169, align 8, !tbaa !3
  %751 = getelementptr inbounds [64 x i16], [64 x i16]* %750, i64 0, i64 0
  %752 = load i16, i16* %751, align 2, !tbaa !96
  %753 = sext i16 %752 to i32
  store i32 %753, i32* %172, align 4, !tbaa !32
  %754 = add nuw nsw i64 %163, 1
  %755 = load i32, i32* %155, align 8, !tbaa !297
  %756 = sext i32 %755 to i64
  %757 = icmp slt i64 %754, %756
  br i1 %757, label %161, label %758, !llvm.loop !486

758:                                              ; preds = %748, %153
  %759 = phi i64 [ %154, %153 ], [ %749, %748 ]
  %760 = load i8*, i8** %12, align 8, !tbaa !473
  %761 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8, !tbaa !156
  %762 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %761, i64 0, i32 0
  store i8* %760, i8** %762, align 8, !tbaa !314
  %763 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %761, i64 0, i32 1
  store i64 %759, i64* %763, align 8, !tbaa !315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %19, i8* noundef nonnull align 8 dereferenceable(32) %18, i64 32, i1 false), !tbaa.struct !476
  %764 = load i32, i32* %21, align 8, !tbaa !40
  %765 = icmp eq i32 %764, 0
  br i1 %765, label %778, label %766

766:                                              ; preds = %758
  %767 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 2
  %768 = load i32, i32* %767, align 8, !tbaa !471
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %775

770:                                              ; preds = %766
  %771 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 3
  %772 = load i32, i32* %771, align 4, !tbaa !472
  %773 = add nsw i32 %772, 1
  %774 = and i32 %773, 7
  store i32 %774, i32* %771, align 4, !tbaa !472
  br label %775

775:                                              ; preds = %770, %766
  %776 = phi i32 [ %764, %770 ], [ %768, %766 ]
  %777 = add i32 %776, -1
  store i32 %777, i32* %767, align 8, !tbaa !471
  br label %778

778:                                              ; preds = %75, %52, %273, %249, %342, %318, %725, %701, %567, %543, %635, %611, %451, %427, %128, %105, %758, %775
  %779 = phi i32 [ 1, %775 ], [ 1, %758 ], [ 0, %105 ], [ 0, %128 ], [ 0, %427 ], [ 0, %451 ], [ 0, %611 ], [ 0, %635 ], [ 0, %543 ], [ 0, %567 ], [ 0, %701 ], [ 0, %725 ], [ 0, %318 ], [ 0, %342 ], [ 0, %249 ], [ 0, %273 ], [ 0, %52 ], [ 0, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #27
  ret i32 %779
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_gather(%struct.jpeg_compress_struct* noundef %0, [64 x i16]** nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.huff_entropy_encoder**
  %5 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %7 = load i32, i32* %6, align 8, !tbaa !40
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 2
  %11 = load i32, i32* %10, align 8, !tbaa !471
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %15 = load i32, i32* %14, align 4, !tbaa !286
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %13, %17
  %18 = phi i64 [ %20, %17 ], [ 0, %13 ]
  %19 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %18
  store i32 0, i32* %19, align 4, !tbaa !32
  %20 = add nuw nsw i64 %18, 1
  %21 = load i32, i32* %14, align 4, !tbaa !286
  %22 = sext i32 %21 to i64
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %17, label %24, !llvm.loop !487

24:                                               ; preds = %17
  %25 = load i32, i32* %6, align 8, !tbaa !40
  br label %26

26:                                               ; preds = %13, %24, %9
  %27 = phi i32 [ %11, %9 ], [ %25, %24 ], [ %7, %13 ]
  %28 = add i32 %27, -1
  store i32 %28, i32* %10, align 8, !tbaa !471
  br label %29

29:                                               ; preds = %26, %2
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  %31 = load i32, i32* %30, align 8, !tbaa !297
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %157

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %35 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %36

36:                                               ; preds = %33, %148
  %37 = phi i64 [ 0, %33 ], [ %153, %148 ]
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %37
  %39 = load i32, i32* %38, align 4, !tbaa !32
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %40
  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %41, align 8, !tbaa !3
  %43 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %37
  %44 = load [64 x i16]*, [64 x i16]** %43, align 8, !tbaa !3
  %45 = getelementptr inbounds [64 x i16], [64 x i16]* %44, i64 0, i64 0
  %46 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %40
  %47 = load i32, i32* %46, align 4, !tbaa !32
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 0, i32 5
  %49 = load i32, i32* %48, align 4, !tbaa !318
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 6, i64 %50
  %52 = load i64*, i64** %51, align 8, !tbaa !3
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 0, i32 6
  %54 = load i32, i32* %53, align 8, !tbaa !204
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 7, i64 %55
  %57 = load i64*, i64** %56, align 8, !tbaa !3
  %58 = load i16, i16* %45, align 2, !tbaa !96
  %59 = sext i16 %58 to i32
  %60 = sub nsw i32 %59, %47
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %36
  %63 = tail call i32 @llvm.abs.i32(i32 %60, i1 true) #27
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i32 [ %67, %64 ], [ 0, %62 ]
  %66 = phi i32 [ %68, %64 ], [ %63, %62 ]
  %67 = add nuw nsw i32 %65, 1
  %68 = lshr i32 %66, 1
  %69 = icmp ult i32 %66, 2
  br i1 %69, label %70, label %64, !llvm.loop !488

70:                                               ; preds = %64
  %71 = icmp ugt i32 %65, 10
  br i1 %71, label %72, label %77

72:                                               ; preds = %70
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8, !tbaa !8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i64 0, i32 5
  store i32 6, i32* %74, align 8, !tbaa !19
  %75 = bitcast %struct.jpeg_error_mgr* %73 to void (%struct.jpeg_common_struct*, ...)**
  %76 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %75, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %76(%struct.jpeg_common_struct* noundef %35) #27
  br label %77

77:                                               ; preds = %72, %70, %36
  %78 = phi i32 [ %67, %72 ], [ %67, %70 ], [ 0, %36 ]
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i64, i64* %52, i64 %79
  %81 = load i64, i64* %80, align 8, !tbaa !35
  %82 = add nsw i64 %81, 1
  store i64 %82, i64* %80, align 8, !tbaa !35
  %83 = getelementptr inbounds i64, i64* %57, i64 240
  br label %84

84:                                               ; preds = %140, %77
  %85 = phi i64 [ 1, %77 ], [ %141, %140 ]
  %86 = phi i32 [ 0, %77 ], [ %142, %140 ]
  %87 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %85
  %88 = load i32, i32* %87, align 4, !tbaa !32
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [64 x i16], [64 x i16]* %44, i64 0, i64 %89
  %91 = load i16, i16* %90, align 2, !tbaa !96
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %126, label %93

93:                                               ; preds = %84
  %94 = icmp sgt i32 %86, 15
  br i1 %94, label %95, label %107

95:                                               ; preds = %93
  %96 = load i64, i64* %83, align 8, !tbaa !35
  %97 = add nuw i32 %86, 15
  %98 = tail call i32 @llvm.smin.i32(i32 %86, i32 31) #27
  %99 = sub nuw i32 %97, %98
  %100 = lshr i32 %99, 4
  %101 = add nuw nsw i32 %100, 1
  %102 = zext i32 %101 to i64
  %103 = add i64 %96, %102
  %104 = and i32 %99, -16
  %105 = add nsw i32 %86, -16
  %106 = sub nsw i32 %105, %104
  store i64 %103, i64* %83, align 8, !tbaa !35
  br label %107

107:                                              ; preds = %95, %93
  %108 = phi i32 [ %106, %95 ], [ %86, %93 ]
  %109 = tail call i16 @llvm.abs.i16(i16 %91, i1 false) #27
  %110 = icmp ult i16 %109, 2
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = zext i16 %109 to i32
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i32 [ %117, %113 ], [ 1, %111 ]
  %115 = phi i32 [ %116, %113 ], [ %112, %111 ]
  %116 = lshr i32 %115, 1
  %117 = add nuw nsw i32 %114, 1
  %118 = icmp ult i32 %115, 4
  br i1 %118, label %119, label %113, !llvm.loop !489

119:                                              ; preds = %113
  %120 = icmp ugt i32 %114, 9
  br i1 %120, label %121, label %130

121:                                              ; preds = %119
  %122 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8, !tbaa !8
  %123 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %122, i64 0, i32 5
  store i32 6, i32* %123, align 8, !tbaa !19
  %124 = bitcast %struct.jpeg_error_mgr* %122 to void (%struct.jpeg_common_struct*, ...)**
  %125 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %124, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %125(%struct.jpeg_common_struct* noundef %35) #27
  br label %130

126:                                              ; preds = %84
  %127 = add nsw i32 %86, 1
  %128 = add nuw nsw i64 %85, 1
  %129 = icmp eq i64 %128, 64
  br i1 %129, label %143, label %140

130:                                              ; preds = %121, %119, %107
  %131 = phi i32 [ %117, %121 ], [ %117, %119 ], [ 1, %107 ]
  %132 = shl i32 %108, 4
  %133 = add nsw i32 %131, %132
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i64, i64* %57, i64 %134
  %136 = load i64, i64* %135, align 8, !tbaa !35
  %137 = add nsw i64 %136, 1
  store i64 %137, i64* %135, align 8, !tbaa !35
  %138 = add nuw nsw i64 %85, 1
  %139 = icmp eq i64 %138, 64
  br i1 %139, label %148, label %140

140:                                              ; preds = %130, %126
  %141 = phi i64 [ %128, %126 ], [ %138, %130 ]
  %142 = phi i32 [ %127, %126 ], [ 0, %130 ]
  br label %84, !llvm.loop !490

143:                                              ; preds = %126
  %144 = icmp sgt i32 %86, -1
  br i1 %144, label %145, label %148

145:                                              ; preds = %143
  %146 = load i64, i64* %57, align 8, !tbaa !35
  %147 = add nsw i64 %146, 1
  store i64 %147, i64* %57, align 8, !tbaa !35
  br label %148

148:                                              ; preds = %130, %143, %145
  %149 = load [64 x i16]*, [64 x i16]** %43, align 8, !tbaa !3
  %150 = getelementptr inbounds [64 x i16], [64 x i16]* %149, i64 0, i64 0
  %151 = load i16, i16* %150, align 2, !tbaa !96
  %152 = sext i16 %151 to i32
  store i32 %152, i32* %46, align 4, !tbaa !32
  %153 = add nuw nsw i64 %37, 1
  %154 = load i32, i32* %30, align 8, !tbaa !297
  %155 = sext i32 %154 to i64
  %156 = icmp slt i64 %153, %155
  br i1 %156, label %36, label %157, !llvm.loop !491

157:                                              ; preds = %148, %29
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_huff(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = alloca [20 x i8], align 4
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.huff_entropy_encoder**
  %5 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6)
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %8 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %7, align 8, !tbaa !156
  %9 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !314
  %11 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !315
  %13 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 0
  %14 = load i64, i64* %13, align 8, !tbaa.struct !476
  %15 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 8, !tbaa.struct !492
  %17 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2
  %18 = bitcast [4 x i32]* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(20) %6, i8* noundef nonnull align 4 dereferenceable(20) %18, i64 20, i1 false), !tbaa.struct !493
  %19 = icmp sgt i32 %16, 0
  br i1 %19, label %20, label %83

20:                                               ; preds = %1
  %21 = sub nsw i32 17, %16
  %22 = zext i32 %21 to i64
  %23 = shl i64 127, %22
  %24 = or i64 %23, %14
  %25 = add nuw nsw i32 %16, 7
  br label %26

26:                                               ; preds = %69, %20
  %27 = phi i64 [ %12, %20 ], [ %70, %69 ]
  %28 = phi i8* [ %10, %20 ], [ %71, %69 ]
  %29 = phi i32 [ %25, %20 ], [ %73, %69 ]
  %30 = phi i64 [ %24, %20 ], [ %72, %69 ]
  %31 = lshr i64 %30, 16
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds i8, i8* %28, i64 1
  store i8 %32, i8* %28, align 1, !tbaa !7
  %34 = add i64 %27, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %26
  %37 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %7, align 8, !tbaa !156
  %38 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %37, i64 0, i32 3
  %39 = bitcast i32 (...)** %38 to i32 (%struct.jpeg_compress_struct*, ...)**
  %40 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %39, align 8, !tbaa !316
  %41 = tail call i32 (%struct.jpeg_compress_struct*, ...) %40(%struct.jpeg_compress_struct* noundef %0) #27
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %75, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %37, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8, !tbaa !314
  %46 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %37, i64 0, i32 1
  %47 = load i64, i64* %46, align 8, !tbaa !315
  br label %48

48:                                               ; preds = %43, %26
  %49 = phi i64 [ %47, %43 ], [ %34, %26 ]
  %50 = phi i8* [ %45, %43 ], [ %33, %26 ]
  %51 = and i64 %30, 16711680
  %52 = icmp eq i64 %51, 16711680
  br i1 %52, label %53, label %69

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %50, i64 1
  store i8 0, i8* %50, align 1, !tbaa !7
  %55 = add i64 %49, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %7, align 8, !tbaa !156
  %59 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %58, i64 0, i32 3
  %60 = bitcast i32 (...)** %59 to i32 (%struct.jpeg_compress_struct*, ...)**
  %61 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %60, align 8, !tbaa !316
  %62 = tail call i32 (%struct.jpeg_compress_struct*, ...) %61(%struct.jpeg_compress_struct* noundef %0) #27
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %58, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8, !tbaa !314
  %67 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %58, i64 0, i32 1
  %68 = load i64, i64* %67, align 8, !tbaa !315
  br label %69

69:                                               ; preds = %64, %53, %48
  %70 = phi i64 [ %68, %64 ], [ %55, %53 ], [ %49, %48 ]
  %71 = phi i8* [ %66, %64 ], [ %54, %53 ], [ %50, %48 ]
  %72 = shl i64 %30, 8
  %73 = add nsw i32 %29, -8
  %74 = icmp sgt i32 %29, 15
  br i1 %74, label %26, label %83, !llvm.loop !480

75:                                               ; preds = %36, %57
  %76 = phi i8* [ %54, %57 ], [ %33, %36 ]
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %78 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %77, align 8, !tbaa !8
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %78, i64 0, i32 5
  store i32 24, i32* %79, align 8, !tbaa !19
  %80 = bitcast %struct.jpeg_error_mgr* %78 to void (%struct.jpeg_common_struct*, ...)**
  %81 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %80, align 8, !tbaa !20
  %82 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %81(%struct.jpeg_common_struct* noundef %82) #27
  br label %83

83:                                               ; preds = %69, %1, %75
  %84 = phi i8* [ %76, %75 ], [ %10, %1 ], [ %71, %69 ]
  %85 = phi i64 [ 0, %75 ], [ %12, %1 ], [ %70, %69 ]
  %86 = phi i64 [ %14, %75 ], [ 0, %1 ], [ 0, %69 ]
  %87 = phi i32 [ %16, %75 ], [ 0, %1 ], [ 0, %69 ]
  %88 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %7, align 8, !tbaa !156
  %89 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %88, i64 0, i32 0
  store i8* %84, i8** %89, align 8, !tbaa !314
  %90 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %88, i64 0, i32 1
  store i64 %85, i64* %90, align 8, !tbaa !315
  store i64 %86, i64* %13, align 8, !tbaa.struct !476
  store i32 %87, i32* %15, align 8, !tbaa.struct !492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(20) %18, i8* noundef nonnull align 4 dereferenceable(20) %6, i64 20, i1 false), !tbaa.struct !493
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_gather(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = alloca [4 x i32], align 16
  %3 = alloca [4 x i32], align 16
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %5 = bitcast %struct.jpeg_entropy_encoder** %4 to %struct.huff_entropy_encoder**
  %6 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8, !tbaa !273
  %7 = bitcast [4 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #27
  %8 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #27
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %10 = load i32, i32* %9, align 4, !tbaa !286
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %56

12:                                               ; preds = %1
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %14

14:                                               ; preds = %12, %51
  %15 = phi i64 [ 0, %12 ], [ %52, %51 ]
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %15
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8, !tbaa !3
  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 5
  %19 = load i32, i32* %18, align 4, !tbaa !318
  %20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 6
  %21 = load i32, i32* %20, align 8, !tbaa !204
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4, !tbaa !32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 %22
  %28 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %27, align 8, !tbaa !3
  %29 = icmp eq %struct.JHUFF_TBL* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef nonnull %13) #27
  store %struct.JHUFF_TBL* %31, %struct.JHUFF_TBL** %27, align 8, !tbaa !3
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi %struct.JHUFF_TBL* [ %31, %30 ], [ %28, %26 ]
  %34 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 6, i64 %22
  %35 = load i64*, i64** %34, align 8, !tbaa !3
  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* noundef nonnull %0, %struct.JHUFF_TBL* noundef %33, i64* noundef %35)
  store i32 1, i32* %23, align 4, !tbaa !32
  br label %36

36:                                               ; preds = %32, %14
  %37 = sext i32 %21 to i64
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4, !tbaa !32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 %37
  %43 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %42, align 8, !tbaa !3
  %44 = icmp eq %struct.JHUFF_TBL* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef nonnull %13) #27
  store %struct.JHUFF_TBL* %46, %struct.JHUFF_TBL** %42, align 8, !tbaa !3
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi %struct.JHUFF_TBL* [ %46, %45 ], [ %43, %41 ]
  %49 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 7, i64 %37
  %50 = load i64*, i64** %49, align 8, !tbaa !3
  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* noundef nonnull %0, %struct.JHUFF_TBL* noundef %48, i64* noundef %50)
  store i32 1, i32* %38, align 4, !tbaa !32
  br label %51

51:                                               ; preds = %36, %47
  %52 = add nuw nsw i64 %15, 1
  %53 = load i32, i32* %9, align 4, !tbaa !286
  %54 = sext i32 %53 to i64
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %14, label %56, !llvm.loop !494

56:                                               ; preds = %51, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #27
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.abs.i16(i16, i1 immarg) #15

; Function Attrs: nounwind uwtable
define dso_local void @jinit_phuff_encoder(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 184) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %9 = bitcast %struct.jpeg_entropy_encoder** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !273
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, i32)* @start_pass_phuff to void (...)*), void (...)** %10, align 8, !tbaa !495
  %11 = getelementptr inbounds i8, i8* %7, i64 120
  %12 = getelementptr inbounds i8, i8* %7, i64 104
  %13 = bitcast i8* %12 to i8**
  store i8* null, i8** %13, align 8, !tbaa !497
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %11, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_pass_phuff(%struct.jpeg_compress_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.phuff_entropy_encoder**
  %5 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 6
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %6, align 8, !tbaa !498
  %7 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 1
  store i32 %1, i32* %7, align 8, !tbaa !499
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %9 = load i32, i32* %8, align 4, !tbaa !279
  %10 = icmp eq i32 %9, 0
  %11 = zext i1 %10 to i32
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  %13 = load i32, i32* %12, align 4, !tbaa !280
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 0, i32 1
  br i1 %14, label %16, label %19

16:                                               ; preds = %2
  br i1 %10, label %17, label %18

17:                                               ; preds = %16
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_DC_first to i32 (...)*), i32 (...)** %15, align 8, !tbaa !500
  br label %32

18:                                               ; preds = %16
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_AC_first to i32 (...)*), i32 (...)** %15, align 8, !tbaa !500
  br label %32

19:                                               ; preds = %2
  br i1 %10, label %20, label %21

20:                                               ; preds = %19
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_DC_refine to i32 (...)*), i32 (...)** %15, align 8, !tbaa !500
  br label %32

21:                                               ; preds = %19
  store i32 (...)* bitcast (i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_AC_refine to i32 (...)*), i32 (...)** %15, align 8, !tbaa !500
  %22 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 11
  %23 = load i8*, i8** %22, align 8, !tbaa !497
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %32

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %27 = bitcast %struct.jpeg_memory_mgr** %26 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %28 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %27, align 8, !tbaa !36
  %29 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %28, align 8, !tbaa !44
  %30 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %31 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %29(%struct.jpeg_common_struct* noundef %30, i32 noundef 1, i64 noundef 1000) #27
  store i8* %31, i8** %22, align 8, !tbaa !497
  br label %32

32:                                               ; preds = %20, %25, %21, %17, %18
  %33 = icmp eq i32 %1, 0
  %34 = select i1 %33, void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @finish_pass_phuff to void (...)*), void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @finish_pass_gather_phuff to void (...)*)
  %35 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 0, i32 2
  store void (...)* %34, void (...)** %35, align 8
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %37 = load i32, i32* %36, align 4, !tbaa !286
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %92

39:                                               ; preds = %32
  %40 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 8
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %42 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %43 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %45 = bitcast %struct.jpeg_memory_mgr** %44 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  br label %46

46:                                               ; preds = %39, %87
  %47 = phi i64 [ 0, %39 ], [ %88, %87 ]
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %47
  %49 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %48, align 8, !tbaa !3
  %50 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 7, i64 %47
  store i32 0, i32* %50, align 4, !tbaa !32
  br i1 %10, label %51, label %57

51:                                               ; preds = %46
  %52 = load i32, i32* %12, align 4, !tbaa !280
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %87

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 0, i32 5
  %56 = load i32, i32* %55, align 4, !tbaa !318
  br label %60

57:                                               ; preds = %46
  %58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 0, i32 6
  %59 = load i32, i32* %58, align 8, !tbaa !204
  store i32 %59, i32* %40, align 8, !tbaa !501
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i32 [ %56, %54 ], [ %59, %57 ]
  br i1 %33, label %84, label %62

62:                                               ; preds = %60
  %63 = icmp ugt i32 %61, 3
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8, !tbaa !8
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 5
  store i32 50, i32* %66, align 8, !tbaa !19
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 6, i32 0, i64 0
  store i32 %61, i32* %67, align 4, !tbaa !7
  %68 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %42, align 8, !tbaa !8
  %69 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %68, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %69(%struct.jpeg_common_struct* noundef nonnull %43) #27
  br label %70

70:                                               ; preds = %62, %64
  %71 = sext i32 %61 to i64
  %72 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 15, i64 %71
  %73 = load i64*, i64** %72, align 8, !tbaa !3
  %74 = icmp eq i64* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = bitcast i64* %73 to i8*
  br label %82

77:                                               ; preds = %70
  %78 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %45, align 8, !tbaa !36
  %79 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %78, align 8, !tbaa !44
  %80 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %79(%struct.jpeg_common_struct* noundef nonnull %43, i32 noundef 1, i64 noundef 2056) #27
  %81 = bitcast i64** %72 to i8**
  store i8* %80, i8** %81, align 8, !tbaa !3
  br label %82

82:                                               ; preds = %75, %77
  %83 = phi i8* [ %80, %77 ], [ %76, %75 ]
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(2056) %83, i8 0, i64 2056, i1 false)
  br label %87

84:                                               ; preds = %60
  %85 = sext i32 %61 to i64
  %86 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 14, i64 %85
  tail call void (%struct.jpeg_compress_struct*, i32, i32, %struct.c_derived_tbl**, ...) bitcast (void (%struct.jpeg_compress_struct*, i32, i32, %struct.c_derived_tbl**)* @jpeg_make_c_derived_tbl to void (%struct.jpeg_compress_struct*, i32, i32, %struct.c_derived_tbl**, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0, i32 noundef %11, i32 noundef %61, %struct.c_derived_tbl** noundef nonnull %86) #27
  br label %87

87:                                               ; preds = %82, %84, %51
  %88 = add nuw nsw i64 %47, 1
  %89 = load i32, i32* %36, align 4, !tbaa !286
  %90 = sext i32 %89 to i64
  %91 = icmp slt i64 %88, %90
  br i1 %91, label %46, label %92, !llvm.loop !502

92:                                               ; preds = %87, %32
  %93 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 9
  store i32 0, i32* %93, align 4, !tbaa !503
  %94 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 10
  store i32 0, i32* %94, align 8, !tbaa !504
  %95 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 4
  store i64 0, i64* %95, align 8, !tbaa !505
  %96 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 5
  store i32 0, i32* %96, align 8, !tbaa !506
  %97 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %98 = load i32, i32* %97, align 8, !tbaa !40
  %99 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  store i32 %98, i32* %99, align 8, !tbaa !507
  %100 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  store i32 0, i32* %100, align 4, !tbaa !508
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_DC_first(%struct.jpeg_compress_struct* noundef %0, [64 x i16]** nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.phuff_entropy_encoder**
  %5 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  %7 = load i32, i32* %6, align 8, !tbaa !292
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %9 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8, !tbaa !156
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !314
  %12 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 2
  store i8* %11, i8** %12, align 8, !tbaa !509
  %13 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !tbaa !315
  %15 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 3
  store i64 %14, i64* %15, align 8, !tbaa !510
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %17 = load i32, i32* %16, align 8, !tbaa !40
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  %21 = load i32, i32* %20, align 8, !tbaa !507
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  %25 = load i32, i32* %24, align 4, !tbaa !508
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %25)
  br label %26

26:                                               ; preds = %19, %23, %2
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  %28 = load i32, i32* %27, align 8, !tbaa !297
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %99

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %32 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %33 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 1
  br label %34

34:                                               ; preds = %30, %94
  %35 = phi i64 [ 0, %30 ], [ %95, %94 ]
  %36 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %35
  %37 = load [64 x i16]*, [64 x i16]** %36, align 8, !tbaa !3
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %35
  %39 = load i32, i32* %38, align 4, !tbaa !32
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %40
  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %41, align 8, !tbaa !3
  %43 = getelementptr inbounds [64 x i16], [64 x i16]* %37, i64 0, i64 0
  %44 = load i16, i16* %43, align 2, !tbaa !96
  %45 = sext i16 %44 to i32
  %46 = ashr i32 %45, %7
  %47 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 7, i64 %40
  %48 = load i32, i32* %47, align 4, !tbaa !32
  %49 = sub nsw i32 %46, %48
  store i32 %46, i32* %47, align 4, !tbaa !32
  %50 = ashr i32 %49, 31
  %51 = add nsw i32 %50, %49
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %34
  %54 = tail call i32 @llvm.abs.i32(i32 %49, i1 true)
  br label %55

55:                                               ; preds = %53, %55
  %56 = phi i32 [ %59, %55 ], [ %54, %53 ]
  %57 = phi i32 [ %58, %55 ], [ 0, %53 ]
  %58 = add nuw nsw i32 %57, 1
  %59 = lshr i32 %56, 1
  %60 = icmp ult i32 %56, 2
  br i1 %60, label %61, label %55, !llvm.loop !511

61:                                               ; preds = %55
  %62 = icmp ugt i32 %57, 10
  br i1 %62, label %63, label %68

63:                                               ; preds = %61
  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %31, align 8, !tbaa !8
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i64 0, i32 5
  store i32 6, i32* %65, align 8, !tbaa !19
  %66 = bitcast %struct.jpeg_error_mgr* %64 to void (%struct.jpeg_common_struct*, ...)**
  %67 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %66, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %67(%struct.jpeg_common_struct* noundef %32) #27
  br label %68

68:                                               ; preds = %34, %63, %61
  %69 = phi i32 [ %58, %63 ], [ %58, %61 ], [ 0, %34 ]
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 0, i32 5
  %71 = load i32, i32* %70, align 4, !tbaa !318
  %72 = load i32, i32* %33, align 8, !tbaa !499
  %73 = icmp eq i32 %72, 0
  %74 = sext i32 %71 to i64
  br i1 %73, label %82, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 15, i64 %74
  %77 = load i64*, i64** %76, align 8, !tbaa !3
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds i64, i64* %77, i64 %78
  %80 = load i64, i64* %79, align 8, !tbaa !35
  %81 = add nsw i64 %80, 1
  store i64 %81, i64* %79, align 8, !tbaa !35
  br label %91

82:                                               ; preds = %68
  %83 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 14, i64 %74
  %84 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %83, align 8, !tbaa !3
  %85 = zext i32 %69 to i64
  %86 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %84, i64 0, i32 0, i64 %85
  %87 = load i32, i32* %86, align 4, !tbaa !32
  %88 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %84, i64 0, i32 1, i64 %85
  %89 = load i8, i8* %88, align 1, !tbaa !7
  %90 = sext i8 %89 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %87, i32 noundef %90) #27
  br label %91

91:                                               ; preds = %75, %82
  %92 = icmp eq i32 %69, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %91
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %51, i32 noundef %69)
  br label %94

94:                                               ; preds = %91, %93
  %95 = add nuw nsw i64 %35, 1
  %96 = load i32, i32* %27, align 8, !tbaa !297
  %97 = sext i32 %96 to i64
  %98 = icmp slt i64 %95, %97
  br i1 %98, label %34, label %99, !llvm.loop !512

99:                                               ; preds = %94, %26
  %100 = load i8*, i8** %12, align 8, !tbaa !509
  %101 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8, !tbaa !156
  %102 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %101, i64 0, i32 0
  store i8* %100, i8** %102, align 8, !tbaa !314
  %103 = load i64, i64* %15, align 8, !tbaa !510
  %104 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %101, i64 0, i32 1
  store i64 %103, i64* %104, align 8, !tbaa !315
  %105 = load i32, i32* %16, align 8, !tbaa !40
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  %109 = load i32, i32* %108, align 8, !tbaa !507
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  %113 = load i32, i32* %112, align 4, !tbaa !508
  %114 = add nsw i32 %113, 1
  %115 = and i32 %114, 7
  store i32 %115, i32* %112, align 4, !tbaa !508
  br label %116

116:                                              ; preds = %111, %107
  %117 = phi i32 [ %105, %111 ], [ %109, %107 ]
  %118 = add i32 %117, -1
  store i32 %118, i32* %108, align 8, !tbaa !507
  br label %119

119:                                              ; preds = %116, %99
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_AC_first(%struct.jpeg_compress_struct* noundef %0, [64 x i16]** nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.phuff_entropy_encoder**
  %5 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  %7 = load i32, i32* %6, align 8, !tbaa !289
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  %9 = load i32, i32* %8, align 8, !tbaa !292
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %11 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %10, align 8, !tbaa !156
  %12 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !314
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 2
  store i8* %13, i8** %14, align 8, !tbaa !509
  %15 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %11, i64 0, i32 1
  %16 = load i64, i64* %15, align 8, !tbaa !315
  %17 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 3
  store i64 %16, i64* %17, align 8, !tbaa !510
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %19 = load i32, i32* %18, align 8, !tbaa !40
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  %23 = load i32, i32* %22, align 8, !tbaa !507
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  %27 = load i32, i32* %26, align 4, !tbaa !508
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %27)
  br label %28

28:                                               ; preds = %21, %25, %2
  %29 = load [64 x i16]*, [64 x i16]** %1, align 8, !tbaa !3
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %31 = load i32, i32* %30, align 4, !tbaa !279
  %32 = icmp sgt i32 %31, %7
  br i1 %32, label %147, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 9
  %35 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 8
  %36 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 1
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %38 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %39 = sext i32 %31 to i64
  %40 = add i32 %7, 1
  br label %41

41:                                               ; preds = %33, %134
  %42 = phi i64 [ %39, %33 ], [ %136, %134 ]
  %43 = phi i32 [ 0, %33 ], [ %135, %134 ]
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %42
  %45 = load i32, i32* %44, align 4, !tbaa !32
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [64 x i16], [64 x i16]* %29, i64 0, i64 %46
  %48 = load i16, i16* %47, align 2, !tbaa !96
  %49 = sext i16 %48 to i32
  %50 = icmp eq i16 %48, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %41
  %52 = add nsw i32 %43, 1
  br label %134

53:                                               ; preds = %41
  %54 = icmp slt i16 %48, 0
  %55 = sub nsw i32 0, %49
  %56 = ashr i32 %55, %9
  %57 = xor i32 %56, -1
  %58 = ashr i32 %49, %9
  %59 = select i1 %54, i32 %57, i32 %58
  %60 = select i1 %54, i32 %56, i32 %58
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  %63 = add nsw i32 %43, 1
  br label %134

64:                                               ; preds = %53
  %65 = load i32, i32* %34, align 4, !tbaa !503
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef nonnull %5)
  br label %68

68:                                               ; preds = %67, %64
  %69 = icmp sgt i32 %43, 15
  br i1 %69, label %73, label %70

70:                                               ; preds = %93, %68
  %71 = phi i32 [ %43, %68 ], [ %94, %93 ]
  %72 = icmp ult i32 %60, 2
  br i1 %72, label %109, label %96

73:                                               ; preds = %68, %93
  %74 = phi i32 [ %94, %93 ], [ %43, %68 ]
  %75 = load i32, i32* %35, align 8, !tbaa !501
  %76 = load i32, i32* %36, align 8, !tbaa !499
  %77 = icmp eq i32 %76, 0
  %78 = sext i32 %75 to i64
  br i1 %77, label %85, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 15, i64 %78
  %81 = load i64*, i64** %80, align 8, !tbaa !3
  %82 = getelementptr inbounds i64, i64* %81, i64 240
  %83 = load i64, i64* %82, align 8, !tbaa !35
  %84 = add nsw i64 %83, 1
  store i64 %84, i64* %82, align 8, !tbaa !35
  br label %93

85:                                               ; preds = %73
  %86 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 14, i64 %78
  %87 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %86, align 8, !tbaa !3
  %88 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %87, i64 0, i32 0, i64 240
  %89 = load i32, i32* %88, align 4, !tbaa !32
  %90 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %87, i64 0, i32 1, i64 240
  %91 = load i8, i8* %90, align 1, !tbaa !7
  %92 = sext i8 %91 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %89, i32 noundef %92) #27
  br label %93

93:                                               ; preds = %79, %85
  %94 = add nsw i32 %74, -16
  %95 = icmp sgt i32 %74, 31
  br i1 %95, label %73, label %70, !llvm.loop !513

96:                                               ; preds = %70, %96
  %97 = phi i32 [ %99, %96 ], [ %60, %70 ]
  %98 = phi i32 [ %100, %96 ], [ 1, %70 ]
  %99 = ashr i32 %97, 1
  %100 = add nuw nsw i32 %98, 1
  %101 = icmp ult i32 %97, 4
  br i1 %101, label %102, label %96, !llvm.loop !514

102:                                              ; preds = %96
  %103 = icmp ugt i32 %98, 9
  br i1 %103, label %104, label %109

104:                                              ; preds = %102
  %105 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %37, align 8, !tbaa !8
  %106 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %105, i64 0, i32 5
  store i32 6, i32* %106, align 8, !tbaa !19
  %107 = bitcast %struct.jpeg_error_mgr* %105 to void (%struct.jpeg_common_struct*, ...)**
  %108 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %107, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %108(%struct.jpeg_common_struct* noundef %38) #27
  br label %109

109:                                              ; preds = %70, %104, %102
  %110 = phi i32 [ %100, %104 ], [ %100, %102 ], [ 1, %70 ]
  %111 = load i32, i32* %35, align 8, !tbaa !501
  %112 = shl i32 %71, 4
  %113 = add nsw i32 %110, %112
  %114 = load i32, i32* %36, align 8, !tbaa !499
  %115 = icmp eq i32 %114, 0
  %116 = sext i32 %111 to i64
  br i1 %115, label %124, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 15, i64 %116
  %119 = load i64*, i64** %118, align 8, !tbaa !3
  %120 = sext i32 %113 to i64
  %121 = getelementptr inbounds i64, i64* %119, i64 %120
  %122 = load i64, i64* %121, align 8, !tbaa !35
  %123 = add nsw i64 %122, 1
  store i64 %123, i64* %121, align 8, !tbaa !35
  br label %133

124:                                              ; preds = %109
  %125 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 14, i64 %116
  %126 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %125, align 8, !tbaa !3
  %127 = sext i32 %113 to i64
  %128 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %126, i64 0, i32 0, i64 %127
  %129 = load i32, i32* %128, align 4, !tbaa !32
  %130 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %126, i64 0, i32 1, i64 %127
  %131 = load i8, i8* %130, align 1, !tbaa !7
  %132 = sext i8 %131 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %129, i32 noundef %132) #27
  br label %133

133:                                              ; preds = %117, %124
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %59, i32 noundef %110)
  br label %134

134:                                              ; preds = %133, %62, %51
  %135 = phi i32 [ %52, %51 ], [ %63, %62 ], [ 0, %133 ]
  %136 = add nsw i64 %42, 1
  %137 = trunc i64 %136 to i32
  %138 = icmp eq i32 %40, %137
  br i1 %138, label %139, label %41, !llvm.loop !515

139:                                              ; preds = %134
  %140 = icmp sgt i32 %135, 0
  br i1 %140, label %141, label %147

141:                                              ; preds = %139
  %142 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 9
  %143 = load i32, i32* %142, align 4, !tbaa !503
  %144 = add i32 %143, 1
  store i32 %144, i32* %142, align 4, !tbaa !503
  %145 = icmp eq i32 %144, 32767
  br i1 %145, label %146, label %147

146:                                              ; preds = %141
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef nonnull %5)
  br label %147

147:                                              ; preds = %28, %141, %146, %139
  %148 = load i8*, i8** %14, align 8, !tbaa !509
  %149 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %10, align 8, !tbaa !156
  %150 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %149, i64 0, i32 0
  store i8* %148, i8** %150, align 8, !tbaa !314
  %151 = load i64, i64* %17, align 8, !tbaa !510
  %152 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %149, i64 0, i32 1
  store i64 %151, i64* %152, align 8, !tbaa !315
  %153 = load i32, i32* %18, align 8, !tbaa !40
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %167, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  %157 = load i32, i32* %156, align 8, !tbaa !507
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %164

159:                                              ; preds = %155
  %160 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  %161 = load i32, i32* %160, align 4, !tbaa !508
  %162 = add nsw i32 %161, 1
  %163 = and i32 %162, 7
  store i32 %163, i32* %160, align 4, !tbaa !508
  br label %164

164:                                              ; preds = %159, %155
  %165 = phi i32 [ %153, %159 ], [ %157, %155 ]
  %166 = add i32 %165, -1
  store i32 %166, i32* %156, align 8, !tbaa !507
  br label %167

167:                                              ; preds = %164, %147
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_DC_refine(%struct.jpeg_compress_struct* nocapture noundef readonly %0, [64 x i16]** nocapture noundef readonly %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.phuff_entropy_encoder**
  %5 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  %7 = load i32, i32* %6, align 8, !tbaa !292
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %9 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8, !tbaa !156
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !314
  %12 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 2
  store i8* %11, i8** %12, align 8, !tbaa !509
  %13 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %9, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !tbaa !315
  %15 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 3
  store i64 %14, i64* %15, align 8, !tbaa !510
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %17 = load i32, i32* %16, align 8, !tbaa !40
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  %21 = load i32, i32* %20, align 8, !tbaa !507
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  %25 = load i32, i32* %24, align 4, !tbaa !508
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* noundef nonnull %5, i32 noundef %25)
  br label %26

26:                                               ; preds = %19, %23, %2
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  %28 = load i32, i32* %27, align 8, !tbaa !297
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %137

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 5
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 1
  %33 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 4
  %34 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 6
  br label %35

35:                                               ; preds = %30, %131
  %36 = phi i32 [ %28, %30 ], [ %132, %131 ]
  %37 = phi i32 [ %28, %30 ], [ %133, %131 ]
  %38 = phi i64 [ 0, %30 ], [ %134, %131 ]
  %39 = load i32, i32* %32, align 8, !tbaa !499
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %131

41:                                               ; preds = %35
  %42 = load i32, i32* %31, align 8, !tbaa !506
  %43 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %38
  %44 = load [64 x i16]*, [64 x i16]** %43, align 8, !tbaa !3
  %45 = getelementptr inbounds [64 x i16], [64 x i16]* %44, i64 0, i64 0
  %46 = load i16, i16* %45, align 2, !tbaa !96
  %47 = sext i16 %46 to i32
  %48 = lshr i32 %47, %7
  %49 = and i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = add nsw i32 %42, 1
  %52 = sub i32 23, %42
  %53 = zext i32 %52 to i64
  %54 = shl nuw i64 %50, %53
  %55 = load i64, i64* %33, align 8, !tbaa !505
  %56 = or i64 %54, %55
  %57 = icmp sgt i32 %42, 6
  br i1 %57, label %58, label %127

58:                                               ; preds = %41, %121
  %59 = phi i64 [ %122, %121 ], [ %56, %41 ]
  %60 = phi i32 [ %123, %121 ], [ %51, %41 ]
  %61 = lshr i64 %59, 16
  %62 = trunc i64 %61 to i8
  %63 = load i8*, i8** %12, align 8, !tbaa !509
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %64, i8** %12, align 8, !tbaa !509
  store i8 %62, i8* %63, align 1, !tbaa !7
  %65 = load i64, i64* %15, align 8, !tbaa !510
  %66 = add i64 %65, -1
  store i64 %66, i64* %15, align 8, !tbaa !510
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %90

68:                                               ; preds = %58
  %69 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %34, align 8, !tbaa !498
  %70 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %69, i64 0, i32 6
  %71 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %70, align 8, !tbaa !156
  %72 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %71, i64 0, i32 3
  %73 = bitcast i32 (...)** %72 to i32 (%struct.jpeg_compress_struct*, ...)**
  %74 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %73, align 8, !tbaa !316
  %75 = tail call i32 (%struct.jpeg_compress_struct*, ...) %74(%struct.jpeg_compress_struct* noundef %69) #27
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %85

77:                                               ; preds = %68
  %78 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %34, align 8, !tbaa !498
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %78, i64 0, i32 0
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %79, align 8, !tbaa !8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 5
  store i32 24, i32* %81, align 8, !tbaa !19
  %82 = bitcast %struct.jpeg_error_mgr* %80 to void (%struct.jpeg_common_struct*, ...)**
  %83 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %82, align 8, !tbaa !20
  %84 = bitcast %struct.jpeg_compress_struct* %78 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %83(%struct.jpeg_common_struct* noundef %84) #27
  br label %85

85:                                               ; preds = %77, %68
  %86 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %71, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8, !tbaa !314
  store i8* %87, i8** %12, align 8, !tbaa !509
  %88 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %71, i64 0, i32 1
  %89 = load i64, i64* %88, align 8, !tbaa !315
  store i64 %89, i64* %15, align 8, !tbaa !510
  br label %90

90:                                               ; preds = %85, %58
  %91 = and i64 %59, 16711680
  %92 = icmp eq i64 %91, 16711680
  br i1 %92, label %93, label %121

93:                                               ; preds = %90
  %94 = load i8*, i8** %12, align 8, !tbaa !509
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  store i8* %95, i8** %12, align 8, !tbaa !509
  store i8 0, i8* %94, align 1, !tbaa !7
  %96 = load i64, i64* %15, align 8, !tbaa !510
  %97 = add i64 %96, -1
  store i64 %97, i64* %15, align 8, !tbaa !510
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %121

99:                                               ; preds = %93
  %100 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %34, align 8, !tbaa !498
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %100, i64 0, i32 6
  %102 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %101, align 8, !tbaa !156
  %103 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %102, i64 0, i32 3
  %104 = bitcast i32 (...)** %103 to i32 (%struct.jpeg_compress_struct*, ...)**
  %105 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %104, align 8, !tbaa !316
  %106 = tail call i32 (%struct.jpeg_compress_struct*, ...) %105(%struct.jpeg_compress_struct* noundef %100) #27
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %116

108:                                              ; preds = %99
  %109 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %34, align 8, !tbaa !498
  %110 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %109, i64 0, i32 0
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %110, align 8, !tbaa !8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i64 0, i32 5
  store i32 24, i32* %112, align 8, !tbaa !19
  %113 = bitcast %struct.jpeg_error_mgr* %111 to void (%struct.jpeg_common_struct*, ...)**
  %114 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %113, align 8, !tbaa !20
  %115 = bitcast %struct.jpeg_compress_struct* %109 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %114(%struct.jpeg_common_struct* noundef %115) #27
  br label %116

116:                                              ; preds = %108, %99
  %117 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %102, i64 0, i32 0
  %118 = load i8*, i8** %117, align 8, !tbaa !314
  store i8* %118, i8** %12, align 8, !tbaa !509
  %119 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %102, i64 0, i32 1
  %120 = load i64, i64* %119, align 8, !tbaa !315
  store i64 %120, i64* %15, align 8, !tbaa !510
  br label %121

121:                                              ; preds = %116, %93, %90
  %122 = shl i64 %59, 8
  %123 = add nsw i32 %60, -8
  %124 = icmp sgt i32 %60, 15
  br i1 %124, label %58, label %125, !llvm.loop !516

125:                                              ; preds = %121
  %126 = load i32, i32* %27, align 8, !tbaa !297
  br label %127

127:                                              ; preds = %125, %41
  %128 = phi i32 [ %36, %41 ], [ %126, %125 ]
  %129 = phi i32 [ %51, %41 ], [ %123, %125 ]
  %130 = phi i64 [ %56, %41 ], [ %122, %125 ]
  store i64 %130, i64* %33, align 8, !tbaa !505
  store i32 %129, i32* %31, align 8, !tbaa !506
  br label %131

131:                                              ; preds = %35, %127
  %132 = phi i32 [ %36, %35 ], [ %128, %127 ]
  %133 = phi i32 [ %37, %35 ], [ %128, %127 ]
  %134 = add nuw nsw i64 %38, 1
  %135 = sext i32 %133 to i64
  %136 = icmp slt i64 %134, %135
  br i1 %136, label %35, label %137, !llvm.loop !517

137:                                              ; preds = %131, %26
  %138 = load i8*, i8** %12, align 8, !tbaa !509
  %139 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8, !tbaa !156
  %140 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %139, i64 0, i32 0
  store i8* %138, i8** %140, align 8, !tbaa !314
  %141 = load i64, i64* %15, align 8, !tbaa !510
  %142 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %139, i64 0, i32 1
  store i64 %141, i64* %142, align 8, !tbaa !315
  %143 = load i32, i32* %16, align 8, !tbaa !40
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 12
  %147 = load i32, i32* %146, align 8, !tbaa !507
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %154

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 13
  %151 = load i32, i32* %150, align 4, !tbaa !508
  %152 = add nsw i32 %151, 1
  %153 = and i32 %152, 7
  store i32 %153, i32* %150, align 4, !tbaa !508
  br label %154

154:                                              ; preds = %149, %145
  %155 = phi i32 [ %143, %149 ], [ %147, %145 ]
  %156 = add i32 %155, -1
  store i32 %156, i32* %146, align 8, !tbaa !507
  br label %157

157:                                              ; preds = %154, %137
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_mcu_AC_refine(%struct.jpeg_compress_struct* nocapture noundef readonly %0, [64 x i16]** nocapture noundef readonly %1) #2 {
  %3 = alloca [64 x i32], align 16
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %5 = bitcast %struct.jpeg_entropy_encoder** %4 to %struct.phuff_entropy_encoder**
  %6 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %5, align 8, !tbaa !273
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  %8 = load i32, i32* %7, align 8, !tbaa !289
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  %10 = load i32, i32* %9, align 8, !tbaa !292
  %11 = bitcast [64 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #27
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %13 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %12, align 8, !tbaa !156
  %14 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8, !tbaa !314
  %16 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 2
  store i8* %15, i8** %16, align 8, !tbaa !509
  %17 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %13, i64 0, i32 1
  %18 = load i64, i64* %17, align 8, !tbaa !315
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 3
  store i64 %18, i64* %19, align 8, !tbaa !510
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %21 = load i32, i32* %20, align 8, !tbaa !40
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 12
  %25 = load i32, i32* %24, align 8, !tbaa !507
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 13
  %29 = load i32, i32* %28, align 4, !tbaa !508
  tail call fastcc void @emit_restart(%struct.phuff_entropy_encoder* noundef nonnull %6, i32 noundef %29)
  br label %30

30:                                               ; preds = %23, %27, %2
  %31 = load [64 x i16]*, [64 x i16]** %1, align 8, !tbaa !3
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %33 = load i32, i32* %32, align 4, !tbaa !279
  %34 = icmp slt i32 %8, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 10
  br label %306

37:                                               ; preds = %30
  %38 = sext i32 %33 to i64
  %39 = add i32 %8, 1
  %40 = sub i32 %39, %33
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %8, %33
  br i1 %42, label %77, label %43

43:                                               ; preds = %37
  %44 = and i32 %40, -2
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ %38, %43 ], [ %74, %45 ]
  %47 = phi i32 [ 0, %43 ], [ %73, %45 ]
  %48 = phi i32 [ 0, %43 ], [ %75, %45 ]
  %49 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %46
  %50 = load i32, i32* %49, align 4, !tbaa !32
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [64 x i16], [64 x i16]* %31, i64 0, i64 %51
  %53 = load i16, i16* %52, align 2, !tbaa !96
  %54 = tail call i16 @llvm.abs.i16(i16 %53, i1 false)
  %55 = zext i16 %54 to i32
  %56 = lshr i32 %55, %10
  %57 = getelementptr inbounds [64 x i32], [64 x i32]* %3, i64 0, i64 %46
  store i32 %56, i32* %57, align 4, !tbaa !32
  %58 = icmp eq i32 %56, 1
  %59 = trunc i64 %46 to i32
  %60 = select i1 %58, i32 %59, i32 %47
  %61 = add nsw i64 %46, 1
  %62 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %61
  %63 = load i32, i32* %62, align 4, !tbaa !32
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [64 x i16], [64 x i16]* %31, i64 0, i64 %64
  %66 = load i16, i16* %65, align 2, !tbaa !96
  %67 = tail call i16 @llvm.abs.i16(i16 %66, i1 false)
  %68 = zext i16 %67 to i32
  %69 = lshr i32 %68, %10
  %70 = getelementptr inbounds [64 x i32], [64 x i32]* %3, i64 0, i64 %61
  store i32 %69, i32* %70, align 4, !tbaa !32
  %71 = icmp eq i32 %69, 1
  %72 = trunc i64 %61 to i32
  %73 = select i1 %71, i32 %72, i32 %60
  %74 = add nsw i64 %46, 2
  %75 = add i32 %48, 2
  %76 = icmp eq i32 %75, %44
  br i1 %76, label %77, label %45, !llvm.loop !518

77:                                               ; preds = %45, %37
  %78 = phi i32 [ undef, %37 ], [ %73, %45 ]
  %79 = phi i64 [ %38, %37 ], [ %74, %45 ]
  %80 = phi i32 [ 0, %37 ], [ %73, %45 ]
  %81 = icmp eq i32 %41, 0
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %79
  %84 = load i32, i32* %83, align 4, !tbaa !32
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [64 x i16], [64 x i16]* %31, i64 0, i64 %85
  %87 = load i16, i16* %86, align 2, !tbaa !96
  %88 = tail call i16 @llvm.abs.i16(i16 %87, i1 false)
  %89 = zext i16 %88 to i32
  %90 = lshr i32 %89, %10
  %91 = getelementptr inbounds [64 x i32], [64 x i32]* %3, i64 0, i64 %79
  store i32 %90, i32* %91, align 4, !tbaa !32
  %92 = icmp eq i32 %90, 1
  %93 = trunc i64 %79 to i32
  %94 = select i1 %92, i32 %93, i32 %80
  br label %95

95:                                               ; preds = %77, %82
  %96 = phi i32 [ %78, %77 ], [ %94, %82 ]
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 11
  %99 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 10
  br i1 %34, label %306, label %100

100:                                              ; preds = %95
  %101 = load i8*, i8** %98, align 8, !tbaa !497
  %102 = load i32, i32* %99, align 8, !tbaa !504
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  %105 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 8
  %106 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 1
  %107 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 5
  %108 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 4
  %109 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 6
  %110 = sext i32 %33 to i64
  %111 = add i32 %8, 1
  br label %112

112:                                              ; preds = %100, %299
  %113 = phi i64 [ %110, %100 ], [ %303, %299 ]
  %114 = phi i32 [ 0, %100 ], [ %302, %299 ]
  %115 = phi i32 [ 0, %100 ], [ %301, %299 ]
  %116 = phi i8* [ %104, %100 ], [ %300, %299 ]
  %117 = getelementptr inbounds [64 x i32], [64 x i32]* %3, i64 0, i64 %113
  %118 = load i32, i32* %117, align 4, !tbaa !32
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %147, label %120

120:                                              ; preds = %112
  %121 = icmp sle i64 %113, %97
  %122 = icmp sgt i32 %114, 15
  %123 = select i1 %122, i1 %121, i1 false
  br i1 %123, label %124, label %174

124:                                              ; preds = %120
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef %6)
  %125 = load i32, i32* %105, align 8, !tbaa !501
  %126 = load i32, i32* %106, align 8, !tbaa !499
  %127 = icmp eq i32 %126, 0
  %128 = sext i32 %125 to i64
  br i1 %127, label %135, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 15, i64 %128
  %131 = load i64*, i64** %130, align 8, !tbaa !3
  %132 = getelementptr inbounds i64, i64* %131, i64 240
  %133 = load i64, i64* %132, align 8, !tbaa !35
  %134 = add nsw i64 %133, 1
  store i64 %134, i64* %132, align 8, !tbaa !35
  br label %143

135:                                              ; preds = %124
  %136 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 14, i64 %128
  %137 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %136, align 8, !tbaa !3
  %138 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %137, i64 0, i32 0, i64 240
  %139 = load i32, i32* %138, align 4, !tbaa !32
  %140 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %137, i64 0, i32 1, i64 240
  %141 = load i8, i8* %140, align 1, !tbaa !7
  %142 = sext i8 %141 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %6, i32 noundef %139, i32 noundef %142) #27
  br label %143

143:                                              ; preds = %135, %129
  %144 = add nsw i32 %114, -16
  tail call fastcc void @emit_buffered_bits(%struct.phuff_entropy_encoder* noundef nonnull %6, i8* noundef %116, i32 noundef %115)
  %145 = load i8*, i8** %98, align 8, !tbaa !497
  %146 = icmp ugt i32 %114, 31
  br i1 %146, label %149, label %174

147:                                              ; preds = %112
  %148 = add nsw i32 %114, 1
  br label %299

149:                                              ; preds = %143, %170
  %150 = phi i32 [ %171, %170 ], [ %144, %143 ]
  %151 = phi i8* [ %172, %170 ], [ %145, %143 ]
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef nonnull %6)
  %152 = load i32, i32* %105, align 8, !tbaa !501
  %153 = load i32, i32* %106, align 8, !tbaa !499
  %154 = icmp eq i32 %153, 0
  %155 = sext i32 %152 to i64
  br i1 %154, label %162, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 15, i64 %155
  %158 = load i64*, i64** %157, align 8, !tbaa !3
  %159 = getelementptr inbounds i64, i64* %158, i64 240
  %160 = load i64, i64* %159, align 8, !tbaa !35
  %161 = add nsw i64 %160, 1
  store i64 %161, i64* %159, align 8, !tbaa !35
  br label %170

162:                                              ; preds = %149
  %163 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 14, i64 %155
  %164 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %163, align 8, !tbaa !3
  %165 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %164, i64 0, i32 0, i64 240
  %166 = load i32, i32* %165, align 4, !tbaa !32
  %167 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %164, i64 0, i32 1, i64 240
  %168 = load i8, i8* %167, align 1, !tbaa !7
  %169 = sext i8 %168 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %6, i32 noundef %166, i32 noundef %169) #27
  br label %170

170:                                              ; preds = %156, %162
  %171 = add nsw i32 %150, -16
  tail call fastcc void @emit_buffered_bits(%struct.phuff_entropy_encoder* noundef nonnull %6, i8* noundef %151, i32 noundef 0)
  %172 = load i8*, i8** %98, align 8, !tbaa !497
  %173 = icmp sgt i32 %150, 31
  br i1 %173, label %149, label %174, !llvm.loop !519

174:                                              ; preds = %170, %143, %120
  %175 = phi i8* [ %116, %120 ], [ %145, %143 ], [ %172, %170 ]
  %176 = phi i32 [ %115, %120 ], [ 0, %143 ], [ 0, %170 ]
  %177 = phi i32 [ %114, %120 ], [ %144, %143 ], [ %171, %170 ]
  %178 = icmp sgt i32 %118, 1
  br i1 %178, label %179, label %185

179:                                              ; preds = %174
  %180 = trunc i32 %118 to i8
  %181 = and i8 %180, 1
  %182 = add i32 %176, 1
  %183 = zext i32 %176 to i64
  %184 = getelementptr inbounds i8, i8* %175, i64 %183
  store i8 %181, i8* %184, align 1, !tbaa !7
  br label %299

185:                                              ; preds = %174
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef %6)
  %186 = load i32, i32* %105, align 8, !tbaa !501
  %187 = shl i32 %177, 4
  %188 = or i32 %187, 1
  %189 = load i32, i32* %106, align 8, !tbaa !499
  %190 = icmp eq i32 %189, 0
  %191 = sext i32 %186 to i64
  br i1 %190, label %199, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 15, i64 %191
  %194 = load i64*, i64** %193, align 8, !tbaa !3
  %195 = sext i32 %188 to i64
  %196 = getelementptr inbounds i64, i64* %194, i64 %195
  %197 = load i64, i64* %196, align 8, !tbaa !35
  %198 = add nsw i64 %197, 1
  store i64 %198, i64* %196, align 8, !tbaa !35
  br label %297

199:                                              ; preds = %185
  %200 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 14, i64 %191
  %201 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %200, align 8, !tbaa !3
  %202 = sext i32 %188 to i64
  %203 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %201, i64 0, i32 0, i64 %202
  %204 = load i32, i32* %203, align 4, !tbaa !32
  %205 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %201, i64 0, i32 1, i64 %202
  %206 = load i8, i8* %205, align 1, !tbaa !7
  %207 = sext i8 %206 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %6, i32 noundef %204, i32 noundef %207) #27
  %208 = load i32, i32* %106, align 8, !tbaa !499
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %297

210:                                              ; preds = %199
  %211 = load i32, i32* %107, align 8, !tbaa !506
  %212 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([80 x i32]* @jpeg_natural_order to [0 x i32]*), i64 0, i64 %113
  %213 = load i32, i32* %212, align 4, !tbaa !32
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [64 x i16], [64 x i16]* %31, i64 0, i64 %214
  %216 = load i16, i16* %215, align 2, !tbaa !96
  %217 = xor i16 %216, -1
  %218 = lshr i16 %217, 15
  %219 = zext i16 %218 to i64
  %220 = add nsw i32 %211, 1
  %221 = sub i32 23, %211
  %222 = zext i32 %221 to i64
  %223 = shl nuw i64 %219, %222
  %224 = load i64, i64* %108, align 8, !tbaa !505
  %225 = or i64 %223, %224
  %226 = icmp sgt i32 %211, 6
  br i1 %226, label %227, label %294

227:                                              ; preds = %210, %290
  %228 = phi i64 [ %291, %290 ], [ %225, %210 ]
  %229 = phi i32 [ %292, %290 ], [ %220, %210 ]
  %230 = lshr i64 %228, 16
  %231 = trunc i64 %230 to i8
  %232 = load i8*, i8** %16, align 8, !tbaa !509
  %233 = getelementptr inbounds i8, i8* %232, i64 1
  store i8* %233, i8** %16, align 8, !tbaa !509
  store i8 %231, i8* %232, align 1, !tbaa !7
  %234 = load i64, i64* %19, align 8, !tbaa !510
  %235 = add i64 %234, -1
  store i64 %235, i64* %19, align 8, !tbaa !510
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %259

237:                                              ; preds = %227
  %238 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %109, align 8, !tbaa !498
  %239 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %238, i64 0, i32 6
  %240 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %239, align 8, !tbaa !156
  %241 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 3
  %242 = bitcast i32 (...)** %241 to i32 (%struct.jpeg_compress_struct*, ...)**
  %243 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %242, align 8, !tbaa !316
  %244 = tail call i32 (%struct.jpeg_compress_struct*, ...) %243(%struct.jpeg_compress_struct* noundef %238) #27
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %254

246:                                              ; preds = %237
  %247 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %109, align 8, !tbaa !498
  %248 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %247, i64 0, i32 0
  %249 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %248, align 8, !tbaa !8
  %250 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %249, i64 0, i32 5
  store i32 24, i32* %250, align 8, !tbaa !19
  %251 = bitcast %struct.jpeg_error_mgr* %249 to void (%struct.jpeg_common_struct*, ...)**
  %252 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %251, align 8, !tbaa !20
  %253 = bitcast %struct.jpeg_compress_struct* %247 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %252(%struct.jpeg_common_struct* noundef %253) #27
  br label %254

254:                                              ; preds = %246, %237
  %255 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 0
  %256 = load i8*, i8** %255, align 8, !tbaa !314
  store i8* %256, i8** %16, align 8, !tbaa !509
  %257 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %240, i64 0, i32 1
  %258 = load i64, i64* %257, align 8, !tbaa !315
  store i64 %258, i64* %19, align 8, !tbaa !510
  br label %259

259:                                              ; preds = %254, %227
  %260 = and i64 %228, 16711680
  %261 = icmp eq i64 %260, 16711680
  br i1 %261, label %262, label %290

262:                                              ; preds = %259
  %263 = load i8*, i8** %16, align 8, !tbaa !509
  %264 = getelementptr inbounds i8, i8* %263, i64 1
  store i8* %264, i8** %16, align 8, !tbaa !509
  store i8 0, i8* %263, align 1, !tbaa !7
  %265 = load i64, i64* %19, align 8, !tbaa !510
  %266 = add i64 %265, -1
  store i64 %266, i64* %19, align 8, !tbaa !510
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %290

268:                                              ; preds = %262
  %269 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %109, align 8, !tbaa !498
  %270 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %269, i64 0, i32 6
  %271 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %270, align 8, !tbaa !156
  %272 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %271, i64 0, i32 3
  %273 = bitcast i32 (...)** %272 to i32 (%struct.jpeg_compress_struct*, ...)**
  %274 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %273, align 8, !tbaa !316
  %275 = tail call i32 (%struct.jpeg_compress_struct*, ...) %274(%struct.jpeg_compress_struct* noundef %269) #27
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %285

277:                                              ; preds = %268
  %278 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %109, align 8, !tbaa !498
  %279 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %278, i64 0, i32 0
  %280 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %279, align 8, !tbaa !8
  %281 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %280, i64 0, i32 5
  store i32 24, i32* %281, align 8, !tbaa !19
  %282 = bitcast %struct.jpeg_error_mgr* %280 to void (%struct.jpeg_common_struct*, ...)**
  %283 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %282, align 8, !tbaa !20
  %284 = bitcast %struct.jpeg_compress_struct* %278 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %283(%struct.jpeg_common_struct* noundef %284) #27
  br label %285

285:                                              ; preds = %277, %268
  %286 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %271, i64 0, i32 0
  %287 = load i8*, i8** %286, align 8, !tbaa !314
  store i8* %287, i8** %16, align 8, !tbaa !509
  %288 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %271, i64 0, i32 1
  %289 = load i64, i64* %288, align 8, !tbaa !315
  store i64 %289, i64* %19, align 8, !tbaa !510
  br label %290

290:                                              ; preds = %285, %262, %259
  %291 = shl i64 %228, 8
  %292 = add nsw i32 %229, -8
  %293 = icmp sgt i32 %229, 15
  br i1 %293, label %227, label %294, !llvm.loop !516

294:                                              ; preds = %290, %210
  %295 = phi i32 [ %220, %210 ], [ %292, %290 ]
  %296 = phi i64 [ %225, %210 ], [ %291, %290 ]
  store i64 %296, i64* %108, align 8, !tbaa !505
  store i32 %295, i32* %107, align 8, !tbaa !506
  br label %297

297:                                              ; preds = %192, %199, %294
  tail call fastcc void @emit_buffered_bits(%struct.phuff_entropy_encoder* noundef nonnull %6, i8* noundef %175, i32 noundef %176)
  %298 = load i8*, i8** %98, align 8, !tbaa !497
  br label %299

299:                                              ; preds = %297, %179, %147
  %300 = phi i8* [ %116, %147 ], [ %175, %179 ], [ %298, %297 ]
  %301 = phi i32 [ %115, %147 ], [ %182, %179 ], [ 0, %297 ]
  %302 = phi i32 [ %148, %147 ], [ %177, %179 ], [ 0, %297 ]
  %303 = add nsw i64 %113, 1
  %304 = trunc i64 %303 to i32
  %305 = icmp eq i32 %111, %304
  br i1 %305, label %306, label %112, !llvm.loop !520

306:                                              ; preds = %299, %35, %95
  %307 = phi i32* [ %99, %95 ], [ %36, %35 ], [ %99, %299 ]
  %308 = phi i32 [ 0, %95 ], [ 0, %35 ], [ %301, %299 ]
  %309 = phi i32 [ 0, %95 ], [ 0, %35 ], [ %302, %299 ]
  %310 = icmp sgt i32 %309, 0
  %311 = icmp ne i32 %308, 0
  %312 = select i1 %310, i1 true, i1 %311
  br i1 %312, label %313, label %323

313:                                              ; preds = %306
  %314 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 9
  %315 = load i32, i32* %314, align 4, !tbaa !503
  %316 = add i32 %315, 1
  store i32 %316, i32* %314, align 4, !tbaa !503
  %317 = load i32, i32* %307, align 8, !tbaa !504
  %318 = add i32 %317, %308
  store i32 %318, i32* %307, align 8, !tbaa !504
  %319 = icmp eq i32 %316, 32767
  %320 = icmp ugt i32 %318, 937
  %321 = select i1 %319, i1 true, i1 %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %313
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef nonnull %6)
  br label %323

323:                                              ; preds = %313, %322, %306
  %324 = load i8*, i8** %16, align 8, !tbaa !509
  %325 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %12, align 8, !tbaa !156
  %326 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %325, i64 0, i32 0
  store i8* %324, i8** %326, align 8, !tbaa !314
  %327 = load i64, i64* %19, align 8, !tbaa !510
  %328 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %325, i64 0, i32 1
  store i64 %327, i64* %328, align 8, !tbaa !315
  %329 = load i32, i32* %20, align 8, !tbaa !40
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %343, label %331

331:                                              ; preds = %323
  %332 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 12
  %333 = load i32, i32* %332, align 8, !tbaa !507
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %331
  %336 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %6, i64 0, i32 13
  %337 = load i32, i32* %336, align 4, !tbaa !508
  %338 = add nsw i32 %337, 1
  %339 = and i32 %338, 7
  store i32 %339, i32* %336, align 4, !tbaa !508
  br label %340

340:                                              ; preds = %335, %331
  %341 = phi i32 [ %329, %335 ], [ %333, %331 ]
  %342 = add i32 %341, -1
  store i32 %342, i32* %332, align 8, !tbaa !507
  br label %343

343:                                              ; preds = %340, %323
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #27
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_phuff(%struct.jpeg_compress_struct* nocapture noundef readonly %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %3 = bitcast %struct.jpeg_entropy_encoder** %2 to %struct.phuff_entropy_encoder**
  %4 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %3, align 8, !tbaa !273
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %6 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %7 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %6, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !314
  %9 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %4, i64 0, i32 2
  store i8* %8, i8** %9, align 8, !tbaa !509
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %6, i64 0, i32 1
  %11 = load i64, i64* %10, align 8, !tbaa !315
  %12 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %4, i64 0, i32 3
  store i64 %11, i64* %12, align 8, !tbaa !510
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef %4)
  tail call fastcc void @flush_bits(%struct.phuff_entropy_encoder* noundef %4)
  %13 = load i8*, i8** %9, align 8, !tbaa !509
  %14 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %5, align 8, !tbaa !156
  %15 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 0
  store i8* %13, i8** %15, align 8, !tbaa !314
  %16 = load i64, i64* %12, align 8, !tbaa !510
  %17 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14, i64 0, i32 1
  store i64 %16, i64* %17, align 8, !tbaa !315
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @finish_pass_gather_phuff(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = alloca [4 x i32], align 16
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.phuff_entropy_encoder**
  %5 = load %struct.phuff_entropy_encoder*, %struct.phuff_entropy_encoder** %4, align 8, !tbaa !273
  %6 = bitcast [4 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #27
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef %5)
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %8 = load i32, i32* %7, align 4, !tbaa !279
  %9 = icmp eq i32 %8, 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %11 = load i32, i32* %10, align 4, !tbaa !286
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %53

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %16

16:                                               ; preds = %13, %48
  %17 = phi i32 [ %11, %13 ], [ %49, %48 ]
  %18 = phi i64 [ 0, %13 ], [ %50, %48 ]
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %18
  %20 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %19, align 8, !tbaa !3
  br i1 %9, label %21, label %26

21:                                               ; preds = %16
  %22 = load i32, i32* %14, align 4, !tbaa !280
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %20, i64 0, i32 5
  br label %28

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %20, i64 0, i32 6
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32* [ %25, %24 ], [ %27, %26 ]
  %30 = load i32, i32* %29, align 4, !tbaa !32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4, !tbaa !32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 %31
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 %31
  %38 = select i1 %9, %struct.JHUFF_TBL** %36, %struct.JHUFF_TBL** %37
  %39 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %38, align 8, !tbaa !3
  %40 = icmp eq %struct.JHUFF_TBL* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...) bitcast (%struct.JHUFF_TBL* (%struct.jpeg_common_struct*)* @jpeg_alloc_huff_table to %struct.JHUFF_TBL* (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef nonnull %15) #27
  store %struct.JHUFF_TBL* %42, %struct.JHUFF_TBL** %38, align 8, !tbaa !3
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi %struct.JHUFF_TBL* [ %42, %41 ], [ %39, %35 ]
  %45 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %5, i64 0, i32 15, i64 %31
  %46 = load i64*, i64** %45, align 8, !tbaa !3
  tail call void (%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, i64*, ...) bitcast (void (%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, i64*)* @jpeg_gen_optimal_table to void (%struct.jpeg_compress_struct*, %struct.JHUFF_TBL*, i64*, ...)*)(%struct.jpeg_compress_struct* noundef nonnull %0, %struct.JHUFF_TBL* noundef %44, i64* noundef %46) #27
  store i32 1, i32* %32, align 4, !tbaa !32
  %47 = load i32, i32* %10, align 4, !tbaa !286
  br label %48

48:                                               ; preds = %28, %43, %21
  %49 = phi i32 [ %17, %28 ], [ %47, %43 ], [ %17, %21 ]
  %50 = add nuw nsw i64 %18, 1
  %51 = sext i32 %49 to i64
  %52 = icmp slt i64 %50, %51
  br i1 %52, label %16, label %53, !llvm.loop !521

53:                                               ; preds = %48, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #27
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* nocapture noundef %0) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4, !tbaa !503
  switch i32 %3, label %4 [
    i32 0, label %55
    i32 1, label %21
  ]

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i32 [ %7, %4 ], [ %3, %1 ]
  %7 = ashr i32 %6, 1
  %8 = add nuw nsw i32 %5, 1
  %9 = icmp ult i32 %6, 4
  br i1 %9, label %10, label %4, !llvm.loop !522

10:                                               ; preds = %4
  %11 = icmp ugt i32 %5, 13
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  %14 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %13, align 8, !tbaa !498
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14, i64 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 5
  store i32 40, i32* %17, align 8, !tbaa !19
  %18 = bitcast %struct.jpeg_error_mgr* %16 to void (%struct.jpeg_common_struct*, ...)**
  %19 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %18, align 8, !tbaa !20
  %20 = bitcast %struct.jpeg_compress_struct* %14 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %19(%struct.jpeg_common_struct* noundef %20) #27
  br label %21

21:                                               ; preds = %1, %12, %10
  %22 = phi i32 [ %8, %12 ], [ %8, %10 ], [ 0, %1 ]
  %23 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 8
  %24 = load i32, i32* %23, align 8, !tbaa !501
  %25 = shl i32 %22, 4
  %26 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 8, !tbaa !499
  %28 = icmp eq i32 %27, 0
  %29 = sext i32 %24 to i64
  br i1 %28, label %37, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 15, i64 %29
  %32 = load i64*, i64** %31, align 8, !tbaa !3
  %33 = sext i32 %25 to i64
  %34 = getelementptr inbounds i64, i64* %32, i64 %33
  %35 = load i64, i64* %34, align 8, !tbaa !35
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %34, align 8, !tbaa !35
  br label %46

37:                                               ; preds = %21
  %38 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 14, i64 %29
  %39 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %38, align 8, !tbaa !3
  %40 = sext i32 %25 to i64
  %41 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %39, i64 0, i32 0, i64 %40
  %42 = load i32, i32* %41, align 4, !tbaa !32
  %43 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %39, i64 0, i32 1, i64 %40
  %44 = load i8, i8* %43, align 1, !tbaa !7
  %45 = sext i8 %44 to i32
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %0, i32 noundef %42, i32 noundef %45) #27
  br label %46

46:                                               ; preds = %30, %37
  %47 = icmp eq i32 %22, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %2, align 4, !tbaa !503
  tail call fastcc void @emit_bits(%struct.phuff_entropy_encoder* noundef nonnull %0, i32 noundef %49, i32 noundef %22)
  br label %50

50:                                               ; preds = %48, %46
  store i32 0, i32* %2, align 4, !tbaa !503
  %51 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 11
  %52 = load i8*, i8** %51, align 8, !tbaa !497
  %53 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 10
  %54 = load i32, i32* %53, align 8, !tbaa !504
  tail call fastcc void @emit_buffered_bits(%struct.phuff_entropy_encoder* noundef nonnull %0, i8* noundef %52, i32 noundef %54)
  store i32 0, i32* %53, align 8, !tbaa !504
  br label %55

55:                                               ; preds = %1, %50
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @emit_bits(%struct.phuff_entropy_encoder* nocapture noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8, !tbaa !506
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  %10 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %9, align 8, !tbaa !498
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %10, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 40, i32* %13, align 8, !tbaa !19
  %14 = bitcast %struct.jpeg_error_mgr* %12 to void (%struct.jpeg_common_struct*, ...)**
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  %16 = bitcast %struct.jpeg_compress_struct* %10 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef %16) #27
  br label %17

17:                                               ; preds = %8, %3
  %18 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8, !tbaa !499
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %108

21:                                               ; preds = %17
  %22 = zext i32 %2 to i64
  %23 = shl nsw i64 -1, %22
  %24 = xor i64 %23, -1
  %25 = and i64 %24, %4
  %26 = add nsw i32 %6, %2
  %27 = sub nsw i32 24, %26
  %28 = zext i32 %27 to i64
  %29 = shl i64 %25, %28
  %30 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 4
  %31 = load i64, i64* %30, align 8, !tbaa !505
  %32 = or i64 %31, %29
  %33 = icmp sgt i32 %26, 7
  br i1 %33, label %34, label %105

34:                                               ; preds = %21
  %35 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 2
  %36 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 3
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  br label %38

38:                                               ; preds = %34, %101
  %39 = phi i64 [ %32, %34 ], [ %102, %101 ]
  %40 = phi i32 [ %26, %34 ], [ %103, %101 ]
  %41 = lshr i64 %39, 16
  %42 = trunc i64 %41 to i8
  %43 = load i8*, i8** %35, align 8, !tbaa !509
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %44, i8** %35, align 8, !tbaa !509
  store i8 %42, i8* %43, align 1, !tbaa !7
  %45 = load i64, i64* %36, align 8, !tbaa !510
  %46 = add i64 %45, -1
  store i64 %46, i64* %36, align 8, !tbaa !510
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %70

48:                                               ; preds = %38
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %37, align 8, !tbaa !498
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %49, i64 0, i32 6
  %51 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %50, align 8, !tbaa !156
  %52 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 3
  %53 = bitcast i32 (...)** %52 to i32 (%struct.jpeg_compress_struct*, ...)**
  %54 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %53, align 8, !tbaa !316
  %55 = tail call i32 (%struct.jpeg_compress_struct*, ...) %54(%struct.jpeg_compress_struct* noundef %49) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %48
  %58 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %37, align 8, !tbaa !498
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %58, i64 0, i32 0
  %60 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %59, align 8, !tbaa !8
  %61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i64 0, i32 5
  store i32 24, i32* %61, align 8, !tbaa !19
  %62 = bitcast %struct.jpeg_error_mgr* %60 to void (%struct.jpeg_common_struct*, ...)**
  %63 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %62, align 8, !tbaa !20
  %64 = bitcast %struct.jpeg_compress_struct* %58 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %63(%struct.jpeg_common_struct* noundef %64) #27
  br label %65

65:                                               ; preds = %48, %57
  %66 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8, !tbaa !314
  store i8* %67, i8** %35, align 8, !tbaa !509
  %68 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 1
  %69 = load i64, i64* %68, align 8, !tbaa !315
  store i64 %69, i64* %36, align 8, !tbaa !510
  br label %70

70:                                               ; preds = %65, %38
  %71 = and i64 %39, 16711680
  %72 = icmp eq i64 %71, 16711680
  br i1 %72, label %73, label %101

73:                                               ; preds = %70
  %74 = load i8*, i8** %35, align 8, !tbaa !509
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  store i8* %75, i8** %35, align 8, !tbaa !509
  store i8 0, i8* %74, align 1, !tbaa !7
  %76 = load i64, i64* %36, align 8, !tbaa !510
  %77 = add i64 %76, -1
  store i64 %77, i64* %36, align 8, !tbaa !510
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %101

79:                                               ; preds = %73
  %80 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %37, align 8, !tbaa !498
  %81 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %80, i64 0, i32 6
  %82 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %81, align 8, !tbaa !156
  %83 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %82, i64 0, i32 3
  %84 = bitcast i32 (...)** %83 to i32 (%struct.jpeg_compress_struct*, ...)**
  %85 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %84, align 8, !tbaa !316
  %86 = tail call i32 (%struct.jpeg_compress_struct*, ...) %85(%struct.jpeg_compress_struct* noundef %80) #27
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %96

88:                                               ; preds = %79
  %89 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %37, align 8, !tbaa !498
  %90 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %89, i64 0, i32 0
  %91 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %90, align 8, !tbaa !8
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %91, i64 0, i32 5
  store i32 24, i32* %92, align 8, !tbaa !19
  %93 = bitcast %struct.jpeg_error_mgr* %91 to void (%struct.jpeg_common_struct*, ...)**
  %94 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %93, align 8, !tbaa !20
  %95 = bitcast %struct.jpeg_compress_struct* %89 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %94(%struct.jpeg_common_struct* noundef %95) #27
  br label %96

96:                                               ; preds = %79, %88
  %97 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %82, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !314
  store i8* %98, i8** %35, align 8, !tbaa !509
  %99 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %82, i64 0, i32 1
  %100 = load i64, i64* %99, align 8, !tbaa !315
  store i64 %100, i64* %36, align 8, !tbaa !510
  br label %101

101:                                              ; preds = %73, %96, %70
  %102 = shl i64 %39, 8
  %103 = add nsw i32 %40, -8
  %104 = icmp sgt i32 %40, 15
  br i1 %104, label %38, label %105, !llvm.loop !516

105:                                              ; preds = %101, %21
  %106 = phi i32 [ %26, %21 ], [ %103, %101 ]
  %107 = phi i64 [ %32, %21 ], [ %102, %101 ]
  store i64 %107, i64* %30, align 8, !tbaa !505
  store i32 %106, i32* %5, align 8, !tbaa !506
  br label %108

108:                                              ; preds = %17, %105
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_buffered_bits(%struct.phuff_entropy_encoder* nocapture noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !499
  %6 = icmp eq i32 %5, 0
  %7 = icmp ne i32 %2, 0
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %108

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 5
  %11 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 4
  %12 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  br label %15

15:                                               ; preds = %105, %9
  %16 = phi i32 [ %107, %105 ], [ 0, %9 ]
  %17 = phi i8* [ %106, %105 ], [ %1, %9 ]
  %18 = phi i32 [ %103, %105 ], [ %2, %9 ]
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %20, label %102

20:                                               ; preds = %15
  %21 = load i32, i32* %10, align 8, !tbaa !506
  %22 = load i8, i8* %17, align 1, !tbaa !7
  %23 = and i8 %22, 1
  %24 = zext i8 %23 to i64
  %25 = add nsw i32 %21, 1
  %26 = sub i32 23, %21
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %24, %27
  %29 = load i64, i64* %11, align 8, !tbaa !505
  %30 = or i64 %28, %29
  %31 = icmp sgt i32 %21, 6
  br i1 %31, label %32, label %99

32:                                               ; preds = %20, %95
  %33 = phi i64 [ %96, %95 ], [ %30, %20 ]
  %34 = phi i32 [ %97, %95 ], [ %25, %20 ]
  %35 = lshr i64 %33, 16
  %36 = trunc i64 %35 to i8
  %37 = load i8*, i8** %12, align 8, !tbaa !509
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %38, i8** %12, align 8, !tbaa !509
  store i8 %36, i8* %37, align 1, !tbaa !7
  %39 = load i64, i64* %13, align 8, !tbaa !510
  %40 = add i64 %39, -1
  store i64 %40, i64* %13, align 8, !tbaa !510
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %64

42:                                               ; preds = %32
  %43 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %14, align 8, !tbaa !498
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %43, i64 0, i32 6
  %45 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %44, align 8, !tbaa !156
  %46 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %45, i64 0, i32 3
  %47 = bitcast i32 (...)** %46 to i32 (%struct.jpeg_compress_struct*, ...)**
  %48 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %47, align 8, !tbaa !316
  %49 = tail call i32 (%struct.jpeg_compress_struct*, ...) %48(%struct.jpeg_compress_struct* noundef %43) #27
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %42
  %52 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %14, align 8, !tbaa !498
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %52, i64 0, i32 0
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 5
  store i32 24, i32* %55, align 8, !tbaa !19
  %56 = bitcast %struct.jpeg_error_mgr* %54 to void (%struct.jpeg_common_struct*, ...)**
  %57 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %56, align 8, !tbaa !20
  %58 = bitcast %struct.jpeg_compress_struct* %52 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %57(%struct.jpeg_common_struct* noundef %58) #27
  br label %59

59:                                               ; preds = %51, %42
  %60 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %45, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8, !tbaa !314
  store i8* %61, i8** %12, align 8, !tbaa !509
  %62 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %45, i64 0, i32 1
  %63 = load i64, i64* %62, align 8, !tbaa !315
  store i64 %63, i64* %13, align 8, !tbaa !510
  br label %64

64:                                               ; preds = %59, %32
  %65 = and i64 %33, 16711680
  %66 = icmp eq i64 %65, 16711680
  br i1 %66, label %67, label %95

67:                                               ; preds = %64
  %68 = load i8*, i8** %12, align 8, !tbaa !509
  %69 = getelementptr inbounds i8, i8* %68, i64 1
  store i8* %69, i8** %12, align 8, !tbaa !509
  store i8 0, i8* %68, align 1, !tbaa !7
  %70 = load i64, i64* %13, align 8, !tbaa !510
  %71 = add i64 %70, -1
  store i64 %71, i64* %13, align 8, !tbaa !510
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %95

73:                                               ; preds = %67
  %74 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %14, align 8, !tbaa !498
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %74, i64 0, i32 6
  %76 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %75, align 8, !tbaa !156
  %77 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 3
  %78 = bitcast i32 (...)** %77 to i32 (%struct.jpeg_compress_struct*, ...)**
  %79 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %78, align 8, !tbaa !316
  %80 = tail call i32 (%struct.jpeg_compress_struct*, ...) %79(%struct.jpeg_compress_struct* noundef %74) #27
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %90

82:                                               ; preds = %73
  %83 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %14, align 8, !tbaa !498
  %84 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %83, i64 0, i32 0
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %84, align 8, !tbaa !8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i64 0, i32 5
  store i32 24, i32* %86, align 8, !tbaa !19
  %87 = bitcast %struct.jpeg_error_mgr* %85 to void (%struct.jpeg_common_struct*, ...)**
  %88 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %87, align 8, !tbaa !20
  %89 = bitcast %struct.jpeg_compress_struct* %83 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %88(%struct.jpeg_common_struct* noundef %89) #27
  br label %90

90:                                               ; preds = %82, %73
  %91 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 0
  %92 = load i8*, i8** %91, align 8, !tbaa !314
  store i8* %92, i8** %12, align 8, !tbaa !509
  %93 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %76, i64 0, i32 1
  %94 = load i64, i64* %93, align 8, !tbaa !315
  store i64 %94, i64* %13, align 8, !tbaa !510
  br label %95

95:                                               ; preds = %90, %67, %64
  %96 = shl i64 %33, 8
  %97 = add nsw i32 %34, -8
  %98 = icmp sgt i32 %34, 15
  br i1 %98, label %32, label %99, !llvm.loop !516

99:                                               ; preds = %95, %20
  %100 = phi i32 [ %25, %20 ], [ %97, %95 ]
  %101 = phi i64 [ %30, %20 ], [ %96, %95 ]
  store i64 %101, i64* %11, align 8, !tbaa !505
  store i32 %100, i32* %10, align 8, !tbaa !506
  br label %102

102:                                              ; preds = %15, %99
  %103 = add i32 %18, -1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds i8, i8* %17, i64 1
  %107 = load i32, i32* %4, align 8, !tbaa !499
  br label %15

108:                                              ; preds = %102, %3
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @flush_bits(%struct.phuff_entropy_encoder* nocapture noundef %0) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 5
  %3 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8, !tbaa !499
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %87

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 8, !tbaa !506
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %87

9:                                                ; preds = %6
  %10 = sub i32 17, %7
  %11 = zext i32 %10 to i64
  %12 = shl i64 127, %11
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 4
  %14 = load i64, i64* %13, align 8, !tbaa !505
  %15 = or i64 %12, %14
  %16 = add nsw i32 %7, 7
  %17 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 2
  %18 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 3
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  br label %20

20:                                               ; preds = %83, %9
  %21 = phi i64 [ %15, %9 ], [ %84, %83 ]
  %22 = phi i32 [ %16, %9 ], [ %85, %83 ]
  %23 = lshr i64 %21, 16
  %24 = trunc i64 %23 to i8
  %25 = load i8*, i8** %17, align 8, !tbaa !509
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8* %26, i8** %17, align 8, !tbaa !509
  store i8 %24, i8* %25, align 1, !tbaa !7
  %27 = load i64, i64* %18, align 8, !tbaa !510
  %28 = add i64 %27, -1
  store i64 %28, i64* %18, align 8, !tbaa !510
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %52

30:                                               ; preds = %20
  %31 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %19, align 8, !tbaa !498
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %31, i64 0, i32 6
  %33 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %32, align 8, !tbaa !156
  %34 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %33, i64 0, i32 3
  %35 = bitcast i32 (...)** %34 to i32 (%struct.jpeg_compress_struct*, ...)**
  %36 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %35, align 8, !tbaa !316
  %37 = tail call i32 (%struct.jpeg_compress_struct*, ...) %36(%struct.jpeg_compress_struct* noundef %31) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %47

39:                                               ; preds = %30
  %40 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %19, align 8, !tbaa !498
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %40, i64 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8, !tbaa !8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 5
  store i32 24, i32* %43, align 8, !tbaa !19
  %44 = bitcast %struct.jpeg_error_mgr* %42 to void (%struct.jpeg_common_struct*, ...)**
  %45 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %44, align 8, !tbaa !20
  %46 = bitcast %struct.jpeg_compress_struct* %40 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %45(%struct.jpeg_common_struct* noundef %46) #27
  br label %47

47:                                               ; preds = %39, %30
  %48 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %33, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8, !tbaa !314
  store i8* %49, i8** %17, align 8, !tbaa !509
  %50 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %33, i64 0, i32 1
  %51 = load i64, i64* %50, align 8, !tbaa !315
  store i64 %51, i64* %18, align 8, !tbaa !510
  br label %52

52:                                               ; preds = %47, %20
  %53 = and i64 %21, 16711680
  %54 = icmp eq i64 %53, 16711680
  br i1 %54, label %55, label %83

55:                                               ; preds = %52
  %56 = load i8*, i8** %17, align 8, !tbaa !509
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  store i8* %57, i8** %17, align 8, !tbaa !509
  store i8 0, i8* %56, align 1, !tbaa !7
  %58 = load i64, i64* %18, align 8, !tbaa !510
  %59 = add i64 %58, -1
  store i64 %59, i64* %18, align 8, !tbaa !510
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %83

61:                                               ; preds = %55
  %62 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %19, align 8, !tbaa !498
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %62, i64 0, i32 6
  %64 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %63, align 8, !tbaa !156
  %65 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %64, i64 0, i32 3
  %66 = bitcast i32 (...)** %65 to i32 (%struct.jpeg_compress_struct*, ...)**
  %67 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %66, align 8, !tbaa !316
  %68 = tail call i32 (%struct.jpeg_compress_struct*, ...) %67(%struct.jpeg_compress_struct* noundef %62) #27
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %78

70:                                               ; preds = %61
  %71 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %19, align 8, !tbaa !498
  %72 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %71, i64 0, i32 0
  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %72, align 8, !tbaa !8
  %74 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %73, i64 0, i32 5
  store i32 24, i32* %74, align 8, !tbaa !19
  %75 = bitcast %struct.jpeg_error_mgr* %73 to void (%struct.jpeg_common_struct*, ...)**
  %76 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %75, align 8, !tbaa !20
  %77 = bitcast %struct.jpeg_compress_struct* %71 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %76(%struct.jpeg_common_struct* noundef %77) #27
  br label %78

78:                                               ; preds = %70, %61
  %79 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %64, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8, !tbaa !314
  store i8* %80, i8** %17, align 8, !tbaa !509
  %81 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %64, i64 0, i32 1
  %82 = load i64, i64* %81, align 8, !tbaa !315
  store i64 %82, i64* %18, align 8, !tbaa !510
  br label %83

83:                                               ; preds = %78, %55, %52
  %84 = shl i64 %21, 8
  %85 = add nsw i32 %22, -8
  %86 = icmp sgt i32 %22, 15
  br i1 %86, label %20, label %87, !llvm.loop !516

87:                                               ; preds = %83, %6, %1
  %88 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 4
  store i64 0, i64* %88, align 8, !tbaa !505
  store i32 0, i32* %2, align 8, !tbaa !506
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_restart(%struct.phuff_entropy_encoder* nocapture noundef %0, i32 noundef %1) unnamed_addr #2 {
  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* noundef %0)
  %3 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8, !tbaa !499
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %70

6:                                                ; preds = %2
  tail call fastcc void @flush_bits(%struct.phuff_entropy_encoder* noundef nonnull %0)
  %7 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !tbaa !509
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %9, i8** %7, align 8, !tbaa !509
  store i8 -1, i8* %8, align 1, !tbaa !7
  %10 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8, !tbaa !510
  %12 = add i64 %11, -1
  store i64 %12, i64* %10, align 8, !tbaa !510
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %7, align 8, !tbaa !509
  br label %39

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  %18 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %17, align 8, !tbaa !498
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %18, i64 0, i32 6
  %20 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %19, align 8, !tbaa !156
  %21 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %20, i64 0, i32 3
  %22 = bitcast i32 (...)** %21 to i32 (%struct.jpeg_compress_struct*, ...)**
  %23 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %22, align 8, !tbaa !316
  %24 = tail call i32 (%struct.jpeg_compress_struct*, ...) %23(%struct.jpeg_compress_struct* noundef %18) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %16
  %27 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %17, align 8, !tbaa !498
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %27, i64 0, i32 0
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %28, align 8, !tbaa !8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 5
  store i32 24, i32* %30, align 8, !tbaa !19
  %31 = bitcast %struct.jpeg_error_mgr* %29 to void (%struct.jpeg_common_struct*, ...)**
  %32 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %31, align 8, !tbaa !20
  %33 = bitcast %struct.jpeg_compress_struct* %27 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %32(%struct.jpeg_common_struct* noundef %33) #27
  br label %34

34:                                               ; preds = %16, %26
  %35 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %20, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8, !tbaa !314
  %37 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %20, i64 0, i32 1
  %38 = load i64, i64* %37, align 8, !tbaa !315
  store i64 %38, i64* %10, align 8, !tbaa !510
  br label %39

39:                                               ; preds = %14, %34
  %40 = phi i8* [ %15, %14 ], [ %36, %34 ]
  %41 = trunc i32 %1 to i8
  %42 = add i8 %41, -48
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  store i8* %43, i8** %7, align 8, !tbaa !509
  store i8 %42, i8* %40, align 1, !tbaa !7
  %44 = load i64, i64* %10, align 8, !tbaa !510
  %45 = add i64 %44, -1
  store i64 %45, i64* %10, align 8, !tbaa !510
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %70

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  %49 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %48, align 8, !tbaa !498
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %49, i64 0, i32 6
  %51 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %50, align 8, !tbaa !156
  %52 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 3
  %53 = bitcast i32 (...)** %52 to i32 (%struct.jpeg_compress_struct*, ...)**
  %54 = load i32 (%struct.jpeg_compress_struct*, ...)*, i32 (%struct.jpeg_compress_struct*, ...)** %53, align 8, !tbaa !316
  %55 = tail call i32 (%struct.jpeg_compress_struct*, ...) %54(%struct.jpeg_compress_struct* noundef %49) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %47
  %58 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %48, align 8, !tbaa !498
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %58, i64 0, i32 0
  %60 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %59, align 8, !tbaa !8
  %61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %60, i64 0, i32 5
  store i32 24, i32* %61, align 8, !tbaa !19
  %62 = bitcast %struct.jpeg_error_mgr* %60 to void (%struct.jpeg_common_struct*, ...)**
  %63 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %62, align 8, !tbaa !20
  %64 = bitcast %struct.jpeg_compress_struct* %58 to %struct.jpeg_common_struct*
  tail call void (%struct.jpeg_common_struct*, ...) %63(%struct.jpeg_common_struct* noundef %64) #27
  br label %65

65:                                               ; preds = %47, %57
  %66 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8, !tbaa !314
  store i8* %67, i8** %7, align 8, !tbaa !509
  %68 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %51, i64 0, i32 1
  %69 = load i64, i64* %68, align 8, !tbaa !315
  store i64 %69, i64* %10, align 8, !tbaa !510
  br label %70

70:                                               ; preds = %39, %65, %2
  %71 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 6
  %72 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %71, align 8, !tbaa !498
  %73 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %72, i64 0, i32 50
  %74 = load i32, i32* %73, align 4, !tbaa !279
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %87

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %72, i64 0, i32 44
  %78 = load i32, i32* %77, align 4, !tbaa !286
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %90

80:                                               ; preds = %76, %80
  %81 = phi i64 [ %83, %80 ], [ 0, %76 ]
  %82 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 7, i64 %81
  store i32 0, i32* %82, align 4, !tbaa !32
  %83 = add nuw nsw i64 %81, 1
  %84 = load i32, i32* %77, align 4, !tbaa !286
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %80, label %90, !llvm.loop !523

87:                                               ; preds = %70
  %88 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 9
  store i32 0, i32* %88, align 4, !tbaa !503
  %89 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 10
  store i32 0, i32* %89, align 8, !tbaa !504
  br label %90

90:                                               ; preds = %80, %76, %87
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jinit_forward_dct(%struct.jpeg_compress_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !36
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %6, i32 noundef 1, i64 noundef 96) #27
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %9 = bitcast %struct.jpeg_forward_dct** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !270
  %10 = bitcast i8* %7 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*)* @start_pass_fdctmgr to void (...)*), void (...)** %10, align 8, !tbaa !524
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 29
  %12 = load i32, i32* %11, align 4, !tbaa !34
  switch i32 %12, label %28 [
    i32 0, label %13
    i32 1, label %18
    i32 2, label %23
  ]

13:                                               ; preds = %1
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast i8* %14 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* @forward_DCT to void (...)*), void (...)** %15, align 8, !tbaa !526
  %16 = getelementptr inbounds i8, i8* %7, i64 16
  %17 = bitcast i8* %16 to void (...)**
  store void (...)* bitcast (void (i32*)* @jpeg_fdct_islow to void (...)*), void (...)** %17, align 8, !tbaa !527
  br label %34

18:                                               ; preds = %1
  %19 = getelementptr inbounds i8, i8* %7, i64 8
  %20 = bitcast i8* %19 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* @forward_DCT to void (...)*), void (...)** %20, align 8, !tbaa !526
  %21 = getelementptr inbounds i8, i8* %7, i64 16
  %22 = bitcast i8* %21 to void (...)**
  store void (...)* bitcast (void (i32*)* @jpeg_fdct_ifast to void (...)*), void (...)** %22, align 8, !tbaa !527
  br label %34

23:                                               ; preds = %1
  %24 = getelementptr inbounds i8, i8* %7, i64 8
  %25 = bitcast i8* %24 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* @forward_DCT_float to void (...)*), void (...)** %25, align 8, !tbaa !526
  %26 = getelementptr inbounds i8, i8* %7, i64 56
  %27 = bitcast i8* %26 to void (...)**
  store void (...)* bitcast (void (double*)* @jpeg_fdct_float to void (...)*), void (...)** %27, align 8, !tbaa !528
  br label %34

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 48, i32* %31, align 8, !tbaa !19
  %32 = bitcast %struct.jpeg_error_mgr* %30 to void (%struct.jpeg_common_struct*, ...)**
  %33 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %32, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %33(%struct.jpeg_common_struct* noundef nonnull %6) #27
  br label %34

34:                                               ; preds = %28, %23, %18, %13
  %35 = getelementptr inbounds i8, i8* %7, i64 24
  %36 = getelementptr inbounds i8, i8* %7, i64 64
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %35, i8 0, i64 32, i1 false), !tbaa !3
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %36, i8 0, i64 32, i1 false), !tbaa !3
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_pass_fdctmgr(%struct.jpeg_compress_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %3 = bitcast %struct.jpeg_forward_dct** %2 to %struct.my_fdct_controller**
  %4 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %3, align 8, !tbaa !270
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %6 = load i32, i32* %5, align 4, !tbaa !202
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %394

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %10 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %9, align 8, !tbaa !145
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = bitcast %struct.jpeg_compress_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 29
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %16 = bitcast %struct.jpeg_memory_mgr** %15 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  br label %17

17:                                               ; preds = %8, %389
  %18 = phi i32 [ 0, %8 ], [ %390, %389 ]
  %19 = phi %struct.jpeg_component_info* [ %10, %8 ], [ %391, %389 ]
  %20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !tbaa !146
  %22 = icmp ugt i32 %21, 3
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 %24
  %26 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %25, align 8, !tbaa !3
  %27 = icmp eq %struct.JQUANT_TBL* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %23, %17
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 5
  store i32 52, i32* %30, align 8, !tbaa !19
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 0
  store i32 %21, i32* %31, align 4, !tbaa !7
  %32 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %12, align 8, !tbaa !8
  %33 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %32, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %33(%struct.jpeg_common_struct* noundef nonnull %13) #27
  br label %34

34:                                               ; preds = %28, %23
  %35 = sext i32 %21 to i64
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 %35
  %37 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %36, align 8, !tbaa !3
  %38 = load i32, i32* %14, align 4, !tbaa !34
  switch i32 %38, label %384 [
    i32 0, label %39
    i32 1, label %175
    i32 2, label %253
  ]

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %4, i64 0, i32 2, i64 %35
  %41 = load i32*, i32** %40, align 8, !tbaa !3
  %42 = icmp eq i32* %41, null
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %16, align 8, !tbaa !36
  %45 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %44, align 8, !tbaa !44
  %46 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %45(%struct.jpeg_common_struct* noundef nonnull %13, i32 noundef 1, i64 noundef 256) #27
  %47 = bitcast i32** %40 to i8**
  store i8* %46, i8** %47, align 8, !tbaa !3
  %48 = bitcast i8* %46 to i32*
  br label %49

49:                                               ; preds = %39, %43
  %50 = phi i32* [ %48, %43 ], [ %41, %39 ]
  %51 = getelementptr i32, i32* %50, i64 64
  %52 = getelementptr %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 1
  %53 = icmp ult i32* %50, %52
  %54 = bitcast i32* %51 to %struct.JQUANT_TBL*
  %55 = icmp ult %struct.JQUANT_TBL* %37, %54
  %56 = and i1 %53, %55
  br i1 %56, label %152, label %57

57:                                               ; preds = %49
  %58 = bitcast %struct.JQUANT_TBL* %37 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4, !tbaa !32, !alias.scope !529
  %60 = shl <4 x i32> %59, <i32 3, i32 3, i32 3, i32 3>
  %61 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %60, <4 x i32>* %61, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %62 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4, !tbaa !32, !alias.scope !529
  %65 = shl <4 x i32> %64, <i32 3, i32 3, i32 3, i32 3>
  %66 = getelementptr inbounds i32, i32* %50, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %67, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %68 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 8
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !tbaa !32, !alias.scope !529
  %71 = shl <4 x i32> %70, <i32 3, i32 3, i32 3, i32 3>
  %72 = getelementptr inbounds i32, i32* %50, i64 8
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %73, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %74 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 12
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4, !tbaa !32, !alias.scope !529
  %77 = shl <4 x i32> %76, <i32 3, i32 3, i32 3, i32 3>
  %78 = getelementptr inbounds i32, i32* %50, i64 12
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %77, <4 x i32>* %79, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %80 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 16
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !tbaa !32, !alias.scope !529
  %83 = shl <4 x i32> %82, <i32 3, i32 3, i32 3, i32 3>
  %84 = getelementptr inbounds i32, i32* %50, i64 16
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %85, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %86 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 20
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4, !tbaa !32, !alias.scope !529
  %89 = shl <4 x i32> %88, <i32 3, i32 3, i32 3, i32 3>
  %90 = getelementptr inbounds i32, i32* %50, i64 20
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %91, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %92 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 24
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !tbaa !32, !alias.scope !529
  %95 = shl <4 x i32> %94, <i32 3, i32 3, i32 3, i32 3>
  %96 = getelementptr inbounds i32, i32* %50, i64 24
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %95, <4 x i32>* %97, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %98 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 28
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !tbaa !32, !alias.scope !529
  %101 = shl <4 x i32> %100, <i32 3, i32 3, i32 3, i32 3>
  %102 = getelementptr inbounds i32, i32* %50, i64 28
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %103, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %104 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 32
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4, !tbaa !32, !alias.scope !529
  %107 = shl <4 x i32> %106, <i32 3, i32 3, i32 3, i32 3>
  %108 = getelementptr inbounds i32, i32* %50, i64 32
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %109, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %110 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 36
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !tbaa !32, !alias.scope !529
  %113 = shl <4 x i32> %112, <i32 3, i32 3, i32 3, i32 3>
  %114 = getelementptr inbounds i32, i32* %50, i64 36
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %115, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %116 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 40
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4, !tbaa !32, !alias.scope !529
  %119 = shl <4 x i32> %118, <i32 3, i32 3, i32 3, i32 3>
  %120 = getelementptr inbounds i32, i32* %50, i64 40
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %121, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %122 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 44
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !tbaa !32, !alias.scope !529
  %125 = shl <4 x i32> %124, <i32 3, i32 3, i32 3, i32 3>
  %126 = getelementptr inbounds i32, i32* %50, i64 44
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %125, <4 x i32>* %127, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %128 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 48
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !tbaa !32, !alias.scope !529
  %131 = shl <4 x i32> %130, <i32 3, i32 3, i32 3, i32 3>
  %132 = getelementptr inbounds i32, i32* %50, i64 48
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %133, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %134 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 52
  %135 = bitcast i32* %134 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 4, !tbaa !32, !alias.scope !529
  %137 = shl <4 x i32> %136, <i32 3, i32 3, i32 3, i32 3>
  %138 = getelementptr inbounds i32, i32* %50, i64 52
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %139, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %140 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 56
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !tbaa !32, !alias.scope !529
  %143 = shl <4 x i32> %142, <i32 3, i32 3, i32 3, i32 3>
  %144 = getelementptr inbounds i32, i32* %50, i64 56
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %145, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  %146 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 60
  %147 = bitcast i32* %146 to <4 x i32>*
  %148 = load <4 x i32>, <4 x i32>* %147, align 4, !tbaa !32, !alias.scope !529
  %149 = shl <4 x i32> %148, <i32 3, i32 3, i32 3, i32 3>
  %150 = getelementptr inbounds i32, i32* %50, i64 60
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %151, align 4, !tbaa !32, !alias.scope !532, !noalias !529
  br label %389

152:                                              ; preds = %49, %152
  %153 = phi i64 [ %173, %152 ], [ 0, %49 ]
  %154 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %153
  %155 = load i32, i32* %154, align 4, !tbaa !32
  %156 = shl i32 %155, 3
  %157 = getelementptr inbounds i32, i32* %50, i64 %153
  store i32 %156, i32* %157, align 4, !tbaa !32
  %158 = or i64 %153, 1
  %159 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %158
  %160 = load i32, i32* %159, align 4, !tbaa !32
  %161 = shl i32 %160, 3
  %162 = getelementptr inbounds i32, i32* %50, i64 %158
  store i32 %161, i32* %162, align 4, !tbaa !32
  %163 = or i64 %153, 2
  %164 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %163
  %165 = load i32, i32* %164, align 4, !tbaa !32
  %166 = shl i32 %165, 3
  %167 = getelementptr inbounds i32, i32* %50, i64 %163
  store i32 %166, i32* %167, align 4, !tbaa !32
  %168 = or i64 %153, 3
  %169 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %168
  %170 = load i32, i32* %169, align 4, !tbaa !32
  %171 = shl i32 %170, 3
  %172 = getelementptr inbounds i32, i32* %50, i64 %168
  store i32 %171, i32* %172, align 4, !tbaa !32
  %173 = add nuw nsw i64 %153, 4
  %174 = icmp eq i64 %173, 64
  br i1 %174, label %389, label %152, !llvm.loop !534

175:                                              ; preds = %34
  %176 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %4, i64 0, i32 2, i64 %35
  %177 = load i32*, i32** %176, align 8, !tbaa !3
  %178 = icmp eq i32* %177, null
  br i1 %178, label %179, label %185

179:                                              ; preds = %175
  %180 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %16, align 8, !tbaa !36
  %181 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %180, align 8, !tbaa !44
  %182 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %181(%struct.jpeg_common_struct* noundef nonnull %13, i32 noundef 1, i64 noundef 256) #27
  %183 = bitcast i32** %176 to i8**
  store i8* %182, i8** %183, align 8, !tbaa !3
  %184 = bitcast i8* %182 to i32*
  br label %185

185:                                              ; preds = %175, %179
  %186 = phi i32* [ %184, %179 ], [ %177, %175 ]
  %187 = getelementptr i32, i32* %186, i64 64
  %188 = getelementptr %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 1
  %189 = icmp ult i32* %186, %188
  %190 = bitcast i32* %187 to %struct.JQUANT_TBL*
  %191 = icmp ult %struct.JQUANT_TBL* %37, %190
  %192 = and i1 %189, %191
  br i1 %192, label %226, label %193

193:                                              ; preds = %185, %193
  %194 = phi i64 [ %224, %193 ], [ 0, %185 ]
  %195 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %194
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4, !tbaa !32, !alias.scope !535
  %198 = zext <4 x i32> %197 to <4 x i64>
  %199 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass_fdctmgr.aanscales, i64 0, i64 %194
  %200 = bitcast i16* %199 to <4 x i16>*
  %201 = load <4 x i16>, <4 x i16>* %200, align 16, !tbaa !96
  %202 = sext <4 x i16> %201 to <4 x i64>
  %203 = mul nsw <4 x i64> %202, %198
  %204 = add nsw <4 x i64> %203, <i64 1024, i64 1024, i64 1024, i64 1024>
  %205 = lshr <4 x i64> %204, <i64 11, i64 11, i64 11, i64 11>
  %206 = trunc <4 x i64> %205 to <4 x i32>
  %207 = getelementptr inbounds i32, i32* %186, i64 %194
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %206, <4 x i32>* %208, align 4, !tbaa !32, !alias.scope !538, !noalias !535
  %209 = or i64 %194, 4
  %210 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %209
  %211 = bitcast i32* %210 to <4 x i32>*
  %212 = load <4 x i32>, <4 x i32>* %211, align 4, !tbaa !32, !alias.scope !535
  %213 = zext <4 x i32> %212 to <4 x i64>
  %214 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass_fdctmgr.aanscales, i64 0, i64 %209
  %215 = bitcast i16* %214 to <4 x i16>*
  %216 = load <4 x i16>, <4 x i16>* %215, align 8, !tbaa !96
  %217 = sext <4 x i16> %216 to <4 x i64>
  %218 = mul nsw <4 x i64> %217, %213
  %219 = add nsw <4 x i64> %218, <i64 1024, i64 1024, i64 1024, i64 1024>
  %220 = lshr <4 x i64> %219, <i64 11, i64 11, i64 11, i64 11>
  %221 = trunc <4 x i64> %220 to <4 x i32>
  %222 = getelementptr inbounds i32, i32* %186, i64 %209
  %223 = bitcast i32* %222 to <4 x i32>*
  store <4 x i32> %221, <4 x i32>* %223, align 4, !tbaa !32, !alias.scope !538, !noalias !535
  %224 = add nuw nsw i64 %194, 8
  %225 = icmp eq i64 %224, 64
  br i1 %225, label %389, label %193, !llvm.loop !540

226:                                              ; preds = %185, %226
  %227 = phi i64 [ %251, %226 ], [ 0, %185 ]
  %228 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %227
  %229 = load i32, i32* %228, align 4, !tbaa !32
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass_fdctmgr.aanscales, i64 0, i64 %227
  %232 = load i16, i16* %231, align 4, !tbaa !96
  %233 = sext i16 %232 to i64
  %234 = mul nsw i64 %233, %230
  %235 = add nsw i64 %234, 1024
  %236 = lshr i64 %235, 11
  %237 = trunc i64 %236 to i32
  %238 = getelementptr inbounds i32, i32* %186, i64 %227
  store i32 %237, i32* %238, align 4, !tbaa !32
  %239 = or i64 %227, 1
  %240 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %239
  %241 = load i32, i32* %240, align 4, !tbaa !32
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds [64 x i16], [64 x i16]* @start_pass_fdctmgr.aanscales, i64 0, i64 %239
  %244 = load i16, i16* %243, align 2, !tbaa !96
  %245 = sext i16 %244 to i64
  %246 = mul nsw i64 %245, %242
  %247 = add nsw i64 %246, 1024
  %248 = lshr i64 %247, 11
  %249 = trunc i64 %248 to i32
  %250 = getelementptr inbounds i32, i32* %186, i64 %239
  store i32 %249, i32* %250, align 4, !tbaa !32
  %251 = add nuw nsw i64 %227, 2
  %252 = icmp eq i64 %251, 64
  br i1 %252, label %389, label %226, !llvm.loop !541

253:                                              ; preds = %34
  %254 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %4, i64 0, i32 4, i64 %35
  %255 = load double*, double** %254, align 8, !tbaa !3
  %256 = icmp eq double* %255, null
  br i1 %256, label %257, label %263

257:                                              ; preds = %253
  %258 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %16, align 8, !tbaa !36
  %259 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %258, align 8, !tbaa !44
  %260 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %259(%struct.jpeg_common_struct* noundef nonnull %13, i32 noundef 1, i64 noundef 512) #27
  %261 = bitcast double** %254 to i8**
  store i8* %260, i8** %261, align 8, !tbaa !3
  %262 = bitcast i8* %260 to double*
  br label %263

263:                                              ; preds = %253, %257
  %264 = phi double* [ %262, %257 ], [ %255, %253 ]
  %265 = getelementptr inbounds double, double* %264, i64 -7
  br label %266

266:                                              ; preds = %266, %263
  %267 = phi i64 [ 0, %263 ], [ %382, %266 ]
  %268 = shl i64 %267, 3
  %269 = or i64 %268, 8
  %270 = getelementptr inbounds [8 x double], [8 x double]* @start_pass_fdctmgr.aanscalefactor, i64 0, i64 %267
  %271 = bitcast double* %270 to <2 x double>*
  %272 = load <2 x double>, <2 x double>* %271, align 16, !tbaa !542
  %273 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %268
  %274 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %269
  %275 = load i32, i32* %273, align 4, !tbaa !32
  %276 = load i32, i32* %274, align 4, !tbaa !32
  %277 = insertelement <2 x i32> poison, i32 %275, i64 0
  %278 = insertelement <2 x i32> %277, i32 %276, i64 1
  %279 = uitofp <2 x i32> %278 to <2 x double>
  %280 = fmul <2 x double> %272, %279
  %281 = fmul <2 x double> %280, <double 8.000000e+00, double 8.000000e+00>
  %282 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %281
  %283 = or i64 %268, 1
  %284 = or i64 %268, 9
  %285 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %283
  %286 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %284
  %287 = load i32, i32* %285, align 4, !tbaa !32
  %288 = load i32, i32* %286, align 4, !tbaa !32
  %289 = insertelement <2 x i32> poison, i32 %287, i64 0
  %290 = insertelement <2 x i32> %289, i32 %288, i64 1
  %291 = uitofp <2 x i32> %290 to <2 x double>
  %292 = fmul <2 x double> %272, %291
  %293 = fmul <2 x double> %292, <double 0x3FF63150B14861EF, double 0x3FF63150B14861EF>
  %294 = fmul <2 x double> %293, <double 8.000000e+00, double 8.000000e+00>
  %295 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %294
  %296 = or i64 %268, 2
  %297 = or i64 %268, 10
  %298 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %296
  %299 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %297
  %300 = load i32, i32* %298, align 4, !tbaa !32
  %301 = load i32, i32* %299, align 4, !tbaa !32
  %302 = insertelement <2 x i32> poison, i32 %300, i64 0
  %303 = insertelement <2 x i32> %302, i32 %301, i64 1
  %304 = uitofp <2 x i32> %303 to <2 x double>
  %305 = fmul <2 x double> %272, %304
  %306 = fmul <2 x double> %305, <double 0x3FF4E7AE914D6FCA, double 0x3FF4E7AE914D6FCA>
  %307 = fmul <2 x double> %306, <double 8.000000e+00, double 8.000000e+00>
  %308 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %307
  %309 = or i64 %268, 3
  %310 = or i64 %268, 11
  %311 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %309
  %312 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %310
  %313 = load i32, i32* %311, align 4, !tbaa !32
  %314 = load i32, i32* %312, align 4, !tbaa !32
  %315 = insertelement <2 x i32> poison, i32 %313, i64 0
  %316 = insertelement <2 x i32> %315, i32 %314, i64 1
  %317 = uitofp <2 x i32> %316 to <2 x double>
  %318 = fmul <2 x double> %272, %317
  %319 = fmul <2 x double> %318, <double 0x3FF2D062EF6C11AA, double 0x3FF2D062EF6C11AA>
  %320 = fmul <2 x double> %319, <double 8.000000e+00, double 8.000000e+00>
  %321 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %320
  %322 = or i64 %268, 4
  %323 = or i64 %268, 12
  %324 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %322
  %325 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %323
  %326 = load i32, i32* %324, align 4, !tbaa !32
  %327 = load i32, i32* %325, align 4, !tbaa !32
  %328 = insertelement <2 x i32> poison, i32 %326, i64 0
  %329 = insertelement <2 x i32> %328, i32 %327, i64 1
  %330 = uitofp <2 x i32> %329 to <2 x double>
  %331 = fmul <2 x double> %272, %330
  %332 = fmul <2 x double> %331, <double 8.000000e+00, double 8.000000e+00>
  %333 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %332
  %334 = or i64 %268, 5
  %335 = or i64 %268, 13
  %336 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %334
  %337 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %335
  %338 = load i32, i32* %336, align 4, !tbaa !32
  %339 = load i32, i32* %337, align 4, !tbaa !32
  %340 = insertelement <2 x i32> poison, i32 %338, i64 0
  %341 = insertelement <2 x i32> %340, i32 %339, i64 1
  %342 = uitofp <2 x i32> %341 to <2 x double>
  %343 = fmul <2 x double> %272, %342
  %344 = fmul <2 x double> %343, <double 0x3FE92469C0A7BF3B, double 0x3FE92469C0A7BF3B>
  %345 = fmul <2 x double> %344, <double 8.000000e+00, double 8.000000e+00>
  %346 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %345
  %347 = or i64 %268, 6
  %348 = or i64 %268, 14
  %349 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %347
  %350 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %348
  %351 = load i32, i32* %349, align 4, !tbaa !32
  %352 = load i32, i32* %350, align 4, !tbaa !32
  %353 = insertelement <2 x i32> poison, i32 %351, i64 0
  %354 = insertelement <2 x i32> %353, i32 %352, i64 1
  %355 = uitofp <2 x i32> %354 to <2 x double>
  %356 = fmul <2 x double> %272, %355
  %357 = fmul <2 x double> %356, <double 0x3FE1517A7BC720BB, double 0x3FE1517A7BC720BB>
  %358 = fmul <2 x double> %357, <double 8.000000e+00, double 8.000000e+00>
  %359 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %358
  %360 = or i64 %268, 7
  %361 = or i64 %268, 15
  %362 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %360
  %363 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %37, i64 0, i32 0, i64 %361
  %364 = load i32, i32* %362, align 4, !tbaa !32
  %365 = load i32, i32* %363, align 4, !tbaa !32
  %366 = insertelement <2 x i32> poison, i32 %364, i64 0
  %367 = insertelement <2 x i32> %366, i32 %365, i64 1
  %368 = uitofp <2 x i32> %367 to <2 x double>
  %369 = fmul <2 x double> %272, %368
  %370 = fmul <2 x double> %369, <double 0x3FD1A855DE72AB5D, double 0x3FD1A855DE72AB5D>
  %371 = fmul <2 x double> %370, <double 8.000000e+00, double 8.000000e+00>
  %372 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %371
  %373 = getelementptr inbounds double, double* %265, i64 %360
  %374 = bitcast double* %373 to <16 x double>*
  %375 = shufflevector <2 x double> %282, <2 x double> %295, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %376 = shufflevector <2 x double> %308, <2 x double> %321, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %377 = shufflevector <2 x double> %333, <2 x double> %346, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %378 = shufflevector <2 x double> %359, <2 x double> %372, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %379 = shufflevector <4 x double> %375, <4 x double> %376, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %380 = shufflevector <4 x double> %377, <4 x double> %378, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %381 = shufflevector <8 x double> %379, <8 x double> %380, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  store <16 x double> %381, <16 x double>* %374, align 8, !tbaa !542
  %382 = add nuw i64 %267, 2
  %383 = icmp eq i64 %382, 8
  br i1 %383, label %389, label %266, !llvm.loop !543

384:                                              ; preds = %34
  %385 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8, !tbaa !8
  %386 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %385, i64 0, i32 5
  store i32 48, i32* %386, align 8, !tbaa !19
  %387 = bitcast %struct.jpeg_error_mgr* %385 to void (%struct.jpeg_common_struct*, ...)**
  %388 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %387, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %388(%struct.jpeg_common_struct* noundef nonnull %13) #27
  br label %389

389:                                              ; preds = %266, %193, %226, %152, %57, %384
  %390 = add nuw nsw i32 %18, 1
  %391 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 1
  %392 = load i32, i32* %5, align 4, !tbaa !202
  %393 = icmp slt i32 %390, %392
  br i1 %393, label %17, label %394, !llvm.loop !544

394:                                              ; preds = %389, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @forward_DCT(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, [64 x i16]* nocapture noundef writeonly %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) #2 {
  %8 = alloca [64 x i32], align 16
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %10 = bitcast %struct.jpeg_forward_dct** %9 to %struct.my_fdct_controller**
  %11 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %10, align 8, !tbaa !270
  %12 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %11, i64 0, i32 1
  %13 = bitcast void (...)** %12 to void (i32*, ...)**
  %14 = load void (i32*, ...)*, void (i32*, ...)** %13, align 8, !tbaa !527
  %15 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8, !tbaa !146
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %11, i64 0, i32 2, i64 %17
  %19 = load i32*, i32** %18, align 8, !tbaa !3
  %20 = bitcast [64 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %20) #27
  %21 = zext i32 %4 to i64
  %22 = getelementptr inbounds i8*, i8** %2, i64 %21
  %23 = icmp eq i32 %6, 0
  br i1 %23, label %110, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds [64 x i32], [64 x i32]* %8, i64 0, i64 0
  %26 = zext i32 %6 to i64
  br label %27

27:                                               ; preds = %24, %106
  %28 = phi i64 [ 0, %24 ], [ %107, %106 ]
  %29 = phi i32 [ %5, %24 ], [ %108, %106 ]
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %27, %31
  %32 = phi i64 [ 0, %27 ], [ %76, %31 ]
  %33 = phi i32* [ %25, %27 ], [ %75, %31 ]
  %34 = getelementptr inbounds i8*, i8** %22, i64 %32
  %35 = load i8*, i8** %34, align 8, !tbaa !3
  %36 = getelementptr inbounds i8, i8* %35, i64 %30
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = load i8, i8* %36, align 1, !tbaa !7
  %39 = zext i8 %38 to i32
  %40 = add nsw i32 %39, -128
  %41 = getelementptr inbounds i32, i32* %33, i64 1
  store i32 %40, i32* %33, align 4, !tbaa !32
  %42 = getelementptr inbounds i8, i8* %37, i64 1
  %43 = load i8, i8* %37, align 1, !tbaa !7
  %44 = zext i8 %43 to i32
  %45 = add nsw i32 %44, -128
  %46 = getelementptr inbounds i32, i32* %33, i64 2
  store i32 %45, i32* %41, align 4, !tbaa !32
  %47 = getelementptr inbounds i8, i8* %42, i64 1
  %48 = load i8, i8* %42, align 1, !tbaa !7
  %49 = zext i8 %48 to i32
  %50 = add nsw i32 %49, -128
  %51 = getelementptr inbounds i32, i32* %33, i64 3
  store i32 %50, i32* %46, align 4, !tbaa !32
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = load i8, i8* %47, align 1, !tbaa !7
  %54 = zext i8 %53 to i32
  %55 = add nsw i32 %54, -128
  %56 = getelementptr inbounds i32, i32* %33, i64 4
  store i32 %55, i32* %51, align 4, !tbaa !32
  %57 = getelementptr inbounds i8, i8* %52, i64 1
  %58 = load i8, i8* %52, align 1, !tbaa !7
  %59 = zext i8 %58 to i32
  %60 = add nsw i32 %59, -128
  %61 = getelementptr inbounds i32, i32* %33, i64 5
  store i32 %60, i32* %56, align 4, !tbaa !32
  %62 = getelementptr inbounds i8, i8* %57, i64 1
  %63 = load i8, i8* %57, align 1, !tbaa !7
  %64 = zext i8 %63 to i32
  %65 = add nsw i32 %64, -128
  %66 = getelementptr inbounds i32, i32* %33, i64 6
  store i32 %65, i32* %61, align 4, !tbaa !32
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  %68 = load i8, i8* %62, align 1, !tbaa !7
  %69 = zext i8 %68 to i32
  %70 = add nsw i32 %69, -128
  %71 = getelementptr inbounds i32, i32* %33, i64 7
  store i32 %70, i32* %66, align 4, !tbaa !32
  %72 = load i8, i8* %67, align 1, !tbaa !7
  %73 = zext i8 %72 to i32
  %74 = add nsw i32 %73, -128
  %75 = getelementptr inbounds i32, i32* %33, i64 8
  store i32 %74, i32* %71, align 4, !tbaa !32
  %76 = add nuw nsw i64 %32, 1
  %77 = icmp eq i64 %76, 8
  br i1 %77, label %78, label %31, !llvm.loop !545

78:                                               ; preds = %31
  call void (i32*, ...) %14(i32* noundef nonnull %25) #27
  br label %79

79:                                               ; preds = %78, %100
  %80 = phi i64 [ 0, %78 ], [ %104, %100 ]
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = load i32, i32* %81, align 4, !tbaa !32
  %83 = getelementptr inbounds [64 x i32], [64 x i32]* %8, i64 0, i64 %80
  %84 = load i32, i32* %83, align 4, !tbaa !32
  %85 = icmp slt i32 %84, 0
  %86 = ashr i32 %82, 1
  br i1 %85, label %87, label %95

87:                                               ; preds = %79
  %88 = sub i32 %86, %84
  %89 = icmp slt i32 %88, %82
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = sdiv i32 %88, %82
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i32 [ %91, %90 ], [ 0, %87 ]
  %94 = sub nsw i32 0, %93
  br label %100

95:                                               ; preds = %79
  %96 = add nsw i32 %84, %86
  %97 = icmp slt i32 %96, %82
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = sdiv i32 %96, %82
  br label %100

100:                                              ; preds = %95, %98, %92
  %101 = phi i32 [ %94, %92 ], [ %99, %98 ], [ 0, %95 ]
  %102 = trunc i32 %101 to i16
  %103 = getelementptr inbounds [64 x i16], [64 x i16]* %3, i64 %28, i64 %80
  store i16 %102, i16* %103, align 2, !tbaa !96
  %104 = add nuw nsw i64 %80, 1
  %105 = icmp eq i64 %104, 64
  br i1 %105, label %106, label %79, !llvm.loop !546

106:                                              ; preds = %100
  %107 = add nuw nsw i64 %28, 1
  %108 = add i32 %29, 8
  %109 = icmp eq i64 %107, %26
  br i1 %109, label %110, label %27, !llvm.loop !547

110:                                              ; preds = %106, %7
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %20) #27
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @forward_DCT_float(%struct.jpeg_compress_struct* nocapture noundef readonly %0, %struct.jpeg_component_info* nocapture noundef readonly %1, i8** nocapture noundef readonly %2, [64 x i16]* nocapture noundef writeonly %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) #2 {
  %8 = alloca [64 x double], align 16
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %10 = bitcast %struct.jpeg_forward_dct** %9 to %struct.my_fdct_controller**
  %11 = load %struct.my_fdct_controller*, %struct.my_fdct_controller** %10, align 8, !tbaa !270
  %12 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %11, i64 0, i32 3
  %13 = bitcast void (...)** %12 to void (double*, ...)**
  %14 = load void (double*, ...)*, void (double*, ...)** %13, align 8, !tbaa !528
  %15 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8, !tbaa !146
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.my_fdct_controller, %struct.my_fdct_controller* %11, i64 0, i32 4, i64 %17
  %19 = load double*, double** %18, align 8, !tbaa !3
  %20 = bitcast [64 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %20) #27
  %21 = zext i32 %4 to i64
  %22 = getelementptr inbounds i8*, i8** %2, i64 %21
  %23 = icmp eq i32 %6, 0
  br i1 %23, label %122, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds [64 x double], [64 x double]* %8, i64 0, i64 0
  %26 = zext i32 %6 to i64
  br label %27

27:                                               ; preds = %24, %118
  %28 = phi i64 [ 0, %24 ], [ %119, %118 ]
  %29 = phi i32 [ %5, %24 ], [ %120, %118 ]
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %27, %31
  %32 = phi i64 [ 0, %27 ], [ %84, %31 ]
  %33 = phi double* [ %25, %27 ], [ %83, %31 ]
  %34 = getelementptr inbounds i8*, i8** %22, i64 %32
  %35 = load i8*, i8** %34, align 8, !tbaa !3
  %36 = getelementptr inbounds i8, i8* %35, i64 %30
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = load i8, i8* %36, align 1, !tbaa !7
  %39 = zext i8 %38 to i32
  %40 = add nsw i32 %39, -128
  %41 = sitofp i32 %40 to double
  %42 = getelementptr inbounds double, double* %33, i64 1
  store double %41, double* %33, align 8, !tbaa !542
  %43 = getelementptr inbounds i8, i8* %37, i64 1
  %44 = load i8, i8* %37, align 1, !tbaa !7
  %45 = zext i8 %44 to i32
  %46 = add nsw i32 %45, -128
  %47 = sitofp i32 %46 to double
  %48 = getelementptr inbounds double, double* %33, i64 2
  store double %47, double* %42, align 8, !tbaa !542
  %49 = getelementptr inbounds i8, i8* %43, i64 1
  %50 = load i8, i8* %43, align 1, !tbaa !7
  %51 = zext i8 %50 to i32
  %52 = add nsw i32 %51, -128
  %53 = sitofp i32 %52 to double
  %54 = getelementptr inbounds double, double* %33, i64 3
  store double %53, double* %48, align 8, !tbaa !542
  %55 = getelementptr inbounds i8, i8* %49, i64 1
  %56 = load i8, i8* %49, align 1, !tbaa !7
  %57 = zext i8 %56 to i32
  %58 = add nsw i32 %57, -128
  %59 = sitofp i32 %58 to double
  %60 = getelementptr inbounds double, double* %33, i64 4
  store double %59, double* %54, align 8, !tbaa !542
  %61 = getelementptr inbounds i8, i8* %55, i64 1
  %62 = load i8, i8* %55, align 1, !tbaa !7
  %63 = zext i8 %62 to i32
  %64 = add nsw i32 %63, -128
  %65 = sitofp i32 %64 to double
  %66 = getelementptr inbounds double, double* %33, i64 5
  store double %65, double* %60, align 8, !tbaa !542
  %67 = getelementptr inbounds i8, i8* %61, i64 1
  %68 = load i8, i8* %61, align 1, !tbaa !7
  %69 = zext i8 %68 to i32
  %70 = add nsw i32 %69, -128
  %71 = sitofp i32 %70 to double
  %72 = getelementptr inbounds double, double* %33, i64 6
  store double %71, double* %66, align 8, !tbaa !542
  %73 = getelementptr inbounds i8, i8* %67, i64 1
  %74 = load i8, i8* %67, align 1, !tbaa !7
  %75 = zext i8 %74 to i32
  %76 = add nsw i32 %75, -128
  %77 = sitofp i32 %76 to double
  %78 = getelementptr inbounds double, double* %33, i64 7
  store double %77, double* %72, align 8, !tbaa !542
  %79 = load i8, i8* %73, align 1, !tbaa !7
  %80 = zext i8 %79 to i32
  %81 = add nsw i32 %80, -128
  %82 = sitofp i32 %81 to double
  %83 = getelementptr inbounds double, double* %33, i64 8
  store double %82, double* %78, align 8, !tbaa !542
  %84 = add nuw nsw i64 %32, 1
  %85 = icmp eq i64 %84, 8
  br i1 %85, label %86, label %31, !llvm.loop !548

86:                                               ; preds = %31
  call void (double*, ...) %14(double* noundef nonnull %25) #27
  br label %87

87:                                               ; preds = %87, %86
  %88 = phi i64 [ 0, %86 ], [ %116, %87 ]
  %89 = getelementptr inbounds [64 x double], [64 x double]* %8, i64 0, i64 %88
  %90 = bitcast double* %89 to <2 x double>*
  %91 = load <2 x double>, <2 x double>* %90, align 16, !tbaa !542
  %92 = getelementptr inbounds double, double* %19, i64 %88
  %93 = bitcast double* %92 to <2 x double>*
  %94 = load <2 x double>, <2 x double>* %93, align 8, !tbaa !542
  %95 = fmul <2 x double> %91, %94
  %96 = fadd <2 x double> %95, <double 1.638450e+04, double 1.638450e+04>
  %97 = fptosi <2 x double> %96 to <2 x i32>
  %98 = trunc <2 x i32> %97 to <2 x i16>
  %99 = add <2 x i16> %98, <i16 -16384, i16 -16384>
  %100 = getelementptr inbounds [64 x i16], [64 x i16]* %3, i64 %28, i64 %88
  %101 = bitcast i16* %100 to <2 x i16>*
  store <2 x i16> %99, <2 x i16>* %101, align 2, !tbaa !96
  %102 = or i64 %88, 2
  %103 = getelementptr inbounds [64 x double], [64 x double]* %8, i64 0, i64 %102
  %104 = bitcast double* %103 to <2 x double>*
  %105 = load <2 x double>, <2 x double>* %104, align 16, !tbaa !542
  %106 = getelementptr inbounds double, double* %19, i64 %102
  %107 = bitcast double* %106 to <2 x double>*
  %108 = load <2 x double>, <2 x double>* %107, align 8, !tbaa !542
  %109 = fmul <2 x double> %105, %108
  %110 = fadd <2 x double> %109, <double 1.638450e+04, double 1.638450e+04>
  %111 = fptosi <2 x double> %110 to <2 x i32>
  %112 = trunc <2 x i32> %111 to <2 x i16>
  %113 = add <2 x i16> %112, <i16 -16384, i16 -16384>
  %114 = getelementptr inbounds [64 x i16], [64 x i16]* %3, i64 %28, i64 %102
  %115 = bitcast i16* %114 to <2 x i16>*
  store <2 x i16> %113, <2 x i16>* %115, align 2, !tbaa !96
  %116 = add nuw nsw i64 %88, 4
  %117 = icmp eq i64 %116, 64
  br i1 %117, label %118, label %87, !llvm.loop !549

118:                                              ; preds = %87
  %119 = add nuw nsw i64 %28, 1
  %120 = add i32 %29, 8
  %121 = icmp eq i64 %119, %26
  br i1 %121, label %122, label %27, !llvm.loop !550

122:                                              ; preds = %118, %7
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %20) #27
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define dso_local void @jpeg_fdct_ifast(i32* nocapture noundef %0) #13 {
  br label %2

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 7, %1 ], [ %70, %2 ]
  %4 = phi i32* [ %0, %1 ], [ %69, %2 ]
  %5 = load i32, i32* %4, align 4, !tbaa !32
  %6 = getelementptr inbounds i32, i32* %4, i64 7
  %7 = load i32, i32* %6, align 4, !tbaa !32
  %8 = add nsw i32 %7, %5
  %9 = sub nsw i32 %5, %7
  %10 = getelementptr inbounds i32, i32* %4, i64 1
  %11 = load i32, i32* %10, align 4, !tbaa !32
  %12 = getelementptr inbounds i32, i32* %4, i64 6
  %13 = load i32, i32* %12, align 4, !tbaa !32
  %14 = add nsw i32 %13, %11
  %15 = sub nsw i32 %11, %13
  %16 = getelementptr inbounds i32, i32* %4, i64 2
  %17 = load i32, i32* %16, align 4, !tbaa !32
  %18 = getelementptr inbounds i32, i32* %4, i64 5
  %19 = load i32, i32* %18, align 4, !tbaa !32
  %20 = add nsw i32 %19, %17
  %21 = sub nsw i32 %17, %19
  %22 = getelementptr inbounds i32, i32* %4, i64 3
  %23 = load i32, i32* %22, align 4, !tbaa !32
  %24 = getelementptr inbounds i32, i32* %4, i64 4
  %25 = load i32, i32* %24, align 4, !tbaa !32
  %26 = add nsw i32 %25, %23
  %27 = sub nsw i32 %23, %25
  %28 = add nsw i32 %26, %8
  %29 = sub nsw i32 %8, %26
  %30 = add nsw i32 %20, %14
  %31 = sub i32 %14, %20
  %32 = add nsw i32 %28, %30
  store i32 %32, i32* %4, align 4, !tbaa !32
  %33 = sub nsw i32 %28, %30
  store i32 %33, i32* %24, align 4, !tbaa !32
  %34 = add nsw i32 %31, %29
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %35, 181
  %37 = lshr i64 %36, 8
  %38 = trunc i64 %37 to i32
  %39 = add nsw i32 %29, %38
  store i32 %39, i32* %16, align 4, !tbaa !32
  %40 = sub nsw i32 %29, %38
  store i32 %40, i32* %12, align 4, !tbaa !32
  %41 = add nsw i32 %27, %21
  %42 = add nsw i32 %21, %15
  %43 = add nsw i32 %15, %9
  %44 = sub nsw i32 %41, %43
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %45, 98
  %47 = lshr i64 %46, 8
  %48 = trunc i64 %47 to i32
  %49 = sext i32 %41 to i64
  %50 = mul nsw i64 %49, 139
  %51 = lshr i64 %50, 8
  %52 = trunc i64 %51 to i32
  %53 = add nsw i32 %48, %52
  %54 = sext i32 %43 to i64
  %55 = mul nsw i64 %54, 334
  %56 = lshr i64 %55, 8
  %57 = trunc i64 %56 to i32
  %58 = add nsw i32 %48, %57
  %59 = sext i32 %42 to i64
  %60 = mul nsw i64 %59, 181
  %61 = lshr i64 %60, 8
  %62 = trunc i64 %61 to i32
  %63 = add nsw i32 %9, %62
  %64 = sub nsw i32 %9, %62
  %65 = add nsw i32 %53, %64
  store i32 %65, i32* %18, align 4, !tbaa !32
  %66 = sub nsw i32 %64, %53
  store i32 %66, i32* %22, align 4, !tbaa !32
  %67 = add nsw i32 %58, %63
  store i32 %67, i32* %10, align 4, !tbaa !32
  %68 = sub nsw i32 %63, %58
  store i32 %68, i32* %6, align 4, !tbaa !32
  %69 = getelementptr inbounds i32, i32* %4, i64 8
  %70 = add nsw i32 %3, -1
  %71 = icmp eq i32 %3, 0
  br i1 %71, label %72, label %2, !llvm.loop !551

72:                                               ; preds = %2
  %73 = bitcast i32* %0 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !tbaa !32
  %75 = getelementptr inbounds i32, i32* %0, i64 56
  %76 = bitcast i32* %75 to <4 x i32>*
  %77 = load <4 x i32>, <4 x i32>* %76, align 4, !tbaa !32
  %78 = add nsw <4 x i32> %77, %74
  %79 = sub nsw <4 x i32> %74, %77
  %80 = getelementptr inbounds i32, i32* %0, i64 8
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !tbaa !32
  %83 = getelementptr inbounds i32, i32* %0, i64 48
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !tbaa !32
  %86 = add nsw <4 x i32> %85, %82
  %87 = sub nsw <4 x i32> %82, %85
  %88 = getelementptr inbounds i32, i32* %0, i64 16
  %89 = bitcast i32* %88 to <4 x i32>*
  %90 = load <4 x i32>, <4 x i32>* %89, align 4, !tbaa !32
  %91 = getelementptr inbounds i32, i32* %0, i64 40
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !tbaa !32
  %94 = add nsw <4 x i32> %93, %90
  %95 = sub nsw <4 x i32> %90, %93
  %96 = getelementptr inbounds i32, i32* %0, i64 24
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 4, !tbaa !32
  %99 = getelementptr inbounds i32, i32* %0, i64 32
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !tbaa !32
  %102 = add nsw <4 x i32> %101, %98
  %103 = sub nsw <4 x i32> %98, %101
  %104 = add nsw <4 x i32> %102, %78
  %105 = sub nsw <4 x i32> %78, %102
  %106 = add nsw <4 x i32> %94, %86
  %107 = sub <4 x i32> %86, %94
  %108 = add nsw <4 x i32> %104, %106
  %109 = bitcast i32* %0 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %109, align 4, !tbaa !32
  %110 = sub nsw <4 x i32> %104, %106
  %111 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %111, align 4, !tbaa !32
  %112 = add nsw <4 x i32> %107, %105
  %113 = sext <4 x i32> %112 to <4 x i64>
  %114 = mul nsw <4 x i64> %113, <i64 181, i64 181, i64 181, i64 181>
  %115 = lshr <4 x i64> %114, <i64 8, i64 8, i64 8, i64 8>
  %116 = trunc <4 x i64> %115 to <4 x i32>
  %117 = add nsw <4 x i32> %105, %116
  %118 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %118, align 4, !tbaa !32
  %119 = sub nsw <4 x i32> %105, %116
  %120 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %120, align 4, !tbaa !32
  %121 = add nsw <4 x i32> %103, %95
  %122 = add nsw <4 x i32> %95, %87
  %123 = add nsw <4 x i32> %87, %79
  %124 = sub nsw <4 x i32> %121, %123
  %125 = sext <4 x i32> %124 to <4 x i64>
  %126 = mul nsw <4 x i64> %125, <i64 98, i64 98, i64 98, i64 98>
  %127 = lshr <4 x i64> %126, <i64 8, i64 8, i64 8, i64 8>
  %128 = trunc <4 x i64> %127 to <4 x i32>
  %129 = sext <4 x i32> %121 to <4 x i64>
  %130 = mul nsw <4 x i64> %129, <i64 139, i64 139, i64 139, i64 139>
  %131 = lshr <4 x i64> %130, <i64 8, i64 8, i64 8, i64 8>
  %132 = trunc <4 x i64> %131 to <4 x i32>
  %133 = add nsw <4 x i32> %128, %132
  %134 = sext <4 x i32> %123 to <4 x i64>
  %135 = mul nsw <4 x i64> %134, <i64 334, i64 334, i64 334, i64 334>
  %136 = lshr <4 x i64> %135, <i64 8, i64 8, i64 8, i64 8>
  %137 = trunc <4 x i64> %136 to <4 x i32>
  %138 = add nsw <4 x i32> %128, %137
  %139 = sext <4 x i32> %122 to <4 x i64>
  %140 = mul nsw <4 x i64> %139, <i64 181, i64 181, i64 181, i64 181>
  %141 = lshr <4 x i64> %140, <i64 8, i64 8, i64 8, i64 8>
  %142 = trunc <4 x i64> %141 to <4 x i32>
  %143 = add nsw <4 x i32> %79, %142
  %144 = sub nsw <4 x i32> %79, %142
  %145 = add nsw <4 x i32> %133, %144
  %146 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %146, align 4, !tbaa !32
  %147 = sub nsw <4 x i32> %144, %133
  %148 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %147, <4 x i32>* %148, align 4, !tbaa !32
  %149 = add nsw <4 x i32> %138, %143
  %150 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %150, align 4, !tbaa !32
  %151 = sub nsw <4 x i32> %143, %138
  %152 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %152, align 4, !tbaa !32
  %153 = getelementptr i32, i32* %0, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !tbaa !32
  %156 = getelementptr i32, i32* %0, i64 60
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4, !tbaa !32
  %159 = add nsw <4 x i32> %158, %155
  %160 = sub nsw <4 x i32> %155, %158
  %161 = getelementptr i32, i32* %0, i64 12
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 4, !tbaa !32
  %164 = getelementptr i32, i32* %0, i64 52
  %165 = bitcast i32* %164 to <4 x i32>*
  %166 = load <4 x i32>, <4 x i32>* %165, align 4, !tbaa !32
  %167 = add nsw <4 x i32> %166, %163
  %168 = sub nsw <4 x i32> %163, %166
  %169 = getelementptr i32, i32* %0, i64 20
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4, !tbaa !32
  %172 = getelementptr i32, i32* %0, i64 44
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !tbaa !32
  %175 = add nsw <4 x i32> %174, %171
  %176 = sub nsw <4 x i32> %171, %174
  %177 = getelementptr i32, i32* %0, i64 28
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4, !tbaa !32
  %180 = getelementptr i32, i32* %0, i64 36
  %181 = bitcast i32* %180 to <4 x i32>*
  %182 = load <4 x i32>, <4 x i32>* %181, align 4, !tbaa !32
  %183 = add nsw <4 x i32> %182, %179
  %184 = sub nsw <4 x i32> %179, %182
  %185 = add nsw <4 x i32> %183, %159
  %186 = sub nsw <4 x i32> %159, %183
  %187 = add nsw <4 x i32> %175, %167
  %188 = sub <4 x i32> %167, %175
  %189 = add nsw <4 x i32> %185, %187
  %190 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %189, <4 x i32>* %190, align 4, !tbaa !32
  %191 = sub nsw <4 x i32> %185, %187
  %192 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %192, align 4, !tbaa !32
  %193 = add nsw <4 x i32> %188, %186
  %194 = sext <4 x i32> %193 to <4 x i64>
  %195 = mul nsw <4 x i64> %194, <i64 181, i64 181, i64 181, i64 181>
  %196 = lshr <4 x i64> %195, <i64 8, i64 8, i64 8, i64 8>
  %197 = trunc <4 x i64> %196 to <4 x i32>
  %198 = add nsw <4 x i32> %186, %197
  %199 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %199, align 4, !tbaa !32
  %200 = sub nsw <4 x i32> %186, %197
  %201 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %200, <4 x i32>* %201, align 4, !tbaa !32
  %202 = add nsw <4 x i32> %184, %176
  %203 = add nsw <4 x i32> %176, %168
  %204 = add nsw <4 x i32> %168, %160
  %205 = sub nsw <4 x i32> %202, %204
  %206 = sext <4 x i32> %205 to <4 x i64>
  %207 = mul nsw <4 x i64> %206, <i64 98, i64 98, i64 98, i64 98>
  %208 = lshr <4 x i64> %207, <i64 8, i64 8, i64 8, i64 8>
  %209 = trunc <4 x i64> %208 to <4 x i32>
  %210 = sext <4 x i32> %202 to <4 x i64>
  %211 = mul nsw <4 x i64> %210, <i64 139, i64 139, i64 139, i64 139>
  %212 = lshr <4 x i64> %211, <i64 8, i64 8, i64 8, i64 8>
  %213 = trunc <4 x i64> %212 to <4 x i32>
  %214 = add nsw <4 x i32> %209, %213
  %215 = sext <4 x i32> %204 to <4 x i64>
  %216 = mul nsw <4 x i64> %215, <i64 334, i64 334, i64 334, i64 334>
  %217 = lshr <4 x i64> %216, <i64 8, i64 8, i64 8, i64 8>
  %218 = trunc <4 x i64> %217 to <4 x i32>
  %219 = add nsw <4 x i32> %209, %218
  %220 = sext <4 x i32> %203 to <4 x i64>
  %221 = mul nsw <4 x i64> %220, <i64 181, i64 181, i64 181, i64 181>
  %222 = lshr <4 x i64> %221, <i64 8, i64 8, i64 8, i64 8>
  %223 = trunc <4 x i64> %222 to <4 x i32>
  %224 = add nsw <4 x i32> %160, %223
  %225 = sub nsw <4 x i32> %160, %223
  %226 = add nsw <4 x i32> %214, %225
  %227 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %226, <4 x i32>* %227, align 4, !tbaa !32
  %228 = sub nsw <4 x i32> %225, %214
  %229 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %228, <4 x i32>* %229, align 4, !tbaa !32
  %230 = add nsw <4 x i32> %219, %224
  %231 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %231, align 4, !tbaa !32
  %232 = sub nsw <4 x i32> %224, %219
  %233 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %233, align 4, !tbaa !32
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @jpeg_fdct_float(double* nocapture noundef %0) #16 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i64 [ 0, %1 ], [ %58, %2 ]
  %4 = shl i64 %3, 3
  %5 = getelementptr double, double* %0, i64 %4
  %6 = bitcast double* %5 to <16 x double>*
  %7 = load <16 x double>, <16 x double>* %6, align 8, !tbaa !542
  %8 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 0, i32 8>
  %9 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 1, i32 9>
  %10 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 2, i32 10>
  %11 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 3, i32 11>
  %12 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 4, i32 12>
  %13 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 5, i32 13>
  %14 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 6, i32 14>
  %15 = shufflevector <16 x double> %7, <16 x double> poison, <2 x i32> <i32 7, i32 15>
  %16 = getelementptr inbounds double, double* %5, i64 7
  %17 = fadd <2 x double> %8, %15
  %18 = fsub <2 x double> %8, %15
  %19 = fadd <2 x double> %9, %14
  %20 = fsub <2 x double> %9, %14
  %21 = fadd <2 x double> %10, %13
  %22 = fsub <2 x double> %10, %13
  %23 = fadd <2 x double> %11, %12
  %24 = fsub <2 x double> %11, %12
  %25 = fadd <2 x double> %17, %23
  %26 = fsub <2 x double> %17, %23
  %27 = fadd <2 x double> %19, %21
  %28 = fsub <2 x double> %19, %21
  %29 = fadd <2 x double> %27, %25
  %30 = fsub <2 x double> %25, %27
  %31 = fadd <2 x double> %28, %26
  %32 = fmul <2 x double> %31, <double 0x3FE6A09E6665983E, double 0x3FE6A09E6665983E>
  %33 = fadd <2 x double> %26, %32
  %34 = fsub <2 x double> %26, %32
  %35 = fadd <2 x double> %22, %24
  %36 = fadd <2 x double> %20, %22
  %37 = fadd <2 x double> %18, %20
  %38 = fsub <2 x double> %35, %37
  %39 = fmul <2 x double> %38, <double 0x3FD87DE2A75D2F39, double 0x3FD87DE2A75D2F39>
  %40 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %35, <2 x double> <double 0x3FE1517A7BC720BB, double 0x3FE1517A7BC720BB>, <2 x double> %39)
  %41 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %37, <2 x double> <double 0x3FF4E7AE914D6FCA, double 0x3FF4E7AE914D6FCA>, <2 x double> %39)
  %42 = fmul <2 x double> %36, <double 0x3FE6A09E6665983E, double 0x3FE6A09E6665983E>
  %43 = fadd <2 x double> %18, %42
  %44 = fsub <2 x double> %18, %42
  %45 = fadd <2 x double> %44, %40
  %46 = fsub <2 x double> %44, %40
  %47 = fadd <2 x double> %43, %41
  %48 = fsub <2 x double> %43, %41
  %49 = getelementptr inbounds double, double* %16, i64 -7
  %50 = bitcast double* %49 to <16 x double>*
  %51 = shufflevector <2 x double> %29, <2 x double> %47, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %52 = shufflevector <2 x double> %33, <2 x double> %46, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %53 = shufflevector <2 x double> %30, <2 x double> %45, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %54 = shufflevector <2 x double> %34, <2 x double> %48, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %55 = shufflevector <4 x double> %51, <4 x double> %52, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %56 = shufflevector <4 x double> %53, <4 x double> %54, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %57 = shufflevector <8 x double> %55, <8 x double> %56, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  store <16 x double> %57, <16 x double>* %50, align 8, !tbaa !542
  %58 = add nuw i64 %3, 2
  %59 = icmp eq i64 %58, 8
  br i1 %59, label %60, label %2, !llvm.loop !552

60:                                               ; preds = %2, %60
  %61 = phi i64 [ %126, %60 ], [ 0, %2 ]
  %62 = getelementptr double, double* %0, i64 %61
  %63 = bitcast double* %62 to <2 x double>*
  %64 = load <2 x double>, <2 x double>* %63, align 8, !tbaa !542
  %65 = getelementptr inbounds double, double* %62, i64 56
  %66 = bitcast double* %65 to <2 x double>*
  %67 = load <2 x double>, <2 x double>* %66, align 8, !tbaa !542
  %68 = fadd <2 x double> %64, %67
  %69 = fsub <2 x double> %64, %67
  %70 = getelementptr inbounds double, double* %62, i64 8
  %71 = bitcast double* %70 to <2 x double>*
  %72 = load <2 x double>, <2 x double>* %71, align 8, !tbaa !542
  %73 = getelementptr inbounds double, double* %62, i64 48
  %74 = bitcast double* %73 to <2 x double>*
  %75 = load <2 x double>, <2 x double>* %74, align 8, !tbaa !542
  %76 = fadd <2 x double> %72, %75
  %77 = fsub <2 x double> %72, %75
  %78 = getelementptr inbounds double, double* %62, i64 16
  %79 = bitcast double* %78 to <2 x double>*
  %80 = load <2 x double>, <2 x double>* %79, align 8, !tbaa !542
  %81 = getelementptr inbounds double, double* %62, i64 40
  %82 = bitcast double* %81 to <2 x double>*
  %83 = load <2 x double>, <2 x double>* %82, align 8, !tbaa !542
  %84 = fadd <2 x double> %80, %83
  %85 = fsub <2 x double> %80, %83
  %86 = getelementptr inbounds double, double* %62, i64 24
  %87 = bitcast double* %86 to <2 x double>*
  %88 = load <2 x double>, <2 x double>* %87, align 8, !tbaa !542
  %89 = getelementptr inbounds double, double* %62, i64 32
  %90 = bitcast double* %89 to <2 x double>*
  %91 = load <2 x double>, <2 x double>* %90, align 8, !tbaa !542
  %92 = fadd <2 x double> %88, %91
  %93 = fsub <2 x double> %88, %91
  %94 = fadd <2 x double> %68, %92
  %95 = fsub <2 x double> %68, %92
  %96 = fadd <2 x double> %76, %84
  %97 = fsub <2 x double> %76, %84
  %98 = fadd <2 x double> %96, %94
  %99 = bitcast double* %62 to <2 x double>*
  store <2 x double> %98, <2 x double>* %99, align 8, !tbaa !542
  %100 = fsub <2 x double> %94, %96
  %101 = bitcast double* %89 to <2 x double>*
  store <2 x double> %100, <2 x double>* %101, align 8, !tbaa !542
  %102 = fadd <2 x double> %97, %95
  %103 = fmul <2 x double> %102, <double 0x3FE6A09E6665983E, double 0x3FE6A09E6665983E>
  %104 = fadd <2 x double> %95, %103
  %105 = bitcast double* %78 to <2 x double>*
  store <2 x double> %104, <2 x double>* %105, align 8, !tbaa !542
  %106 = fsub <2 x double> %95, %103
  %107 = bitcast double* %73 to <2 x double>*
  store <2 x double> %106, <2 x double>* %107, align 8, !tbaa !542
  %108 = fadd <2 x double> %85, %93
  %109 = fadd <2 x double> %77, %85
  %110 = fadd <2 x double> %69, %77
  %111 = fsub <2 x double> %108, %110
  %112 = fmul <2 x double> %111, <double 0x3FD87DE2A75D2F39, double 0x3FD87DE2A75D2F39>
  %113 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %108, <2 x double> <double 0x3FE1517A7BC720BB, double 0x3FE1517A7BC720BB>, <2 x double> %112)
  %114 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %110, <2 x double> <double 0x3FF4E7AE914D6FCA, double 0x3FF4E7AE914D6FCA>, <2 x double> %112)
  %115 = fmul <2 x double> %109, <double 0x3FE6A09E6665983E, double 0x3FE6A09E6665983E>
  %116 = fadd <2 x double> %69, %115
  %117 = fsub <2 x double> %69, %115
  %118 = fadd <2 x double> %117, %113
  %119 = bitcast double* %81 to <2 x double>*
  store <2 x double> %118, <2 x double>* %119, align 8, !tbaa !542
  %120 = fsub <2 x double> %117, %113
  %121 = bitcast double* %86 to <2 x double>*
  store <2 x double> %120, <2 x double>* %121, align 8, !tbaa !542
  %122 = fadd <2 x double> %116, %114
  %123 = bitcast double* %70 to <2 x double>*
  store <2 x double> %122, <2 x double>* %123, align 8, !tbaa !542
  %124 = fsub <2 x double> %116, %114
  %125 = bitcast double* %65 to <2 x double>*
  store <2 x double> %124, <2 x double>* %125, align 8, !tbaa !542
  %126 = add nuw i64 %61, 2
  %127 = icmp eq i64 %126, 8
  br i1 %127, label %128, label %60, !llvm.loop !553

128:                                              ; preds = %60
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x double> @llvm.fmuladd.v2f64(<2 x double>, <2 x double>, <2 x double>) #15

; Function Attrs: nofree norecurse nosync nounwind uwtable
define dso_local void @jpeg_fdct_islow(i32* nocapture noundef %0) #13 {
  br label %2

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 7, %1 ], [ %92, %2 ]
  %4 = phi i32* [ %0, %1 ], [ %91, %2 ]
  %5 = load i32, i32* %4, align 4, !tbaa !32
  %6 = getelementptr inbounds i32, i32* %4, i64 7
  %7 = load i32, i32* %6, align 4, !tbaa !32
  %8 = add nsw i32 %7, %5
  %9 = sext i32 %8 to i64
  %10 = sub nsw i32 %5, %7
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %4, i64 1
  %13 = load i32, i32* %12, align 4, !tbaa !32
  %14 = getelementptr inbounds i32, i32* %4, i64 6
  %15 = load i32, i32* %14, align 4, !tbaa !32
  %16 = add nsw i32 %15, %13
  %17 = sext i32 %16 to i64
  %18 = sub nsw i32 %13, %15
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %4, i64 2
  %21 = load i32, i32* %20, align 4, !tbaa !32
  %22 = getelementptr inbounds i32, i32* %4, i64 5
  %23 = load i32, i32* %22, align 4, !tbaa !32
  %24 = add nsw i32 %23, %21
  %25 = sext i32 %24 to i64
  %26 = sub nsw i32 %21, %23
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %4, i64 3
  %29 = load i32, i32* %28, align 4, !tbaa !32
  %30 = getelementptr inbounds i32, i32* %4, i64 4
  %31 = load i32, i32* %30, align 4, !tbaa !32
  %32 = add nsw i32 %31, %29
  %33 = sext i32 %32 to i64
  %34 = sub nsw i32 %29, %31
  %35 = sext i32 %34 to i64
  %36 = add nsw i64 %33, %9
  %37 = sub nsw i64 %9, %33
  %38 = add nsw i64 %25, %17
  %39 = sub nsw i64 %17, %25
  %40 = add nsw i64 %36, %38
  %41 = trunc i64 %40 to i32
  %42 = shl i32 %41, 2
  store i32 %42, i32* %4, align 4, !tbaa !32
  %43 = sub nsw i64 %36, %38
  %44 = trunc i64 %43 to i32
  %45 = shl i32 %44, 2
  store i32 %45, i32* %30, align 4, !tbaa !32
  %46 = add nsw i64 %37, %39
  %47 = mul nsw i64 %46, 4433
  %48 = mul nsw i64 %37, 6270
  %49 = add nsw i64 %47, 1024
  %50 = add nsw i64 %49, %48
  %51 = lshr i64 %50, 11
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %20, align 4, !tbaa !32
  %53 = mul nsw i64 %39, -15137
  %54 = add nsw i64 %49, %53
  %55 = lshr i64 %54, 11
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %14, align 4, !tbaa !32
  %57 = add nsw i64 %35, %11
  %58 = add nsw i64 %27, %19
  %59 = add nsw i64 %35, %19
  %60 = add nsw i64 %27, %11
  %61 = add nsw i64 %59, %60
  %62 = mul nsw i64 %61, 9633
  %63 = mul nsw i64 %35, 2446
  %64 = mul nsw i64 %27, 16819
  %65 = mul nsw i64 %19, 25172
  %66 = mul nsw i64 %11, 12299
  %67 = mul nsw i64 %57, -7373
  %68 = mul nsw i64 %58, -20995
  %69 = mul nsw i64 %59, -16069
  %70 = mul nsw i64 %60, -3196
  %71 = add nsw i64 %62, %69
  %72 = add nsw i64 %62, %70
  %73 = add nsw i64 %67, 1024
  %74 = add nsw i64 %73, %63
  %75 = add nsw i64 %74, %71
  %76 = lshr i64 %75, 11
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %6, align 4, !tbaa !32
  %78 = add nsw i64 %68, 1024
  %79 = add nsw i64 %78, %64
  %80 = add nsw i64 %79, %72
  %81 = lshr i64 %80, 11
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* %22, align 4, !tbaa !32
  %83 = add nsw i64 %78, %65
  %84 = add nsw i64 %83, %71
  %85 = lshr i64 %84, 11
  %86 = trunc i64 %85 to i32
  store i32 %86, i32* %28, align 4, !tbaa !32
  %87 = add nsw i64 %73, %66
  %88 = add nsw i64 %87, %72
  %89 = lshr i64 %88, 11
  %90 = trunc i64 %89 to i32
  store i32 %90, i32* %12, align 4, !tbaa !32
  %91 = getelementptr inbounds i32, i32* %4, i64 8
  %92 = add nsw i32 %3, -1
  %93 = icmp eq i32 %3, 0
  br i1 %93, label %94, label %2, !llvm.loop !554

94:                                               ; preds = %2, %94
  %95 = phi i64 [ %201, %94 ], [ 0, %2 ]
  %96 = getelementptr i32, i32* %0, i64 %95
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 4, !tbaa !32
  %99 = getelementptr inbounds i32, i32* %96, i64 56
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !tbaa !32
  %102 = add nsw <4 x i32> %101, %98
  %103 = sext <4 x i32> %102 to <4 x i64>
  %104 = sub nsw <4 x i32> %98, %101
  %105 = sext <4 x i32> %104 to <4 x i64>
  %106 = getelementptr inbounds i32, i32* %96, i64 8
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !tbaa !32
  %109 = getelementptr inbounds i32, i32* %96, i64 48
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !tbaa !32
  %112 = add nsw <4 x i32> %111, %108
  %113 = sext <4 x i32> %112 to <4 x i64>
  %114 = sub nsw <4 x i32> %108, %111
  %115 = sext <4 x i32> %114 to <4 x i64>
  %116 = getelementptr inbounds i32, i32* %96, i64 16
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4, !tbaa !32
  %119 = getelementptr inbounds i32, i32* %96, i64 40
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !tbaa !32
  %122 = add nsw <4 x i32> %121, %118
  %123 = sext <4 x i32> %122 to <4 x i64>
  %124 = sub nsw <4 x i32> %118, %121
  %125 = sext <4 x i32> %124 to <4 x i64>
  %126 = getelementptr inbounds i32, i32* %96, i64 24
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 4, !tbaa !32
  %129 = getelementptr inbounds i32, i32* %96, i64 32
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !tbaa !32
  %132 = add nsw <4 x i32> %131, %128
  %133 = sext <4 x i32> %132 to <4 x i64>
  %134 = sub nsw <4 x i32> %128, %131
  %135 = sext <4 x i32> %134 to <4 x i64>
  %136 = add nsw <4 x i64> %133, %103
  %137 = sub nsw <4 x i64> %103, %133
  %138 = add nsw <4 x i64> %123, %113
  %139 = sub nsw <4 x i64> %113, %123
  %140 = add nsw <4 x i64> %138, <i64 2, i64 2, i64 2, i64 2>
  %141 = add nsw <4 x i64> %140, %136
  %142 = lshr <4 x i64> %141, <i64 2, i64 2, i64 2, i64 2>
  %143 = trunc <4 x i64> %142 to <4 x i32>
  %144 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %144, align 4, !tbaa !32
  %145 = sub nsw <4 x i64> <i64 2, i64 2, i64 2, i64 2>, %138
  %146 = add nsw <4 x i64> %145, %136
  %147 = lshr <4 x i64> %146, <i64 2, i64 2, i64 2, i64 2>
  %148 = trunc <4 x i64> %147 to <4 x i32>
  %149 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %148, <4 x i32>* %149, align 4, !tbaa !32
  %150 = add nsw <4 x i64> %137, %139
  %151 = mul nsw <4 x i64> %150, <i64 4433, i64 4433, i64 4433, i64 4433>
  %152 = mul nsw <4 x i64> %137, <i64 6270, i64 6270, i64 6270, i64 6270>
  %153 = add nsw <4 x i64> %151, <i64 16384, i64 16384, i64 16384, i64 16384>
  %154 = add nsw <4 x i64> %153, %152
  %155 = lshr <4 x i64> %154, <i64 15, i64 15, i64 15, i64 15>
  %156 = trunc <4 x i64> %155 to <4 x i32>
  %157 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %157, align 4, !tbaa !32
  %158 = mul nsw <4 x i64> %139, <i64 -15137, i64 -15137, i64 -15137, i64 -15137>
  %159 = add nsw <4 x i64> %153, %158
  %160 = lshr <4 x i64> %159, <i64 15, i64 15, i64 15, i64 15>
  %161 = trunc <4 x i64> %160 to <4 x i32>
  %162 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %161, <4 x i32>* %162, align 4, !tbaa !32
  %163 = add nsw <4 x i64> %135, %105
  %164 = add nsw <4 x i64> %125, %115
  %165 = add nsw <4 x i64> %135, %115
  %166 = add nsw <4 x i64> %125, %105
  %167 = add nsw <4 x i64> %165, %166
  %168 = mul nsw <4 x i64> %167, <i64 9633, i64 9633, i64 9633, i64 9633>
  %169 = mul nsw <4 x i64> %135, <i64 2446, i64 2446, i64 2446, i64 2446>
  %170 = mul nsw <4 x i64> %125, <i64 16819, i64 16819, i64 16819, i64 16819>
  %171 = mul nsw <4 x i64> %115, <i64 25172, i64 25172, i64 25172, i64 25172>
  %172 = mul nsw <4 x i64> %105, <i64 12299, i64 12299, i64 12299, i64 12299>
  %173 = mul nsw <4 x i64> %163, <i64 -7373, i64 -7373, i64 -7373, i64 -7373>
  %174 = mul nsw <4 x i64> %164, <i64 -20995, i64 -20995, i64 -20995, i64 -20995>
  %175 = mul nsw <4 x i64> %165, <i64 -16069, i64 -16069, i64 -16069, i64 -16069>
  %176 = mul nsw <4 x i64> %166, <i64 -3196, i64 -3196, i64 -3196, i64 -3196>
  %177 = add nsw <4 x i64> %168, %175
  %178 = add nsw <4 x i64> %168, %176
  %179 = add nsw <4 x i64> %173, <i64 16384, i64 16384, i64 16384, i64 16384>
  %180 = add nsw <4 x i64> %179, %169
  %181 = add nsw <4 x i64> %180, %177
  %182 = lshr <4 x i64> %181, <i64 15, i64 15, i64 15, i64 15>
  %183 = trunc <4 x i64> %182 to <4 x i32>
  %184 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %184, align 4, !tbaa !32
  %185 = add nsw <4 x i64> %174, <i64 16384, i64 16384, i64 16384, i64 16384>
  %186 = add nsw <4 x i64> %185, %170
  %187 = add nsw <4 x i64> %186, %178
  %188 = lshr <4 x i64> %187, <i64 15, i64 15, i64 15, i64 15>
  %189 = trunc <4 x i64> %188 to <4 x i32>
  %190 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %189, <4 x i32>* %190, align 4, !tbaa !32
  %191 = add nsw <4 x i64> %185, %171
  %192 = add nsw <4 x i64> %191, %177
  %193 = lshr <4 x i64> %192, <i64 15, i64 15, i64 15, i64 15>
  %194 = trunc <4 x i64> %193 to <4 x i32>
  %195 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %194, <4 x i32>* %195, align 4, !tbaa !32
  %196 = add nsw <4 x i64> %179, %172
  %197 = add nsw <4 x i64> %196, %178
  %198 = lshr <4 x i64> %197, <i64 15, i64 15, i64 15, i64 15>
  %199 = trunc <4 x i64> %198 to <4 x i32>
  %200 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %200, align 4, !tbaa !32
  %201 = add nuw i64 %95, 4
  %202 = icmp eq i64 %201, 8
  br i1 %202, label %203, label %94, !llvm.loop !555

203:                                              ; preds = %94
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_abort(%struct.jpeg_common_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !556
  %4 = icmp eq %struct.jpeg_memory_mgr* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %3, i64 0, i32 9
  %7 = bitcast void (...)** %6 to void (%struct.jpeg_common_struct*, i32, ...)**
  %8 = load void (%struct.jpeg_common_struct*, i32, ...)*, void (%struct.jpeg_common_struct*, i32, ...)** %7, align 8, !tbaa !558
  tail call void (%struct.jpeg_common_struct*, i32, ...) %8(%struct.jpeg_common_struct* noundef nonnull %0, i32 noundef 1) #27
  %9 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !559
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 5
  br i1 %11, label %16, label %13

13:                                               ; preds = %5
  store i32 200, i32* %12, align 4, !tbaa !560
  %14 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 11, i32 2
  %15 = bitcast %struct.jpeg_progress_mgr** %14 to %struct.jpeg_marker_struct**
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %15, align 8, !tbaa !561
  br label %17

16:                                               ; preds = %5
  store i32 100, i32* %12, align 4, !tbaa !560
  br label %17

17:                                               ; preds = %13, %16, %1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_destroy(%struct.jpeg_common_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !556
  %4 = icmp eq %struct.jpeg_memory_mgr* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %3, i64 0, i32 10
  %7 = bitcast void (...)** %6 to void (%struct.jpeg_common_struct*, ...)**
  %8 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %7, align 8, !tbaa !563
  tail call void (%struct.jpeg_common_struct*, ...) %8(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %9

9:                                                ; preds = %5, %1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !556
  %10 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4, !tbaa !560
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !556
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %0, i32 noundef 0, i64 noundef 260) #27
  %7 = bitcast i8* %6 to %struct.JQUANT_TBL*
  %8 = getelementptr inbounds i8, i8* %6, i64 256
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4, !tbaa !160
  ret %struct.JQUANT_TBL* %7
}

; Function Attrs: nounwind uwtable
define dso_local %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8* (%struct.jpeg_common_struct*, i32, i64, ...)***
  %4 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)**, i8* (%struct.jpeg_common_struct*, i32, i64, ...)*** %3, align 8, !tbaa !556
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64, ...)*, i8* (%struct.jpeg_common_struct*, i32, i64, ...)** %4, align 8, !tbaa !44
  %6 = tail call i8* (%struct.jpeg_common_struct*, i32, i64, ...) %5(%struct.jpeg_common_struct* noundef %0, i32 noundef 0, i64 noundef 552) #27
  %7 = bitcast i8* %6 to %struct.JHUFF_TBL*
  %8 = getelementptr inbounds i8, i8* %6, i64 548
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4, !tbaa !162
  ret %struct.JHUFF_TBL* %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @jdiv_round_up(i64 noundef %0, i64 noundef %1) local_unnamed_addr #6 {
  %3 = add i64 %0, -1
  %4 = add i64 %3, %1
  %5 = sdiv i64 %4, %1
  ret i64 %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @jround_up(i64 noundef %0, i64 noundef %1) local_unnamed_addr #6 {
  %3 = add i64 %0, -1
  %4 = add i64 %3, %1
  %5 = srem i64 %4, %1
  %6 = sub nsw i64 %4, %5
  ret i64 %6
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @jcopy_sample_rows(i8** nocapture noundef readonly %0, i32 noundef %1, i8** nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #16 {
  %7 = zext i32 %5 to i64
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %42

9:                                                ; preds = %6
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds i8*, i8** %2, i64 %10
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds i8*, i8** %0, i64 %12
  %14 = and i32 %4, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds i8*, i8** %13, i64 1
  %18 = load i8*, i8** %13, align 8, !tbaa !3
  %19 = getelementptr inbounds i8*, i8** %11, i64 1
  %20 = load i8*, i8** %11, align 8, !tbaa !3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %18, i64 %7, i1 false)
  %21 = add nsw i32 %4, -1
  br label %22

22:                                               ; preds = %16, %9
  %23 = phi i32 [ %4, %9 ], [ %21, %16 ]
  %24 = phi i8** [ %13, %9 ], [ %17, %16 ]
  %25 = phi i8** [ %11, %9 ], [ %19, %16 ]
  %26 = icmp eq i32 %4, 1
  br i1 %26, label %42, label %27

27:                                               ; preds = %22, %27
  %28 = phi i32 [ %39, %27 ], [ %23, %22 ]
  %29 = phi i8** [ %35, %27 ], [ %24, %22 ]
  %30 = phi i8** [ %37, %27 ], [ %25, %22 ]
  %31 = getelementptr inbounds i8*, i8** %29, i64 1
  %32 = load i8*, i8** %29, align 8, !tbaa !3
  %33 = getelementptr inbounds i8*, i8** %30, i64 1
  %34 = load i8*, i8** %30, align 8, !tbaa !3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %32, i64 %7, i1 false)
  %35 = getelementptr inbounds i8*, i8** %29, i64 2
  %36 = load i8*, i8** %31, align 8, !tbaa !3
  %37 = getelementptr inbounds i8*, i8** %30, i64 2
  %38 = load i8*, i8** %33, align 8, !tbaa !3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %36, i64 %7, i1 false)
  %39 = add nsw i32 %28, -2
  %40 = add i32 %28, -3
  %41 = icmp ult i32 %40, -2
  br i1 %41, label %27, label %42, !llvm.loop !564

42:                                               ; preds = %22, %27, %6
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define dso_local void @jcopy_block_row([64 x i16]* nocapture noundef readonly %0, [64 x i16]* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #18 {
  %4 = bitcast [64 x i16]* %1 to i8*
  %5 = bitcast [64 x i16]* %0 to i8*
  %6 = zext i32 %2 to i64
  %7 = shl nuw nsw i64 %6, 7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 %7, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn writeonly
define dso_local void @jzero_far(i8* nocapture noundef writeonly %0, i64 noundef %1) local_unnamed_addr #19 {
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn writeonly
define dso_local %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* noundef returned writeonly %0) local_unnamed_addr #20 {
  %2 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 0
  store void (...)* bitcast (void (%struct.jpeg_common_struct*)* @error_exit to void (...)*), void (...)** %2, align 8, !tbaa !20
  %3 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 1
  store void (...)* bitcast (void (%struct.jpeg_common_struct*, i32)* @emit_message to void (...)*), void (...)** %3, align 8, !tbaa !52
  %4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 2
  store void (...)* bitcast (void (%struct.jpeg_common_struct*)* @output_message to void (...)*), void (...)** %4, align 8, !tbaa !565
  %5 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 3
  store void (...)* bitcast (void (%struct.jpeg_common_struct*, i8*)* @format_message to void (...)*), void (...)** %5, align 8, !tbaa !566
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 4
  store void (...)* bitcast (void (%struct.jpeg_common_struct*)* @reset_error_mgr to void (...)*), void (...)** %6, align 8, !tbaa !186
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 7
  store i32 0, i32* %7, align 4, !tbaa !33
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 8
  store i64 0, i64* %8, align 8, !tbaa !31
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 5
  store i32 0, i32* %9, align 8, !tbaa !19
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 9
  store i8** getelementptr inbounds ([125 x i8*], [125 x i8*]* @jpeg_std_message_table, i64 0, i64 0), i8*** %10, align 8, !tbaa !567
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 10
  store i32 123, i32* %11, align 8, !tbaa !568
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %0, i64 0, i32 11
  %13 = bitcast i8*** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  ret %struct.jpeg_error_mgr* %0
}

; Function Attrs: noreturn nounwind uwtable
define internal void @error_exit(%struct.jpeg_common_struct* noundef %0) #0 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8, !tbaa !569
  %4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 2
  %5 = bitcast void (...)** %4 to void (%struct.jpeg_common_struct*, ...)**
  %6 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %5, align 8, !tbaa !565
  tail call void (%struct.jpeg_common_struct*, ...) %6(%struct.jpeg_common_struct* noundef %0) #27
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jpeg_destroy to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %0) #27
  tail call void @exit(i32 noundef 1) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @emit_message(%struct.jpeg_common_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %3, align 8, !tbaa !569
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 8
  %8 = load i64, i64* %7, align 8, !tbaa !31
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 7
  %12 = load i32, i32* %11, align 4, !tbaa !33
  %13 = icmp sgt i32 %12, 2
  br i1 %13, label %14, label %19

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 2
  %16 = bitcast void (...)** %15 to void (%struct.jpeg_common_struct*, ...)**
  %17 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %16, align 8, !tbaa !565
  tail call void (%struct.jpeg_common_struct*, ...) %17(%struct.jpeg_common_struct* noundef nonnull %0) #27
  %18 = load i64, i64* %7, align 8, !tbaa !31
  br label %19

19:                                               ; preds = %14, %10
  %20 = phi i64 [ %18, %14 ], [ %8, %10 ]
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %7, align 8, !tbaa !31
  br label %30

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 7
  %24 = load i32, i32* %23, align 4, !tbaa !33
  %25 = icmp slt i32 %24, %1
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 2
  %28 = bitcast void (...)** %27 to void (%struct.jpeg_common_struct*, ...)**
  %29 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %28, align 8, !tbaa !565
  tail call void (%struct.jpeg_common_struct*, ...) %29(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %30

30:                                               ; preds = %22, %26, %19
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @output_message(%struct.jpeg_common_struct* noundef %0) #2 {
  %2 = alloca [200 x i8], align 16
  %3 = getelementptr inbounds [200 x i8], [200 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %3) #27
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %4, align 8, !tbaa !569
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i64 0, i32 3
  %7 = bitcast void (...)** %6 to void (%struct.jpeg_common_struct*, i8*, ...)**
  %8 = load void (%struct.jpeg_common_struct*, i8*, ...)*, void (%struct.jpeg_common_struct*, i8*, ...)** %7, align 8, !tbaa !566
  call void (%struct.jpeg_common_struct*, i8*, ...) %8(%struct.jpeg_common_struct* noundef %0, i8* noundef nonnull %3) #27
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %9, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0), i8* noundef nonnull %3) #28
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %3) #27
  ret void
}

; Function Attrs: nofree nounwind uwtable
define internal void @format_message(%struct.jpeg_common_struct* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #7 {
  %3 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %4 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %3, align 8, !tbaa !569
  %5 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8, !tbaa !19
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 10
  %10 = load i32, i32* %9, align 8, !tbaa !568
  %11 = icmp sgt i32 %6, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 9
  %14 = load i8**, i8*** %13, align 8, !tbaa !567
  %15 = zext i32 %6 to i64
  %16 = getelementptr inbounds i8*, i8** %14, i64 %15
  br label %33

17:                                               ; preds = %8, %2
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 11
  %19 = load i8**, i8*** %18, align 8, !tbaa !13
  %20 = icmp eq i8** %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 12
  %23 = load i32, i32* %22, align 8, !tbaa !16
  %24 = icmp slt i32 %6, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 13
  %27 = load i32, i32* %26, align 4, !tbaa !17
  %28 = icmp sgt i32 %6, %27
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = sub nsw i32 %6, %23
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %19, i64 %31
  br label %33

33:                                               ; preds = %29, %12
  %34 = phi i8** [ %16, %12 ], [ %32, %29 ]
  %35 = load i8*, i8** %34, align 8, !tbaa !3
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %17, %21, %25, %33
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 0
  store i32 %6, i32* %38, align 4, !tbaa !7
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 9
  %40 = load i8**, i8*** %39, align 8, !tbaa !567
  %41 = load i8*, i8** %40, align 8, !tbaa !3
  br label %42

42:                                               ; preds = %37, %33
  %43 = phi i8* [ %41, %37 ], [ %35, %33 ]
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i8* [ %43, %42 ], [ %46, %44 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = load i8, i8* %45, align 1, !tbaa !7
  switch i8 %47, label %44 [
    i8 0, label %54
    i8 37, label %48
  ]

48:                                               ; preds = %44
  %49 = load i8, i8* %46, align 1, !tbaa !7
  %50 = icmp eq i8 %49, 115
  br i1 %50, label %51, label %54

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6
  %53 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull dereferenceable(1) %1, i8* noundef nonnull dereferenceable(1) %43, %union.anon* noundef nonnull %52) #27
  br label %72

54:                                               ; preds = %44, %48
  %55 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 0
  %56 = load i32, i32* %55, align 4, !tbaa !7
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 1
  %58 = load i32, i32* %57, align 4, !tbaa !7
  %59 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 2
  %60 = load i32, i32* %59, align 4, !tbaa !7
  %61 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 3
  %62 = load i32, i32* %61, align 4, !tbaa !7
  %63 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 4
  %64 = load i32, i32* %63, align 4, !tbaa !7
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 5
  %66 = load i32, i32* %65, align 4, !tbaa !7
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 6
  %68 = load i32, i32* %67, align 4, !tbaa !7
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %4, i64 0, i32 6, i32 0, i64 7
  %70 = load i32, i32* %69, align 4, !tbaa !7
  %71 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull dereferenceable(1) %1, i8* noundef nonnull dereferenceable(1) %43, i32 noundef %56, i32 noundef %58, i32 noundef %60, i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %68, i32 noundef %70) #27
  br label %72

72:                                               ; preds = %54, %51
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal void @reset_error_mgr(%struct.jpeg_common_struct* nocapture noundef readonly %0) #21 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8, !tbaa !569
  %4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 8
  store i64 0, i64* %4, align 8, !tbaa !31
  %5 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 5
  store i32 0, i32* %5, align 8, !tbaa !19
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @sprintf(i8* noalias nocapture noundef writeonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @jinit_memory_mgr(%struct.jpeg_common_struct* noundef %0) local_unnamed_addr #2 {
  %2 = alloca i64, align 8
  %3 = alloca i8, align 1
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #27
  %5 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %5, align 8, !tbaa !556
  %6 = tail call i64 (%struct.jpeg_common_struct*, ...) bitcast (i64 (%struct.jpeg_common_struct*)* @jpeg_mem_init to i64 (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %0) #27
  store i64 %6, i64* %2, align 8, !tbaa !35
  %7 = tail call i8* (%struct.jpeg_common_struct*, i64, ...) bitcast (i8* (%struct.jpeg_common_struct*, i64)* @jpeg_get_small to i8* (%struct.jpeg_common_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i64 noundef 168) #27
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jpeg_mem_term to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef nonnull %0) #27
  %10 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8, !tbaa !569
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 54, i32* %12, align 8, !tbaa !19
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 0, i32* %13, align 4, !tbaa !7
  %14 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %15 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %14, align 8, !tbaa !569
  %16 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %15, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %16(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %17

17:                                               ; preds = %9, %1
  %18 = bitcast i8* %7 to i8* (...)**
  store i8* (...)* bitcast (i8* (%struct.jpeg_common_struct*, i32, i64)* @alloc_small to i8* (...)*), i8* (...)** %18, align 8, !tbaa !570
  %19 = getelementptr inbounds i8, i8* %7, i64 8
  %20 = bitcast i8* %19 to i8* (...)**
  store i8* (...)* bitcast (i8* (%struct.jpeg_common_struct*, i32, i64)* @alloc_large to i8* (...)*), i8* (...)** %20, align 8, !tbaa !572
  %21 = getelementptr inbounds i8, i8* %7, i64 16
  %22 = bitcast i8* %21 to i8** (...)**
  store i8** (...)* bitcast (i8** (%struct.jpeg_common_struct*, i32, i32, i32)* @alloc_sarray to i8** (...)*), i8** (...)** %22, align 8, !tbaa !573
  %23 = getelementptr inbounds i8, i8* %7, i64 24
  %24 = bitcast i8* %23 to [64 x i16]** (...)**
  store [64 x i16]** (...)* bitcast ([64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)* @alloc_barray to [64 x i16]** (...)*), [64 x i16]** (...)** %24, align 8, !tbaa !574
  %25 = getelementptr inbounds i8, i8* %7, i64 32
  %26 = bitcast i8* %25 to %struct.jvirt_sarray_control* (...)**
  store %struct.jvirt_sarray_control* (...)* bitcast (%struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)* @request_virt_sarray to %struct.jvirt_sarray_control* (...)*), %struct.jvirt_sarray_control* (...)** %26, align 8, !tbaa !575
  %27 = getelementptr inbounds i8, i8* %7, i64 40
  %28 = bitcast i8* %27 to %struct.jvirt_barray_control* (...)**
  store %struct.jvirt_barray_control* (...)* bitcast (%struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)* @request_virt_barray to %struct.jvirt_barray_control* (...)*), %struct.jvirt_barray_control* (...)** %28, align 8, !tbaa !576
  %29 = getelementptr inbounds i8, i8* %7, i64 48
  %30 = bitcast i8* %29 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_common_struct*)* @realize_virt_arrays to void (...)*), void (...)** %30, align 8, !tbaa !577
  %31 = getelementptr inbounds i8, i8* %7, i64 56
  %32 = bitcast i8* %31 to i8** (...)**
  store i8** (...)* bitcast (i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)* @access_virt_sarray to i8** (...)*), i8** (...)** %32, align 8, !tbaa !578
  %33 = getelementptr inbounds i8, i8* %7, i64 64
  %34 = bitcast i8* %33 to [64 x i16]** (...)**
  store [64 x i16]** (...)* bitcast ([64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)* @access_virt_barray to [64 x i16]** (...)*), [64 x i16]** (...)** %34, align 8, !tbaa !579
  %35 = getelementptr inbounds i8, i8* %7, i64 72
  %36 = bitcast i8* %35 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_common_struct*, i32)* @free_pool to void (...)*), void (...)** %36, align 8, !tbaa !580
  %37 = getelementptr inbounds i8, i8* %7, i64 80
  %38 = bitcast i8* %37 to void (...)**
  store void (...)* bitcast (void (%struct.jpeg_common_struct*)* @self_destruct to void (...)*), void (...)** %38, align 8, !tbaa !581
  %39 = getelementptr inbounds i8, i8* %7, i64 96
  %40 = bitcast i8* %39 to i64*
  store i64 1000000000, i64* %40, align 8, !tbaa !582
  %41 = getelementptr inbounds i8, i8* %7, i64 88
  %42 = bitcast i8* %41 to i64*
  store i64 %6, i64* %42, align 8, !tbaa !583
  %43 = getelementptr inbounds i8, i8* %7, i64 104
  %44 = getelementptr inbounds i8, i8* %7, i64 152
  %45 = bitcast i8* %44 to i64*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %43, i8 0, i64 48, i1 false)
  store i64 168, i64* %45, align 8, !tbaa !584
  %46 = bitcast %struct.jpeg_memory_mgr** %5 to i8**
  store i8* %7, i8** %46, align 8, !tbaa !556
  %47 = tail call i8* (i8*, ...) bitcast (i8* (...)* @getenv to i8* (i8*, ...)*)(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i64 0, i64 0)) #27
  %48 = icmp eq i8* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #27
  store i8 120, i8* %3, align 1, !tbaa !7
  %50 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* noundef nonnull %47, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.316, i64 0, i64 0), i64* noundef nonnull %2, i8* noundef nonnull %3) #27
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = load i8, i8* %3, align 1, !tbaa !7
  %54 = and i8 %53, -33
  %55 = icmp eq i8 %54, 77
  %56 = load i64, i64* %2, align 8, !tbaa !35
  br i1 %55, label %57, label %59

57:                                               ; preds = %52
  %58 = mul nsw i64 %56, 1000
  store i64 %58, i64* %2, align 8, !tbaa !35
  br label %59

59:                                               ; preds = %52, %57
  %60 = phi i64 [ %58, %57 ], [ %56, %52 ]
  %61 = mul nsw i64 %60, 1000
  store i64 %61, i64* %42, align 8, !tbaa !583
  br label %62

62:                                               ; preds = %59, %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #27
  br label %63

63:                                               ; preds = %62, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #27
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @alloc_small(%struct.jpeg_common_struct* noundef %0, i32 noundef %1, i64 noundef %2) #2 {
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %5 = bitcast %struct.jpeg_memory_mgr** %4 to %struct.my_memory_mgr**
  %6 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8, !tbaa !556
  %7 = icmp ugt i64 %2, 999999976
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8, !tbaa !569
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 54, i32* %11, align 8, !tbaa !19
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 1, i32* %12, align 4, !tbaa !7
  %13 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %14 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %13, align 8, !tbaa !569
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %16

16:                                               ; preds = %8, %3
  %17 = and i64 %2, 7
  %18 = icmp eq i64 %17, 0
  %19 = sub nuw nsw i64 8, %17
  %20 = select i1 %18, i64 0, i64 %19
  %21 = add i64 %20, %2
  %22 = icmp ugt i32 %1, 1
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8, !tbaa !569
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 5
  store i32 14, i32* %26, align 8, !tbaa !19
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %27, align 4, !tbaa !7
  %28 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %29 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %28, align 8, !tbaa !569
  %30 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %29, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %30(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %31

31:                                               ; preds = %16, %23
  %32 = sext i32 %1 to i64
  %33 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %6, i64 0, i32 1, i64 %32
  %34 = load %union.small_pool_struct*, %union.small_pool_struct** %33, align 8, !tbaa !7
  %35 = icmp eq %union.small_pool_struct* %34, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %31, %41
  %37 = phi %union.small_pool_struct* [ %43, %41 ], [ %34, %31 ]
  %38 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %37, i64 0, i32 0, i32 2
  %39 = load i64, i64* %38, align 8, !tbaa !7
  %40 = icmp ult i64 %39, %21
  br i1 %40, label %41, label %89

41:                                               ; preds = %36
  %42 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %37, i64 0, i32 0, i32 0
  %43 = load %union.small_pool_struct*, %union.small_pool_struct** %42, align 8, !tbaa !7
  %44 = icmp eq %union.small_pool_struct* %43, null
  br i1 %44, label %45, label %36, !llvm.loop !585

45:                                               ; preds = %41, %31
  %46 = phi %union.small_pool_struct* [ null, %31 ], [ %37, %41 ]
  %47 = icmp eq %union.small_pool_struct* %46, null
  %48 = select i1 %47, [2 x i64]* @first_pool_slop, [2 x i64]* @extra_pool_slop
  %49 = getelementptr inbounds [2 x i64], [2 x i64]* %48, i64 0, i64 %32
  %50 = load i64, i64* %49, align 8, !tbaa !35
  %51 = sub i64 999999976, %21
  %52 = icmp ugt i64 %50, %51
  %53 = select i1 %52, i64 %51, i64 %50
  %54 = add i64 %53, %21
  %55 = add i64 %54, 24
  %56 = tail call i8* (%struct.jpeg_common_struct*, i64, ...) bitcast (i8* (%struct.jpeg_common_struct*, i64)* @jpeg_get_small to i8* (%struct.jpeg_common_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i64 noundef %55) #27
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %76

58:                                               ; preds = %45
  %59 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %60 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  br label %61

61:                                               ; preds = %58, %71
  %62 = phi i64 [ %53, %58 ], [ %63, %71 ]
  %63 = lshr i64 %62, 1
  %64 = icmp ult i64 %62, 100
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %59, align 8, !tbaa !569
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 5
  store i32 54, i32* %67, align 8, !tbaa !19
  %68 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 6, i32 0, i64 0
  store i32 2, i32* %68, align 4, !tbaa !7
  %69 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %60, align 8, !tbaa !569
  %70 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %69, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %70(%struct.jpeg_common_struct* noundef %0) #27
  br label %71

71:                                               ; preds = %65, %61
  %72 = add i64 %63, %21
  %73 = add i64 %72, 24
  %74 = tail call i8* (%struct.jpeg_common_struct*, i64, ...) bitcast (i8* (%struct.jpeg_common_struct*, i64)* @jpeg_get_small to i8* (%struct.jpeg_common_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i64 noundef %73) #27
  %75 = icmp eq i8* %74, null
  br i1 %75, label %61, label %76

76:                                               ; preds = %71, %45
  %77 = phi i64 [ %54, %45 ], [ %72, %71 ]
  %78 = phi i8* [ %56, %45 ], [ %74, %71 ]
  %79 = phi i64 [ %55, %45 ], [ %73, %71 ]
  %80 = bitcast i8* %78 to %union.small_pool_struct*
  %81 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %6, i64 0, i32 5
  %82 = load i64, i64* %81, align 8, !tbaa !584
  %83 = add i64 %82, %79
  store i64 %83, i64* %81, align 8, !tbaa !584
  %84 = getelementptr inbounds i8, i8* %78, i64 16
  %85 = bitcast i8* %84 to i64*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %78, i8 0, i64 16, i1 false)
  store i64 %77, i64* %85, align 8, !tbaa !7
  %86 = bitcast %union.small_pool_struct** %33 to i8**
  %87 = bitcast %union.small_pool_struct* %46 to i8**
  %88 = select i1 %47, i8** %86, i8** %87
  store i8* %78, i8** %88, align 8, !tbaa !7
  br label %89

89:                                               ; preds = %36, %76
  %90 = phi %union.small_pool_struct* [ %80, %76 ], [ %37, %36 ]
  %91 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %90, i64 1
  %92 = bitcast %union.small_pool_struct* %91 to i8*
  %93 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %90, i64 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8, !tbaa !7
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = add i64 %94, %21
  store i64 %96, i64* %93, align 8, !tbaa !7
  %97 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %90, i64 0, i32 0, i32 2
  %98 = load i64, i64* %97, align 8, !tbaa !7
  %99 = sub i64 %98, %21
  store i64 %99, i64* %97, align 8, !tbaa !7
  ret i8* %95
}

; Function Attrs: nounwind uwtable
define internal i8* @alloc_large(%struct.jpeg_common_struct* noundef %0, i32 noundef %1, i64 noundef %2) #2 {
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %5 = bitcast %struct.jpeg_memory_mgr** %4 to %struct.my_memory_mgr**
  %6 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %5, align 8, !tbaa !556
  %7 = icmp ugt i64 %2, 999999976
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8, !tbaa !569
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 54, i32* %11, align 8, !tbaa !19
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 3, i32* %12, align 4, !tbaa !7
  %13 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %14 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %13, align 8, !tbaa !569
  %15 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %14, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %15(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %16

16:                                               ; preds = %8, %3
  %17 = and i64 %2, 7
  %18 = icmp eq i64 %17, 0
  %19 = sub nuw nsw i64 8, %17
  %20 = select i1 %18, i64 0, i64 %19
  %21 = add i64 %20, %2
  %22 = icmp ugt i32 %1, 1
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8, !tbaa !569
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 5
  store i32 14, i32* %26, align 8, !tbaa !19
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %27, align 4, !tbaa !7
  %28 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %29 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %28, align 8, !tbaa !569
  %30 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %29, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %30(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %31

31:                                               ; preds = %16, %23
  %32 = add i64 %21, 24
  %33 = tail call i8* (%struct.jpeg_common_struct*, i64, ...) bitcast (i8* (%struct.jpeg_common_struct*, i64)* @jpeg_get_large to i8* (%struct.jpeg_common_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef nonnull %0, i64 noundef %32) #27
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8, !tbaa !569
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 5
  store i32 54, i32* %38, align 8, !tbaa !19
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 6, i32 0, i64 0
  store i32 4, i32* %39, align 4, !tbaa !7
  %40 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %41 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %40, align 8, !tbaa !569
  %42 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %41, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %42(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %43

43:                                               ; preds = %35, %31
  %44 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %6, i64 0, i32 5
  %45 = load i64, i64* %44, align 8, !tbaa !584
  %46 = add i64 %45, %32
  store i64 %46, i64* %44, align 8, !tbaa !584
  %47 = sext i32 %1 to i64
  %48 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %6, i64 0, i32 2, i64 %47
  %49 = load %union.large_pool_struct*, %union.large_pool_struct** %48, align 8, !tbaa !3
  %50 = bitcast i8* %33 to %union.large_pool_struct**
  store %union.large_pool_struct* %49, %union.large_pool_struct** %50, align 8, !tbaa !7
  %51 = getelementptr inbounds i8, i8* %33, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %21, i64* %52, align 8, !tbaa !7
  %53 = getelementptr inbounds i8, i8* %33, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8, !tbaa !7
  %55 = bitcast %union.large_pool_struct** %48 to i8**
  store i8* %33, i8** %55, align 8, !tbaa !3
  %56 = getelementptr inbounds i8, i8* %33, i64 24
  ret i8* %56
}

; Function Attrs: nounwind uwtable
define internal i8** @alloc_sarray(%struct.jpeg_common_struct* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #2 {
  %5 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %6 = bitcast %struct.jpeg_memory_mgr** %5 to %struct.my_memory_mgr**
  %7 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %6, align 8, !tbaa !556
  %8 = zext i32 %2 to i64
  %9 = udiv i32 999999976, %2
  %10 = icmp ugt i32 %2, 999999976
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !569
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 70, i32* %14, align 8, !tbaa !19
  %15 = bitcast %struct.jpeg_error_mgr* %13 to void (%struct.jpeg_common_struct*, ...)**
  %16 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %15, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %16(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %17

17:                                               ; preds = %11, %4
  %18 = zext i32 %3 to i64
  %19 = icmp ult i32 %9, %3
  %20 = select i1 %19, i32 %9, i32 %3
  %21 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %7, i64 0, i32 6
  store i32 %20, i32* %21, align 8, !tbaa !586
  %22 = shl nuw nsw i64 %18, 3
  %23 = tail call i8* @alloc_small(%struct.jpeg_common_struct* noundef nonnull %0, i32 noundef %1, i64 noundef %22)
  %24 = bitcast i8* %23 to i8**
  %25 = icmp eq i32 %3, 0
  br i1 %25, label %130, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %28 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %29 = icmp ugt i32 %1, 1
  %30 = sext i32 %1 to i64
  br label %34

31:                                               ; preds = %102, %108, %72
  %32 = phi i32 [ %35, %72 ], [ %103, %102 ], [ %124, %108 ]
  %33 = icmp ult i32 %32, %3
  br i1 %33, label %34, label %130, !llvm.loop !587

34:                                               ; preds = %26, %31
  %35 = phi i32 [ 0, %26 ], [ %32, %31 ]
  %36 = phi i32 [ %20, %26 ], [ %39, %31 ]
  %37 = sub i32 %3, %35
  %38 = icmp ult i32 %36, %37
  %39 = select i1 %38, i32 %36, i32 %37
  %40 = zext i32 %39 to i64
  %41 = mul nuw i64 %40, %8
  %42 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %6, align 8, !tbaa !556
  %43 = icmp ugt i64 %41, 999999976
  br i1 %43, label %44, label %50

44:                                               ; preds = %34
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8, !tbaa !569
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i64 0, i32 5
  store i32 54, i32* %46, align 8, !tbaa !19
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i64 0, i32 6, i32 0, i64 0
  store i32 3, i32* %47, align 4, !tbaa !7
  %48 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %28, align 8, !tbaa !569
  %49 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %48, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %49(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %50

50:                                               ; preds = %44, %34
  %51 = and i64 %41, 7
  %52 = icmp eq i64 %51, 0
  %53 = sub nuw nsw i64 8, %51
  %54 = select i1 %52, i64 0, i64 %53
  %55 = add i64 %54, %41
  br i1 %29, label %56, label %62

56:                                               ; preds = %50
  %57 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8, !tbaa !569
  %58 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i64 0, i32 5
  store i32 14, i32* %58, align 8, !tbaa !19
  %59 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %57, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %59, align 4, !tbaa !7
  %60 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %28, align 8, !tbaa !569
  %61 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %60, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %61(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %62

62:                                               ; preds = %56, %50
  %63 = add i64 %55, 24
  %64 = tail call i8* (%struct.jpeg_common_struct*, i64, ...) bitcast (i8* (%struct.jpeg_common_struct*, i64)* @jpeg_get_large to i8* (%struct.jpeg_common_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef nonnull %0, i64 noundef %63) #27
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8, !tbaa !569
  %68 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %67, i64 0, i32 5
  store i32 54, i32* %68, align 8, !tbaa !19
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %67, i64 0, i32 6, i32 0, i64 0
  store i32 4, i32* %69, align 4, !tbaa !7
  %70 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %28, align 8, !tbaa !569
  %71 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %70, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %71(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %72

72:                                               ; preds = %62, %66
  %73 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %42, i64 0, i32 5
  %74 = load i64, i64* %73, align 8, !tbaa !584
  %75 = add i64 %74, %63
  store i64 %75, i64* %73, align 8, !tbaa !584
  %76 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %42, i64 0, i32 2, i64 %30
  %77 = load %union.large_pool_struct*, %union.large_pool_struct** %76, align 8, !tbaa !3
  %78 = bitcast i8* %64 to %union.large_pool_struct**
  store %union.large_pool_struct* %77, %union.large_pool_struct** %78, align 8, !tbaa !7
  %79 = getelementptr inbounds i8, i8* %64, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %55, i64* %80, align 8, !tbaa !7
  %81 = getelementptr inbounds i8, i8* %64, i64 16
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8, !tbaa !7
  %83 = bitcast %union.large_pool_struct** %76 to i8**
  store i8* %64, i8** %83, align 8, !tbaa !3
  %84 = icmp eq i32 %39, 0
  br i1 %84, label %31, label %85

85:                                               ; preds = %72
  %86 = getelementptr inbounds i8, i8* %64, i64 24
  %87 = add i32 %39, -1
  %88 = and i32 %39, 3
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %102, label %90

90:                                               ; preds = %85, %90
  %91 = phi i8* [ %98, %90 ], [ %86, %85 ]
  %92 = phi i32 [ %99, %90 ], [ %39, %85 ]
  %93 = phi i32 [ %95, %90 ], [ %35, %85 ]
  %94 = phi i32 [ %100, %90 ], [ 0, %85 ]
  %95 = add i32 %93, 1
  %96 = zext i32 %93 to i64
  %97 = getelementptr inbounds i8*, i8** %24, i64 %96
  store i8* %91, i8** %97, align 8, !tbaa !3
  %98 = getelementptr inbounds i8, i8* %91, i64 %8
  %99 = add i32 %92, -1
  %100 = add i32 %94, 1
  %101 = icmp eq i32 %100, %88
  br i1 %101, label %102, label %90, !llvm.loop !588

102:                                              ; preds = %90, %85
  %103 = phi i32 [ undef, %85 ], [ %95, %90 ]
  %104 = phi i8* [ %86, %85 ], [ %98, %90 ]
  %105 = phi i32 [ %39, %85 ], [ %99, %90 ]
  %106 = phi i32 [ %35, %85 ], [ %95, %90 ]
  %107 = icmp ult i32 %87, 3
  br i1 %107, label %31, label %108

108:                                              ; preds = %102, %108
  %109 = phi i8* [ %127, %108 ], [ %104, %102 ]
  %110 = phi i32 [ %128, %108 ], [ %105, %102 ]
  %111 = phi i32 [ %124, %108 ], [ %106, %102 ]
  %112 = add i32 %111, 1
  %113 = zext i32 %111 to i64
  %114 = getelementptr inbounds i8*, i8** %24, i64 %113
  store i8* %109, i8** %114, align 8, !tbaa !3
  %115 = getelementptr inbounds i8, i8* %109, i64 %8
  %116 = add i32 %111, 2
  %117 = zext i32 %112 to i64
  %118 = getelementptr inbounds i8*, i8** %24, i64 %117
  store i8* %115, i8** %118, align 8, !tbaa !3
  %119 = getelementptr inbounds i8, i8* %115, i64 %8
  %120 = add i32 %111, 3
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds i8*, i8** %24, i64 %121
  store i8* %119, i8** %122, align 8, !tbaa !3
  %123 = getelementptr inbounds i8, i8* %119, i64 %8
  %124 = add i32 %111, 4
  %125 = zext i32 %120 to i64
  %126 = getelementptr inbounds i8*, i8** %24, i64 %125
  store i8* %123, i8** %126, align 8, !tbaa !3
  %127 = getelementptr inbounds i8, i8* %123, i64 %8
  %128 = add i32 %110, -4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %31, label %108, !llvm.loop !589

130:                                              ; preds = %31, %17
  ret i8** %24
}

; Function Attrs: nounwind uwtable
define internal [64 x i16]** @alloc_barray(%struct.jpeg_common_struct* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #2 {
  %5 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %6 = bitcast %struct.jpeg_memory_mgr** %5 to %struct.my_memory_mgr**
  %7 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %6, align 8, !tbaa !556
  %8 = zext i32 %2 to i64
  %9 = shl nuw nsw i64 %8, 7
  %10 = udiv i64 999999976, %9
  %11 = icmp ugt i32 %2, 7812499
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8, !tbaa !569
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 5
  store i32 70, i32* %15, align 8, !tbaa !19
  %16 = bitcast %struct.jpeg_error_mgr* %14 to void (%struct.jpeg_common_struct*, ...)**
  %17 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %16, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %17(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %18

18:                                               ; preds = %12, %4
  %19 = zext i32 %3 to i64
  %20 = icmp ult i64 %10, %19
  %21 = trunc i64 %10 to i32
  %22 = select i1 %20, i32 %21, i32 %3
  %23 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %7, i64 0, i32 6
  store i32 %22, i32* %23, align 8, !tbaa !586
  %24 = shl nuw nsw i64 %19, 3
  %25 = tail call i8* @alloc_small(%struct.jpeg_common_struct* noundef nonnull %0, i32 noundef %1, i64 noundef %24)
  %26 = bitcast i8* %25 to [64 x i16]**
  %27 = icmp eq i32 %3, 0
  br i1 %27, label %128, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %30 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %31 = icmp ugt i32 %1, 1
  %32 = sext i32 %1 to i64
  br label %36

33:                                               ; preds = %100, %106, %69
  %34 = phi i32 [ %37, %69 ], [ %101, %100 ], [ %122, %106 ]
  %35 = icmp ult i32 %34, %3
  br i1 %35, label %36, label %128, !llvm.loop !590

36:                                               ; preds = %28, %33
  %37 = phi i32 [ 0, %28 ], [ %34, %33 ]
  %38 = phi i32 [ %22, %28 ], [ %41, %33 ]
  %39 = sub i32 %3, %37
  %40 = icmp ult i32 %38, %39
  %41 = select i1 %40, i32 %38, i32 %39
  %42 = zext i32 %41 to i64
  %43 = mul i64 %9, %42
  %44 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %6, align 8, !tbaa !556
  %45 = icmp ugt i64 %43, 999999976
  br i1 %45, label %46, label %52

46:                                               ; preds = %36
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !569
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i64 0, i32 5
  store i32 54, i32* %48, align 8, !tbaa !19
  %49 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i64 0, i32 6, i32 0, i64 0
  store i32 3, i32* %49, align 4, !tbaa !7
  %50 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %30, align 8, !tbaa !569
  %51 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %50, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %51(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %52

52:                                               ; preds = %46, %36
  br i1 %31, label %53, label %59

53:                                               ; preds = %52
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !569
  %55 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 5
  store i32 14, i32* %55, align 8, !tbaa !19
  %56 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %56, align 4, !tbaa !7
  %57 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %30, align 8, !tbaa !569
  %58 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %57, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %58(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %59

59:                                               ; preds = %53, %52
  %60 = or i64 %43, 24
  %61 = tail call i8* (%struct.jpeg_common_struct*, i64, ...) bitcast (i8* (%struct.jpeg_common_struct*, i64)* @jpeg_get_large to i8* (%struct.jpeg_common_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef nonnull %0, i64 noundef %60) #27
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8, !tbaa !569
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i64 0, i32 5
  store i32 54, i32* %65, align 8, !tbaa !19
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i64 0, i32 6, i32 0, i64 0
  store i32 4, i32* %66, align 4, !tbaa !7
  %67 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %30, align 8, !tbaa !569
  %68 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %67, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %68(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %69

69:                                               ; preds = %59, %63
  %70 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %44, i64 0, i32 5
  %71 = load i64, i64* %70, align 8, !tbaa !584
  %72 = add i64 %71, %60
  store i64 %72, i64* %70, align 8, !tbaa !584
  %73 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %44, i64 0, i32 2, i64 %32
  %74 = load %union.large_pool_struct*, %union.large_pool_struct** %73, align 8, !tbaa !3
  %75 = bitcast i8* %61 to %union.large_pool_struct**
  store %union.large_pool_struct* %74, %union.large_pool_struct** %75, align 8, !tbaa !7
  %76 = getelementptr inbounds i8, i8* %61, i64 8
  %77 = bitcast i8* %76 to i64*
  store i64 %43, i64* %77, align 8, !tbaa !7
  %78 = getelementptr inbounds i8, i8* %61, i64 16
  %79 = bitcast i8* %78 to i64*
  store i64 0, i64* %79, align 8, !tbaa !7
  %80 = bitcast %union.large_pool_struct** %73 to i8**
  store i8* %61, i8** %80, align 8, !tbaa !3
  %81 = icmp eq i32 %41, 0
  br i1 %81, label %33, label %82

82:                                               ; preds = %69
  %83 = getelementptr inbounds i8, i8* %61, i64 24
  %84 = bitcast i8* %83 to [64 x i16]*
  %85 = add i32 %41, -1
  %86 = and i32 %41, 3
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %82, %88
  %89 = phi [64 x i16]* [ %96, %88 ], [ %84, %82 ]
  %90 = phi i32 [ %97, %88 ], [ %41, %82 ]
  %91 = phi i32 [ %93, %88 ], [ %37, %82 ]
  %92 = phi i32 [ %98, %88 ], [ 0, %82 ]
  %93 = add i32 %91, 1
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds [64 x i16]*, [64 x i16]** %26, i64 %94
  store [64 x i16]* %89, [64 x i16]** %95, align 8, !tbaa !3
  %96 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 %8
  %97 = add i32 %90, -1
  %98 = add i32 %92, 1
  %99 = icmp eq i32 %98, %86
  br i1 %99, label %100, label %88, !llvm.loop !591

100:                                              ; preds = %88, %82
  %101 = phi i32 [ undef, %82 ], [ %93, %88 ]
  %102 = phi [64 x i16]* [ %84, %82 ], [ %96, %88 ]
  %103 = phi i32 [ %41, %82 ], [ %97, %88 ]
  %104 = phi i32 [ %37, %82 ], [ %93, %88 ]
  %105 = icmp ult i32 %85, 3
  br i1 %105, label %33, label %106

106:                                              ; preds = %100, %106
  %107 = phi [64 x i16]* [ %125, %106 ], [ %102, %100 ]
  %108 = phi i32 [ %126, %106 ], [ %103, %100 ]
  %109 = phi i32 [ %122, %106 ], [ %104, %100 ]
  %110 = add i32 %109, 1
  %111 = zext i32 %109 to i64
  %112 = getelementptr inbounds [64 x i16]*, [64 x i16]** %26, i64 %111
  store [64 x i16]* %107, [64 x i16]** %112, align 8, !tbaa !3
  %113 = getelementptr inbounds [64 x i16], [64 x i16]* %107, i64 %8
  %114 = add i32 %109, 2
  %115 = zext i32 %110 to i64
  %116 = getelementptr inbounds [64 x i16]*, [64 x i16]** %26, i64 %115
  store [64 x i16]* %113, [64 x i16]** %116, align 8, !tbaa !3
  %117 = getelementptr inbounds [64 x i16], [64 x i16]* %113, i64 %8
  %118 = add i32 %109, 3
  %119 = zext i32 %114 to i64
  %120 = getelementptr inbounds [64 x i16]*, [64 x i16]** %26, i64 %119
  store [64 x i16]* %117, [64 x i16]** %120, align 8, !tbaa !3
  %121 = getelementptr inbounds [64 x i16], [64 x i16]* %117, i64 %8
  %122 = add i32 %109, 4
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds [64 x i16]*, [64 x i16]** %26, i64 %123
  store [64 x i16]* %121, [64 x i16]** %124, align 8, !tbaa !3
  %125 = getelementptr inbounds [64 x i16], [64 x i16]* %121, i64 %8
  %126 = add i32 %108, -4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %33, label %106, !llvm.loop !592

128:                                              ; preds = %33, %18
  ret [64 x i16]** %26
}

; Function Attrs: nounwind uwtable
define internal %struct.jvirt_sarray_control* @request_virt_sarray(%struct.jpeg_common_struct* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #2 {
  %7 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %8 = bitcast %struct.jpeg_memory_mgr** %7 to %struct.my_memory_mgr**
  %9 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %8, align 8, !tbaa !556
  %10 = icmp eq i32 %1, 1
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !569
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 14, i32* %14, align 8, !tbaa !19
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %15, align 4, !tbaa !7
  %16 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %17 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %16, align 8, !tbaa !569
  %18 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %17, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %18(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %19

19:                                               ; preds = %11, %6
  %20 = tail call i8* @alloc_small(%struct.jpeg_common_struct* noundef nonnull %0, i32 noundef %1, i64 noundef 152)
  %21 = bitcast i8* %20 to %struct.jvirt_sarray_control*
  %22 = bitcast i8* %20 to i8***
  store i8** null, i8*** %22, align 8, !tbaa !593
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %4, i32* %24, align 8, !tbaa !596
  %25 = getelementptr inbounds i8, i8* %20, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %3, i32* %26, align 4, !tbaa !597
  %27 = getelementptr inbounds i8, i8* %20, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 %5, i32* %28, align 8, !tbaa !598
  %29 = getelementptr inbounds i8, i8* %20, i64 36
  %30 = bitcast i8* %29 to i32*
  store i32 %2, i32* %30, align 4, !tbaa !599
  %31 = getelementptr inbounds i8, i8* %20, i64 44
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4, !tbaa !600
  %33 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %9, i64 0, i32 3
  %34 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %33, align 8, !tbaa !601
  %35 = getelementptr inbounds i8, i8* %20, i64 48
  %36 = bitcast i8* %35 to %struct.jvirt_sarray_control**
  store %struct.jvirt_sarray_control* %34, %struct.jvirt_sarray_control** %36, align 8, !tbaa !602
  %37 = bitcast %struct.jvirt_sarray_control** %33 to i8**
  store i8* %20, i8** %37, align 8, !tbaa !601
  ret %struct.jvirt_sarray_control* %21
}

; Function Attrs: nounwind uwtable
define internal %struct.jvirt_barray_control* @request_virt_barray(%struct.jpeg_common_struct* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #2 {
  %7 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %8 = bitcast %struct.jpeg_memory_mgr** %7 to %struct.my_memory_mgr**
  %9 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %8, align 8, !tbaa !556
  %10 = icmp eq i32 %1, 1
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8, !tbaa !569
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 14, i32* %14, align 8, !tbaa !19
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %15, align 4, !tbaa !7
  %16 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %17 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %16, align 8, !tbaa !569
  %18 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %17, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %18(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %19

19:                                               ; preds = %11, %6
  %20 = tail call i8* @alloc_small(%struct.jpeg_common_struct* noundef nonnull %0, i32 noundef %1, i64 noundef 152)
  %21 = bitcast i8* %20 to %struct.jvirt_barray_control*
  %22 = bitcast i8* %20 to [64 x i16]***
  store [64 x i16]** null, [64 x i16]*** %22, align 8, !tbaa !603
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %4, i32* %24, align 8, !tbaa !605
  %25 = getelementptr inbounds i8, i8* %20, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %3, i32* %26, align 4, !tbaa !606
  %27 = getelementptr inbounds i8, i8* %20, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 %5, i32* %28, align 8, !tbaa !607
  %29 = getelementptr inbounds i8, i8* %20, i64 36
  %30 = bitcast i8* %29 to i32*
  store i32 %2, i32* %30, align 4, !tbaa !608
  %31 = getelementptr inbounds i8, i8* %20, i64 44
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4, !tbaa !609
  %33 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %9, i64 0, i32 4
  %34 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %33, align 8, !tbaa !610
  %35 = getelementptr inbounds i8, i8* %20, i64 48
  %36 = bitcast i8* %35 to %struct.jvirt_barray_control**
  store %struct.jvirt_barray_control* %34, %struct.jvirt_barray_control** %36, align 8, !tbaa !611
  %37 = bitcast %struct.jvirt_barray_control** %33 to i8**
  store i8* %20, i8** %37, align 8, !tbaa !610
  ret %struct.jvirt_barray_control* %21
}

; Function Attrs: nounwind uwtable
define internal void @realize_virt_arrays(%struct.jpeg_common_struct* noundef %0) #2 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to %struct.my_memory_mgr**
  %4 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %3, align 8, !tbaa !556
  %5 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %4, i64 0, i32 3
  %6 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8, !tbaa !3
  %7 = icmp eq %struct.jvirt_sarray_control* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %1, %29
  %9 = phi %struct.jvirt_sarray_control* [ %33, %29 ], [ %6, %1 ]
  %10 = phi i64 [ %31, %29 ], [ 0, %1 ]
  %11 = phi i64 [ %30, %29 ], [ 0, %1 ]
  %12 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %9, i64 0, i32 0
  %13 = load i8**, i8*** %12, align 8, !tbaa !593
  %14 = icmp eq i8** %13, null
  br i1 %14, label %15, label %29

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %9, i64 0, i32 3
  %17 = load i32, i32* %16, align 8, !tbaa !598
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %9, i64 0, i32 2
  %20 = load i32, i32* %19, align 4, !tbaa !597
  %21 = zext i32 %20 to i64
  %22 = mul nuw nsw i64 %21, %18
  %23 = add i64 %22, %10
  %24 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %9, i64 0, i32 1
  %25 = load i32, i32* %24, align 8, !tbaa !596
  %26 = zext i32 %25 to i64
  %27 = mul nuw nsw i64 %26, %21
  %28 = add i64 %27, %11
  br label %29

29:                                               ; preds = %8, %15
  %30 = phi i64 [ %28, %15 ], [ %11, %8 ]
  %31 = phi i64 [ %23, %15 ], [ %10, %8 ]
  %32 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %9, i64 0, i32 11
  %33 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %32, align 8, !tbaa !3
  %34 = icmp eq %struct.jvirt_sarray_control* %33, null
  br i1 %34, label %35, label %8, !llvm.loop !612

35:                                               ; preds = %29, %1
  %36 = phi i64 [ 0, %1 ], [ %30, %29 ]
  %37 = phi i64 [ 0, %1 ], [ %31, %29 ]
  %38 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %4, i64 0, i32 4
  %39 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %38, align 8, !tbaa !3
  %40 = icmp eq %struct.jvirt_barray_control* %39, null
  br i1 %40, label %70, label %41

41:                                               ; preds = %35, %64
  %42 = phi %struct.jvirt_barray_control* [ %68, %64 ], [ %39, %35 ]
  %43 = phi i64 [ %66, %64 ], [ %37, %35 ]
  %44 = phi i64 [ %65, %64 ], [ %36, %35 ]
  %45 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %42, i64 0, i32 0
  %46 = load [64 x i16]**, [64 x i16]*** %45, align 8, !tbaa !603
  %47 = icmp eq [64 x i16]** %46, null
  br i1 %47, label %48, label %64

48:                                               ; preds = %41
  %49 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %42, i64 0, i32 3
  %50 = load i32, i32* %49, align 8, !tbaa !607
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %42, i64 0, i32 2
  %53 = load i32, i32* %52, align 4, !tbaa !606
  %54 = zext i32 %53 to i64
  %55 = shl nuw nsw i64 %51, 7
  %56 = mul i64 %55, %54
  %57 = add i64 %56, %43
  %58 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %42, i64 0, i32 1
  %59 = load i32, i32* %58, align 8, !tbaa !605
  %60 = zext i32 %59 to i64
  %61 = shl nuw nsw i64 %54, 7
  %62 = mul i64 %61, %60
  %63 = add i64 %62, %44
  br label %64

64:                                               ; preds = %41, %48
  %65 = phi i64 [ %63, %48 ], [ %44, %41 ]
  %66 = phi i64 [ %57, %48 ], [ %43, %41 ]
  %67 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %42, i64 0, i32 11
  %68 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %67, align 8, !tbaa !3
  %69 = icmp eq %struct.jvirt_barray_control* %68, null
  br i1 %69, label %70, label %41, !llvm.loop !613

70:                                               ; preds = %64, %35
  %71 = phi i64 [ %36, %35 ], [ %65, %64 ]
  %72 = phi i64 [ %37, %35 ], [ %66, %64 ]
  %73 = icmp slt i64 %72, 1
  br i1 %73, label %179, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %4, i64 0, i32 5
  %76 = load i64, i64* %75, align 8, !tbaa !584
  %77 = tail call i64 (%struct.jpeg_common_struct*, i64, i64, i64, ...) bitcast (i64 (%struct.jpeg_common_struct*, i64, i64, i64)* @jpeg_mem_available to i64 (%struct.jpeg_common_struct*, i64, i64, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i64 noundef %72, i64 noundef %71, i64 noundef %76) #27
  %78 = icmp slt i64 %77, %71
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = sdiv i64 %77, %72
  %81 = icmp sgt i64 %80, 1
  %82 = select i1 %81, i64 %80, i64 1
  br label %83

83:                                               ; preds = %74, %79
  %84 = phi i64 [ %82, %79 ], [ 1000000000, %74 ]
  %85 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %5, align 8, !tbaa !3
  %86 = icmp eq %struct.jvirt_sarray_control* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = trunc i64 %84 to i32
  %89 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %4, i64 0, i32 6
  br label %96

90:                                               ; preds = %133, %83
  %91 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %38, align 8, !tbaa !3
  %92 = icmp eq %struct.jvirt_barray_control* %91, null
  br i1 %92, label %179, label %93

93:                                               ; preds = %90
  %94 = trunc i64 %84 to i32
  %95 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %4, i64 0, i32 6
  br label %137

96:                                               ; preds = %87, %133
  %97 = phi %struct.jvirt_sarray_control* [ %85, %87 ], [ %135, %133 ]
  %98 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 0
  %99 = load i8**, i8*** %98, align 8, !tbaa !593
  %100 = icmp eq i8** %99, null
  br i1 %100, label %101, label %133

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 1
  %103 = load i32, i32* %102, align 8, !tbaa !596
  %104 = zext i32 %103 to i64
  %105 = add nsw i64 %104, -1
  %106 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 3
  %107 = load i32, i32* %106, align 8, !tbaa !598
  %108 = zext i32 %107 to i64
  %109 = sdiv i64 %105, %108
  %110 = icmp slt i64 %109, %84
  br i1 %110, label %111, label %113

111:                                              ; preds = %101
  %112 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 4
  store i32 %103, i32* %112, align 4, !tbaa !614
  br label %123

113:                                              ; preds = %101
  %114 = mul i32 %107, %88
  %115 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 4
  store i32 %114, i32* %115, align 4, !tbaa !614
  %116 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 12
  %117 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 2
  %118 = load i32, i32* %117, align 4, !tbaa !597
  %119 = zext i32 %118 to i64
  %120 = mul nuw nsw i64 %119, %104
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i64, ...) bitcast (void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i64)* @jpeg_open_backing_store to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %116, i64 noundef %120) #27
  %121 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 10
  store i32 1, i32* %121, align 4, !tbaa !600
  %122 = load i32, i32* %115, align 4, !tbaa !614
  br label %123

123:                                              ; preds = %113, %111
  %124 = phi i32 [ %122, %113 ], [ %103, %111 ]
  %125 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 2
  %126 = load i32, i32* %125, align 4, !tbaa !597
  %127 = tail call i8** @alloc_sarray(%struct.jpeg_common_struct* noundef %0, i32 noundef 1, i32 noundef %126, i32 noundef %124)
  store i8** %127, i8*** %98, align 8, !tbaa !593
  %128 = load i32, i32* %89, align 8, !tbaa !586
  %129 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 5
  store i32 %128, i32* %129, align 8, !tbaa !615
  %130 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 6
  store i32 0, i32* %130, align 4, !tbaa !616
  %131 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 7
  store i32 0, i32* %131, align 8, !tbaa !617
  %132 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 9
  store i32 0, i32* %132, align 8, !tbaa !618
  br label %133

133:                                              ; preds = %96, %123
  %134 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %97, i64 0, i32 11
  %135 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %134, align 8, !tbaa !3
  %136 = icmp eq %struct.jvirt_sarray_control* %135, null
  br i1 %136, label %90, label %96, !llvm.loop !619

137:                                              ; preds = %93, %175
  %138 = phi %struct.jvirt_barray_control* [ %91, %93 ], [ %177, %175 ]
  %139 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 0
  %140 = load [64 x i16]**, [64 x i16]*** %139, align 8, !tbaa !603
  %141 = icmp eq [64 x i16]** %140, null
  br i1 %141, label %142, label %175

142:                                              ; preds = %137
  %143 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 1
  %144 = load i32, i32* %143, align 8, !tbaa !605
  %145 = zext i32 %144 to i64
  %146 = add nsw i64 %145, -1
  %147 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 3
  %148 = load i32, i32* %147, align 8, !tbaa !607
  %149 = zext i32 %148 to i64
  %150 = sdiv i64 %146, %149
  %151 = icmp slt i64 %150, %84
  br i1 %151, label %152, label %154

152:                                              ; preds = %142
  %153 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 4
  store i32 %144, i32* %153, align 4, !tbaa !620
  br label %165

154:                                              ; preds = %142
  %155 = mul i32 %148, %94
  %156 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 4
  store i32 %155, i32* %156, align 4, !tbaa !620
  %157 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 12
  %158 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 2
  %159 = load i32, i32* %158, align 4, !tbaa !606
  %160 = zext i32 %159 to i64
  %161 = shl nuw nsw i64 %145, 7
  %162 = mul i64 %161, %160
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i64, ...) bitcast (void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i64)* @jpeg_open_backing_store to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %157, i64 noundef %162) #27
  %163 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 10
  store i32 1, i32* %163, align 4, !tbaa !609
  %164 = load i32, i32* %156, align 4, !tbaa !620
  br label %165

165:                                              ; preds = %154, %152
  %166 = phi i32 [ %164, %154 ], [ %144, %152 ]
  %167 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 2
  %168 = load i32, i32* %167, align 4, !tbaa !606
  %169 = tail call [64 x i16]** @alloc_barray(%struct.jpeg_common_struct* noundef %0, i32 noundef 1, i32 noundef %168, i32 noundef %166)
  store [64 x i16]** %169, [64 x i16]*** %139, align 8, !tbaa !603
  %170 = load i32, i32* %95, align 8, !tbaa !586
  %171 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 5
  store i32 %170, i32* %171, align 8, !tbaa !621
  %172 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 6
  store i32 0, i32* %172, align 4, !tbaa !622
  %173 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 7
  store i32 0, i32* %173, align 8, !tbaa !623
  %174 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 9
  store i32 0, i32* %174, align 8, !tbaa !624
  br label %175

175:                                              ; preds = %137, %165
  %176 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %138, i64 0, i32 11
  %177 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %176, align 8, !tbaa !3
  %178 = icmp eq %struct.jvirt_barray_control* %177, null
  br i1 %178, label %179, label %137, !llvm.loop !625

179:                                              ; preds = %175, %90, %70
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8** @access_virt_sarray(%struct.jpeg_common_struct* noundef %0, %struct.jvirt_sarray_control* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #2 {
  %6 = add i32 %3, %2
  %7 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8, !tbaa !596
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8, !tbaa !598
  %13 = icmp ult i32 %12, %3
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 0
  %16 = load i8**, i8*** %15, align 8, !tbaa !593
  %17 = icmp eq i8** %16, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %14, %10, %5
  %19 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8, !tbaa !569
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 22, i32* %21, align 8, !tbaa !19
  %22 = bitcast %struct.jpeg_error_mgr* %20 to void (%struct.jpeg_common_struct*, ...)**
  %23 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %22, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %23(%struct.jpeg_common_struct* noundef %0) #27
  br label %24

24:                                               ; preds = %18, %14
  %25 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 6
  %26 = load i32, i32* %25, align 4, !tbaa !616
  %27 = icmp ugt i32 %26, %2
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4, !tbaa !614
  %31 = add i32 %30, %26
  %32 = icmp ugt i32 %6, %31
  br i1 %32, label %33, label %198

33:                                               ; preds = %28, %24
  %34 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 10
  %35 = load i32, i32* %34, align 4, !tbaa !600
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %38, align 8, !tbaa !569
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 69, i32* %40, align 8, !tbaa !19
  %41 = bitcast %struct.jpeg_error_mgr* %39 to void (%struct.jpeg_common_struct*, ...)**
  %42 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %41, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %42(%struct.jpeg_common_struct* noundef %0) #27
  br label %43

43:                                               ; preds = %37, %33
  %44 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 9
  %45 = load i32, i32* %44, align 8, !tbaa !618
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %116, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 2
  %49 = load i32, i32* %48, align 4, !tbaa !597
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 5
  %52 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 4
  %53 = load i32, i32* %52, align 4, !tbaa !614
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %115, label %55

55:                                               ; preds = %47
  %56 = zext i32 %53 to i64
  %57 = load i32, i32* %25, align 4, !tbaa !616
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 7
  %60 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 12
  %61 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 12, i32 1
  %62 = bitcast void (...)** %61 to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)**
  %63 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 0
  %64 = load i32, i32* %51, align 8, !tbaa !615
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %56, %65
  %67 = select i1 %66, i64 %65, i64 %56
  %68 = load i32, i32* %59, align 8, !tbaa !617
  %69 = zext i32 %68 to i64
  %70 = sub nsw i64 %69, %58
  %71 = icmp slt i64 %67, %70
  %72 = select i1 %71, i64 %67, i64 %70
  %73 = load i32, i32* %7, align 8, !tbaa !596
  %74 = zext i32 %73 to i64
  %75 = sub nsw i64 %74, %58
  %76 = icmp slt i64 %72, %75
  %77 = select i1 %76, i64 %72, i64 %75
  %78 = icmp slt i64 %77, 1
  br i1 %78, label %115, label %79

79:                                               ; preds = %55
  %80 = mul nuw nsw i64 %58, %50
  br label %81

81:                                               ; preds = %79, %96
  %82 = phi i64 [ %113, %96 ], [ %77, %79 ]
  %83 = phi i64 [ %97, %96 ], [ %80, %79 ]
  %84 = phi i64 [ %92, %96 ], [ 0, %79 ]
  %85 = mul nsw i64 %82, %50
  %86 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)*, void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)** %62, align 8, !tbaa !3
  %87 = load i8**, i8*** %63, align 8, !tbaa !593
  %88 = getelementptr inbounds i8*, i8** %87, i64 %84
  %89 = load i8*, i8** %88, align 8, !tbaa !3
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...) %86(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %60, i8* noundef %89, i64 noundef %83, i64 noundef %85) #27
  %90 = load i32, i32* %51, align 8, !tbaa !615
  %91 = zext i32 %90 to i64
  %92 = add nuw nsw i64 %84, %91
  %93 = load i32, i32* %52, align 4, !tbaa !614
  %94 = zext i32 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %96, label %115, !llvm.loop !626

96:                                               ; preds = %81
  %97 = add nsw i64 %85, %83
  %98 = load i32, i32* %25, align 4, !tbaa !616
  %99 = sub nsw i64 %94, %92
  %100 = icmp sgt i64 %99, %91
  %101 = select i1 %100, i64 %91, i64 %99
  %102 = zext i32 %98 to i64
  %103 = add nuw nsw i64 %92, %102
  %104 = load i32, i32* %59, align 8, !tbaa !617
  %105 = zext i32 %104 to i64
  %106 = sub nsw i64 %105, %103
  %107 = icmp slt i64 %101, %106
  %108 = select i1 %107, i64 %101, i64 %106
  %109 = load i32, i32* %7, align 8, !tbaa !596
  %110 = zext i32 %109 to i64
  %111 = sub nsw i64 %110, %103
  %112 = icmp slt i64 %108, %111
  %113 = select i1 %112, i64 %108, i64 %111
  %114 = icmp slt i64 %113, 1
  br i1 %114, label %115, label %81

115:                                              ; preds = %81, %96, %55, %47
  store i32 0, i32* %44, align 8, !tbaa !618
  br label %116

116:                                              ; preds = %115, %43
  %117 = load i32, i32* %25, align 4, !tbaa !616
  %118 = icmp ult i32 %117, %2
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  %120 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 4
  %121 = load i32, i32* %120, align 4, !tbaa !614
  br label %131

122:                                              ; preds = %116
  %123 = zext i32 %6 to i64
  %124 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 4
  %125 = load i32, i32* %124, align 4, !tbaa !614
  %126 = zext i32 %125 to i64
  %127 = sub nsw i64 %123, %126
  %128 = icmp sgt i64 %127, 0
  %129 = select i1 %128, i64 %127, i64 0
  %130 = trunc i64 %129 to i32
  br label %131

131:                                              ; preds = %119, %122
  %132 = phi i32 [ %125, %122 ], [ %121, %119 ]
  %133 = phi i32 [ %130, %122 ], [ %2, %119 ]
  store i32 %133, i32* %25, align 4, !tbaa !616
  %134 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 2
  %135 = load i32, i32* %134, align 4, !tbaa !597
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 5
  %138 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 4
  %139 = icmp eq i32 %132, 0
  br i1 %139, label %198, label %140

140:                                              ; preds = %131
  %141 = zext i32 %132 to i64
  %142 = zext i32 %133 to i64
  %143 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 7
  %144 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 12
  %145 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 0
  %146 = bitcast %struct.backing_store_struct* %144 to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)**
  %147 = load i32, i32* %137, align 8, !tbaa !615
  %148 = zext i32 %147 to i64
  %149 = icmp ugt i64 %141, %148
  %150 = select i1 %149, i64 %148, i64 %141
  %151 = load i32, i32* %143, align 8, !tbaa !617
  %152 = zext i32 %151 to i64
  %153 = sub nsw i64 %152, %142
  %154 = icmp slt i64 %150, %153
  %155 = select i1 %154, i64 %150, i64 %153
  %156 = load i32, i32* %7, align 8, !tbaa !596
  %157 = zext i32 %156 to i64
  %158 = sub nsw i64 %157, %142
  %159 = icmp slt i64 %155, %158
  %160 = select i1 %159, i64 %155, i64 %158
  %161 = icmp slt i64 %160, 1
  br i1 %161, label %198, label %162

162:                                              ; preds = %140
  %163 = mul nuw nsw i64 %136, %142
  br label %164

164:                                              ; preds = %162, %179
  %165 = phi i64 [ %196, %179 ], [ %160, %162 ]
  %166 = phi i64 [ %180, %179 ], [ %163, %162 ]
  %167 = phi i64 [ %175, %179 ], [ 0, %162 ]
  %168 = mul nsw i64 %165, %136
  %169 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)*, void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)** %146, align 8, !tbaa !3
  %170 = load i8**, i8*** %145, align 8, !tbaa !593
  %171 = getelementptr inbounds i8*, i8** %170, i64 %167
  %172 = load i8*, i8** %171, align 8, !tbaa !3
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...) %169(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %144, i8* noundef %172, i64 noundef %166, i64 noundef %168) #27
  %173 = load i32, i32* %137, align 8, !tbaa !615
  %174 = zext i32 %173 to i64
  %175 = add nuw nsw i64 %167, %174
  %176 = load i32, i32* %138, align 4, !tbaa !614
  %177 = zext i32 %176 to i64
  %178 = icmp ult i64 %175, %177
  br i1 %178, label %179, label %198, !llvm.loop !626

179:                                              ; preds = %164
  %180 = add nsw i64 %168, %166
  %181 = load i32, i32* %25, align 4, !tbaa !616
  %182 = sub nsw i64 %177, %175
  %183 = icmp sgt i64 %182, %174
  %184 = select i1 %183, i64 %174, i64 %182
  %185 = zext i32 %181 to i64
  %186 = add nuw nsw i64 %175, %185
  %187 = load i32, i32* %143, align 8, !tbaa !617
  %188 = zext i32 %187 to i64
  %189 = sub nsw i64 %188, %186
  %190 = icmp slt i64 %184, %189
  %191 = select i1 %190, i64 %184, i64 %189
  %192 = load i32, i32* %7, align 8, !tbaa !596
  %193 = zext i32 %192 to i64
  %194 = sub nsw i64 %193, %186
  %195 = icmp slt i64 %191, %194
  %196 = select i1 %195, i64 %191, i64 %194
  %197 = icmp slt i64 %196, 1
  br i1 %197, label %198, label %164

198:                                              ; preds = %179, %164, %140, %131, %28
  %199 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 7
  %200 = load i32, i32* %199, align 8, !tbaa !617
  %201 = icmp ult i32 %200, %6
  br i1 %201, label %202, label %249

202:                                              ; preds = %198
  %203 = icmp ult i32 %200, %2
  %204 = icmp eq i32 %4, 0
  br i1 %203, label %205, label %212

205:                                              ; preds = %202
  br i1 %204, label %213, label %206

206:                                              ; preds = %205
  %207 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %208 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %207, align 8, !tbaa !569
  %209 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %208, i64 0, i32 5
  store i32 22, i32* %209, align 8, !tbaa !19
  %210 = bitcast %struct.jpeg_error_mgr* %208 to void (%struct.jpeg_common_struct*, ...)**
  %211 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %210, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %211(%struct.jpeg_common_struct* noundef %0) #27
  br label %218

212:                                              ; preds = %202
  br i1 %204, label %213, label %218

213:                                              ; preds = %205, %212
  %214 = phi i32 [ %200, %212 ], [ %2, %205 ]
  %215 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 8
  %216 = load i32, i32* %215, align 4, !tbaa !599
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %243, label %223

218:                                              ; preds = %212, %206
  %219 = phi i32 [ %2, %206 ], [ %200, %212 ]
  store i32 %6, i32* %199, align 8, !tbaa !617
  %220 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 8
  %221 = load i32, i32* %220, align 4, !tbaa !599
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %251, label %223

223:                                              ; preds = %218, %213
  %224 = phi i32 [ %219, %218 ], [ %214, %213 ]
  %225 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 2
  %226 = load i32, i32* %225, align 4, !tbaa !597
  %227 = zext i32 %226 to i64
  %228 = load i32, i32* %25, align 4, !tbaa !616
  %229 = sub i32 %224, %228
  %230 = sub i32 %6, %228
  %231 = icmp ult i32 %229, %230
  br i1 %231, label %232, label %249

232:                                              ; preds = %223
  %233 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 0
  %234 = zext i32 %229 to i64
  br label %235

235:                                              ; preds = %232, %235
  %236 = phi i64 [ %234, %232 ], [ %240, %235 ]
  %237 = load i8**, i8*** %233, align 8, !tbaa !593
  %238 = getelementptr inbounds i8*, i8** %237, i64 %236
  %239 = load i8*, i8** %238, align 8, !tbaa !3
  tail call void (i8*, i64, ...) bitcast (void (i8*, i64)* @jzero_far to void (i8*, i64, ...)*)(i8* noundef %239, i64 noundef %227) #27
  %240 = add nuw nsw i64 %236, 1
  %241 = trunc i64 %240 to i32
  %242 = icmp eq i32 %230, %241
  br i1 %242, label %249, label %235, !llvm.loop !627

243:                                              ; preds = %213
  %244 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %245 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %244, align 8, !tbaa !569
  %246 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %245, i64 0, i32 5
  store i32 22, i32* %246, align 8, !tbaa !19
  %247 = bitcast %struct.jpeg_error_mgr* %245 to void (%struct.jpeg_common_struct*, ...)**
  %248 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %247, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %248(%struct.jpeg_common_struct* noundef %0) #27
  br label %253

249:                                              ; preds = %235, %223, %198
  %250 = icmp eq i32 %4, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %218, %249
  %252 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 9
  store i32 1, i32* %252, align 8, !tbaa !618
  br label %253

253:                                              ; preds = %243, %251, %249
  %254 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %1, i64 0, i32 0
  %255 = load i8**, i8*** %254, align 8, !tbaa !593
  %256 = load i32, i32* %25, align 4, !tbaa !616
  %257 = sub i32 %2, %256
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds i8*, i8** %255, i64 %258
  ret i8** %259
}

; Function Attrs: nounwind uwtable
define internal [64 x i16]** @access_virt_barray(%struct.jpeg_common_struct* noundef %0, %struct.jvirt_barray_control* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #2 {
  %6 = add i32 %3, %2
  %7 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8, !tbaa !605
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8, !tbaa !607
  %13 = icmp ult i32 %12, %3
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 0
  %16 = load [64 x i16]**, [64 x i16]*** %15, align 8, !tbaa !603
  %17 = icmp eq [64 x i16]** %16, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %14, %10, %5
  %19 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8, !tbaa !569
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 22, i32* %21, align 8, !tbaa !19
  %22 = bitcast %struct.jpeg_error_mgr* %20 to void (%struct.jpeg_common_struct*, ...)**
  %23 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %22, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %23(%struct.jpeg_common_struct* noundef %0) #27
  br label %24

24:                                               ; preds = %18, %14
  %25 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 6
  %26 = load i32, i32* %25, align 4, !tbaa !622
  %27 = icmp ugt i32 %26, %2
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4, !tbaa !620
  %31 = add i32 %30, %26
  %32 = icmp ugt i32 %6, %31
  br i1 %32, label %33, label %202

33:                                               ; preds = %28, %24
  %34 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 10
  %35 = load i32, i32* %34, align 4, !tbaa !609
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %38, align 8, !tbaa !569
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 5
  store i32 69, i32* %40, align 8, !tbaa !19
  %41 = bitcast %struct.jpeg_error_mgr* %39 to void (%struct.jpeg_common_struct*, ...)**
  %42 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %41, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %42(%struct.jpeg_common_struct* noundef %0) #27
  br label %43

43:                                               ; preds = %37, %33
  %44 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 9
  %45 = load i32, i32* %44, align 8, !tbaa !624
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %118, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 2
  %49 = load i32, i32* %48, align 4, !tbaa !606
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 7
  %52 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 5
  %53 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 4
  %54 = load i32, i32* %53, align 4, !tbaa !620
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %117, label %56

56:                                               ; preds = %47
  %57 = zext i32 %54 to i64
  %58 = load i32, i32* %25, align 4, !tbaa !622
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 7
  %61 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 12
  %62 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 12, i32 1
  %63 = bitcast void (...)** %62 to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)**
  %64 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 0
  %65 = load i32, i32* %52, align 8, !tbaa !621
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %57, %66
  %68 = select i1 %67, i64 %66, i64 %57
  %69 = load i32, i32* %60, align 8, !tbaa !623
  %70 = zext i32 %69 to i64
  %71 = sub nsw i64 %70, %59
  %72 = icmp slt i64 %68, %71
  %73 = select i1 %72, i64 %68, i64 %71
  %74 = load i32, i32* %7, align 8, !tbaa !605
  %75 = zext i32 %74 to i64
  %76 = sub nsw i64 %75, %59
  %77 = icmp slt i64 %73, %76
  %78 = select i1 %77, i64 %73, i64 %76
  %79 = icmp slt i64 %78, 1
  br i1 %79, label %117, label %80

80:                                               ; preds = %56
  %81 = mul nsw i64 %51, %59
  br label %82

82:                                               ; preds = %80, %98
  %83 = phi i64 [ %115, %98 ], [ %78, %80 ]
  %84 = phi i64 [ %99, %98 ], [ %81, %80 ]
  %85 = phi i64 [ %94, %98 ], [ 0, %80 ]
  %86 = mul nsw i64 %83, %51
  %87 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)*, void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)** %63, align 8, !tbaa !3
  %88 = load [64 x i16]**, [64 x i16]*** %64, align 8, !tbaa !603
  %89 = getelementptr inbounds [64 x i16]*, [64 x i16]** %88, i64 %85
  %90 = bitcast [64 x i16]** %89 to i8**
  %91 = load i8*, i8** %90, align 8, !tbaa !3
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...) %87(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %61, i8* noundef %91, i64 noundef %84, i64 noundef %86) #27
  %92 = load i32, i32* %52, align 8, !tbaa !621
  %93 = zext i32 %92 to i64
  %94 = add nuw nsw i64 %85, %93
  %95 = load i32, i32* %53, align 4, !tbaa !620
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %98, label %117, !llvm.loop !628

98:                                               ; preds = %82
  %99 = add nsw i64 %86, %84
  %100 = load i32, i32* %25, align 4, !tbaa !622
  %101 = sub nsw i64 %96, %94
  %102 = icmp sgt i64 %101, %93
  %103 = select i1 %102, i64 %93, i64 %101
  %104 = zext i32 %100 to i64
  %105 = add nuw nsw i64 %94, %104
  %106 = load i32, i32* %60, align 8, !tbaa !623
  %107 = zext i32 %106 to i64
  %108 = sub nsw i64 %107, %105
  %109 = icmp slt i64 %103, %108
  %110 = select i1 %109, i64 %103, i64 %108
  %111 = load i32, i32* %7, align 8, !tbaa !605
  %112 = zext i32 %111 to i64
  %113 = sub nsw i64 %112, %105
  %114 = icmp slt i64 %110, %113
  %115 = select i1 %114, i64 %110, i64 %113
  %116 = icmp slt i64 %115, 1
  br i1 %116, label %117, label %82

117:                                              ; preds = %82, %98, %56, %47
  store i32 0, i32* %44, align 8, !tbaa !624
  br label %118

118:                                              ; preds = %117, %43
  %119 = load i32, i32* %25, align 4, !tbaa !622
  %120 = icmp ult i32 %119, %2
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 4
  %123 = load i32, i32* %122, align 4, !tbaa !620
  br label %133

124:                                              ; preds = %118
  %125 = zext i32 %6 to i64
  %126 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 4
  %127 = load i32, i32* %126, align 4, !tbaa !620
  %128 = zext i32 %127 to i64
  %129 = sub nsw i64 %125, %128
  %130 = icmp sgt i64 %129, 0
  %131 = select i1 %130, i64 %129, i64 0
  %132 = trunc i64 %131 to i32
  br label %133

133:                                              ; preds = %121, %124
  %134 = phi i32 [ %127, %124 ], [ %123, %121 ]
  %135 = phi i32 [ %132, %124 ], [ %2, %121 ]
  store i32 %135, i32* %25, align 4, !tbaa !622
  %136 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 2
  %137 = load i32, i32* %136, align 4, !tbaa !606
  %138 = zext i32 %137 to i64
  %139 = shl nuw nsw i64 %138, 7
  %140 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 5
  %141 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 4
  %142 = icmp eq i32 %134, 0
  br i1 %142, label %202, label %143

143:                                              ; preds = %133
  %144 = zext i32 %134 to i64
  %145 = zext i32 %135 to i64
  %146 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 7
  %147 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 12
  %148 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 0
  %149 = bitcast %struct.backing_store_struct* %147 to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)**
  %150 = load i32, i32* %140, align 8, !tbaa !621
  %151 = zext i32 %150 to i64
  %152 = icmp ugt i64 %144, %151
  %153 = select i1 %152, i64 %151, i64 %144
  %154 = load i32, i32* %146, align 8, !tbaa !623
  %155 = zext i32 %154 to i64
  %156 = sub nsw i64 %155, %145
  %157 = icmp slt i64 %153, %156
  %158 = select i1 %157, i64 %153, i64 %156
  %159 = load i32, i32* %7, align 8, !tbaa !605
  %160 = zext i32 %159 to i64
  %161 = sub nsw i64 %160, %145
  %162 = icmp slt i64 %158, %161
  %163 = select i1 %162, i64 %158, i64 %161
  %164 = icmp slt i64 %163, 1
  br i1 %164, label %202, label %165

165:                                              ; preds = %143
  %166 = mul nsw i64 %139, %145
  br label %167

167:                                              ; preds = %165, %183
  %168 = phi i64 [ %200, %183 ], [ %163, %165 ]
  %169 = phi i64 [ %184, %183 ], [ %166, %165 ]
  %170 = phi i64 [ %179, %183 ], [ 0, %165 ]
  %171 = mul nsw i64 %168, %139
  %172 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)*, void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...)** %149, align 8, !tbaa !3
  %173 = load [64 x i16]**, [64 x i16]*** %148, align 8, !tbaa !603
  %174 = getelementptr inbounds [64 x i16]*, [64 x i16]** %173, i64 %170
  %175 = bitcast [64 x i16]** %174 to i8**
  %176 = load i8*, i8** %175, align 8, !tbaa !3
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, i8*, i64, i64, ...) %172(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %147, i8* noundef %176, i64 noundef %169, i64 noundef %171) #27
  %177 = load i32, i32* %140, align 8, !tbaa !621
  %178 = zext i32 %177 to i64
  %179 = add nuw nsw i64 %170, %178
  %180 = load i32, i32* %141, align 4, !tbaa !620
  %181 = zext i32 %180 to i64
  %182 = icmp ult i64 %179, %181
  br i1 %182, label %183, label %202, !llvm.loop !628

183:                                              ; preds = %167
  %184 = add nsw i64 %171, %169
  %185 = load i32, i32* %25, align 4, !tbaa !622
  %186 = sub nsw i64 %181, %179
  %187 = icmp sgt i64 %186, %178
  %188 = select i1 %187, i64 %178, i64 %186
  %189 = zext i32 %185 to i64
  %190 = add nuw nsw i64 %179, %189
  %191 = load i32, i32* %146, align 8, !tbaa !623
  %192 = zext i32 %191 to i64
  %193 = sub nsw i64 %192, %190
  %194 = icmp slt i64 %188, %193
  %195 = select i1 %194, i64 %188, i64 %193
  %196 = load i32, i32* %7, align 8, !tbaa !605
  %197 = zext i32 %196 to i64
  %198 = sub nsw i64 %197, %190
  %199 = icmp slt i64 %195, %198
  %200 = select i1 %199, i64 %195, i64 %198
  %201 = icmp slt i64 %200, 1
  br i1 %201, label %202, label %167

202:                                              ; preds = %183, %167, %143, %133, %28
  %203 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 7
  %204 = load i32, i32* %203, align 8, !tbaa !623
  %205 = icmp ult i32 %204, %6
  br i1 %205, label %206, label %255

206:                                              ; preds = %202
  %207 = icmp ult i32 %204, %2
  %208 = icmp eq i32 %4, 0
  br i1 %207, label %209, label %216

209:                                              ; preds = %206
  br i1 %208, label %217, label %210

210:                                              ; preds = %209
  %211 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %212 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %211, align 8, !tbaa !569
  %213 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %212, i64 0, i32 5
  store i32 22, i32* %213, align 8, !tbaa !19
  %214 = bitcast %struct.jpeg_error_mgr* %212 to void (%struct.jpeg_common_struct*, ...)**
  %215 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %214, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %215(%struct.jpeg_common_struct* noundef %0) #27
  br label %222

216:                                              ; preds = %206
  br i1 %208, label %217, label %222

217:                                              ; preds = %209, %216
  %218 = phi i32 [ %204, %216 ], [ %2, %209 ]
  %219 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 8
  %220 = load i32, i32* %219, align 4, !tbaa !608
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %249, label %227

222:                                              ; preds = %216, %210
  %223 = phi i32 [ %2, %210 ], [ %204, %216 ]
  store i32 %6, i32* %203, align 8, !tbaa !623
  %224 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 8
  %225 = load i32, i32* %224, align 4, !tbaa !608
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %257, label %227

227:                                              ; preds = %222, %217
  %228 = phi i32 [ %223, %222 ], [ %218, %217 ]
  %229 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 2
  %230 = load i32, i32* %229, align 4, !tbaa !606
  %231 = zext i32 %230 to i64
  %232 = shl nuw nsw i64 %231, 7
  %233 = load i32, i32* %25, align 4, !tbaa !622
  %234 = sub i32 %228, %233
  %235 = sub i32 %6, %233
  %236 = icmp ult i32 %234, %235
  br i1 %236, label %237, label %255

237:                                              ; preds = %227
  %238 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 0
  %239 = zext i32 %234 to i64
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %239, %237 ], [ %246, %240 ]
  %242 = load [64 x i16]**, [64 x i16]*** %238, align 8, !tbaa !603
  %243 = getelementptr inbounds [64 x i16]*, [64 x i16]** %242, i64 %241
  %244 = bitcast [64 x i16]** %243 to i8**
  %245 = load i8*, i8** %244, align 8, !tbaa !3
  tail call void (i8*, i64, ...) bitcast (void (i8*, i64)* @jzero_far to void (i8*, i64, ...)*)(i8* noundef %245, i64 noundef %232) #27
  %246 = add nuw nsw i64 %241, 1
  %247 = trunc i64 %246 to i32
  %248 = icmp eq i32 %235, %247
  br i1 %248, label %255, label %240, !llvm.loop !629

249:                                              ; preds = %217
  %250 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %251 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %250, align 8, !tbaa !569
  %252 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %251, i64 0, i32 5
  store i32 22, i32* %252, align 8, !tbaa !19
  %253 = bitcast %struct.jpeg_error_mgr* %251 to void (%struct.jpeg_common_struct*, ...)**
  %254 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %253, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %254(%struct.jpeg_common_struct* noundef %0) #27
  br label %259

255:                                              ; preds = %240, %227, %202
  %256 = icmp eq i32 %4, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %222, %255
  %258 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 9
  store i32 1, i32* %258, align 8, !tbaa !624
  br label %259

259:                                              ; preds = %249, %257, %255
  %260 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %1, i64 0, i32 0
  %261 = load [64 x i16]**, [64 x i16]*** %260, align 8, !tbaa !603
  %262 = load i32, i32* %25, align 4, !tbaa !622
  %263 = sub i32 %2, %262
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds [64 x i16]*, [64 x i16]** %261, i64 %264
  ret [64 x i16]** %265
}

; Function Attrs: nounwind uwtable
define internal void @free_pool(%struct.jpeg_common_struct* noundef %0, i32 noundef %1) #2 {
  %3 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %4 = bitcast %struct.jpeg_memory_mgr** %3 to %struct.my_memory_mgr**
  %5 = load %struct.my_memory_mgr*, %struct.my_memory_mgr** %4, align 8, !tbaa !556
  %6 = icmp ugt i32 %1, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8, !tbaa !569
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 14, i32* %10, align 8, !tbaa !19
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %11, align 4, !tbaa !7
  %12 = bitcast %struct.jpeg_common_struct* %0 to void (%struct.jpeg_common_struct*, ...)***
  %13 = load void (%struct.jpeg_common_struct*, ...)**, void (%struct.jpeg_common_struct*, ...)*** %12, align 8, !tbaa !569
  %14 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %13, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %14(%struct.jpeg_common_struct* noundef nonnull %0) #27
  br label %54

15:                                               ; preds = %2
  %16 = icmp eq i32 %1, 1
  br i1 %16, label %17, label %54

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %5, i64 0, i32 3
  %19 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %18, align 8, !tbaa !3
  %20 = icmp eq %struct.jvirt_sarray_control* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %17, %31
  %22 = phi %struct.jvirt_sarray_control* [ %33, %31 ], [ %19, %17 ]
  %23 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %22, i64 0, i32 10
  %24 = load i32, i32* %23, align 4, !tbaa !600
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  store i32 0, i32* %23, align 4, !tbaa !600
  %27 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %22, i64 0, i32 12
  %28 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %22, i64 0, i32 12, i32 2
  %29 = bitcast void (...)** %28 to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...)**
  %30 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...)*, void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...)** %29, align 8, !tbaa !630
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...) %30(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %27) #27
  br label %31

31:                                               ; preds = %21, %26
  %32 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %22, i64 0, i32 11
  %33 = load %struct.jvirt_sarray_control*, %struct.jvirt_sarray_control** %32, align 8, !tbaa !3
  %34 = icmp eq %struct.jvirt_sarray_control* %33, null
  br i1 %34, label %35, label %21, !llvm.loop !631

35:                                               ; preds = %31, %17
  store %struct.jvirt_sarray_control* null, %struct.jvirt_sarray_control** %18, align 8, !tbaa !601
  %36 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %5, i64 0, i32 4
  %37 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %36, align 8, !tbaa !3
  %38 = icmp eq %struct.jvirt_barray_control* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %35, %49
  %40 = phi %struct.jvirt_barray_control* [ %51, %49 ], [ %37, %35 ]
  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %40, i64 0, i32 10
  %42 = load i32, i32* %41, align 4, !tbaa !609
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  store i32 0, i32* %41, align 4, !tbaa !609
  %45 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %40, i64 0, i32 12
  %46 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %40, i64 0, i32 12, i32 2
  %47 = bitcast void (...)** %46 to void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...)**
  %48 = load void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...)*, void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...)** %47, align 8, !tbaa !632
  tail call void (%struct.jpeg_common_struct*, %struct.backing_store_struct*, ...) %48(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* noundef nonnull %45) #27
  br label %49

49:                                               ; preds = %39, %44
  %50 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %40, i64 0, i32 11
  %51 = load %struct.jvirt_barray_control*, %struct.jvirt_barray_control** %50, align 8, !tbaa !3
  %52 = icmp eq %struct.jvirt_barray_control* %51, null
  br i1 %52, label %53, label %39, !llvm.loop !633

53:                                               ; preds = %49, %35
  store %struct.jvirt_barray_control* null, %struct.jvirt_barray_control** %36, align 8, !tbaa !610
  br label %54

54:                                               ; preds = %7, %53, %15
  %55 = sext i32 %1 to i64
  %56 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %5, i64 0, i32 2, i64 %55
  %57 = load %union.large_pool_struct*, %union.large_pool_struct** %56, align 8, !tbaa !3
  store %union.large_pool_struct* null, %union.large_pool_struct** %56, align 8, !tbaa !3
  %58 = icmp eq %union.large_pool_struct* %57, null
  br i1 %58, label %75, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %5, i64 0, i32 5
  br label %61

61:                                               ; preds = %59, %61
  %62 = phi %union.large_pool_struct* [ %57, %59 ], [ %64, %61 ]
  %63 = getelementptr inbounds %union.large_pool_struct, %union.large_pool_struct* %62, i64 0, i32 0, i32 0
  %64 = load %union.large_pool_struct*, %union.large_pool_struct** %63, align 8, !tbaa !7
  %65 = getelementptr inbounds %union.large_pool_struct, %union.large_pool_struct* %62, i64 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8, !tbaa !7
  %67 = getelementptr inbounds %union.large_pool_struct, %union.large_pool_struct* %62, i64 0, i32 0, i32 2
  %68 = load i64, i64* %67, align 8, !tbaa !7
  %69 = add i64 %66, 24
  %70 = add i64 %69, %68
  %71 = bitcast %union.large_pool_struct* %62 to i8*
  tail call void (%struct.jpeg_common_struct*, i8*, i64, ...) bitcast (void (%struct.jpeg_common_struct*, i8*, i64)* @jpeg_free_large to void (%struct.jpeg_common_struct*, i8*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i8* noundef nonnull %71, i64 noundef %70) #27
  %72 = load i64, i64* %60, align 8, !tbaa !584
  %73 = sub i64 %72, %70
  store i64 %73, i64* %60, align 8, !tbaa !584
  %74 = icmp eq %union.large_pool_struct* %64, null
  br i1 %74, label %75, label %61, !llvm.loop !634

75:                                               ; preds = %61, %54
  %76 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %5, i64 0, i32 1, i64 %55
  %77 = load %union.small_pool_struct*, %union.small_pool_struct** %76, align 8, !tbaa !3
  store %union.small_pool_struct* null, %union.small_pool_struct** %76, align 8, !tbaa !3
  %78 = icmp eq %union.small_pool_struct* %77, null
  br i1 %78, label %95, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.my_memory_mgr, %struct.my_memory_mgr* %5, i64 0, i32 5
  br label %81

81:                                               ; preds = %79, %81
  %82 = phi %union.small_pool_struct* [ %77, %79 ], [ %84, %81 ]
  %83 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %82, i64 0, i32 0, i32 0
  %84 = load %union.small_pool_struct*, %union.small_pool_struct** %83, align 8, !tbaa !7
  %85 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %82, i64 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8, !tbaa !7
  %87 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %82, i64 0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8, !tbaa !7
  %89 = add i64 %86, 24
  %90 = add i64 %89, %88
  %91 = bitcast %union.small_pool_struct* %82 to i8*
  tail call void (%struct.jpeg_common_struct*, i8*, i64, ...) bitcast (void (%struct.jpeg_common_struct*, i8*, i64)* @jpeg_free_small to void (%struct.jpeg_common_struct*, i8*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i8* noundef nonnull %91, i64 noundef %90) #27
  %92 = load i64, i64* %80, align 8, !tbaa !584
  %93 = sub i64 %92, %90
  store i64 %93, i64* %80, align 8, !tbaa !584
  %94 = icmp eq %union.small_pool_struct* %84, null
  br i1 %94, label %95, label %81, !llvm.loop !635

95:                                               ; preds = %81, %75
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @self_destruct(%struct.jpeg_common_struct* noundef %0) #2 {
  tail call void @free_pool(%struct.jpeg_common_struct* noundef %0, i32 noundef 1)
  tail call void @free_pool(%struct.jpeg_common_struct* noundef %0, i32 noundef 0)
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 1
  %3 = bitcast %struct.jpeg_memory_mgr** %2 to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !556
  tail call void (%struct.jpeg_common_struct*, i8*, i64, ...) bitcast (void (%struct.jpeg_common_struct*, i8*, i64)* @jpeg_free_small to void (%struct.jpeg_common_struct*, i8*, i64, ...)*)(%struct.jpeg_common_struct* noundef %0, i8* noundef %4, i64 noundef 168) #27
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !556
  tail call void (%struct.jpeg_common_struct*, ...) bitcast (void (%struct.jpeg_common_struct*)* @jpeg_mem_term to void (%struct.jpeg_common_struct*, ...)*)(%struct.jpeg_common_struct* noundef %0) #27
  ret void
}

declare dso_local i8* @getenv(...) local_unnamed_addr #22

; Function Attrs: mustprogress nofree nounwind uwtable willreturn
define dso_local noalias i8* @jpeg_get_small(%struct.jpeg_common_struct* nocapture noundef readnone %0, i64 noundef %1) local_unnamed_addr #23 {
  %3 = tail call i8* @malloc(i64 noundef %1)
  ret i8* %3
}

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn
declare dso_local noalias noundef i8* @malloc(i64 noundef) local_unnamed_addr #24

; Function Attrs: mustprogress nounwind uwtable willreturn
define dso_local void @jpeg_free_small(%struct.jpeg_common_struct* nocapture noundef readnone %0, i8* nocapture noundef %1, i64 noundef %2) local_unnamed_addr #25 {
  tail call void @free(i8* noundef %1)
  ret void
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn
declare dso_local void @free(i8* nocapture noundef) local_unnamed_addr #26

; Function Attrs: mustprogress nofree nounwind uwtable willreturn
define dso_local noalias i8* @jpeg_get_large(%struct.jpeg_common_struct* nocapture noundef readnone %0, i64 noundef %1) local_unnamed_addr #23 {
  %3 = tail call i8* @malloc(i64 noundef %1)
  ret i8* %3
}

; Function Attrs: mustprogress nounwind uwtable willreturn
define dso_local void @jpeg_free_large(%struct.jpeg_common_struct* nocapture noundef readnone %0, i8* nocapture noundef %1, i64 noundef %2) local_unnamed_addr #25 {
  tail call void @free(i8* noundef %1)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @jpeg_mem_available(%struct.jpeg_common_struct* nocapture noundef readnone %0, i64 noundef %1, i64 noundef returned %2, i64 noundef %3) local_unnamed_addr #6 {
  ret i64 %2
}

; Function Attrs: nounwind uwtable
define dso_local void @jpeg_open_backing_store(%struct.jpeg_common_struct* noundef %0, %struct.backing_store_struct* nocapture noundef readnone %1, i64 noundef %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %4, align 8, !tbaa !569
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i64 0, i32 5
  store i32 49, i32* %6, align 8, !tbaa !19
  %7 = bitcast %struct.jpeg_error_mgr* %5 to void (%struct.jpeg_common_struct*, ...)**
  %8 = load void (%struct.jpeg_common_struct*, ...)*, void (%struct.jpeg_common_struct*, ...)** %7, align 8, !tbaa !20
  tail call void (%struct.jpeg_common_struct*, ...) %8(%struct.jpeg_common_struct* noundef %0) #27
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @jpeg_mem_init(%struct.jpeg_common_struct* nocapture noundef readnone %0) local_unnamed_addr #6 {
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local void @jpeg_mem_term(%struct.jpeg_common_struct* nocapture noundef %0) local_unnamed_addr #6 {
  ret void
}

attributes #0 = { noreturn nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind }
attributes #6 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree nosync nounwind readnone willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { argmemonly nofree nounwind willreturn }
attributes #10 = { nofree nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nofree nounwind readonly "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nofree nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nosync nounwind uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { inaccessiblememonly mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nounwind }
attributes #28 = { cold }
attributes #29 = { noreturn nounwind }
attributes #30 = { nounwind readnone willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2}

!0 = !{!"clang version 14.0.0"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!5, !5, i64 0}
!8 = !{!9, !4, i64 0}
!9 = !{!"jpeg_compress_struct", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !10, i64 32, !10, i64 36, !4, i64 40, !10, i64 48, !10, i64 52, !10, i64 56, !5, i64 60, !11, i64 64, !10, i64 72, !10, i64 76, !5, i64 80, !4, i64 88, !5, i64 96, !5, i64 128, !5, i64 160, !5, i64 192, !5, i64 224, !5, i64 256, !10, i64 288, !4, i64 296, !10, i64 304, !10, i64 308, !10, i64 312, !10, i64 316, !10, i64 320, !5, i64 324, !10, i64 328, !10, i64 332, !10, i64 336, !12, i64 340, !12, i64 342, !12, i64 344, !10, i64 348, !10, i64 352, !10, i64 356, !10, i64 360, !10, i64 364, !10, i64 368, !10, i64 372, !10, i64 376, !10, i64 380, !5, i64 384, !10, i64 416, !10, i64 420, !10, i64 424, !5, i64 428, !10, i64 468, !10, i64 472, !10, i64 476, !10, i64 480, !4, i64 488, !4, i64 496, !4, i64 504, !4, i64 512, !4, i64 520, !4, i64 528, !4, i64 536, !4, i64 544, !4, i64 552, !4, i64 560, !10, i64 568}
!10 = !{!"int", !5, i64 0}
!11 = !{!"double", !5, i64 0}
!12 = !{!"short", !5, i64 0}
!13 = !{!14, !4, i64 152}
!14 = !{!"jpeg_error_mgr", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !10, i64 40, !5, i64 44, !10, i64 124, !15, i64 128, !4, i64 136, !10, i64 144, !4, i64 152, !10, i64 160, !10, i64 164}
!15 = !{!"long", !5, i64 0}
!16 = !{!14, !10, i64 160}
!17 = !{!14, !10, i64 164}
!18 = !{!9, !5, i64 60}
!19 = !{!14, !10, i64 40}
!20 = !{!14, !4, i64 0}
!21 = !{!22, !4, i64 24}
!22 = !{!"cjpeg_source_struct", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !10, i64 40}
!23 = !{!22, !4, i64 0}
!24 = !{!9, !10, i64 360}
!25 = !{!9, !10, i64 52}
!26 = !{!22, !4, i64 8}
!27 = !{!22, !4, i64 32}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.mustprogress"}
!30 = !{!22, !4, i64 16}
!31 = !{!14, !15, i64 128}
!32 = !{!10, !10, i64 0}
!33 = !{!14, !10, i64 124}
!34 = !{!9, !5, i64 324}
!35 = !{!15, !15, i64 0}
!36 = !{!9, !4, i64 8}
!37 = !{!38, !15, i64 88}
!38 = !{!"jpeg_memory_mgr", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !15, i64 88, !15, i64 96}
!39 = !{!9, !10, i64 312}
!40 = !{!9, !10, i64 328}
!41 = !{!9, !10, i64 332}
!42 = !{!9, !10, i64 320}
!43 = distinct !{!43, !29}
!44 = !{!38, !4, i64 0}
!45 = !{!46, !4, i64 0}
!46 = !{!"", !22, i64 0, !4, i64 48, !4, i64 56, !15, i64 64, !4, i64 72}
!47 = !{!46, !4, i64 16}
!48 = !{!46, !4, i64 24}
!49 = !{!9, !10, i64 72}
!50 = !{!9, !10, i64 48}
!51 = !{!9, !10, i64 56}
!52 = !{!14, !4, i64 8}
!53 = !{!46, !4, i64 8}
!54 = !{!46, !15, i64 64}
!55 = !{!46, !4, i64 48}
!56 = !{!38, !4, i64 16}
!57 = !{!46, !4, i64 32}
!58 = !{!46, !10, i64 40}
!59 = !{!46, !4, i64 56}
!60 = !{!46, !4, i64 72}
!61 = distinct !{!61, !29}
!62 = distinct !{!62, !29}
!63 = distinct !{!63, !29}
!64 = distinct !{!64, !65}
!65 = !{!"llvm.loop.unroll.disable"}
!66 = distinct !{!66, !29}
!67 = distinct !{!67, !29}
!68 = distinct !{!68, !29}
!69 = distinct !{!69, !29}
!70 = distinct !{!70, !29}
!71 = !{!72, !4, i64 48}
!72 = !{!"_tga_source_struct", !22, i64 0, !4, i64 48, !4, i64 56, !4, i64 64, !10, i64 72, !4, i64 80, !5, i64 88, !10, i64 92, !10, i64 96, !10, i64 100, !4, i64 104}
!73 = !{!72, !4, i64 0}
!74 = !{!72, !4, i64 16}
!75 = !{!72, !4, i64 24}
!76 = !{!72, !10, i64 92}
!77 = !{!72, !4, i64 80}
!78 = !{!72, !10, i64 100}
!79 = !{!72, !10, i64 96}
!80 = !{!72, !4, i64 104}
!81 = !{!38, !4, i64 32}
!82 = !{!72, !4, i64 64}
!83 = !{!9, !4, i64 16}
!84 = !{!85, !10, i64 36}
!85 = !{!"cdjpeg_progress_mgr", !86, i64 0, !10, i64 32, !10, i64 36, !10, i64 40}
!86 = !{!"jpeg_progress_mgr", !4, i64 0, !15, i64 8, !15, i64 16, !10, i64 24, !10, i64 28}
!87 = !{!72, !10, i64 40}
!88 = !{!72, !4, i64 32}
!89 = !{!72, !4, i64 8}
!90 = distinct !{!90, !29}
!91 = !{!72, !4, i64 56}
!92 = distinct !{!92, !29}
!93 = distinct !{!93, !29}
!94 = distinct !{!94, !29}
!95 = distinct !{!95, !29}
!96 = !{!12, !12, i64 0}
!97 = distinct !{!97, !29}
!98 = distinct !{!98, !29}
!99 = distinct !{!99, !29}
!100 = !{!85, !15, i64 8}
!101 = !{!85, !15, i64 16}
!102 = !{!85, !4, i64 0}
!103 = !{!38, !4, i64 56}
!104 = distinct !{!104, !29}
!105 = !{!85, !10, i64 32}
!106 = !{!72, !10, i64 72}
!107 = !{!108, !4, i64 48}
!108 = !{!"_bmp_source_struct", !22, i64 0, !4, i64 48, !4, i64 56, !4, i64 64, !10, i64 72, !10, i64 76, !10, i64 80}
!109 = !{!108, !4, i64 0}
!110 = !{!108, !4, i64 16}
!111 = !{!108, !4, i64 24}
!112 = !{!108, !10, i64 80}
!113 = !{!9, !10, i64 348}
!114 = !{!9, !10, i64 352}
!115 = !{!9, !12, i64 344}
!116 = !{!108, !4, i64 56}
!117 = distinct !{!117, !29}
!118 = distinct !{!118, !29}
!119 = distinct !{!119, !29}
!120 = !{!108, !10, i64 76}
!121 = !{!108, !4, i64 64}
!122 = !{!108, !4, i64 8}
!123 = !{!108, !4, i64 32}
!124 = !{!108, !10, i64 40}
!125 = distinct !{!125, !29}
!126 = distinct !{!126, !29}
!127 = !{!108, !10, i64 72}
!128 = distinct !{!128, !29}
!129 = distinct !{!129, !29}
!130 = distinct !{!130, !29}
!131 = distinct !{!131, !29}
!132 = distinct !{!132, !29}
!133 = distinct !{!133, !29}
!134 = distinct !{!134, !29}
!135 = !{!136, !10, i64 0}
!136 = !{!"", !10, i64 0, !5, i64 4, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32}
!137 = !{!136, !10, i64 20}
!138 = !{!136, !10, i64 24}
!139 = !{!136, !10, i64 28}
!140 = !{!136, !10, i64 32}
!141 = distinct !{!141, !29}
!142 = !{!9, !4, i64 296}
!143 = !{!9, !10, i64 288}
!144 = distinct !{!144, !29}
!145 = !{!9, !4, i64 88}
!146 = !{!147, !10, i64 16}
!147 = !{!"", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !10, i64 48, !10, i64 52, !10, i64 56, !10, i64 60, !10, i64 64, !10, i64 68, !10, i64 72, !4, i64 80, !4, i64 88}
!148 = distinct !{!148, !29}
!149 = distinct !{!149, !29}
!150 = !{!147, !10, i64 8}
!151 = !{!147, !10, i64 12}
!152 = distinct !{!152, !29}
!153 = distinct !{!153, !29}
!154 = distinct !{!154, !29}
!155 = !{!9, !4, i64 24}
!156 = !{!9, !4, i64 40}
!157 = !{!9, !4, i64 560}
!158 = !{!9, !11, i64 64}
!159 = !{!9, !10, i64 36}
!160 = !{!161, !10, i64 256}
!161 = !{!"", !5, i64 0, !10, i64 256}
!162 = !{!163, !10, i64 548}
!163 = !{!"", !5, i64 0, !5, i64 34, !10, i64 548}
!164 = !{!9, !4, i64 488}
!165 = !{!166, !4, i64 16}
!166 = !{!"jpeg_comp_master", !4, i64 0, !4, i64 8, !4, i64 16, !10, i64 24, !10, i64 28}
!167 = !{!166, !10, i64 28}
!168 = !{!166, !4, i64 0}
!169 = !{!9, !10, i64 376}
!170 = !{!86, !15, i64 8}
!171 = !{!86, !15, i64 16}
!172 = !{!86, !4, i64 0}
!173 = !{!9, !4, i64 512}
!174 = !{!175, !4, i64 8}
!175 = !{!"jpeg_c_coef_controller", !4, i64 0, !4, i64 8}
!176 = distinct !{!176, !29}
!177 = distinct !{!177, !29}
!178 = !{!9, !4, i64 520}
!179 = !{!180, !4, i64 24}
!180 = !{!"jpeg_marker_writer", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48}
!181 = !{!182, !4, i64 32}
!182 = !{!"jpeg_destination_mgr", !4, i64 0, !15, i64 8, !4, i64 16, !4, i64 24, !4, i64 32}
!183 = !{!180, !4, i64 40}
!184 = !{!180, !4, i64 48}
!185 = distinct !{!185, !29}
!186 = !{!14, !4, i64 32}
!187 = !{!182, !4, i64 16}
!188 = !{!180, !4, i64 32}
!189 = !{!9, !10, i64 304}
!190 = !{!166, !10, i64 24}
!191 = !{!166, !4, i64 8}
!192 = !{!9, !4, i64 496}
!193 = !{!194, !4, i64 8}
!194 = !{!"jpeg_c_main_controller", !4, i64 0, !4, i64 8}
!195 = !{!9, !10, i64 372}
!196 = distinct !{!196, !29}
!197 = !{!9, !12, i64 340}
!198 = !{!9, !12, i64 342}
!199 = !{!9, !5, i64 80}
!200 = !{!9, !10, i64 356}
!201 = !{!9, !10, i64 336}
!202 = !{!9, !10, i64 76}
!203 = !{!147, !10, i64 0}
!204 = !{!147, !10, i64 24}
!205 = distinct !{!205, !29}
!206 = !{!9, !10, i64 568}
!207 = distinct !{!207, !29, !208}
!208 = !{!"llvm.loop.isvectorized", i32 1}
!209 = distinct !{!209, !65}
!210 = distinct !{!210, !29, !211, !208}
!211 = !{!"llvm.loop.unroll.runtime.disable"}
!212 = distinct !{!212, !29}
!213 = distinct !{!213, !65}
!214 = distinct !{!214, !65}
!215 = distinct !{!215, !65}
!216 = distinct !{!216, !65}
!217 = distinct !{!217, !29, !208}
!218 = distinct !{!218, !65}
!219 = distinct !{!219, !29, !211, !208}
!220 = distinct !{!220, !65}
!221 = distinct !{!221, !65}
!222 = !{!223, !4, i64 16}
!223 = !{!"", !182, i64 0, !4, i64 40, !4, i64 48}
!224 = !{!223, !4, i64 24}
!225 = !{!223, !4, i64 32}
!226 = !{!223, !4, i64 40}
!227 = !{!223, !4, i64 48}
!228 = !{!223, !4, i64 0}
!229 = !{!223, !15, i64 8}
!230 = !{!9, !10, i64 308}
!231 = !{!9, !10, i64 364}
!232 = !{!38, !4, i64 48}
!233 = !{!180, !4, i64 0}
!234 = !{!235, !4, i64 0}
!235 = !{!"", !166, i64 0, !5, i64 32, !10, i64 36, !10, i64 40, !10, i64 44}
!236 = !{!235, !4, i64 8}
!237 = !{!235, !4, i64 16}
!238 = !{!235, !10, i64 28}
!239 = !{!9, !10, i64 368}
!240 = distinct !{!240, !29}
!241 = !{!147, !10, i64 4}
!242 = !{!147, !10, i64 36}
!243 = !{!147, !10, i64 28}
!244 = !{!147, !10, i64 32}
!245 = !{!147, !10, i64 40}
!246 = !{!147, !10, i64 44}
!247 = !{!147, !10, i64 48}
!248 = distinct !{!248, !29}
!249 = distinct !{!249, !29, !250}
!250 = !{!"llvm.loop.peeled.count", i32 1}
!251 = distinct !{!251, !29}
!252 = distinct !{!252, !29}
!253 = distinct !{!253, !29}
!254 = distinct !{!254, !29}
!255 = distinct !{!255, !29}
!256 = distinct !{!256, !29}
!257 = !{!235, !5, i64 32}
!258 = !{!235, !10, i64 44}
!259 = !{!235, !10, i64 36}
!260 = !{!235, !10, i64 40}
!261 = !{!9, !4, i64 528}
!262 = !{!263, !4, i64 0}
!263 = !{!"jpeg_color_converter", !4, i64 0, !4, i64 8}
!264 = !{!9, !4, i64 536}
!265 = !{!266, !4, i64 0}
!266 = !{!"jpeg_downsampler", !4, i64 0, !4, i64 8, !10, i64 16}
!267 = !{!9, !4, i64 504}
!268 = !{!269, !4, i64 0}
!269 = !{!"jpeg_c_prep_controller", !4, i64 0, !4, i64 8}
!270 = !{!9, !4, i64 544}
!271 = !{!272, !4, i64 0}
!272 = !{!"jpeg_forward_dct", !4, i64 0, !4, i64 8}
!273 = !{!9, !4, i64 552}
!274 = !{!275, !4, i64 0}
!275 = !{!"jpeg_entropy_encoder", !4, i64 0, !4, i64 8, !4, i64 16}
!276 = !{!175, !4, i64 0}
!277 = !{!194, !4, i64 0}
!278 = !{!235, !10, i64 24}
!279 = !{!9, !10, i64 468}
!280 = !{!9, !10, i64 476}
!281 = !{!180, !4, i64 8}
!282 = !{!180, !4, i64 16}
!283 = !{!86, !10, i64 24}
!284 = !{!86, !10, i64 28}
!285 = !{!275, !4, i64 16}
!286 = !{!9, !10, i64 380}
!287 = distinct !{!287, !29, !208}
!288 = distinct !{!288, !29, !211, !208}
!289 = !{!9, !10, i64 472}
!290 = distinct !{!290, !29, !208}
!291 = distinct !{!291, !29, !211, !208}
!292 = !{!9, !10, i64 480}
!293 = !{!9, !10, i64 416}
!294 = !{!9, !10, i64 420}
!295 = !{!147, !10, i64 68}
!296 = !{!147, !10, i64 72}
!297 = !{!9, !10, i64 424}
!298 = !{!147, !10, i64 52}
!299 = !{!147, !10, i64 56}
!300 = !{!147, !10, i64 60}
!301 = !{!147, !10, i64 64}
!302 = distinct !{!302, !65}
!303 = distinct !{!303, !29}
!304 = distinct !{!304, !29}
!305 = !{!306, !4, i64 0}
!306 = !{!"", !180, i64 0, !10, i64 56}
!307 = !{!306, !4, i64 8}
!308 = !{!306, !4, i64 16}
!309 = !{!306, !4, i64 24}
!310 = !{!306, !4, i64 32}
!311 = !{!306, !4, i64 40}
!312 = !{!306, !4, i64 48}
!313 = !{!306, !10, i64 56}
!314 = !{!182, !4, i64 0}
!315 = !{!182, !15, i64 8}
!316 = !{!182, !4, i64 24}
!317 = distinct !{!317, !29}
!318 = !{!147, !10, i64 20}
!319 = distinct !{!319, !29}
!320 = distinct !{!320, !29}
!321 = distinct !{!321, !29}
!322 = distinct !{!322, !29}
!323 = distinct !{!323, !29}
!324 = distinct !{!324, !29}
!325 = distinct !{!325, !29}
!326 = !{!327, !4, i64 0}
!327 = !{!"", !194, i64 0, !10, i64 16, !10, i64 20, !10, i64 24, !5, i64 28, !5, i64 32}
!328 = distinct !{!328, !29}
!329 = !{!327, !10, i64 16}
!330 = !{!327, !10, i64 20}
!331 = !{!327, !10, i64 24}
!332 = !{!327, !5, i64 28}
!333 = !{!327, !4, i64 8}
!334 = !{!269, !4, i64 8}
!335 = distinct !{!335, !29}
!336 = !{!337, !4, i64 0}
!337 = !{!"", !269, i64 0, !5, i64 16, !10, i64 96, !10, i64 100, !10, i64 104, !10, i64 108}
!338 = !{!266, !10, i64 16}
!339 = !{!337, !4, i64 8}
!340 = !{!341}
!341 = distinct !{!341, !342}
!342 = distinct !{!342, !"LVerDomain"}
!343 = !{!344}
!344 = distinct !{!344, !342}
!345 = !{!346, !341, !347}
!346 = distinct !{!346, !342}
!347 = distinct !{!347, !342}
!348 = !{!347}
!349 = !{!346}
!350 = !{!341, !347}
!351 = distinct !{!351, !29, !208}
!352 = distinct !{!352, !29, !208}
!353 = distinct !{!353, !29}
!354 = distinct !{!354, !29}
!355 = !{!337, !10, i64 96}
!356 = !{!337, !10, i64 100}
!357 = !{!337, !10, i64 104}
!358 = !{!337, !10, i64 108}
!359 = !{!263, !4, i64 8}
!360 = distinct !{!360, !29}
!361 = distinct !{!361, !29}
!362 = distinct !{!362, !29}
!363 = distinct !{!363, !29}
!364 = !{!266, !4, i64 8}
!365 = distinct !{!365, !29}
!366 = distinct !{!366, !29}
!367 = distinct !{!367, !29}
!368 = distinct !{!368, !29}
!369 = !{!370, !4, i64 0}
!370 = !{!"", !175, i64 0, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !5, i64 32, !5, i64 112}
!371 = !{!38, !4, i64 40}
!372 = distinct !{!372, !29}
!373 = !{!38, !4, i64 8}
!374 = !{!370, !10, i64 16}
!375 = !{!370, !10, i64 28}
!376 = !{!370, !10, i64 20}
!377 = !{!370, !10, i64 24}
!378 = !{!370, !4, i64 8}
!379 = !{!272, !4, i64 8}
!380 = distinct !{!380, !29}
!381 = distinct !{!381, !29}
!382 = distinct !{!382, !65}
!383 = distinct !{!383, !29}
!384 = distinct !{!384, !29}
!385 = !{!275, !4, i64 8}
!386 = distinct !{!386, !29}
!387 = distinct !{!387, !29}
!388 = !{!38, !4, i64 64}
!389 = distinct !{!389, !29}
!390 = distinct !{!390, !65}
!391 = distinct !{!391, !29}
!392 = distinct !{!392, !29}
!393 = distinct !{!393, !65}
!394 = distinct !{!394, !29}
!395 = distinct !{!395, !29}
!396 = distinct !{!396, !29}
!397 = distinct !{!397, !29}
!398 = distinct !{!398, !29, !208}
!399 = distinct !{!399, !65}
!400 = distinct !{!400, !29, !211, !208}
!401 = distinct !{!401, !29}
!402 = distinct !{!402, !29}
!403 = distinct !{!403, !29}
!404 = distinct !{!404, !29}
!405 = !{!406, !4, i64 0}
!406 = !{!"", !263, i64 0, !4, i64 16}
!407 = !{!406, !4, i64 8}
!408 = distinct !{!408, !65}
!409 = distinct !{!409, !29}
!410 = distinct !{!410, !29}
!411 = !{!406, !4, i64 16}
!412 = distinct !{!412, !29}
!413 = distinct !{!413, !29}
!414 = distinct !{!414, !29}
!415 = distinct !{!415, !29}
!416 = distinct !{!416, !65}
!417 = distinct !{!417, !29}
!418 = distinct !{!418, !29}
!419 = distinct !{!419, !29}
!420 = distinct !{!420, !29}
!421 = distinct !{!421, !29}
!422 = distinct !{!422, !29}
!423 = !{!424, !4, i64 0}
!424 = !{!"", !266, i64 0, !5, i64 24}
!425 = !{!424, !4, i64 8}
!426 = !{!424, !10, i64 16}
!427 = !{!9, !10, i64 316}
!428 = distinct !{!428, !29}
!429 = distinct !{!429, !29}
!430 = distinct !{!430, !29}
!431 = distinct !{!431, !65}
!432 = distinct !{!432, !29}
!433 = distinct !{!433, !29}
!434 = distinct !{!434, !65}
!435 = distinct !{!435, !65}
!436 = distinct !{!436, !29}
!437 = distinct !{!437, !29}
!438 = distinct !{!438, !65}
!439 = distinct !{!439, !29}
!440 = distinct !{!440, !29}
!441 = distinct !{!441, !65}
!442 = distinct !{!442, !29}
!443 = distinct !{!443, !29}
!444 = distinct !{!444, !65}
!445 = distinct !{!445, !29}
!446 = distinct !{!446, !65}
!447 = distinct !{!447, !29}
!448 = distinct !{!448, !29}
!449 = distinct !{!449, !29}
!450 = distinct !{!450, !29}
!451 = distinct !{!451, !29}
!452 = distinct !{!452, !29}
!453 = distinct !{!453, !29}
!454 = distinct !{!454, !29}
!455 = distinct !{!455, !29}
!456 = distinct !{!456, !29}
!457 = distinct !{!457, !29}
!458 = distinct !{!458, !29}
!459 = distinct !{!459, !29}
!460 = distinct !{!460, !29}
!461 = distinct !{!461, !29}
!462 = distinct !{!462, !29}
!463 = distinct !{!463, !29}
!464 = distinct !{!464, !29}
!465 = !{!466, !4, i64 0}
!466 = !{!"", !275, i64 0, !467, i64 24, !10, i64 56, !10, i64 60, !5, i64 64, !5, i64 96, !5, i64 128, !5, i64 160}
!467 = !{!"", !15, i64 0, !10, i64 8, !5, i64 12}
!468 = distinct !{!468, !29}
!469 = !{!466, !15, i64 24}
!470 = !{!466, !10, i64 32}
!471 = !{!466, !10, i64 56}
!472 = !{!466, !10, i64 60}
!473 = !{!474, !4, i64 0}
!474 = !{!"", !4, i64 0, !15, i64 8, !467, i64 16, !4, i64 48}
!475 = !{!474, !15, i64 8}
!476 = !{i64 0, i64 8, !35, i64 8, i64 4, !32, i64 12, i64 16, !7}
!477 = !{!474, !4, i64 48}
!478 = !{!474, !10, i64 24}
!479 = !{!474, !15, i64 16}
!480 = distinct !{!480, !29}
!481 = distinct !{!481, !29}
!482 = distinct !{!482, !29}
!483 = distinct !{!483, !29}
!484 = distinct !{!484, !29}
!485 = distinct !{!485, !29}
!486 = distinct !{!486, !29}
!487 = distinct !{!487, !29}
!488 = distinct !{!488, !29}
!489 = distinct !{!489, !29}
!490 = distinct !{!490, !29}
!491 = distinct !{!491, !29}
!492 = !{i64 0, i64 4, !32, i64 4, i64 16, !7}
!493 = !{i64 0, i64 16, !7}
!494 = distinct !{!494, !29}
!495 = !{!496, !4, i64 0}
!496 = !{!"", !275, i64 0, !10, i64 24, !4, i64 32, !15, i64 40, !15, i64 48, !10, i64 56, !4, i64 64, !5, i64 72, !10, i64 88, !10, i64 92, !10, i64 96, !4, i64 104, !10, i64 112, !10, i64 116, !5, i64 120, !5, i64 152}
!497 = !{!496, !4, i64 104}
!498 = !{!496, !4, i64 64}
!499 = !{!496, !10, i64 24}
!500 = !{!496, !4, i64 8}
!501 = !{!496, !10, i64 88}
!502 = distinct !{!502, !29}
!503 = !{!496, !10, i64 92}
!504 = !{!496, !10, i64 96}
!505 = !{!496, !15, i64 48}
!506 = !{!496, !10, i64 56}
!507 = !{!496, !10, i64 112}
!508 = !{!496, !10, i64 116}
!509 = !{!496, !4, i64 32}
!510 = !{!496, !15, i64 40}
!511 = distinct !{!511, !29}
!512 = distinct !{!512, !29}
!513 = distinct !{!513, !29}
!514 = distinct !{!514, !29}
!515 = distinct !{!515, !29}
!516 = distinct !{!516, !29}
!517 = distinct !{!517, !29}
!518 = distinct !{!518, !29}
!519 = distinct !{!519, !29, !250}
!520 = distinct !{!520, !29}
!521 = distinct !{!521, !29}
!522 = distinct !{!522, !29}
!523 = distinct !{!523, !29}
!524 = !{!525, !4, i64 0}
!525 = !{!"", !272, i64 0, !4, i64 16, !5, i64 24, !4, i64 56, !5, i64 64}
!526 = !{!525, !4, i64 8}
!527 = !{!525, !4, i64 16}
!528 = !{!525, !4, i64 56}
!529 = !{!530}
!530 = distinct !{!530, !531}
!531 = distinct !{!531, !"LVerDomain"}
!532 = !{!533}
!533 = distinct !{!533, !531}
!534 = distinct !{!534, !29, !208}
!535 = !{!536}
!536 = distinct !{!536, !537}
!537 = distinct !{!537, !"LVerDomain"}
!538 = !{!539}
!539 = distinct !{!539, !537}
!540 = distinct !{!540, !29, !208}
!541 = distinct !{!541, !29, !208}
!542 = !{!11, !11, i64 0}
!543 = distinct !{!543, !29, !208}
!544 = distinct !{!544, !29}
!545 = distinct !{!545, !29}
!546 = distinct !{!546, !29}
!547 = distinct !{!547, !29}
!548 = distinct !{!548, !29}
!549 = distinct !{!549, !29, !208}
!550 = distinct !{!550, !29}
!551 = distinct !{!551, !29}
!552 = distinct !{!552, !29, !208}
!553 = distinct !{!553, !29, !208}
!554 = distinct !{!554, !29}
!555 = distinct !{!555, !29, !208}
!556 = !{!557, !4, i64 8}
!557 = !{!"jpeg_common_struct", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !10, i64 32, !10, i64 36}
!558 = !{!38, !4, i64 72}
!559 = !{!557, !10, i64 32}
!560 = !{!557, !10, i64 36}
!561 = !{!562, !4, i64 456}
!562 = !{!"jpeg_decompress_struct", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !10, i64 32, !10, i64 36, !4, i64 40, !10, i64 48, !10, i64 52, !10, i64 56, !5, i64 60, !5, i64 64, !10, i64 68, !10, i64 72, !11, i64 80, !10, i64 88, !10, i64 92, !5, i64 96, !10, i64 100, !10, i64 104, !10, i64 108, !5, i64 112, !10, i64 116, !10, i64 120, !10, i64 124, !10, i64 128, !10, i64 132, !10, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !4, i64 160, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !4, i64 192, !5, i64 200, !5, i64 232, !5, i64 264, !10, i64 296, !4, i64 304, !10, i64 312, !10, i64 316, !5, i64 320, !5, i64 352, !5, i64 384, !10, i64 416, !10, i64 420, !12, i64 424, !12, i64 426, !12, i64 428, !10, i64 432, !10, i64 436, !10, i64 440, !12, i64 444, !10, i64 448, !4, i64 456, !10, i64 464, !10, i64 468, !10, i64 472, !10, i64 476, !4, i64 480, !10, i64 488, !5, i64 496, !10, i64 528, !10, i64 532, !10, i64 536, !5, i64 540, !10, i64 580, !10, i64 584, !10, i64 588, !10, i64 592, !10, i64 596, !4, i64 600, !4, i64 608, !4, i64 616, !4, i64 624, !4, i64 632, !4, i64 640, !4, i64 648, !4, i64 656, !4, i64 664, !4, i64 672, !4, i64 680}
!563 = !{!38, !4, i64 80}
!564 = distinct !{!564, !29}
!565 = !{!14, !4, i64 16}
!566 = !{!14, !4, i64 24}
!567 = !{!14, !4, i64 136}
!568 = !{!14, !10, i64 144}
!569 = !{!557, !4, i64 0}
!570 = !{!571, !4, i64 0}
!571 = !{!"", !38, i64 0, !5, i64 104, !5, i64 120, !4, i64 136, !4, i64 144, !15, i64 152, !10, i64 160}
!572 = !{!571, !4, i64 8}
!573 = !{!571, !4, i64 16}
!574 = !{!571, !4, i64 24}
!575 = !{!571, !4, i64 32}
!576 = !{!571, !4, i64 40}
!577 = !{!571, !4, i64 48}
!578 = !{!571, !4, i64 56}
!579 = !{!571, !4, i64 64}
!580 = !{!571, !4, i64 72}
!581 = !{!571, !4, i64 80}
!582 = !{!571, !15, i64 96}
!583 = !{!571, !15, i64 88}
!584 = !{!571, !15, i64 152}
!585 = distinct !{!585, !29}
!586 = !{!571, !10, i64 160}
!587 = distinct !{!587, !29}
!588 = distinct !{!588, !65}
!589 = distinct !{!589, !29}
!590 = distinct !{!590, !29}
!591 = distinct !{!591, !65}
!592 = distinct !{!592, !29}
!593 = !{!594, !4, i64 0}
!594 = !{!"jvirt_sarray_control", !4, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !4, i64 48, !595, i64 56}
!595 = !{!"backing_store_struct", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !5, i64 32}
!596 = !{!594, !10, i64 8}
!597 = !{!594, !10, i64 12}
!598 = !{!594, !10, i64 16}
!599 = !{!594, !10, i64 36}
!600 = !{!594, !10, i64 44}
!601 = !{!571, !4, i64 136}
!602 = !{!594, !4, i64 48}
!603 = !{!604, !4, i64 0}
!604 = !{!"jvirt_barray_control", !4, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !4, i64 48, !595, i64 56}
!605 = !{!604, !10, i64 8}
!606 = !{!604, !10, i64 12}
!607 = !{!604, !10, i64 16}
!608 = !{!604, !10, i64 36}
!609 = !{!604, !10, i64 44}
!610 = !{!571, !4, i64 144}
!611 = !{!604, !4, i64 48}
!612 = distinct !{!612, !29}
!613 = distinct !{!613, !29}
!614 = !{!594, !10, i64 20}
!615 = !{!594, !10, i64 24}
!616 = !{!594, !10, i64 28}
!617 = !{!594, !10, i64 32}
!618 = !{!594, !10, i64 40}
!619 = distinct !{!619, !29}
!620 = !{!604, !10, i64 20}
!621 = !{!604, !10, i64 24}
!622 = !{!604, !10, i64 28}
!623 = !{!604, !10, i64 32}
!624 = !{!604, !10, i64 40}
!625 = distinct !{!625, !29}
!626 = distinct !{!626, !29}
!627 = distinct !{!627, !29}
!628 = distinct !{!628, !29}
!629 = distinct !{!629, !29}
!630 = !{!594, !4, i64 72}
!631 = distinct !{!631, !29}
!632 = !{!604, !4, i64 72}
!633 = distinct !{!633, !29}
!634 = distinct !{!634, !29}
!635 = distinct !{!635, !29}
