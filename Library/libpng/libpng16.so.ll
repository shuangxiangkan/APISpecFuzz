; ModuleID = 'libpng16.so.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i32, i32, i32, [4 x i32], i8, i8, i16 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i8*, i8*, i32, [29 x i8], i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i32, i8, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8*, i8*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_time_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, i32, i8, i32, i32, i8, i32, i8*, i8*, i16*, i8*, i32, i32, i8*, i8**, i8, i8, i32, %struct.png_unknown_chunk_t*, i32, %struct.png_sPLT_struct*, i32, i8, i8*, i8*, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_time_struct = type { i16, i8, i8, i8, i8, i8 }
%struct.png_sPLT_struct = type { i8*, i8, %struct.png_sPLT_entry_struct*, i32 }
%struct.png_sPLT_entry_struct = type { i16, i16, i16, i16, i16 }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_image = type { %struct.png_control*, i32, i32, i32, i32, i32, i32, i32, [64 x i8] }
%struct.png_control = type { %struct.png_struct_def*, %struct.png_info_def*, i8*, i8*, i64, i8 }
%struct.png_struct_def.62 = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def.62*, i8*)*, void (%struct.png_struct_def.62*, i8*)*, i8*, void (%struct.png_struct_def.62*, i8*, i64)*, void (%struct.png_struct_def.62*, i8*, i64)*, i8*, void (%struct.png_struct_def.62*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def.62*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, {}*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def.62*, i32, i32)*, void (%struct.png_struct_def.62*, i32, i32)*, void (%struct.png_struct_def.62*, %struct.png_info_def*)*, void (%struct.png_struct_def.62*, i8*, i32, i32)*, void (%struct.png_struct_def.62*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i8*, i8*, i32, [29 x i8], i32, i8*, i32 (%struct.png_struct_def.62*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i32, i8, i8*, i8* (%struct.png_struct_def.62*, i64)*, void (%struct.png_struct_def.62*, i8*)*, i8*, i8*, i8*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.png_image_read_control = type { %struct.png_image*, i8*, i32, i8*, %struct.png_color_struct*, i8*, i8*, i64, i32, i32, i32 }
%struct.png_struct_def.125 = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def.125*, i8*)*, void (%struct.png_struct_def.125*, i8*)*, i8*, {}*, {}*, i8*, void (%struct.png_struct_def.125*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def.125*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def.125*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def.125*, i32, i32)*, void (%struct.png_struct_def.125*, i32, i32)*, void (%struct.png_struct_def.125*, %struct.png_info_def*)*, void (%struct.png_struct_def.125*, i8*, i32, i32)*, void (%struct.png_struct_def.125*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i8*, i8*, i32, [29 x i8], i32, i8*, i32 (%struct.png_struct_def.125*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i32, i8, i8*, i8* (%struct.png_struct_def.125*, i64)*, void (%struct.png_struct_def.125*, i8*)*, i8*, i8*, i8*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.png_dsort_struct = type { %struct.png_dsort_struct*, i8, i8 }
%struct.png_struct_def.205 = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def.205*, i8*)*, void (%struct.png_struct_def.205*, i8*)*, i8*, void (%struct.png_struct_def.205*, i8*, i64)*, void (%struct.png_struct_def.205*, i8*, i64)*, i8*, void (%struct.png_struct_def.205*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def.205*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, {}*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def.205*, i32, i32)*, void (%struct.png_struct_def.205*, i32, i32)*, void (%struct.png_struct_def.205*, %struct.png_info_def*)*, void (%struct.png_struct_def.205*, i8*, i32, i32)*, void (%struct.png_struct_def.205*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i8*, i8*, i32, [29 x i8], i32, i8*, i32 (%struct.png_struct_def.205*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i32, i8, i8*, i8* (%struct.png_struct_def.205*, i64)*, void (%struct.png_struct_def.205*, i8*)*, i8*, i8*, i8*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.png_image_write_control = type { %struct.png_image*, i8*, i32, i8*, i32, i8*, i64, i8*, i8*, i64, i64 }
%struct.compression_state = type { i8*, i64, i32, [1024 x i8] }

@.str = private unnamed_addr constant [33 x i8] c"Too many bytes for PNG signature\00", align 1
@__const.png_sig_cmp.png_signature = private unnamed_addr constant [8 x i8] c"\89PNG\0D\0A\1A\0A", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"Potential overflow in png_zalloc()\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"1.6.40\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Application built with libpng-\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c" but running with \00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Unknown freer parameter in png_data_freer\00", align 1
@png_convert_to_rfc1123_buffer.short_months = internal constant [12 x [4 x i8]] [[4 x i8] c"Jan\00", [4 x i8] c"Feb\00", [4 x i8] c"Mar\00", [4 x i8] c"Apr\00", [4 x i8] c"May\00", [4 x i8] c"Jun\00", [4 x i8] c"Jul\00", [4 x i8] c"Aug\00", [4 x i8] c"Sep\00", [4 x i8] c"Oct\00", [4 x i8] c"Nov\00", [4 x i8] c"Dec\00"], align 16
@.str.6 = private unnamed_addr constant [7 x i8] c" +0000\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Ignoring invalid time value\00", align 1
@.str.8 = private unnamed_addr constant [219 x i8] c"\0Alibpng version 1.6.40\0ACopyright (c) 2018-2023 Cosmin Truta\0ACopyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson\0ACopyright (c) 1996-1997 Andreas Dilger\0ACopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\0A\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c" libpng version 1.6.40 - June 21, 2023\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"unexpected zlib return code\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"unexpected end of LZ stream\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"missing LZ dictionary\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"zlib IO error\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"bad parameters to zlib\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"damaged LZ stream\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"insufficient memory\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"truncated\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"unsupported zlib version\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"unexpected zlib return\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"gamma value out of range\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"duplicate\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"invalid chromaticities\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"internal error checking chromaticities\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"invalid end points\00", align 1
@png_colorspace_set_sRGB.sRGB_XYZ = internal constant %struct.png_XYZ { i32 41239, i32 21264, i32 1933, i32 35758, i32 71517, i32 11919, i32 18048, i32 7219, i32 95053 }, align 4
@.str.25 = private unnamed_addr constant [5 x i8] c"sRGB\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"invalid sRGB rendering intent\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"inconsistent rendering intents\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"duplicate sRGB information ignored\00", align 1
@sRGB_xy = internal constant %struct.png_xy { i32 64000, i32 33000, i32 30000, i32 60000, i32 15000, i32 6000, i32 31270, i32 32900 }, align 4
@.str.29 = private unnamed_addr constant [31 x i8] c"cHRM chunk does not match sRGB\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"exceeds application limits\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"length does not match profile\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"invalid length\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"tag count too large\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"invalid rendering intent\00", align 1
@.str.35 = private unnamed_addr constant [29 x i8] c"intent outside defined range\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"invalid signature\00", align 1
@D50_nCIEXYZ = internal constant [12 x i8] c"\00\00\F6\D6\00\01\00\00\00\00\D3-", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"PCS illuminant is not D50\00", align 1
@.str.38 = private unnamed_addr constant [47 x i8] c"RGB color space not permitted on grayscale PNG\00", align 1
@.str.39 = private unnamed_addr constant [42 x i8] c"Gray color space not permitted on RGB PNG\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"invalid ICC profile color space\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"invalid embedded Abstract ICC profile\00", align 1
@.str.42 = private unnamed_addr constant [40 x i8] c"unexpected DeviceLink ICC profile class\00", align 1
@.str.43 = private unnamed_addr constant [40 x i8] c"unexpected NamedColor ICC profile class\00", align 1
@.str.44 = private unnamed_addr constant [31 x i8] c"unrecognized ICC profile class\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"unexpected ICC PCS encoding\00", align 1
@.str.46 = private unnamed_addr constant [32 x i8] c"ICC profile tag outside profile\00", align 1
@.str.47 = private unnamed_addr constant [42 x i8] c"ICC profile tag start not a multiple of 4\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"internal error handling cHRM coefficients\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"internal error handling cHRM->XYZ\00", align 1
@.str.50 = private unnamed_addr constant [28 x i8] c"Image width is zero in IHDR\00", align 1
@.str.51 = private unnamed_addr constant [28 x i8] c"Invalid image width in IHDR\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"Image width is too large for this architecture\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"Image width exceeds user limit in IHDR\00", align 1
@.str.54 = private unnamed_addr constant [29 x i8] c"Image height is zero in IHDR\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"Invalid image height in IHDR\00", align 1
@.str.56 = private unnamed_addr constant [40 x i8] c"Image height exceeds user limit in IHDR\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"Invalid bit depth in IHDR\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"Invalid color type in IHDR\00", align 1
@.str.59 = private unnamed_addr constant [49 x i8] c"Invalid color type/bit depth combination in IHDR\00", align 1
@.str.60 = private unnamed_addr constant [33 x i8] c"Unknown interlace method in IHDR\00", align 1
@.str.61 = private unnamed_addr constant [35 x i8] c"Unknown compression method in IHDR\00", align 1
@.str.62 = private unnamed_addr constant [49 x i8] c"MNG features are not allowed in a PNG datastream\00", align 1
@.str.63 = private unnamed_addr constant [30 x i8] c"Unknown filter method in IHDR\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"Invalid filter method in IHDR\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"Invalid IHDR data\00", align 1
@.str.66 = private unnamed_addr constant [34 x i8] c"ASCII conversion buffer too small\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"fixed point overflow ignored\00", align 1
@.str.68 = private unnamed_addr constant [26 x i8] c"gamma table being rebuilt\00", align 1
@.str.69 = private unnamed_addr constant [32 x i8] c"gamma value does not match sRGB\00", align 1
@.str.70 = private unnamed_addr constant [43 x i8] c"gamma value does not match libpng estimate\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"inconsistent chromaticities\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"profile '\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"': \00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"h: \00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"too short\00", align 1
@png_sRGB_checks = internal constant [7 x %struct.anon] [%struct.anon { i32 171956726, i32 998732473, i32 3048, [4 x i32] [i32 704134622, i32 -1343072850, i32 2017655524, i32 -897369843], i8 1, i8 0, i16 0 }, %struct.anon { i32 1225385441, i32 1115601697, i32 3052, [4 x i32] [i32 -916728265, i32 -379745733, i32 234065817, i32 -1053686903], i8 1, i8 0, i16 1 }, %struct.anon { i32 -48151391, i32 812636334, i32 60988, [4 x i32] [i32 -60411016, i32 937592939, i32 -42800765, i32 -2111245896], i8 1, i8 0, i16 0 }, %struct.anon { i32 547108306, i32 -1141934062, i32 60960, [4 x i32] [i32 878062271, i32 -1723020026, i32 1831622433, i32 -791245731], i8 1, i8 0, i16 0 }, %struct.anon { i32 -1605052574, i32 1565600206, i32 3024, [4 x i32] zeroinitializer, i8 0, i8 0, i16 1 }, %struct.anon { i32 -142281733, i32 405710162, i32 3144, [4 x i32] zeroinitializer, i8 0, i8 1, i16 0 }, %struct.anon { i32 60355580, i32 -224505235, i32 3144, [4 x i32] zeroinitializer, i8 0, i8 1, i16 1 }], align 16
@.str.76 = private unnamed_addr constant [29 x i8] c"known incorrect sRGB profile\00", align 1
@.str.77 = private unnamed_addr constant [43 x i8] c"out-of-date sRGB profile with no signature\00", align 1
@.str.78 = private unnamed_addr constant [56 x i8] c"Not recognizing known sRGB profile that has been edited\00", align 1
@png_format_number.digits = internal constant [17 x i8] c"0123456789ABCDEF\00", align 16
@png_formatted_warning.valid_parameters = internal constant [10 x i8] c"123456789\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"fixed point overflow in \00", align 1
@.str.1.80 = private unnamed_addr constant [31 x i8] c"Libpng jmp_buf still allocated\00", align 1
@.str.2.81 = private unnamed_addr constant [33 x i8] c"Application jmp_buf size changed\00", align 1
@.str.3.84 = private unnamed_addr constant [14 x i8] c"bad longjmp: \00", align 1
@png_digit = internal constant [16 x i8] c"0123456789ABCDEF", align 16
@stderr = external global %struct._IO_FILE*, align 8
@.str.4.4 = private unnamed_addr constant [17 x i8] c"libpng error: %s\00", align 1
@.str.5.3 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str.6.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7.12 = private unnamed_addr constant [19 x i8] c"libpng warning: %s\00", align 1
@.str.85 = private unnamed_addr constant [47 x i8] c"png_get_eXIf does not work; use png_get_eXIf_1\00", align 1
@.str.1.86 = private unnamed_addr constant [11 x i8] c"sCAL width\00", align 1
@.str.2.87 = private unnamed_addr constant [12 x i8] c"sCAL height\00", align 1
@.str.97 = private unnamed_addr constant [28 x i8] c"internal error: array alloc\00", align 1
@.str.1.98 = private unnamed_addr constant [30 x i8] c"internal error: array realloc\00", align 1
@.str.2.96 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.3.99 = private unnamed_addr constant [14 x i8] c"Out of Memory\00", align 1
@.str.123 = private unnamed_addr constant [74 x i8] c"png_process_data_skip is not implemented in any current version of libpng\00", align 1
@.str.1.121 = private unnamed_addr constant [15 x i8] c"Not a PNG file\00", align 1
@.str.2.122 = private unnamed_addr constant [39 x i8] c"PNG file corrupted by ASCII conversion\00", align 1
@.str.3.117 = private unnamed_addr constant [25 x i8] c"Missing IHDR before IDAT\00", align 1
@.str.4.118 = private unnamed_addr constant [25 x i8] c"Missing PLTE before IDAT\00", align 1
@.str.5.119 = private unnamed_addr constant [21 x i8] c"Too many IDATs found\00", align 1
@.str.6.120 = private unnamed_addr constant [20 x i8] c"Invalid IHDR length\00", align 1
@.str.7.114 = private unnamed_addr constant [34 x i8] c"Potential overflow of save_buffer\00", align 1
@.str.8.115 = private unnamed_addr constant [36 x i8] c"Insufficient memory for save_buffer\00", align 1
@.str.9.116 = private unnamed_addr constant [18 x i8] c"save_buffer error\00", align 1
@.str.10.104 = private unnamed_addr constant [27 x i8] c"Not enough compressed data\00", align 1
@.str.11.105 = private unnamed_addr constant [30 x i8] c"No IDAT data (internal error)\00", align 1
@.str.12.106 = private unnamed_addr constant [34 x i8] c"Truncated compressed data in IDAT\00", align 1
@.str.13.107 = private unnamed_addr constant [32 x i8] c"IDAT: ADLER32 checksum mismatch\00", align 1
@.str.14.108 = private unnamed_addr constant [28 x i8] c"Decompression error in IDAT\00", align 1
@.str.15.109 = private unnamed_addr constant [30 x i8] c"Extra compressed data in IDAT\00", align 1
@.str.16.110 = private unnamed_addr constant [31 x i8] c"Extra compression data in IDAT\00", align 1
@.str.17.111 = private unnamed_addr constant [26 x i8] c"bad adaptive filter value\00", align 1
@.str.18.112 = private unnamed_addr constant [25 x i8] c"progressive row overflow\00", align 1
@.str.19.113 = private unnamed_addr constant [48 x i8] c"internal progressive row size calculation error\00", align 1
@png_read_push_finish_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@png_read_push_finish_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@png_read_push_finish_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1
@png_read_push_finish_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1
@.str.124 = private unnamed_addr constant [25 x i8] c"Missing IHDR before IDAT\00", align 1
@.str.1.125 = private unnamed_addr constant [25 x i8] c"Missing PLTE before IDAT\00", align 1
@.str.2.126 = private unnamed_addr constant [21 x i8] c"Too many IDATs found\00", align 1
@.str.3.127 = private unnamed_addr constant [58 x i8] c"png_read_update_info/png_start_read_image: duplicate call\00", align 1
@.str.4.128 = private unnamed_addr constant [58 x i8] c"png_start_read_image/png_read_update_info: duplicate call\00", align 1
@.str.5.129 = private unnamed_addr constant [33 x i8] c"Invalid attempt to read row data\00", align 1
@.str.6.130 = private unnamed_addr constant [26 x i8] c"bad adaptive filter value\00", align 1
@.str.7.131 = private unnamed_addr constant [24 x i8] c"sequential row overflow\00", align 1
@.str.8.132 = private unnamed_addr constant [47 x i8] c"internal sequential row size calculation error\00", align 1
@.str.9.133 = private unnamed_addr constant [65 x i8] c"Interlace handling should be turned on when using png_read_image\00", align 1
@.str.10.134 = private unnamed_addr constant [41 x i8] c"Read palette index exceeding num_palette\00", align 1
@.str.11.135 = private unnamed_addr constant [22 x i8] c".Too many IDATs found\00", align 1
@.str.12.136 = private unnamed_addr constant [23 x i8] c"..Too many IDATs found\00", align 1
@.str.13.139 = private unnamed_addr constant [49 x i8] c"Image is too high to process with png_read_png()\00", align 1
@.str.14.140 = private unnamed_addr constant [50 x i8] c"png_image_begin_read_from_stdio: invalid argument\00", align 1
@.str.15.141 = private unnamed_addr constant [61 x i8] c"png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.16.145 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.17.146 = private unnamed_addr constant [49 x i8] c"png_image_begin_read_from_file: invalid argument\00", align 1
@.str.18.147 = private unnamed_addr constant [60 x i8] c"png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.19.148 = private unnamed_addr constant [51 x i8] c"png_image_begin_read_from_memory: invalid argument\00", align 1
@.str.20.149 = private unnamed_addr constant [62 x i8] c"png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.21.152 = private unnamed_addr constant [47 x i8] c"png_image_finish_read[color-map]: no color-map\00", align 1
@.str.22.153 = private unnamed_addr constant [39 x i8] c"png_image_finish_read: image too large\00", align 1
@.str.23.154 = private unnamed_addr constant [40 x i8] c"png_image_finish_read: invalid argument\00", align 1
@.str.24.155 = private unnamed_addr constant [44 x i8] c"png_image_finish_read: row_stride too large\00", align 1
@.str.25.156 = private unnamed_addr constant [49 x i8] c"png_image_finish_read: damaged PNG_IMAGE_VERSION\00", align 1
@.str.26.142 = private unnamed_addr constant [7 x i8] c"1.6.40\00", align 1
@.str.27.143 = private unnamed_addr constant [30 x i8] c"png_image_read: out of memory\00", align 1
@.str.28.144 = private unnamed_addr constant [40 x i8] c"png_image_read: opaque pointer not NULL\00", align 1
@.str.29.150 = private unnamed_addr constant [24 x i8] c"read beyond end of data\00", align 1
@.str.30.151 = private unnamed_addr constant [20 x i8] c"invalid memory read\00", align 1
@.str.31.168 = private unnamed_addr constant [63 x i8] c"background color must be supplied to remove alpha/transparency\00", align 1
@.str.32.169 = private unnamed_addr constant [35 x i8] c"gray[8] color-map: too few entries\00", align 1
@.str.33.170 = private unnamed_addr constant [36 x i8] c"gray[16] color-map: too few entries\00", align 1
@.str.34.171 = private unnamed_addr constant [38 x i8] c"gray+alpha color-map: too few entries\00", align 1
@.str.35.172 = private unnamed_addr constant [38 x i8] c"gray-alpha color-map: too few entries\00", align 1
@.str.36.173 = private unnamed_addr constant [36 x i8] c"ga-alpha color-map: too few entries\00", align 1
@png_sRGB_table = constant [256 x i16] [i16 0, i16 20, i16 40, i16 60, i16 80, i16 99, i16 119, i16 139, i16 159, i16 179, i16 199, i16 219, i16 241, i16 264, i16 288, i16 313, i16 340, i16 367, i16 396, i16 427, i16 458, i16 491, i16 526, i16 562, i16 599, i16 637, i16 677, i16 718, i16 761, i16 805, i16 851, i16 898, i16 947, i16 997, i16 1048, i16 1101, i16 1156, i16 1212, i16 1270, i16 1330, i16 1391, i16 1453, i16 1517, i16 1583, i16 1651, i16 1720, i16 1790, i16 1863, i16 1937, i16 2013, i16 2090, i16 2170, i16 2250, i16 2333, i16 2418, i16 2504, i16 2592, i16 2681, i16 2773, i16 2866, i16 2961, i16 3058, i16 3157, i16 3258, i16 3360, i16 3464, i16 3570, i16 3678, i16 3788, i16 3900, i16 4014, i16 4129, i16 4247, i16 4366, i16 4488, i16 4611, i16 4736, i16 4864, i16 4993, i16 5124, i16 5257, i16 5392, i16 5530, i16 5669, i16 5810, i16 5953, i16 6099, i16 6246, i16 6395, i16 6547, i16 6700, i16 6856, i16 7014, i16 7174, i16 7335, i16 7500, i16 7666, i16 7834, i16 8004, i16 8177, i16 8352, i16 8528, i16 8708, i16 8889, i16 9072, i16 9258, i16 9445, i16 9635, i16 9828, i16 10022, i16 10219, i16 10417, i16 10619, i16 10822, i16 11028, i16 11235, i16 11446, i16 11658, i16 11873, i16 12090, i16 12309, i16 12530, i16 12754, i16 12980, i16 13209, i16 13440, i16 13673, i16 13909, i16 14146, i16 14387, i16 14629, i16 14874, i16 15122, i16 15371, i16 15623, i16 15878, i16 16135, i16 16394, i16 16656, i16 16920, i16 17187, i16 17456, i16 17727, i16 18001, i16 18277, i16 18556, i16 18837, i16 19121, i16 19407, i16 19696, i16 19987, i16 20281, i16 20577, i16 20876, i16 21177, i16 21481, i16 21787, i16 22096, i16 22407, i16 22721, i16 23038, i16 23357, i16 23678, i16 24002, i16 24329, i16 24658, i16 24990, i16 25325, i16 25662, i16 26001, i16 26344, i16 26688, i16 27036, i16 27386, i16 27739, i16 28094, i16 28452, i16 28813, i16 29176, i16 29542, i16 29911, i16 30282, i16 30656, i16 31033, i16 31412, i16 31794, i16 32179, i16 32567, i16 -32579, i16 -32186, i16 -31791, i16 -31393, i16 -30992, i16 -30588, i16 -30181, i16 -29772, i16 -29360, i16 -28945, i16 -28528, i16 -28107, i16 -27684, i16 -27258, i16 -26830, i16 -26398, i16 -25964, i16 -25527, i16 -25087, i16 -24645, i16 -24199, i16 -23751, i16 -23300, i16 -22846, i16 -22389, i16 -21930, i16 -21467, i16 -21002, i16 -20534, i16 -20063, i16 -19589, i16 -19113, i16 -18633, i16 -18151, i16 -17665, i16 -17177, i16 -16686, i16 -16192, i16 -15695, i16 -15195, i16 -14692, i16 -14187, i16 -13678, i16 -13167, i16 -12652, i16 -12135, i16 -11615, i16 -11091, i16 -10565, i16 -10036, i16 -9504, i16 -8969, i16 -8431, i16 -7890, i16 -7346, i16 -6799, i16 -6249, i16 -5696, i16 -5140, i16 -4581, i16 -4019, i16 -3454, i16 -2886, i16 -2315, i16 -1741, i16 -1164, i16 -584, i16 -1], align 16
@.str.37.174 = private unnamed_addr constant [35 x i8] c"rgb[ga] color-map: too few entries\00", align 1
@.str.38.175 = private unnamed_addr constant [37 x i8] c"rgb[gray] color-map: too few entries\00", align 1
@.str.39.176 = private unnamed_addr constant [37 x i8] c"rgb+alpha color-map: too few entries\00", align 1
@.str.40.177 = private unnamed_addr constant [37 x i8] c"rgb-alpha color-map: too few entries\00", align 1
@.str.41.178 = private unnamed_addr constant [31 x i8] c"rgb color-map: too few entries\00", align 1
@.str.42.179 = private unnamed_addr constant [35 x i8] c"palette color-map: too few entries\00", align 1
@.str.43.180 = private unnamed_addr constant [23 x i8] c"invalid PNG color type\00", align 1
@.str.44.181 = private unnamed_addr constant [33 x i8] c"bad data option (internal error)\00", align 1
@.str.45.182 = private unnamed_addr constant [40 x i8] c"color map overflow (BAD internal error)\00", align 1
@.str.46.183 = private unnamed_addr constant [39 x i8] c"bad processing option (internal error)\00", align 1
@.str.47.184 = private unnamed_addr constant [38 x i8] c"bad background index (internal error)\00", align 1
@.str.48.186 = private unnamed_addr constant [29 x i8] c"color-map index out of range\00", align 1
@.str.49.187 = private unnamed_addr constant [30 x i8] c"bad encoding (internal error)\00", align 1
@.str.50.185 = private unnamed_addr constant [37 x i8] c"unexpected encoding (internal error)\00", align 1
@.str.51.167 = private unnamed_addr constant [42 x i8] c"bad color-map processing (internal error)\00", align 1
@png_image_skip_unused_chunks.chunks_to_process = internal constant [30 x i8] c"bKGD\00cHRM\00gAMA\00iCCP\00sBIT\00sRGB\00", align 16
@.str.52.165 = private unnamed_addr constant [23 x i8] c"unknown interlace type\00", align 1
@.str.53.157 = private unnamed_addr constant [43 x i8] c"png_read_image: unsupported transformation\00", align 1
@.str.54.158 = private unnamed_addr constant [35 x i8] c"png_image_read: alpha channel lost\00", align 1
@.str.55.159 = private unnamed_addr constant [37 x i8] c"unexpected alpha swap transformation\00", align 1
@.str.56.160 = private unnamed_addr constant [40 x i8] c"png_read_image: invalid transformations\00", align 1
@.str.57.161 = private unnamed_addr constant [17 x i8] c"lost rgb to gray\00", align 1
@.str.58.162 = private unnamed_addr constant [19 x i8] c"unexpected compose\00", align 1
@.str.59.163 = private unnamed_addr constant [21 x i8] c"lost/gained channels\00", align 1
@.str.60.164 = private unnamed_addr constant [32 x i8] c"unexpected 8-bit transformation\00", align 1
@.str.61.166 = private unnamed_addr constant [21 x i8] c"unexpected bit depth\00", align 1
@.str.188 = private unnamed_addr constant [27 x i8] c"Call to NULL read function\00", align 1
@.str.1.189 = private unnamed_addr constant [11 x i8] c"Read Error\00", align 1
@.str.2.192 = private unnamed_addr constant [68 x i8] c"Can't set both read_data_fn and write_data_fn in the same structure\00", align 1
@.str.193 = private unnamed_addr constant [41 x i8] c"Can't discard critical data on CRC error\00", align 1
@.str.1.196 = private unnamed_addr constant [49 x i8] c"Application must supply a known background gamma\00", align 1
@.str.2.199 = private unnamed_addr constant [19 x i8] c"png_set_background\00", align 1
@.str.3.208 = private unnamed_addr constant [35 x i8] c"output gamma out of expected range\00", align 1
@.str.4.209 = private unnamed_addr constant [19 x i8] c"invalid alpha mode\00", align 1
@.str.5.210 = private unnamed_addr constant [51 x i8] c"conflicting calls to set alpha mode and background\00", align 1
@.str.6.212 = private unnamed_addr constant [36 x i8] c"invalid file gamma in png_set_gamma\00", align 1
@.str.7.213 = private unnamed_addr constant [38 x i8] c"invalid screen gamma in png_set_gamma\00", align 1
@.str.8.224 = private unnamed_addr constant [36 x i8] c"invalid error action to rgb_to_gray\00", align 1
@.str.9.225 = private unnamed_addr constant [47 x i8] c"ignoring out of range rgb_to_gray coefficients\00", align 1
@.str.10.226 = private unnamed_addr constant [28 x i8] c"rgb to gray red coefficient\00", align 1
@.str.11.227 = private unnamed_addr constant [30 x i8] c"rgb to gray green coefficient\00", align 1
@.str.12.228 = private unnamed_addr constant [53 x i8] c"libpng does not support gamma+background+rgb_to_gray\00", align 1
@.str.13.229 = private unnamed_addr constant [30 x i8] c"invalid background gamma type\00", align 1
@.str.14.232 = private unnamed_addr constant [33 x i8] c"Palette is NULL in indexed image\00", align 1
@.str.15.235 = private unnamed_addr constant [16 x i8] c"NULL row buffer\00", align 1
@.str.16.236 = private unnamed_addr constant [18 x i8] c"Uninitialized row\00", align 1
@.str.17.237 = private unnamed_addr constant [39 x i8] c"png_do_rgb_to_gray found nongray pixel\00", align 1
@.str.18.238 = private unnamed_addr constant [36 x i8] c"png_do_quantize returned rowbytes=0\00", align 1
@.str.19.197 = private unnamed_addr constant [59 x i8] c"invalid after png_start_read_image or png_read_update_info\00", align 1
@.str.20.198 = private unnamed_addr constant [44 x i8] c"invalid before the PNG header has been read\00", align 1
@.str.21.211 = private unnamed_addr constant [12 x i8] c"gamma value\00", align 1
@.str.22.239 = private unnamed_addr constant [37 x i8] c"png_do_encode_alpha: unexpected call\00", align 1
@.str.242 = private unnamed_addr constant [34 x i8] c"PNG unsigned integer out of range\00", align 1
@.str.1.245 = private unnamed_addr constant [15 x i8] c"Not a PNG file\00", align 1
@.str.2.246 = private unnamed_addr constant [39 x i8] c"PNG file corrupted by ASCII conversion\00", align 1
@.str.3.259 = private unnamed_addr constant [10 x i8] c"CRC error\00", align 1
@.str.4.262 = private unnamed_addr constant [29 x i8] c"invalid window size (libpng)\00", align 1
@.str.5.265 = private unnamed_addr constant [13 x i8] c"out of place\00", align 1
@.str.6.266 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.7.269 = private unnamed_addr constant [13 x i8] c"missing IHDR\00", align 1
@.str.8.270 = private unnamed_addr constant [10 x i8] c"duplicate\00", align 1
@.str.9.271 = private unnamed_addr constant [25 x i8] c"ignored in grayscale PNG\00", align 1
@.str.10.272 = private unnamed_addr constant [19 x i8] c"tRNS must be after\00", align 1
@.str.11.273 = private unnamed_addr constant [19 x i8] c"hIST must be after\00", align 1
@.str.12.274 = private unnamed_addr constant [19 x i8] c"bKGD must be after\00", align 1
@.str.13.284 = private unnamed_addr constant [15 x i8] c"invalid values\00", align 1
@.str.14.287 = private unnamed_addr constant [18 x i8] c"too many profiles\00", align 1
@.str.15.290 = private unnamed_addr constant [10 x i8] c"too short\00", align 1
@.str.16.291 = private unnamed_addr constant [22 x i8] c"extra compressed data\00", align 1
@.str.17.292 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.18.293 = private unnamed_addr constant [23 x i8] c"bad compression method\00", align 1
@.str.19.294 = private unnamed_addr constant [12 x i8] c"bad keyword\00", align 1
@.str.20.301 = private unnamed_addr constant [33 x i8] c"No space in chunk cache for sPLT\00", align 1
@.str.21.302 = private unnamed_addr constant [21 x i8] c"malformed sPLT chunk\00", align 1
@.str.22.303 = private unnamed_addr constant [26 x i8] c"sPLT chunk has bad length\00", align 1
@.str.23.304 = private unnamed_addr constant [20 x i8] c"sPLT chunk too long\00", align 1
@.str.24.305 = private unnamed_addr constant [36 x i8] c"sPLT chunk requires too much memory\00", align 1
@.str.25.308 = private unnamed_addr constant [27 x i8] c"invalid with alpha channel\00", align 1
@.str.26.311 = private unnamed_addr constant [14 x i8] c"invalid index\00", align 1
@.str.27.312 = private unnamed_addr constant [19 x i8] c"invalid gray level\00", align 1
@.str.28.313 = private unnamed_addr constant [14 x i8] c"invalid color\00", align 1
@.str.29.316 = private unnamed_addr constant [31 x i8] c"incorrect byte-order specifier\00", align 1
@.str.30.325 = private unnamed_addr constant [24 x i8] c"invalid parameter count\00", align 1
@.str.31.326 = private unnamed_addr constant [27 x i8] c"unrecognized equation type\00", align 1
@.str.32.327 = private unnamed_addr constant [13 x i8] c"invalid data\00", align 1
@.str.33.330 = private unnamed_addr constant [13 x i8] c"invalid unit\00", align 1
@.str.34.331 = private unnamed_addr constant [17 x i8] c"bad width format\00", align 1
@.str.35.332 = private unnamed_addr constant [19 x i8] c"non-positive width\00", align 1
@.str.36.333 = private unnamed_addr constant [18 x i8] c"bad height format\00", align 1
@.str.37.334 = private unnamed_addr constant [20 x i8] c"non-positive height\00", align 1
@.str.38.339 = private unnamed_addr constant [24 x i8] c"no space in chunk cache\00", align 1
@.str.39.340 = private unnamed_addr constant [42 x i8] c"Insufficient memory to process text chunk\00", align 1
@.str.40.343 = private unnamed_addr constant [10 x i8] c"truncated\00", align 1
@.str.41.344 = private unnamed_addr constant [25 x i8] c"unknown compression type\00", align 1
@.str.42.345 = private unnamed_addr constant [32 x i8] c"Read failure in png_handle_zTXt\00", align 1
@.str.43.346 = private unnamed_addr constant [20 x i8] c"insufficient memory\00", align 1
@.str.44.349 = private unnamed_addr constant [21 x i8] c"bad compression info\00", align 1
@.str.45.352 = private unnamed_addr constant [20 x i8] c"error in user chunk\00", align 1
@.str.46.353 = private unnamed_addr constant [22 x i8] c"Saving unknown chunk:\00", align 1
@.str.47.354 = private unnamed_addr constant [76 x i8] c"forcing save of an unhandled chunk; please call png_set_keep_unknown_chunks\00", align 1
@.str.48.355 = private unnamed_addr constant [25 x i8] c"unhandled critical chunk\00", align 1
@.str.49.254 = private unnamed_addr constant [19 x i8] c"invalid chunk type\00", align 1
@.str.50.253 = private unnamed_addr constant [24 x i8] c"chunk data is too large\00", align 1
@.str.51.359 = private unnamed_addr constant [25 x i8] c"internal row logic error\00", align 1
@.str.52.360 = private unnamed_addr constant [36 x i8] c"internal row size calculation error\00", align 1
@.str.53.361 = private unnamed_addr constant [25 x i8] c"internal row width error\00", align 1
@png_combine_row.row_mask = internal constant [2 x [3 x [6 x i32]]] [[3 x [6 x i32]] [[6 x i32] [i32 16843009, i32 269488144, i32 286331153, i32 1145324612, i32 1431655765, i32 -1431655766], [6 x i32] [i32 196611, i32 50332416, i32 50529027, i32 808464432, i32 858993459, i32 -858993460], [6 x i32] [i32 15, i32 983040, i32 983055, i32 251662080, i32 252645135, i32 -252645136]], [3 x [6 x i32]] [[6 x i32] [i32 -2139062144, i32 134744072, i32 -2004318072, i32 572662306, i32 -1431655766, i32 1431655765], [6 x i32] [i32 12583104, i32 -1073692672, i32 -1061109568, i32 202116108, i32 -858993460, i32 858993459], [6 x i32] [i32 240, i32 15728640, i32 15728880, i32 -268374016, i32 -252645136, i32 252645135]]], align 16
@png_combine_row.display_mask = internal constant [2 x [3 x [3 x i32]]] [[3 x [3 x i32]] [[3 x i32] [i32 -252645136, i32 -858993460, i32 -1431655766], [3 x i32] [i32 -16711936, i32 -252645136, i32 -858993460], [3 x i32] [i32 -65536, i32 -16711936, i32 -252645136]], [3 x [3 x i32]] [[3 x i32] [i32 252645135, i32 858993459, i32 1431655765], [3 x i32] [i32 -16711936, i32 252645135, i32 858993459], [3 x i32] [i32 -65536, i32 -16711936, i32 252645135]]], align 16
@.str.54.362 = private unnamed_addr constant [35 x i8] c"invalid user transform pixel depth\00", align 1
@png_do_read_interlace.png_pass_inc = internal constant [7 x i32] [i32 8, i32 8, i32 4, i32 4, i32 2, i32 2, i32 1], align 16
@.str.55.369 = private unnamed_addr constant [22 x i8] c"Not enough image data\00", align 1
@.str.56.370 = private unnamed_addr constant [22 x i8] c"Extra compressed data\00", align 1
@.str.57.371 = private unnamed_addr constant [20 x i8] c"Too much image data\00", align 1
@png_read_finish_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@png_read_finish_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@png_read_finish_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1
@png_read_finish_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1
@png_read_start_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@png_read_start_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@png_read_start_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1
@png_read_start_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1
@.str.58.378 = private unnamed_addr constant [45 x i8] c"Row has too many bytes to allocate in memory\00", align 1
@.str.59.279 = private unnamed_addr constant [37 x i8] c"PNG fixed point integer out of range\00", align 1
@.str.60.297 = private unnamed_addr constant [15 x i8] c" using zstream\00", align 1
@.str.61.298 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@.str.62.296 = private unnamed_addr constant [18 x i8] c"zstream unclaimed\00", align 1
@.str.63.295 = private unnamed_addr constant [34 x i8] c"insufficient memory to read chunk\00", align 1
@.str.64.356 = private unnamed_addr constant [36 x i8] c"unknown chunk exceeds memory limits\00", align 1
@.str.381 = private unnamed_addr constant [13 x i8] c"cHRM White X\00", align 1
@.str.1.382 = private unnamed_addr constant [13 x i8] c"cHRM White Y\00", align 1
@.str.2.383 = private unnamed_addr constant [11 x i8] c"cHRM Red X\00", align 1
@.str.3.384 = private unnamed_addr constant [11 x i8] c"cHRM Red Y\00", align 1
@.str.4.385 = private unnamed_addr constant [13 x i8] c"cHRM Green X\00", align 1
@.str.5.386 = private unnamed_addr constant [13 x i8] c"cHRM Green Y\00", align 1
@.str.6.387 = private unnamed_addr constant [12 x i8] c"cHRM Blue X\00", align 1
@.str.7.388 = private unnamed_addr constant [12 x i8] c"cHRM Blue Y\00", align 1
@.str.8.389 = private unnamed_addr constant [11 x i8] c"cHRM Red Z\00", align 1
@.str.9.390 = private unnamed_addr constant [13 x i8] c"cHRM Green Z\00", align 1
@.str.10.391 = private unnamed_addr constant [12 x i8] c"cHRM Blue Z\00", align 1
@.str.11.392 = private unnamed_addr constant [47 x i8] c"png_set_eXIf does not work; use png_set_eXIf_1\00", align 1
@.str.12.395 = private unnamed_addr constant [40 x i8] c"Insufficient memory for eXIf chunk data\00", align 1
@.str.13.396 = private unnamed_addr constant [13 x i8] c"png_set_gAMA\00", align 1
@.str.14.399 = private unnamed_addr constant [46 x i8] c"Invalid palette size, hIST allocation skipped\00", align 1
@.str.15.400 = private unnamed_addr constant [40 x i8] c"Insufficient memory for hIST chunk data\00", align 1
@.str.16.407 = private unnamed_addr constant [27 x i8] c"Invalid pCAL equation type\00", align 1
@.str.17.408 = private unnamed_addr constant [29 x i8] c"Invalid pCAL parameter count\00", align 1
@.str.18.409 = private unnamed_addr constant [34 x i8] c"Invalid format for pCAL parameter\00", align 1
@.str.19.410 = private unnamed_addr constant [37 x i8] c"Insufficient memory for pCAL purpose\00", align 1
@.str.20.411 = private unnamed_addr constant [35 x i8] c"Insufficient memory for pCAL units\00", align 1
@.str.21.412 = private unnamed_addr constant [36 x i8] c"Insufficient memory for pCAL params\00", align 1
@.str.22.413 = private unnamed_addr constant [39 x i8] c"Insufficient memory for pCAL parameter\00", align 1
@.str.23.416 = private unnamed_addr constant [18 x i8] c"Invalid sCAL unit\00", align 1
@.str.24.417 = private unnamed_addr constant [19 x i8] c"Invalid sCAL width\00", align 1
@.str.25.418 = private unnamed_addr constant [20 x i8] c"Invalid sCAL height\00", align 1
@.str.26.419 = private unnamed_addr constant [47 x i8] c"Memory allocation failed while processing sCAL\00", align 1
@.str.27.420 = private unnamed_addr constant [27 x i8] c"Invalid sCAL width ignored\00", align 1
@.str.28.421 = private unnamed_addr constant [28 x i8] c"Invalid sCAL height ignored\00", align 1
@.str.29.426 = private unnamed_addr constant [23 x i8] c"Invalid palette length\00", align 1
@.str.30.427 = private unnamed_addr constant [16 x i8] c"Invalid palette\00", align 1
@.str.31.430 = private unnamed_addr constant [32 x i8] c"Invalid iCCP compression method\00", align 1
@.str.32.431 = private unnamed_addr constant [42 x i8] c"Insufficient memory to process iCCP chunk\00", align 1
@.str.33.432 = private unnamed_addr constant [44 x i8] c"Insufficient memory to process iCCP profile\00", align 1
@.str.34.435 = private unnamed_addr constant [34 x i8] c"Insufficient memory to store text\00", align 1
@.str.35.436 = private unnamed_addr constant [21 x i8] c"too many text chunks\00", align 1
@.str.36.437 = private unnamed_addr constant [38 x i8] c"text compression mode is out of range\00", align 1
@.str.37.438 = private unnamed_addr constant [26 x i8] c"text chunk: out of memory\00", align 1
@.str.38.441 = private unnamed_addr constant [28 x i8] c"Ignoring invalid time value\00", align 1
@.str.39.444 = private unnamed_addr constant [50 x i8] c"tRNS chunk has out-of-range samples for bit_depth\00", align 1
@.str.40.447 = private unnamed_addr constant [21 x i8] c"too many sPLT chunks\00", align 1
@.str.41.448 = private unnamed_addr constant [27 x i8] c"png_set_sPLT: invalid sPLT\00", align 1
@.str.42.449 = private unnamed_addr constant [19 x i8] c"sPLT out of memory\00", align 1
@.str.43.452 = private unnamed_addr constant [24 x i8] c"too many unknown chunks\00", align 1
@.str.44.453 = private unnamed_addr constant [29 x i8] c"unknown chunk: out of memory\00", align 1
@.str.45.456 = private unnamed_addr constant [31 x i8] c"invalid unknown chunk location\00", align 1
@.str.46.459 = private unnamed_addr constant [42 x i8] c"png_set_keep_unknown_chunks: invalid keep\00", align 1
@png_set_keep_unknown_chunks.chunks_to_ignore = internal constant [90 x i8] c"bKGD\00cHRM\00eXIf\00gAMA\00hIST\00iCCP\00iTXt\00oFFs\00pCAL\00pHYs\00sBIT\00sCAL\00sPLT\00sTER\00sRGB\00tEXt\00tIME\00zTXt\00", align 16
@.str.47.460 = private unnamed_addr constant [43 x i8] c"png_set_keep_unknown_chunks: no chunk list\00", align 1
@.str.48.461 = private unnamed_addr constant [45 x i8] c"png_set_keep_unknown_chunks: too many chunks\00", align 1
@.str.49.462 = private unnamed_addr constant [32 x i8] c"invalid compression buffer size\00", align 1
@.str.50.463 = private unnamed_addr constant [63 x i8] c"Compression buffer size cannot be changed because it is in use\00", align 1
@.str.51.464 = private unnamed_addr constant [50 x i8] c"Compression buffer size limited to system maximum\00", align 1
@.str.52.465 = private unnamed_addr constant [50 x i8] c"Compression buffer size cannot be reduced below 6\00", align 1
@.str.53.468 = private unnamed_addr constant [18 x i8] c"keyword truncated\00", align 1
@.str.54.469 = private unnamed_addr constant [35 x i8] c"keyword \22@1\22: bad character '0x@2'\00", align 1
@.str.55.454 = private unnamed_addr constant [52 x i8] c"png_set_unknown_chunks now expects a valid location\00", align 1
@.str.56.455 = private unnamed_addr constant [43 x i8] c"invalid location in png_set_unknown_chunks\00", align 1
@.str.482 = private unnamed_addr constant [56 x i8] c"png_set_filler is invalid for low bit depth gray output\00", align 1
@.str.1.483 = private unnamed_addr constant [41 x i8] c"png_set_filler: inappropriate color type\00", align 1
@onebppswaptable = internal constant [256 x i8] c"\00\80@\C0 \A0`\E0\10\90P\D00\B0p\F0\08\88H\C8(\A8h\E8\18\98X\D88\B8x\F8\04\84D\C4$\A4d\E4\14\94T\D44\B4t\F4\0C\8CL\CC,\ACl\EC\1C\9C\\\DC<\BC|\FC\02\82B\C2\22\A2b\E2\12\92R\D22\B2r\F2\0A\8AJ\CA*\AAj\EA\1A\9AZ\DA:\BAz\FA\06\86F\C6&\A6f\E6\16\96V\D66\B6v\F6\0E\8EN\CE.\AEn\EE\1E\9E^\DE>\BE~\FE\01\81A\C1!\A1a\E1\11\91Q\D11\B1q\F1\09\89I\C9)\A9i\E9\19\99Y\D99\B9y\F9\05\85E\C5%\A5e\E5\15\95U\D55\B5u\F5\0D\8DM\CD-\ADm\ED\1D\9D]\DD=\BD}\FD\03\83C\C3#\A3c\E3\13\93S\D33\B3s\F3\0B\8BK\CB+\ABk\EB\1B\9B[\DB;\BB{\FB\07\87G\C7'\A7g\E7\17\97W\D77\B7w\F7\0F\8FO\CF/\AFo\EF\1F\9F_\DF?\BF\7F\FF", align 16
@twobppswaptable = internal constant [256 x i8] c"\00@\80\C0\10P\90\D0 `\A0\E00p\B0\F0\04D\84\C4\14T\94\D4$d\A4\E44t\B4\F4\08H\88\C8\18X\98\D8(h\A8\E88x\B8\F8\0CL\8C\CC\1C\\\9C\DC,l\AC\EC<|\BC\FC\01A\81\C1\11Q\91\D1!a\A1\E11q\B1\F1\05E\85\C5\15U\95\D5%e\A5\E55u\B5\F5\09I\89\C9\19Y\99\D9)i\A9\E99y\B9\F9\0DM\8D\CD\1D]\9D\DD-m\AD\ED=}\BD\FD\02B\82\C2\12R\92\D2\22b\A2\E22r\B2\F2\06F\86\C6\16V\96\D6&f\A6\E66v\B6\F6\0AJ\8A\CA\1AZ\9A\DA*j\AA\EA:z\BA\FA\0EN\8E\CE\1E^\9E\DE.n\AE\EE>~\BE\FE\03C\83\C3\13S\93\D3#c\A3\E33s\B3\F3\07G\87\C7\17W\97\D7'g\A7\E77w\B7\F7\0BK\8B\CB\1B[\9B\DB+k\AB\EB;{\BB\FB\0FO\8F\CF\1F_\9F\DF/o\AF\EF?\7F\BF\FF", align 16
@fourbppswaptable = internal constant [256 x i8] c"\00\10 0@P`p\80\90\A0\B0\C0\D0\E0\F0\01\11!1AQaq\81\91\A1\B1\C1\D1\E1\F1\02\12\222BRbr\82\92\A2\B2\C2\D2\E2\F2\03\13#3CScs\83\93\A3\B3\C3\D3\E3\F3\04\14$4DTdt\84\94\A4\B4\C4\D4\E4\F4\05\15%5EUeu\85\95\A5\B5\C5\D5\E5\F5\06\16&6FVfv\86\96\A6\B6\C6\D6\E6\F6\07\17'7GWgw\87\97\A7\B7\C7\D7\E7\F7\08\18(8HXhx\88\98\A8\B8\C8\D8\E8\F8\09\19)9IYiy\89\99\A9\B9\C9\D9\E9\F9\0A\1A*:JZjz\8A\9A\AA\BA\CA\DA\EA\FA\0B\1B+;K[k{\8B\9B\AB\BB\CB\DB\EB\FB\0C\1C,<L\\l|\8C\9C\AC\BC\CC\DC\EC\FC\0D\1D-=M]m}\8D\9D\AD\BD\CD\DD\ED\FD\0E\1E.>N^n~\8E\9E\AE\BE\CE\DE\EE\FE\0F\1F/?O_o\7F\8F\9F\AF\BF\CF\DF\EF\FF", align 16
@.str.2.504 = private unnamed_addr constant [63 x i8] c"info change after png_start_read_image or png_read_update_info\00", align 1
@.str.505 = private unnamed_addr constant [28 x i8] c"Call to NULL write function\00", align 1
@.str.1.506 = private unnamed_addr constant [12 x i8] c"Write Error\00", align 1
@.str.2.507 = private unnamed_addr constant [68 x i8] c"Can't set both read_data_fn and write_data_fn in the same structure\00", align 1
@.str.508 = private unnamed_addr constant [49 x i8] c"MNG features are not allowed in a PNG datastream\00", align 1
@.str.1.509 = private unnamed_addr constant [46 x i8] c"profile matches sRGB but writing iCCP instead\00", align 1
@.str.2.511 = private unnamed_addr constant [43 x i8] c"Valid palette required for paletted images\00", align 1
@.str.3.512 = private unnamed_addr constant [27 x i8] c"No IDATs written into file\00", align 1
@.str.4.513 = private unnamed_addr constant [42 x i8] c"Wrote palette index exceeding num_palette\00", align 1
@.str.5.514 = private unnamed_addr constant [53 x i8] c"png_write_info was never called before png_write_row\00", align 1
@.str.6.515 = private unnamed_addr constant [37 x i8] c"internal write transform logic error\00", align 1
@.str.7.518 = private unnamed_addr constant [32 x i8] c"Unknown row filter for method 0\00", align 1
@.str.8.519 = private unnamed_addr constant [57 x i8] c"png_set_filter: UP/AVG/PAETH cannot be added after start\00", align 1
@.str.9.520 = private unnamed_addr constant [29 x i8] c"Unknown custom filter method\00", align 1
@.str.10.521 = private unnamed_addr constant [49 x i8] c"Only compression windows <= 32k supported by PNG\00", align 1
@.str.11.522 = private unnamed_addr constant [49 x i8] c"Only compression windows >= 256 supported by PNG\00", align 1
@.str.12.523 = private unnamed_addr constant [46 x i8] c"Only compression method 8 is supported by PNG\00", align 1
@.str.13.524 = private unnamed_addr constant [37 x i8] c"no rows for png_write_image to write\00", align 1
@.str.14.525 = private unnamed_addr constant [55 x i8] c"PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported\00", align 1
@.str.15.526 = private unnamed_addr constant [44 x i8] c"png_image_write_to_memory: invalid argument\00", align 1
@.str.16.527 = private unnamed_addr constant [55 x i8] c"png_image_write_to_memory: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.17.537 = private unnamed_addr constant [43 x i8] c"png_image_write_to_stdio: invalid argument\00", align 1
@.str.18.538 = private unnamed_addr constant [54 x i8] c"png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.19.539 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.20.540 = private unnamed_addr constant [42 x i8] c"png_image_write_to_file: invalid argument\00", align 1
@.str.21.541 = private unnamed_addr constant [53 x i8] c"png_image_write_to_file: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.22.510 = private unnamed_addr constant [34 x i8] c"Writing zero-length unknown chunk\00", align 1
@.str.23.535 = private unnamed_addr constant [7 x i8] c"1.6.40\00", align 1
@.str.24.536 = private unnamed_addr constant [32 x i8] c"png_image_write_: out of memory\00", align 1
@.str.25.534 = private unnamed_addr constant [39 x i8] c"png_image_write_to_memory: PNG too big\00", align 1
@.str.26.528 = private unnamed_addr constant [23 x i8] c"memory image too large\00", align 1
@.str.27.529 = private unnamed_addr constant [30 x i8] c"supplied row stride too small\00", align 1
@.str.28.530 = private unnamed_addr constant [27 x i8] c"image row stride too large\00", align 1
@.str.29.531 = private unnamed_addr constant [36 x i8] c"no color-map for color-mapped image\00", align 1
@.str.30.532 = private unnamed_addr constant [44 x i8] c"png_write_image: unsupported transformation\00", align 1
@png_sRGB_base = constant [512 x i16] [i16 128, i16 1782, i16 3383, i16 4644, i16 5675, i16 6564, i16 7357, i16 8074, i16 8732, i16 9346, i16 9921, i16 10463, i16 10977, i16 11466, i16 11935, i16 12384, i16 12816, i16 13233, i16 13634, i16 14024, i16 14402, i16 14769, i16 15125, i16 15473, i16 15812, i16 16142, i16 16466, i16 16781, i16 17090, i16 17393, i16 17690, i16 17981, i16 18266, i16 18546, i16 18822, i16 19093, i16 19359, i16 19621, i16 19879, i16 20133, i16 20383, i16 20630, i16 20873, i16 21113, i16 21349, i16 21583, i16 21813, i16 22041, i16 22265, i16 22487, i16 22707, i16 22923, i16 23138, i16 23350, i16 23559, i16 23767, i16 23972, i16 24175, i16 24376, i16 24575, i16 24772, i16 24967, i16 25160, i16 25352, i16 25542, i16 25730, i16 25916, i16 26101, i16 26284, i16 26465, i16 26645, i16 26823, i16 27000, i16 27176, i16 27350, i16 27523, i16 27695, i16 27865, i16 28034, i16 28201, i16 28368, i16 28533, i16 28697, i16 28860, i16 29021, i16 29182, i16 29341, i16 29500, i16 29657, i16 29813, i16 29969, i16 30123, i16 30276, i16 30429, i16 30580, i16 30730, i16 30880, i16 31028, i16 31176, i16 31323, i16 31469, i16 31614, i16 31758, i16 31902, i16 32045, i16 32186, i16 32327, i16 32468, i16 32607, i16 32746, i16 -32652, i16 -32515, i16 -32378, i16 -32242, i16 -32107, i16 -31972, i16 -31839, i16 -31705, i16 -31573, i16 -31441, i16 -31310, i16 -31179, i16 -31050, i16 -30920, i16 -30792, i16 -30663, i16 -30536, i16 -30409, i16 -30283, i16 -30157, i16 -30032, i16 -29907, i16 -29783, i16 -29660, i16 -29537, i16 -29414, i16 -29292, i16 -29171, i16 -29050, i16 -28930, i16 -28810, i16 -28691, i16 -28572, i16 -28453, i16 -28335, i16 -28218, i16 -28101, i16 -27985, i16 -27868, i16 -27753, i16 -27638, i16 -27523, i16 -27409, i16 -27295, i16 -27182, i16 -27069, i16 -26956, i16 -26844, i16 -26733, i16 -26621, i16 -26510, i16 -26400, i16 -26290, i16 -26180, i16 -26071, i16 -25962, i16 -25854, i16 -25746, i16 -25638, i16 -25531, i16 -25424, i16 -25317, i16 -25211, i16 -25105, i16 -24999, i16 -24894, i16 -24789, i16 -24685, i16 -24581, i16 -24477, i16 -24373, i16 -24270, i16 -24167, i16 -24065, i16 -23963, i16 -23861, i16 -23759, i16 -23658, i16 -23557, i16 -23457, i16 -23357, i16 -23257, i16 -23157, i16 -23058, i16 -22959, i16 -22860, i16 -22761, i16 -22663, i16 -22565, i16 -22468, i16 -22371, i16 -22274, i16 -22177, i16 -22080, i16 -21984, i16 -21888, i16 -21793, i16 -21697, i16 -21602, i16 -21508, i16 -21413, i16 -21319, i16 -21225, i16 -21131, i16 -21037, i16 -20944, i16 -20851, i16 -20758, i16 -20666, i16 -20574, i16 -20482, i16 -20390, i16 -20298, i16 -20207, i16 -20116, i16 -20025, i16 -19935, i16 -19844, i16 -19754, i16 -19664, i16 -19575, i16 -19485, i16 -19396, i16 -19307, i16 -19218, i16 -19130, i16 -19042, i16 -18953, i16 -18866, i16 -18778, i16 -18690, i16 -18603, i16 -18516, i16 -18429, i16 -18343, i16 -18256, i16 -18170, i16 -18084, i16 -17998, i16 -17913, i16 -17827, i16 -17742, i16 -17657, i16 -17572, i16 -17488, i16 -17403, i16 -17319, i16 -17235, i16 -17151, i16 -17068, i16 -16984, i16 -16901, i16 -16818, i16 -16735, i16 -16652, i16 -16570, i16 -16488, i16 -16405, i16 -16323, i16 -16242, i16 -16160, i16 -16078, i16 -15997, i16 -15916, i16 -15835, i16 -15754, i16 -15674, i16 -15593, i16 -15513, i16 -15433, i16 -15353, i16 -15273, i16 -15194, i16 -15114, i16 -15035, i16 -14956, i16 -14877, i16 -14798, i16 -14720, i16 -14641, i16 -14563, i16 -14485, i16 -14407, i16 -14329, i16 -14251, i16 -14174, i16 -14097, i16 -14019, i16 -13942, i16 -13865, i16 -13789, i16 -13712, i16 -13636, i16 -13559, i16 -13483, i16 -13407, i16 -13331, i16 -13256, i16 -13180, i16 -13104, i16 -13029, i16 -12954, i16 -12879, i16 -12804, i16 -12729, i16 -12655, i16 -12580, i16 -12506, i16 -12432, i16 -12358, i16 -12284, i16 -12210, i16 -12136, i16 -12063, i16 -11990, i16 -11916, i16 -11843, i16 -11770, i16 -11697, i16 -11625, i16 -11552, i16 -11480, i16 -11407, i16 -11335, i16 -11263, i16 -11191, i16 -11119, i16 -11047, i16 -10976, i16 -10904, i16 -10833, i16 -10762, i16 -10691, i16 -10620, i16 -10549, i16 -10478, i16 -10407, i16 -10337, i16 -10267, i16 -10196, i16 -10126, i16 -10056, i16 -9986, i16 -9916, i16 -9847, i16 -9777, i16 -9708, i16 -9638, i16 -9569, i16 -9500, i16 -9431, i16 -9362, i16 -9293, i16 -9225, i16 -9156, i16 -9088, i16 -9019, i16 -8951, i16 -8883, i16 -8815, i16 -8747, i16 -8679, i16 -8612, i16 -8544, i16 -8477, i16 -8409, i16 -8342, i16 -8275, i16 -8208, i16 -8141, i16 -8074, i16 -8007, i16 -7941, i16 -7874, i16 -7808, i16 -7741, i16 -7675, i16 -7609, i16 -7543, i16 -7477, i16 -7411, i16 -7345, i16 -7280, i16 -7214, i16 -7149, i16 -7083, i16 -7018, i16 -6953, i16 -6888, i16 -6823, i16 -6758, i16 -6693, i16 -6628, i16 -6564, i16 -6499, i16 -6435, i16 -6371, i16 -6306, i16 -6242, i16 -6178, i16 -6114, i16 -6050, i16 -5987, i16 -5923, i16 -5859, i16 -5796, i16 -5732, i16 -5669, i16 -5606, i16 -5543, i16 -5480, i16 -5417, i16 -5354, i16 -5291, i16 -5228, i16 -5166, i16 -5103, i16 -5041, i16 -4978, i16 -4916, i16 -4854, i16 -4792, i16 -4730, i16 -4668, i16 -4606, i16 -4544, i16 -4482, i16 -4421, i16 -4359, i16 -4298, i16 -4236, i16 -4175, i16 -4114, i16 -4053, i16 -3992, i16 -3931, i16 -3870, i16 -3809, i16 -3748, i16 -3688, i16 -3627, i16 -3567, i16 -3506, i16 -3446, i16 -3386, i16 -3325, i16 -3265, i16 -3205, i16 -3145, i16 -3086, i16 -3026, i16 -2966, i16 -2906, i16 -2847, i16 -2787, i16 -2728, i16 -2669, i16 -2609, i16 -2550, i16 -2491, i16 -2432, i16 -2373, i16 -2314, i16 -2255, i16 -2196, i16 -2138, i16 -2079, i16 -2021, i16 -1962, i16 -1904, i16 -1845, i16 -1787, i16 -1729, i16 -1671, i16 -1613, i16 -1555, i16 -1497, i16 -1439, i16 -1381, i16 -1324, i16 -1266, i16 -1208, i16 -1151, i16 -1093, i16 -1036, i16 -979, i16 -922, i16 -864, i16 -807, i16 -750, i16 -693, i16 -636, i16 -580, i16 -523, i16 -466, i16 -410, i16 -353, i16 -297, i16 -240, i16 -184, i16 -127, i16 -71], align 16
@png_sRGB_delta = constant [512 x i8] c"\CF\C9\9E\81qdalign 16
@.str.31.533 = private unnamed_addr constant [37 x i8] c"png_write_image: internal call error\00", align 1
@__const.png_write_sig.png_signature = private unnamed_addr constant [8 x i8] c"\89PNG\0D\0A\1A\0A", align 1
@.str.555 = private unnamed_addr constant [38 x i8] c"Invalid bit depth for grayscale image\00", align 1
@.str.1.556 = private unnamed_addr constant [32 x i8] c"Invalid bit depth for RGB image\00", align 1
@.str.2.557 = private unnamed_addr constant [37 x i8] c"Invalid bit depth for paletted image\00", align 1
@.str.3.558 = private unnamed_addr constant [44 x i8] c"Invalid bit depth for grayscale+alpha image\00", align 1
@.str.4.559 = private unnamed_addr constant [33 x i8] c"Invalid bit depth for RGBA image\00", align 1
@.str.5.560 = private unnamed_addr constant [35 x i8] c"Invalid image color type specified\00", align 1
@.str.6.561 = private unnamed_addr constant [35 x i8] c"Invalid compression type specified\00", align 1
@.str.7.562 = private unnamed_addr constant [30 x i8] c"Invalid filter type specified\00", align 1
@.str.8.563 = private unnamed_addr constant [33 x i8] c"Invalid interlace type specified\00", align 1
@.str.9.566 = private unnamed_addr constant [36 x i8] c"Invalid number of colors in palette\00", align 1
@.str.10.567 = private unnamed_addr constant [56 x i8] c"Ignoring request to write a PLTE chunk in grayscale PNG\00", align 1
@.str.11.570 = private unnamed_addr constant [35 x i8] c"Z_OK on Z_FINISH with output space\00", align 1
@.str.12.581 = private unnamed_addr constant [40 x i8] c"Invalid sRGB rendering intent specified\00", align 1
@.str.13.584 = private unnamed_addr constant [26 x i8] c"No profile for iCCP chunk\00", align 1
@.str.14.585 = private unnamed_addr constant [22 x i8] c"ICC profile too short\00", align 1
@.str.15.586 = private unnamed_addr constant [49 x i8] c"ICC profile length invalid (not a multiple of 4)\00", align 1
@.str.16.587 = private unnamed_addr constant [38 x i8] c"Profile length does not match profile\00", align 1
@.str.17.588 = private unnamed_addr constant [22 x i8] c"iCCP: invalid keyword\00", align 1
@.str.18.593 = private unnamed_addr constant [22 x i8] c"sPLT: invalid keyword\00", align 1
@.str.19.596 = private unnamed_addr constant [29 x i8] c"Invalid sBIT depth specified\00", align 1
@.str.20.601 = private unnamed_addr constant [47 x i8] c"Invalid number of transparent colors specified\00", align 1
@.str.21.602 = private unnamed_addr constant [64 x i8] c"Ignoring attempt to write tRNS chunk out-of-range for bit_depth\00", align 1
@.str.22.603 = private unnamed_addr constant [64 x i8] c"Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8\00", align 1
@.str.23.604 = private unnamed_addr constant [39 x i8] c"Can't write tRNS with an alpha channel\00", align 1
@.str.24.607 = private unnamed_addr constant [33 x i8] c"Invalid background palette index\00", align 1
@.str.25.608 = private unnamed_addr constant [64 x i8] c"Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8\00", align 1
@.str.26.609 = private unnamed_addr constant [64 x i8] c"Ignoring attempt to write bKGD chunk out-of-range for bit_depth\00", align 1
@.str.27.614 = private unnamed_addr constant [46 x i8] c"Invalid number of histogram entries specified\00", align 1
@.str.28.617 = private unnamed_addr constant [22 x i8] c"tEXt: invalid keyword\00", align 1
@.str.29.618 = private unnamed_addr constant [20 x i8] c"tEXt: text too long\00", align 1
@.str.30.621 = private unnamed_addr constant [31 x i8] c"zTXt: invalid compression type\00", align 1
@.str.31.622 = private unnamed_addr constant [22 x i8] c"zTXt: invalid keyword\00", align 1
@.str.32.625 = private unnamed_addr constant [22 x i8] c"iTXt: invalid keyword\00", align 1
@.str.33.626 = private unnamed_addr constant [26 x i8] c"iTXt: invalid compression\00", align 1
@.str.34.627 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.35.628 = private unnamed_addr constant [33 x i8] c"iTXt: uncompressed text too long\00", align 1
@.str.36.631 = private unnamed_addr constant [38 x i8] c"Unrecognized unit type for oFFs chunk\00", align 1
@.str.37.634 = private unnamed_addr constant [42 x i8] c"Unrecognized equation type for pCAL chunk\00", align 1
@.str.38.635 = private unnamed_addr constant [22 x i8] c"pCAL: invalid keyword\00", align 1
@.str.39.638 = private unnamed_addr constant [36 x i8] c"Can't write sCAL (buffer too small)\00", align 1
@.str.40.641 = private unnamed_addr constant [38 x i8] c"Unrecognized unit type for pHYs chunk\00", align 1
@.str.41.644 = private unnamed_addr constant [38 x i8] c"Invalid time specified for tIME chunk\00", align 1
@png_write_start_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@png_write_start_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@png_write_start_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1
@png_write_start_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1
@png_write_finish_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@png_write_finish_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@png_write_finish_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1
@png_write_finish_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1
@png_do_write_interlace.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@png_do_write_interlace.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@.str.42.550 = private unnamed_addr constant [27 x i8] c"length exceeds PNG maximum\00", align 1
@.str.43.571 = private unnamed_addr constant [15 x i8] c" using zstream\00", align 1
@.str.44.572 = private unnamed_addr constant [15 x i8] c"in use by IDAT\00", align 1
@.str.45.573 = private unnamed_addr constant [28 x i8] c"deflateEnd failed (ignored)\00", align 1
@.str.46.574 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@.str.47.590 = private unnamed_addr constant [25 x i8] c"compressed data too long\00", align 1
@.str.48.589 = private unnamed_addr constant [48 x i8] c"error writing ancillary chunked compressed data\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sig_bytes(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  store i32 %6, i32* %5, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  br label %24

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %13, %10
  %15 = load i32, i32* %5, align 4
  %16 = icmp ugt i32 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %18, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

19:                                               ; preds = %14
  %20 = load i32, i32* %5, align 4
  %21 = trunc i32 %20 to i8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 67
  store i8 %21, i8* %23, align 1
  br label %24

24:                                               ; preds = %19, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_sig_cmp(i8* noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca [8 x i8], align 1
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %9 = bitcast [8 x i8]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.png_sig_cmp.png_signature, i32 0, i32 0), i64 8, i1 false)
  %10 = load i64, i64* %7, align 8
  %11 = icmp ugt i64 %10, 8
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  store i64 8, i64* %7, align 8
  br label %18

13:                                               ; preds = %3
  %14 = load i64, i64* %7, align 8
  %15 = icmp ult i64 %14, 1
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  store i32 -1, i32* %4, align 4
  br label %38

17:                                               ; preds = %13
  br label %18

18:                                               ; preds = %17, %12
  %19 = load i64, i64* %6, align 8
  %20 = icmp ugt i64 %19, 7
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store i32 -1, i32* %4, align 4
  br label %38

22:                                               ; preds = %18
  %23 = load i64, i64* %6, align 8
  %24 = load i64, i64* %7, align 8
  %25 = add i64 %23, %24
  %26 = icmp ugt i64 %25, 8
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = load i64, i64* %6, align 8
  %29 = sub i64 8, %28
  store i64 %29, i64* %7, align 8
  br label %30

30:                                               ; preds = %27, %22
  %31 = load i8*, i8** %5, align 8
  %32 = load i64, i64* %6, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = load i64, i64* %6, align 8
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %8, i64 0, i64 %34
  %36 = load i64, i64* %7, align 8
  %37 = call i32 @memcmp(i8* noundef %33, i8* noundef %35, i64 noundef %36) #14
  store i32 %37, i32* %4, align 4
  br label %38

38:                                               ; preds = %30, %21, %16
  %39 = load i32, i32* %4, align 4
  ret i32 %39
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly willreturn
declare i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_zalloc(i8* noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %9 = load i32, i32* %7, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %8, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  br label %33

14:                                               ; preds = %3
  %15 = load i32, i32* %6, align 4
  %16 = zext i32 %15 to i64
  %17 = load i32, i32* %7, align 4
  %18 = zext i32 %17 to i64
  %19 = udiv i64 -1, %18
  %20 = icmp uge i64 %16, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = load i8*, i8** %5, align 8
  %23 = bitcast i8* %22 to %struct.png_struct_def*
  call void @png_warning(%struct.png_struct_def* noundef %23, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0))
  store i8* null, i8** %4, align 8
  br label %33

24:                                               ; preds = %14
  %25 = load i32, i32* %6, align 4
  %26 = zext i32 %25 to i64
  %27 = load i64, i64* %8, align 8
  %28 = mul i64 %27, %26
  store i64 %28, i64* %8, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = bitcast i8* %29 to %struct.png_struct_def*
  %31 = load i64, i64* %8, align 8
  %32 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %30, i64 noundef %31)
  store i8* %32, i8** %4, align 8
  br label %33

33:                                               ; preds = %24, %21, %13
  %34 = load i8*, i8** %4, align 8
  ret i8* %34
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_zfree(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = bitcast i8* %5 to %struct.png_struct_def*
  %7 = load i8*, i8** %4, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %6, i8* noundef %7)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_reset_crc(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0)
  %4 = trunc i64 %3 to i32
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 51
  store i32 %4, i32* %6, align 4
  ret void
}

declare i64 @crc32(i64 noundef, i8* noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_calculate_crc(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  store i32 1, i32* %7, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 44
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 29
  %14 = and i32 1, %13
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 16
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 768
  %21 = icmp eq i32 %20, 768
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  br label %23

23:                                               ; preds = %22, %16
  br label %32

24:                                               ; preds = %3
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 16
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 2048
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  store i32 0, i32* %7, align 4
  br label %31

31:                                               ; preds = %30, %24
  br label %32

32:                                               ; preds = %31, %23
  %33 = load i32, i32* %7, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %70

35:                                               ; preds = %32
  %36 = load i64, i64* %6, align 8
  %37 = icmp ugt i64 %36, 0
  br i1 %37, label %38, label %70

38:                                               ; preds = %35
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 51
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  store i64 %42, i64* %8, align 8
  br label %43

43:                                               ; preds = %62, %38
  %44 = load i64, i64* %6, align 8
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %9, align 4
  %46 = load i32, i32* %9, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  store i32 -1, i32* %9, align 4
  br label %49

49:                                               ; preds = %48, %43
  %50 = load i64, i64* %8, align 8
  %51 = load i8*, i8** %5, align 8
  %52 = load i32, i32* %9, align 4
  %53 = call i64 @crc32(i64 noundef %50, i8* noundef %51, i32 noundef %52)
  store i64 %53, i64* %8, align 8
  %54 = load i32, i32* %9, align 4
  %55 = load i8*, i8** %5, align 8
  %56 = zext i32 %54 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  store i8* %57, i8** %5, align 8
  %58 = load i32, i32* %9, align 4
  %59 = zext i32 %58 to i64
  %60 = load i64, i64* %6, align 8
  %61 = sub i64 %60, %59
  store i64 %61, i64* %6, align 8
  br label %62

62:                                               ; preds = %49
  %63 = load i64, i64* %6, align 8
  %64 = icmp ugt i64 %63, 0
  br i1 %64, label %43, label %65, !llvm.loop !5

65:                                               ; preds = %62
  %66 = load i64, i64* %8, align 8
  %67 = trunc i64 %66 to i32
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 51
  store i32 %67, i32* %69, align 4
  br label %70

70:                                               ; preds = %65, %35, %32
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_user_version_check(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca [128 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %66

12:                                               ; preds = %2
  store i32 -1, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %13

13:                                               ; preds = %63, %12
  %14 = load i32, i32* %6, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %6, align 4
  %16 = load i8*, i8** %5, align 8
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.2, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp ne i32 %21, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %13
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 16
  %31 = load i32, i32* %30, align 8
  %32 = or i32 %31, 131072
  store i32 %32, i32* %30, align 8
  br label %33

33:                                               ; preds = %28, %13
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 46
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %7, align 4
  br label %44

44:                                               ; preds = %41, %33
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %7, align 4
  %47 = icmp slt i32 %46, 2
  br i1 %47, label %48, label %63

48:                                               ; preds = %45
  %49 = load i8*, i8** %5, align 8
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.2, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp ne i32 %61, 0
  br label %63

63:                                               ; preds = %56, %48, %45
  %64 = phi i1 [ false, %48 ], [ false, %45 ], [ %62, %56 ]
  br i1 %64, label %13, label %65, !llvm.loop !7

65:                                               ; preds = %63
  br label %71

66:                                               ; preds = %2
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 16
  %69 = load i32, i32* %68, align 8
  %70 = or i32 %69, 131072
  store i32 %70, i32* %68, align 8
  br label %71

71:                                               ; preds = %66, %65
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %73 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 16
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 131072
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %94

77:                                               ; preds = %71
  store i64 0, i64* %8, align 8
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %79 = load i64, i64* %8, align 8
  %80 = call i64 @png_safecat(i8* noundef %78, i64 noundef 128, i64 noundef %79, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  store i64 %80, i64* %8, align 8
  %81 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %82 = load i64, i64* %8, align 8
  %83 = load i8*, i8** %5, align 8
  %84 = call i64 @png_safecat(i8* noundef %81, i64 noundef 128, i64 noundef %82, i8* noundef %83)
  store i64 %84, i64* %8, align 8
  %85 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %86 = load i64, i64* %8, align 8
  %87 = call i64 @png_safecat(i8* noundef %85, i64 noundef 128, i64 noundef %86, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  store i64 %87, i64* %8, align 8
  %88 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %89 = load i64, i64* %8, align 8
  %90 = call i64 @png_safecat(i8* noundef %88, i64 noundef 128, i64 noundef %89, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  store i64 %90, i64* %8, align 8
  %91 = load i64, i64* %8, align 8
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %93 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  call void @png_warning(%struct.png_struct_def* noundef %92, i8* noundef %93)
  store i32 0, i32* %3, align 4
  br label %95

94:                                               ; preds = %71
  store i32 1, i32* %3, align 4
  br label %95

95:                                               ; preds = %94, %77
  %96 = load i32, i32* %3, align 4
  ret i32 %96
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias %struct.png_struct_def* @png_create_png_struct(i8* noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*)* noundef %2, void (%struct.png_struct_def*, i8*)* noundef %3, i8* noundef %4, i8* (%struct.png_struct_def*, i64)* noundef %5, void (%struct.png_struct_def*, i8*)* noundef %6) #0 {
  %8 = alloca %struct.png_struct_def*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %12 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8* (%struct.png_struct_def*, i64)*, align 8
  %15 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %16 = alloca %struct.png_struct_def, align 8
  %17 = alloca [1 x %struct.__jmp_buf_tag], align 16
  %18 = alloca %struct.png_struct_def*, align 8
  store i8* %0, i8** %9, align 8
  store i8* %1, i8** %10, align 8
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %11, align 8
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %12, align 8
  store i8* %4, i8** %13, align 8
  store i8* (%struct.png_struct_def*, i64)* %5, i8* (%struct.png_struct_def*, i64)** %14, align 8
  store void (%struct.png_struct_def*, i8*)* %6, void (%struct.png_struct_def*, i8*)** %15, align 8
  %19 = bitcast %struct.png_struct_def* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 1264, i1 false)
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 133
  store i32 1000000, i32* %20, align 4
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 134
  store i32 1000000, i32* %21, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 135
  store i32 1000, i32* %22, align 4
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 136
  store i64 8000000, i64* %23, align 8
  %24 = load i8*, i8** %13, align 8
  %25 = load i8* (%struct.png_struct_def*, i64)*, i8* (%struct.png_struct_def*, i64)** %14, align 8
  %26 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %15, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8* (%struct.png_struct_def.62*, i64)*, void (%struct.png_struct_def.62*, i8*)*)* @png_set_mem_fn to void (%struct.png_struct_def*, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*)*)(%struct.png_struct_def* noundef %16, i8* noundef %24, i8* (%struct.png_struct_def*, i64)* noundef %25, void (%struct.png_struct_def*, i8*)* noundef %26)
  %27 = load i8*, i8** %10, align 8
  %28 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %11, align 8
  %29 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %12, align 8
  call void @png_set_error_fn(%struct.png_struct_def* noundef %16, i8* noundef %27, void (%struct.png_struct_def*, i8*)* noundef %28, void (%struct.png_struct_def*, i8*)* noundef %29)
  %30 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %17, i64 0, i64 0
  %31 = call i32 @_setjmp(%struct.__jmp_buf_tag* noundef %30) #15
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %63, label %33

33:                                               ; preds = %7
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 2
  store [1 x %struct.__jmp_buf_tag]* %17, [1 x %struct.__jmp_buf_tag]** %34, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 3
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* @longjmp, void (%struct.__jmp_buf_tag*, i32)** %36, align 8
  %37 = load i8*, i8** %9, align 8
  %38 = call i32 @png_user_version_check(%struct.png_struct_def* noundef %16, i8* noundef %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %62

40:                                               ; preds = %33
  %41 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %16, i64 noundef 1264)
  %42 = bitcast i8* %41 to %struct.png_struct_def*
  store %struct.png_struct_def* %42, %struct.png_struct_def** %18, align 8
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %18, align 8
  %44 = icmp ne %struct.png_struct_def* %43, null
  br i1 %44, label %45, label %61

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 19
  %47 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %46, i32 0, i32 8
  store i8* (i8*, i32, i32)* @png_zalloc, i8* (i8*, i32, i32)** %47, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 19
  %49 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %48, i32 0, i32 9
  store void (i8*, i8*)* @png_zfree, void (i8*, i8*)** %49, align 8
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %18, align 8
  %51 = bitcast %struct.png_struct_def* %50 to i8*
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 19
  %53 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %52, i32 0, i32 10
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 2
  store [1 x %struct.__jmp_buf_tag]* null, [1 x %struct.__jmp_buf_tag]** %54, align 8
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 3
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* null, void (%struct.__jmp_buf_tag*, i32)** %56, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %18, align 8
  %58 = bitcast %struct.png_struct_def* %57 to i8*
  %59 = bitcast %struct.png_struct_def* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 1264, i1 false)
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %18, align 8
  store %struct.png_struct_def* %60, %struct.png_struct_def** %8, align 8
  br label %64

61:                                               ; preds = %40
  br label %62

62:                                               ; preds = %61, %33
  br label %63

63:                                               ; preds = %62, %7
  store %struct.png_struct_def* null, %struct.png_struct_def** %8, align 8
  br label %64

64:                                               ; preds = %63, %45
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  ret %struct.png_struct_def* %65
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag* noundef) #5

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag* noundef, i32 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define noalias %struct.png_info_def* @png_create_info_struct(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_info_def*, align 8
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store %struct.png_info_def* null, %struct.png_info_def** %2, align 8
  br label %19

8:                                                ; preds = %1
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %9, i64 noundef 360)
  %11 = bitcast i8* %10 to %struct.png_info_def*
  store %struct.png_info_def* %11, %struct.png_info_def** %4, align 8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %13 = icmp ne %struct.png_info_def* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %16 = bitcast %struct.png_info_def* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 360, i1 false)
  br label %17

17:                                               ; preds = %14, %8
  %18 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  store %struct.png_info_def* %18, %struct.png_info_def** %2, align 8
  br label %19

19:                                               ; preds = %17, %7
  %20 = load %struct.png_info_def*, %struct.png_info_def** %2, align 8
  ret %struct.png_info_def* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_destroy_info_struct(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def** noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def**, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def** %1, %struct.png_info_def*** %4, align 8
  store %struct.png_info_def* null, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  br label %27

9:                                                ; preds = %2
  %10 = load %struct.png_info_def**, %struct.png_info_def*** %4, align 8
  %11 = icmp ne %struct.png_info_def** %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = load %struct.png_info_def**, %struct.png_info_def*** %4, align 8
  %14 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  store %struct.png_info_def* %14, %struct.png_info_def** %5, align 8
  br label %15

15:                                               ; preds = %12, %9
  %16 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %17 = icmp ne %struct.png_info_def* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %15
  %19 = load %struct.png_info_def**, %struct.png_info_def*** %4, align 8
  store %struct.png_info_def* null, %struct.png_info_def** %19, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %21 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %20, %struct.png_info_def* noundef %21, i32 noundef 65535, i32 noundef -1)
  %22 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %23 = bitcast %struct.png_info_def* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 360, i1 false)
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %25 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %26 = bitcast %struct.png_info_def* %25 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %24, i8* noundef %26)
  br label %27

27:                                               ; preds = %8, %18, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_free_data(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %15 = icmp eq %struct.png_struct_def* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %18 = icmp eq %struct.png_info_def* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16, %4
  br label %511

20:                                               ; preds = %16
  %21 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %22 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %21, i32 0, i32 22
  %23 = load %struct.png_text_struct*, %struct.png_text_struct** %22, align 8
  %24 = icmp ne %struct.png_text_struct* %23, null
  br i1 %24, label %25, label %86

25:                                               ; preds = %20
  %26 = load i32, i32* %7, align 4
  %27 = and i32 %26, 16384
  %28 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 45
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %27, %30
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %86

33:                                               ; preds = %25
  %34 = load i32, i32* %8, align 4
  %35 = icmp ne i32 %34, -1
  br i1 %35, label %36, label %53

36:                                               ; preds = %33
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %38 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 22
  %40 = load %struct.png_text_struct*, %struct.png_text_struct** %39, align 8
  %41 = load i32, i32* %8, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %40, i64 %42
  %44 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %37, i8* noundef %45)
  %46 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 22
  %48 = load %struct.png_text_struct*, %struct.png_text_struct** %47, align 8
  %49 = load i32, i32* %8, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %48, i64 %50
  %52 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %51, i32 0, i32 1
  store i8* null, i8** %52, align 8
  br label %85

53:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  br label %54

54:                                               ; preds = %70, %53
  %55 = load i32, i32* %9, align 4
  %56 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %56, i32 0, i32 20
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %55, %58
  br i1 %59, label %60, label %73

60:                                               ; preds = %54
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %62 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %63 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %62, i32 0, i32 22
  %64 = load %struct.png_text_struct*, %struct.png_text_struct** %63, align 8
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %64, i64 %66
  %68 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %67, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %61, i8* noundef %69)
  br label %70

70:                                               ; preds = %60
  %71 = load i32, i32* %9, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %9, align 4
  br label %54, !llvm.loop !8

73:                                               ; preds = %54
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %75 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %76 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %75, i32 0, i32 22
  %77 = load %struct.png_text_struct*, %struct.png_text_struct** %76, align 8
  %78 = bitcast %struct.png_text_struct* %77 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %74, i8* noundef %78)
  %79 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %80 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %79, i32 0, i32 22
  store %struct.png_text_struct* null, %struct.png_text_struct** %80, align 8
  %81 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %82 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %81, i32 0, i32 20
  store i32 0, i32* %82, align 4
  %83 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %84 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %83, i32 0, i32 21
  store i32 0, i32* %84, align 8
  br label %85

85:                                               ; preds = %73, %36
  br label %86

86:                                               ; preds = %85, %25, %20
  %87 = load i32, i32* %7, align 4
  %88 = and i32 %87, 8192
  %89 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %90 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %89, i32 0, i32 45
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %88, %91
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %86
  %95 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %96 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %95, i32 0, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, -17
  store i32 %98, i32* %96, align 8
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %100 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %101 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %100, i32 0, i32 25
  %102 = load i8*, i8** %101, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %99, i8* noundef %102)
  %103 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 25
  store i8* null, i8** %104, align 8
  %105 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %106 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %105, i32 0, i32 6
  store i16 0, i16* %106, align 2
  br label %107

107:                                              ; preds = %94, %86
  %108 = load i32, i32* %7, align 4
  %109 = and i32 %108, 256
  %110 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %111 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %110, i32 0, i32 45
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %109, %112
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %132

115:                                              ; preds = %107
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %117 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %118 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %117, i32 0, i32 51
  %119 = load i8*, i8** %118, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %116, i8* noundef %119)
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %121 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %122 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %121, i32 0, i32 52
  %123 = load i8*, i8** %122, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %120, i8* noundef %123)
  %124 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %125 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %124, i32 0, i32 51
  store i8* null, i8** %125, align 8
  %126 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %127 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %126, i32 0, i32 52
  store i8* null, i8** %127, align 8
  %128 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %129 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %128, i32 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, -16385
  store i32 %131, i32* %129, align 8
  br label %132

132:                                              ; preds = %115, %107
  %133 = load i32, i32* %7, align 4
  %134 = and i32 %133, 128
  %135 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %136 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %135, i32 0, i32 45
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %134, %137
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %190

140:                                              ; preds = %132
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %142 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %143 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %142, i32 0, i32 38
  %144 = load i8*, i8** %143, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %141, i8* noundef %144)
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %146 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %147 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %146, i32 0, i32 41
  %148 = load i8*, i8** %147, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %145, i8* noundef %148)
  %149 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %150 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %149, i32 0, i32 38
  store i8* null, i8** %150, align 8
  %151 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %152 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %151, i32 0, i32 41
  store i8* null, i8** %152, align 8
  %153 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %154 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %153, i32 0, i32 42
  %155 = load i8**, i8*** %154, align 8
  %156 = icmp ne i8** %155, null
  br i1 %156, label %157, label %185

157:                                              ; preds = %140
  store i32 0, i32* %10, align 4
  br label %158

158:                                              ; preds = %174, %157
  %159 = load i32, i32* %10, align 4
  %160 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %161 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %160, i32 0, i32 44
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp slt i32 %159, %163
  br i1 %164, label %165, label %177

165:                                              ; preds = %158
  %166 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %167 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %168 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %167, i32 0, i32 42
  %169 = load i8**, i8*** %168, align 8
  %170 = load i32, i32* %10, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8*, i8** %169, i64 %171
  %173 = load i8*, i8** %172, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %166, i8* noundef %173)
  br label %174

174:                                              ; preds = %165
  %175 = load i32, i32* %10, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %10, align 4
  br label %158, !llvm.loop !9

177:                                              ; preds = %158
  %178 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %179 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %180 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %179, i32 0, i32 42
  %181 = load i8**, i8*** %180, align 8
  %182 = bitcast i8** %181 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %178, i8* noundef %182)
  %183 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %184 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %183, i32 0, i32 42
  store i8** null, i8*** %184, align 8
  br label %185

185:                                              ; preds = %177, %140
  %186 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %187 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %186, i32 0, i32 2
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, -1025
  store i32 %189, i32* %187, align 8
  br label %190

190:                                              ; preds = %185, %132
  %191 = load i32, i32* %7, align 4
  %192 = and i32 %191, 16
  %193 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %194 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %193, i32 0, i32 45
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %192, %195
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %215

198:                                              ; preds = %190
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %200 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %201 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %200, i32 0, i32 17
  %202 = load i8*, i8** %201, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %199, i8* noundef %202)
  %203 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %204 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %205 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %204, i32 0, i32 18
  %206 = load i8*, i8** %205, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %203, i8* noundef %206)
  %207 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %208 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %207, i32 0, i32 17
  store i8* null, i8** %208, align 8
  %209 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %210 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %209, i32 0, i32 18
  store i8* null, i8** %210, align 8
  %211 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %212 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %211, i32 0, i32 2
  %213 = load i32, i32* %212, align 8
  %214 = and i32 %213, -4097
  store i32 %214, i32* %212, align 8
  br label %215

215:                                              ; preds = %198, %190
  %216 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %217 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %216, i32 0, i32 48
  %218 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %217, align 8
  %219 = icmp ne %struct.png_sPLT_struct* %218, null
  br i1 %219, label %220, label %310

220:                                              ; preds = %215
  %221 = load i32, i32* %7, align 4
  %222 = and i32 %221, 32
  %223 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %224 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %223, i32 0, i32 45
  %225 = load i32, i32* %224, align 4
  %226 = and i32 %222, %225
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %228, label %310

228:                                              ; preds = %220
  %229 = load i32, i32* %8, align 4
  %230 = icmp ne i32 %229, -1
  br i1 %230, label %231, label %265

231:                                              ; preds = %228
  %232 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %233 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %234 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %233, i32 0, i32 48
  %235 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %234, align 8
  %236 = load i32, i32* %8, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %235, i64 %237
  %239 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %238, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %232, i8* noundef %240)
  %241 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %242 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %243 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %242, i32 0, i32 48
  %244 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %243, align 8
  %245 = load i32, i32* %8, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %244, i64 %246
  %248 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %247, i32 0, i32 2
  %249 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %248, align 8
  %250 = bitcast %struct.png_sPLT_entry_struct* %249 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %241, i8* noundef %250)
  %251 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %252 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %251, i32 0, i32 48
  %253 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %252, align 8
  %254 = load i32, i32* %8, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %253, i64 %255
  %257 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %256, i32 0, i32 0
  store i8* null, i8** %257, align 8
  %258 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %259 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %258, i32 0, i32 48
  %260 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %259, align 8
  %261 = load i32, i32* %8, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %260, i64 %262
  %264 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %263, i32 0, i32 2
  store %struct.png_sPLT_entry_struct* null, %struct.png_sPLT_entry_struct** %264, align 8
  br label %309

265:                                              ; preds = %228
  store i32 0, i32* %11, align 4
  br label %266

266:                                              ; preds = %292, %265
  %267 = load i32, i32* %11, align 4
  %268 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %269 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %268, i32 0, i32 49
  %270 = load i32, i32* %269, align 8
  %271 = icmp slt i32 %267, %270
  br i1 %271, label %272, label %295

272:                                              ; preds = %266
  %273 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %274 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %275 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %274, i32 0, i32 48
  %276 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %275, align 8
  %277 = load i32, i32* %11, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %276, i64 %278
  %280 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %279, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %273, i8* noundef %281)
  %282 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %283 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %284 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %283, i32 0, i32 48
  %285 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %284, align 8
  %286 = load i32, i32* %11, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %285, i64 %287
  %289 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %288, i32 0, i32 2
  %290 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %289, align 8
  %291 = bitcast %struct.png_sPLT_entry_struct* %290 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %282, i8* noundef %291)
  br label %292

292:                                              ; preds = %272
  %293 = load i32, i32* %11, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %11, align 4
  br label %266, !llvm.loop !10

295:                                              ; preds = %266
  %296 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %297 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %298 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %297, i32 0, i32 48
  %299 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %298, align 8
  %300 = bitcast %struct.png_sPLT_struct* %299 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %296, i8* noundef %300)
  %301 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %302 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %301, i32 0, i32 48
  store %struct.png_sPLT_struct* null, %struct.png_sPLT_struct** %302, align 8
  %303 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %304 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %303, i32 0, i32 49
  store i32 0, i32* %304, align 8
  %305 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %306 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %305, i32 0, i32 2
  %307 = load i32, i32* %306, align 8
  %308 = and i32 %307, -8193
  store i32 %308, i32* %306, align 8
  br label %309

309:                                              ; preds = %295, %231
  br label %310

310:                                              ; preds = %309, %220, %215
  %311 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %312 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %311, i32 0, i32 46
  %313 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %312, align 8
  %314 = icmp ne %struct.png_unknown_chunk_t* %313, null
  br i1 %314, label %315, label %374

315:                                              ; preds = %310
  %316 = load i32, i32* %7, align 4
  %317 = and i32 %316, 512
  %318 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %319 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %318, i32 0, i32 45
  %320 = load i32, i32* %319, align 4
  %321 = and i32 %317, %320
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %323, label %374

323:                                              ; preds = %315
  %324 = load i32, i32* %8, align 4
  %325 = icmp ne i32 %324, -1
  br i1 %325, label %326, label %343

326:                                              ; preds = %323
  %327 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %328 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %329 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %328, i32 0, i32 46
  %330 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %329, align 8
  %331 = load i32, i32* %8, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %330, i64 %332
  %334 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %333, i32 0, i32 1
  %335 = load i8*, i8** %334, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %327, i8* noundef %335)
  %336 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %337 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %336, i32 0, i32 46
  %338 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %337, align 8
  %339 = load i32, i32* %8, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %338, i64 %340
  %342 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %341, i32 0, i32 1
  store i8* null, i8** %342, align 8
  br label %373

343:                                              ; preds = %323
  store i32 0, i32* %12, align 4
  br label %344

344:                                              ; preds = %360, %343
  %345 = load i32, i32* %12, align 4
  %346 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %347 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %346, i32 0, i32 47
  %348 = load i32, i32* %347, align 8
  %349 = icmp slt i32 %345, %348
  br i1 %349, label %350, label %363

350:                                              ; preds = %344
  %351 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %352 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %353 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %352, i32 0, i32 46
  %354 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %353, align 8
  %355 = load i32, i32* %12, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %354, i64 %356
  %358 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %357, i32 0, i32 1
  %359 = load i8*, i8** %358, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %351, i8* noundef %359)
  br label %360

360:                                              ; preds = %350
  %361 = load i32, i32* %12, align 4
  %362 = add nsw i32 %361, 1
  store i32 %362, i32* %12, align 4
  br label %344, !llvm.loop !11

363:                                              ; preds = %344
  %364 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %365 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %366 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %365, i32 0, i32 46
  %367 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %366, align 8
  %368 = bitcast %struct.png_unknown_chunk_t* %367 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %364, i8* noundef %368)
  %369 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %370 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %369, i32 0, i32 46
  store %struct.png_unknown_chunk_t* null, %struct.png_unknown_chunk_t** %370, align 8
  %371 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %372 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %371, i32 0, i32 47
  store i32 0, i32* %372, align 8
  br label %373

373:                                              ; preds = %363, %326
  br label %374

374:                                              ; preds = %373, %315, %310
  %375 = load i32, i32* %7, align 4
  %376 = and i32 %375, 32768
  %377 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %378 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %377, i32 0, i32 45
  %379 = load i32, i32* %378, align 4
  %380 = and i32 %376, %379
  %381 = icmp ne i32 %380, 0
  br i1 %381, label %382, label %411

382:                                              ; preds = %374
  %383 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %384 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %383, i32 0, i32 36
  %385 = load i8*, i8** %384, align 8
  %386 = icmp ne i8* %385, null
  br i1 %386, label %387, label %394

387:                                              ; preds = %382
  %388 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %389 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %390 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %389, i32 0, i32 36
  %391 = load i8*, i8** %390, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %388, i8* noundef %391)
  %392 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %393 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %392, i32 0, i32 36
  store i8* null, i8** %393, align 8
  br label %394

394:                                              ; preds = %387, %382
  %395 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %396 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %395, i32 0, i32 35
  %397 = load i8*, i8** %396, align 8
  %398 = icmp ne i8* %397, null
  br i1 %398, label %399, label %406

399:                                              ; preds = %394
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %401 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %402 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %401, i32 0, i32 35
  %403 = load i8*, i8** %402, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %400, i8* noundef %403)
  %404 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %405 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %404, i32 0, i32 35
  store i8* null, i8** %405, align 8
  br label %406

406:                                              ; preds = %399, %394
  %407 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %408 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %407, i32 0, i32 2
  %409 = load i32, i32* %408, align 8
  %410 = and i32 %409, -65537
  store i32 %410, i32* %408, align 8
  br label %411

411:                                              ; preds = %406, %374
  %412 = load i32, i32* %7, align 4
  %413 = and i32 %412, 8
  %414 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %415 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %414, i32 0, i32 45
  %416 = load i32, i32* %415, align 4
  %417 = and i32 %413, %416
  %418 = icmp ne i32 %417, 0
  br i1 %418, label %419, label %431

419:                                              ; preds = %411
  %420 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %421 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %422 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %421, i32 0, i32 37
  %423 = load i16*, i16** %422, align 8
  %424 = bitcast i16* %423 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %420, i8* noundef %424)
  %425 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %426 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %425, i32 0, i32 37
  store i16* null, i16** %426, align 8
  %427 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %428 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %427, i32 0, i32 2
  %429 = load i32, i32* %428, align 8
  %430 = and i32 %429, -65
  store i32 %430, i32* %428, align 8
  br label %431

431:                                              ; preds = %419, %411
  %432 = load i32, i32* %7, align 4
  %433 = and i32 %432, 4096
  %434 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %435 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %434, i32 0, i32 45
  %436 = load i32, i32* %435, align 4
  %437 = and i32 %433, %436
  %438 = icmp ne i32 %437, 0
  br i1 %438, label %439, label %453

439:                                              ; preds = %431
  %440 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %441 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %442 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %441, i32 0, i32 4
  %443 = load %struct.png_color_struct*, %struct.png_color_struct** %442, align 8
  %444 = bitcast %struct.png_color_struct* %443 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %440, i8* noundef %444)
  %445 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %446 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %445, i32 0, i32 4
  store %struct.png_color_struct* null, %struct.png_color_struct** %446, align 8
  %447 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %448 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %447, i32 0, i32 2
  %449 = load i32, i32* %448, align 8
  %450 = and i32 %449, -9
  store i32 %450, i32* %448, align 8
  %451 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %452 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %451, i32 0, i32 5
  store i16 0, i16* %452, align 8
  br label %453

453:                                              ; preds = %439, %431
  %454 = load i32, i32* %7, align 4
  %455 = and i32 %454, 64
  %456 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %457 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %456, i32 0, i32 45
  %458 = load i32, i32* %457, align 4
  %459 = and i32 %455, %458
  %460 = icmp ne i32 %459, 0
  br i1 %460, label %461, label %498

461:                                              ; preds = %453
  %462 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %463 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %462, i32 0, i32 53
  %464 = load i8**, i8*** %463, align 8
  %465 = icmp ne i8** %464, null
  br i1 %465, label %466, label %493

466:                                              ; preds = %461
  store i32 0, i32* %13, align 4
  br label %467

467:                                              ; preds = %482, %466
  %468 = load i32, i32* %13, align 4
  %469 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %470 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %469, i32 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = icmp ult i32 %468, %471
  br i1 %472, label %473, label %485

473:                                              ; preds = %467
  %474 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %475 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %476 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %475, i32 0, i32 53
  %477 = load i8**, i8*** %476, align 8
  %478 = load i32, i32* %13, align 4
  %479 = zext i32 %478 to i64
  %480 = getelementptr inbounds i8*, i8** %477, i64 %479
  %481 = load i8*, i8** %480, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %474, i8* noundef %481)
  br label %482

482:                                              ; preds = %473
  %483 = load i32, i32* %13, align 4
  %484 = add i32 %483, 1
  store i32 %484, i32* %13, align 4
  br label %467, !llvm.loop !12

485:                                              ; preds = %467
  %486 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %487 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %488 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %487, i32 0, i32 53
  %489 = load i8**, i8*** %488, align 8
  %490 = bitcast i8** %489 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %486, i8* noundef %490)
  %491 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %492 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %491, i32 0, i32 53
  store i8** null, i8*** %492, align 8
  br label %493

493:                                              ; preds = %485, %461
  %494 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %495 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %494, i32 0, i32 2
  %496 = load i32, i32* %495, align 8
  %497 = and i32 %496, -32769
  store i32 %497, i32* %495, align 8
  br label %498

498:                                              ; preds = %493, %453
  %499 = load i32, i32* %8, align 4
  %500 = icmp ne i32 %499, -1
  br i1 %500, label %501, label %504

501:                                              ; preds = %498
  %502 = load i32, i32* %7, align 4
  %503 = and i32 %502, -16929
  store i32 %503, i32* %7, align 4
  br label %504

504:                                              ; preds = %501, %498
  %505 = load i32, i32* %7, align 4
  %506 = xor i32 %505, -1
  %507 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %508 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %507, i32 0, i32 45
  %509 = load i32, i32* %508, align 4
  %510 = and i32 %509, %506
  store i32 %510, i32* %508, align 4
  br label %511

511:                                              ; preds = %504, %19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_info_init_3(%struct.png_info_def** noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.png_info_def**, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_info_def** %0, %struct.png_info_def*** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.png_info_def**, %struct.png_info_def*** %3, align 8
  %7 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  store %struct.png_info_def* %7, %struct.png_info_def** %5, align 8
  %8 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %9 = icmp eq %struct.png_info_def* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  br label %29

11:                                               ; preds = %2
  %12 = load i64, i64* %4, align 8
  %13 = icmp ugt i64 360, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %11
  %15 = load %struct.png_info_def**, %struct.png_info_def*** %3, align 8
  store %struct.png_info_def* null, %struct.png_info_def** %15, align 8
  %16 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %17 = bitcast %struct.png_info_def* %16 to i8*
  call void @free(i8* noundef %17) #16
  %18 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef null, i64 noundef 360)
  %19 = bitcast i8* %18 to %struct.png_info_def*
  store %struct.png_info_def* %19, %struct.png_info_def** %5, align 8
  %20 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %21 = icmp eq %struct.png_info_def* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  br label %29

23:                                               ; preds = %14
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = load %struct.png_info_def**, %struct.png_info_def*** %3, align 8
  store %struct.png_info_def* %24, %struct.png_info_def** %25, align 8
  br label %26

26:                                               ; preds = %23, %11
  %27 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %28 = bitcast %struct.png_info_def* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 360, i1 false)
  br label %29

29:                                               ; preds = %26, %22, %10
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define void @png_data_freer(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %13 = icmp eq %struct.png_info_def* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11, %4
  br label %37

15:                                               ; preds = %11
  %16 = load i32, i32* %7, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = load i32, i32* %8, align 4
  %20 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %21 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %20, i32 0, i32 45
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %22, %19
  store i32 %23, i32* %21, align 4
  br label %37

24:                                               ; preds = %15
  %25 = load i32, i32* %7, align 4
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = load i32, i32* %8, align 4
  %29 = xor i32 %28, -1
  %30 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 45
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, %29
  store i32 %33, i32* %31, align 4
  br label %36

34:                                               ; preds = %24
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

36:                                               ; preds = %27
  br label %37

37:                                               ; preds = %14, %36, %18
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_io_ptr(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 9
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_init_io(%struct.png_struct_def* noalias noundef %0, %struct._IO_FILE* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %13

8:                                                ; preds = %2
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %10 = bitcast %struct._IO_FILE* %9 to i8*
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 9
  store i8* %10, i8** %12, align 8
  br label %13

13:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_save_int_32(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** %3, align 8
  %6 = load i32, i32* %4, align 4
  call void @png_save_uint_32(i8* noundef %5, i32 noundef %6)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_convert_to_rfc1123_buffer(i8* noundef %0, %struct.png_time_struct* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.png_time_struct*, align 8
  %6 = alloca i64, align 8
  %7 = alloca [5 x i8], align 1
  store i8* %0, i8** %4, align 8
  store %struct.png_time_struct* %1, %struct.png_time_struct** %5, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %175

11:                                               ; preds = %2
  %12 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %13 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %12, i32 0, i32 0
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = icmp sgt i32 %15, 9999
  br i1 %16, label %59, label %17

17:                                               ; preds = %11
  %18 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %19 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %18, i32 0, i32 1
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %59, label %23

23:                                               ; preds = %17
  %24 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %25 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %24, i32 0, i32 1
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = icmp sgt i32 %27, 12
  br i1 %28, label %59, label %29

29:                                               ; preds = %23
  %30 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %31 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %30, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %29
  %36 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %37 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %36, i32 0, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp sgt i32 %39, 31
  br i1 %40, label %59, label %41

41:                                               ; preds = %35
  %42 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %43 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %42, i32 0, i32 3
  %44 = load i8, i8* %43, align 2
  %45 = zext i8 %44 to i32
  %46 = icmp sgt i32 %45, 23
  br i1 %46, label %59, label %47

47:                                               ; preds = %41
  %48 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %49 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %48, i32 0, i32 4
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp sgt i32 %51, 59
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %55 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %54, i32 0, i32 5
  %56 = load i8, i8* %55, align 2
  %57 = zext i8 %56 to i32
  %58 = icmp sgt i32 %57, 60
  br i1 %58, label %59, label %60

59:                                               ; preds = %53, %47, %41, %35, %29, %23, %17, %11
  store i32 0, i32* %3, align 4
  br label %175

60:                                               ; preds = %53
  store i64 0, i64* %6, align 8
  %61 = load i8*, i8** %4, align 8
  %62 = load i64, i64* %6, align 8
  %63 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %64 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %65 = getelementptr inbounds i8, i8* %64, i64 5
  %66 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %67 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %66, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = zext i32 %69 to i64
  %71 = call i8* @png_format_number(i8* noundef %63, i8* noundef %65, i32 noundef 1, i64 noundef %70)
  %72 = call i64 @png_safecat(i8* noundef %61, i64 noundef 29, i64 noundef %62, i8* noundef %71)
  store i64 %72, i64* %6, align 8
  %73 = load i64, i64* %6, align 8
  %74 = icmp ult i64 %73, 28
  br i1 %74, label %75, label %80

75:                                               ; preds = %60
  %76 = load i8*, i8** %4, align 8
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %6, align 8
  %79 = getelementptr inbounds i8, i8* %76, i64 %77
  store i8 32, i8* %79, align 1
  br label %80

80:                                               ; preds = %75, %60
  %81 = load i8*, i8** %4, align 8
  %82 = load i64, i64* %6, align 8
  %83 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %84 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %83, i32 0, i32 1
  %85 = load i8, i8* %84, align 2
  %86 = zext i8 %85 to i32
  %87 = sub nsw i32 %86, 1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [12 x [4 x i8]], [12 x [4 x i8]]* @png_convert_to_rfc1123_buffer.short_months, i64 0, i64 %88
  %90 = getelementptr inbounds [4 x i8], [4 x i8]* %89, i64 0, i64 0
  %91 = call i64 @png_safecat(i8* noundef %81, i64 noundef 29, i64 noundef %82, i8* noundef %90)
  store i64 %91, i64* %6, align 8
  %92 = load i64, i64* %6, align 8
  %93 = icmp ult i64 %92, 28
  br i1 %93, label %94, label %99

94:                                               ; preds = %80
  %95 = load i8*, i8** %4, align 8
  %96 = load i64, i64* %6, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %6, align 8
  %98 = getelementptr inbounds i8, i8* %95, i64 %96
  store i8 32, i8* %98, align 1
  br label %99

99:                                               ; preds = %94, %80
  %100 = load i8*, i8** %4, align 8
  %101 = load i64, i64* %6, align 8
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %103 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %104 = getelementptr inbounds i8, i8* %103, i64 5
  %105 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %106 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %105, i32 0, i32 0
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i64
  %109 = call i8* @png_format_number(i8* noundef %102, i8* noundef %104, i32 noundef 1, i64 noundef %108)
  %110 = call i64 @png_safecat(i8* noundef %100, i64 noundef 29, i64 noundef %101, i8* noundef %109)
  store i64 %110, i64* %6, align 8
  %111 = load i64, i64* %6, align 8
  %112 = icmp ult i64 %111, 28
  br i1 %112, label %113, label %118

113:                                              ; preds = %99
  %114 = load i8*, i8** %4, align 8
  %115 = load i64, i64* %6, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %6, align 8
  %117 = getelementptr inbounds i8, i8* %114, i64 %115
  store i8 32, i8* %117, align 1
  br label %118

118:                                              ; preds = %113, %99
  %119 = load i8*, i8** %4, align 8
  %120 = load i64, i64* %6, align 8
  %121 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %122 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %123 = getelementptr inbounds i8, i8* %122, i64 5
  %124 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %125 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %124, i32 0, i32 3
  %126 = load i8, i8* %125, align 2
  %127 = zext i8 %126 to i32
  %128 = zext i32 %127 to i64
  %129 = call i8* @png_format_number(i8* noundef %121, i8* noundef %123, i32 noundef 2, i64 noundef %128)
  %130 = call i64 @png_safecat(i8* noundef %119, i64 noundef 29, i64 noundef %120, i8* noundef %129)
  store i64 %130, i64* %6, align 8
  %131 = load i64, i64* %6, align 8
  %132 = icmp ult i64 %131, 28
  br i1 %132, label %133, label %138

133:                                              ; preds = %118
  %134 = load i8*, i8** %4, align 8
  %135 = load i64, i64* %6, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %6, align 8
  %137 = getelementptr inbounds i8, i8* %134, i64 %135
  store i8 58, i8* %137, align 1
  br label %138

138:                                              ; preds = %133, %118
  %139 = load i8*, i8** %4, align 8
  %140 = load i64, i64* %6, align 8
  %141 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %142 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %143 = getelementptr inbounds i8, i8* %142, i64 5
  %144 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %145 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %144, i32 0, i32 4
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = zext i32 %147 to i64
  %149 = call i8* @png_format_number(i8* noundef %141, i8* noundef %143, i32 noundef 2, i64 noundef %148)
  %150 = call i64 @png_safecat(i8* noundef %139, i64 noundef 29, i64 noundef %140, i8* noundef %149)
  store i64 %150, i64* %6, align 8
  %151 = load i64, i64* %6, align 8
  %152 = icmp ult i64 %151, 28
  br i1 %152, label %153, label %158

153:                                              ; preds = %138
  %154 = load i8*, i8** %4, align 8
  %155 = load i64, i64* %6, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %6, align 8
  %157 = getelementptr inbounds i8, i8* %154, i64 %155
  store i8 58, i8* %157, align 1
  br label %158

158:                                              ; preds = %153, %138
  %159 = load i8*, i8** %4, align 8
  %160 = load i64, i64* %6, align 8
  %161 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %162 = getelementptr inbounds [5 x i8], [5 x i8]* %7, i64 0, i64 0
  %163 = getelementptr inbounds i8, i8* %162, i64 5
  %164 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %165 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %164, i32 0, i32 5
  %166 = load i8, i8* %165, align 2
  %167 = zext i8 %166 to i32
  %168 = zext i32 %167 to i64
  %169 = call i8* @png_format_number(i8* noundef %161, i8* noundef %163, i32 noundef 2, i64 noundef %168)
  %170 = call i64 @png_safecat(i8* noundef %159, i64 noundef 29, i64 noundef %160, i8* noundef %169)
  store i64 %170, i64* %6, align 8
  %171 = load i8*, i8** %4, align 8
  %172 = load i64, i64* %6, align 8
  %173 = call i64 @png_safecat(i8* noundef %171, i64 noundef 29, i64 noundef %172, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0))
  store i64 %173, i64* %6, align 8
  %174 = load i64, i64* %6, align 8
  store i32 1, i32* %3, align 4
  br label %175

175:                                              ; preds = %158, %59, %10
  %176 = load i32, i32* %3, align 4
  ret i32 %176
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_convert_to_rfc1123(%struct.png_struct_def* noalias noundef %0, %struct.png_time_struct* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_time_struct*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_time_struct* %1, %struct.png_time_struct** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %22

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 111
  %11 = getelementptr inbounds [29 x i8], [29 x i8]* %10, i64 0, i64 0
  %12 = load %struct.png_time_struct*, %struct.png_time_struct** %5, align 8
  %13 = call i32 @png_convert_to_rfc1123_buffer(i8* noundef %11, %struct.png_time_struct* noundef %12)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0))
  br label %21

17:                                               ; preds = %8
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 111
  %20 = getelementptr inbounds [29 x i8], [29 x i8]* %19, i64 0, i64 0
  store i8* %20, i8** %3, align 8
  br label %23

21:                                               ; preds = %15
  br label %22

22:                                               ; preds = %21, %2
  store i8* null, i8** %3, align 8
  br label %23

23:                                               ; preds = %22, %17
  %24 = load i8*, i8** %3, align 8
  ret i8* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_copyright(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  ret i8* getelementptr inbounds ([219 x i8], [219 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_libpng_ver(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i8* @png_get_header_ver(%struct.png_struct_def* noundef %3)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_header_ver(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_header_version(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  ret i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_build_grayscale_palette(i32 noundef %0, %struct.png_color_struct* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_color_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store %struct.png_color_struct* %1, %struct.png_color_struct** %4, align 8
  %9 = load %struct.png_color_struct*, %struct.png_color_struct** %4, align 8
  %10 = icmp eq %struct.png_color_struct* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  br label %55

12:                                               ; preds = %2
  %13 = load i32, i32* %3, align 4
  switch i32 %13, label %18 [
    i32 1, label %14
    i32 2, label %15
    i32 4, label %16
    i32 8, label %17
  ]

14:                                               ; preds = %12
  store i32 2, i32* %5, align 4
  store i32 255, i32* %6, align 4
  br label %19

15:                                               ; preds = %12
  store i32 4, i32* %5, align 4
  store i32 85, i32* %6, align 4
  br label %19

16:                                               ; preds = %12
  store i32 16, i32* %5, align 4
  store i32 17, i32* %6, align 4
  br label %19

17:                                               ; preds = %12
  store i32 256, i32* %5, align 4
  store i32 1, i32* %6, align 4
  br label %19

18:                                               ; preds = %12
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %19

19:                                               ; preds = %18, %17, %16, %15, %14
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %20

20:                                               ; preds = %49, %19
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* %5, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %55

24:                                               ; preds = %20
  %25 = load i32, i32* %8, align 4
  %26 = and i32 %25, 255
  %27 = trunc i32 %26 to i8
  %28 = load %struct.png_color_struct*, %struct.png_color_struct** %4, align 8
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %28, i64 %30
  %32 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %31, i32 0, i32 0
  store i8 %27, i8* %32, align 1
  %33 = load i32, i32* %8, align 4
  %34 = and i32 %33, 255
  %35 = trunc i32 %34 to i8
  %36 = load %struct.png_color_struct*, %struct.png_color_struct** %4, align 8
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %36, i64 %38
  %40 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %39, i32 0, i32 1
  store i8 %35, i8* %40, align 1
  %41 = load i32, i32* %8, align 4
  %42 = and i32 %41, 255
  %43 = trunc i32 %42 to i8
  %44 = load %struct.png_color_struct*, %struct.png_color_struct** %4, align 8
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %44, i64 %46
  %48 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %47, i32 0, i32 2
  store i8 %43, i8* %48, align 1
  br label %49

49:                                               ; preds = %24
  %50 = load i32, i32* %7, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %7, align 4
  %52 = load i32, i32* %6, align 4
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %53, %52
  store i32 %54, i32* %8, align 4
  br label %20, !llvm.loop !13

55:                                               ; preds = %11, %20
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_handle_as_unknown(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = load i8*, i8** %5, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 116
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %13, %10, %2
  store i32 0, i32* %3, align 4
  br label %48

19:                                               ; preds = %13
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 117
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %7, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 116
  %26 = load i32, i32* %25, align 4
  %27 = mul i32 %26, 5
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  store i8* %29, i8** %6, align 8
  br label %30

30:                                               ; preds = %43, %19
  %31 = load i8*, i8** %6, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 -5
  store i8* %32, i8** %6, align 8
  %33 = load i8*, i8** %5, align 8
  %34 = load i8*, i8** %6, align 8
  %35 = call i32 @memcmp(i8* noundef %33, i8* noundef %34, i64 noundef 4) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %30
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 4
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  store i32 %41, i32* %3, align 4
  br label %48

42:                                               ; preds = %30
  br label %43

43:                                               ; preds = %42
  %44 = load i8*, i8** %6, align 8
  %45 = load i8*, i8** %7, align 8
  %46 = icmp ugt i8* %44, %45
  br i1 %46, label %30, label %47, !llvm.loop !14

47:                                               ; preds = %43
  store i32 0, i32* %3, align 4
  br label %48

48:                                               ; preds = %47, %37, %18
  %49 = load i32, i32* %3, align 4
  ret i32 %49
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_chunk_unknown_handling(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [5 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = lshr i32 %6, 24
  %8 = and i32 %7, 255
  %9 = trunc i32 %8 to i8
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  store i8 %9, i8* %11, align 1
  %12 = load i32, i32* %4, align 4
  %13 = lshr i32 %12, 16
  %14 = and i32 %13, 255
  %15 = trunc i32 %14 to i8
  %16 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %15, i8* %17, align 1
  %18 = load i32, i32* %4, align 4
  %19 = lshr i32 %18, 8
  %20 = and i32 %19, 255
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  %23 = getelementptr inbounds i8, i8* %22, i64 2
  store i8 %21, i8* %23, align 1
  %24 = load i32, i32* %4, align 4
  %25 = and i32 %24, 255
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  %28 = getelementptr inbounds i8, i8* %27, i64 3
  store i8 %26, i8* %28, align 1
  %29 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 0, i8* %30, align 1
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %32 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  %33 = call i32 @png_handle_as_unknown(%struct.png_struct_def* noundef %31, i8* noundef %32)
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_reset_zstream(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 19
  %10 = call i32 @inflateReset(%struct.z_stream_s* noundef %9)
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i32, i32* %2, align 4
  ret i32 %12
}

declare i32 @inflateReset(%struct.z_stream_s* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_access_version_number() #0 {
  ret i32 10640
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_zstream_error(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 19
  %7 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %6, i32 0, i32 6
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %54

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4
  switch i32 %11, label %12 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %21
    i32 -1, label %25
    i32 -2, label %29
    i32 -3, label %33
    i32 -4, label %37
    i32 -5, label %41
    i32 -6, label %45
    i32 -7, label %49
  ]

12:                                               ; preds = %10
  br label %13

13:                                               ; preds = %10, %12
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 19
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %15, i32 0, i32 6
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i8** %16, align 8
  br label %53

17:                                               ; preds = %10
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 19
  %20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %19, i32 0, i32 6
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8** %20, align 8
  br label %53

21:                                               ; preds = %10
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 19
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %23, i32 0, i32 6
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i8** %24, align 8
  br label %53

25:                                               ; preds = %10
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 19
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %27, i32 0, i32 6
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8** %28, align 8
  br label %53

29:                                               ; preds = %10
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 19
  %32 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %31, i32 0, i32 6
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8** %32, align 8
  br label %53

33:                                               ; preds = %10
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 19
  %36 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %35, i32 0, i32 6
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8** %36, align 8
  br label %53

37:                                               ; preds = %10
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 19
  %40 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %39, i32 0, i32 6
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %40, align 8
  br label %53

41:                                               ; preds = %10
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 19
  %44 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %43, i32 0, i32 6
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8** %44, align 8
  br label %53

45:                                               ; preds = %10
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 19
  %48 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %47, i32 0, i32 6
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i8** %48, align 8
  br label %53

49:                                               ; preds = %10
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 19
  %52 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %51, i32 0, i32 6
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8** %52, align 8
  br label %53

53:                                               ; preds = %49, %45, %41, %37, %33, %29, %25, %21, %17, %13
  br label %54

54:                                               ; preds = %53, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_colorspace_set_gamma(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_colorspace*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 16
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = load i32, i32* %6, align 4
  %12 = icmp sgt i32 %11, 625000000
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %3
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i8** %7, align 8
  br label %54

14:                                               ; preds = %10
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 15
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 32768
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %14
  %21 = load %struct.png_colorspace*, %struct.png_colorspace** %5, align 8
  %22 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %21, i32 0, i32 4
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %20
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8** %7, align 8
  br label %53

28:                                               ; preds = %20, %14
  %29 = load %struct.png_colorspace*, %struct.png_colorspace** %5, align 8
  %30 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %29, i32 0, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 32768
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %28
  br label %63

36:                                               ; preds = %28
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %38 = load %struct.png_colorspace*, %struct.png_colorspace** %5, align 8
  %39 = load i32, i32* %6, align 4
  %40 = call i32 @png_colorspace_check_gamma(%struct.png_struct_def* noundef %37, %struct.png_colorspace* noundef %38, i32 noundef %39, i32 noundef 1)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %52

42:                                               ; preds = %36
  %43 = load i32, i32* %6, align 4
  %44 = load %struct.png_colorspace*, %struct.png_colorspace** %5, align 8
  %45 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %44, i32 0, i32 0
  store i32 %43, i32* %45, align 4
  %46 = load %struct.png_colorspace*, %struct.png_colorspace** %5, align 8
  %47 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %46, i32 0, i32 4
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = or i32 %49, 9
  %51 = trunc i32 %50 to i16
  store i16 %51, i16* %47, align 2
  br label %52

52:                                               ; preds = %42, %36
  br label %63

53:                                               ; preds = %27
  br label %54

54:                                               ; preds = %53, %13
  %55 = load %struct.png_colorspace*, %struct.png_colorspace** %5, align 8
  %56 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %55, i32 0, i32 4
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = or i32 %58, 32768
  %60 = trunc i32 %59 to i16
  store i16 %60, i16* %56, align 2
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %62 = load i8*, i8** %7, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %61, i8* noundef %62, i32 noundef 1)
  br label %63

63:                                               ; preds = %54, %52, %35
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_colorspace_check_gamma(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_colorspace*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %11 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %12 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %11, i32 0, i32 4
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = and i32 %14, 1
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %48

17:                                               ; preds = %4
  %18 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %19 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %8, align 4
  %22 = call i32 @png_muldiv(i32* noundef %10, i32 noundef %20, i32 noundef 100000, i32 noundef %21)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %10, align 4
  %26 = call i32 @png_gamma_significant(i32 noundef %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %48

28:                                               ; preds = %24, %17
  %29 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %30 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %29, i32 0, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = load i32, i32* %9, align 4
  %37 = icmp eq i32 %36, 2
  br i1 %37, label %38, label %43

38:                                               ; preds = %35, %28
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %39, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.69, i64 0, i64 0), i32 noundef 2)
  %40 = load i32, i32* %9, align 4
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i32
  store i32 %42, i32* %5, align 4
  br label %49

43:                                               ; preds = %35
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.70, i64 0, i64 0), i32 noundef 0)
  %45 = load i32, i32* %9, align 4
  %46 = icmp eq i32 %45, 1
  %47 = zext i1 %46 to i32
  store i32 %47, i32* %5, align 4
  br label %49

48:                                               ; preds = %24, %4
  store i32 1, i32* %5, align 4
  br label %49

49:                                               ; preds = %48, %43, %38
  %50 = load i32, i32* %5, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_muldiv(i32* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  store i32* %0, i32** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %4
  %14 = load i32, i32* %7, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = load i32, i32* %8, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %16, %13
  %20 = load i32*, i32** %6, align 8
  store i32 0, i32* %20, align 4
  store i32 1, i32* %5, align 4
  br label %47

21:                                               ; preds = %16
  %22 = load i32, i32* %7, align 4
  %23 = sitofp i32 %22 to double
  store double %23, double* %10, align 8
  %24 = load i32, i32* %8, align 4
  %25 = sitofp i32 %24 to double
  %26 = load double, double* %10, align 8
  %27 = fmul double %26, %25
  store double %27, double* %10, align 8
  %28 = load i32, i32* %9, align 4
  %29 = sitofp i32 %28 to double
  %30 = load double, double* %10, align 8
  %31 = fdiv double %30, %29
  store double %31, double* %10, align 8
  %32 = load double, double* %10, align 8
  %33 = fadd double %32, 5.000000e-01
  %34 = call double @llvm.floor.f64(double %33)
  store double %34, double* %10, align 8
  %35 = load double, double* %10, align 8
  %36 = fcmp ole double %35, 0x41DFFFFFFFC00000
  br i1 %36, label %37, label %44

37:                                               ; preds = %21
  %38 = load double, double* %10, align 8
  %39 = fcmp oge double %38, 0xC1E0000000000000
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = load double, double* %10, align 8
  %42 = fptosi double %41 to i32
  %43 = load i32*, i32** %6, align 8
  store i32 %42, i32* %43, align 4
  store i32 1, i32* %5, align 4
  br label %47

44:                                               ; preds = %37, %21
  br label %45

45:                                               ; preds = %44
  br label %46

46:                                               ; preds = %45, %4
  store i32 0, i32* %5, align 4
  br label %47

47:                                               ; preds = %46, %40, %19
  %48 = load i32, i32* %5, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_gamma_significant(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 95000
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp sgt i32 %6, 105000
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #8

; Function Attrs: noinline nounwind optnone uwtable
define void @png_colorspace_sync_info(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %6 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %5, i32 0, i32 16
  %7 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %6, i32 0, i32 4
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = and i32 %9, 32768
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %14 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %13, i32 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -6150
  store i32 %16, i32* %14, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %18 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %17, %struct.png_info_def* noundef %18, i32 noundef 16, i32 noundef -1)
  br label %74

19:                                               ; preds = %2
  %20 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %20, i32 0, i32 16
  %22 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %21, i32 0, i32 4
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 128
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, 2048
  store i32 %31, i32* %29, align 8
  br label %37

32:                                               ; preds = %19
  %33 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2049
  store i32 %36, i32* %34, align 8
  br label %37

37:                                               ; preds = %32, %27
  %38 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 16
  %40 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %39, i32 0, i32 4
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = and i32 %42, 2
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %37
  %46 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = or i32 %48, 4
  store i32 %49, i32* %47, align 8
  br label %55

50:                                               ; preds = %37
  %51 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, -5
  store i32 %54, i32* %52, align 8
  br label %55

55:                                               ; preds = %50, %45
  %56 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %56, i32 0, i32 16
  %58 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %57, i32 0, i32 4
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = and i32 %60, 1
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %65 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %64, i32 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = or i32 %66, 1
  store i32 %67, i32* %65, align 8
  br label %73

68:                                               ; preds = %55
  %69 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %70 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %69, i32 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2
  store i32 %72, i32* %70, align 8
  br label %73

73:                                               ; preds = %68, %63
  br label %74

74:                                               ; preds = %73, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_colorspace_sync(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %6 = icmp eq %struct.png_info_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %17

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 16
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 145
  %13 = bitcast %struct.png_colorspace* %10 to i8*
  %14 = bitcast %struct.png_colorspace* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %14, i64 76, i1 false)
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %15, %struct.png_info_def* noundef %16)
  br label %17

17:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_colorspace_set_chromaticities(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, %struct.png_xy* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_colorspace*, align 8
  %8 = alloca %struct.png_xy*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.png_XYZ, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %7, align 8
  store %struct.png_xy* %2, %struct.png_xy** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load %struct.png_xy*, %struct.png_xy** %8, align 8
  %12 = call i32 @png_colorspace_check_xy(%struct.png_XYZ* noundef %10, %struct.png_xy* noundef %11)
  switch i32 %12, label %27 [
    i32 0, label %13
    i32 1, label %19
  ]

13:                                               ; preds = %4
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %15 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %16 = load %struct.png_xy*, %struct.png_xy** %8, align 8
  %17 = load i32, i32* %9, align 4
  %18 = call i32 @png_colorspace_set_xy_and_XYZ(%struct.png_struct_def* noundef %14, %struct.png_colorspace* noundef %15, %struct.png_xy* noundef %16, %struct.png_XYZ* noundef %10, i32 noundef %17)
  store i32 %18, i32* %5, align 4
  br label %36

19:                                               ; preds = %4
  %20 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %21 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %20, i32 0, i32 4
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = or i32 %23, 32768
  %25 = trunc i32 %24 to i16
  store i16 %25, i16* %21, align 2
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0))
  br label %35

27:                                               ; preds = %4
  %28 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %29 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %28, i32 0, i32 4
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = or i32 %31, 32768
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %29, align 2
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %34, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #13
  unreachable

35:                                               ; preds = %19
  store i32 0, i32* %5, align 4
  br label %36

36:                                               ; preds = %35, %13
  %37 = load i32, i32* %5, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_colorspace_check_xy(%struct.png_XYZ* noundef %0, %struct.png_xy* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_XYZ*, align 8
  %5 = alloca %struct.png_xy*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_xy, align 4
  store %struct.png_XYZ* %0, %struct.png_XYZ** %4, align 8
  store %struct.png_xy* %1, %struct.png_xy** %5, align 8
  %8 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %9 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %10 = call i32 @png_XYZ_from_xy(%struct.png_XYZ* noundef %8, %struct.png_xy* noundef %9)
  store i32 %10, i32* %6, align 4
  %11 = load i32, i32* %6, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4
  store i32 %14, i32* %3, align 4
  br label %28

15:                                               ; preds = %2
  %16 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %17 = call i32 @png_xy_from_XYZ(%struct.png_xy* noundef %7, %struct.png_XYZ* noundef %16)
  store i32 %17, i32* %6, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = load i32, i32* %6, align 4
  store i32 %21, i32* %3, align 4
  br label %28

22:                                               ; preds = %15
  %23 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %24 = call i32 @png_colorspace_endpoints_match(%struct.png_xy* noundef %23, %struct.png_xy* noundef %7, i32 noundef 5)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i32 0, i32* %3, align 4
  br label %28

27:                                               ; preds = %22
  store i32 1, i32* %3, align 4
  br label %28

28:                                               ; preds = %27, %26, %20, %13
  %29 = load i32, i32* %3, align 4
  ret i32 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_colorspace_set_xy_and_XYZ(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, %struct.png_xy* noundef %2, %struct.png_XYZ* noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_colorspace*, align 8
  %9 = alloca %struct.png_xy*, align 8
  %10 = alloca %struct.png_XYZ*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %8, align 8
  store %struct.png_xy* %2, %struct.png_xy** %9, align 8
  store %struct.png_XYZ* %3, %struct.png_XYZ** %10, align 8
  store i32 %4, i32* %11, align 4
  %12 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %13 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %12, i32 0, i32 4
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = and i32 %15, 32768
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  store i32 0, i32* %6, align 4
  br label %83

19:                                               ; preds = %5
  %20 = load i32, i32* %11, align 4
  %21 = icmp slt i32 %20, 2
  br i1 %21, label %22, label %48

22:                                               ; preds = %19
  %23 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %24 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %23, i32 0, i32 4
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %26, 2
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %48

29:                                               ; preds = %22
  %30 = load %struct.png_xy*, %struct.png_xy** %9, align 8
  %31 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %32 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %31, i32 0, i32 1
  %33 = call i32 @png_colorspace_endpoints_match(%struct.png_xy* noundef %30, %struct.png_xy* noundef %32, i32 noundef 100)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %29
  %36 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %37 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %36, i32 0, i32 4
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = or i32 %39, 32768
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %37, align 2
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %42, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %83

43:                                               ; preds = %29
  %44 = load i32, i32* %11, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  store i32 1, i32* %6, align 4
  br label %83

47:                                               ; preds = %43
  br label %48

48:                                               ; preds = %47, %22, %19
  %49 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %50 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %49, i32 0, i32 1
  %51 = load %struct.png_xy*, %struct.png_xy** %9, align 8
  %52 = bitcast %struct.png_xy* %50 to i8*
  %53 = bitcast %struct.png_xy* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 32, i1 false)
  %54 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %55 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %54, i32 0, i32 2
  %56 = load %struct.png_XYZ*, %struct.png_XYZ** %10, align 8
  %57 = bitcast %struct.png_XYZ* %55 to i8*
  %58 = bitcast %struct.png_XYZ* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 36, i1 false)
  %59 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %60 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %59, i32 0, i32 4
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = or i32 %62, 2
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %60, align 2
  %65 = load %struct.png_xy*, %struct.png_xy** %9, align 8
  %66 = call i32 @png_colorspace_endpoints_match(%struct.png_xy* noundef %65, %struct.png_xy* noundef @sRGB_xy, i32 noundef 1000)
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %48
  %69 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %70 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %69, i32 0, i32 4
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = or i32 %72, 64
  %74 = trunc i32 %73 to i16
  store i16 %74, i16* %70, align 2
  br label %82

75:                                               ; preds = %48
  %76 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %77 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %76, i32 0, i32 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 65471
  %81 = trunc i32 %80 to i16
  store i16 %81, i16* %77, align 2
  br label %82

82:                                               ; preds = %75, %68
  store i32 2, i32* %6, align 4
  br label %83

83:                                               ; preds = %82, %46, %35, %18
  %84 = load i32, i32* %6, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_colorspace_endpoints_match(%struct.png_xy* noundef %0, %struct.png_xy* noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_xy*, align 8
  %6 = alloca %struct.png_xy*, align 8
  %7 = alloca i32, align 4
  store %struct.png_xy* %0, %struct.png_xy** %5, align 8
  store %struct.png_xy* %1, %struct.png_xy** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %9 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %12 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %7, align 4
  %15 = sub nsw i32 %13, %14
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %167, label %17

17:                                               ; preds = %3
  %18 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %19 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %22 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 6
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %7, align 4
  %25 = add nsw i32 %23, %24
  %26 = icmp sgt i32 %20, %25
  br i1 %26, label %167, label %27

27:                                               ; preds = %17
  %28 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %29 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %28, i32 0, i32 7
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %32 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %31, i32 0, i32 7
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sub nsw i32 %33, %34
  %36 = icmp slt i32 %30, %35
  br i1 %36, label %167, label %37

37:                                               ; preds = %27
  %38 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %39 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %42 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %41, i32 0, i32 7
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %7, align 4
  %45 = add nsw i32 %43, %44
  %46 = icmp sgt i32 %40, %45
  br i1 %46, label %167, label %47

47:                                               ; preds = %37
  %48 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %49 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %52 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %7, align 4
  %55 = sub nsw i32 %53, %54
  %56 = icmp slt i32 %50, %55
  br i1 %56, label %167, label %57

57:                                               ; preds = %47
  %58 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %59 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %62 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %63, %64
  %66 = icmp sgt i32 %60, %65
  br i1 %66, label %167, label %67

67:                                               ; preds = %57
  %68 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %69 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %72 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %7, align 4
  %75 = sub nsw i32 %73, %74
  %76 = icmp slt i32 %70, %75
  br i1 %76, label %167, label %77

77:                                               ; preds = %67
  %78 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %79 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %82 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* %7, align 4
  %85 = add nsw i32 %83, %84
  %86 = icmp sgt i32 %80, %85
  br i1 %86, label %167, label %87

87:                                               ; preds = %77
  %88 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %89 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %88, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %92 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %91, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = load i32, i32* %7, align 4
  %95 = sub nsw i32 %93, %94
  %96 = icmp slt i32 %90, %95
  br i1 %96, label %167, label %97

97:                                               ; preds = %87
  %98 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %99 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %98, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %102 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %101, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = load i32, i32* %7, align 4
  %105 = add nsw i32 %103, %104
  %106 = icmp sgt i32 %100, %105
  br i1 %106, label %167, label %107

107:                                              ; preds = %97
  %108 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %109 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %112 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %111, i32 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = load i32, i32* %7, align 4
  %115 = sub nsw i32 %113, %114
  %116 = icmp slt i32 %110, %115
  br i1 %116, label %167, label %117

117:                                              ; preds = %107
  %118 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %119 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %118, i32 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %122 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %121, i32 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = load i32, i32* %7, align 4
  %125 = add nsw i32 %123, %124
  %126 = icmp sgt i32 %120, %125
  br i1 %126, label %167, label %127

127:                                              ; preds = %117
  %128 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %129 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %128, i32 0, i32 4
  %130 = load i32, i32* %129, align 4
  %131 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %132 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %131, i32 0, i32 4
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %7, align 4
  %135 = sub nsw i32 %133, %134
  %136 = icmp slt i32 %130, %135
  br i1 %136, label %167, label %137

137:                                              ; preds = %127
  %138 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %139 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %138, i32 0, i32 4
  %140 = load i32, i32* %139, align 4
  %141 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %142 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %141, i32 0, i32 4
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %7, align 4
  %145 = add nsw i32 %143, %144
  %146 = icmp sgt i32 %140, %145
  br i1 %146, label %167, label %147

147:                                              ; preds = %137
  %148 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %149 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %148, i32 0, i32 5
  %150 = load i32, i32* %149, align 4
  %151 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %152 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %151, i32 0, i32 5
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* %7, align 4
  %155 = sub nsw i32 %153, %154
  %156 = icmp slt i32 %150, %155
  br i1 %156, label %167, label %157

157:                                              ; preds = %147
  %158 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %159 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %158, i32 0, i32 5
  %160 = load i32, i32* %159, align 4
  %161 = load %struct.png_xy*, %struct.png_xy** %6, align 8
  %162 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %161, i32 0, i32 5
  %163 = load i32, i32* %162, align 4
  %164 = load i32, i32* %7, align 4
  %165 = add nsw i32 %163, %164
  %166 = icmp sgt i32 %160, %165
  br i1 %166, label %167, label %168

167:                                              ; preds = %157, %147, %137, %127, %117, %107, %97, %87, %77, %67, %57, %47, %37, %27, %17, %3
  store i32 0, i32* %4, align 4
  br label %169

168:                                              ; preds = %157
  store i32 1, i32* %4, align 4
  br label %169

169:                                              ; preds = %168, %167
  %170 = load i32, i32* %4, align 4
  ret i32 %170
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_XYZ_from_xy(%struct.png_XYZ* noundef %0, %struct.png_xy* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_XYZ*, align 8
  %5 = alloca %struct.png_xy*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.png_XYZ* %0, %struct.png_XYZ** %4, align 8
  store %struct.png_xy* %1, %struct.png_xy** %5, align 8
  %12 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %13 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %18 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 100000
  br i1 %20, label %21, label %22

21:                                               ; preds = %16, %2
  store i32 1, i32* %3, align 4
  br label %380

22:                                               ; preds = %16
  %23 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %24 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %22
  %28 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %29 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %32 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sub nsw i32 100000, %33
  %35 = icmp sgt i32 %30, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %27, %22
  store i32 1, i32* %3, align 4
  br label %380

37:                                               ; preds = %27
  %38 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %39 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %38, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %44 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 100000
  br i1 %46, label %47, label %48

47:                                               ; preds = %42, %37
  store i32 1, i32* %3, align 4
  br label %380

48:                                               ; preds = %42
  %49 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %50 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %48
  %54 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %55 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %58 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = sub nsw i32 100000, %59
  %61 = icmp sgt i32 %56, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %53, %48
  store i32 1, i32* %3, align 4
  br label %380

63:                                               ; preds = %53
  %64 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %65 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %64, i32 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %70 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %69, i32 0, i32 4
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 100000
  br i1 %72, label %73, label %74

73:                                               ; preds = %68, %63
  store i32 1, i32* %3, align 4
  br label %380

74:                                               ; preds = %68
  %75 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %76 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %75, i32 0, i32 5
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %81 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %80, i32 0, i32 5
  %82 = load i32, i32* %81, align 4
  %83 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %84 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %83, i32 0, i32 4
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 100000, %85
  %87 = icmp sgt i32 %82, %86
  br i1 %87, label %88, label %89

88:                                               ; preds = %79, %74
  store i32 1, i32* %3, align 4
  br label %380

89:                                               ; preds = %79
  %90 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %91 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %90, i32 0, i32 6
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %96 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %95, i32 0, i32 6
  %97 = load i32, i32* %96, align 4
  %98 = icmp sgt i32 %97, 100000
  br i1 %98, label %99, label %100

99:                                               ; preds = %94, %89
  store i32 1, i32* %3, align 4
  br label %380

100:                                              ; preds = %94
  %101 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %102 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %101, i32 0, i32 7
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, 5
  br i1 %104, label %114, label %105

105:                                              ; preds = %100
  %106 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %107 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %106, i32 0, i32 7
  %108 = load i32, i32* %107, align 4
  %109 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %110 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %109, i32 0, i32 6
  %111 = load i32, i32* %110, align 4
  %112 = sub nsw i32 100000, %111
  %113 = icmp sgt i32 %108, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %105, %100
  store i32 1, i32* %3, align 4
  br label %380

115:                                              ; preds = %105
  %116 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %117 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %116, i32 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %120 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %119, i32 0, i32 4
  %121 = load i32, i32* %120, align 4
  %122 = sub nsw i32 %118, %121
  %123 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %124 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %127 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %126, i32 0, i32 5
  %128 = load i32, i32* %127, align 4
  %129 = sub nsw i32 %125, %128
  %130 = call i32 @png_muldiv(i32* noundef %9, i32 noundef %122, i32 noundef %129, i32 noundef 7)
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %115
  store i32 2, i32* %3, align 4
  br label %380

133:                                              ; preds = %115
  %134 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %135 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %134, i32 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %138 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %137, i32 0, i32 5
  %139 = load i32, i32* %138, align 4
  %140 = sub nsw i32 %136, %139
  %141 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %142 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %145 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %144, i32 0, i32 4
  %146 = load i32, i32* %145, align 4
  %147 = sub nsw i32 %143, %146
  %148 = call i32 @png_muldiv(i32* noundef %10, i32 noundef %140, i32 noundef %147, i32 noundef 7)
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %133
  store i32 2, i32* %3, align 4
  br label %380

151:                                              ; preds = %133
  %152 = load i32, i32* %9, align 4
  %153 = load i32, i32* %10, align 4
  %154 = sub nsw i32 %152, %153
  store i32 %154, i32* %11, align 4
  %155 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %156 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %155, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %159 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %158, i32 0, i32 4
  %160 = load i32, i32* %159, align 4
  %161 = sub nsw i32 %157, %160
  %162 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %163 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %162, i32 0, i32 7
  %164 = load i32, i32* %163, align 4
  %165 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %166 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %165, i32 0, i32 5
  %167 = load i32, i32* %166, align 4
  %168 = sub nsw i32 %164, %167
  %169 = call i32 @png_muldiv(i32* noundef %9, i32 noundef %161, i32 noundef %168, i32 noundef 7)
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %151
  store i32 2, i32* %3, align 4
  br label %380

172:                                              ; preds = %151
  %173 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %174 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %177 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %176, i32 0, i32 5
  %178 = load i32, i32* %177, align 4
  %179 = sub nsw i32 %175, %178
  %180 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %181 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %180, i32 0, i32 6
  %182 = load i32, i32* %181, align 4
  %183 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %184 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %183, i32 0, i32 4
  %185 = load i32, i32* %184, align 4
  %186 = sub nsw i32 %182, %185
  %187 = call i32 @png_muldiv(i32* noundef %10, i32 noundef %179, i32 noundef %186, i32 noundef 7)
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %172
  store i32 2, i32* %3, align 4
  br label %380

190:                                              ; preds = %172
  %191 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %192 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %191, i32 0, i32 7
  %193 = load i32, i32* %192, align 4
  %194 = load i32, i32* %11, align 4
  %195 = load i32, i32* %9, align 4
  %196 = load i32, i32* %10, align 4
  %197 = sub nsw i32 %195, %196
  %198 = call i32 @png_muldiv(i32* noundef %6, i32 noundef %193, i32 noundef %194, i32 noundef %197)
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %206, label %200

200:                                              ; preds = %190
  %201 = load i32, i32* %6, align 4
  %202 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %203 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %202, i32 0, i32 7
  %204 = load i32, i32* %203, align 4
  %205 = icmp sle i32 %201, %204
  br i1 %205, label %206, label %207

206:                                              ; preds = %200, %190
  store i32 1, i32* %3, align 4
  br label %380

207:                                              ; preds = %200
  %208 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %209 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %208, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %212 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %211, i32 0, i32 5
  %213 = load i32, i32* %212, align 4
  %214 = sub nsw i32 %210, %213
  %215 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %216 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %215, i32 0, i32 6
  %217 = load i32, i32* %216, align 4
  %218 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %219 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %218, i32 0, i32 4
  %220 = load i32, i32* %219, align 4
  %221 = sub nsw i32 %217, %220
  %222 = call i32 @png_muldiv(i32* noundef %9, i32 noundef %214, i32 noundef %221, i32 noundef 7)
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %207
  store i32 2, i32* %3, align 4
  br label %380

225:                                              ; preds = %207
  %226 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %227 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %226, i32 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %230 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %229, i32 0, i32 4
  %231 = load i32, i32* %230, align 4
  %232 = sub nsw i32 %228, %231
  %233 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %234 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %233, i32 0, i32 7
  %235 = load i32, i32* %234, align 4
  %236 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %237 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %236, i32 0, i32 5
  %238 = load i32, i32* %237, align 4
  %239 = sub nsw i32 %235, %238
  %240 = call i32 @png_muldiv(i32* noundef %10, i32 noundef %232, i32 noundef %239, i32 noundef 7)
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %225
  store i32 2, i32* %3, align 4
  br label %380

243:                                              ; preds = %225
  %244 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %245 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %244, i32 0, i32 7
  %246 = load i32, i32* %245, align 4
  %247 = load i32, i32* %11, align 4
  %248 = load i32, i32* %9, align 4
  %249 = load i32, i32* %10, align 4
  %250 = sub nsw i32 %248, %249
  %251 = call i32 @png_muldiv(i32* noundef %7, i32 noundef %246, i32 noundef %247, i32 noundef %250)
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %259, label %253

253:                                              ; preds = %243
  %254 = load i32, i32* %7, align 4
  %255 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %256 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %255, i32 0, i32 7
  %257 = load i32, i32* %256, align 4
  %258 = icmp sle i32 %254, %257
  br i1 %258, label %259, label %260

259:                                              ; preds = %253, %243
  store i32 1, i32* %3, align 4
  br label %380

260:                                              ; preds = %253
  %261 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %262 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %261, i32 0, i32 7
  %263 = load i32, i32* %262, align 4
  %264 = call i32 @png_reciprocal(i32 noundef %263)
  %265 = load i32, i32* %6, align 4
  %266 = call i32 @png_reciprocal(i32 noundef %265)
  %267 = sub nsw i32 %264, %266
  %268 = load i32, i32* %7, align 4
  %269 = call i32 @png_reciprocal(i32 noundef %268)
  %270 = sub nsw i32 %267, %269
  store i32 %270, i32* %8, align 4
  %271 = load i32, i32* %8, align 4
  %272 = icmp sle i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %260
  store i32 1, i32* %3, align 4
  br label %380

274:                                              ; preds = %260
  %275 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %276 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %275, i32 0, i32 0
  %277 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %278 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %277, i32 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %6, align 4
  %281 = call i32 @png_muldiv(i32* noundef %276, i32 noundef %279, i32 noundef 100000, i32 noundef %280)
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %274
  store i32 1, i32* %3, align 4
  br label %380

284:                                              ; preds = %274
  %285 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %286 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %285, i32 0, i32 1
  %287 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %288 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %287, i32 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = load i32, i32* %6, align 4
  %291 = call i32 @png_muldiv(i32* noundef %286, i32 noundef %289, i32 noundef 100000, i32 noundef %290)
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %284
  store i32 1, i32* %3, align 4
  br label %380

294:                                              ; preds = %284
  %295 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %296 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %295, i32 0, i32 2
  %297 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %298 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %297, i32 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = sub nsw i32 100000, %299
  %301 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %302 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %301, i32 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = sub nsw i32 %300, %303
  %305 = load i32, i32* %6, align 4
  %306 = call i32 @png_muldiv(i32* noundef %296, i32 noundef %304, i32 noundef 100000, i32 noundef %305)
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %294
  store i32 1, i32* %3, align 4
  br label %380

309:                                              ; preds = %294
  %310 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %311 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %310, i32 0, i32 3
  %312 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %313 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %312, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = load i32, i32* %7, align 4
  %316 = call i32 @png_muldiv(i32* noundef %311, i32 noundef %314, i32 noundef 100000, i32 noundef %315)
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %309
  store i32 1, i32* %3, align 4
  br label %380

319:                                              ; preds = %309
  %320 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %321 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %320, i32 0, i32 4
  %322 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %323 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %322, i32 0, i32 3
  %324 = load i32, i32* %323, align 4
  %325 = load i32, i32* %7, align 4
  %326 = call i32 @png_muldiv(i32* noundef %321, i32 noundef %324, i32 noundef 100000, i32 noundef %325)
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %319
  store i32 1, i32* %3, align 4
  br label %380

329:                                              ; preds = %319
  %330 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %331 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %330, i32 0, i32 5
  %332 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %333 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %332, i32 0, i32 2
  %334 = load i32, i32* %333, align 4
  %335 = sub nsw i32 100000, %334
  %336 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %337 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %336, i32 0, i32 3
  %338 = load i32, i32* %337, align 4
  %339 = sub nsw i32 %335, %338
  %340 = load i32, i32* %7, align 4
  %341 = call i32 @png_muldiv(i32* noundef %331, i32 noundef %339, i32 noundef 100000, i32 noundef %340)
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %329
  store i32 1, i32* %3, align 4
  br label %380

344:                                              ; preds = %329
  %345 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %346 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %345, i32 0, i32 6
  %347 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %348 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %347, i32 0, i32 4
  %349 = load i32, i32* %348, align 4
  %350 = load i32, i32* %8, align 4
  %351 = call i32 @png_muldiv(i32* noundef %346, i32 noundef %349, i32 noundef %350, i32 noundef 100000)
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %344
  store i32 1, i32* %3, align 4
  br label %380

354:                                              ; preds = %344
  %355 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %356 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %355, i32 0, i32 7
  %357 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %358 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %357, i32 0, i32 5
  %359 = load i32, i32* %358, align 4
  %360 = load i32, i32* %8, align 4
  %361 = call i32 @png_muldiv(i32* noundef %356, i32 noundef %359, i32 noundef %360, i32 noundef 100000)
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %364

363:                                              ; preds = %354
  store i32 1, i32* %3, align 4
  br label %380

364:                                              ; preds = %354
  %365 = load %struct.png_XYZ*, %struct.png_XYZ** %4, align 8
  %366 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %365, i32 0, i32 8
  %367 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %368 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %367, i32 0, i32 4
  %369 = load i32, i32* %368, align 4
  %370 = sub nsw i32 100000, %369
  %371 = load %struct.png_xy*, %struct.png_xy** %5, align 8
  %372 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %371, i32 0, i32 5
  %373 = load i32, i32* %372, align 4
  %374 = sub nsw i32 %370, %373
  %375 = load i32, i32* %8, align 4
  %376 = call i32 @png_muldiv(i32* noundef %366, i32 noundef %374, i32 noundef %375, i32 noundef 100000)
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %364
  store i32 1, i32* %3, align 4
  br label %380

379:                                              ; preds = %364
  store i32 0, i32* %3, align 4
  br label %380

380:                                              ; preds = %379, %378, %363, %353, %343, %328, %318, %308, %293, %283, %273, %259, %242, %224, %206, %189, %171, %150, %132, %114, %99, %88, %73, %62, %47, %36, %21
  %381 = load i32, i32* %3, align 4
  ret i32 %381
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_xy_from_XYZ(%struct.png_xy* noundef %0, %struct.png_XYZ* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_xy*, align 8
  %5 = alloca %struct.png_XYZ*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.png_xy* %0, %struct.png_xy** %4, align 8
  store %struct.png_XYZ* %1, %struct.png_XYZ** %5, align 8
  %10 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %11 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %14 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %12, %15
  %17 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %18 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %16, %19
  store i32 %20, i32* %6, align 4
  %21 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %22 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 0
  %23 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %24 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_muldiv(i32* noundef %22, i32 noundef %25, i32 noundef 100000, i32 noundef %26)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %2
  store i32 1, i32* %3, align 4
  br label %152

30:                                               ; preds = %2
  %31 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %32 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %31, i32 0, i32 1
  %33 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %34 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %6, align 4
  %37 = call i32 @png_muldiv(i32* noundef %32, i32 noundef %35, i32 noundef 100000, i32 noundef %36)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %30
  store i32 1, i32* %3, align 4
  br label %152

40:                                               ; preds = %30
  %41 = load i32, i32* %6, align 4
  store i32 %41, i32* %7, align 4
  %42 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %43 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %8, align 4
  %45 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %46 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %9, align 4
  %48 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %49 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %48, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %52 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %51, i32 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %50, %53
  %55 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %56 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %55, i32 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %54, %57
  store i32 %58, i32* %6, align 4
  %59 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %60 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %59, i32 0, i32 2
  %61 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %62 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %6, align 4
  %65 = call i32 @png_muldiv(i32* noundef %60, i32 noundef %63, i32 noundef 100000, i32 noundef %64)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %40
  store i32 1, i32* %3, align 4
  br label %152

68:                                               ; preds = %40
  %69 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %70 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %69, i32 0, i32 3
  %71 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %72 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %71, i32 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %6, align 4
  %75 = call i32 @png_muldiv(i32* noundef %70, i32 noundef %73, i32 noundef 100000, i32 noundef %74)
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %68
  store i32 1, i32* %3, align 4
  br label %152

78:                                               ; preds = %68
  %79 = load i32, i32* %6, align 4
  %80 = load i32, i32* %7, align 4
  %81 = add nsw i32 %80, %79
  store i32 %81, i32* %7, align 4
  %82 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %83 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %82, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* %8, align 4
  %86 = add nsw i32 %85, %84
  store i32 %86, i32* %8, align 4
  %87 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %88 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %87, i32 0, i32 4
  %89 = load i32, i32* %88, align 4
  %90 = load i32, i32* %9, align 4
  %91 = add nsw i32 %90, %89
  store i32 %91, i32* %9, align 4
  %92 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %93 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %92, i32 0, i32 6
  %94 = load i32, i32* %93, align 4
  %95 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %96 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %95, i32 0, i32 7
  %97 = load i32, i32* %96, align 4
  %98 = add nsw i32 %94, %97
  %99 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %100 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %99, i32 0, i32 8
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %98, %101
  store i32 %102, i32* %6, align 4
  %103 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %104 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %103, i32 0, i32 4
  %105 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %106 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %105, i32 0, i32 6
  %107 = load i32, i32* %106, align 4
  %108 = load i32, i32* %6, align 4
  %109 = call i32 @png_muldiv(i32* noundef %104, i32 noundef %107, i32 noundef 100000, i32 noundef %108)
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %78
  store i32 1, i32* %3, align 4
  br label %152

112:                                              ; preds = %78
  %113 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %114 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %113, i32 0, i32 5
  %115 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %116 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %115, i32 0, i32 7
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %6, align 4
  %119 = call i32 @png_muldiv(i32* noundef %114, i32 noundef %117, i32 noundef 100000, i32 noundef %118)
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %112
  store i32 1, i32* %3, align 4
  br label %152

122:                                              ; preds = %112
  %123 = load i32, i32* %6, align 4
  %124 = load i32, i32* %7, align 4
  %125 = add nsw i32 %124, %123
  store i32 %125, i32* %7, align 4
  %126 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %127 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %126, i32 0, i32 6
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %8, align 4
  %130 = add nsw i32 %129, %128
  store i32 %130, i32* %8, align 4
  %131 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %132 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %131, i32 0, i32 7
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %9, align 4
  %135 = add nsw i32 %134, %133
  store i32 %135, i32* %9, align 4
  %136 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %137 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %136, i32 0, i32 6
  %138 = load i32, i32* %8, align 4
  %139 = load i32, i32* %7, align 4
  %140 = call i32 @png_muldiv(i32* noundef %137, i32 noundef %138, i32 noundef 100000, i32 noundef %139)
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %122
  store i32 1, i32* %3, align 4
  br label %152

143:                                              ; preds = %122
  %144 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %145 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %144, i32 0, i32 7
  %146 = load i32, i32* %9, align 4
  %147 = load i32, i32* %7, align 4
  %148 = call i32 @png_muldiv(i32* noundef %145, i32 noundef %146, i32 noundef 100000, i32 noundef %147)
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %143
  store i32 1, i32* %3, align 4
  br label %152

151:                                              ; preds = %143
  store i32 0, i32* %3, align 4
  br label %152

152:                                              ; preds = %151, %150, %142, %121, %111, %77, %67, %39, %29
  %153 = load i32, i32* %3, align 4
  ret i32 %153
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_reciprocal(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca double, align 8
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = sitofp i32 %5 to double
  %7 = fdiv double 1.000000e+10, %6
  %8 = fadd double %7, 5.000000e-01
  %9 = call double @llvm.floor.f64(double %8)
  store double %9, double* %4, align 8
  %10 = load double, double* %4, align 8
  %11 = fcmp ole double %10, 0x41DFFFFFFFC00000
  br i1 %11, label %12, label %18

12:                                               ; preds = %1
  %13 = load double, double* %4, align 8
  %14 = fcmp oge double %13, 0xC1E0000000000000
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load double, double* %4, align 8
  %17 = fptosi double %16 to i32
  store i32 %17, i32* %2, align 4
  br label %19

18:                                               ; preds = %12, %1
  store i32 0, i32* %2, align 4
  br label %19

19:                                               ; preds = %18, %15
  %20 = load i32, i32* %2, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_colorspace_set_endpoints(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, %struct.png_XYZ* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_colorspace*, align 8
  %8 = alloca %struct.png_XYZ*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.png_XYZ, align 4
  %11 = alloca %struct.png_xy, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %7, align 8
  store %struct.png_XYZ* %2, %struct.png_XYZ** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = load %struct.png_XYZ*, %struct.png_XYZ** %8, align 8
  %13 = bitcast %struct.png_XYZ* %10 to i8*
  %14 = bitcast %struct.png_XYZ* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 36, i1 false)
  %15 = call i32 @png_colorspace_check_XYZ(%struct.png_xy* noundef %11, %struct.png_XYZ* noundef %10)
  switch i32 %15, label %29 [
    i32 0, label %16
    i32 1, label %21
  ]

16:                                               ; preds = %4
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %18 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %19 = load i32, i32* %9, align 4
  %20 = call i32 @png_colorspace_set_xy_and_XYZ(%struct.png_struct_def* noundef %17, %struct.png_colorspace* noundef %18, %struct.png_xy* noundef %11, %struct.png_XYZ* noundef %10, i32 noundef %19)
  store i32 %20, i32* %5, align 4
  br label %38

21:                                               ; preds = %4
  %22 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %23 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %22, i32 0, i32 4
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = or i32 %25, 32768
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %23, align 2
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %28, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0))
  br label %37

29:                                               ; preds = %4
  %30 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %31 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %30, i32 0, i32 4
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = or i32 %33, 32768
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* %31, align 2
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %36, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #13
  unreachable

37:                                               ; preds = %21
  store i32 0, i32* %5, align 4
  br label %38

38:                                               ; preds = %37, %16
  %39 = load i32, i32* %5, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_colorspace_check_XYZ(%struct.png_xy* noundef %0, %struct.png_XYZ* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_xy*, align 8
  %5 = alloca %struct.png_XYZ*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_XYZ, align 4
  store %struct.png_xy* %0, %struct.png_xy** %4, align 8
  store %struct.png_XYZ* %1, %struct.png_XYZ** %5, align 8
  %8 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %9 = call i32 @png_XYZ_normalize(%struct.png_XYZ* noundef %8)
  store i32 %9, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = load i32, i32* %6, align 4
  store i32 %13, i32* %3, align 4
  br label %28

14:                                               ; preds = %2
  %15 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %16 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %17 = call i32 @png_xy_from_XYZ(%struct.png_xy* noundef %15, %struct.png_XYZ* noundef %16)
  store i32 %17, i32* %6, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = load i32, i32* %6, align 4
  store i32 %21, i32* %3, align 4
  br label %28

22:                                               ; preds = %14
  %23 = load %struct.png_XYZ*, %struct.png_XYZ** %5, align 8
  %24 = bitcast %struct.png_XYZ* %7 to i8*
  %25 = bitcast %struct.png_XYZ* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 36, i1 false)
  %26 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %27 = call i32 @png_colorspace_check_xy(%struct.png_XYZ* noundef %7, %struct.png_xy* noundef %26)
  store i32 %27, i32* %3, align 4
  br label %28

28:                                               ; preds = %22, %20, %12
  %29 = load i32, i32* %3, align 4
  ret i32 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_XYZ_normalize(%struct.png_XYZ* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_XYZ*, align 8
  %4 = alloca i32, align 4
  store %struct.png_XYZ* %0, %struct.png_XYZ** %3, align 8
  %5 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %6 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %49, label %9

9:                                                ; preds = %1
  %10 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %11 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %10, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %16 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %15, i32 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %49, label %19

19:                                               ; preds = %14
  %20 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %21 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %19
  %25 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %26 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %24
  %30 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %31 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %30, i32 0, i32 6
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %29
  %35 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %36 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %41 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %40, i32 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %46 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %45, i32 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44, %39, %34, %29, %24, %19, %14, %9, %1
  store i32 1, i32* %2, align 4
  br label %174

50:                                               ; preds = %44
  %51 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %52 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %4, align 4
  %54 = load i32, i32* %4, align 4
  %55 = sub nsw i32 2147483647, %54
  %56 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %57 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %55, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %50
  store i32 1, i32* %2, align 4
  br label %174

61:                                               ; preds = %50
  %62 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %63 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %62, i32 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %4, align 4
  %66 = add nsw i32 %65, %64
  store i32 %66, i32* %4, align 4
  %67 = load i32, i32* %4, align 4
  %68 = sub nsw i32 2147483647, %67
  %69 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %70 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %68, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %61
  store i32 1, i32* %2, align 4
  br label %174

74:                                               ; preds = %61
  %75 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %76 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %75, i32 0, i32 7
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %4, align 4
  %79 = add nsw i32 %78, %77
  store i32 %79, i32* %4, align 4
  %80 = load i32, i32* %4, align 4
  %81 = icmp ne i32 %80, 100000
  br i1 %81, label %82, label %173

82:                                               ; preds = %74
  %83 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %84 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %83, i32 0, i32 0
  %85 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %86 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %4, align 4
  %89 = call i32 @png_muldiv(i32* noundef %84, i32 noundef %87, i32 noundef 100000, i32 noundef %88)
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %82
  store i32 1, i32* %2, align 4
  br label %174

92:                                               ; preds = %82
  %93 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %94 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %93, i32 0, i32 1
  %95 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %96 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %4, align 4
  %99 = call i32 @png_muldiv(i32* noundef %94, i32 noundef %97, i32 noundef 100000, i32 noundef %98)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %92
  store i32 1, i32* %2, align 4
  br label %174

102:                                              ; preds = %92
  %103 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %104 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %103, i32 0, i32 2
  %105 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %106 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %105, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = load i32, i32* %4, align 4
  %109 = call i32 @png_muldiv(i32* noundef %104, i32 noundef %107, i32 noundef 100000, i32 noundef %108)
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %102
  store i32 1, i32* %2, align 4
  br label %174

112:                                              ; preds = %102
  %113 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %114 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %113, i32 0, i32 3
  %115 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %116 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %115, i32 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %4, align 4
  %119 = call i32 @png_muldiv(i32* noundef %114, i32 noundef %117, i32 noundef 100000, i32 noundef %118)
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %112
  store i32 1, i32* %2, align 4
  br label %174

122:                                              ; preds = %112
  %123 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %124 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %123, i32 0, i32 4
  %125 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %126 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %125, i32 0, i32 4
  %127 = load i32, i32* %126, align 4
  %128 = load i32, i32* %4, align 4
  %129 = call i32 @png_muldiv(i32* noundef %124, i32 noundef %127, i32 noundef 100000, i32 noundef %128)
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %122
  store i32 1, i32* %2, align 4
  br label %174

132:                                              ; preds = %122
  %133 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %134 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %133, i32 0, i32 5
  %135 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %136 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %135, i32 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %4, align 4
  %139 = call i32 @png_muldiv(i32* noundef %134, i32 noundef %137, i32 noundef 100000, i32 noundef %138)
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %132
  store i32 1, i32* %2, align 4
  br label %174

142:                                              ; preds = %132
  %143 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %144 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %143, i32 0, i32 6
  %145 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %146 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %145, i32 0, i32 6
  %147 = load i32, i32* %146, align 4
  %148 = load i32, i32* %4, align 4
  %149 = call i32 @png_muldiv(i32* noundef %144, i32 noundef %147, i32 noundef 100000, i32 noundef %148)
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %142
  store i32 1, i32* %2, align 4
  br label %174

152:                                              ; preds = %142
  %153 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %154 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %153, i32 0, i32 7
  %155 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %156 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %155, i32 0, i32 7
  %157 = load i32, i32* %156, align 4
  %158 = load i32, i32* %4, align 4
  %159 = call i32 @png_muldiv(i32* noundef %154, i32 noundef %157, i32 noundef 100000, i32 noundef %158)
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %152
  store i32 1, i32* %2, align 4
  br label %174

162:                                              ; preds = %152
  %163 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %164 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %163, i32 0, i32 8
  %165 = load %struct.png_XYZ*, %struct.png_XYZ** %3, align 8
  %166 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %165, i32 0, i32 8
  %167 = load i32, i32* %166, align 4
  %168 = load i32, i32* %4, align 4
  %169 = call i32 @png_muldiv(i32* noundef %164, i32 noundef %167, i32 noundef 100000, i32 noundef %168)
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %162
  store i32 1, i32* %2, align 4
  br label %174

172:                                              ; preds = %162
  br label %173

173:                                              ; preds = %172, %74
  store i32 0, i32* %2, align 4
  br label %174

174:                                              ; preds = %173, %171, %161, %151, %141, %131, %121, %111, %101, %91, %73, %60, %49
  %175 = load i32, i32* %2, align 4
  ret i32 %175
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_colorspace_set_sRGB(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_colorspace*, align 8
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %9 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %8, i32 0, i32 4
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = and i32 %11, 32768
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %110

15:                                               ; preds = %3
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = icmp sge i32 %19, 4
  br i1 %20, label %21, label %27

21:                                               ; preds = %18, %15
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %23 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %22, %struct.png_colorspace* noundef %23, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 noundef %25, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0))
  store i32 %26, i32* %4, align 4
  br label %110

27:                                               ; preds = %18
  %28 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %29 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %28, i32 0, i32 4
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = and i32 %31, 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  %35 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %36 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %35, i32 0, i32 3
  %37 = load i16, i16* %36, align 4
  %38 = zext i16 %37 to i32
  %39 = load i32, i32* %7, align 4
  %40 = icmp ne i32 %38, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %34
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %43 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %44 = load i32, i32* %7, align 4
  %45 = sext i32 %44 to i64
  %46 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %42, %struct.png_colorspace* noundef %43, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 noundef %45, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0))
  store i32 %46, i32* %4, align 4
  br label %110

47:                                               ; preds = %34, %27
  %48 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %49 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %48, i32 0, i32 4
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 32
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %55, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0))
  store i32 0, i32* %4, align 4
  br label %110

56:                                               ; preds = %47
  %57 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %58 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %57, i32 0, i32 4
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = and i32 %60, 2
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %56
  %64 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %65 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %64, i32 0, i32 1
  %66 = call i32 @png_colorspace_endpoints_match(%struct.png_xy* noundef @sRGB_xy, %struct.png_xy* noundef %65, i32 noundef 100)
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %69, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0), i32 noundef 2)
  br label %70

70:                                               ; preds = %68, %63, %56
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %72 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %73 = call i32 @png_colorspace_check_gamma(%struct.png_struct_def* noundef %71, %struct.png_colorspace* noundef %72, i32 noundef 45455, i32 noundef 2)
  %74 = load i32, i32* %7, align 4
  %75 = trunc i32 %74 to i16
  %76 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %77 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %76, i32 0, i32 3
  store i16 %75, i16* %77, align 4
  %78 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %79 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %78, i32 0, i32 4
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = or i32 %81, 4
  %83 = trunc i32 %82 to i16
  store i16 %83, i16* %79, align 2
  %84 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %85 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %84, i32 0, i32 1
  %86 = bitcast %struct.png_xy* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 bitcast (%struct.png_xy* @sRGB_xy to i8*), i64 32, i1 false)
  %87 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %88 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %87, i32 0, i32 2
  %89 = bitcast %struct.png_XYZ* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 bitcast (%struct.png_XYZ* @png_colorspace_set_sRGB.sRGB_XYZ to i8*), i64 36, i1 false)
  %90 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %91 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %90, i32 0, i32 4
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i32
  %94 = or i32 %93, 66
  %95 = trunc i32 %94 to i16
  store i16 %95, i16* %91, align 2
  %96 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %97 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %96, i32 0, i32 0
  store i32 45455, i32* %97, align 4
  %98 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %99 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %98, i32 0, i32 4
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = or i32 %101, 1
  %103 = trunc i32 %102 to i16
  store i16 %103, i16* %99, align 2
  %104 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %105 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %104, i32 0, i32 4
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = or i32 %107, 160
  %109 = trunc i32 %108 to i16
  store i16 %109, i16* %105, align 2
  store i32 1, i32* %4, align 4
  br label %110

110:                                              ; preds = %70, %54, %41, %21, %14
  %111 = load i32, i32* %4, align 4
  ret i32 %111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_icc_profile_error(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i64 noundef %3, i8* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_colorspace*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [196 x i8], align 16
  %13 = alloca [24 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i8* %4, i8** %10, align 8
  %14 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %15 = icmp ne %struct.png_colorspace* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %5
  %17 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %18 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %17, i32 0, i32 4
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = or i32 %20, 32768
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* %18, align 2
  br label %23

23:                                               ; preds = %16, %5
  %24 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %25 = call i64 @png_safecat(i8* noundef %24, i64 noundef 196, i64 noundef 0, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0))
  store i64 %25, i64* %11, align 8
  %26 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %27 = load i64, i64* %11, align 8
  %28 = add i64 %27, 79
  %29 = load i64, i64* %11, align 8
  %30 = load i8*, i8** %8, align 8
  %31 = call i64 @png_safecat(i8* noundef %26, i64 noundef %28, i64 noundef %29, i8* noundef %30)
  store i64 %31, i64* %11, align 8
  %32 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %33 = load i64, i64* %11, align 8
  %34 = call i64 @png_safecat(i8* noundef %32, i64 noundef 196, i64 noundef %33, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0))
  store i64 %34, i64* %11, align 8
  %35 = load i64, i64* %9, align 8
  %36 = call i32 @is_ICC_signature(i64 noundef %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %23
  %39 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %40 = load i64, i64* %11, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = load i64, i64* %9, align 8
  %43 = trunc i64 %42 to i32
  call void @png_icc_tag_name(i8* noundef %41, i32 noundef %43)
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %44, 6
  store i64 %45, i64* %11, align 8
  %46 = load i64, i64* %11, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %11, align 8
  %48 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 %46
  store i8 58, i8* %48, align 1
  %49 = load i64, i64* %11, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %11, align 8
  %51 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 %49
  store i8 32, i8* %51, align 1
  br label %64

52:                                               ; preds = %23
  %53 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %54 = load i64, i64* %11, align 8
  %55 = getelementptr inbounds [24 x i8], [24 x i8]* %13, i64 0, i64 0
  %56 = getelementptr inbounds [24 x i8], [24 x i8]* %13, i64 0, i64 0
  %57 = getelementptr inbounds i8, i8* %56, i64 24
  %58 = load i64, i64* %9, align 8
  %59 = call i8* @png_format_number(i8* noundef %55, i8* noundef %57, i32 noundef 3, i64 noundef %58)
  %60 = call i64 @png_safecat(i8* noundef %53, i64 noundef 196, i64 noundef %54, i8* noundef %59)
  store i64 %60, i64* %11, align 8
  %61 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %62 = load i64, i64* %11, align 8
  %63 = call i64 @png_safecat(i8* noundef %61, i64 noundef 196, i64 noundef %62, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0))
  store i64 %63, i64* %11, align 8
  br label %64

64:                                               ; preds = %52, %38
  %65 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %66 = load i64, i64* %11, align 8
  %67 = load i8*, i8** %10, align 8
  %68 = call i64 @png_safecat(i8* noundef %65, i64 noundef 196, i64 noundef %66, i8* noundef %67)
  store i64 %68, i64* %11, align 8
  %69 = load i64, i64* %11, align 8
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %71 = getelementptr inbounds [196 x i8], [196 x i8]* %12, i64 0, i64 0
  %72 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %73 = icmp ne %struct.png_colorspace* %72, null
  %74 = zext i1 %73 to i64
  %75 = select i1 %73, i32 2, i32 1
  call void @png_chunk_report(%struct.png_struct_def* noundef %70, i8* noundef %71, i32 noundef %75)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @is_ICC_signature(i64 noundef %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 24
  %5 = call i32 @is_ICC_signature_char(i64 noundef %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = load i64, i64* %2, align 8
  %9 = lshr i64 %8, 16
  %10 = and i64 %9, 255
  %11 = call i32 @is_ICC_signature_char(i64 noundef %10)
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %7
  %14 = load i64, i64* %2, align 8
  %15 = lshr i64 %14, 8
  %16 = and i64 %15, 255
  %17 = call i32 @is_ICC_signature_char(i64 noundef %16)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = load i64, i64* %2, align 8
  %21 = and i64 %20, 255
  %22 = call i32 @is_ICC_signature_char(i64 noundef %21)
  %23 = icmp ne i32 %22, 0
  br label %24

24:                                               ; preds = %19, %13, %7, %1
  %25 = phi i1 [ false, %13 ], [ false, %7 ], [ false, %1 ], [ %23, %19 ]
  %26 = zext i1 %25 to i32
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_icc_tag_name(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  store i8 39, i8* %6, align 1
  %7 = load i32, i32* %4, align 4
  %8 = lshr i32 %7, 24
  %9 = call signext i8 @png_icc_tag_char(i32 noundef %8)
  %10 = load i8*, i8** %3, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %9, i8* %11, align 1
  %12 = load i32, i32* %4, align 4
  %13 = lshr i32 %12, 16
  %14 = call signext i8 @png_icc_tag_char(i32 noundef %13)
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 2
  store i8 %14, i8* %16, align 1
  %17 = load i32, i32* %4, align 4
  %18 = lshr i32 %17, 8
  %19 = call signext i8 @png_icc_tag_char(i32 noundef %18)
  %20 = load i8*, i8** %3, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 3
  store i8 %19, i8* %21, align 1
  %22 = load i32, i32* %4, align 4
  %23 = call signext i8 @png_icc_tag_char(i32 noundef %22)
  %24 = load i8*, i8** %3, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 4
  store i8 %23, i8* %25, align 1
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 5
  store i8 39, i8* %27, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @png_icc_tag_char(i32 noundef %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 255
  store i32 %5, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp uge i32 %6, 32
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4
  %10 = icmp ule i32 %9, 126
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = load i32, i32* %3, align 4
  %13 = trunc i32 %12 to i8
  store i8 %13, i8* %2, align 1
  br label %15

14:                                               ; preds = %8, %1
  store i8 63, i8* %2, align 1
  br label %15

15:                                               ; preds = %14, %11
  %16 = load i8, i8* %2, align 1
  ret i8 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @is_ICC_signature_char(i64 noundef %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 32
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = load i64, i64* %2, align 8
  %7 = icmp uge i64 %6, 48
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = load i64, i64* %2, align 8
  %10 = icmp ule i64 %9, 57
  br i1 %10, label %25, label %11

11:                                               ; preds = %8, %5
  %12 = load i64, i64* %2, align 8
  %13 = icmp uge i64 %12, 65
  br i1 %13, label %14, label %17

14:                                               ; preds = %11
  %15 = load i64, i64* %2, align 8
  %16 = icmp ule i64 %15, 90
  br i1 %16, label %25, label %17

17:                                               ; preds = %14, %11
  %18 = load i64, i64* %2, align 8
  %19 = icmp uge i64 %18, 97
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = load i64, i64* %2, align 8
  %22 = icmp ule i64 %21, 122
  br label %23

23:                                               ; preds = %20, %17
  %24 = phi i1 [ false, %17 ], [ %22, %20 ]
  br label %25

25:                                               ; preds = %23, %14, %8, %1
  %26 = phi i1 [ true, %14 ], [ true, %8 ], [ true, %1 ], [ %24, %23 ]
  %27 = zext i1 %26 to i32
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_icc_check_length(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_colorspace*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %11 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = load i32, i32* %9, align 4
  %14 = call i32 @icc_check_length(%struct.png_struct_def* noundef %10, %struct.png_colorspace* noundef %11, i8* noundef %12, i32 noundef %13)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  br label %38

17:                                               ; preds = %4
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 136
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %17
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 136
  %25 = load i64, i64* %24, align 8
  %26 = load i32, i32* %9, align 4
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %22
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %31 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %32 = load i8*, i8** %8, align 8
  %33 = load i32, i32* %9, align 4
  %34 = zext i32 %33 to i64
  %35 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %30, %struct.png_colorspace* noundef %31, i8* noundef %32, i64 noundef %34, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0))
  store i32 %35, i32* %5, align 4
  br label %38

36:                                               ; preds = %22, %17
  br label %37

37:                                               ; preds = %36
  store i32 1, i32* %5, align 4
  br label %38

38:                                               ; preds = %37, %29, %16
  %39 = load i32, i32* %5, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @icc_check_length(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_colorspace*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %10, 132
  br i1 %11, label %12, label %19

12:                                               ; preds = %4
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %14 = load %struct.png_colorspace*, %struct.png_colorspace** %7, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = load i32, i32* %9, align 4
  %17 = zext i32 %16 to i64
  %18 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %13, %struct.png_colorspace* noundef %14, i8* noundef %15, i64 noundef %17, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i64 0, i64 0))
  store i32 %18, i32* %5, align 4
  br label %20

19:                                               ; preds = %4
  store i32 1, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %12
  %21 = load i32, i32* %5, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_icc_check_header(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.png_struct_def*, align 8
  %9 = alloca %struct.png_colorspace*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %8, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %9, align 8
  store i8* %2, i8** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8* %4, i8** %12, align 8
  store i32 %5, i32* %13, align 4
  %15 = load i8*, i8** %12, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl i32 %17, 24
  %19 = load i8*, i8** %12, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl i32 %22, 16
  %24 = add i32 %18, %23
  %25 = load i8*, i8** %12, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl i32 %28, 8
  %30 = add i32 %24, %29
  %31 = load i8*, i8** %12, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = add i32 %30, %34
  store i32 %35, i32* %14, align 4
  %36 = load i32, i32* %14, align 4
  %37 = load i32, i32* %11, align 4
  %38 = icmp ne i32 %36, %37
  br i1 %38, label %39, label %46

39:                                               ; preds = %6
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %41 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %42 = load i8*, i8** %10, align 8
  %43 = load i32, i32* %14, align 4
  %44 = zext i32 %43 to i64
  %45 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %40, %struct.png_colorspace* noundef %41, i8* noundef %42, i64 noundef %44, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0))
  store i32 %45, i32* %7, align 4
  br label %341

46:                                               ; preds = %6
  %47 = load i8*, i8** %12, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  store i32 %50, i32* %14, align 4
  %51 = load i32, i32* %14, align 4
  %52 = icmp ugt i32 %51, 3
  br i1 %52, label %53, label %64

53:                                               ; preds = %46
  %54 = load i32, i32* %11, align 4
  %55 = and i32 %54, 3
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %59 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %60 = load i8*, i8** %10, align 8
  %61 = load i32, i32* %11, align 4
  %62 = zext i32 %61 to i64
  %63 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %58, %struct.png_colorspace* noundef %59, i8* noundef %60, i64 noundef %62, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0))
  store i32 %63, i32* %7, align 4
  br label %341

64:                                               ; preds = %53, %46
  %65 = load i8*, i8** %12, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 128
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl i32 %68, 24
  %70 = load i8*, i8** %12, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 128
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 16
  %76 = add i32 %69, %75
  %77 = load i8*, i8** %12, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 128
  %79 = getelementptr inbounds i8, i8* %78, i64 2
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl i32 %81, 8
  %83 = add i32 %76, %82
  %84 = load i8*, i8** %12, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 128
  %86 = getelementptr inbounds i8, i8* %85, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add i32 %83, %88
  store i32 %89, i32* %14, align 4
  %90 = load i32, i32* %14, align 4
  %91 = icmp ugt i32 %90, 357913930
  br i1 %91, label %98, label %92

92:                                               ; preds = %64
  %93 = load i32, i32* %11, align 4
  %94 = load i32, i32* %14, align 4
  %95 = mul i32 12, %94
  %96 = add i32 132, %95
  %97 = icmp ult i32 %93, %96
  br i1 %97, label %98, label %105

98:                                               ; preds = %92, %64
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %100 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %101 = load i8*, i8** %10, align 8
  %102 = load i32, i32* %14, align 4
  %103 = zext i32 %102 to i64
  %104 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %99, %struct.png_colorspace* noundef %100, i8* noundef %101, i64 noundef %103, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i64 0, i64 0))
  store i32 %104, i32* %7, align 4
  br label %341

105:                                              ; preds = %92
  %106 = load i8*, i8** %12, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 64
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl i32 %109, 24
  %111 = load i8*, i8** %12, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 64
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl i32 %115, 16
  %117 = add i32 %110, %116
  %118 = load i8*, i8** %12, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 64
  %120 = getelementptr inbounds i8, i8* %119, i64 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = shl i32 %122, 8
  %124 = add i32 %117, %123
  %125 = load i8*, i8** %12, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 64
  %127 = getelementptr inbounds i8, i8* %126, i64 3
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = add i32 %124, %129
  store i32 %130, i32* %14, align 4
  %131 = load i32, i32* %14, align 4
  %132 = icmp uge i32 %131, 65535
  br i1 %132, label %133, label %140

133:                                              ; preds = %105
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %135 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %136 = load i8*, i8** %10, align 8
  %137 = load i32, i32* %14, align 4
  %138 = zext i32 %137 to i64
  %139 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %134, %struct.png_colorspace* noundef %135, i8* noundef %136, i64 noundef %138, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0))
  store i32 %139, i32* %7, align 4
  br label %341

140:                                              ; preds = %105
  %141 = load i32, i32* %14, align 4
  %142 = icmp uge i32 %141, 4
  br i1 %142, label %143, label %149

143:                                              ; preds = %140
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %145 = load i8*, i8** %10, align 8
  %146 = load i32, i32* %14, align 4
  %147 = zext i32 %146 to i64
  %148 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %144, %struct.png_colorspace* noundef null, i8* noundef %145, i64 noundef %147, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i64 0, i64 0))
  br label %149

149:                                              ; preds = %143, %140
  %150 = load i8*, i8** %12, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 36
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = shl i32 %153, 24
  %155 = load i8*, i8** %12, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 36
  %157 = getelementptr inbounds i8, i8* %156, i64 1
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = shl i32 %159, 16
  %161 = add i32 %154, %160
  %162 = load i8*, i8** %12, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 36
  %164 = getelementptr inbounds i8, i8* %163, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = shl i32 %166, 8
  %168 = add i32 %161, %167
  %169 = load i8*, i8** %12, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 36
  %171 = getelementptr inbounds i8, i8* %170, i64 3
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = add i32 %168, %173
  store i32 %174, i32* %14, align 4
  %175 = load i32, i32* %14, align 4
  %176 = icmp ne i32 %175, 1633907568
  br i1 %176, label %177, label %184

177:                                              ; preds = %149
  %178 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %179 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %180 = load i8*, i8** %10, align 8
  %181 = load i32, i32* %14, align 4
  %182 = zext i32 %181 to i64
  %183 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %178, %struct.png_colorspace* noundef %179, i8* noundef %180, i64 noundef %182, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0))
  store i32 %183, i32* %7, align 4
  br label %341

184:                                              ; preds = %149
  %185 = load i8*, i8** %12, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 68
  %187 = call i32 @memcmp(i8* noundef %186, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @D50_nCIEXYZ, i64 0, i64 0), i64 noundef 12) #14
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %184
  %190 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %191 = load i8*, i8** %10, align 8
  %192 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %190, %struct.png_colorspace* noundef null, i8* noundef %191, i64 noundef 0, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0))
  br label %193

193:                                              ; preds = %189, %184
  %194 = load i8*, i8** %12, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 16
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl i32 %197, 24
  %199 = load i8*, i8** %12, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 16
  %201 = getelementptr inbounds i8, i8* %200, i64 1
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl i32 %203, 16
  %205 = add i32 %198, %204
  %206 = load i8*, i8** %12, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 16
  %208 = getelementptr inbounds i8, i8* %207, i64 2
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = shl i32 %210, 8
  %212 = add i32 %205, %211
  %213 = load i8*, i8** %12, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 16
  %215 = getelementptr inbounds i8, i8* %214, i64 3
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = add i32 %212, %217
  store i32 %218, i32* %14, align 4
  %219 = load i32, i32* %14, align 4
  switch i32 %219, label %244 [
    i32 1380401696, label %220
    i32 1196573017, label %232
  ]

220:                                              ; preds = %193
  %221 = load i32, i32* %13, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %231

224:                                              ; preds = %220
  %225 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %226 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %227 = load i8*, i8** %10, align 8
  %228 = load i32, i32* %14, align 4
  %229 = zext i32 %228 to i64
  %230 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %225, %struct.png_colorspace* noundef %226, i8* noundef %227, i64 noundef %229, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.38, i64 0, i64 0))
  store i32 %230, i32* %7, align 4
  br label %341

231:                                              ; preds = %220
  br label %251

232:                                              ; preds = %193
  %233 = load i32, i32* %13, align 4
  %234 = and i32 %233, 2
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %243

236:                                              ; preds = %232
  %237 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %238 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %239 = load i8*, i8** %10, align 8
  %240 = load i32, i32* %14, align 4
  %241 = zext i32 %240 to i64
  %242 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %237, %struct.png_colorspace* noundef %238, i8* noundef %239, i64 noundef %241, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0))
  store i32 %242, i32* %7, align 4
  br label %341

243:                                              ; preds = %232
  br label %251

244:                                              ; preds = %193
  %245 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %246 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %247 = load i8*, i8** %10, align 8
  %248 = load i32, i32* %14, align 4
  %249 = zext i32 %248 to i64
  %250 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %245, %struct.png_colorspace* noundef %246, i8* noundef %247, i64 noundef %249, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i64 0, i64 0))
  store i32 %250, i32* %7, align 4
  br label %341

251:                                              ; preds = %243, %231
  %252 = load i8*, i8** %12, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 12
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = shl i32 %255, 24
  %257 = load i8*, i8** %12, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 12
  %259 = getelementptr inbounds i8, i8* %258, i64 1
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = shl i32 %261, 16
  %263 = add i32 %256, %262
  %264 = load i8*, i8** %12, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 12
  %266 = getelementptr inbounds i8, i8* %265, i64 2
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = shl i32 %268, 8
  %270 = add i32 %263, %269
  %271 = load i8*, i8** %12, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 12
  %273 = getelementptr inbounds i8, i8* %272, i64 3
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add i32 %270, %275
  store i32 %276, i32* %14, align 4
  %277 = load i32, i32* %14, align 4
  switch i32 %277, label %299 [
    i32 1935896178, label %278
    i32 1835955314, label %278
    i32 1886549106, label %278
    i32 1936744803, label %278
    i32 1633842036, label %279
    i32 1818848875, label %286
    i32 1852662636, label %293
  ]

278:                                              ; preds = %251, %251, %251, %251
  br label %305

279:                                              ; preds = %251
  %280 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %281 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %282 = load i8*, i8** %10, align 8
  %283 = load i32, i32* %14, align 4
  %284 = zext i32 %283 to i64
  %285 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %280, %struct.png_colorspace* noundef %281, i8* noundef %282, i64 noundef %284, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0))
  store i32 %285, i32* %7, align 4
  br label %341

286:                                              ; preds = %251
  %287 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %288 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %289 = load i8*, i8** %10, align 8
  %290 = load i32, i32* %14, align 4
  %291 = zext i32 %290 to i64
  %292 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %287, %struct.png_colorspace* noundef %288, i8* noundef %289, i64 noundef %291, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0))
  store i32 %292, i32* %7, align 4
  br label %341

293:                                              ; preds = %251
  %294 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %295 = load i8*, i8** %10, align 8
  %296 = load i32, i32* %14, align 4
  %297 = zext i32 %296 to i64
  %298 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %294, %struct.png_colorspace* noundef null, i8* noundef %295, i64 noundef %297, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.43, i64 0, i64 0))
  br label %305

299:                                              ; preds = %251
  %300 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %301 = load i8*, i8** %10, align 8
  %302 = load i32, i32* %14, align 4
  %303 = zext i32 %302 to i64
  %304 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %300, %struct.png_colorspace* noundef null, i8* noundef %301, i64 noundef %303, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.44, i64 0, i64 0))
  br label %305

305:                                              ; preds = %299, %293, %278
  %306 = load i8*, i8** %12, align 8
  %307 = getelementptr inbounds i8, i8* %306, i64 20
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = shl i32 %309, 24
  %311 = load i8*, i8** %12, align 8
  %312 = getelementptr inbounds i8, i8* %311, i64 20
  %313 = getelementptr inbounds i8, i8* %312, i64 1
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = shl i32 %315, 16
  %317 = add i32 %310, %316
  %318 = load i8*, i8** %12, align 8
  %319 = getelementptr inbounds i8, i8* %318, i64 20
  %320 = getelementptr inbounds i8, i8* %319, i64 2
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = shl i32 %322, 8
  %324 = add i32 %317, %323
  %325 = load i8*, i8** %12, align 8
  %326 = getelementptr inbounds i8, i8* %325, i64 20
  %327 = getelementptr inbounds i8, i8* %326, i64 3
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i32
  %330 = add i32 %324, %329
  store i32 %330, i32* %14, align 4
  %331 = load i32, i32* %14, align 4
  switch i32 %331, label %333 [
    i32 1482250784, label %332
    i32 1281450528, label %332
  ]

332:                                              ; preds = %305, %305
  br label %340

333:                                              ; preds = %305
  %334 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %335 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %336 = load i8*, i8** %10, align 8
  %337 = load i32, i32* %14, align 4
  %338 = zext i32 %337 to i64
  %339 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %334, %struct.png_colorspace* noundef %335, i8* noundef %336, i64 noundef %338, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0))
  store i32 %339, i32* %7, align 4
  br label %341

340:                                              ; preds = %332
  store i32 1, i32* %7, align 4
  br label %341

341:                                              ; preds = %340, %333, %286, %279, %244, %236, %224, %177, %133, %98, %57, %39
  %342 = load i32, i32* %7, align 4
  ret i32 %342
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_icc_check_tag_table(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i32 noundef %3, i8* noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_colorspace*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i8* %4, i8** %11, align 8
  %18 = load i8*, i8** %11, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 128
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl i32 %21, 24
  %23 = load i8*, i8** %11, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 128
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl i32 %27, 16
  %29 = add i32 %22, %28
  %30 = load i8*, i8** %11, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 128
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl i32 %34, 8
  %36 = add i32 %29, %35
  %37 = load i8*, i8** %11, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 128
  %39 = getelementptr inbounds i8, i8* %38, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = add i32 %36, %41
  store i32 %42, i32* %12, align 4
  %43 = load i8*, i8** %11, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 132
  store i8* %44, i8** %14, align 8
  store i32 0, i32* %13, align 4
  br label %45

45:                                               ; preds = %152, %5
  %46 = load i32, i32* %13, align 4
  %47 = load i32, i32* %12, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %49, label %157

49:                                               ; preds = %45
  %50 = load i8*, i8** %14, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl i32 %53, 24
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 16
  %61 = add i32 %54, %60
  %62 = load i8*, i8** %14, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = getelementptr inbounds i8, i8* %63, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl i32 %66, 8
  %68 = add i32 %61, %67
  %69 = load i8*, i8** %14, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = getelementptr inbounds i8, i8* %70, i64 3
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = add i32 %68, %73
  store i32 %74, i32* %15, align 4
  %75 = load i8*, i8** %14, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 4
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, 24
  %80 = load i8*, i8** %14, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 4
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl i32 %84, 16
  %86 = add i32 %79, %85
  %87 = load i8*, i8** %14, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  %89 = getelementptr inbounds i8, i8* %88, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl i32 %91, 8
  %93 = add i32 %86, %92
  %94 = load i8*, i8** %14, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 4
  %96 = getelementptr inbounds i8, i8* %95, i64 3
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = add i32 %93, %98
  store i32 %99, i32* %16, align 4
  %100 = load i8*, i8** %14, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 8
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = shl i32 %103, 24
  %105 = load i8*, i8** %14, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 8
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl i32 %109, 16
  %111 = add i32 %104, %110
  %112 = load i8*, i8** %14, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 8
  %114 = getelementptr inbounds i8, i8* %113, i64 2
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = shl i32 %116, 8
  %118 = add i32 %111, %117
  %119 = load i8*, i8** %14, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 8
  %121 = getelementptr inbounds i8, i8* %120, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = add i32 %118, %123
  store i32 %124, i32* %17, align 4
  %125 = load i32, i32* %16, align 4
  %126 = load i32, i32* %10, align 4
  %127 = icmp ugt i32 %125, %126
  br i1 %127, label %134, label %128

128:                                              ; preds = %49
  %129 = load i32, i32* %17, align 4
  %130 = load i32, i32* %10, align 4
  %131 = load i32, i32* %16, align 4
  %132 = sub i32 %130, %131
  %133 = icmp ugt i32 %129, %132
  br i1 %133, label %134, label %141

134:                                              ; preds = %128, %49
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %136 = load %struct.png_colorspace*, %struct.png_colorspace** %8, align 8
  %137 = load i8*, i8** %9, align 8
  %138 = load i32, i32* %15, align 4
  %139 = zext i32 %138 to i64
  %140 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %135, %struct.png_colorspace* noundef %136, i8* noundef %137, i64 noundef %139, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.46, i64 0, i64 0))
  store i32 %140, i32* %6, align 4
  br label %158

141:                                              ; preds = %128
  %142 = load i32, i32* %16, align 4
  %143 = and i32 %142, 3
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %151

145:                                              ; preds = %141
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %147 = load i8*, i8** %9, align 8
  %148 = load i32, i32* %15, align 4
  %149 = zext i32 %148 to i64
  %150 = call i32 @png_icc_profile_error(%struct.png_struct_def* noundef %146, %struct.png_colorspace* noundef null, i8* noundef %147, i64 noundef %149, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0))
  br label %151

151:                                              ; preds = %145, %141
  br label %152

152:                                              ; preds = %151
  %153 = load i32, i32* %13, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %13, align 4
  %155 = load i8*, i8** %14, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 12
  store i8* %156, i8** %14, align 8
  br label %45, !llvm.loop !15

157:                                              ; preds = %45
  store i32 1, i32* %6, align 4
  br label %158

158:                                              ; preds = %157, %134
  %159 = load i32, i32* %6, align 4
  ret i32 %159
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_icc_set_sRGB(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_colorspace*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = load i8*, i8** %7, align 8
  %11 = load i64, i64* %8, align 8
  %12 = call i32 @png_compare_ICC_profile_with_sRGB(%struct.png_struct_def* noundef %9, i8* noundef %10, i64 noundef %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %43

14:                                               ; preds = %4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %16 = load %struct.png_colorspace*, %struct.png_colorspace** %6, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 64
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl i32 %20, 24
  %22 = load i8*, i8** %7, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 64
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl i32 %26, 16
  %28 = add i32 %21, %27
  %29 = load i8*, i8** %7, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 64
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl i32 %33, 8
  %35 = add i32 %28, %34
  %36 = load i8*, i8** %7, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 64
  %38 = getelementptr inbounds i8, i8* %37, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add i32 %35, %40
  %42 = call i32 @png_colorspace_set_sRGB(%struct.png_struct_def* noundef %15, %struct.png_colorspace* noundef %16, i32 noundef %41)
  br label %43

43:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_compare_ICC_profile_with_sRGB(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 0, i32* %8, align 4
  store i32 65536, i32* %9, align 4
  store i64 0, i64* %10, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 110
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 4
  %16 = and i32 %15, 3
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %297

19:                                               ; preds = %3
  store i32 0, i32* %11, align 4
  br label %20

20:                                               ; preds = %293, %19
  %21 = load i32, i32* %11, align 4
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %22, 7
  br i1 %23, label %24, label %296

24:                                               ; preds = %20
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 84
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl i32 %28, 24
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 84
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl i32 %34, 16
  %36 = add i32 %29, %35
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 84
  %39 = getelementptr inbounds i8, i8* %38, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl i32 %41, 8
  %43 = add i32 %36, %42
  %44 = load i8*, i8** %6, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 84
  %46 = getelementptr inbounds i8, i8* %45, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add i32 %43, %48
  %50 = load i32, i32* %11, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %51
  %53 = getelementptr inbounds %struct.anon, %struct.anon* %52, i32 0, i32 3
  %54 = getelementptr inbounds [4 x i32], [4 x i32]* %53, i64 0, i64 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %49, %55
  br i1 %56, label %57, label %292

57:                                               ; preds = %24
  %58 = load i8*, i8** %6, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 88
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl i32 %61, 24
  %63 = load i8*, i8** %6, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 88
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl i32 %67, 16
  %69 = add i32 %62, %68
  %70 = load i8*, i8** %6, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 88
  %72 = getelementptr inbounds i8, i8* %71, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 8
  %76 = add i32 %69, %75
  %77 = load i8*, i8** %6, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 88
  %79 = getelementptr inbounds i8, i8* %78, i64 3
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = add i32 %76, %81
  %83 = load i32, i32* %11, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %84
  %86 = getelementptr inbounds %struct.anon, %struct.anon* %85, i32 0, i32 3
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* %86, i64 0, i64 1
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %82, %88
  br i1 %89, label %90, label %292

90:                                               ; preds = %57
  %91 = load i8*, i8** %6, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 92
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = shl i32 %94, 24
  %96 = load i8*, i8** %6, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 92
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl i32 %100, 16
  %102 = add i32 %95, %101
  %103 = load i8*, i8** %6, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 92
  %105 = getelementptr inbounds i8, i8* %104, i64 2
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = shl i32 %107, 8
  %109 = add i32 %102, %108
  %110 = load i8*, i8** %6, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 92
  %112 = getelementptr inbounds i8, i8* %111, i64 3
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = add i32 %109, %114
  %116 = load i32, i32* %11, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %117
  %119 = getelementptr inbounds %struct.anon, %struct.anon* %118, i32 0, i32 3
  %120 = getelementptr inbounds [4 x i32], [4 x i32]* %119, i64 0, i64 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %292

123:                                              ; preds = %90
  %124 = load i8*, i8** %6, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 96
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl i32 %127, 24
  %129 = load i8*, i8** %6, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 96
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl i32 %133, 16
  %135 = add i32 %128, %134
  %136 = load i8*, i8** %6, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 96
  %138 = getelementptr inbounds i8, i8* %137, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = shl i32 %140, 8
  %142 = add i32 %135, %141
  %143 = load i8*, i8** %6, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 96
  %145 = getelementptr inbounds i8, i8* %144, i64 3
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = add i32 %142, %147
  %149 = load i32, i32* %11, align 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %150
  %152 = getelementptr inbounds %struct.anon, %struct.anon* %151, i32 0, i32 3
  %153 = getelementptr inbounds [4 x i32], [4 x i32]* %152, i64 0, i64 3
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %148, %154
  br i1 %155, label %156, label %292

156:                                              ; preds = %123
  %157 = load i32, i32* %8, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %206

159:                                              ; preds = %156
  %160 = load i8*, i8** %6, align 8
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = shl i32 %162, 24
  %164 = load i8*, i8** %6, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 1
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = shl i32 %167, 16
  %169 = add i32 %163, %168
  %170 = load i8*, i8** %6, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 2
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl i32 %173, 8
  %175 = add i32 %169, %174
  %176 = load i8*, i8** %6, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 3
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = add i32 %175, %179
  store i32 %180, i32* %8, align 4
  %181 = load i8*, i8** %6, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 64
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = shl i32 %184, 24
  %186 = load i8*, i8** %6, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 64
  %188 = getelementptr inbounds i8, i8* %187, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = shl i32 %190, 16
  %192 = add i32 %185, %191
  %193 = load i8*, i8** %6, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 64
  %195 = getelementptr inbounds i8, i8* %194, i64 2
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl i32 %197, 8
  %199 = add i32 %192, %198
  %200 = load i8*, i8** %6, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 64
  %202 = getelementptr inbounds i8, i8* %201, i64 3
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = add i32 %199, %204
  store i32 %205, i32* %9, align 4
  br label %206

206:                                              ; preds = %159, %156
  %207 = load i32, i32* %8, align 4
  %208 = load i32, i32* %11, align 4
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %209
  %211 = getelementptr inbounds %struct.anon, %struct.anon* %210, i32 0, i32 2
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %207, %212
  br i1 %213, label %214, label %291

214:                                              ; preds = %206
  %215 = load i32, i32* %9, align 4
  %216 = load i32, i32* %11, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %217
  %219 = getelementptr inbounds %struct.anon, %struct.anon* %218, i32 0, i32 6
  %220 = load i16, i16* %219, align 2
  %221 = zext i16 %220 to i32
  %222 = icmp eq i32 %215, %221
  br i1 %222, label %223, label %291

223:                                              ; preds = %214
  %224 = load i64, i64* %7, align 8
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %232

226:                                              ; preds = %223
  %227 = call i64 @adler32(i64 noundef 0, i8* noundef null, i32 noundef 0)
  store i64 %227, i64* %7, align 8
  %228 = load i64, i64* %7, align 8
  %229 = load i8*, i8** %6, align 8
  %230 = load i32, i32* %8, align 4
  %231 = call i64 @adler32(i64 noundef %228, i8* noundef %229, i32 noundef %230)
  store i64 %231, i64* %7, align 8
  br label %232

232:                                              ; preds = %226, %223
  %233 = load i64, i64* %7, align 8
  %234 = load i32, i32* %11, align 4
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %235
  %237 = getelementptr inbounds %struct.anon, %struct.anon* %236, i32 0, i32 0
  %238 = load i32, i32* %237, align 16
  %239 = zext i32 %238 to i64
  %240 = icmp eq i64 %233, %239
  br i1 %240, label %241, label %289

241:                                              ; preds = %232
  %242 = load i64, i64* %10, align 8
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %250

244:                                              ; preds = %241
  %245 = call i64 @crc32(i64 noundef 0, i8* noundef null, i32 noundef 0)
  store i64 %245, i64* %10, align 8
  %246 = load i64, i64* %10, align 8
  %247 = load i8*, i8** %6, align 8
  %248 = load i32, i32* %8, align 4
  %249 = call i64 @crc32(i64 noundef %246, i8* noundef %247, i32 noundef %248)
  store i64 %249, i64* %10, align 8
  br label %250

250:                                              ; preds = %244, %241
  %251 = load i64, i64* %10, align 8
  %252 = load i32, i32* %11, align 4
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %253
  %255 = getelementptr inbounds %struct.anon, %struct.anon* %254, i32 0, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = zext i32 %256 to i64
  %258 = icmp eq i64 %251, %257
  br i1 %258, label %259, label %288

259:                                              ; preds = %250
  %260 = load i32, i32* %11, align 4
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %261
  %263 = getelementptr inbounds %struct.anon, %struct.anon* %262, i32 0, i32 5
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %259
  %268 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %268, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i64 0, i64 0), i32 noundef 2)
  br label %280

269:                                              ; preds = %259
  %270 = load i32, i32* %11, align 4
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %271
  %273 = getelementptr inbounds %struct.anon, %struct.anon* %272, i32 0, i32 4
  %274 = load i8, i8* %273, align 4
  %275 = zext i8 %274 to i32
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %269
  %278 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %278, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.77, i64 0, i64 0), i32 noundef 0)
  br label %279

279:                                              ; preds = %277, %269
  br label %280

280:                                              ; preds = %279, %267
  %281 = load i32, i32* %11, align 4
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @png_sRGB_checks, i64 0, i64 %282
  %284 = getelementptr inbounds %struct.anon, %struct.anon* %283, i32 0, i32 5
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i32
  %287 = add nsw i32 1, %286
  store i32 %287, i32* %4, align 4
  br label %297

288:                                              ; preds = %250
  br label %289

289:                                              ; preds = %288, %232
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %290, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.78, i64 0, i64 0), i32 noundef 0)
  br label %296

291:                                              ; preds = %214, %206
  br label %292

292:                                              ; preds = %291, %123, %90, %57, %24
  br label %293

293:                                              ; preds = %292
  %294 = load i32, i32* %11, align 4
  %295 = add i32 %294, 1
  store i32 %295, i32* %11, align 4
  br label %20, !llvm.loop !16

296:                                              ; preds = %289, %20
  store i32 0, i32* %4, align 4
  br label %297

297:                                              ; preds = %296, %280, %18
  %298 = load i32, i32* %4, align 4
  ret i32 %298
}

declare i64 @adler32(i64 noundef, i8* noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_colorspace_set_ICC(%struct.png_struct_def* noalias noundef %0, %struct.png_colorspace* noalias noundef %1, i8* noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.png_struct_def*, align 8
  %9 = alloca %struct.png_colorspace*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %8, align 8
  store %struct.png_colorspace* %1, %struct.png_colorspace** %9, align 8
  store i8* %2, i8** %10, align 8
  store i32 %3, i32* %11, align 4
  store i8* %4, i8** %12, align 8
  store i32 %5, i32* %13, align 4
  %14 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %15 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %14, i32 0, i32 4
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 32768
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %50

21:                                               ; preds = %6
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %23 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %24 = load i8*, i8** %10, align 8
  %25 = load i32, i32* %11, align 4
  %26 = call i32 @icc_check_length(%struct.png_struct_def* noundef %22, %struct.png_colorspace* noundef %23, i8* noundef %24, i32 noundef %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %21
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %30 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %31 = load i8*, i8** %10, align 8
  %32 = load i32, i32* %11, align 4
  %33 = load i8*, i8** %12, align 8
  %34 = load i32, i32* %13, align 4
  %35 = call i32 @png_icc_check_header(%struct.png_struct_def* noundef %29, %struct.png_colorspace* noundef %30, i8* noundef %31, i32 noundef %32, i8* noundef %33, i32 noundef %34)
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %28
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %39 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %40 = load i8*, i8** %10, align 8
  %41 = load i32, i32* %11, align 4
  %42 = load i8*, i8** %12, align 8
  %43 = call i32 @png_icc_check_tag_table(%struct.png_struct_def* noundef %38, %struct.png_colorspace* noundef %39, i8* noundef %40, i32 noundef %41, i8* noundef %42)
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %47 = load %struct.png_colorspace*, %struct.png_colorspace** %9, align 8
  %48 = load i8*, i8** %12, align 8
  call void @png_icc_set_sRGB(%struct.png_struct_def* noundef %46, %struct.png_colorspace* noundef %47, i8* noundef %48, i64 noundef 0)
  store i32 1, i32* %7, align 4
  br label %50

49:                                               ; preds = %37, %28, %21
  store i32 0, i32* %7, align 4
  br label %50

50:                                               ; preds = %49, %45, %20
  %51 = load i32, i32* %7, align 4
  ret i32 %51
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_colorspace_set_rgb_coefficients(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 119
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %165

13:                                               ; preds = %1
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 145
  %16 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %15, i32 0, i32 4
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 2
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %165

21:                                               ; preds = %13
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 145
  %24 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %23, i32 0, i32 2
  %25 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %3, align 4
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 145
  %29 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %28, i32 0, i32 2
  %30 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %4, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 145
  %34 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %33, i32 0, i32 2
  %35 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %34, i32 0, i32 7
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %5, align 4
  %37 = load i32, i32* %3, align 4
  %38 = load i32, i32* %4, align 4
  %39 = add nsw i32 %37, %38
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %39, %40
  store i32 %41, i32* %6, align 4
  %42 = load i32, i32* %6, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %162

44:                                               ; preds = %21
  %45 = load i32, i32* %3, align 4
  %46 = icmp sge i32 %45, 0
  br i1 %46, label %47, label %162

47:                                               ; preds = %44
  %48 = load i32, i32* %3, align 4
  %49 = load i32, i32* %6, align 4
  %50 = call i32 @png_muldiv(i32* noundef %3, i32 noundef %48, i32 noundef 32768, i32 noundef %49)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %162

52:                                               ; preds = %47
  %53 = load i32, i32* %3, align 4
  %54 = icmp sge i32 %53, 0
  br i1 %54, label %55, label %162

55:                                               ; preds = %52
  %56 = load i32, i32* %3, align 4
  %57 = icmp sle i32 %56, 32768
  br i1 %57, label %58, label %162

58:                                               ; preds = %55
  %59 = load i32, i32* %4, align 4
  %60 = icmp sge i32 %59, 0
  br i1 %60, label %61, label %162

61:                                               ; preds = %58
  %62 = load i32, i32* %4, align 4
  %63 = load i32, i32* %6, align 4
  %64 = call i32 @png_muldiv(i32* noundef %4, i32 noundef %62, i32 noundef 32768, i32 noundef %63)
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %162

66:                                               ; preds = %61
  %67 = load i32, i32* %4, align 4
  %68 = icmp sge i32 %67, 0
  br i1 %68, label %69, label %162

69:                                               ; preds = %66
  %70 = load i32, i32* %4, align 4
  %71 = icmp sle i32 %70, 32768
  br i1 %71, label %72, label %162

72:                                               ; preds = %69
  %73 = load i32, i32* %5, align 4
  %74 = icmp sge i32 %73, 0
  br i1 %74, label %75, label %162

75:                                               ; preds = %72
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %6, align 4
  %78 = call i32 @png_muldiv(i32* noundef %5, i32 noundef %76, i32 noundef 32768, i32 noundef %77)
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %162

80:                                               ; preds = %75
  %81 = load i32, i32* %5, align 4
  %82 = icmp sge i32 %81, 0
  br i1 %82, label %83, label %162

83:                                               ; preds = %80
  %84 = load i32, i32* %5, align 4
  %85 = icmp sle i32 %84, 32768
  br i1 %85, label %86, label %162

86:                                               ; preds = %83
  %87 = load i32, i32* %3, align 4
  %88 = load i32, i32* %4, align 4
  %89 = add nsw i32 %87, %88
  %90 = load i32, i32* %5, align 4
  %91 = add nsw i32 %89, %90
  %92 = icmp sle i32 %91, 32769
  br i1 %92, label %93, label %162

93:                                               ; preds = %86
  store i32 0, i32* %7, align 4
  %94 = load i32, i32* %3, align 4
  %95 = load i32, i32* %4, align 4
  %96 = add nsw i32 %94, %95
  %97 = load i32, i32* %5, align 4
  %98 = add nsw i32 %96, %97
  %99 = icmp sgt i32 %98, 32768
  br i1 %99, label %100, label %101

100:                                              ; preds = %93
  store i32 -1, i32* %7, align 4
  br label %110

101:                                              ; preds = %93
  %102 = load i32, i32* %3, align 4
  %103 = load i32, i32* %4, align 4
  %104 = add nsw i32 %102, %103
  %105 = load i32, i32* %5, align 4
  %106 = add nsw i32 %104, %105
  %107 = icmp slt i32 %106, 32768
  br i1 %107, label %108, label %109

108:                                              ; preds = %101
  store i32 1, i32* %7, align 4
  br label %109

109:                                              ; preds = %108, %101
  br label %110

110:                                              ; preds = %109, %100
  %111 = load i32, i32* %7, align 4
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %143

113:                                              ; preds = %110
  %114 = load i32, i32* %4, align 4
  %115 = load i32, i32* %3, align 4
  %116 = icmp sge i32 %114, %115
  br i1 %116, label %117, label %125

117:                                              ; preds = %113
  %118 = load i32, i32* %4, align 4
  %119 = load i32, i32* %5, align 4
  %120 = icmp sge i32 %118, %119
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = load i32, i32* %7, align 4
  %123 = load i32, i32* %4, align 4
  %124 = add nsw i32 %123, %122
  store i32 %124, i32* %4, align 4
  br label %142

125:                                              ; preds = %117, %113
  %126 = load i32, i32* %3, align 4
  %127 = load i32, i32* %4, align 4
  %128 = icmp sge i32 %126, %127
  br i1 %128, label %129, label %137

129:                                              ; preds = %125
  %130 = load i32, i32* %3, align 4
  %131 = load i32, i32* %5, align 4
  %132 = icmp sge i32 %130, %131
  br i1 %132, label %133, label %137

133:                                              ; preds = %129
  %134 = load i32, i32* %7, align 4
  %135 = load i32, i32* %3, align 4
  %136 = add nsw i32 %135, %134
  store i32 %136, i32* %3, align 4
  br label %141

137:                                              ; preds = %129, %125
  %138 = load i32, i32* %7, align 4
  %139 = load i32, i32* %5, align 4
  %140 = add nsw i32 %139, %138
  store i32 %140, i32* %5, align 4
  br label %141

141:                                              ; preds = %137, %133
  br label %142

142:                                              ; preds = %141, %121
  br label %143

143:                                              ; preds = %142, %110
  %144 = load i32, i32* %3, align 4
  %145 = load i32, i32* %4, align 4
  %146 = add nsw i32 %144, %145
  %147 = load i32, i32* %5, align 4
  %148 = add nsw i32 %146, %147
  %149 = icmp ne i32 %148, 32768
  br i1 %149, label %150, label %152

150:                                              ; preds = %143
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %151, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0)) #13
  unreachable

152:                                              ; preds = %143
  %153 = load i32, i32* %3, align 4
  %154 = trunc i32 %153 to i16
  %155 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %156 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %155, i32 0, i32 120
  store i16 %154, i16* %156, align 2
  %157 = load i32, i32* %4, align 4
  %158 = trunc i32 %157 to i16
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %159, i32 0, i32 121
  store i16 %158, i16* %160, align 4
  br label %161

161:                                              ; preds = %152
  br label %164

162:                                              ; preds = %86, %83, %80, %75, %72, %69, %66, %61, %58, %55, %52, %47, %44, %21
  %163 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %163, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i64 0, i64 0)) #13
  unreachable

164:                                              ; preds = %161
  br label %165

165:                                              ; preds = %164, %13, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_check_IHDR(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) #0 {
  %9 = alloca %struct.png_struct_def*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 %7, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %18 = load i32, i32* %10, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %21, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.50, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %22

22:                                               ; preds = %20, %8
  %23 = load i32, i32* %10, align 4
  %24 = icmp ugt i32 %23, 2147483647
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %27

27:                                               ; preds = %25, %22
  %28 = load i32, i32* %10, align 4
  %29 = add i32 %28, 7
  %30 = and i32 %29, -8
  %31 = zext i32 %30 to i64
  %32 = call i32 @png_gt(i64 noundef %31, i64 noundef 2305843009213693944)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = load i32, i32* %10, align 4
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 133
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %37, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %43, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %44

44:                                               ; preds = %42, %36
  %45 = load i32, i32* %11, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %48, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.54, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %49

49:                                               ; preds = %47, %44
  %50 = load i32, i32* %11, align 4
  %51 = icmp ugt i32 %50, 2147483647
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %53, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %54

54:                                               ; preds = %52, %49
  %55 = load i32, i32* %11, align 4
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 134
  %58 = load i32, i32* %57, align 8
  %59 = icmp ugt i32 %55, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %61, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = load i32, i32* %12, align 4
  %64 = icmp ne i32 %63, 1
  br i1 %64, label %65, label %79

65:                                               ; preds = %62
  %66 = load i32, i32* %12, align 4
  %67 = icmp ne i32 %66, 2
  br i1 %67, label %68, label %79

68:                                               ; preds = %65
  %69 = load i32, i32* %12, align 4
  %70 = icmp ne i32 %69, 4
  br i1 %70, label %71, label %79

71:                                               ; preds = %68
  %72 = load i32, i32* %12, align 4
  %73 = icmp ne i32 %72, 8
  br i1 %73, label %74, label %79

74:                                               ; preds = %71
  %75 = load i32, i32* %12, align 4
  %76 = icmp ne i32 %75, 16
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %78, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %79

79:                                               ; preds = %77, %74, %71, %68, %65, %62
  %80 = load i32, i32* %13, align 4
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %91, label %82

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load i32, i32* %13, align 4
  %87 = icmp eq i32 %86, 5
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %13, align 4
  %90 = icmp sgt i32 %89, 6
  br i1 %90, label %91, label %93

91:                                               ; preds = %88, %85, %82, %79
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %92, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %93

93:                                               ; preds = %91, %88
  %94 = load i32, i32* %13, align 4
  %95 = icmp eq i32 %94, 3
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load i32, i32* %12, align 4
  %98 = icmp sgt i32 %97, 8
  br i1 %98, label %111, label %99

99:                                               ; preds = %96, %93
  %100 = load i32, i32* %13, align 4
  %101 = icmp eq i32 %100, 2
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = load i32, i32* %13, align 4
  %104 = icmp eq i32 %103, 4
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = load i32, i32* %13, align 4
  %107 = icmp eq i32 %106, 6
  br i1 %107, label %108, label %113

108:                                              ; preds = %105, %102, %99
  %109 = load i32, i32* %12, align 4
  %110 = icmp slt i32 %109, 8
  br i1 %110, label %111, label %113

111:                                              ; preds = %108, %96
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %112, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.59, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %113

113:                                              ; preds = %111, %108, %105
  %114 = load i32, i32* %14, align 4
  %115 = icmp sge i32 %114, 2
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %117, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %118

118:                                              ; preds = %116, %113
  %119 = load i32, i32* %15, align 4
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %122, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.61, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %123

123:                                              ; preds = %121, %118
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 15
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 4096
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %123
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %131 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %130, i32 0, i32 123
  %132 = load i32, i32* %131, align 8
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %135, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.62, i64 0, i64 0))
  br label %136

136:                                              ; preds = %134, %129, %123
  %137 = load i32, i32* %16, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %171

139:                                              ; preds = %136
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 123
  %142 = load i32, i32* %141, align 8
  %143 = and i32 %142, 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %160

145:                                              ; preds = %139
  %146 = load i32, i32* %16, align 4
  %147 = icmp eq i32 %146, 64
  br i1 %147, label %148, label %160

148:                                              ; preds = %145
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 15
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 4096
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %160

154:                                              ; preds = %148
  %155 = load i32, i32* %13, align 4
  %156 = icmp eq i32 %155, 2
  br i1 %156, label %162, label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %13, align 4
  %159 = icmp eq i32 %158, 6
  br i1 %159, label %162, label %160

160:                                              ; preds = %157, %148, %145, %139
  %161 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %161, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.63, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %162

162:                                              ; preds = %160, %157, %154
  %163 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %164 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %163, i32 0, i32 15
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 4096
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_warning(%struct.png_struct_def* noundef %169, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0))
  store i32 1, i32* %17, align 4
  br label %170

170:                                              ; preds = %168, %162
  br label %171

171:                                              ; preds = %170, %136
  %172 = load i32, i32* %17, align 4
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  call void @png_error(%struct.png_struct_def* noundef %175, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0)) #13
  unreachable

176:                                              ; preds = %171
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_gt(i64 noundef %0, i64 noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ugt i64 %5, %6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_check_fp_number(i8* noundef %0, i64 noundef %1, i32* noundef %2, i64* noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store i64* %3, i64** %8, align 8
  %12 = load i32*, i32** %7, align 8
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %9, align 4
  %14 = load i64*, i64** %8, align 8
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %10, align 8
  br label %16

16:                                               ; preds = %117, %4
  %17 = load i64, i64* %10, align 8
  %18 = load i64, i64* %6, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %20, label %120

20:                                               ; preds = %16
  %21 = load i8*, i8** %5, align 8
  %22 = load i64, i64* %10, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  switch i32 %25, label %32 [
    i32 43, label %26
    i32 45, label %27
    i32 46, label %28
    i32 48, label %29
    i32 49, label %30
    i32 50, label %30
    i32 51, label %30
    i32 52, label %30
    i32 53, label %30
    i32 54, label %30
    i32 55, label %30
    i32 56, label %30
    i32 57, label %30
    i32 69, label %31
    i32 101, label %31
  ]

26:                                               ; preds = %20
  store i32 4, i32* %11, align 4
  br label %33

27:                                               ; preds = %20
  store i32 132, i32* %11, align 4
  br label %33

28:                                               ; preds = %20
  store i32 16, i32* %11, align 4
  br label %33

29:                                               ; preds = %20
  store i32 8, i32* %11, align 4
  br label %33

30:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20, %20
  store i32 264, i32* %11, align 4
  br label %33

31:                                               ; preds = %20, %20
  store i32 32, i32* %11, align 4
  br label %33

32:                                               ; preds = %20
  br label %121

33:                                               ; preds = %31, %30, %29, %28, %27, %26
  %34 = load i32, i32* %9, align 4
  %35 = and i32 %34, 3
  %36 = load i32, i32* %11, align 4
  %37 = and i32 %36, 60
  %38 = add nsw i32 %35, %37
  switch i32 %38, label %116 [
    i32 4, label %39
    i32 16, label %48
    i32 8, label %69
    i32 32, label %82
    i32 9, label %91
    i32 33, label %96
    i32 6, label %105
    i32 10, label %113
  ]

39:                                               ; preds = %33
  %40 = load i32, i32* %9, align 4
  %41 = and i32 %40, 60
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  br label %121

44:                                               ; preds = %39
  %45 = load i32, i32* %11, align 4
  %46 = load i32, i32* %9, align 4
  %47 = or i32 %46, %45
  store i32 %47, i32* %9, align 4
  br label %117

48:                                               ; preds = %33
  %49 = load i32, i32* %9, align 4
  %50 = and i32 %49, 16
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  br label %121

53:                                               ; preds = %48
  %54 = load i32, i32* %9, align 4
  %55 = and i32 %54, 8
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %9, align 4
  %60 = or i32 %59, %58
  store i32 %60, i32* %9, align 4
  br label %67

61:                                               ; preds = %53
  %62 = load i32, i32* %11, align 4
  %63 = or i32 1, %62
  %64 = load i32, i32* %9, align 4
  %65 = and i32 %64, 448
  %66 = or i32 %63, %65
  store i32 %66, i32* %9, align 4
  br label %67

67:                                               ; preds = %61, %57
  br label %68

68:                                               ; preds = %67
  br label %117

69:                                               ; preds = %33
  %70 = load i32, i32* %9, align 4
  %71 = and i32 %70, 16
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = load i32, i32* %9, align 4
  %75 = and i32 %74, 448
  %76 = or i32 17, %75
  store i32 %76, i32* %9, align 4
  br label %77

77:                                               ; preds = %73, %69
  %78 = load i32, i32* %11, align 4
  %79 = or i32 %78, 64
  %80 = load i32, i32* %9, align 4
  %81 = or i32 %80, %79
  store i32 %81, i32* %9, align 4
  br label %117

82:                                               ; preds = %33
  %83 = load i32, i32* %9, align 4
  %84 = and i32 %83, 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  br label %121

87:                                               ; preds = %82
  %88 = load i32, i32* %9, align 4
  %89 = and i32 %88, 448
  %90 = or i32 2, %89
  store i32 %90, i32* %9, align 4
  br label %117

91:                                               ; preds = %33
  %92 = load i32, i32* %11, align 4
  %93 = or i32 %92, 64
  %94 = load i32, i32* %9, align 4
  %95 = or i32 %94, %93
  store i32 %95, i32* %9, align 4
  br label %117

96:                                               ; preds = %33
  %97 = load i32, i32* %9, align 4
  %98 = and i32 %97, 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  br label %121

101:                                              ; preds = %96
  %102 = load i32, i32* %9, align 4
  %103 = and i32 %102, 448
  %104 = or i32 2, %103
  store i32 %104, i32* %9, align 4
  br label %117

105:                                              ; preds = %33
  %106 = load i32, i32* %9, align 4
  %107 = and i32 %106, 60
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %105
  br label %121

110:                                              ; preds = %105
  %111 = load i32, i32* %9, align 4
  %112 = or i32 %111, 4
  store i32 %112, i32* %9, align 4
  br label %117

113:                                              ; preds = %33
  %114 = load i32, i32* %9, align 4
  %115 = or i32 %114, 72
  store i32 %115, i32* %9, align 4
  br label %117

116:                                              ; preds = %33
  br label %121

117:                                              ; preds = %113, %110, %101, %91, %87, %77, %68, %44
  %118 = load i64, i64* %10, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %10, align 8
  br label %16, !llvm.loop !17

120:                                              ; preds = %16
  br label %121

121:                                              ; preds = %120, %116, %109, %100, %86, %52, %43, %32
  %122 = load i32, i32* %9, align 4
  %123 = load i32*, i32** %7, align 8
  store i32 %122, i32* %123, align 4
  %124 = load i64, i64* %10, align 8
  %125 = load i64*, i64** %8, align 8
  store i64 %124, i64* %125, align 8
  %126 = load i32, i32* %9, align 4
  %127 = and i32 %126, 8
  %128 = icmp ne i32 %127, 0
  %129 = zext i1 %128 to i32
  ret i32 %129
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_check_fp_string(i8* noundef %0, i64 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 0, i32* %6, align 4
  store i64 0, i64* %7, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = call i32 @png_check_fp_number(i8* noundef %8, i64 noundef %9, i32* noundef %6, i64* noundef %7)
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %2
  %13 = load i64, i64* %7, align 8
  %14 = load i64, i64* %5, align 8
  %15 = icmp eq i64 %13, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = load i8*, i8** %4, align 8
  %18 = load i64, i64* %7, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %16, %12
  %24 = load i32, i32* %6, align 4
  store i32 %24, i32* %3, align 4
  br label %26

25:                                               ; preds = %16, %2
  store i32 0, i32* %3, align 4
  br label %26

26:                                               ; preds = %25, %23
  %27 = load i32, i32* %3, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_ascii_from_fp(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2, double noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca double, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca [10 x i8], align 1
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store double %3, double* %9, align 8
  store i32 %4, i32* %10, align 4
  %22 = load i32, i32* %10, align 4
  %23 = icmp ult i32 %22, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %5
  store i32 15, i32* %10, align 4
  br label %25

25:                                               ; preds = %24, %5
  %26 = load i32, i32* %10, align 4
  %27 = icmp ugt i32 %26, 16
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store i32 16, i32* %10, align 4
  br label %29

29:                                               ; preds = %28, %25
  %30 = load i64, i64* %8, align 8
  %31 = load i32, i32* %10, align 4
  %32 = add i32 %31, 5
  %33 = zext i32 %32 to i64
  %34 = icmp uge i64 %30, %33
  br i1 %34, label %35, label %361

35:                                               ; preds = %29
  %36 = load double, double* %9, align 8
  %37 = fcmp olt double %36, 0.000000e+00
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = load double, double* %9, align 8
  %40 = fneg double %39
  store double %40, double* %9, align 8
  %41 = load i8*, i8** %7, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %7, align 8
  store i8 45, i8* %41, align 1
  %43 = load i64, i64* %8, align 8
  %44 = add i64 %43, -1
  store i64 %44, i64* %8, align 8
  br label %45

45:                                               ; preds = %38, %35
  %46 = load double, double* %9, align 8
  %47 = fcmp oge double %46, 0x10000000000000
  br i1 %47, label %48, label %345

48:                                               ; preds = %45
  %49 = load double, double* %9, align 8
  %50 = fcmp ole double %49, 0x7FEFFFFFFFFFFFFF
  br i1 %50, label %51, label %345

51:                                               ; preds = %48
  %52 = load double, double* %9, align 8
  %53 = call double @frexp(double noundef %52, i32* noundef %11) #16
  %54 = load i32, i32* %11, align 4
  %55 = mul nsw i32 %54, 77
  %56 = ashr i32 %55, 8
  store i32 %56, i32* %11, align 4
  %57 = load i32, i32* %11, align 4
  %58 = call double @png_pow10(i32 noundef %57)
  store double %58, double* %12, align 8
  br label %59

59:                                               ; preds = %79, %51
  %60 = load double, double* %12, align 8
  %61 = fcmp olt double %60, 0x10000000000000
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = load double, double* %12, align 8
  %64 = load double, double* %9, align 8
  %65 = fcmp olt double %63, %64
  br label %66

66:                                               ; preds = %62, %59
  %67 = phi i1 [ true, %59 ], [ %65, %62 ]
  br i1 %67, label %68, label %80

68:                                               ; preds = %66
  %69 = load i32, i32* %11, align 4
  %70 = add nsw i32 %69, 1
  %71 = call double @png_pow10(i32 noundef %70)
  store double %71, double* %13, align 8
  %72 = load double, double* %13, align 8
  %73 = fcmp ole double %72, 0x7FEFFFFFFFFFFFFF
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = load i32, i32* %11, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %11, align 4
  %77 = load double, double* %13, align 8
  store double %77, double* %12, align 8
  br label %79

78:                                               ; preds = %68
  br label %80

79:                                               ; preds = %74
  br label %59, !llvm.loop !18

80:                                               ; preds = %78, %66
  %81 = load double, double* %12, align 8
  %82 = load double, double* %9, align 8
  %83 = fdiv double %82, %81
  store double %83, double* %9, align 8
  br label %84

84:                                               ; preds = %87, %80
  %85 = load double, double* %9, align 8
  %86 = fcmp oge double %85, 1.000000e+00
  br i1 %86, label %87, label %92

87:                                               ; preds = %84
  %88 = load double, double* %9, align 8
  %89 = fdiv double %88, 1.000000e+01
  store double %89, double* %9, align 8
  %90 = load i32, i32* %11, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %11, align 4
  br label %84, !llvm.loop !19

92:                                               ; preds = %84
  %93 = load i32, i32* %11, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %92
  %96 = load i32, i32* %11, align 4
  %97 = icmp sgt i32 %96, -3
  br i1 %97, label %98, label %101

98:                                               ; preds = %95
  %99 = load i32, i32* %11, align 4
  %100 = sub i32 0, %99
  store i32 %100, i32* %14, align 4
  store i32 0, i32* %11, align 4
  br label %102

101:                                              ; preds = %95, %92
  store i32 0, i32* %14, align 4
  br label %102

102:                                              ; preds = %101, %98
  %103 = load i32, i32* %14, align 4
  store i32 %103, i32* %15, align 4
  store i32 0, i32* %16, align 4
  br label %104

104:                                              ; preds = %271, %102
  %105 = load double, double* %9, align 8
  %106 = fmul double %105, 1.000000e+01
  store double %106, double* %9, align 8
  %107 = load i32, i32* %16, align 4
  %108 = load i32, i32* %14, align 4
  %109 = add i32 %107, %108
  %110 = add i32 %109, 1
  %111 = load i32, i32* %10, align 4
  %112 = load i32, i32* %15, align 4
  %113 = add i32 %111, %112
  %114 = icmp ult i32 %110, %113
  br i1 %114, label %115, label %118

115:                                              ; preds = %104
  %116 = load double, double* %9, align 8
  %117 = call double @modf(double noundef %116, double* noundef %18) #16
  store double %117, double* %9, align 8
  br label %196

118:                                              ; preds = %104
  %119 = load double, double* %9, align 8
  %120 = fadd double %119, 5.000000e-01
  %121 = call double @llvm.floor.f64(double %120)
  store double %121, double* %18, align 8
  %122 = load double, double* %18, align 8
  %123 = fcmp ogt double %122, 9.000000e+00
  br i1 %123, label %124, label %195

124:                                              ; preds = %118
  %125 = load i32, i32* %14, align 4
  %126 = icmp ugt i32 %125, 0
  br i1 %126, label %127, label %136

127:                                              ; preds = %124
  %128 = load i32, i32* %14, align 4
  %129 = add i32 %128, -1
  store i32 %129, i32* %14, align 4
  store double 1.000000e+00, double* %18, align 8
  %130 = load i32, i32* %16, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = load i32, i32* %15, align 4
  %134 = add i32 %133, -1
  store i32 %134, i32* %15, align 4
  br label %135

135:                                              ; preds = %132, %127
  br label %194

136:                                              ; preds = %124
  br label %137

137:                                              ; preds = %166, %136
  %138 = load i32, i32* %16, align 4
  %139 = icmp ugt i32 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %137
  %141 = load double, double* %18, align 8
  %142 = fcmp ogt double %141, 9.000000e+00
  br label %143

143:                                              ; preds = %140, %137
  %144 = phi i1 [ false, %137 ], [ %142, %140 ]
  br i1 %144, label %145, label %172

145:                                              ; preds = %143
  %146 = load i8*, i8** %7, align 8
  %147 = getelementptr inbounds i8, i8* %146, i32 -1
  store i8* %147, i8** %7, align 8
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  store i32 %149, i32* %19, align 4
  %150 = load i32, i32* %11, align 4
  %151 = icmp ne i32 %150, -1
  br i1 %151, label %152, label %155

152:                                              ; preds = %145
  %153 = load i32, i32* %11, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %11, align 4
  br label %166

155:                                              ; preds = %145
  %156 = load i32, i32* %19, align 4
  %157 = icmp eq i32 %156, 46
  br i1 %157, label %158, label %165

158:                                              ; preds = %155
  %159 = load i8*, i8** %7, align 8
  %160 = getelementptr inbounds i8, i8* %159, i32 -1
  store i8* %160, i8** %7, align 8
  %161 = load i8, i8* %160, align 1
  %162 = sext i8 %161 to i32
  store i32 %162, i32* %19, align 4
  %163 = load i64, i64* %8, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %8, align 8
  store i32 1, i32* %11, align 4
  br label %165

165:                                              ; preds = %158, %155
  br label %166

166:                                              ; preds = %165, %152
  %167 = load i32, i32* %16, align 4
  %168 = add i32 %167, -1
  store i32 %168, i32* %16, align 4
  %169 = load i32, i32* %19, align 4
  %170 = sub nsw i32 %169, 47
  %171 = sitofp i32 %170 to double
  store double %171, double* %18, align 8
  br label %137, !llvm.loop !20

172:                                              ; preds = %143
  %173 = load double, double* %18, align 8
  %174 = fcmp ogt double %173, 9.000000e+00
  br i1 %174, label %175, label %193

175:                                              ; preds = %172
  %176 = load i32, i32* %11, align 4
  %177 = icmp eq i32 %176, -1
  br i1 %177, label %178, label %189

178:                                              ; preds = %175
  %179 = load i8*, i8** %7, align 8
  %180 = getelementptr inbounds i8, i8* %179, i32 -1
  store i8* %180, i8** %7, align 8
  %181 = load i8, i8* %180, align 1
  %182 = sext i8 %181 to i32
  store i32 %182, i32* %20, align 4
  %183 = load i32, i32* %20, align 4
  %184 = icmp eq i32 %183, 46
  br i1 %184, label %185, label %188

185:                                              ; preds = %178
  %186 = load i64, i64* %8, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %8, align 8
  store i32 1, i32* %11, align 4
  br label %188

188:                                              ; preds = %185, %178
  br label %192

189:                                              ; preds = %175
  %190 = load i32, i32* %11, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %11, align 4
  br label %192

192:                                              ; preds = %189, %188
  store double 1.000000e+00, double* %18, align 8
  br label %193

193:                                              ; preds = %192, %172
  br label %194

194:                                              ; preds = %193, %135
  br label %195

195:                                              ; preds = %194, %118
  store double 0.000000e+00, double* %9, align 8
  br label %196

196:                                              ; preds = %195, %115
  %197 = load double, double* %18, align 8
  %198 = fcmp oeq double %197, 0.000000e+00
  br i1 %198, label %199, label %208

199:                                              ; preds = %196
  %200 = load i32, i32* %14, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %14, align 4
  %202 = load i32, i32* %16, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %199
  %205 = load i32, i32* %15, align 4
  %206 = add i32 %205, 1
  store i32 %206, i32* %15, align 4
  br label %207

207:                                              ; preds = %204, %199
  br label %259

208:                                              ; preds = %196
  %209 = load i32, i32* %14, align 4
  %210 = load i32, i32* %15, align 4
  %211 = sub i32 %209, %210
  %212 = load i32, i32* %16, align 4
  %213 = add i32 %212, %211
  store i32 %213, i32* %16, align 4
  store i32 0, i32* %15, align 4
  br label %214

214:                                              ; preds = %231, %208
  %215 = load i32, i32* %14, align 4
  %216 = icmp ugt i32 %215, 0
  br i1 %216, label %217, label %236

217:                                              ; preds = %214
  %218 = load i32, i32* %11, align 4
  %219 = icmp ne i32 %218, -1
  br i1 %219, label %220, label %231

220:                                              ; preds = %217
  %221 = load i32, i32* %11, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %220
  %224 = load i8*, i8** %7, align 8
  %225 = getelementptr inbounds i8, i8* %224, i32 1
  store i8* %225, i8** %7, align 8
  store i8 46, i8* %224, align 1
  %226 = load i64, i64* %8, align 8
  %227 = add i64 %226, -1
  store i64 %227, i64* %8, align 8
  br label %228

228:                                              ; preds = %223, %220
  %229 = load i32, i32* %11, align 4
  %230 = add nsw i32 %229, -1
  store i32 %230, i32* %11, align 4
  br label %231

231:                                              ; preds = %228, %217
  %232 = load i8*, i8** %7, align 8
  %233 = getelementptr inbounds i8, i8* %232, i32 1
  store i8* %233, i8** %7, align 8
  store i8 48, i8* %232, align 1
  %234 = load i32, i32* %14, align 4
  %235 = add i32 %234, -1
  store i32 %235, i32* %14, align 4
  br label %214, !llvm.loop !21

236:                                              ; preds = %214
  %237 = load i32, i32* %11, align 4
  %238 = icmp ne i32 %237, -1
  br i1 %238, label %239, label %250

239:                                              ; preds = %236
  %240 = load i32, i32* %11, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %247

242:                                              ; preds = %239
  %243 = load i8*, i8** %7, align 8
  %244 = getelementptr inbounds i8, i8* %243, i32 1
  store i8* %244, i8** %7, align 8
  store i8 46, i8* %243, align 1
  %245 = load i64, i64* %8, align 8
  %246 = add i64 %245, -1
  store i64 %246, i64* %8, align 8
  br label %247

247:                                              ; preds = %242, %239
  %248 = load i32, i32* %11, align 4
  %249 = add nsw i32 %248, -1
  store i32 %249, i32* %11, align 4
  br label %250

250:                                              ; preds = %247, %236
  %251 = load double, double* %18, align 8
  %252 = fptosi double %251 to i32
  %253 = add nsw i32 48, %252
  %254 = trunc i32 %253 to i8
  %255 = load i8*, i8** %7, align 8
  %256 = getelementptr inbounds i8, i8* %255, i32 1
  store i8* %256, i8** %7, align 8
  store i8 %254, i8* %255, align 1
  %257 = load i32, i32* %16, align 4
  %258 = add i32 %257, 1
  store i32 %258, i32* %16, align 4
  br label %259

259:                                              ; preds = %250, %207
  br label %260

260:                                              ; preds = %259
  %261 = load i32, i32* %16, align 4
  %262 = load i32, i32* %14, align 4
  %263 = add i32 %261, %262
  %264 = load i32, i32* %10, align 4
  %265 = load i32, i32* %15, align 4
  %266 = add i32 %264, %265
  %267 = icmp ult i32 %263, %266
  br i1 %267, label %268, label %271

268:                                              ; preds = %260
  %269 = load double, double* %9, align 8
  %270 = fcmp ogt double %269, 0x10000000000000
  br label %271

271:                                              ; preds = %268, %260
  %272 = phi i1 [ false, %260 ], [ %270, %268 ]
  br i1 %272, label %104, label %273, !llvm.loop !22

273:                                              ; preds = %271
  %274 = load i32, i32* %11, align 4
  %275 = icmp sge i32 %274, -1
  br i1 %275, label %276, label %289

276:                                              ; preds = %273
  %277 = load i32, i32* %11, align 4
  %278 = icmp sle i32 %277, 2
  br i1 %278, label %279, label %289

279:                                              ; preds = %276
  br label %280

280:                                              ; preds = %284, %279
  %281 = load i32, i32* %11, align 4
  %282 = add nsw i32 %281, -1
  store i32 %282, i32* %11, align 4
  %283 = icmp sgt i32 %281, 0
  br i1 %283, label %284, label %287

284:                                              ; preds = %280
  %285 = load i8*, i8** %7, align 8
  %286 = getelementptr inbounds i8, i8* %285, i32 1
  store i8* %286, i8** %7, align 8
  store i8 48, i8* %285, align 1
  br label %280, !llvm.loop !23

287:                                              ; preds = %280
  %288 = load i8*, i8** %7, align 8
  store i8 0, i8* %288, align 1
  br label %363

289:                                              ; preds = %276, %273
  %290 = load i32, i32* %16, align 4
  %291 = zext i32 %290 to i64
  %292 = load i64, i64* %8, align 8
  %293 = sub i64 %292, %291
  store i64 %293, i64* %8, align 8
  %294 = load i8*, i8** %7, align 8
  %295 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %295, i8** %7, align 8
  store i8 69, i8* %294, align 1
  %296 = load i64, i64* %8, align 8
  %297 = add i64 %296, -1
  store i64 %297, i64* %8, align 8
  %298 = load i32, i32* %11, align 4
  %299 = icmp slt i32 %298, 0
  br i1 %299, label %300, label %307

300:                                              ; preds = %289
  %301 = load i8*, i8** %7, align 8
  %302 = getelementptr inbounds i8, i8* %301, i32 1
  store i8* %302, i8** %7, align 8
  store i8 45, i8* %301, align 1
  %303 = load i64, i64* %8, align 8
  %304 = add i64 %303, -1
  store i64 %304, i64* %8, align 8
  %305 = load i32, i32* %11, align 4
  %306 = sub i32 0, %305
  store i32 %306, i32* %21, align 4
  br label %310

307:                                              ; preds = %289
  %308 = load i32, i32* %11, align 4
  %309 = add i32 0, %308
  store i32 %309, i32* %21, align 4
  br label %310

310:                                              ; preds = %307, %300
  store i32 0, i32* %16, align 4
  br label %311

311:                                              ; preds = %314, %310
  %312 = load i32, i32* %21, align 4
  %313 = icmp ugt i32 %312, 0
  br i1 %313, label %314, label %325

314:                                              ; preds = %311
  %315 = load i32, i32* %21, align 4
  %316 = urem i32 %315, 10
  %317 = add i32 48, %316
  %318 = trunc i32 %317 to i8
  %319 = load i32, i32* %16, align 4
  %320 = add i32 %319, 1
  store i32 %320, i32* %16, align 4
  %321 = zext i32 %319 to i64
  %322 = getelementptr inbounds [10 x i8], [10 x i8]* %17, i64 0, i64 %321
  store i8 %318, i8* %322, align 1
  %323 = load i32, i32* %21, align 4
  %324 = udiv i32 %323, 10
  store i32 %324, i32* %21, align 4
  br label %311, !llvm.loop !24

325:                                              ; preds = %311
  %326 = load i64, i64* %8, align 8
  %327 = load i32, i32* %16, align 4
  %328 = zext i32 %327 to i64
  %329 = icmp ugt i64 %326, %328
  br i1 %329, label %330, label %344

330:                                              ; preds = %325
  br label %331

331:                                              ; preds = %334, %330
  %332 = load i32, i32* %16, align 4
  %333 = icmp ugt i32 %332, 0
  br i1 %333, label %334, label %342

334:                                              ; preds = %331
  %335 = load i32, i32* %16, align 4
  %336 = add i32 %335, -1
  store i32 %336, i32* %16, align 4
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds [10 x i8], [10 x i8]* %17, i64 0, i64 %337
  %339 = load i8, i8* %338, align 1
  %340 = load i8*, i8** %7, align 8
  %341 = getelementptr inbounds i8, i8* %340, i32 1
  store i8* %341, i8** %7, align 8
  store i8 %339, i8* %340, align 1
  br label %331, !llvm.loop !25

342:                                              ; preds = %331
  %343 = load i8*, i8** %7, align 8
  store i8 0, i8* %343, align 1
  br label %363

344:                                              ; preds = %325
  br label %360

345:                                              ; preds = %48, %45
  %346 = load double, double* %9, align 8
  %347 = fcmp oge double %346, 0x10000000000000
  br i1 %347, label %352, label %348

348:                                              ; preds = %345
  %349 = load i8*, i8** %7, align 8
  %350 = getelementptr inbounds i8, i8* %349, i32 1
  store i8* %350, i8** %7, align 8
  store i8 48, i8* %349, align 1
  %351 = load i8*, i8** %7, align 8
  store i8 0, i8* %351, align 1
  br label %363

352:                                              ; preds = %345
  %353 = load i8*, i8** %7, align 8
  %354 = getelementptr inbounds i8, i8* %353, i32 1
  store i8* %354, i8** %7, align 8
  store i8 105, i8* %353, align 1
  %355 = load i8*, i8** %7, align 8
  %356 = getelementptr inbounds i8, i8* %355, i32 1
  store i8* %356, i8** %7, align 8
  store i8 110, i8* %355, align 1
  %357 = load i8*, i8** %7, align 8
  %358 = getelementptr inbounds i8, i8* %357, i32 1
  store i8* %358, i8** %7, align 8
  store i8 102, i8* %357, align 1
  %359 = load i8*, i8** %7, align 8
  store i8 0, i8* %359, align 1
  br label %363

360:                                              ; preds = %344
  br label %361

361:                                              ; preds = %360, %29
  %362 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %362, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.66, i64 0, i64 0)) #13
  unreachable

363:                                              ; preds = %352, %348, %342, %287
  ret void
}

; Function Attrs: nounwind
declare double @frexp(double noundef, i32* noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal double @png_pow10(i32 noundef %0) #0 {
  %2 = alloca double, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  store i32 %0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  store double 1.000000e+00, double* %5, align 8
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4
  %11 = icmp slt i32 %10, -307
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store double 0.000000e+00, double* %2, align 8
  br label %46

13:                                               ; preds = %9
  store i32 1, i32* %4, align 4
  %14 = load i32, i32* %3, align 4
  %15 = sub nsw i32 0, %14
  store i32 %15, i32* %3, align 4
  br label %16

16:                                               ; preds = %13, %1
  %17 = load i32, i32* %3, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %44

19:                                               ; preds = %16
  store double 1.000000e+01, double* %6, align 8
  br label %20

20:                                               ; preds = %34, %19
  %21 = load i32, i32* %3, align 4
  %22 = and i32 %21, 1
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = load double, double* %6, align 8
  %26 = load double, double* %5, align 8
  %27 = fmul double %26, %25
  store double %27, double* %5, align 8
  br label %28

28:                                               ; preds = %24, %20
  %29 = load double, double* %6, align 8
  %30 = load double, double* %6, align 8
  %31 = fmul double %30, %29
  store double %31, double* %6, align 8
  %32 = load i32, i32* %3, align 4
  %33 = ashr i32 %32, 1
  store i32 %33, i32* %3, align 4
  br label %34

34:                                               ; preds = %28
  %35 = load i32, i32* %3, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %20, label %37, !llvm.loop !26

37:                                               ; preds = %34
  %38 = load i32, i32* %4, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load double, double* %5, align 8
  %42 = fdiv double 1.000000e+00, %41
  store double %42, double* %5, align 8
  br label %43

43:                                               ; preds = %40, %37
  br label %44

44:                                               ; preds = %43, %16
  %45 = load double, double* %5, align 8
  store double %45, double* %2, align 8
  br label %46

46:                                               ; preds = %44, %12
  %47 = load double, double* %2, align 8
  ret double %47
}

; Function Attrs: nounwind
declare double @modf(double noundef, double* noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define void @png_ascii_from_fixed(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [10 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %15 = load i64, i64* %7, align 8
  %16 = icmp ugt i64 %15, 12
  br i1 %16, label %17, label %108

17:                                               ; preds = %4
  %18 = load i32, i32* %8, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = load i8*, i8** %6, align 8
  %22 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %22, i8** %6, align 8
  store i8 45, i8* %21, align 1
  %23 = load i32, i32* %8, align 4
  %24 = sub nsw i32 0, %23
  store i32 %24, i32* %9, align 4
  br label %27

25:                                               ; preds = %17
  %26 = load i32, i32* %8, align 4
  store i32 %26, i32* %9, align 4
  br label %27

27:                                               ; preds = %25, %20
  %28 = load i32, i32* %9, align 4
  %29 = icmp ule i32 %28, -2147483648
  br i1 %29, label %30, label %107

30:                                               ; preds = %27
  store i32 0, i32* %10, align 4
  store i32 16, i32* %11, align 4
  br label %31

31:                                               ; preds = %55, %30
  %32 = load i32, i32* %9, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %57

34:                                               ; preds = %31
  %35 = load i32, i32* %9, align 4
  %36 = udiv i32 %35, 10
  store i32 %36, i32* %13, align 4
  %37 = load i32, i32* %13, align 4
  %38 = mul i32 %37, 10
  %39 = load i32, i32* %9, align 4
  %40 = sub i32 %39, %38
  store i32 %40, i32* %9, align 4
  %41 = load i32, i32* %9, align 4
  %42 = add i32 48, %41
  %43 = trunc i32 %42 to i8
  %44 = load i32, i32* %10, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %10, align 4
  %46 = zext i32 %44 to i64
  %47 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 %46
  store i8 %43, i8* %47, align 1
  %48 = load i32, i32* %11, align 4
  %49 = icmp eq i32 %48, 16
  br i1 %49, label %50, label %55

50:                                               ; preds = %34
  %51 = load i32, i32* %9, align 4
  %52 = icmp ugt i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load i32, i32* %10, align 4
  store i32 %54, i32* %11, align 4
  br label %55

55:                                               ; preds = %53, %50, %34
  %56 = load i32, i32* %13, align 4
  store i32 %56, i32* %9, align 4
  br label %31, !llvm.loop !27

57:                                               ; preds = %31
  %58 = load i32, i32* %10, align 4
  %59 = icmp ugt i32 %58, 0
  br i1 %59, label %60, label %102

60:                                               ; preds = %57
  br label %61

61:                                               ; preds = %64, %60
  %62 = load i32, i32* %10, align 4
  %63 = icmp ugt i32 %62, 5
  br i1 %63, label %64, label %72

64:                                               ; preds = %61
  %65 = load i32, i32* %10, align 4
  %66 = add i32 %65, -1
  store i32 %66, i32* %10, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = load i8*, i8** %6, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %6, align 8
  store i8 %69, i8* %70, align 1
  br label %61, !llvm.loop !28

72:                                               ; preds = %61
  %73 = load i32, i32* %11, align 4
  %74 = icmp ule i32 %73, 5
  br i1 %74, label %75, label %101

75:                                               ; preds = %72
  %76 = load i8*, i8** %6, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %6, align 8
  store i8 46, i8* %76, align 1
  store i32 5, i32* %14, align 4
  br label %78

78:                                               ; preds = %82, %75
  %79 = load i32, i32* %10, align 4
  %80 = load i32, i32* %14, align 4
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = load i8*, i8** %6, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %6, align 8
  store i8 48, i8* %83, align 1
  %85 = load i32, i32* %14, align 4
  %86 = add i32 %85, -1
  store i32 %86, i32* %14, align 4
  br label %78, !llvm.loop !29

87:                                               ; preds = %78
  br label %88

88:                                               ; preds = %92, %87
  %89 = load i32, i32* %10, align 4
  %90 = load i32, i32* %11, align 4
  %91 = icmp uge i32 %89, %90
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = load i32, i32* %10, align 4
  %94 = add i32 %93, -1
  store i32 %94, i32* %10, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = load i8*, i8** %6, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %6, align 8
  store i8 %97, i8* %98, align 1
  br label %88, !llvm.loop !30

100:                                              ; preds = %88
  br label %101

101:                                              ; preds = %100, %72
  br label %105

102:                                              ; preds = %57
  %103 = load i8*, i8** %6, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %6, align 8
  store i8 48, i8* %103, align 1
  br label %105

105:                                              ; preds = %102, %101
  %106 = load i8*, i8** %6, align 8
  store i8 0, i8* %106, align 1
  ret void

107:                                              ; preds = %27
  br label %108

108:                                              ; preds = %107, %4
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %109, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.66, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_fixed(%struct.png_struct_def* noalias noundef %0, double noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca double, align 8
  %6 = alloca i8*, align 8
  %7 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store double %1, double* %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load double, double* %5, align 8
  %9 = call double @llvm.fmuladd.f64(double 1.000000e+05, double %8, double 5.000000e-01)
  %10 = call double @llvm.floor.f64(double %9)
  store double %10, double* %7, align 8
  %11 = load double, double* %7, align 8
  %12 = fcmp ogt double %11, 0x41DFFFFFFFC00000
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = load double, double* %7, align 8
  %15 = fcmp olt double %14, 0xC1E0000000000000
  br i1 %15, label %16, label %19

16:                                               ; preds = %13, %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = load i8*, i8** %6, align 8
  call void @png_fixed_error(%struct.png_struct_def* noundef %17, i8* noundef %18) #13
  unreachable

19:                                               ; preds = %13
  %20 = load double, double* %7, align 8
  %21 = fptosi double %20 to i32
  ret i32 %21
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #8

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_muldiv_warn(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %11 = load i32, i32* %7, align 4
  %12 = load i32, i32* %8, align 4
  %13 = load i32, i32* %9, align 4
  %14 = call i32 @png_muldiv(i32* noundef %10, i32 noundef %11, i32 noundef %12, i32 noundef %13)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = load i32, i32* %10, align 4
  store i32 %17, i32* %5, align 4
  br label %20

18:                                               ; preds = %4
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %19, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0))
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %18, %16
  %21 = load i32, i32* %5, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_reciprocal2(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %2
  %10 = load i32, i32* %5, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %9
  %13 = load i32, i32* %4, align 4
  %14 = sitofp i32 %13 to double
  %15 = fdiv double 1.000000e+15, %14
  store double %15, double* %6, align 8
  %16 = load i32, i32* %5, align 4
  %17 = sitofp i32 %16 to double
  %18 = load double, double* %6, align 8
  %19 = fdiv double %18, %17
  store double %19, double* %6, align 8
  %20 = load double, double* %6, align 8
  %21 = fadd double %20, 5.000000e-01
  %22 = call double @llvm.floor.f64(double %21)
  store double %22, double* %6, align 8
  %23 = load double, double* %6, align 8
  %24 = fcmp ole double %23, 0x41DFFFFFFFC00000
  br i1 %24, label %25, label %31

25:                                               ; preds = %12
  %26 = load double, double* %6, align 8
  %27 = fcmp oge double %26, 0xC1E0000000000000
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = load double, double* %6, align 8
  %30 = fptosi double %29 to i32
  store i32 %30, i32* %3, align 4
  br label %33

31:                                               ; preds = %25, %12
  br label %32

32:                                               ; preds = %31, %9, %2
  store i32 0, i32* %3, align 4
  br label %33

33:                                               ; preds = %32, %28
  %34 = load i32, i32* %3, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_gamma_8bit_correct(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp ugt i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = icmp ult i32 %10, 255
  br i1 %11, label %12, label %24

12:                                               ; preds = %9
  %13 = load i32, i32* %4, align 4
  %14 = sitofp i32 %13 to double
  %15 = fdiv double %14, 2.550000e+02
  %16 = load i32, i32* %5, align 4
  %17 = sitofp i32 %16 to double
  %18 = fmul double %17, 1.000000e-05
  %19 = call double @pow(double noundef %15, double noundef %18) #16
  %20 = call double @llvm.fmuladd.f64(double 2.550000e+02, double %19, double 5.000000e-01)
  %21 = call double @llvm.floor.f64(double %20)
  store double %21, double* %6, align 8
  %22 = load double, double* %6, align 8
  %23 = fptoui double %22 to i8
  store i8 %23, i8* %3, align 1
  br label %28

24:                                               ; preds = %9, %2
  %25 = load i32, i32* %4, align 4
  %26 = and i32 %25, 255
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %3, align 1
  br label %28

28:                                               ; preds = %24, %12
  %29 = load i8, i8* %3, align 1
  ret i8 %29
}

; Function Attrs: nounwind
declare double @pow(double noundef, double noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i16 @png_gamma_16bit_correct(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i16, align 2
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp ugt i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4
  %11 = icmp ult i32 %10, 65535
  br i1 %11, label %12, label %24

12:                                               ; preds = %9
  %13 = load i32, i32* %4, align 4
  %14 = sitofp i32 %13 to double
  %15 = fdiv double %14, 6.553500e+04
  %16 = load i32, i32* %5, align 4
  %17 = sitofp i32 %16 to double
  %18 = fmul double %17, 1.000000e-05
  %19 = call double @pow(double noundef %15, double noundef %18) #16
  %20 = call double @llvm.fmuladd.f64(double 6.553500e+04, double %19, double 5.000000e-01)
  %21 = call double @llvm.floor.f64(double %20)
  store double %21, double* %6, align 8
  %22 = load double, double* %6, align 8
  %23 = fptoui double %22 to i16
  store i16 %23, i16* %3, align 2
  br label %27

24:                                               ; preds = %9, %2
  %25 = load i32, i32* %4, align 4
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %3, align 2
  br label %27

27:                                               ; preds = %24, %12
  %28 = load i16, i16* %3, align 2
  ret i16 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i16 @png_gamma_correct(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i16, align 2
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 62
  %10 = load i8, i8* %9, align 8
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 8
  br i1 %12, label %13, label %18

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4
  %15 = load i32, i32* %7, align 4
  %16 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %14, i32 noundef %15)
  %17 = zext i8 %16 to i16
  store i16 %17, i16* %4, align 2
  br label %22

18:                                               ; preds = %3
  %19 = load i32, i32* %6, align 4
  %20 = load i32, i32* %7, align 4
  %21 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %19, i32 noundef %20)
  store i16 %21, i16* %4, align 2
  br label %22

22:                                               ; preds = %18, %13
  %23 = load i16, i16* %4, align 2
  ret i16 %23
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_destroy_gamma_table(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 81
  %12 = load i8*, i8** %11, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %9, i8* noundef %12)
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 81
  store i8* null, i8** %14, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 82
  %17 = load i16**, i16*** %16, align 8
  %18 = icmp ne i16** %17, null
  br i1 %18, label %19, label %50

19:                                               ; preds = %1
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 79
  %22 = load i32, i32* %21, align 8
  %23 = sub nsw i32 8, %22
  %24 = shl i32 1, %23
  store i32 %24, i32* %4, align 4
  store i32 0, i32* %3, align 4
  br label %25

25:                                               ; preds = %39, %19
  %26 = load i32, i32* %3, align 4
  %27 = load i32, i32* %4, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %42

29:                                               ; preds = %25
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 82
  %33 = load i16**, i16*** %32, align 8
  %34 = load i32, i32* %3, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16*, i16** %33, i64 %35
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast i16* %37 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %30, i8* noundef %38)
  br label %39

39:                                               ; preds = %29
  %40 = load i32, i32* %3, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %3, align 4
  br label %25, !llvm.loop !31

42:                                               ; preds = %25
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 82
  %46 = load i16**, i16*** %45, align 8
  %47 = bitcast i16** %46 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %43, i8* noundef %47)
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 82
  store i16** null, i16*** %49, align 8
  br label %50

50:                                               ; preds = %42, %1
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 83
  %54 = load i8*, i8** %53, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %51, i8* noundef %54)
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 83
  store i8* null, i8** %56, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 84
  %60 = load i8*, i8** %59, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %57, i8* noundef %60)
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 84
  store i8* null, i8** %62, align 8
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 85
  %65 = load i16**, i16*** %64, align 8
  %66 = icmp ne i16** %65, null
  br i1 %66, label %67, label %98

67:                                               ; preds = %50
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 79
  %70 = load i32, i32* %69, align 8
  %71 = sub nsw i32 8, %70
  %72 = shl i32 1, %71
  store i32 %72, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %73

73:                                               ; preds = %87, %67
  %74 = load i32, i32* %5, align 4
  %75 = load i32, i32* %6, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %90

77:                                               ; preds = %73
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %79, i32 0, i32 85
  %81 = load i16**, i16*** %80, align 8
  %82 = load i32, i32* %5, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i16*, i16** %81, i64 %83
  %85 = load i16*, i16** %84, align 8
  %86 = bitcast i16* %85 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %78, i8* noundef %86)
  br label %87

87:                                               ; preds = %77
  %88 = load i32, i32* %5, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %5, align 4
  br label %73, !llvm.loop !32

90:                                               ; preds = %73
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 85
  %94 = load i16**, i16*** %93, align 8
  %95 = bitcast i16** %94 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %91, i8* noundef %95)
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 85
  store i16** null, i16*** %97, align 8
  br label %98

98:                                               ; preds = %90, %50
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 86
  %101 = load i16**, i16*** %100, align 8
  %102 = icmp ne i16** %101, null
  br i1 %102, label %103, label %134

103:                                              ; preds = %98
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %105 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %104, i32 0, i32 79
  %106 = load i32, i32* %105, align 8
  %107 = sub nsw i32 8, %106
  %108 = shl i32 1, %107
  store i32 %108, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %109

109:                                              ; preds = %123, %103
  %110 = load i32, i32* %7, align 4
  %111 = load i32, i32* %8, align 4
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %113, label %126

113:                                              ; preds = %109
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 86
  %117 = load i16**, i16*** %116, align 8
  %118 = load i32, i32* %7, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i16*, i16** %117, i64 %119
  %121 = load i16*, i16** %120, align 8
  %122 = bitcast i16* %121 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %114, i8* noundef %122)
  br label %123

123:                                              ; preds = %113
  %124 = load i32, i32* %7, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %7, align 4
  br label %109, !llvm.loop !33

126:                                              ; preds = %109
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 86
  %130 = load i16**, i16*** %129, align 8
  %131 = bitcast i16** %130 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %127, i8* noundef %131)
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 86
  store i16** null, i16*** %133, align 8
  br label %134

134:                                              ; preds = %126, %98
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_build_gamma_table(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 81
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 82
  %14 = load i16**, i16*** %13, align 8
  %15 = icmp ne i16** %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %11, %2
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_destroy_gamma_table(%struct.png_struct_def* noundef %18)
  br label %19

19:                                               ; preds = %16, %11
  %20 = load i32, i32* %4, align 4
  %21 = icmp sle i32 %20, 8
  br i1 %21, label %22, label %76

22:                                               ; preds = %19
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 81
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 80
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %22
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 145
  %33 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 80
  %37 = load i32, i32* %36, align 4
  %38 = call i32 @png_reciprocal2(i32 noundef %34, i32 noundef %37)
  br label %40

39:                                               ; preds = %22
  br label %40

40:                                               ; preds = %39, %30
  %41 = phi i32 [ %38, %30 ], [ 100000, %39 ]
  call void @png_build_8bit_table(%struct.png_struct_def* noundef %23, i8** noundef %25, i32 noundef %41)
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 17
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 6291584
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %75

47:                                               ; preds = %40
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 84
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 145
  %53 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = call i32 @png_reciprocal(i32 noundef %54)
  call void @png_build_8bit_table(%struct.png_struct_def* noundef %48, i8** noundef %50, i32 noundef %55)
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 83
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 80
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %47
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 80
  %66 = load i32, i32* %65, align 4
  %67 = call i32 @png_reciprocal(i32 noundef %66)
  br label %73

68:                                               ; preds = %47
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 145
  %71 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  br label %73

73:                                               ; preds = %68, %63
  %74 = phi i32 [ %67, %63 ], [ %72, %68 ]
  call void @png_build_8bit_table(%struct.png_struct_def* noundef %56, i8** noundef %58, i32 noundef %74)
  br label %75

75:                                               ; preds = %73, %40
  br label %246

76:                                               ; preds = %19
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 61
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = and i32 %80, 2
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %116

83:                                               ; preds = %76
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 87
  %86 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %85, i32 0, i32 0
  %87 = load i8, i8* %86, align 8
  store i8 %87, i8* %6, align 1
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 87
  %90 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %89, i32 0, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load i8, i8* %6, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp sgt i32 %92, %94
  br i1 %95, label %96, label %101

96:                                               ; preds = %83
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %97, i32 0, i32 87
  %99 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %98, i32 0, i32 1
  %100 = load i8, i8* %99, align 1
  store i8 %100, i8* %6, align 1
  br label %101

101:                                              ; preds = %96, %83
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 87
  %104 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %103, i32 0, i32 2
  %105 = load i8, i8* %104, align 2
  %106 = zext i8 %105 to i32
  %107 = load i8, i8* %6, align 1
  %108 = zext i8 %107 to i32
  %109 = icmp sgt i32 %106, %108
  br i1 %109, label %110, label %115

110:                                              ; preds = %101
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 87
  %113 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %112, i32 0, i32 2
  %114 = load i8, i8* %113, align 2
  store i8 %114, i8* %6, align 1
  br label %115

115:                                              ; preds = %110, %101
  br label %121

116:                                              ; preds = %76
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 87
  %119 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %118, i32 0, i32 3
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %6, align 1
  br label %121

121:                                              ; preds = %116, %115
  %122 = load i8, i8* %6, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %135

125:                                              ; preds = %121
  %126 = load i8, i8* %6, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp ult i32 %127, 16
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = load i8, i8* %6, align 1
  %131 = zext i8 %130 to i32
  %132 = sub i32 16, %131
  %133 = and i32 %132, 255
  %134 = trunc i32 %133 to i8
  store i8 %134, i8* %5, align 1
  br label %136

135:                                              ; preds = %125, %121
  store i8 0, i8* %5, align 1
  br label %136

136:                                              ; preds = %135, %129
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %138 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %137, i32 0, i32 17
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 67109888
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %148

142:                                              ; preds = %136
  %143 = load i8, i8* %5, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp ult i32 %144, 5
  br i1 %145, label %146, label %147

146:                                              ; preds = %142
  store i8 5, i8* %5, align 1
  br label %147

147:                                              ; preds = %146, %142
  br label %148

148:                                              ; preds = %147, %136
  %149 = load i8, i8* %5, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp ugt i32 %150, 8
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  store i8 8, i8* %5, align 1
  br label %153

153:                                              ; preds = %152, %148
  %154 = load i8, i8* %5, align 1
  %155 = zext i8 %154 to i32
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %157 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %156, i32 0, i32 79
  store i32 %155, i32* %157, align 8
  %158 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %158, i32 0, i32 17
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, 67109888
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %163, label %185

163:                                              ; preds = %153
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %165 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %165, i32 0, i32 82
  %167 = load i8, i8* %5, align 1
  %168 = zext i8 %167 to i32
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %169, i32 0, i32 80
  %171 = load i32, i32* %170, align 4
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %182

173:                                              ; preds = %163
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %175 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %174, i32 0, i32 145
  %176 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %175, i32 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %179 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %178, i32 0, i32 80
  %180 = load i32, i32* %179, align 4
  %181 = call i32 @png_product2(i32 noundef %177, i32 noundef %180)
  br label %183

182:                                              ; preds = %163
  br label %183

183:                                              ; preds = %182, %173
  %184 = phi i32 [ %181, %173 ], [ 100000, %182 ]
  call void @png_build_16to8_table(%struct.png_struct_def* noundef %164, i16*** noundef %166, i32 noundef %168, i32 noundef %184)
  br label %207

185:                                              ; preds = %153
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %187 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %187, i32 0, i32 82
  %189 = load i8, i8* %5, align 1
  %190 = zext i8 %189 to i32
  %191 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %192 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %191, i32 0, i32 80
  %193 = load i32, i32* %192, align 4
  %194 = icmp sgt i32 %193, 0
  br i1 %194, label %195, label %204

195:                                              ; preds = %185
  %196 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %197 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %196, i32 0, i32 145
  %198 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %197, i32 0, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %201 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %200, i32 0, i32 80
  %202 = load i32, i32* %201, align 4
  %203 = call i32 @png_reciprocal2(i32 noundef %199, i32 noundef %202)
  br label %205

204:                                              ; preds = %185
  br label %205

205:                                              ; preds = %204, %195
  %206 = phi i32 [ %203, %195 ], [ 100000, %204 ]
  call void @png_build_16bit_table(%struct.png_struct_def* noundef %186, i16*** noundef %188, i32 noundef %190, i32 noundef %206)
  br label %207

207:                                              ; preds = %205, %183
  %208 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %208, i32 0, i32 17
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %210, 6291584
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %245

213:                                              ; preds = %207
  %214 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %215 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %216 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %215, i32 0, i32 86
  %217 = load i8, i8* %5, align 1
  %218 = zext i8 %217 to i32
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %219, i32 0, i32 145
  %221 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %220, i32 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = call i32 @png_reciprocal(i32 noundef %222)
  call void @png_build_16bit_table(%struct.png_struct_def* noundef %214, i16*** noundef %216, i32 noundef %218, i32 noundef %223)
  %224 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %225 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %226 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %225, i32 0, i32 85
  %227 = load i8, i8* %5, align 1
  %228 = zext i8 %227 to i32
  %229 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %230 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %229, i32 0, i32 80
  %231 = load i32, i32* %230, align 4
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %233, label %238

233:                                              ; preds = %213
  %234 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %235 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %234, i32 0, i32 80
  %236 = load i32, i32* %235, align 4
  %237 = call i32 @png_reciprocal(i32 noundef %236)
  br label %243

238:                                              ; preds = %213
  %239 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %240 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %239, i32 0, i32 145
  %241 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %240, i32 0, i32 0
  %242 = load i32, i32* %241, align 8
  br label %243

243:                                              ; preds = %238, %233
  %244 = phi i32 [ %237, %233 ], [ %242, %238 ]
  call void @png_build_16bit_table(%struct.png_struct_def* noundef %224, i16*** noundef %226, i32 noundef %228, i32 noundef %244)
  br label %245

245:                                              ; preds = %243, %207
  br label %246

246:                                              ; preds = %245, %75
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_build_8bit_table(%struct.png_struct_def* noalias noundef %0, i8** noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %9, i64 noundef 256)
  %11 = load i8**, i8*** %5, align 8
  store i8* %10, i8** %11, align 8
  store i8* %10, i8** %8, align 8
  %12 = load i32, i32* %6, align 4
  %13 = call i32 @png_gamma_significant(i32 noundef %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %3
  store i32 0, i32* %7, align 4
  br label %16

16:                                               ; preds = %27, %15
  %17 = load i32, i32* %7, align 4
  %18 = icmp ult i32 %17, 256
  br i1 %18, label %19, label %30

19:                                               ; preds = %16
  %20 = load i32, i32* %7, align 4
  %21 = load i32, i32* %6, align 4
  %22 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %20, i32 noundef %21)
  %23 = load i8*, i8** %8, align 8
  %24 = load i32, i32* %7, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  store i8 %22, i8* %26, align 1
  br label %27

27:                                               ; preds = %19
  %28 = load i32, i32* %7, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %7, align 4
  br label %16, !llvm.loop !34

30:                                               ; preds = %16
  br label %47

31:                                               ; preds = %3
  store i32 0, i32* %7, align 4
  br label %32

32:                                               ; preds = %43, %31
  %33 = load i32, i32* %7, align 4
  %34 = icmp ult i32 %33, 256
  br i1 %34, label %35, label %46

35:                                               ; preds = %32
  %36 = load i32, i32* %7, align 4
  %37 = and i32 %36, 255
  %38 = trunc i32 %37 to i8
  %39 = load i8*, i8** %8, align 8
  %40 = load i32, i32* %7, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8 %38, i8* %42, align 1
  br label %43

43:                                               ; preds = %35
  %44 = load i32, i32* %7, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %7, align 4
  br label %32, !llvm.loop !35

46:                                               ; preds = %32
  br label %47

47:                                               ; preds = %46, %30
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_product2(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = sitofp i32 %7 to double
  %9 = fmul double %8, 1.000000e-05
  store double %9, double* %6, align 8
  %10 = load i32, i32* %5, align 4
  %11 = sitofp i32 %10 to double
  %12 = load double, double* %6, align 8
  %13 = fmul double %12, %11
  store double %13, double* %6, align 8
  %14 = load double, double* %6, align 8
  %15 = fadd double %14, 5.000000e-01
  %16 = call double @llvm.floor.f64(double %15)
  store double %16, double* %6, align 8
  %17 = load double, double* %6, align 8
  %18 = fcmp ole double %17, 0x41DFFFFFFFC00000
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = load double, double* %6, align 8
  %21 = fcmp oge double %20, 0xC1E0000000000000
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = load double, double* %6, align 8
  %24 = fptosi double %23 to i32
  store i32 %24, i32* %3, align 4
  br label %26

25:                                               ; preds = %19, %2
  store i32 0, i32* %3, align 4
  br label %26

26:                                               ; preds = %25, %22
  %27 = load i32, i32* %3, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_build_16to8_table(%struct.png_struct_def* noalias noundef %0, i16*** noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i16***, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i16**, align 8
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i16*** %1, i16**** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %16 = load i32, i32* %7, align 4
  %17 = sub i32 8, %16
  %18 = shl i32 1, %17
  store i32 %18, i32* %9, align 4
  %19 = load i32, i32* %7, align 4
  %20 = sub i32 16, %19
  %21 = shl i32 1, %20
  %22 = sub i32 %21, 1
  store i32 %22, i32* %10, align 4
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %24 = load i32, i32* %9, align 4
  %25 = zext i32 %24 to i64
  %26 = mul i64 %25, 8
  %27 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_calloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %23, i64 noundef %26)
  %28 = bitcast i8* %27 to i16**
  %29 = load i16***, i16**** %6, align 8
  store i16** %28, i16*** %29, align 8
  store i16** %28, i16*** %13, align 8
  store i32 0, i32* %11, align 4
  br label %30

30:                                               ; preds = %42, %4
  %31 = load i32, i32* %11, align 4
  %32 = load i32, i32* %9, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %34, label %45

34:                                               ; preds = %30
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %36 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %35, i64 noundef 512)
  %37 = bitcast i8* %36 to i16*
  %38 = load i16**, i16*** %13, align 8
  %39 = load i32, i32* %11, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i16*, i16** %38, i64 %40
  store i16* %37, i16** %41, align 8
  br label %42

42:                                               ; preds = %34
  %43 = load i32, i32* %11, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %11, align 4
  br label %30, !llvm.loop !36

45:                                               ; preds = %30
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  br label %46

46:                                               ; preds = %88, %45
  %47 = load i32, i32* %11, align 4
  %48 = icmp ult i32 %47, 255
  br i1 %48, label %49, label %91

49:                                               ; preds = %46
  %50 = load i32, i32* %11, align 4
  %51 = mul i32 %50, 257
  %52 = trunc i32 %51 to i16
  store i16 %52, i16* %14, align 2
  %53 = load i16, i16* %14, align 2
  %54 = zext i16 %53 to i32
  %55 = add i32 %54, 128
  %56 = load i32, i32* %8, align 4
  %57 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %55, i32 noundef %56)
  %58 = zext i16 %57 to i32
  store i32 %58, i32* %15, align 4
  %59 = load i32, i32* %15, align 4
  %60 = load i32, i32* %10, align 4
  %61 = mul i32 %59, %60
  %62 = add i32 %61, 32768
  %63 = udiv i32 %62, 65535
  %64 = add i32 %63, 1
  store i32 %64, i32* %15, align 4
  br label %65

65:                                               ; preds = %69, %49
  %66 = load i32, i32* %12, align 4
  %67 = load i32, i32* %15, align 4
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %87

69:                                               ; preds = %65
  %70 = load i16, i16* %14, align 2
  %71 = load i16**, i16*** %13, align 8
  %72 = load i32, i32* %12, align 4
  %73 = load i32, i32* %7, align 4
  %74 = lshr i32 255, %73
  %75 = and i32 %72, %74
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i16*, i16** %71, i64 %76
  %78 = load i16*, i16** %77, align 8
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %7, align 4
  %81 = sub i32 8, %80
  %82 = lshr i32 %79, %81
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i16, i16* %78, i64 %83
  store i16 %70, i16* %84, align 2
  %85 = load i32, i32* %12, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %65, !llvm.loop !37

87:                                               ; preds = %65
  br label %88

88:                                               ; preds = %87
  %89 = load i32, i32* %11, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %11, align 4
  br label %46, !llvm.loop !38

91:                                               ; preds = %46
  br label %92

92:                                               ; preds = %97, %91
  %93 = load i32, i32* %12, align 4
  %94 = load i32, i32* %9, align 4
  %95 = shl i32 %94, 8
  %96 = icmp ult i32 %93, %95
  br i1 %96, label %97, label %114

97:                                               ; preds = %92
  %98 = load i16**, i16*** %13, align 8
  %99 = load i32, i32* %12, align 4
  %100 = load i32, i32* %7, align 4
  %101 = ashr i32 255, %100
  %102 = and i32 %99, %101
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i16*, i16** %98, i64 %103
  %105 = load i16*, i16** %104, align 8
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %7, align 4
  %108 = sub i32 8, %107
  %109 = lshr i32 %106, %108
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %105, i64 %110
  store i16 -1, i16* %111, align 2
  %112 = load i32, i32* %12, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %12, align 4
  br label %92, !llvm.loop !39

114:                                              ; preds = %92
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_build_16bit_table(%struct.png_struct_def* noalias noundef %0, i16*** noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i16***, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16**, align 8
  %15 = alloca i16*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca double, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i16*** %1, i16**** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %21 = load i32, i32* %7, align 4
  %22 = sub i32 8, %21
  %23 = shl i32 1, %22
  store i32 %23, i32* %9, align 4
  %24 = load i32, i32* %7, align 4
  %25 = sub i32 16, %24
  %26 = shl i32 1, %25
  %27 = sub nsw i32 %26, 1
  %28 = sitofp i32 %27 to double
  %29 = fdiv double 1.000000e+00, %28
  store double %29, double* %10, align 8
  %30 = load i32, i32* %7, align 4
  %31 = sub i32 16, %30
  %32 = shl i32 1, %31
  %33 = sub i32 %32, 1
  store i32 %33, i32* %11, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sub i32 15, %34
  %36 = shl i32 1, %35
  store i32 %36, i32* %12, align 4
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %38 = load i32, i32* %9, align 4
  %39 = zext i32 %38 to i64
  %40 = mul i64 %39, 8
  %41 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_calloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %37, i64 noundef %40)
  %42 = bitcast i8* %41 to i16**
  %43 = load i16***, i16**** %6, align 8
  store i16** %42, i16*** %43, align 8
  store i16** %42, i16*** %14, align 8
  store i32 0, i32* %13, align 4
  br label %44

44:                                               ; preds = %122, %4
  %45 = load i32, i32* %13, align 4
  %46 = load i32, i32* %9, align 4
  %47 = icmp ult i32 %45, %46
  br i1 %47, label %48, label %125

48:                                               ; preds = %44
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %50 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %49, i64 noundef 512)
  %51 = bitcast i8* %50 to i16*
  %52 = load i16**, i16*** %14, align 8
  %53 = load i32, i32* %13, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16*, i16** %52, i64 %54
  store i16* %51, i16** %55, align 8
  store i16* %51, i16** %15, align 8
  %56 = load i32, i32* %8, align 4
  %57 = call i32 @png_gamma_significant(i32 noundef %56)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %90

59:                                               ; preds = %48
  store i32 0, i32* %16, align 4
  br label %60

60:                                               ; preds = %86, %59
  %61 = load i32, i32* %16, align 4
  %62 = icmp ult i32 %61, 256
  br i1 %62, label %63, label %89

63:                                               ; preds = %60
  %64 = load i32, i32* %16, align 4
  %65 = load i32, i32* %7, align 4
  %66 = sub i32 8, %65
  %67 = shl i32 %64, %66
  %68 = load i32, i32* %13, align 4
  %69 = add i32 %67, %68
  store i32 %69, i32* %17, align 4
  %70 = load i32, i32* %17, align 4
  %71 = uitofp i32 %70 to double
  %72 = load double, double* %10, align 8
  %73 = fmul double %71, %72
  %74 = load i32, i32* %8, align 4
  %75 = sitofp i32 %74 to double
  %76 = fmul double %75, 1.000000e-05
  %77 = call double @pow(double noundef %73, double noundef %76) #16
  %78 = call double @llvm.fmuladd.f64(double 6.553500e+04, double %77, double 5.000000e-01)
  %79 = call double @llvm.floor.f64(double %78)
  store double %79, double* %18, align 8
  %80 = load double, double* %18, align 8
  %81 = fptoui double %80 to i16
  %82 = load i16*, i16** %15, align 8
  %83 = load i32, i32* %16, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %82, i64 %84
  store i16 %81, i16* %85, align 2
  br label %86

86:                                               ; preds = %63
  %87 = load i32, i32* %16, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %16, align 4
  br label %60, !llvm.loop !40

89:                                               ; preds = %60
  br label %121

90:                                               ; preds = %48
  store i32 0, i32* %19, align 4
  br label %91

91:                                               ; preds = %117, %90
  %92 = load i32, i32* %19, align 4
  %93 = icmp ult i32 %92, 256
  br i1 %93, label %94, label %120

94:                                               ; preds = %91
  %95 = load i32, i32* %19, align 4
  %96 = load i32, i32* %7, align 4
  %97 = sub i32 8, %96
  %98 = shl i32 %95, %97
  %99 = load i32, i32* %13, align 4
  %100 = add i32 %98, %99
  store i32 %100, i32* %20, align 4
  %101 = load i32, i32* %7, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %94
  %104 = load i32, i32* %20, align 4
  %105 = mul i32 %104, 65535
  %106 = load i32, i32* %12, align 4
  %107 = add i32 %105, %106
  %108 = load i32, i32* %11, align 4
  %109 = udiv i32 %107, %108
  store i32 %109, i32* %20, align 4
  br label %110

110:                                              ; preds = %103, %94
  %111 = load i32, i32* %20, align 4
  %112 = trunc i32 %111 to i16
  %113 = load i16*, i16** %15, align 8
  %114 = load i32, i32* %19, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %113, i64 %115
  store i16 %112, i16* %116, align 2
  br label %117

117:                                              ; preds = %110
  %118 = load i32, i32* %19, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %19, align 4
  br label %91, !llvm.loop !41

120:                                              ; preds = %91
  br label %121

121:                                              ; preds = %120, %89
  br label %122

122:                                              ; preds = %121
  %123 = load i32, i32* %13, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %13, align 4
  br label %44, !llvm.loop !42

125:                                              ; preds = %44
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_set_option(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %12 = icmp ne %struct.png_struct_def* %11, null
  br i1 %12, label %13, label %48

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4
  %15 = icmp sge i32 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 12
  br i1 %18, label %19, label %48

19:                                               ; preds = %16
  %20 = load i32, i32* %6, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %48

23:                                               ; preds = %19
  %24 = load i32, i32* %6, align 4
  %25 = shl i32 3, %24
  store i32 %25, i32* %8, align 4
  %26 = load i32, i32* %7, align 4
  %27 = icmp ne i32 %26, 0
  %28 = zext i1 %27 to i32
  %29 = add i32 2, %28
  %30 = load i32, i32* %6, align 4
  %31 = shl i32 %29, %30
  store i32 %31, i32* %9, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 110
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %10, align 4
  %35 = load i32, i32* %10, align 4
  %36 = load i32, i32* %8, align 4
  %37 = xor i32 %36, -1
  %38 = and i32 %35, %37
  %39 = load i32, i32* %9, align 4
  %40 = or i32 %38, %39
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 110
  store i32 %40, i32* %42, align 8
  %43 = load i32, i32* %10, align 4
  %44 = load i32, i32* %8, align 4
  %45 = and i32 %43, %44
  %46 = load i32, i32* %6, align 4
  %47 = ashr i32 %45, %46
  store i32 %47, i32* %4, align 4
  br label %49

48:                                               ; preds = %19, %16, %13, %3
  store i32 1, i32* %4, align 4
  br label %49

49:                                               ; preds = %48, %23
  %50 = load i32, i32* %4, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_image_free(%struct.png_image* noundef %0) #0 {
  %2 = alloca %struct.png_image*, align 8
  store %struct.png_image* %0, %struct.png_image** %2, align 8
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = icmp ne %struct.png_image* %3, null
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = load %struct.png_image*, %struct.png_image** %2, align 8
  %7 = getelementptr inbounds %struct.png_image, %struct.png_image* %6, i32 0, i32 0
  %8 = load %struct.png_control*, %struct.png_control** %7, align 8
  %9 = icmp ne %struct.png_control* %8, null
  br i1 %9, label %10, label %23

10:                                               ; preds = %5
  %11 = load %struct.png_image*, %struct.png_image** %2, align 8
  %12 = getelementptr inbounds %struct.png_image, %struct.png_image* %11, i32 0, i32 0
  %13 = load %struct.png_control*, %struct.png_control** %12, align 8
  %14 = getelementptr inbounds %struct.png_control, %struct.png_control* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = load %struct.png_image*, %struct.png_image** %2, align 8
  %19 = bitcast %struct.png_image* %18 to i8*
  %20 = call i32 @png_image_free_function(i8* noundef %19)
  %21 = load %struct.png_image*, %struct.png_image** %2, align 8
  %22 = getelementptr inbounds %struct.png_image, %struct.png_image* %21, i32 0, i32 0
  store %struct.png_control* null, %struct.png_control** %22, align 8
  br label %23

23:                                               ; preds = %17, %10, %5, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_free_function(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_control*, align 8
  %6 = alloca %struct.png_control, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %3, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = bitcast i8* %8 to %struct.png_image*
  store %struct.png_image* %9, %struct.png_image** %4, align 8
  %10 = load %struct.png_image*, %struct.png_image** %4, align 8
  %11 = getelementptr inbounds %struct.png_image, %struct.png_image* %10, i32 0, i32 0
  %12 = load %struct.png_control*, %struct.png_control** %11, align 8
  store %struct.png_control* %12, %struct.png_control** %5, align 8
  %13 = load %struct.png_control*, %struct.png_control** %5, align 8
  %14 = getelementptr inbounds %struct.png_control, %struct.png_control* %13, i32 0, i32 0
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %16 = icmp eq %struct.png_struct_def* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %70

18:                                               ; preds = %1
  %19 = load %struct.png_control*, %struct.png_control** %5, align 8
  %20 = getelementptr inbounds %struct.png_control, %struct.png_control* %19, i32 0, i32 5
  %21 = load i8, i8* %20, align 8
  %22 = lshr i8 %21, 1
  %23 = and i8 %22, 1
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %18
  %27 = load %struct.png_control*, %struct.png_control** %5, align 8
  %28 = getelementptr inbounds %struct.png_control, %struct.png_control* %27, i32 0, i32 0
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %28, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 9
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast i8* %31 to %struct._IO_FILE*
  store %struct._IO_FILE* %32, %struct._IO_FILE** %7, align 8
  %33 = load %struct.png_control*, %struct.png_control** %5, align 8
  %34 = getelementptr inbounds %struct.png_control, %struct.png_control* %33, i32 0, i32 5
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, -3
  %37 = or i8 %36, 0
  store i8 %37, i8* %34, align 8
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %39 = icmp ne %struct._IO_FILE* %38, null
  br i1 %39, label %40, label %47

40:                                               ; preds = %26
  %41 = load %struct.png_control*, %struct.png_control** %5, align 8
  %42 = getelementptr inbounds %struct.png_control, %struct.png_control* %41, i32 0, i32 0
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %42, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 9
  store i8* null, i8** %44, align 8
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %46 = call i32 @fclose(%struct._IO_FILE* noundef %45)
  br label %47

47:                                               ; preds = %40, %26
  br label %48

48:                                               ; preds = %47, %18
  %49 = load %struct.png_control*, %struct.png_control** %5, align 8
  %50 = bitcast %struct.png_control* %6 to i8*
  %51 = bitcast %struct.png_control* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 48, i1 false)
  %52 = load %struct.png_image*, %struct.png_image** %4, align 8
  %53 = getelementptr inbounds %struct.png_image, %struct.png_image* %52, i32 0, i32 0
  store %struct.png_control* %6, %struct.png_control** %53, align 8
  %54 = getelementptr inbounds %struct.png_control, %struct.png_control* %6, i32 0, i32 0
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %54, align 8
  %56 = load %struct.png_control*, %struct.png_control** %5, align 8
  %57 = bitcast %struct.png_control* %56 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %55, i8* noundef %57)
  %58 = getelementptr inbounds %struct.png_control, %struct.png_control* %6, i32 0, i32 5
  %59 = load i8, i8* %58, align 8
  %60 = and i8 %59, 1
  %61 = zext i8 %60 to i32
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %48
  %64 = getelementptr inbounds %struct.png_control, %struct.png_control* %6, i32 0, i32 0
  %65 = getelementptr inbounds %struct.png_control, %struct.png_control* %6, i32 0, i32 1
  call void @png_destroy_write_struct(%struct.png_struct_def** noundef %64, %struct.png_info_def** noundef %65)
  br label %69

66:                                               ; preds = %48
  %67 = getelementptr inbounds %struct.png_control, %struct.png_control* %6, i32 0, i32 0
  %68 = getelementptr inbounds %struct.png_control, %struct.png_control* %6, i32 0, i32 1
  call void @png_destroy_read_struct(%struct.png_struct_def** noundef %67, %struct.png_info_def** noundef %68, %struct.png_info_def** noundef null)
  br label %69

69:                                               ; preds = %66, %63
  store i32 1, i32* %2, align 4
  br label %70

70:                                               ; preds = %69, %17
  %71 = load i32, i32* %2, align 4
  ret i32 %71
}

declare i32 @fclose(%struct._IO_FILE* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_error(%struct.png_image* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_image*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_image* %0, %struct.png_image** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_image*, %struct.png_image** %3, align 8
  %6 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i32 0, i32 8
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  %8 = load i8*, i8** %4, align 8
  %9 = call i64 @png_safecat(i8* noundef %7, i64 noundef 64, i64 noundef 0, i8* noundef %8)
  %10 = load %struct.png_image*, %struct.png_image** %3, align 8
  %11 = getelementptr inbounds %struct.png_image, %struct.png_image* %10, i32 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = or i32 %12, 2
  store i32 %13, i32* %11, align 8
  %14 = load %struct.png_image*, %struct.png_image** %3, align 8
  call void @png_image_free(%struct.png_image* noundef %14)
  ret i32 0
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define void @png_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #9 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp ne %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %20

7:                                                ; preds = %2
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 4
  %10 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %9, align 8
  %11 = icmp ne void (%struct.png_struct_def*, i8*)* %10, null
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 4
  %15 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %14, align 8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %17 = bitcast %struct.png_struct_def* %16 to i8*
  %18 = bitcast i8* %17 to %struct.png_struct_def*
  %19 = load i8*, i8** %4, align 8
  call void %15(%struct.png_struct_def* noundef %18, i8* noundef %19)
  br label %20

20:                                               ; preds = %12, %7, %2
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = load i8*, i8** %4, align 8
  call void @png_default_error(%struct.png_struct_def* noundef %21, i8* noundef %22) #13
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @png_default_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #9 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %10, %8
  %12 = phi i8* [ %9, %8 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.3, i64 0, i64 0), %10 ]
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %5, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.4, i64 0, i64 0), i8* noundef %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.5, i64 0, i64 0))
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_longjmp(%struct.png_struct_def* noundef %16, i32 noundef 1) #13
  unreachable
}

declare i32 @fprintf(%struct._IO_FILE* noundef, i8* noundef, ...) #3

; Function Attrs: noinline noreturn nounwind optnone uwtable
define void @png_longjmp(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #9 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp ne %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %26

7:                                                ; preds = %2
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 1
  %10 = load void (%struct.__jmp_buf_tag*, i32)*, void (%struct.__jmp_buf_tag*, i32)** %9, align 8
  %11 = icmp ne void (%struct.__jmp_buf_tag*, i32)* %10, null
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 2
  %15 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %14, align 8
  %16 = icmp ne [1 x %struct.__jmp_buf_tag]* %15, null
  br i1 %16, label %17, label %26

17:                                               ; preds = %12
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 1
  %20 = load void (%struct.__jmp_buf_tag*, i32)*, void (%struct.__jmp_buf_tag*, i32)** %19, align 8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 2
  %23 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %22, align 8
  %24 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %23, i64 0, i64 0
  %25 = load i32, i32* %4, align 4
  call void %20(%struct.__jmp_buf_tag* noundef %24, i32 noundef %25)
  br label %26

26:                                               ; preds = %17, %12, %7, %2
  call void @abort() #17
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: noinline nounwind optnone uwtable
define i64 @png_safecat(i8* noundef %0, i64 noundef %1, i64 noundef %2, i8* noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %44

11:                                               ; preds = %4
  %12 = load i64, i64* %7, align 8
  %13 = load i64, i64* %6, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %44

15:                                               ; preds = %11
  %16 = load i8*, i8** %8, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %40

18:                                               ; preds = %15
  br label %19

19:                                               ; preds = %31, %18
  %20 = load i8*, i8** %8, align 8
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = load i64, i64* %7, align 8
  %26 = load i64, i64* %6, align 8
  %27 = sub i64 %26, 1
  %28 = icmp ult i64 %25, %27
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi i1 [ false, %19 ], [ %28, %24 ]
  br i1 %30, label %31, label %39

31:                                               ; preds = %29
  %32 = load i8*, i8** %8, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %8, align 8
  %34 = load i8, i8* %32, align 1
  %35 = load i8*, i8** %5, align 8
  %36 = load i64, i64* %7, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %7, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8 %34, i8* %38, align 1
  br label %19, !llvm.loop !43

39:                                               ; preds = %29
  br label %40

40:                                               ; preds = %39, %15
  %41 = load i8*, i8** %5, align 8
  %42 = load i64, i64* %7, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %40, %11, %4
  %45 = load i64, i64* %7, align 8
  ret i64 %45
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_format_number(i8* noundef %0, i8* noundef %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i64 %3, i64* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 1, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %13, i8** %6, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %95, %4
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = icmp ugt i8* %15, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = load i64, i64* %8, align 8
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %9, align 4
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br label %25

25:                                               ; preds = %21, %18
  %26 = phi i1 [ true, %18 ], [ %24, %21 ]
  br label %27

27:                                               ; preds = %25, %14
  %28 = phi i1 [ false, %14 ], [ %26, %25 ]
  br i1 %28, label %29, label %96

29:                                               ; preds = %27
  %30 = load i32, i32* %7, align 4
  switch i32 %30, label %68 [
    i32 5, label %31
    i32 2, label %48
    i32 1, label %49
    i32 4, label %58
    i32 3, label %59
  ]

31:                                               ; preds = %29
  store i32 5, i32* %10, align 4
  %32 = load i32, i32* %11, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = load i64, i64* %8, align 8
  %36 = urem i64 %35, 10
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34, %31
  %39 = load i64, i64* %8, align 8
  %40 = urem i64 %39, 10
  %41 = getelementptr inbounds [17 x i8], [17 x i8]* @png_format_number.digits, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = load i8*, i8** %6, align 8
  %44 = getelementptr inbounds i8, i8* %43, i32 -1
  store i8* %44, i8** %6, align 8
  store i8 %42, i8* %44, align 1
  store i32 1, i32* %11, align 4
  br label %45

45:                                               ; preds = %38, %34
  %46 = load i64, i64* %8, align 8
  %47 = udiv i64 %46, 10
  store i64 %47, i64* %8, align 8
  br label %69

48:                                               ; preds = %29
  store i32 2, i32* %10, align 4
  br label %49

49:                                               ; preds = %29, %48
  %50 = load i64, i64* %8, align 8
  %51 = urem i64 %50, 10
  %52 = getelementptr inbounds [17 x i8], [17 x i8]* @png_format_number.digits, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = load i8*, i8** %6, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 -1
  store i8* %55, i8** %6, align 8
  store i8 %53, i8* %55, align 1
  %56 = load i64, i64* %8, align 8
  %57 = udiv i64 %56, 10
  store i64 %57, i64* %8, align 8
  br label %69

58:                                               ; preds = %29
  store i32 2, i32* %10, align 4
  br label %59

59:                                               ; preds = %29, %58
  %60 = load i64, i64* %8, align 8
  %61 = and i64 %60, 15
  %62 = getelementptr inbounds [17 x i8], [17 x i8]* @png_format_number.digits, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = load i8*, i8** %6, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 -1
  store i8* %65, i8** %6, align 8
  store i8 %63, i8* %65, align 1
  %66 = load i64, i64* %8, align 8
  %67 = lshr i64 %66, 4
  store i64 %67, i64* %8, align 8
  br label %69

68:                                               ; preds = %29
  store i64 0, i64* %8, align 8
  br label %69

69:                                               ; preds = %68, %59, %49, %45
  %70 = load i32, i32* %9, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %9, align 4
  %72 = load i32, i32* %7, align 4
  %73 = icmp eq i32 %72, 5
  br i1 %73, label %74, label %95

74:                                               ; preds = %69
  %75 = load i32, i32* %9, align 4
  %76 = icmp eq i32 %75, 5
  br i1 %76, label %77, label %95

77:                                               ; preds = %74
  %78 = load i8*, i8** %6, align 8
  %79 = load i8*, i8** %5, align 8
  %80 = icmp ugt i8* %78, %79
  br i1 %80, label %81, label %95

81:                                               ; preds = %77
  %82 = load i32, i32* %11, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = load i8*, i8** %6, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 -1
  store i8* %86, i8** %6, align 8
  store i8 46, i8* %86, align 1
  br label %94

87:                                               ; preds = %81
  %88 = load i64, i64* %8, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = load i8*, i8** %6, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 -1
  store i8* %92, i8** %6, align 8
  store i8 48, i8* %92, align 1
  br label %93

93:                                               ; preds = %90, %87
  br label %94

94:                                               ; preds = %93, %84
  br label %95

95:                                               ; preds = %94, %77, %74, %69
  br label %14, !llvm.loop !44

96:                                               ; preds = %27
  %97 = load i8*, i8** %6, align 8
  ret i8* %97
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_warning(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %5, align 4
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp eq i32 %11, 35
  br i1 %12, label %13, label %31

13:                                               ; preds = %8
  store i32 1, i32* %5, align 4
  br label %14

14:                                               ; preds = %27, %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 15
  br i1 %16, label %17, label %30

17:                                               ; preds = %14
  %18 = load i8*, i8** %4, align 8
  %19 = load i32, i32* %5, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 32
  br i1 %24, label %25, label %26

25:                                               ; preds = %17
  br label %30

26:                                               ; preds = %17
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %5, align 4
  br label %14, !llvm.loop !45

30:                                               ; preds = %25, %14
  br label %31

31:                                               ; preds = %30, %8
  br label %32

32:                                               ; preds = %31, %2
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %34 = icmp ne %struct.png_struct_def* %33, null
  br i1 %34, label %35, label %51

35:                                               ; preds = %32
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 5
  %38 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %37, align 8
  %39 = icmp ne void (%struct.png_struct_def*, i8*)* %38, null
  br i1 %39, label %40, label %51

40:                                               ; preds = %35
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 5
  %43 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %42, align 8
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %45 = bitcast %struct.png_struct_def* %44 to i8*
  %46 = bitcast i8* %45 to %struct.png_struct_def*
  %47 = load i8*, i8** %4, align 8
  %48 = load i32, i32* %5, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  call void %43(%struct.png_struct_def* noundef %46, i8* noundef %50)
  br label %57

51:                                               ; preds = %35, %32
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %53 = load i8*, i8** %4, align 8
  %54 = load i32, i32* %5, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  call void @png_default_warning(%struct.png_struct_def* noundef %52, i8* noundef %56)
  br label %57

57:                                               ; preds = %51, %40
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_default_warning(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %5, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.12, i64 0, i64 0), i8* noundef %6)
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %8, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.5, i64 0, i64 0))
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_warning_parameter([32 x i8]* noundef %0, i32 noundef %1, i8* noundef %2) #0 {
  %4 = alloca [32 x i8]*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store [32 x i8]* %0, [32 x i8]** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %7 = load i32, i32* %5, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = load i32, i32* %5, align 4
  %11 = icmp sle i32 %10, 8
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = load [32 x i8]*, [32 x i8]** %4, align 8
  %14 = load i32, i32* %5, align 4
  %15 = sub nsw i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i64 %16
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* %17, i64 0, i64 0
  %19 = load i8*, i8** %6, align 8
  %20 = call i64 @png_safecat(i8* noundef %18, i64 noundef 32, i64 noundef 0, i8* noundef %19)
  br label %21

21:                                               ; preds = %12, %9, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_warning_parameter_unsigned([32 x i8]* noundef %0, i32 noundef %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = alloca [32 x i8]*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca [24 x i8], align 16
  store [32 x i8]* %0, [32 x i8]** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i64 %3, i64* %8, align 8
  %10 = load [32 x i8]*, [32 x i8]** %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  %13 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = load i32, i32* %7, align 4
  %16 = load i64, i64* %8, align 8
  %17 = call i8* @png_format_number(i8* noundef %12, i8* noundef %14, i32 noundef %15, i64 noundef %16)
  call void @png_warning_parameter([32 x i8]* noundef %10, i32 noundef %11, i8* noundef %17)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_warning_parameter_signed([32 x i8]* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca [32 x i8]*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [24 x i8], align 16
  store [32 x i8]* %0, [32 x i8]** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sext i32 %12 to i64
  store i64 %13, i64* %9, align 8
  %14 = load i32, i32* %8, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %4
  %17 = load i64, i64* %9, align 8
  %18 = xor i64 %17, -1
  %19 = add i64 %18, 1
  store i64 %19, i64* %9, align 8
  br label %20

20:                                               ; preds = %16, %4
  %21 = getelementptr inbounds [24 x i8], [24 x i8]* %11, i64 0, i64 0
  %22 = getelementptr inbounds [24 x i8], [24 x i8]* %11, i64 0, i64 0
  %23 = getelementptr inbounds i8, i8* %22, i64 24
  %24 = load i32, i32* %7, align 4
  %25 = load i64, i64* %9, align 8
  %26 = call i8* @png_format_number(i8* noundef %21, i8* noundef %23, i32 noundef %24, i64 noundef %25)
  store i8* %26, i8** %10, align 8
  %27 = load i32, i32* %8, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %20
  %30 = load i8*, i8** %10, align 8
  %31 = getelementptr inbounds [24 x i8], [24 x i8]* %11, i64 0, i64 0
  %32 = icmp ugt i8* %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load i8*, i8** %10, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 -1
  store i8* %35, i8** %10, align 8
  store i8 45, i8* %35, align 1
  br label %36

36:                                               ; preds = %33, %29, %20
  %37 = load [32 x i8]*, [32 x i8]** %5, align 8
  %38 = load i32, i32* %6, align 4
  %39 = load i8*, i8** %10, align 8
  call void @png_warning_parameter([32 x i8]* noundef %37, i32 noundef %38, i8* noundef %39)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_formatted_warning(%struct.png_struct_def* noalias noundef %0, [32 x i8]* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca [32 x i8]*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [192 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store [32 x i8]* %1, [32 x i8]** %5, align 8
  store i8* %2, i8** %6, align 8
  store i64 0, i64* %7, align 8
  br label %13

13:                                               ; preds = %102, %98, %3
  %14 = load i64, i64* %7, align 8
  %15 = icmp ult i64 %14, 191
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load i8*, i8** %6, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %16, %13
  %22 = phi i1 [ false, %13 ], [ %20, %16 ]
  br i1 %22, label %23, label %109

23:                                               ; preds = %21
  %24 = load [32 x i8]*, [32 x i8]** %5, align 8
  %25 = icmp ne [32 x i8]* %24, null
  br i1 %25, label %26, label %102

26:                                               ; preds = %23
  %27 = load i8*, i8** %6, align 8
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 64
  br i1 %30, label %31, label %102

31:                                               ; preds = %26
  %32 = load i8*, i8** %6, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %102

37:                                               ; preds = %31
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %6, align 8
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %42

42:                                               ; preds = %59, %37
  %43 = load i32, i32* %10, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [10 x i8], [10 x i8]* @png_formatted_warning.valid_parameters, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = load i32, i32* %9, align 4
  %49 = icmp ne i32 %47, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %42
  %51 = load i32, i32* %10, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [10 x i8], [10 x i8]* @png_formatted_warning.valid_parameters, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp ne i32 %55, 0
  br label %57

57:                                               ; preds = %50, %42
  %58 = phi i1 [ false, %42 ], [ %56, %50 ]
  br i1 %58, label %59, label %62

59:                                               ; preds = %57
  %60 = load i32, i32* %10, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %10, align 4
  br label %42, !llvm.loop !46

62:                                               ; preds = %57
  %63 = load i32, i32* %10, align 4
  %64 = icmp slt i32 %63, 8
  br i1 %64, label %65, label %101

65:                                               ; preds = %62
  %66 = load [32 x i8]*, [32 x i8]** %5, align 8
  %67 = load i32, i32* %10, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [32 x i8], [32 x i8]* %66, i64 %68
  %70 = getelementptr inbounds [32 x i8], [32 x i8]* %69, i64 0, i64 0
  store i8* %70, i8** %11, align 8
  %71 = load [32 x i8]*, [32 x i8]** %5, align 8
  %72 = load i32, i32* %10, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [32 x i8], [32 x i8]* %71, i64 %73
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0
  %76 = getelementptr inbounds i8, i8* %75, i64 32
  store i8* %76, i8** %12, align 8
  br label %77

77:                                               ; preds = %91, %65
  %78 = load i64, i64* %7, align 8
  %79 = icmp ult i64 %78, 191
  br i1 %79, label %80, label %89

80:                                               ; preds = %77
  %81 = load i8*, i8** %11, align 8
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %80
  %86 = load i8*, i8** %11, align 8
  %87 = load i8*, i8** %12, align 8
  %88 = icmp ult i8* %86, %87
  br label %89

89:                                               ; preds = %85, %80, %77
  %90 = phi i1 [ false, %80 ], [ false, %77 ], [ %88, %85 ]
  br i1 %90, label %91, label %98

91:                                               ; preds = %89
  %92 = load i8*, i8** %11, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %11, align 8
  %94 = load i8, i8* %92, align 1
  %95 = load i64, i64* %7, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %7, align 8
  %97 = getelementptr inbounds [192 x i8], [192 x i8]* %8, i64 0, i64 %95
  store i8 %94, i8* %97, align 1
  br label %77, !llvm.loop !47

98:                                               ; preds = %89
  %99 = load i8*, i8** %6, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %6, align 8
  br label %13, !llvm.loop !48

101:                                              ; preds = %62
  br label %102

102:                                              ; preds = %101, %31, %26, %23
  %103 = load i8*, i8** %6, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %6, align 8
  %105 = load i8, i8* %103, align 1
  %106 = load i64, i64* %7, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %7, align 8
  %108 = getelementptr inbounds [192 x i8], [192 x i8]* %8, i64 0, i64 %106
  store i8 %105, i8* %108, align 1
  br label %13, !llvm.loop !48

109:                                              ; preds = %21
  %110 = load i64, i64* %7, align 8
  %111 = getelementptr inbounds [192 x i8], [192 x i8]* %8, i64 0, i64 %110
  store i8 0, i8* %111, align 1
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %113 = getelementptr inbounds [192 x i8], [192 x i8]* %8, i64 0, i64 0
  call void @png_warning(%struct.png_struct_def* noundef %112, i8* noundef %113)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_benign_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 16
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1048576
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 32768
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 44
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %23 = load i8*, i8** %4, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %22, i8* noundef %23)
  br label %27

24:                                               ; preds = %16, %10
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %26 = load i8*, i8** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %25, i8* noundef %26)
  br label %27

27:                                               ; preds = %24, %21
  br label %45

28:                                               ; preds = %2
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 15
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 32768
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %28
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 44
  %37 = load i32, i32* %36, align 8
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %41 = load i8*, i8** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %40, i8* noundef %41) #13
  unreachable

42:                                               ; preds = %34, %28
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %44 = load i8*, i8** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %43, i8* noundef %44) #13
  unreachable

45:                                               ; preds = %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_chunk_warning(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [214 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = load i8*, i8** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %9, i8* noundef %10)
  br label %17

11:                                               ; preds = %2
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %13 = getelementptr inbounds [214 x i8], [214 x i8]* %5, i64 0, i64 0
  %14 = load i8*, i8** %4, align 8
  call void @png_format_buffer(%struct.png_struct_def* noundef %12, i8* noundef %13, i8* noundef %14)
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds [214 x i8], [214 x i8]* %5, i64 0, i64 0
  call void @png_warning(%struct.png_struct_def* noundef %15, i8* noundef %16)
  br label %17

17:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define void @png_chunk_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #9 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [214 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = load i8*, i8** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %9, i8* noundef %10) #13
  unreachable

11:                                               ; preds = %2
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %13 = getelementptr inbounds [214 x i8], [214 x i8]* %5, i64 0, i64 0
  %14 = load i8*, i8** %4, align 8
  call void @png_format_buffer(%struct.png_struct_def* noundef %12, i8* noundef %13, i8* noundef %14)
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds [214 x i8], [214 x i8]* %5, i64 0, i64 0
  call void @png_error(%struct.png_struct_def* noundef %15, i8* noundef %16) #13
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_format_buffer(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 44
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 24, i32* %9, align 4
  br label %15

15:                                               ; preds = %82, %3
  %16 = load i32, i32* %9, align 4
  %17 = icmp sge i32 %16, 0
  br i1 %17, label %18, label %83

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %9, align 4
  %21 = lshr i32 %19, %20
  %22 = and i32 %21, 255
  store i32 %22, i32* %10, align 4
  %23 = load i32, i32* %9, align 4
  %24 = sub nsw i32 %23, 8
  store i32 %24, i32* %9, align 4
  %25 = load i32, i32* %10, align 4
  %26 = icmp slt i32 %25, 65
  br i1 %26, label %38, label %27

27:                                               ; preds = %18
  %28 = load i32, i32* %10, align 4
  %29 = icmp sgt i32 %28, 122
  br i1 %29, label %38, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %10, align 4
  %32 = icmp sgt i32 %31, 90
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = load i32, i32* %10, align 4
  %35 = icmp slt i32 %34, 97
  br label %36

36:                                               ; preds = %33, %30
  %37 = phi i1 [ false, %30 ], [ %35, %33 ]
  br label %38

38:                                               ; preds = %36, %27, %18
  %39 = phi i1 [ true, %27 ], [ true, %18 ], [ %37, %36 ]
  %40 = zext i1 %39 to i32
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %74

42:                                               ; preds = %38
  %43 = load i8*, i8** %5, align 8
  %44 = load i32, i32* %8, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %8, align 4
  %46 = sext i32 %44 to i64
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  store i8 91, i8* %47, align 1
  %48 = load i32, i32* %10, align 4
  %49 = and i32 %48, 240
  %50 = ashr i32 %49, 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = load i8*, i8** %5, align 8
  %55 = load i32, i32* %8, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %8, align 4
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds i8, i8* %54, i64 %57
  store i8 %53, i8* %58, align 1
  %59 = load i32, i32* %10, align 4
  %60 = and i32 %59, 15
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = load i8*, i8** %5, align 8
  %65 = load i32, i32* %8, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %8, align 4
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  store i8 %63, i8* %68, align 1
  %69 = load i8*, i8** %5, align 8
  %70 = load i32, i32* %8, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %8, align 4
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  store i8 93, i8* %73, align 1
  br label %82

74:                                               ; preds = %38
  %75 = load i32, i32* %10, align 4
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %5, align 8
  %78 = load i32, i32* %8, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %8, align 4
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i8, i8* %77, i64 %80
  store i8 %76, i8* %81, align 1
  br label %82

82:                                               ; preds = %74, %42
  br label %15, !llvm.loop !49

83:                                               ; preds = %15
  %84 = load i8*, i8** %6, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %91

86:                                               ; preds = %83
  %87 = load i8*, i8** %5, align 8
  %88 = load i32, i32* %8, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  store i8 0, i8* %90, align 1
  br label %132

91:                                               ; preds = %83
  store i32 0, i32* %11, align 4
  %92 = load i8*, i8** %5, align 8
  %93 = load i32, i32* %8, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %8, align 4
  %95 = sext i32 %93 to i64
  %96 = getelementptr inbounds i8, i8* %92, i64 %95
  store i8 58, i8* %96, align 1
  %97 = load i8*, i8** %5, align 8
  %98 = load i32, i32* %8, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %8, align 4
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds i8, i8* %97, i64 %100
  store i8 32, i8* %101, align 1
  br label %102

102:                                              ; preds = %115, %91
  %103 = load i32, i32* %11, align 4
  %104 = icmp slt i32 %103, 195
  br i1 %104, label %105, label %113

105:                                              ; preds = %102
  %106 = load i8*, i8** %6, align 8
  %107 = load i32, i32* %11, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i32
  %112 = icmp ne i32 %111, 0
  br label %113

113:                                              ; preds = %105, %102
  %114 = phi i1 [ false, %102 ], [ %112, %105 ]
  br i1 %114, label %115, label %127

115:                                              ; preds = %113
  %116 = load i8*, i8** %6, align 8
  %117 = load i32, i32* %11, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %11, align 4
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds i8, i8* %116, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = load i8*, i8** %5, align 8
  %123 = load i32, i32* %8, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %8, align 4
  %125 = sext i32 %123 to i64
  %126 = getelementptr inbounds i8, i8* %122, i64 %125
  store i8 %121, i8* %126, align 1
  br label %102, !llvm.loop !50

127:                                              ; preds = %113
  %128 = load i8*, i8** %5, align 8
  %129 = load i32, i32* %8, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %128, i64 %130
  store i8 0, i8* %131, align 1
  br label %132

132:                                              ; preds = %127, %86
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_app_warning(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 16
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2097152
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = load i8*, i8** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %11, i8* noundef %12)
  br label %16

13:                                               ; preds = %2
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = load i8*, i8** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %14, i8* noundef %15) #13
  unreachable

16:                                               ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_app_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 16
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 4194304
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = load i8*, i8** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %11, i8* noundef %12)
  br label %16

13:                                               ; preds = %2
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = load i8*, i8** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %14, i8* noundef %15) #13
  unreachable

16:                                               ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_chunk_benign_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 16
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1048576
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = load i8*, i8** %4, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %11, i8* noundef %12)
  br label %16

13:                                               ; preds = %2
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = load i8*, i8** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %14, i8* noundef %15) #13
  unreachable

16:                                               ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_chunk_report(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 15
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 32768
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %3
  %13 = load i32, i32* %6, align 4
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %17 = load i8*, i8** %5, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %16, i8* noundef %17)
  br label %21

18:                                               ; preds = %12
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = load i8*, i8** %5, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %19, i8* noundef %20)
  br label %21

21:                                               ; preds = %18, %15
  br label %39

22:                                               ; preds = %3
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 15
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 32768
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %22
  %29 = load i32, i32* %6, align 4
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = load i8*, i8** %5, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %32, i8* noundef %33)
  br label %37

34:                                               ; preds = %28
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %36 = load i8*, i8** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %35, i8* noundef %36)
  br label %37

37:                                               ; preds = %34, %31
  br label %38

38:                                               ; preds = %37, %22
  br label %39

39:                                               ; preds = %38, %21
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define void @png_fixed_error(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #9 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [220 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = getelementptr inbounds [220 x i8], [220 x i8]* %6, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i64 0, i64 0), i64 24, i1 false)
  store i32 0, i32* %5, align 4
  %8 = load i8*, i8** %4, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %37

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %24, %10
  %12 = load i32, i32* %5, align 4
  %13 = icmp ult i32 %12, 195
  br i1 %13, label %14, label %22

14:                                               ; preds = %11
  %15 = load i8*, i8** %4, align 8
  %16 = load i32, i32* %5, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br label %22

22:                                               ; preds = %14, %11
  %23 = phi i1 [ false, %11 ], [ %21, %14 ]
  br i1 %23, label %24, label %36

24:                                               ; preds = %22
  %25 = load i8*, i8** %4, align 8
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = load i32, i32* %5, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 24, %31
  %33 = getelementptr inbounds [220 x i8], [220 x i8]* %6, i64 0, i64 %32
  store i8 %29, i8* %33, align 1
  %34 = load i32, i32* %5, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %5, align 4
  br label %11, !llvm.loop !51

36:                                               ; preds = %22
  br label %37

37:                                               ; preds = %36, %2
  %38 = load i32, i32* %5, align 4
  %39 = zext i32 %38 to i64
  %40 = add i64 24, %39
  %41 = getelementptr inbounds [220 x i8], [220 x i8]* %6, i64 0, i64 %40
  store i8 0, i8* %41, align 1
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %43 = getelementptr inbounds [220 x i8], [220 x i8]* %6, i64 0, i64 0
  call void @png_error(%struct.png_struct_def* noundef %42, i8* noundef %43) #13
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define [1 x %struct.__jmp_buf_tag]* @png_set_longjmp_fn(%struct.png_struct_def* noalias noundef %0, void (%struct.__jmp_buf_tag*, i32)* noundef %1, i64 noundef %2) #0 {
  %4 = alloca [1 x %struct.__jmp_buf_tag]*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca void (%struct.__jmp_buf_tag*, i32)*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store void (%struct.__jmp_buf_tag*, i32)* %1, void (%struct.__jmp_buf_tag*, i32)** %6, align 8
  store i64 %2, i64* %7, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  store [1 x %struct.__jmp_buf_tag]* null, [1 x %struct.__jmp_buf_tag]** %4, align 8
  br label %74

12:                                               ; preds = %3
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 2
  %15 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %14, align 8
  %16 = icmp eq [1 x %struct.__jmp_buf_tag]* %15, null
  br i1 %16, label %17, label %44

17:                                               ; preds = %12
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 3
  store i64 0, i64* %19, align 8
  %20 = load i64, i64* %7, align 8
  %21 = icmp ule i64 %20, 200
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 0
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 2
  store [1 x %struct.__jmp_buf_tag]* %24, [1 x %struct.__jmp_buf_tag]** %26, align 8
  br label %43

27:                                               ; preds = %17
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %29 = load i64, i64* %7, align 8
  %30 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %28, i64 noundef %29)
  %31 = bitcast i8* %30 to [1 x %struct.__jmp_buf_tag]*
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 2
  store [1 x %struct.__jmp_buf_tag]* %31, [1 x %struct.__jmp_buf_tag]** %33, align 8
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 2
  %36 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %35, align 8
  %37 = icmp eq [1 x %struct.__jmp_buf_tag]* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %27
  store [1 x %struct.__jmp_buf_tag]* null, [1 x %struct.__jmp_buf_tag]** %4, align 8
  br label %74

39:                                               ; preds = %27
  %40 = load i64, i64* %7, align 8
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 3
  store i64 %40, i64* %42, align 8
  br label %43

43:                                               ; preds = %39, %22
  br label %67

44:                                               ; preds = %12
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 3
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %8, align 8
  %48 = load i64, i64* %8, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %44
  store i64 200, i64* %8, align 8
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 2
  %53 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %52, align 8
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 0
  %56 = icmp ne [1 x %struct.__jmp_buf_tag]* %53, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %58, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.80, i64 0, i64 0)) #13
  unreachable

59:                                               ; preds = %50
  br label %60

60:                                               ; preds = %59, %44
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* %7, align 8
  %63 = icmp ne i64 %61, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_warning(%struct.png_struct_def* noundef %65, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.81, i64 0, i64 0))
  store [1 x %struct.__jmp_buf_tag]* null, [1 x %struct.__jmp_buf_tag]** %4, align 8
  br label %74

66:                                               ; preds = %60
  br label %67

67:                                               ; preds = %66, %43
  %68 = load void (%struct.__jmp_buf_tag*, i32)*, void (%struct.__jmp_buf_tag*, i32)** %6, align 8
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* %68, void (%struct.__jmp_buf_tag*, i32)** %70, align 8
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 2
  %73 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %72, align 8
  store [1 x %struct.__jmp_buf_tag]* %73, [1 x %struct.__jmp_buf_tag]** %4, align 8
  br label %74

74:                                               ; preds = %67, %64, %38, %11
  %75 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %4, align 8
  ret [1 x %struct.__jmp_buf_tag]* %75
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_free_jmpbuf(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca [1 x %struct.__jmp_buf_tag]*, align 8
  %4 = alloca [1 x %struct.__jmp_buf_tag], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %6 = icmp ne %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %46

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 2
  %10 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %9, align 8
  store [1 x %struct.__jmp_buf_tag]* %10, [1 x %struct.__jmp_buf_tag]** %3, align 8
  %11 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %3, align 8
  %12 = icmp ne [1 x %struct.__jmp_buf_tag]* %11, null
  br i1 %12, label %13, label %39

13:                                               ; preds = %7
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 0
  br i1 %17, label %18, label %39

18:                                               ; preds = %13
  %19 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %3, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 0
  %22 = icmp ne [1 x %struct.__jmp_buf_tag]* %19, %21
  br i1 %22, label %23, label %38

23:                                               ; preds = %18
  %24 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %4, i64 0, i64 0
  %25 = call i32 @_setjmp(%struct.__jmp_buf_tag* noundef %24) #15
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %23
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 2
  store [1 x %struct.__jmp_buf_tag]* %4, [1 x %struct.__jmp_buf_tag]** %29, align 8
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 3
  store i64 0, i64* %31, align 8
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* @longjmp, void (%struct.__jmp_buf_tag*, i32)** %33, align 8
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %35 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %3, align 8
  %36 = bitcast [1 x %struct.__jmp_buf_tag]* %35 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %34, i8* noundef %36)
  br label %37

37:                                               ; preds = %27, %23
  br label %38

38:                                               ; preds = %37, %18
  br label %39

39:                                               ; preds = %38, %13, %7
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 3
  store i64 0, i64* %41, align 8
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 2
  store [1 x %struct.__jmp_buf_tag]* null, [1 x %struct.__jmp_buf_tag]** %43, align 8
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* null, void (%struct.__jmp_buf_tag*, i32)** %45, align 8
  br label %46

46:                                               ; preds = %39, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_error_fn(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*)* noundef %2, void (%struct.png_struct_def*, i8*)* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %8 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i8* %1, i8** %6, align 8
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %7, align 8
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %8, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  br label %22

12:                                               ; preds = %4
  %13 = load i8*, i8** %6, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 6
  store i8* %13, i8** %15, align 8
  %16 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %7, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 4
  store void (%struct.png_struct_def*, i8*)* %16, void (%struct.png_struct_def*, i8*)** %18, align 8
  %19 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %8, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 5
  store void (%struct.png_struct_def*, i8*)* %19, void (%struct.png_struct_def*, i8*)** %21, align 8
  br label %22

22:                                               ; preds = %12, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_error_ptr(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 6
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define void @png_safe_error(%struct.png_struct_def* noundef %0, i8* noundef %1) #9 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_image*, align 8
  %7 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  store %struct.png_struct_def* %8, %struct.png_struct_def** %5, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.png_image*
  store %struct.png_image* %12, %struct.png_image** %6, align 8
  %13 = load %struct.png_image*, %struct.png_image** %6, align 8
  %14 = icmp ne %struct.png_image* %13, null
  br i1 %14, label %15, label %54

15:                                               ; preds = %2
  %16 = load %struct.png_image*, %struct.png_image** %6, align 8
  %17 = getelementptr inbounds %struct.png_image, %struct.png_image* %16, i32 0, i32 8
  %18 = getelementptr inbounds [64 x i8], [64 x i8]* %17, i64 0, i64 0
  %19 = load i8*, i8** %4, align 8
  %20 = call i64 @png_safecat(i8* noundef %18, i64 noundef 64, i64 noundef 0, i8* noundef %19)
  %21 = load %struct.png_image*, %struct.png_image** %6, align 8
  %22 = getelementptr inbounds %struct.png_image, %struct.png_image* %21, i32 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = or i32 %23, 2
  store i32 %24, i32* %22, align 8
  %25 = load %struct.png_image*, %struct.png_image** %6, align 8
  %26 = getelementptr inbounds %struct.png_image, %struct.png_image* %25, i32 0, i32 0
  %27 = load %struct.png_control*, %struct.png_control** %26, align 8
  %28 = icmp ne %struct.png_control* %27, null
  br i1 %28, label %29, label %43

29:                                               ; preds = %15
  %30 = load %struct.png_image*, %struct.png_image** %6, align 8
  %31 = getelementptr inbounds %struct.png_image, %struct.png_image* %30, i32 0, i32 0
  %32 = load %struct.png_control*, %struct.png_control** %31, align 8
  %33 = getelementptr inbounds %struct.png_control, %struct.png_control* %32, i32 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ne i8* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %29
  %37 = load %struct.png_image*, %struct.png_image** %6, align 8
  %38 = getelementptr inbounds %struct.png_image, %struct.png_image* %37, i32 0, i32 0
  %39 = load %struct.png_control*, %struct.png_control** %38, align 8
  %40 = getelementptr inbounds %struct.png_control, %struct.png_control* %39, i32 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast i8* %41 to %struct.__jmp_buf_tag*
  call void @longjmp(%struct.__jmp_buf_tag* noundef %42, i32 noundef 1) #17
  unreachable

43:                                               ; preds = %29, %15
  %44 = load %struct.png_image*, %struct.png_image** %6, align 8
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %44, i32 0, i32 8
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* %45, i64 0, i64 0
  %47 = call i64 @png_safecat(i8* noundef %46, i64 noundef 64, i64 noundef 0, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.84, i64 0, i64 0))
  store i64 %47, i64* %7, align 8
  %48 = load %struct.png_image*, %struct.png_image** %6, align 8
  %49 = getelementptr inbounds %struct.png_image, %struct.png_image* %48, i32 0, i32 8
  %50 = getelementptr inbounds [64 x i8], [64 x i8]* %49, i64 0, i64 0
  %51 = load i64, i64* %7, align 8
  %52 = load i8*, i8** %4, align 8
  %53 = call i64 @png_safecat(i8* noundef %50, i64 noundef 64, i64 noundef %51, i8* noundef %52)
  br label %54

54:                                               ; preds = %43, %2
  call void @abort() #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_safe_warning(%struct.png_struct_def* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_image*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  store %struct.png_struct_def* %7, %struct.png_struct_def** %5, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 6
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i8* %10 to %struct.png_image*
  store %struct.png_image* %11, %struct.png_image** %6, align 8
  %12 = load %struct.png_image*, %struct.png_image** %6, align 8
  %13 = getelementptr inbounds %struct.png_image, %struct.png_image* %12, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %2
  %17 = load %struct.png_image*, %struct.png_image** %6, align 8
  %18 = getelementptr inbounds %struct.png_image, %struct.png_image* %17, i32 0, i32 8
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %18, i64 0, i64 0
  %20 = load i8*, i8** %4, align 8
  %21 = call i64 @png_safecat(i8* noundef %19, i64 noundef 64, i64 noundef 0, i8* noundef %20)
  %22 = load %struct.png_image*, %struct.png_image** %6, align 8
  %23 = getelementptr inbounds %struct.png_image, %struct.png_image* %22, i32 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = or i32 %24, 1
  store i32 %25, i32* %23, align 8
  br label %26

26:                                               ; preds = %16, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_safe_execute(%struct.png_image* noundef %0, i32 (i8*)* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca i32 (i8*)*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.png_image*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca [1 x %struct.__jmp_buf_tag], align 16
  store %struct.png_image* %0, %struct.png_image** %4, align 8
  store i32 (i8*)* %1, i32 (i8*)** %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = load %struct.png_image*, %struct.png_image** %4, align 8
  store volatile %struct.png_image* %11, %struct.png_image** %7, align 8
  %12 = load volatile %struct.png_image*, %struct.png_image** %7, align 8
  %13 = getelementptr inbounds %struct.png_image, %struct.png_image* %12, i32 0, i32 0
  %14 = load %struct.png_control*, %struct.png_control** %13, align 8
  %15 = getelementptr inbounds %struct.png_control, %struct.png_control* %14, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  store volatile i8* %16, i8** %9, align 8
  %17 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %10, i64 0, i64 0
  %18 = call i32 @_setjmp(%struct.__jmp_buf_tag* noundef %17) #15
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i32
  store volatile i32 %20, i32* %8, align 4
  %21 = load volatile i32, i32* %8, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %3
  %24 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %10, i64 0, i64 0
  %25 = bitcast %struct.__jmp_buf_tag* %24 to i8*
  %26 = load volatile %struct.png_image*, %struct.png_image** %7, align 8
  %27 = getelementptr inbounds %struct.png_image, %struct.png_image* %26, i32 0, i32 0
  %28 = load %struct.png_control*, %struct.png_control** %27, align 8
  %29 = getelementptr inbounds %struct.png_control, %struct.png_control* %28, i32 0, i32 2
  store i8* %25, i8** %29, align 8
  %30 = load i32 (i8*)*, i32 (i8*)** %5, align 8
  %31 = load i8*, i8** %6, align 8
  %32 = call i32 %30(i8* noundef %31)
  store volatile i32 %32, i32* %8, align 4
  br label %33

33:                                               ; preds = %23, %3
  %34 = load volatile i8*, i8** %9, align 8
  %35 = load volatile %struct.png_image*, %struct.png_image** %7, align 8
  %36 = getelementptr inbounds %struct.png_image, %struct.png_image* %35, i32 0, i32 0
  %37 = load %struct.png_control*, %struct.png_control** %36, align 8
  %38 = getelementptr inbounds %struct.png_control, %struct.png_control* %37, i32 0, i32 2
  store i8* %34, i8** %38, align 8
  %39 = load volatile i32, i32* %8, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = load volatile %struct.png_image*, %struct.png_image** %7, align 8
  call void @png_image_free(%struct.png_image* noundef %42)
  br label %43

43:                                               ; preds = %41, %33
  %44 = load volatile i32, i32* %8, align 4
  ret i32 %44
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_valid(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %29

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  %14 = load i32, i32* %7, align 4
  %15 = icmp eq i32 %14, 16
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 55
  %19 = load i16, i16* %18, align 8
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 0, i32* %4, align 4
  br label %30

23:                                               ; preds = %16, %13
  %24 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = load i32, i32* %7, align 4
  %28 = and i32 %26, %27
  store i32 %28, i32* %4, align 4
  br label %30

29:                                               ; preds = %10, %3
  store i32 0, i32* %4, align 4
  br label %30

30:                                               ; preds = %29, %23, %22
  %31 = load i32, i32* %4, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @png_get_rowbytes(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %3, align 8
  br label %16

15:                                               ; preds = %8, %2
  store i64 0, i64* %3, align 8
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i64, i64* %3, align 8
  ret i64 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define i8** @png_get_rows(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 53
  %14 = load i8**, i8*** %13, align 8
  store i8** %14, i8*** %3, align 8
  br label %16

15:                                               ; preds = %8, %2
  store i8** null, i8*** %3, align 8
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8**, i8*** %3, align 8
  ret i8** %17
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_image_width(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %3, align 4
  br label %16

15:                                               ; preds = %8, %2
  store i32 0, i32* %3, align 4
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_image_height(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %3, align 4
  br label %16

15:                                               ; preds = %8, %2
  store i32 0, i32* %3, align 4
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_bit_depth(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 7
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 1
  br label %16

15:                                               ; preds = %8, %2
  store i8 0, i8* %3, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8, i8* %3, align 1
  ret i8 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_color_type(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 8
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %3, align 1
  br label %16

15:                                               ; preds = %8, %2
  store i8 0, i8* %3, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8, i8* %3, align 1
  ret i8 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_filter_type(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 10
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %3, align 1
  br label %16

15:                                               ; preds = %8, %2
  store i8 0, i8* %3, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8, i8* %3, align 1
  ret i8 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_interlace_type(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 11
  %14 = load i8, i8* %13, align 8
  store i8 %14, i8* %3, align 1
  br label %16

15:                                               ; preds = %8, %2
  store i8 0, i8* %3, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8, i8* %3, align 1
  ret i8 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_compression_type(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 9
  %14 = load i8, i8* %13, align 2
  store i8 %14, i8* %3, align 1
  br label %16

15:                                               ; preds = %8, %2
  store i8 0, i8* %3, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8, i8* %3, align 1
  ret i8 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_x_pixels_per_meter(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 128
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 33
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 31
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %3, align 4
  br label %29

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23
  %30 = load i32, i32* %3, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_y_pixels_per_meter(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 128
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 33
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 32
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %3, align 4
  br label %29

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23
  %30 = load i32, i32* %3, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_pixels_per_meter(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %36

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %36

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 128
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %36

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 33
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %35

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 31
  %26 = load i32, i32* %25, align 8
  %27 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 32
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %26, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %23
  %32 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %32, i32 0, i32 31
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %3, align 4
  br label %37

35:                                               ; preds = %23, %17
  br label %36

36:                                               ; preds = %35, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %37

37:                                               ; preds = %36, %31
  %38 = load i32, i32* %3, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define float @png_get_pixel_aspect_ratio(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca float, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %33

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 128
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 31
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %32

22:                                               ; preds = %17
  %23 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 32
  %25 = load i32, i32* %24, align 4
  %26 = uitofp i32 %25 to float
  %27 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 31
  %29 = load i32, i32* %28, align 8
  %30 = uitofp i32 %29 to float
  %31 = fdiv float %26, %30
  store float %31, float* %3, align 4
  br label %34

32:                                               ; preds = %17
  br label %33

33:                                               ; preds = %32, %11, %8, %2
  store float 0.000000e+00, float* %3, align 4
  br label %34

34:                                               ; preds = %33, %22
  %35 = load float, float* %3, align 4
  ret float %35
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_pixel_aspect_ratio_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp ne %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %50

9:                                                ; preds = %2
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp ne %struct.png_info_def* %10, null
  br i1 %11, label %12, label %50

12:                                               ; preds = %9
  %13 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %14 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %13, i32 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 128
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %50

18:                                               ; preds = %12
  %19 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 31
  %21 = load i32, i32* %20, align 8
  %22 = icmp ugt i32 %21, 0
  br i1 %22, label %23, label %50

23:                                               ; preds = %18
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 32
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, 0
  br i1 %27, label %28, label %50

28:                                               ; preds = %23
  %29 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 31
  %31 = load i32, i32* %30, align 8
  %32 = icmp ule i32 %31, 2147483647
  br i1 %32, label %33, label %50

33:                                               ; preds = %28
  %34 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 32
  %36 = load i32, i32* %35, align 4
  %37 = icmp ule i32 %36, 2147483647
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 32
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %43 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %42, i32 0, i32 31
  %44 = load i32, i32* %43, align 8
  %45 = call i32 @png_muldiv(i32* noundef %6, i32 noundef %41, i32 noundef 100000, i32 noundef %44)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = load i32, i32* %6, align 4
  store i32 %48, i32* %3, align 4
  br label %51

49:                                               ; preds = %38
  br label %50

50:                                               ; preds = %49, %33, %28, %23, %18, %12, %9, %2
  store i32 0, i32* %3, align 4
  br label %51

51:                                               ; preds = %50, %47
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_x_offset_microns(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 30
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 28
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %3, align 4
  br label %29

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23
  %30 = load i32, i32* %3, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_y_offset_microns(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 30
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 29
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %3, align 4
  br label %29

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23
  %30 = load i32, i32* %3, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_x_offset_pixels(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 30
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 28
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %3, align 4
  br label %29

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23
  %30 = load i32, i32* %3, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_y_offset_pixels(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %28

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %11
  %18 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 30
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 29
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %3, align 4
  br label %29

27:                                               ; preds = %17
  br label %28

28:                                               ; preds = %27, %11, %8, %2
  store i32 0, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23
  %30 = load i32, i32* %3, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_pixels_per_inch(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %7 = call i32 @png_get_pixels_per_meter(%struct.png_struct_def* noundef %5, %struct.png_info_def* noundef %6)
  %8 = call i32 @ppi_from_ppm(i32 noundef %7)
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @ppi_from_ppm(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp ule i32 %5, 2147483647
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load i32, i32* %3, align 4
  %9 = call i32 @png_muldiv(i32* noundef %4, i32 noundef %8, i32 noundef 127, i32 noundef 5000)
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = load i32, i32* %4, align 4
  store i32 %12, i32* %2, align 4
  br label %14

13:                                               ; preds = %7, %1
  store i32 0, i32* %2, align 4
  br label %14

14:                                               ; preds = %13, %11
  %15 = load i32, i32* %2, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_x_pixels_per_inch(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %7 = call i32 @png_get_x_pixels_per_meter(%struct.png_struct_def* noundef %5, %struct.png_info_def* noundef %6)
  %8 = call i32 @ppi_from_ppm(i32 noundef %7)
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_y_pixels_per_inch(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %7 = call i32 @png_get_y_pixels_per_meter(%struct.png_struct_def* noundef %5, %struct.png_info_def* noundef %6)
  %8 = call i32 @ppi_from_ppm(i32 noundef %7)
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_x_offset_inches_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %8 = call i32 @png_get_x_offset_microns(%struct.png_struct_def* noundef %6, %struct.png_info_def* noundef %7)
  %9 = call i32 @png_fixed_inches_from_microns(%struct.png_struct_def* noundef %5, i32 noundef %8)
  ret i32 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_fixed_inches_from_microns(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = call i32 @png_muldiv_warn(%struct.png_struct_def* noundef %5, i32 noundef %6, i32 noundef 500, i32 noundef 127)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_y_offset_inches_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %8 = call i32 @png_get_y_offset_microns(%struct.png_struct_def* noundef %6, %struct.png_info_def* noundef %7)
  %9 = call i32 @png_fixed_inches_from_microns(%struct.png_struct_def* noundef %5, i32 noundef %8)
  ret i32 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define float @png_get_x_offset_inches(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %7 = call i32 @png_get_x_offset_microns(%struct.png_struct_def* noundef %5, %struct.png_info_def* noundef %6)
  %8 = sitofp i32 %7 to double
  %9 = fmul double %8, 3.937000e-05
  %10 = fptrunc double %9 to float
  ret float %10
}

; Function Attrs: noinline nounwind optnone uwtable
define float @png_get_y_offset_inches(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %7 = call i32 @png_get_y_offset_microns(%struct.png_struct_def* noundef %5, %struct.png_info_def* noundef %6)
  %8 = sitofp i32 %7 to double
  %9 = fmul double %8, 3.937000e-05
  %10 = fptrunc double %9 to float
  ret float %10
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_pHYs_dpi(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  store i32 0, i32* %11, align 4
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %80

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %80

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 128
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %80

23:                                               ; preds = %17
  %24 = load i32*, i32** %8, align 8
  %25 = icmp ne i32* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %23
  %27 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 31
  %29 = load i32, i32* %28, align 8
  %30 = load i32*, i32** %8, align 8
  store i32 %29, i32* %30, align 4
  %31 = load i32, i32* %11, align 4
  %32 = or i32 %31, 128
  store i32 %32, i32* %11, align 4
  br label %33

33:                                               ; preds = %26, %23
  %34 = load i32*, i32** %9, align 8
  %35 = icmp ne i32* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %33
  %37 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 32
  %39 = load i32, i32* %38, align 4
  %40 = load i32*, i32** %9, align 8
  store i32 %39, i32* %40, align 4
  %41 = load i32, i32* %11, align 4
  %42 = or i32 %41, 128
  store i32 %42, i32* %11, align 4
  br label %43

43:                                               ; preds = %36, %33
  %44 = load i32*, i32** %10, align 8
  %45 = icmp ne i32* %44, null
  br i1 %45, label %46, label %79

46:                                               ; preds = %43
  %47 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %48 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %47, i32 0, i32 33
  %49 = load i8, i8* %48, align 8
  %50 = zext i8 %49 to i32
  %51 = load i32*, i32** %10, align 8
  store i32 %50, i32* %51, align 4
  %52 = load i32, i32* %11, align 4
  %53 = or i32 %52, 128
  store i32 %53, i32* %11, align 4
  %54 = load i32*, i32** %10, align 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %78

57:                                               ; preds = %46
  %58 = load i32*, i32** %8, align 8
  %59 = icmp ne i32* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %57
  %61 = load i32*, i32** %8, align 8
  %62 = load i32, i32* %61, align 4
  %63 = uitofp i32 %62 to double
  %64 = call double @llvm.fmuladd.f64(double %63, double 2.540000e-02, double 5.000000e-01)
  %65 = fptoui double %64 to i32
  %66 = load i32*, i32** %8, align 8
  store i32 %65, i32* %66, align 4
  br label %67

67:                                               ; preds = %60, %57
  %68 = load i32*, i32** %9, align 8
  %69 = icmp ne i32* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = load i32*, i32** %9, align 8
  %72 = load i32, i32* %71, align 4
  %73 = uitofp i32 %72 to double
  %74 = call double @llvm.fmuladd.f64(double %73, double 2.540000e-02, double 5.000000e-01)
  %75 = fptoui double %74 to i32
  %76 = load i32*, i32** %9, align 8
  store i32 %75, i32* %76, align 4
  br label %77

77:                                               ; preds = %70, %67
  br label %78

78:                                               ; preds = %77, %46
  br label %79

79:                                               ; preds = %78, %43
  br label %80

80:                                               ; preds = %79, %17, %14, %5
  %81 = load i32, i32* %11, align 4
  ret i32 %81
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_channels(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 12
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %3, align 1
  br label %16

15:                                               ; preds = %8, %2
  store i8 0, i8* %3, align 1
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8, i8* %3, align 1
  ret i8 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_signature(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 15
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %13, i64 0, i64 0
  store i8* %14, i8** %3, align 8
  br label %16

15:                                               ; preds = %8, %2
  store i8* null, i8** %3, align 8
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i8*, i8** %3, align 8
  ret i8* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_bKGD(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_color_16_struct** noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_color_16_struct**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_color_16_struct** %2, %struct.png_color_16_struct*** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %26

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 32
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = load %struct.png_color_16_struct**, %struct.png_color_16_struct*** %7, align 8
  %21 = icmp ne %struct.png_color_16_struct** %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 27
  %25 = load %struct.png_color_16_struct**, %struct.png_color_16_struct*** %7, align 8
  store %struct.png_color_16_struct* %24, %struct.png_color_16_struct** %25, align 8
  store i32 32, i32* %4, align 4
  br label %27

26:                                               ; preds = %19, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %27

27:                                               ; preds = %26, %22
  %28 = load i32, i32* %4, align 4
  ret i32 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_cHRM(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, double* noundef %2, double* noundef %3, double* noundef %4, double* noundef %5, double* noundef %6, double* noundef %7, double* noundef %8, double* noundef %9) #0 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.png_struct_def*, align 8
  %13 = alloca %struct.png_info_def*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca double*, align 8
  %17 = alloca double*, align 8
  %18 = alloca double*, align 8
  %19 = alloca double*, align 8
  %20 = alloca double*, align 8
  %21 = alloca double*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %12, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %13, align 8
  store double* %2, double** %14, align 8
  store double* %3, double** %15, align 8
  store double* %4, double** %16, align 8
  store double* %5, double** %17, align 8
  store double* %6, double** %18, align 8
  store double* %7, double** %19, align 8
  store double* %8, double** %20, align 8
  store double* %9, double** %21, align 8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %23 = icmp ne %struct.png_struct_def* %22, null
  br i1 %23, label %24, label %132

24:                                               ; preds = %10
  %25 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %26 = icmp ne %struct.png_info_def* %25, null
  br i1 %26, label %27, label %132

27:                                               ; preds = %24
  %28 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 16
  %30 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %29, i32 0, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %132

35:                                               ; preds = %27
  %36 = load double*, double** %14, align 8
  %37 = icmp ne double* %36, null
  br i1 %37, label %38, label %47

38:                                               ; preds = %35
  %39 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 16
  %41 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %40, i32 0, i32 1
  %42 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to double
  %45 = fmul double 1.000000e-05, %44
  %46 = load double*, double** %14, align 8
  store double %45, double* %46, align 8
  br label %47

47:                                               ; preds = %38, %35
  %48 = load double*, double** %15, align 8
  %49 = icmp ne double* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %47
  %51 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 16
  %53 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %52, i32 0, i32 1
  %54 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %53, i32 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = sitofp i32 %55 to double
  %57 = fmul double 1.000000e-05, %56
  %58 = load double*, double** %15, align 8
  store double %57, double* %58, align 8
  br label %59

59:                                               ; preds = %50, %47
  %60 = load double*, double** %16, align 8
  %61 = icmp ne double* %60, null
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %64 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %63, i32 0, i32 16
  %65 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %64, i32 0, i32 1
  %66 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sitofp i32 %67 to double
  %69 = fmul double 1.000000e-05, %68
  %70 = load double*, double** %16, align 8
  store double %69, double* %70, align 8
  br label %71

71:                                               ; preds = %62, %59
  %72 = load double*, double** %17, align 8
  %73 = icmp ne double* %72, null
  br i1 %73, label %74, label %83

74:                                               ; preds = %71
  %75 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %76 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %75, i32 0, i32 16
  %77 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %76, i32 0, i32 1
  %78 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sitofp i32 %79 to double
  %81 = fmul double 1.000000e-05, %80
  %82 = load double*, double** %17, align 8
  store double %81, double* %82, align 8
  br label %83

83:                                               ; preds = %74, %71
  %84 = load double*, double** %18, align 8
  %85 = icmp ne double* %84, null
  br i1 %85, label %86, label %95

86:                                               ; preds = %83
  %87 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %88 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %87, i32 0, i32 16
  %89 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %88, i32 0, i32 1
  %90 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %89, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = sitofp i32 %91 to double
  %93 = fmul double 1.000000e-05, %92
  %94 = load double*, double** %18, align 8
  store double %93, double* %94, align 8
  br label %95

95:                                               ; preds = %86, %83
  %96 = load double*, double** %19, align 8
  %97 = icmp ne double* %96, null
  br i1 %97, label %98, label %107

98:                                               ; preds = %95
  %99 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %100 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %99, i32 0, i32 16
  %101 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %101, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = sitofp i32 %103 to double
  %105 = fmul double 1.000000e-05, %104
  %106 = load double*, double** %19, align 8
  store double %105, double* %106, align 8
  br label %107

107:                                              ; preds = %98, %95
  %108 = load double*, double** %20, align 8
  %109 = icmp ne double* %108, null
  br i1 %109, label %110, label %119

110:                                              ; preds = %107
  %111 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %112 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %111, i32 0, i32 16
  %113 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %112, i32 0, i32 1
  %114 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %113, i32 0, i32 4
  %115 = load i32, i32* %114, align 4
  %116 = sitofp i32 %115 to double
  %117 = fmul double 1.000000e-05, %116
  %118 = load double*, double** %20, align 8
  store double %117, double* %118, align 8
  br label %119

119:                                              ; preds = %110, %107
  %120 = load double*, double** %21, align 8
  %121 = icmp ne double* %120, null
  br i1 %121, label %122, label %131

122:                                              ; preds = %119
  %123 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %124 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %123, i32 0, i32 16
  %125 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %124, i32 0, i32 1
  %126 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %125, i32 0, i32 5
  %127 = load i32, i32* %126, align 4
  %128 = sitofp i32 %127 to double
  %129 = fmul double 1.000000e-05, %128
  %130 = load double*, double** %21, align 8
  store double %129, double* %130, align 8
  br label %131

131:                                              ; preds = %122, %119
  store i32 4, i32* %11, align 4
  br label %133

132:                                              ; preds = %27, %24, %10
  store i32 0, i32* %11, align 4
  br label %133

133:                                              ; preds = %132, %131
  %134 = load i32, i32* %11, align 4
  ret i32 %134
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_cHRM_XYZ(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, double* noundef %2, double* noundef %3, double* noundef %4, double* noundef %5, double* noundef %6, double* noundef %7, double* noundef %8, double* noundef %9, double* noundef %10) #0 {
  %12 = alloca i32, align 4
  %13 = alloca %struct.png_struct_def*, align 8
  %14 = alloca %struct.png_info_def*, align 8
  %15 = alloca double*, align 8
  %16 = alloca double*, align 8
  %17 = alloca double*, align 8
  %18 = alloca double*, align 8
  %19 = alloca double*, align 8
  %20 = alloca double*, align 8
  %21 = alloca double*, align 8
  %22 = alloca double*, align 8
  %23 = alloca double*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %13, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %14, align 8
  store double* %2, double** %15, align 8
  store double* %3, double** %16, align 8
  store double* %4, double** %17, align 8
  store double* %5, double** %18, align 8
  store double* %6, double** %19, align 8
  store double* %7, double** %20, align 8
  store double* %8, double** %21, align 8
  store double* %9, double** %22, align 8
  store double* %10, double** %23, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %25 = icmp ne %struct.png_struct_def* %24, null
  br i1 %25, label %26, label %146

26:                                               ; preds = %11
  %27 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %28 = icmp ne %struct.png_info_def* %27, null
  br i1 %28, label %29, label %146

29:                                               ; preds = %26
  %30 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 16
  %32 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %31, i32 0, i32 4
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 2
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %146

37:                                               ; preds = %29
  %38 = load double*, double** %15, align 8
  %39 = icmp ne double* %38, null
  br i1 %39, label %40, label %49

40:                                               ; preds = %37
  %41 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 16
  %43 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %42, i32 0, i32 2
  %44 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sitofp i32 %45 to double
  %47 = fmul double 1.000000e-05, %46
  %48 = load double*, double** %15, align 8
  store double %47, double* %48, align 8
  br label %49

49:                                               ; preds = %40, %37
  %50 = load double*, double** %16, align 8
  %51 = icmp ne double* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %49
  %53 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 16
  %55 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %54, i32 0, i32 2
  %56 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to double
  %59 = fmul double 1.000000e-05, %58
  %60 = load double*, double** %16, align 8
  store double %59, double* %60, align 8
  br label %61

61:                                               ; preds = %52, %49
  %62 = load double*, double** %17, align 8
  %63 = icmp ne double* %62, null
  br i1 %63, label %64, label %73

64:                                               ; preds = %61
  %65 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %66 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %65, i32 0, i32 16
  %67 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %66, i32 0, i32 2
  %68 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %67, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to double
  %71 = fmul double 1.000000e-05, %70
  %72 = load double*, double** %17, align 8
  store double %71, double* %72, align 8
  br label %73

73:                                               ; preds = %64, %61
  %74 = load double*, double** %18, align 8
  %75 = icmp ne double* %74, null
  br i1 %75, label %76, label %85

76:                                               ; preds = %73
  %77 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %78 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %77, i32 0, i32 16
  %79 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %78, i32 0, i32 2
  %80 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %79, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to double
  %83 = fmul double 1.000000e-05, %82
  %84 = load double*, double** %18, align 8
  store double %83, double* %84, align 8
  br label %85

85:                                               ; preds = %76, %73
  %86 = load double*, double** %19, align 8
  %87 = icmp ne double* %86, null
  br i1 %87, label %88, label %97

88:                                               ; preds = %85
  %89 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %90 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %89, i32 0, i32 16
  %91 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %90, i32 0, i32 2
  %92 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %91, i32 0, i32 4
  %93 = load i32, i32* %92, align 4
  %94 = sitofp i32 %93 to double
  %95 = fmul double 1.000000e-05, %94
  %96 = load double*, double** %19, align 8
  store double %95, double* %96, align 8
  br label %97

97:                                               ; preds = %88, %85
  %98 = load double*, double** %20, align 8
  %99 = icmp ne double* %98, null
  br i1 %99, label %100, label %109

100:                                              ; preds = %97
  %101 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %102 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %101, i32 0, i32 16
  %103 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %102, i32 0, i32 2
  %104 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %103, i32 0, i32 5
  %105 = load i32, i32* %104, align 4
  %106 = sitofp i32 %105 to double
  %107 = fmul double 1.000000e-05, %106
  %108 = load double*, double** %20, align 8
  store double %107, double* %108, align 8
  br label %109

109:                                              ; preds = %100, %97
  %110 = load double*, double** %21, align 8
  %111 = icmp ne double* %110, null
  br i1 %111, label %112, label %121

112:                                              ; preds = %109
  %113 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %114 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %113, i32 0, i32 16
  %115 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %114, i32 0, i32 2
  %116 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %115, i32 0, i32 6
  %117 = load i32, i32* %116, align 4
  %118 = sitofp i32 %117 to double
  %119 = fmul double 1.000000e-05, %118
  %120 = load double*, double** %21, align 8
  store double %119, double* %120, align 8
  br label %121

121:                                              ; preds = %112, %109
  %122 = load double*, double** %22, align 8
  %123 = icmp ne double* %122, null
  br i1 %123, label %124, label %133

124:                                              ; preds = %121
  %125 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %126 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %125, i32 0, i32 16
  %127 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %126, i32 0, i32 2
  %128 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %127, i32 0, i32 7
  %129 = load i32, i32* %128, align 4
  %130 = sitofp i32 %129 to double
  %131 = fmul double 1.000000e-05, %130
  %132 = load double*, double** %22, align 8
  store double %131, double* %132, align 8
  br label %133

133:                                              ; preds = %124, %121
  %134 = load double*, double** %23, align 8
  %135 = icmp ne double* %134, null
  br i1 %135, label %136, label %145

136:                                              ; preds = %133
  %137 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %138 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %137, i32 0, i32 16
  %139 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %138, i32 0, i32 2
  %140 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %139, i32 0, i32 8
  %141 = load i32, i32* %140, align 4
  %142 = sitofp i32 %141 to double
  %143 = fmul double 1.000000e-05, %142
  %144 = load double*, double** %23, align 8
  store double %143, double* %144, align 8
  br label %145

145:                                              ; preds = %136, %133
  store i32 4, i32* %12, align 4
  br label %147

146:                                              ; preds = %29, %26, %11
  store i32 0, i32* %12, align 4
  br label %147

147:                                              ; preds = %146, %145
  %148 = load i32, i32* %12, align 4
  ret i32 %148
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_cHRM_XYZ_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4, i32* noundef %5, i32* noundef %6, i32* noundef %7, i32* noundef %8, i32* noundef %9, i32* noundef %10) #0 {
  %12 = alloca i32, align 4
  %13 = alloca %struct.png_struct_def*, align 8
  %14 = alloca %struct.png_info_def*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %13, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %14, align 8
  store i32* %2, i32** %15, align 8
  store i32* %3, i32** %16, align 8
  store i32* %4, i32** %17, align 8
  store i32* %5, i32** %18, align 8
  store i32* %6, i32** %19, align 8
  store i32* %7, i32** %20, align 8
  store i32* %8, i32** %21, align 8
  store i32* %9, i32** %22, align 8
  store i32* %10, i32** %23, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %25 = icmp ne %struct.png_struct_def* %24, null
  br i1 %25, label %26, label %128

26:                                               ; preds = %11
  %27 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %28 = icmp ne %struct.png_info_def* %27, null
  br i1 %28, label %29, label %128

29:                                               ; preds = %26
  %30 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 16
  %32 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %31, i32 0, i32 4
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 2
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %128

37:                                               ; preds = %29
  %38 = load i32*, i32** %15, align 8
  %39 = icmp ne i32* %38, null
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 16
  %43 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %42, i32 0, i32 2
  %44 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = load i32*, i32** %15, align 8
  store i32 %45, i32* %46, align 4
  br label %47

47:                                               ; preds = %40, %37
  %48 = load i32*, i32** %16, align 8
  %49 = icmp ne i32* %48, null
  br i1 %49, label %50, label %57

50:                                               ; preds = %47
  %51 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 16
  %53 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %52, i32 0, i32 2
  %54 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32*, i32** %16, align 8
  store i32 %55, i32* %56, align 4
  br label %57

57:                                               ; preds = %50, %47
  %58 = load i32*, i32** %17, align 8
  %59 = icmp ne i32* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %57
  %61 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %62 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %61, i32 0, i32 16
  %63 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %62, i32 0, i32 2
  %64 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %63, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %17, align 8
  store i32 %65, i32* %66, align 4
  br label %67

67:                                               ; preds = %60, %57
  %68 = load i32*, i32** %18, align 8
  %69 = icmp ne i32* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %72 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %71, i32 0, i32 16
  %73 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %72, i32 0, i32 2
  %74 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = load i32*, i32** %18, align 8
  store i32 %75, i32* %76, align 4
  br label %77

77:                                               ; preds = %70, %67
  %78 = load i32*, i32** %19, align 8
  %79 = icmp ne i32* %78, null
  br i1 %79, label %80, label %87

80:                                               ; preds = %77
  %81 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %82 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %81, i32 0, i32 16
  %83 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %82, i32 0, i32 2
  %84 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %83, i32 0, i32 4
  %85 = load i32, i32* %84, align 4
  %86 = load i32*, i32** %19, align 8
  store i32 %85, i32* %86, align 4
  br label %87

87:                                               ; preds = %80, %77
  %88 = load i32*, i32** %20, align 8
  %89 = icmp ne i32* %88, null
  br i1 %89, label %90, label %97

90:                                               ; preds = %87
  %91 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %92 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %91, i32 0, i32 16
  %93 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %92, i32 0, i32 2
  %94 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %93, i32 0, i32 5
  %95 = load i32, i32* %94, align 4
  %96 = load i32*, i32** %20, align 8
  store i32 %95, i32* %96, align 4
  br label %97

97:                                               ; preds = %90, %87
  %98 = load i32*, i32** %21, align 8
  %99 = icmp ne i32* %98, null
  br i1 %99, label %100, label %107

100:                                              ; preds = %97
  %101 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %102 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %101, i32 0, i32 16
  %103 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %102, i32 0, i32 2
  %104 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %103, i32 0, i32 6
  %105 = load i32, i32* %104, align 4
  %106 = load i32*, i32** %21, align 8
  store i32 %105, i32* %106, align 4
  br label %107

107:                                              ; preds = %100, %97
  %108 = load i32*, i32** %22, align 8
  %109 = icmp ne i32* %108, null
  br i1 %109, label %110, label %117

110:                                              ; preds = %107
  %111 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %112 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %111, i32 0, i32 16
  %113 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %112, i32 0, i32 2
  %114 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %113, i32 0, i32 7
  %115 = load i32, i32* %114, align 4
  %116 = load i32*, i32** %22, align 8
  store i32 %115, i32* %116, align 4
  br label %117

117:                                              ; preds = %110, %107
  %118 = load i32*, i32** %23, align 8
  %119 = icmp ne i32* %118, null
  br i1 %119, label %120, label %127

120:                                              ; preds = %117
  %121 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %122 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %121, i32 0, i32 16
  %123 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %122, i32 0, i32 2
  %124 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %123, i32 0, i32 8
  %125 = load i32, i32* %124, align 4
  %126 = load i32*, i32** %23, align 8
  store i32 %125, i32* %126, align 4
  br label %127

127:                                              ; preds = %120, %117
  store i32 4, i32* %12, align 4
  br label %129

128:                                              ; preds = %29, %26, %11
  store i32 0, i32* %12, align 4
  br label %129

129:                                              ; preds = %128, %127
  %130 = load i32, i32* %12, align 4
  ret i32 %130
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_cHRM_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4, i32* noundef %5, i32* noundef %6, i32* noundef %7, i32* noundef %8, i32* noundef %9) #0 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.png_struct_def*, align 8
  %13 = alloca %struct.png_info_def*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %12, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %13, align 8
  store i32* %2, i32** %14, align 8
  store i32* %3, i32** %15, align 8
  store i32* %4, i32** %16, align 8
  store i32* %5, i32** %17, align 8
  store i32* %6, i32** %18, align 8
  store i32* %7, i32** %19, align 8
  store i32* %8, i32** %20, align 8
  store i32* %9, i32** %21, align 8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %23 = icmp ne %struct.png_struct_def* %22, null
  br i1 %23, label %24, label %116

24:                                               ; preds = %10
  %25 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %26 = icmp ne %struct.png_info_def* %25, null
  br i1 %26, label %27, label %116

27:                                               ; preds = %24
  %28 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 16
  %30 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %29, i32 0, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %116

35:                                               ; preds = %27
  %36 = load i32*, i32** %14, align 8
  %37 = icmp ne i32* %36, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 16
  %41 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %40, i32 0, i32 1
  %42 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = load i32*, i32** %14, align 8
  store i32 %43, i32* %44, align 4
  br label %45

45:                                               ; preds = %38, %35
  %46 = load i32*, i32** %15, align 8
  %47 = icmp ne i32* %46, null
  br i1 %47, label %48, label %55

48:                                               ; preds = %45
  %49 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 16
  %51 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %50, i32 0, i32 1
  %52 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %51, i32 0, i32 7
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %15, align 8
  store i32 %53, i32* %54, align 4
  br label %55

55:                                               ; preds = %48, %45
  %56 = load i32*, i32** %16, align 8
  %57 = icmp ne i32* %56, null
  br i1 %57, label %58, label %65

58:                                               ; preds = %55
  %59 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %60 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %59, i32 0, i32 16
  %61 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %60, i32 0, i32 1
  %62 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = load i32*, i32** %16, align 8
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %58, %55
  %66 = load i32*, i32** %17, align 8
  %67 = icmp ne i32* %66, null
  br i1 %67, label %68, label %75

68:                                               ; preds = %65
  %69 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %70 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %69, i32 0, i32 16
  %71 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = load i32*, i32** %17, align 8
  store i32 %73, i32* %74, align 4
  br label %75

75:                                               ; preds = %68, %65
  %76 = load i32*, i32** %18, align 8
  %77 = icmp ne i32* %76, null
  br i1 %77, label %78, label %85

78:                                               ; preds = %75
  %79 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %80 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %79, i32 0, i32 16
  %81 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %80, i32 0, i32 1
  %82 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = load i32*, i32** %18, align 8
  store i32 %83, i32* %84, align 4
  br label %85

85:                                               ; preds = %78, %75
  %86 = load i32*, i32** %19, align 8
  %87 = icmp ne i32* %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %85
  %89 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %90 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %89, i32 0, i32 16
  %91 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %90, i32 0, i32 1
  %92 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = load i32*, i32** %19, align 8
  store i32 %93, i32* %94, align 4
  br label %95

95:                                               ; preds = %88, %85
  %96 = load i32*, i32** %20, align 8
  %97 = icmp ne i32* %96, null
  br i1 %97, label %98, label %105

98:                                               ; preds = %95
  %99 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %100 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %99, i32 0, i32 16
  %101 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %101, i32 0, i32 4
  %103 = load i32, i32* %102, align 4
  %104 = load i32*, i32** %20, align 8
  store i32 %103, i32* %104, align 4
  br label %105

105:                                              ; preds = %98, %95
  %106 = load i32*, i32** %21, align 8
  %107 = icmp ne i32* %106, null
  br i1 %107, label %108, label %115

108:                                              ; preds = %105
  %109 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %110 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %109, i32 0, i32 16
  %111 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %110, i32 0, i32 1
  %112 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %111, i32 0, i32 5
  %113 = load i32, i32* %112, align 4
  %114 = load i32*, i32** %21, align 8
  store i32 %113, i32* %114, align 4
  br label %115

115:                                              ; preds = %108, %105
  store i32 4, i32* %11, align 4
  br label %117

116:                                              ; preds = %27, %24, %10
  store i32 0, i32* %11, align 4
  br label %117

117:                                              ; preds = %116, %115
  %118 = load i32, i32* %11, align 4
  ret i32 %118
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_gAMA_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32* %2, i32** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %30

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 16
  %16 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %15, i32 0, i32 4
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 1
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %30

21:                                               ; preds = %13
  %22 = load i32*, i32** %7, align 8
  %23 = icmp ne i32* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %25, i32 0, i32 16
  %27 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = load i32*, i32** %7, align 8
  store i32 %28, i32* %29, align 4
  store i32 1, i32* %4, align 4
  br label %31

30:                                               ; preds = %21, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %31

31:                                               ; preds = %30, %24
  %32 = load i32, i32* %4, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_gAMA(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, double* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca double*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store double* %2, double** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %32

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %32

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 16
  %16 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %15, i32 0, i32 4
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 1
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %13
  %22 = load double*, double** %7, align 8
  %23 = icmp ne double* %22, null
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %25, i32 0, i32 16
  %27 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = sitofp i32 %28 to double
  %30 = fmul double 1.000000e-05, %29
  %31 = load double*, double** %7, align 8
  store double %30, double* %31, align 8
  store i32 1, i32* %4, align 4
  br label %33

32:                                               ; preds = %21, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %33

33:                                               ; preds = %32, %24
  %34 = load i32, i32* %4, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_sRGB(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32* %2, i32** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %29

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2048
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %29

19:                                               ; preds = %13
  %20 = load i32*, i32** %7, align 8
  %21 = icmp ne i32* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 16
  %25 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %24, i32 0, i32 3
  %26 = load i16, i16* %25, align 4
  %27 = zext i16 %26 to i32
  %28 = load i32*, i32** %7, align 8
  store i32 %27, i32* %28, align 4
  store i32 2048, i32* %4, align 4
  br label %30

29:                                               ; preds = %19, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %30

30:                                               ; preds = %29, %22
  %31 = load i32, i32* %4, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_iCCP(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8** noundef %2, i32* noundef %3, i8** noundef %4, i32* noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.png_struct_def*, align 8
  %9 = alloca %struct.png_info_def*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %8, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %9, align 8
  store i8** %2, i8*** %10, align 8
  store i32* %3, i32** %11, align 8
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %15 = icmp ne %struct.png_struct_def* %14, null
  br i1 %15, label %16, label %78

16:                                               ; preds = %6
  %17 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %18 = icmp ne %struct.png_info_def* %17, null
  br i1 %18, label %19, label %78

19:                                               ; preds = %16
  %20 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %21 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 4096
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %78

25:                                               ; preds = %19
  %26 = load i8**, i8*** %10, align 8
  %27 = icmp ne i8** %26, null
  br i1 %27, label %28, label %78

28:                                               ; preds = %25
  %29 = load i8**, i8*** %12, align 8
  %30 = icmp ne i8** %29, null
  br i1 %30, label %31, label %78

31:                                               ; preds = %28
  %32 = load i32*, i32** %13, align 8
  %33 = icmp ne i32* %32, null
  br i1 %33, label %34, label %78

34:                                               ; preds = %31
  %35 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %36 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %35, i32 0, i32 17
  %37 = load i8*, i8** %36, align 8
  %38 = load i8**, i8*** %10, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 18
  %41 = load i8*, i8** %40, align 8
  %42 = load i8**, i8*** %12, align 8
  store i8* %41, i8** %42, align 8
  %43 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %44 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %43, i32 0, i32 18
  %45 = load i8*, i8** %44, align 8
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %47, 24
  %49 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 18
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, 16
  %56 = add i32 %48, %55
  %57 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %58 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %57, i32 0, i32 18
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl i32 %62, 8
  %64 = add i32 %56, %63
  %65 = load %struct.png_info_def*, %struct.png_info_def** %9, align 8
  %66 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %65, i32 0, i32 18
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = add i32 %64, %70
  %72 = load i32*, i32** %13, align 8
  store i32 %71, i32* %72, align 4
  %73 = load i32*, i32** %11, align 8
  %74 = icmp ne i32* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %34
  %76 = load i32*, i32** %11, align 8
  store i32 0, i32* %76, align 4
  br label %77

77:                                               ; preds = %75, %34
  store i32 4096, i32* %7, align 4
  br label %79

78:                                               ; preds = %31, %28, %25, %19, %16, %6
  store i32 0, i32* %7, align 4
  br label %79

79:                                               ; preds = %78, %77
  %80 = load i32, i32* %7, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_sPLT(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_sPLT_struct** noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_sPLT_struct**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_sPLT_struct** %2, %struct.png_sPLT_struct*** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %10
  %14 = load %struct.png_sPLT_struct**, %struct.png_sPLT_struct*** %7, align 8
  %15 = icmp ne %struct.png_sPLT_struct** %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %13
  %17 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %17, i32 0, i32 48
  %19 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %18, align 8
  %20 = load %struct.png_sPLT_struct**, %struct.png_sPLT_struct*** %7, align 8
  store %struct.png_sPLT_struct* %19, %struct.png_sPLT_struct** %20, align 8
  %21 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %22 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %21, i32 0, i32 49
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %4, align 4
  br label %25

24:                                               ; preds = %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %25

25:                                               ; preds = %24, %16
  %26 = load i32, i32* %4, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_eXIf(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8** noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i8** %2, i8*** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %7, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.85, i64 0, i64 0))
  %8 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %9 = load i8**, i8*** %6, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_eXIf_1(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i8** noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32* %2, i32** %8, align 8
  store i8** %3, i8*** %9, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %11 = icmp ne %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %33

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %14 = icmp ne %struct.png_info_def* %13, null
  br i1 %14, label %15, label %33

15:                                               ; preds = %12
  %16 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 65536
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %15
  %22 = load i8**, i8*** %9, align 8
  %23 = icmp ne i8** %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %21
  %25 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %25, i32 0, i32 34
  %27 = load i32, i32* %26, align 4
  %28 = load i32*, i32** %8, align 8
  store i32 %27, i32* %28, align 4
  %29 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 35
  %31 = load i8*, i8** %30, align 8
  %32 = load i8**, i8*** %9, align 8
  store i8* %31, i8** %32, align 8
  store i32 65536, i32* %5, align 4
  br label %34

33:                                               ; preds = %21, %15, %12, %4
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %33, %24
  %35 = load i32, i32* %5, align 4
  ret i32 %35
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_hIST(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i16** noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i16**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i16** %2, i16*** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %27

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 64
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %13
  %20 = load i16**, i16*** %7, align 8
  %21 = icmp ne i16** %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 37
  %25 = load i16*, i16** %24, align 8
  %26 = load i16**, i16*** %7, align 8
  store i16* %25, i16** %26, align 8
  store i32 64, i32* %4, align 4
  br label %28

27:                                               ; preds = %19, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %28

28:                                               ; preds = %27, %22
  %29 = load i32, i32* %4, align 4
  ret i32 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_IHDR(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4, i32* noundef %5, i32* noundef %6, i32* noundef %7, i32* noundef %8) #0 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.png_struct_def*, align 8
  %12 = alloca %struct.png_info_def*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %11, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %12, align 8
  store i32* %2, i32** %13, align 8
  store i32* %3, i32** %14, align 8
  store i32* %4, i32** %15, align 8
  store i32* %5, i32** %16, align 8
  store i32* %6, i32** %17, align 8
  store i32* %7, i32** %18, align 8
  store i32* %8, i32** %19, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %21 = icmp eq %struct.png_struct_def* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %9
  %23 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %24 = icmp eq %struct.png_info_def* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %22, %9
  store i32 0, i32* %10, align 4
  br label %115

26:                                               ; preds = %22
  %27 = load i32*, i32** %13, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = load i32*, i32** %13, align 8
  store i32 %32, i32* %33, align 4
  br label %34

34:                                               ; preds = %29, %26
  %35 = load i32*, i32** %14, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32*, i32** %14, align 8
  store i32 %40, i32* %41, align 4
  br label %42

42:                                               ; preds = %37, %34
  %43 = load i32*, i32** %15, align 8
  %44 = icmp ne i32* %43, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %42
  %46 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 7
  %48 = load i8, i8* %47, align 4
  %49 = zext i8 %48 to i32
  %50 = load i32*, i32** %15, align 8
  store i32 %49, i32* %50, align 4
  br label %51

51:                                               ; preds = %45, %42
  %52 = load i32*, i32** %16, align 8
  %53 = icmp ne i32* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %51
  %55 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %56 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %55, i32 0, i32 8
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = load i32*, i32** %16, align 8
  store i32 %58, i32* %59, align 4
  br label %60

60:                                               ; preds = %54, %51
  %61 = load i32*, i32** %18, align 8
  %62 = icmp ne i32* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %65 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %64, i32 0, i32 9
  %66 = load i8, i8* %65, align 2
  %67 = zext i8 %66 to i32
  %68 = load i32*, i32** %18, align 8
  store i32 %67, i32* %68, align 4
  br label %69

69:                                               ; preds = %63, %60
  %70 = load i32*, i32** %19, align 8
  %71 = icmp ne i32* %70, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %69
  %73 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %74 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %73, i32 0, i32 10
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = load i32*, i32** %19, align 8
  store i32 %76, i32* %77, align 4
  br label %78

78:                                               ; preds = %72, %69
  %79 = load i32*, i32** %17, align 8
  %80 = icmp ne i32* %79, null
  br i1 %80, label %81, label %87

81:                                               ; preds = %78
  %82 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %83 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %82, i32 0, i32 11
  %84 = load i8, i8* %83, align 8
  %85 = zext i8 %84 to i32
  %86 = load i32*, i32** %17, align 8
  store i32 %85, i32* %86, align 4
  br label %87

87:                                               ; preds = %81, %78
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %89 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %90 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %93 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %96 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %95, i32 0, i32 7
  %97 = load i8, i8* %96, align 4
  %98 = zext i8 %97 to i32
  %99 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %100 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %99, i32 0, i32 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 11
  %105 = load i8, i8* %104, align 8
  %106 = zext i8 %105 to i32
  %107 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %108 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %107, i32 0, i32 9
  %109 = load i8, i8* %108, align 2
  %110 = zext i8 %109 to i32
  %111 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %112 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %111, i32 0, i32 10
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  call void @png_check_IHDR(%struct.png_struct_def* noundef %88, i32 noundef %91, i32 noundef %94, i32 noundef %98, i32 noundef %102, i32 noundef %106, i32 noundef %110, i32 noundef %114)
  store i32 1, i32* %10, align 4
  br label %115

115:                                              ; preds = %87, %25
  %116 = load i32, i32* %10, align 4
  ret i32 %116
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_oFFs(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_info_def*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %8, align 8
  store i32* %2, i32** %9, align 8
  store i32* %3, i32** %10, align 8
  store i32* %4, i32** %11, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %46

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %46

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 256
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %46

23:                                               ; preds = %17
  %24 = load i32*, i32** %9, align 8
  %25 = icmp ne i32* %24, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %23
  %27 = load i32*, i32** %10, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %26
  %30 = load i32*, i32** %11, align 8
  %31 = icmp ne i32* %30, null
  br i1 %31, label %32, label %46

32:                                               ; preds = %29
  %33 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 28
  %35 = load i32, i32* %34, align 4
  %36 = load i32*, i32** %9, align 8
  store i32 %35, i32* %36, align 4
  %37 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 29
  %39 = load i32, i32* %38, align 8
  %40 = load i32*, i32** %10, align 8
  store i32 %39, i32* %40, align 4
  %41 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 30
  %43 = load i8, i8* %42, align 4
  %44 = zext i8 %43 to i32
  %45 = load i32*, i32** %11, align 8
  store i32 %44, i32* %45, align 4
  store i32 256, i32* %6, align 4
  br label %47

46:                                               ; preds = %29, %26, %23, %17, %14, %5
  store i32 0, i32* %6, align 4
  br label %47

47:                                               ; preds = %46, %32
  %48 = load i32, i32* %6, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_pCAL(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8** noundef %2, i32* noundef %3, i32* noundef %4, i32* noundef %5, i32* noundef %6, i8** noundef %7, i8*** noundef %8) #0 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.png_struct_def*, align 8
  %12 = alloca %struct.png_info_def*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i8**, align 8
  %19 = alloca i8***, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %11, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %12, align 8
  store i8** %2, i8*** %13, align 8
  store i32* %3, i32** %14, align 8
  store i32* %4, i32** %15, align 8
  store i32* %5, i32** %16, align 8
  store i32* %6, i32** %17, align 8
  store i8** %7, i8*** %18, align 8
  store i8*** %8, i8**** %19, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %21 = icmp ne %struct.png_struct_def* %20, null
  br i1 %21, label %22, label %83

22:                                               ; preds = %9
  %23 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %24 = icmp ne %struct.png_info_def* %23, null
  br i1 %24, label %25, label %83

25:                                               ; preds = %22
  %26 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %27 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %26, i32 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 1024
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %83

31:                                               ; preds = %25
  %32 = load i8**, i8*** %13, align 8
  %33 = icmp ne i8** %32, null
  br i1 %33, label %34, label %83

34:                                               ; preds = %31
  %35 = load i32*, i32** %14, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %83

37:                                               ; preds = %34
  %38 = load i32*, i32** %15, align 8
  %39 = icmp ne i32* %38, null
  br i1 %39, label %40, label %83

40:                                               ; preds = %37
  %41 = load i32*, i32** %16, align 8
  %42 = icmp ne i32* %41, null
  br i1 %42, label %43, label %83

43:                                               ; preds = %40
  %44 = load i32*, i32** %17, align 8
  %45 = icmp ne i32* %44, null
  br i1 %45, label %46, label %83

46:                                               ; preds = %43
  %47 = load i8**, i8*** %18, align 8
  %48 = icmp ne i8** %47, null
  br i1 %48, label %49, label %83

49:                                               ; preds = %46
  %50 = load i8***, i8**** %19, align 8
  %51 = icmp ne i8*** %50, null
  br i1 %51, label %52, label %83

52:                                               ; preds = %49
  %53 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 38
  %55 = load i8*, i8** %54, align 8
  %56 = load i8**, i8*** %13, align 8
  store i8* %55, i8** %56, align 8
  %57 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %58 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %57, i32 0, i32 39
  %59 = load i32, i32* %58, align 8
  %60 = load i32*, i32** %14, align 8
  store i32 %59, i32* %60, align 4
  %61 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %62 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %61, i32 0, i32 40
  %63 = load i32, i32* %62, align 4
  %64 = load i32*, i32** %15, align 8
  store i32 %63, i32* %64, align 4
  %65 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %66 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %65, i32 0, i32 43
  %67 = load i8, i8* %66, align 8
  %68 = zext i8 %67 to i32
  %69 = load i32*, i32** %16, align 8
  store i32 %68, i32* %69, align 4
  %70 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %70, i32 0, i32 44
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = load i32*, i32** %17, align 8
  store i32 %73, i32* %74, align 4
  %75 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %76 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %75, i32 0, i32 41
  %77 = load i8*, i8** %76, align 8
  %78 = load i8**, i8*** %18, align 8
  store i8* %77, i8** %78, align 8
  %79 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %80 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %79, i32 0, i32 42
  %81 = load i8**, i8*** %80, align 8
  %82 = load i8***, i8**** %19, align 8
  store i8** %81, i8*** %82, align 8
  store i32 1024, i32* %10, align 4
  br label %84

83:                                               ; preds = %49, %46, %43, %40, %37, %34, %31, %25, %22, %9
  store i32 0, i32* %10, align 4
  br label %84

84:                                               ; preds = %83, %52
  %85 = load i32, i32* %10, align 4
  ret i32 %85
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_sCAL_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_info_def*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %8, align 8
  store i32* %2, i32** %9, align 8
  store i32* %3, i32** %10, align 8
  store i32* %4, i32** %11, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %43

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %43

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 16384
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 50
  %26 = load i8, i8* %25, align 4
  %27 = zext i8 %26 to i32
  %28 = load i32*, i32** %9, align 8
  store i32 %27, i32* %28, align 4
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %30 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 51
  %32 = load i8*, i8** %31, align 8
  %33 = call double @atof(i8* noundef %32) #14
  %34 = call i32 @png_fixed(%struct.png_struct_def* noundef %29, double noundef %33, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.86, i64 0, i64 0))
  %35 = load i32*, i32** %10, align 8
  store i32 %34, i32* %35, align 4
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %37 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 52
  %39 = load i8*, i8** %38, align 8
  %40 = call double @atof(i8* noundef %39) #14
  %41 = call i32 @png_fixed(%struct.png_struct_def* noundef %36, double noundef %40, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.87, i64 0, i64 0))
  %42 = load i32*, i32** %11, align 8
  store i32 %41, i32* %42, align 4
  store i32 16384, i32* %6, align 4
  br label %44

43:                                               ; preds = %17, %14, %5
  store i32 0, i32* %6, align 4
  br label %44

44:                                               ; preds = %43, %23
  %45 = load i32, i32* %6, align 4
  ret i32 %45
}

; Function Attrs: nounwind readonly willreturn
declare double @atof(i8* noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_sCAL(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, double* noundef %3, double* noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_info_def*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %8, align 8
  store i32* %2, i32** %9, align 8
  store double* %3, double** %10, align 8
  store double* %4, double** %11, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %39

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %39

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 16384
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 50
  %26 = load i8, i8* %25, align 4
  %27 = zext i8 %26 to i32
  %28 = load i32*, i32** %9, align 8
  store i32 %27, i32* %28, align 4
  %29 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 51
  %31 = load i8*, i8** %30, align 8
  %32 = call double @atof(i8* noundef %31) #14
  %33 = load double*, double** %10, align 8
  store double %32, double* %33, align 8
  %34 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 52
  %36 = load i8*, i8** %35, align 8
  %37 = call double @atof(i8* noundef %36) #14
  %38 = load double*, double** %11, align 8
  store double %37, double* %38, align 8
  store i32 16384, i32* %6, align 4
  br label %40

39:                                               ; preds = %17, %14, %5
  store i32 0, i32* %6, align 4
  br label %40

40:                                               ; preds = %39, %23
  %41 = load i32, i32* %6, align 4
  ret i32 %41
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_sCAL_s(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i8** noundef %3, i8** noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_info_def*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %8, align 8
  store i32* %2, i32** %9, align 8
  store i8** %3, i8*** %10, align 8
  store i8** %4, i8*** %11, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %37

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %37

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 16384
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 50
  %26 = load i8, i8* %25, align 4
  %27 = zext i8 %26 to i32
  %28 = load i32*, i32** %9, align 8
  store i32 %27, i32* %28, align 4
  %29 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 51
  %31 = load i8*, i8** %30, align 8
  %32 = load i8**, i8*** %10, align 8
  store i8* %31, i8** %32, align 8
  %33 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 52
  %35 = load i8*, i8** %34, align 8
  %36 = load i8**, i8*** %11, align 8
  store i8* %35, i8** %36, align 8
  store i32 16384, i32* %6, align 4
  br label %38

37:                                               ; preds = %17, %14, %5
  store i32 0, i32* %6, align 4
  br label %38

38:                                               ; preds = %37, %23
  %39 = load i32, i32* %6, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_pHYs(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32* noundef %2, i32* noundef %3, i32* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  store i32 0, i32* %11, align 4
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %55

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %55

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 128
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %55

23:                                               ; preds = %17
  %24 = load i32*, i32** %8, align 8
  %25 = icmp ne i32* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %23
  %27 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 31
  %29 = load i32, i32* %28, align 8
  %30 = load i32*, i32** %8, align 8
  store i32 %29, i32* %30, align 4
  %31 = load i32, i32* %11, align 4
  %32 = or i32 %31, 128
  store i32 %32, i32* %11, align 4
  br label %33

33:                                               ; preds = %26, %23
  %34 = load i32*, i32** %9, align 8
  %35 = icmp ne i32* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %33
  %37 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 32
  %39 = load i32, i32* %38, align 4
  %40 = load i32*, i32** %9, align 8
  store i32 %39, i32* %40, align 4
  %41 = load i32, i32* %11, align 4
  %42 = or i32 %41, 128
  store i32 %42, i32* %11, align 4
  br label %43

43:                                               ; preds = %36, %33
  %44 = load i32*, i32** %10, align 8
  %45 = icmp ne i32* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %48 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %47, i32 0, i32 33
  %49 = load i8, i8* %48, align 8
  %50 = zext i8 %49 to i32
  %51 = load i32*, i32** %10, align 8
  store i32 %50, i32* %51, align 4
  %52 = load i32, i32* %11, align 4
  %53 = or i32 %52, 128
  store i32 %53, i32* %11, align 4
  br label %54

54:                                               ; preds = %46, %43
  br label %55

55:                                               ; preds = %54, %17, %14, %5
  %56 = load i32, i32* %11, align 4
  ret i32 %56
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_PLTE(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_color_struct** noundef %2, i32* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca %struct.png_color_struct**, align 8
  %9 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store %struct.png_color_struct** %2, %struct.png_color_struct*** %8, align 8
  store i32* %3, i32** %9, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %11 = icmp ne %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %34

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %14 = icmp ne %struct.png_info_def* %13, null
  br i1 %14, label %15, label %34

15:                                               ; preds = %12
  %16 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 8
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %15
  %22 = load %struct.png_color_struct**, %struct.png_color_struct*** %8, align 8
  %23 = icmp ne %struct.png_color_struct** %22, null
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %25, i32 0, i32 4
  %27 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %28 = load %struct.png_color_struct**, %struct.png_color_struct*** %8, align 8
  store %struct.png_color_struct* %27, %struct.png_color_struct** %28, align 8
  %29 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 5
  %31 = load i16, i16* %30, align 8
  %32 = zext i16 %31 to i32
  %33 = load i32*, i32** %9, align 8
  store i32 %32, i32* %33, align 4
  store i32 8, i32* %5, align 4
  br label %35

34:                                               ; preds = %21, %15, %12, %4
  store i32 0, i32* %5, align 4
  br label %35

35:                                               ; preds = %34, %24
  %36 = load i32, i32* %5, align 4
  ret i32 %36
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_sBIT(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_color_8_struct** noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_color_8_struct**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_color_8_struct** %2, %struct.png_color_8_struct*** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %26

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = load %struct.png_color_8_struct**, %struct.png_color_8_struct*** %7, align 8
  %21 = icmp ne %struct.png_color_8_struct** %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 24
  %25 = load %struct.png_color_8_struct**, %struct.png_color_8_struct*** %7, align 8
  store %struct.png_color_8_struct* %24, %struct.png_color_8_struct** %25, align 8
  store i32 2, i32* %4, align 4
  br label %27

26:                                               ; preds = %19, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %27

27:                                               ; preds = %26, %22
  %28 = load i32, i32* %4, align 4
  ret i32 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_text(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_text_struct** noundef %2, i32* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca %struct.png_text_struct**, align 8
  %9 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store %struct.png_text_struct** %2, %struct.png_text_struct*** %8, align 8
  store i32* %3, i32** %9, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %11 = icmp ne %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %40

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %14 = icmp ne %struct.png_info_def* %13, null
  br i1 %14, label %15, label %40

15:                                               ; preds = %12
  %16 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %16, i32 0, i32 20
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %40

20:                                               ; preds = %15
  %21 = load %struct.png_text_struct**, %struct.png_text_struct*** %8, align 8
  %22 = icmp ne %struct.png_text_struct** %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 22
  %26 = load %struct.png_text_struct*, %struct.png_text_struct** %25, align 8
  %27 = load %struct.png_text_struct**, %struct.png_text_struct*** %8, align 8
  store %struct.png_text_struct* %26, %struct.png_text_struct** %27, align 8
  br label %28

28:                                               ; preds = %23, %20
  %29 = load i32*, i32** %9, align 8
  %30 = icmp ne i32* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %32, i32 0, i32 20
  %34 = load i32, i32* %33, align 4
  %35 = load i32*, i32** %9, align 8
  store i32 %34, i32* %35, align 4
  br label %36

36:                                               ; preds = %31, %28
  %37 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 20
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %5, align 4
  br label %46

40:                                               ; preds = %15, %12, %4
  %41 = load i32*, i32** %9, align 8
  %42 = icmp ne i32* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i32*, i32** %9, align 8
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %43, %40
  store i32 0, i32* %5, align 4
  br label %46

46:                                               ; preds = %45, %36
  %47 = load i32, i32* %5, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_tIME(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_time_struct** noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_time_struct**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_time_struct** %2, %struct.png_time_struct*** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %26

13:                                               ; preds = %10
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 512
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = load %struct.png_time_struct**, %struct.png_time_struct*** %7, align 8
  %21 = icmp ne %struct.png_time_struct** %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 23
  %25 = load %struct.png_time_struct**, %struct.png_time_struct*** %7, align 8
  store %struct.png_time_struct* %24, %struct.png_time_struct** %25, align 8
  store i32 512, i32* %4, align 4
  br label %27

26:                                               ; preds = %19, %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %27

27:                                               ; preds = %26, %22
  %28 = load i32, i32* %4, align 4
  ret i32 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_tRNS(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8** noundef %2, i32* noundef %3, %struct.png_color_16_struct** noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.png_color_16_struct**, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i32* %3, i32** %9, align 8
  store %struct.png_color_16_struct** %4, %struct.png_color_16_struct*** %10, align 8
  store i32 0, i32* %11, align 4
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %13 = icmp ne %struct.png_struct_def* %12, null
  br i1 %13, label %14, label %74

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %74

17:                                               ; preds = %14
  %18 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 16
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %74

23:                                               ; preds = %17
  %24 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 8
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %47

29:                                               ; preds = %23
  %30 = load i8**, i8*** %8, align 8
  %31 = icmp ne i8** %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 25
  %35 = load i8*, i8** %34, align 8
  %36 = load i8**, i8*** %8, align 8
  store i8* %35, i8** %36, align 8
  %37 = load i32, i32* %11, align 4
  %38 = or i32 %37, 16
  store i32 %38, i32* %11, align 4
  br label %39

39:                                               ; preds = %32, %29
  %40 = load %struct.png_color_16_struct**, %struct.png_color_16_struct*** %10, align 8
  %41 = icmp ne %struct.png_color_16_struct** %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %44 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %43, i32 0, i32 26
  %45 = load %struct.png_color_16_struct**, %struct.png_color_16_struct*** %10, align 8
  store %struct.png_color_16_struct* %44, %struct.png_color_16_struct** %45, align 8
  br label %46

46:                                               ; preds = %42, %39
  br label %62

47:                                               ; preds = %23
  %48 = load %struct.png_color_16_struct**, %struct.png_color_16_struct*** %10, align 8
  %49 = icmp ne %struct.png_color_16_struct** %48, null
  br i1 %49, label %50, label %56

50:                                               ; preds = %47
  %51 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 26
  %53 = load %struct.png_color_16_struct**, %struct.png_color_16_struct*** %10, align 8
  store %struct.png_color_16_struct* %52, %struct.png_color_16_struct** %53, align 8
  %54 = load i32, i32* %11, align 4
  %55 = or i32 %54, 16
  store i32 %55, i32* %11, align 4
  br label %56

56:                                               ; preds = %50, %47
  %57 = load i8**, i8*** %8, align 8
  %58 = icmp ne i8** %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = load i8**, i8*** %8, align 8
  store i8* null, i8** %60, align 8
  br label %61

61:                                               ; preds = %59, %56
  br label %62

62:                                               ; preds = %61, %46
  %63 = load i32*, i32** %9, align 8
  %64 = icmp ne i32* %63, null
  br i1 %64, label %65, label %73

65:                                               ; preds = %62
  %66 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %67 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %66, i32 0, i32 6
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = load i32*, i32** %9, align 8
  store i32 %69, i32* %70, align 4
  %71 = load i32, i32* %11, align 4
  %72 = or i32 %71, 16
  store i32 %72, i32* %11, align 4
  br label %73

73:                                               ; preds = %65, %62
  br label %74

74:                                               ; preds = %73, %17, %14, %5
  %75 = load i32, i32* %11, align 4
  ret i32 %75
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_unknown_chunks(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_unknown_chunk_t** noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_unknown_chunk_t**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_unknown_chunk_t** %2, %struct.png_unknown_chunk_t*** %7, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %9 = icmp ne %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = icmp ne %struct.png_info_def* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %10
  %14 = load %struct.png_unknown_chunk_t**, %struct.png_unknown_chunk_t*** %7, align 8
  %15 = icmp ne %struct.png_unknown_chunk_t** %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %13
  %17 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %17, i32 0, i32 46
  %19 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %18, align 8
  %20 = load %struct.png_unknown_chunk_t**, %struct.png_unknown_chunk_t*** %7, align 8
  store %struct.png_unknown_chunk_t* %19, %struct.png_unknown_chunk_t** %20, align 8
  %21 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %22 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %21, i32 0, i32 47
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %4, align 4
  br label %25

24:                                               ; preds = %13, %10, %3
  store i32 0, i32* %4, align 4
  br label %25

25:                                               ; preds = %24, %16
  %26 = load i32, i32* %4, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_rgb_to_gray_status(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 118
  %8 = load i8, i8* %7, align 8
  %9 = zext i8 %8 to i32
  br label %11

10:                                               ; preds = %1
  br label %11

11:                                               ; preds = %10, %5
  %12 = phi i32 [ %9, %5 ], [ 0, %10 ]
  %13 = trunc i32 %12 to i8
  ret i8 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_user_chunk_ptr(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 113
  %8 = load i8*, i8** %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i8* [ %8, %5 ], [ null, %9 ]
  ret i8* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @png_get_compression_buffer_size(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i64 0, i64* %2, align 8
  br label %23

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 15
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 32768
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %7
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 141
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %2, align 8
  br label %23

18:                                               ; preds = %7
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 21
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %2, align 8
  br label %23

23:                                               ; preds = %18, %13, %6
  %24 = load i64, i64* %2, align 8
  ret i64 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_user_width_max(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 133
  %8 = load i32, i32* %7, align 4
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_user_height_max(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 134
  %8 = load i32, i32* %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_chunk_cache_max(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 135
  %8 = load i32, i32* %7, align 4
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @png_get_chunk_malloc_max(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 136
  %8 = load i64, i64* %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i64 [ %8, %5 ], [ 0, %9 ]
  ret i64 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_io_state(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 142
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_io_chunk_type(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 44
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_palette_max(%struct.png_struct_def* noundef %0, %struct.png_info_def* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = icmp ne %struct.png_info_def* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 54
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %3, align 4
  br label %16

15:                                               ; preds = %8, %2
  store i32 -1, i32* %3, align 4
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_destroy_png_struct(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.62*, align 8
  %3 = alloca %struct.png_struct_def.62, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %2, align 8
  %4 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %5 = icmp ne %struct.png_struct_def.62* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %8 = bitcast %struct.png_struct_def.62* %3 to i8*
  %9 = bitcast %struct.png_struct_def.62* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 1264, i1 false)
  %10 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %11 = bitcast %struct.png_struct_def.62* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 1264, i1 false)
  %12 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %13 = bitcast %struct.png_struct_def.62* %12 to i8*
  call void @png_free(%struct.png_struct_def.62* noundef %3, i8* noundef %13)
  call void bitcast (void (%struct.png_struct_def*)* @png_free_jmpbuf to void (%struct.png_struct_def.62*)*)(%struct.png_struct_def.62* noundef %3)
  br label %14

14:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_free(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %6 = icmp eq %struct.png_struct_def.62* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = load i8*, i8** %4, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7, %2
  br label %27

11:                                               ; preds = %7
  %12 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %13 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %12, i32 0, i32 127
  %14 = load void (%struct.png_struct_def.62*, i8*)*, void (%struct.png_struct_def.62*, i8*)** %13, align 8
  %15 = icmp ne void (%struct.png_struct_def.62*, i8*)* %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %11
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %18 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %17, i32 0, i32 127
  %19 = load void (%struct.png_struct_def.62*, i8*)*, void (%struct.png_struct_def.62*, i8*)** %18, align 8
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %21 = bitcast %struct.png_struct_def.62* %20 to i8*
  %22 = bitcast i8* %21 to %struct.png_struct_def.62*
  %23 = load i8*, i8** %4, align 8
  call void %19(%struct.png_struct_def.62* noundef %22, i8* noundef %23)
  br label %27

24:                                               ; preds = %11
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %26 = load i8*, i8** %4, align 8
  call void @png_free_default(%struct.png_struct_def.62* noundef %25, i8* noundef %26)
  br label %27

27:                                               ; preds = %10, %24, %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_free_default(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %6 = icmp eq %struct.png_struct_def.62* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = load i8*, i8** %4, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7, %2
  br label %13

11:                                               ; preds = %7
  %12 = load i8*, i8** %4, align 8
  call void @free(i8* noundef %12) #16
  br label %13

13:                                               ; preds = %11, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_calloc(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call noalias i8* @png_malloc(%struct.png_struct_def.62* noundef %6, i64 noundef %7)
  store i8* %8, i8** %5, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %4, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %13, i1 false)
  br label %14

14:                                               ; preds = %11, %2
  %15 = load i8*, i8** %5, align 8
  ret i8* %15
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_malloc(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %8 = icmp eq %struct.png_struct_def.62* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i8* null, i8** %3, align 8
  br label %20

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %12 = load i64, i64* %5, align 8
  %13 = call noalias i8* @png_malloc_base(%struct.png_struct_def.62* noundef %11, i64 noundef %12)
  store i8* %13, i8** %6, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %17, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.96, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %10
  %19 = load i8*, i8** %6, align 8
  store i8* %19, i8** %3, align 8
  br label %20

20:                                               ; preds = %18, %9
  %21 = load i8*, i8** %3, align 8
  ret i8* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_malloc_base(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 0
  br i1 %7, label %8, label %31

8:                                                ; preds = %2
  %9 = load i64, i64* %5, align 8
  %10 = icmp ule i64 %9, -1
  br i1 %10, label %11, label %31

11:                                               ; preds = %8
  %12 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %13 = icmp ne %struct.png_struct_def.62* %12, null
  br i1 %13, label %14, label %28

14:                                               ; preds = %11
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %15, i32 0, i32 126
  %17 = load i8* (%struct.png_struct_def.62*, i64)*, i8* (%struct.png_struct_def.62*, i64)** %16, align 8
  %18 = icmp ne i8* (%struct.png_struct_def.62*, i64)* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %20, i32 0, i32 126
  %22 = load i8* (%struct.png_struct_def.62*, i64)*, i8* (%struct.png_struct_def.62*, i64)** %21, align 8
  %23 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %24 = bitcast %struct.png_struct_def.62* %23 to i8*
  %25 = bitcast i8* %24 to %struct.png_struct_def.62*
  %26 = load i64, i64* %5, align 8
  %27 = call i8* %22(%struct.png_struct_def.62* noundef %25, i64 noundef %26)
  store i8* %27, i8** %3, align 8
  br label %32

28:                                               ; preds = %14, %11
  %29 = load i64, i64* %5, align 8
  %30 = call noalias i8* @malloc(i64 noundef %29) #16
  store i8* %30, i8** %3, align 8
  br label %32

31:                                               ; preds = %8, %2
  store i8* null, i8** %3, align 8
  br label %32

32:                                               ; preds = %31, %28, %19
  %33 = load i8*, i8** %3, align 8
  ret i8* %33
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64 noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_malloc_array(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %7 = load i32, i32* %5, align 4
  %8 = icmp sle i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load i64, i64* %6, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9, %3
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %13, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.97, i64 0, i64 0)) #13
  unreachable

14:                                               ; preds = %9
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %16 = load i32, i32* %5, align 4
  %17 = load i64, i64* %6, align 8
  %18 = call i8* @png_malloc_array_checked(%struct.png_struct_def.62* noundef %15, i32 noundef %16, i64 noundef %17)
  ret i8* %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @png_malloc_array_checked(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %9 = load i32, i32* %6, align 4
  %10 = sext i32 %9 to i64
  store i64 %10, i64* %8, align 8
  %11 = load i64, i64* %8, align 8
  %12 = load i64, i64* %7, align 8
  %13 = udiv i64 -1, %12
  %14 = icmp ule i64 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %17 = load i64, i64* %8, align 8
  %18 = load i64, i64* %7, align 8
  %19 = mul i64 %17, %18
  %20 = call noalias i8* @png_malloc_base(%struct.png_struct_def.62* noundef %16, i64 noundef %19)
  store i8* %20, i8** %4, align 8
  br label %22

21:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  br label %22

22:                                               ; preds = %21, %15
  %23 = load i8*, i8** %4, align 8
  ret i8* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_realloc_array(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca %struct.png_struct_def.62*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i64 %4, i64* %11, align 8
  %13 = load i32, i32* %10, align 4
  %14 = icmp sle i32 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %5
  %16 = load i64, i64* %11, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = load i32, i32* %9, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = load i8*, i8** %8, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %24, %18, %15, %5
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %28, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.98, i64 0, i64 0)) #13
  unreachable

29:                                               ; preds = %24, %21
  %30 = load i32, i32* %10, align 4
  %31 = load i32, i32* %9, align 4
  %32 = sub nsw i32 2147483647, %31
  %33 = icmp sle i32 %30, %32
  br i1 %33, label %34, label %66

34:                                               ; preds = %29
  %35 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %36 = load i32, i32* %9, align 4
  %37 = load i32, i32* %10, align 4
  %38 = add nsw i32 %36, %37
  %39 = load i64, i64* %11, align 8
  %40 = call i8* @png_malloc_array_checked(%struct.png_struct_def.62* noundef %35, i32 noundef %38, i64 noundef %39)
  store i8* %40, i8** %12, align 8
  %41 = load i8*, i8** %12, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %65

43:                                               ; preds = %34
  %44 = load i32, i32* %9, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %43
  %47 = load i8*, i8** %12, align 8
  %48 = load i8*, i8** %8, align 8
  %49 = load i64, i64* %11, align 8
  %50 = load i32, i32* %9, align 4
  %51 = zext i32 %50 to i64
  %52 = mul i64 %49, %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %48, i64 %52, i1 false)
  br label %53

53:                                               ; preds = %46, %43
  %54 = load i8*, i8** %12, align 8
  %55 = load i64, i64* %11, align 8
  %56 = load i32, i32* %9, align 4
  %57 = zext i32 %56 to i64
  %58 = mul i64 %55, %57
  %59 = getelementptr inbounds i8, i8* %54, i64 %58
  %60 = load i64, i64* %11, align 8
  %61 = load i32, i32* %10, align 4
  %62 = zext i32 %61 to i64
  %63 = mul i64 %60, %62
  call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 0, i64 %63, i1 false)
  %64 = load i8*, i8** %12, align 8
  store i8* %64, i8** %6, align 8
  br label %67

65:                                               ; preds = %34
  br label %66

66:                                               ; preds = %65, %29
  store i8* null, i8** %6, align 8
  br label %67

67:                                               ; preds = %66, %53
  %68 = load i8*, i8** %6, align 8
  ret i8* %68
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_malloc_default(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %8 = icmp eq %struct.png_struct_def.62* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i8* null, i8** %3, align 8
  br label %19

10:                                               ; preds = %2
  %11 = load i64, i64* %5, align 8
  %12 = call noalias i8* @png_malloc_base(%struct.png_struct_def.62* noundef null, i64 noundef %11)
  store i8* %12, i8** %6, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %16, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.99, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %10
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %3, align 8
  br label %19

19:                                               ; preds = %17, %9
  %20 = load i8*, i8** %3, align 8
  ret i8* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias i8* @png_malloc_warn(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %8 = icmp ne %struct.png_struct_def.62* %7, null
  br i1 %8, label %9, label %19

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %11 = load i64, i64* %5, align 8
  %12 = call noalias i8* @png_malloc_base(%struct.png_struct_def.62* noundef %10, i64 noundef %11)
  store i8* %12, i8** %6, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = load i8*, i8** %6, align 8
  store i8* %16, i8** %3, align 8
  br label %20

17:                                               ; preds = %9
  %18 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %18, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.96, i64 0, i64 0))
  br label %19

19:                                               ; preds = %17, %2
  store i8* null, i8** %3, align 8
  br label %20

20:                                               ; preds = %19, %15
  %21 = load i8*, i8** %3, align 8
  ret i8* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_mem_fn(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i8* (%struct.png_struct_def.62*, i64)* noundef %2, void (%struct.png_struct_def.62*, i8*)* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8* (%struct.png_struct_def.62*, i64)*, align 8
  %8 = alloca void (%struct.png_struct_def.62*, i8*)*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* (%struct.png_struct_def.62*, i64)* %2, i8* (%struct.png_struct_def.62*, i64)** %7, align 8
  store void (%struct.png_struct_def.62*, i8*)* %3, void (%struct.png_struct_def.62*, i8*)** %8, align 8
  %9 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %10 = icmp ne %struct.png_struct_def.62* %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %4
  %12 = load i8*, i8** %6, align 8
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %13, i32 0, i32 125
  store i8* %12, i8** %14, align 8
  %15 = load i8* (%struct.png_struct_def.62*, i64)*, i8* (%struct.png_struct_def.62*, i64)** %7, align 8
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %17 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %16, i32 0, i32 126
  store i8* (%struct.png_struct_def.62*, i64)* %15, i8* (%struct.png_struct_def.62*, i64)** %17, align 8
  %18 = load void (%struct.png_struct_def.62*, i8*)*, void (%struct.png_struct_def.62*, i8*)** %8, align 8
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 127
  store void (%struct.png_struct_def.62*, i8*)* %18, void (%struct.png_struct_def.62*, i8*)** %20, align 8
  br label %21

21:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_mem_ptr(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_struct_def.62*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  %4 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %5 = icmp eq %struct.png_struct_def.62* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %8, i32 0, i32 125
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_process_data(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %13 = icmp eq %struct.png_info_def* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11, %4
  br label %27

15:                                               ; preds = %11
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  call void @png_push_restore_buffer(%struct.png_struct_def* noundef %16, i8* noundef %17, i64 noundef %18)
  br label %19

19:                                               ; preds = %24, %15
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 104
  %22 = load i64, i64* %21, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %26 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_process_some_data(%struct.png_struct_def* noundef %25, %struct.png_info_def* noundef %26)
  br label %19, !llvm.loop !52

27:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_restore_buffer(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 99
  store i8* %7, i8** %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 105
  store i64 %10, i64* %12, align 8
  %13 = load i64, i64* %6, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 102
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %13, %16
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 104
  store i64 %17, i64* %19, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 99
  %22 = load i8*, i8** %21, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 98
  store i8* %22, i8** %24, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_process_some_data(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %23

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 106
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %20 [
    i32 0, label %12
    i32 1, label %15
    i32 2, label %18
  ]

12:                                               ; preds = %8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_push_read_sig(%struct.png_struct_def* noundef %13, %struct.png_info_def* noundef %14)
  br label %23

15:                                               ; preds = %8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %17 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_push_read_chunk(%struct.png_struct_def* noundef %16, %struct.png_info_def* noundef %17)
  br label %23

18:                                               ; preds = %8
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_read_IDAT(%struct.png_struct_def* noundef %19)
  br label %23

20:                                               ; preds = %8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 104
  store i64 0, i64* %22, align 8
  br label %23

23:                                               ; preds = %7, %20, %18, %15, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_read_sig(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 67
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  store i64 %10, i64* %5, align 8
  %11 = load i64, i64* %5, align 8
  %12 = sub i64 8, %11
  store i64 %12, i64* %6, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 104
  %15 = load i64, i64* %14, align 8
  %16 = load i64, i64* %6, align 8
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 104
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %6, align 8
  br label %22

22:                                               ; preds = %18, %2
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %24 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 15
  %26 = load i64, i64* %5, align 8
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %25, i64 0, i64 %26
  %28 = load i64, i64* %6, align 8
  call void @png_push_fill_buffer(%struct.png_struct_def* noundef %23, i8* noundef %27, i64 noundef %28)
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 67
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %32, %33
  %35 = trunc i64 %34 to i8
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 67
  store i8 %35, i8* %37, align 1
  %38 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 15
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 0
  %41 = load i64, i64* %5, align 8
  %42 = load i64, i64* %6, align 8
  %43 = call i32 @png_sig_cmp(i8* noundef %40, i64 noundef %41, i64 noundef %42)
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %22
  %46 = load i64, i64* %5, align 8
  %47 = icmp ult i64 %46, 4
  br i1 %47, label %48, label %59

48:                                               ; preds = %45
  %49 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 15
  %51 = getelementptr inbounds [8 x i8], [8 x i8]* %50, i64 0, i64 0
  %52 = load i64, i64* %5, align 8
  %53 = load i64, i64* %6, align 8
  %54 = sub i64 %53, 4
  %55 = call i32 @png_sig_cmp(i8* noundef %51, i64 noundef %52, i64 noundef %54)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %58, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.121, i64 0, i64 0)) #13
  unreachable

59:                                               ; preds = %48, %45
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %60, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.122, i64 0, i64 0)) #13
  unreachable

61:                                               ; preds = %22
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 67
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = icmp sge i32 %65, 8
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 106
  store i32 1, i32* %69, align 8
  br label %70

70:                                               ; preds = %67, %61
  br label %71

71:                                               ; preds = %70
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_read_chunk(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [4 x i8], align 1
  %8 = alloca [4 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %69

14:                                               ; preds = %2
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 104
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %20)
  br label %713

21:                                               ; preds = %14
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %23 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  call void @png_push_fill_buffer(%struct.png_struct_def* noundef %22, i8* noundef %23, i64 noundef 4)
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %26 = call i32 @png_get_uint_31(%struct.png_struct_def* noundef %24, i8* noundef %25)
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 100
  store i32 %26, i32* %28, align 8
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_reset_crc(%struct.png_struct_def* noundef %29)
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %31 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %30, i8* noundef %31, i32 noundef 4)
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = and i32 255, %34
  %36 = shl i32 %35, 24
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = and i32 255, %39
  %41 = shl i32 %40, 16
  %42 = or i32 %36, %41
  %43 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = and i32 255, %45
  %47 = shl i32 %46, 8
  %48 = or i32 %42, %47
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = and i32 255, %51
  %53 = shl i32 %52, 0
  %54 = or i32 %48, %53
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 44
  store i32 %54, i32* %56, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 44
  %60 = load i32, i32* %59, align 8
  call void @png_check_chunk_name(%struct.png_struct_def* noundef %57, i32 noundef %60)
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 100
  %64 = load i32, i32* %63, align 8
  call void @png_check_chunk_length(%struct.png_struct_def* noundef %61, i32 noundef %64)
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 15
  %67 = load i32, i32* %66, align 4
  %68 = or i32 %67, 256
  store i32 %68, i32* %66, align 4
  br label %69

69:                                               ; preds = %21, %2
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 44
  %72 = load i32, i32* %71, align 8
  store i32 %72, i32* %5, align 4
  %73 = load i32, i32* %5, align 4
  %74 = icmp eq i32 %73, 1229209940
  br i1 %74, label %75, label %144

75:                                               ; preds = %69
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 15
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 8
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %75
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 15
  %84 = load i32, i32* %83, align 4
  %85 = or i32 %84, 8192
  store i32 %85, i32* %83, align 4
  br label %86

86:                                               ; preds = %81, %75
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 15
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %93, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3.117, i64 0, i64 0)) #13
  unreachable

94:                                               ; preds = %86
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 61
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 3
  br i1 %99, label %100, label %108

100:                                              ; preds = %94
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 15
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %100
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %107, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4.118, i64 0, i64 0)) #13
  unreachable

108:                                              ; preds = %100, %94
  br label %109

109:                                              ; preds = %108
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 106
  store i32 2, i32* %111, align 8
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 15
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %109
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 15
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 8192
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %117
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 100
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  br label %713

129:                                              ; preds = %123
  br label %130

130:                                              ; preds = %129, %117
  br label %131

131:                                              ; preds = %130, %109
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 15
  %134 = load i32, i32* %133, align 4
  %135 = or i32 %134, 4
  store i32 %135, i32* %133, align 4
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 15
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, 8
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %131
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %142, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.119, i64 0, i64 0))
  br label %143

143:                                              ; preds = %141, %131
  br label %144

144:                                              ; preds = %143, %69
  %145 = load i32, i32* %5, align 4
  %146 = icmp eq i32 %145, 1229472850
  br i1 %146, label %147, label %172

147:                                              ; preds = %144
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %149 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %148, i32 0, i32 100
  %150 = load i32, i32* %149, align 8
  %151 = icmp ne i32 %150, 13
  br i1 %151, label %152, label %154

152:                                              ; preds = %147
  %153 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %153, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.120, i64 0, i64 0)) #13
  unreachable

154:                                              ; preds = %147
  %155 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %156 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %155, i32 0, i32 100
  %157 = load i32, i32* %156, align 8
  %158 = add i32 %157, 4
  %159 = zext i32 %158 to i64
  %160 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %160, i32 0, i32 104
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %159, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %154
  %165 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %165)
  br label %713

166:                                              ; preds = %154
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %168 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %169, i32 0, i32 100
  %171 = load i32, i32* %170, align 8
  call void @png_handle_IHDR(%struct.png_struct_def* noundef %167, %struct.png_info_def* noundef %168, i32 noundef %171)
  br label %708

172:                                              ; preds = %144
  %173 = load i32, i32* %5, align 4
  %174 = icmp eq i32 %173, 1229278788
  br i1 %174, label %175, label %197

175:                                              ; preds = %172
  %176 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %176, i32 0, i32 100
  %178 = load i32, i32* %177, align 8
  %179 = add i32 %178, 4
  %180 = zext i32 %179 to i64
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %182 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %181, i32 0, i32 104
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %180, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %175
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %186)
  br label %713

187:                                              ; preds = %175
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %189 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %190 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %191 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %190, i32 0, i32 100
  %192 = load i32, i32* %191, align 8
  call void @png_handle_IEND(%struct.png_struct_def* noundef %188, %struct.png_info_def* noundef %189, i32 noundef %192)
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %194 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 106
  store i32 6, i32* %194, align 8
  %195 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %196 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_push_have_end(%struct.png_struct_def* noundef %195, %struct.png_info_def* noundef %196)
  br label %707

197:                                              ; preds = %172
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %199 = load i32, i32* %5, align 4
  %200 = call i32 @png_chunk_unknown_handling(%struct.png_struct_def* noundef %198, i32 noundef %199)
  store i32 %200, i32* %6, align 4
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %202, label %229

202:                                              ; preds = %197
  %203 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %204 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %203, i32 0, i32 100
  %205 = load i32, i32* %204, align 8
  %206 = add i32 %205, 4
  %207 = zext i32 %206 to i64
  %208 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %208, i32 0, i32 104
  %210 = load i64, i64* %209, align 8
  %211 = icmp ugt i64 %207, %210
  br i1 %211, label %212, label %214

212:                                              ; preds = %202
  %213 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %213)
  br label %713

214:                                              ; preds = %202
  %215 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %216 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %217 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %218 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %217, i32 0, i32 100
  %219 = load i32, i32* %218, align 8
  %220 = load i32, i32* %6, align 4
  call void @png_handle_unknown(%struct.png_struct_def* noundef %215, %struct.png_info_def* noundef %216, i32 noundef %219, i32 noundef %220)
  %221 = load i32, i32* %5, align 4
  %222 = icmp eq i32 %221, 1347179589
  br i1 %222, label %223, label %228

223:                                              ; preds = %214
  %224 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %225 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %224, i32 0, i32 15
  %226 = load i32, i32* %225, align 4
  %227 = or i32 %226, 2
  store i32 %227, i32* %225, align 4
  br label %228

228:                                              ; preds = %223, %214
  br label %706

229:                                              ; preds = %197
  %230 = load i32, i32* %5, align 4
  %231 = icmp eq i32 %230, 1347179589
  br i1 %231, label %232, label %250

232:                                              ; preds = %229
  %233 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %234 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %233, i32 0, i32 100
  %235 = load i32, i32* %234, align 8
  %236 = add i32 %235, 4
  %237 = zext i32 %236 to i64
  %238 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %239 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %238, i32 0, i32 104
  %240 = load i64, i64* %239, align 8
  %241 = icmp ugt i64 %237, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %232
  %243 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %243)
  br label %713

244:                                              ; preds = %232
  %245 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %246 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %247 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %248 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %247, i32 0, i32 100
  %249 = load i32, i32* %248, align 8
  call void @png_handle_PLTE(%struct.png_struct_def* noundef %245, %struct.png_info_def* noundef %246, i32 noundef %249)
  br label %705

250:                                              ; preds = %229
  %251 = load i32, i32* %5, align 4
  %252 = icmp eq i32 %251, 1229209940
  br i1 %252, label %253, label %304

253:                                              ; preds = %250
  %254 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %255 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %254, i32 0, i32 100
  %256 = load i32, i32* %255, align 8
  %257 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %258 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %257, i32 0, i32 50
  store i32 %256, i32* %258, align 8
  %259 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %260 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %259, i32 0, i32 106
  store i32 2, i32* %260, align 8
  %261 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %262 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_push_have_info(%struct.png_struct_def* noundef %261, %struct.png_info_def* noundef %262)
  %263 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %264 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %263, i32 0, i32 64
  %265 = load i8, i8* %264, align 2
  %266 = zext i8 %265 to i32
  %267 = icmp sge i32 %266, 8
  br i1 %267, label %268, label %279

268:                                              ; preds = %253
  %269 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %270 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %269, i32 0, i32 42
  %271 = load i32, i32* %270, align 8
  %272 = zext i32 %271 to i64
  %273 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %274 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %273, i32 0, i32 64
  %275 = load i8, i8* %274, align 2
  %276 = zext i8 %275 to i64
  %277 = lshr i64 %276, 3
  %278 = mul i64 %272, %277
  br label %291

279:                                              ; preds = %253
  %280 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %281 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %280, i32 0, i32 42
  %282 = load i32, i32* %281, align 8
  %283 = zext i32 %282 to i64
  %284 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %285 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %284, i32 0, i32 64
  %286 = load i8, i8* %285, align 2
  %287 = zext i8 %286 to i64
  %288 = mul i64 %283, %287
  %289 = add i64 %288, 7
  %290 = lshr i64 %289, 3
  br label %291

291:                                              ; preds = %279, %268
  %292 = phi i64 [ %278, %268 ], [ %290, %279 ]
  %293 = trunc i64 %292 to i32
  %294 = add i32 %293, 1
  %295 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %296 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %295, i32 0, i32 19
  %297 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %296, i32 0, i32 4
  store i32 %294, i32* %297, align 8
  %298 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %299 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %298, i32 0, i32 46
  %300 = load i8*, i8** %299, align 8
  %301 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %302 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %301, i32 0, i32 19
  %303 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %302, i32 0, i32 3
  store i8* %300, i8** %303, align 8
  br label %713

304:                                              ; preds = %250
  %305 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %306 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %305, i32 0, i32 44
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %307, 1732332865
  br i1 %308, label %309, label %327

309:                                              ; preds = %304
  %310 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %311 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %310, i32 0, i32 100
  %312 = load i32, i32* %311, align 8
  %313 = add i32 %312, 4
  %314 = zext i32 %313 to i64
  %315 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %316 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %315, i32 0, i32 104
  %317 = load i64, i64* %316, align 8
  %318 = icmp ugt i64 %314, %317
  br i1 %318, label %319, label %321

319:                                              ; preds = %309
  %320 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %320)
  br label %713

321:                                              ; preds = %309
  %322 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %323 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %324 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %325 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %324, i32 0, i32 100
  %326 = load i32, i32* %325, align 8
  call void @png_handle_gAMA(%struct.png_struct_def* noundef %322, %struct.png_info_def* noundef %323, i32 noundef %326)
  br label %703

327:                                              ; preds = %304
  %328 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %329 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %328, i32 0, i32 44
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %330, 1933723988
  br i1 %331, label %332, label %350

332:                                              ; preds = %327
  %333 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %334 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %333, i32 0, i32 100
  %335 = load i32, i32* %334, align 8
  %336 = add i32 %335, 4
  %337 = zext i32 %336 to i64
  %338 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %339 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %338, i32 0, i32 104
  %340 = load i64, i64* %339, align 8
  %341 = icmp ugt i64 %337, %340
  br i1 %341, label %342, label %344

342:                                              ; preds = %332
  %343 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %343)
  br label %713

344:                                              ; preds = %332
  %345 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %346 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %347 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %348 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %347, i32 0, i32 100
  %349 = load i32, i32* %348, align 8
  call void @png_handle_sBIT(%struct.png_struct_def* noundef %345, %struct.png_info_def* noundef %346, i32 noundef %349)
  br label %702

350:                                              ; preds = %327
  %351 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %352 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %351, i32 0, i32 44
  %353 = load i32, i32* %352, align 8
  %354 = icmp eq i32 %353, 1665684045
  br i1 %354, label %355, label %373

355:                                              ; preds = %350
  %356 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %357 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %356, i32 0, i32 100
  %358 = load i32, i32* %357, align 8
  %359 = add i32 %358, 4
  %360 = zext i32 %359 to i64
  %361 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %362 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %361, i32 0, i32 104
  %363 = load i64, i64* %362, align 8
  %364 = icmp ugt i64 %360, %363
  br i1 %364, label %365, label %367

365:                                              ; preds = %355
  %366 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %366)
  br label %713

367:                                              ; preds = %355
  %368 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %369 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %370 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %371 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %370, i32 0, i32 100
  %372 = load i32, i32* %371, align 8
  call void @png_handle_cHRM(%struct.png_struct_def* noundef %368, %struct.png_info_def* noundef %369, i32 noundef %372)
  br label %701

373:                                              ; preds = %350
  %374 = load i32, i32* %5, align 4
  %375 = icmp eq i32 %374, 1934772034
  br i1 %375, label %376, label %394

376:                                              ; preds = %373
  %377 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %378 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %377, i32 0, i32 100
  %379 = load i32, i32* %378, align 8
  %380 = add i32 %379, 4
  %381 = zext i32 %380 to i64
  %382 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %383 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %382, i32 0, i32 104
  %384 = load i64, i64* %383, align 8
  %385 = icmp ugt i64 %381, %384
  br i1 %385, label %386, label %388

386:                                              ; preds = %376
  %387 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %387)
  br label %713

388:                                              ; preds = %376
  %389 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %390 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %391 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %392 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %391, i32 0, i32 100
  %393 = load i32, i32* %392, align 8
  call void @png_handle_sRGB(%struct.png_struct_def* noundef %389, %struct.png_info_def* noundef %390, i32 noundef %393)
  br label %700

394:                                              ; preds = %373
  %395 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %396 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %395, i32 0, i32 44
  %397 = load i32, i32* %396, align 8
  %398 = icmp eq i32 %397, 1766015824
  br i1 %398, label %399, label %417

399:                                              ; preds = %394
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %401 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %400, i32 0, i32 100
  %402 = load i32, i32* %401, align 8
  %403 = add i32 %402, 4
  %404 = zext i32 %403 to i64
  %405 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %406 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %405, i32 0, i32 104
  %407 = load i64, i64* %406, align 8
  %408 = icmp ugt i64 %404, %407
  br i1 %408, label %409, label %411

409:                                              ; preds = %399
  %410 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %410)
  br label %713

411:                                              ; preds = %399
  %412 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %413 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %414 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %415 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %414, i32 0, i32 100
  %416 = load i32, i32* %415, align 8
  call void @png_handle_iCCP(%struct.png_struct_def* noundef %412, %struct.png_info_def* noundef %413, i32 noundef %416)
  br label %699

417:                                              ; preds = %394
  %418 = load i32, i32* %5, align 4
  %419 = icmp eq i32 %418, 1934642260
  br i1 %419, label %420, label %438

420:                                              ; preds = %417
  %421 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %422 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %421, i32 0, i32 100
  %423 = load i32, i32* %422, align 8
  %424 = add i32 %423, 4
  %425 = zext i32 %424 to i64
  %426 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %427 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %426, i32 0, i32 104
  %428 = load i64, i64* %427, align 8
  %429 = icmp ugt i64 %425, %428
  br i1 %429, label %430, label %432

430:                                              ; preds = %420
  %431 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %431)
  br label %713

432:                                              ; preds = %420
  %433 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %434 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %435 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %436 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %435, i32 0, i32 100
  %437 = load i32, i32* %436, align 8
  call void @png_handle_sPLT(%struct.png_struct_def* noundef %433, %struct.png_info_def* noundef %434, i32 noundef %437)
  br label %698

438:                                              ; preds = %417
  %439 = load i32, i32* %5, align 4
  %440 = icmp eq i32 %439, 1951551059
  br i1 %440, label %441, label %459

441:                                              ; preds = %438
  %442 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %443 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %442, i32 0, i32 100
  %444 = load i32, i32* %443, align 8
  %445 = add i32 %444, 4
  %446 = zext i32 %445 to i64
  %447 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %448 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %447, i32 0, i32 104
  %449 = load i64, i64* %448, align 8
  %450 = icmp ugt i64 %446, %449
  br i1 %450, label %451, label %453

451:                                              ; preds = %441
  %452 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %452)
  br label %713

453:                                              ; preds = %441
  %454 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %455 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %456 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %457 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %456, i32 0, i32 100
  %458 = load i32, i32* %457, align 8
  call void @png_handle_tRNS(%struct.png_struct_def* noundef %454, %struct.png_info_def* noundef %455, i32 noundef %458)
  br label %697

459:                                              ; preds = %438
  %460 = load i32, i32* %5, align 4
  %461 = icmp eq i32 %460, 1649100612
  br i1 %461, label %462, label %480

462:                                              ; preds = %459
  %463 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %464 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %463, i32 0, i32 100
  %465 = load i32, i32* %464, align 8
  %466 = add i32 %465, 4
  %467 = zext i32 %466 to i64
  %468 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %469 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %468, i32 0, i32 104
  %470 = load i64, i64* %469, align 8
  %471 = icmp ugt i64 %467, %470
  br i1 %471, label %472, label %474

472:                                              ; preds = %462
  %473 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %473)
  br label %713

474:                                              ; preds = %462
  %475 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %476 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %477 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %478 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %477, i32 0, i32 100
  %479 = load i32, i32* %478, align 8
  call void @png_handle_bKGD(%struct.png_struct_def* noundef %475, %struct.png_info_def* noundef %476, i32 noundef %479)
  br label %696

480:                                              ; preds = %459
  %481 = load i32, i32* %5, align 4
  %482 = icmp eq i32 %481, 1749635924
  br i1 %482, label %483, label %501

483:                                              ; preds = %480
  %484 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %485 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %484, i32 0, i32 100
  %486 = load i32, i32* %485, align 8
  %487 = add i32 %486, 4
  %488 = zext i32 %487 to i64
  %489 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %490 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %489, i32 0, i32 104
  %491 = load i64, i64* %490, align 8
  %492 = icmp ugt i64 %488, %491
  br i1 %492, label %493, label %495

493:                                              ; preds = %483
  %494 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %494)
  br label %713

495:                                              ; preds = %483
  %496 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %497 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %498 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %499 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %498, i32 0, i32 100
  %500 = load i32, i32* %499, align 8
  call void @png_handle_hIST(%struct.png_struct_def* noundef %496, %struct.png_info_def* noundef %497, i32 noundef %500)
  br label %695

501:                                              ; preds = %480
  %502 = load i32, i32* %5, align 4
  %503 = icmp eq i32 %502, 1883789683
  br i1 %503, label %504, label %522

504:                                              ; preds = %501
  %505 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %506 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %505, i32 0, i32 100
  %507 = load i32, i32* %506, align 8
  %508 = add i32 %507, 4
  %509 = zext i32 %508 to i64
  %510 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %511 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %510, i32 0, i32 104
  %512 = load i64, i64* %511, align 8
  %513 = icmp ugt i64 %509, %512
  br i1 %513, label %514, label %516

514:                                              ; preds = %504
  %515 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %515)
  br label %713

516:                                              ; preds = %504
  %517 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %518 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %519 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %520 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %519, i32 0, i32 100
  %521 = load i32, i32* %520, align 8
  call void @png_handle_pHYs(%struct.png_struct_def* noundef %517, %struct.png_info_def* noundef %518, i32 noundef %521)
  br label %694

522:                                              ; preds = %501
  %523 = load i32, i32* %5, align 4
  %524 = icmp eq i32 %523, 1866876531
  br i1 %524, label %525, label %543

525:                                              ; preds = %522
  %526 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %527 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %526, i32 0, i32 100
  %528 = load i32, i32* %527, align 8
  %529 = add i32 %528, 4
  %530 = zext i32 %529 to i64
  %531 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %532 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %531, i32 0, i32 104
  %533 = load i64, i64* %532, align 8
  %534 = icmp ugt i64 %530, %533
  br i1 %534, label %535, label %537

535:                                              ; preds = %525
  %536 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %536)
  br label %713

537:                                              ; preds = %525
  %538 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %539 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %540 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %541 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %540, i32 0, i32 100
  %542 = load i32, i32* %541, align 8
  call void @png_handle_oFFs(%struct.png_struct_def* noundef %538, %struct.png_info_def* noundef %539, i32 noundef %542)
  br label %693

543:                                              ; preds = %522
  %544 = load i32, i32* %5, align 4
  %545 = icmp eq i32 %544, 1883455820
  br i1 %545, label %546, label %564

546:                                              ; preds = %543
  %547 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %548 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %547, i32 0, i32 100
  %549 = load i32, i32* %548, align 8
  %550 = add i32 %549, 4
  %551 = zext i32 %550 to i64
  %552 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %553 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %552, i32 0, i32 104
  %554 = load i64, i64* %553, align 8
  %555 = icmp ugt i64 %551, %554
  br i1 %555, label %556, label %558

556:                                              ; preds = %546
  %557 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %557)
  br label %713

558:                                              ; preds = %546
  %559 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %560 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %561 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %562 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %561, i32 0, i32 100
  %563 = load i32, i32* %562, align 8
  call void @png_handle_pCAL(%struct.png_struct_def* noundef %559, %struct.png_info_def* noundef %560, i32 noundef %563)
  br label %692

564:                                              ; preds = %543
  %565 = load i32, i32* %5, align 4
  %566 = icmp eq i32 %565, 1933787468
  br i1 %566, label %567, label %585

567:                                              ; preds = %564
  %568 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %569 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %568, i32 0, i32 100
  %570 = load i32, i32* %569, align 8
  %571 = add i32 %570, 4
  %572 = zext i32 %571 to i64
  %573 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %574 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %573, i32 0, i32 104
  %575 = load i64, i64* %574, align 8
  %576 = icmp ugt i64 %572, %575
  br i1 %576, label %577, label %579

577:                                              ; preds = %567
  %578 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %578)
  br label %713

579:                                              ; preds = %567
  %580 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %581 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %582 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %583 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %582, i32 0, i32 100
  %584 = load i32, i32* %583, align 8
  call void @png_handle_sCAL(%struct.png_struct_def* noundef %580, %struct.png_info_def* noundef %581, i32 noundef %584)
  br label %691

585:                                              ; preds = %564
  %586 = load i32, i32* %5, align 4
  %587 = icmp eq i32 %586, 1950960965
  br i1 %587, label %588, label %606

588:                                              ; preds = %585
  %589 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %590 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %589, i32 0, i32 100
  %591 = load i32, i32* %590, align 8
  %592 = add i32 %591, 4
  %593 = zext i32 %592 to i64
  %594 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %595 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %594, i32 0, i32 104
  %596 = load i64, i64* %595, align 8
  %597 = icmp ugt i64 %593, %596
  br i1 %597, label %598, label %600

598:                                              ; preds = %588
  %599 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %599)
  br label %713

600:                                              ; preds = %588
  %601 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %602 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %603 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %604 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %603, i32 0, i32 100
  %605 = load i32, i32* %604, align 8
  call void @png_handle_tIME(%struct.png_struct_def* noundef %601, %struct.png_info_def* noundef %602, i32 noundef %605)
  br label %690

606:                                              ; preds = %585
  %607 = load i32, i32* %5, align 4
  %608 = icmp eq i32 %607, 1950701684
  br i1 %608, label %609, label %627

609:                                              ; preds = %606
  %610 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %611 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %610, i32 0, i32 100
  %612 = load i32, i32* %611, align 8
  %613 = add i32 %612, 4
  %614 = zext i32 %613 to i64
  %615 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %616 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %615, i32 0, i32 104
  %617 = load i64, i64* %616, align 8
  %618 = icmp ugt i64 %614, %617
  br i1 %618, label %619, label %621

619:                                              ; preds = %609
  %620 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %620)
  br label %713

621:                                              ; preds = %609
  %622 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %623 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %624 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %625 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %624, i32 0, i32 100
  %626 = load i32, i32* %625, align 8
  call void @png_handle_tEXt(%struct.png_struct_def* noundef %622, %struct.png_info_def* noundef %623, i32 noundef %626)
  br label %689

627:                                              ; preds = %606
  %628 = load i32, i32* %5, align 4
  %629 = icmp eq i32 %628, 2052348020
  br i1 %629, label %630, label %648

630:                                              ; preds = %627
  %631 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %632 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %631, i32 0, i32 100
  %633 = load i32, i32* %632, align 8
  %634 = add i32 %633, 4
  %635 = zext i32 %634 to i64
  %636 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %637 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %636, i32 0, i32 104
  %638 = load i64, i64* %637, align 8
  %639 = icmp ugt i64 %635, %638
  br i1 %639, label %640, label %642

640:                                              ; preds = %630
  %641 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %641)
  br label %713

642:                                              ; preds = %630
  %643 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %644 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %645 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %646 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %645, i32 0, i32 100
  %647 = load i32, i32* %646, align 8
  call void @png_handle_zTXt(%struct.png_struct_def* noundef %643, %struct.png_info_def* noundef %644, i32 noundef %647)
  br label %688

648:                                              ; preds = %627
  %649 = load i32, i32* %5, align 4
  %650 = icmp eq i32 %649, 1767135348
  br i1 %650, label %651, label %669

651:                                              ; preds = %648
  %652 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %653 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %652, i32 0, i32 100
  %654 = load i32, i32* %653, align 8
  %655 = add i32 %654, 4
  %656 = zext i32 %655 to i64
  %657 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %658 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %657, i32 0, i32 104
  %659 = load i64, i64* %658, align 8
  %660 = icmp ugt i64 %656, %659
  br i1 %660, label %661, label %663

661:                                              ; preds = %651
  %662 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %662)
  br label %713

663:                                              ; preds = %651
  %664 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %665 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %666 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %667 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %666, i32 0, i32 100
  %668 = load i32, i32* %667, align 8
  call void @png_handle_iTXt(%struct.png_struct_def* noundef %664, %struct.png_info_def* noundef %665, i32 noundef %668)
  br label %687

669:                                              ; preds = %648
  %670 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %671 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %670, i32 0, i32 100
  %672 = load i32, i32* %671, align 8
  %673 = add i32 %672, 4
  %674 = zext i32 %673 to i64
  %675 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %676 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %675, i32 0, i32 104
  %677 = load i64, i64* %676, align 8
  %678 = icmp ugt i64 %674, %677
  br i1 %678, label %679, label %681

679:                                              ; preds = %669
  %680 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %680)
  br label %713

681:                                              ; preds = %669
  %682 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %683 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %684 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %685 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %684, i32 0, i32 100
  %686 = load i32, i32* %685, align 8
  call void @png_handle_unknown(%struct.png_struct_def* noundef %682, %struct.png_info_def* noundef %683, i32 noundef %686, i32 noundef 0)
  br label %687

687:                                              ; preds = %681, %663
  br label %688

688:                                              ; preds = %687, %642
  br label %689

689:                                              ; preds = %688, %621
  br label %690

690:                                              ; preds = %689, %600
  br label %691

691:                                              ; preds = %690, %579
  br label %692

692:                                              ; preds = %691, %558
  br label %693

693:                                              ; preds = %692, %537
  br label %694

694:                                              ; preds = %693, %516
  br label %695

695:                                              ; preds = %694, %495
  br label %696

696:                                              ; preds = %695, %474
  br label %697

697:                                              ; preds = %696, %453
  br label %698

698:                                              ; preds = %697, %432
  br label %699

699:                                              ; preds = %698, %411
  br label %700

700:                                              ; preds = %699, %388
  br label %701

701:                                              ; preds = %700, %367
  br label %702

702:                                              ; preds = %701, %344
  br label %703

703:                                              ; preds = %702, %321
  br label %704

704:                                              ; preds = %703
  br label %705

705:                                              ; preds = %704, %244
  br label %706

706:                                              ; preds = %705, %228
  br label %707

707:                                              ; preds = %706, %187
  br label %708

708:                                              ; preds = %707, %166
  %709 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %710 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %709, i32 0, i32 15
  %711 = load i32, i32* %710, align 4
  %712 = and i32 %711, -257
  store i32 %712, i32* %710, align 4
  br label %713

713:                                              ; preds = %708, %679, %661, %640, %619, %598, %577, %556, %535, %514, %493, %472, %451, %430, %409, %386, %365, %342, %319, %291, %242, %212, %185, %164, %128, %19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_read_IDAT(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca [4 x i8], align 1
  %4 = alloca [4 x i8], align 1
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %82

14:                                               ; preds = %1
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 104
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %20)
  br label %223

21:                                               ; preds = %14
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  call void @png_push_fill_buffer(%struct.png_struct_def* noundef %22, i8* noundef %23, i64 noundef 4)
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  %26 = call i32 @png_get_uint_31(%struct.png_struct_def* noundef %24, i8* noundef %25)
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 100
  store i32 %26, i32* %28, align 8
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_reset_crc(%struct.png_struct_def* noundef %29)
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %31 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %30, i8* noundef %31, i32 noundef 4)
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = and i32 255, %34
  %36 = shl i32 %35, 24
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = and i32 255, %39
  %41 = shl i32 %40, 16
  %42 = or i32 %36, %41
  %43 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = and i32 255, %45
  %47 = shl i32 %46, 8
  %48 = or i32 %42, %47
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = and i32 255, %51
  %53 = shl i32 %52, 0
  %54 = or i32 %48, %53
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 44
  store i32 %54, i32* %56, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 15
  %59 = load i32, i32* %58, align 4
  %60 = or i32 %59, 256
  store i32 %60, i32* %58, align 4
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 44
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, 1229209940
  br i1 %64, label %65, label %76

65:                                               ; preds = %21
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 106
  store i32 1, i32* %67, align 8
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 16
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %65
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %74, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.104, i64 0, i64 0)) #13
  unreachable

75:                                               ; preds = %65
  br label %223

76:                                               ; preds = %21
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 100
  %79 = load i32, i32* %78, align 8
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 50
  store i32 %79, i32* %81, align 8
  br label %82

82:                                               ; preds = %76, %1
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %84 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %83, i32 0, i32 50
  %85 = load i32, i32* %84, align 8
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %140

87:                                               ; preds = %82
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 102
  %90 = load i64, i64* %89, align 8
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %140

92:                                               ; preds = %87
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %94 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %93, i32 0, i32 102
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %5, align 8
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 50
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %6, align 4
  %99 = load i32, i32* %6, align 4
  %100 = zext i32 %99 to i64
  %101 = load i64, i64* %5, align 8
  %102 = icmp ult i64 %100, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %92
  %104 = load i32, i32* %6, align 4
  %105 = zext i32 %104 to i64
  store i64 %105, i64* %5, align 8
  br label %109

106:                                              ; preds = %92
  %107 = load i64, i64* %5, align 8
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %6, align 4
  br label %109

109:                                              ; preds = %106, %103
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 96
  %113 = load i8*, i8** %112, align 8
  %114 = load i64, i64* %5, align 8
  call void @png_calculate_crc(%struct.png_struct_def* noundef %110, i8* noundef %113, i64 noundef %114)
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 96
  %118 = load i8*, i8** %117, align 8
  %119 = load i64, i64* %5, align 8
  call void @png_process_IDAT_data(%struct.png_struct_def* noundef %115, i8* noundef %118, i64 noundef %119)
  %120 = load i32, i32* %6, align 4
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 50
  %123 = load i32, i32* %122, align 8
  %124 = sub i32 %123, %120
  store i32 %124, i32* %122, align 8
  %125 = load i64, i64* %5, align 8
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %127 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %126, i32 0, i32 104
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %128, %125
  store i64 %129, i64* %127, align 8
  %130 = load i64, i64* %5, align 8
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 102
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %133, %130
  store i64 %134, i64* %132, align 8
  %135 = load i64, i64* %5, align 8
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 96
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %135
  store i8* %139, i8** %137, align 8
  br label %140

140:                                              ; preds = %109, %87, %82
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 50
  %143 = load i32, i32* %142, align 8
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %198

145:                                              ; preds = %140
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %147 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %146, i32 0, i32 105
  %148 = load i64, i64* %147, align 8
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %198

150:                                              ; preds = %145
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 105
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %7, align 8
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %155 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 50
  %156 = load i32, i32* %155, align 8
  store i32 %156, i32* %8, align 4
  %157 = load i32, i32* %8, align 4
  %158 = zext i32 %157 to i64
  %159 = load i64, i64* %7, align 8
  %160 = icmp ult i64 %158, %159
  br i1 %160, label %161, label %164

161:                                              ; preds = %150
  %162 = load i32, i32* %8, align 4
  %163 = zext i32 %162 to i64
  store i64 %163, i64* %7, align 8
  br label %167

164:                                              ; preds = %150
  %165 = load i64, i64* %7, align 8
  %166 = trunc i64 %165 to i32
  store i32 %166, i32* %8, align 4
  br label %167

167:                                              ; preds = %164, %161
  %168 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %169, i32 0, i32 98
  %171 = load i8*, i8** %170, align 8
  %172 = load i64, i64* %7, align 8
  call void @png_calculate_crc(%struct.png_struct_def* noundef %168, i8* noundef %171, i64 noundef %172)
  %173 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %175 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %174, i32 0, i32 98
  %176 = load i8*, i8** %175, align 8
  %177 = load i64, i64* %7, align 8
  call void @png_process_IDAT_data(%struct.png_struct_def* noundef %173, i8* noundef %176, i64 noundef %177)
  %178 = load i32, i32* %8, align 4
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %180 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %179, i32 0, i32 50
  %181 = load i32, i32* %180, align 8
  %182 = sub i32 %181, %178
  store i32 %182, i32* %180, align 8
  %183 = load i64, i64* %7, align 8
  %184 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %185 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %184, i32 0, i32 104
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %186, %183
  store i64 %187, i64* %185, align 8
  %188 = load i64, i64* %7, align 8
  %189 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %190 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %189, i32 0, i32 105
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 %191, %188
  store i64 %192, i64* %190, align 8
  %193 = load i64, i64* %7, align 8
  %194 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %195 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %194, i32 0, i32 98
  %196 = load i8*, i8** %195, align 8
  %197 = getelementptr inbounds i8, i8* %196, i64 %193
  store i8* %197, i8** %195, align 8
  br label %198

198:                                              ; preds = %167, %145, %140
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %200 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %199, i32 0, i32 50
  %201 = load i32, i32* %200, align 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %223

203:                                              ; preds = %198
  %204 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %205 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %204, i32 0, i32 104
  %206 = load i64, i64* %205, align 8
  %207 = icmp ult i64 %206, 4
  br i1 %207, label %208, label %210

208:                                              ; preds = %203
  %209 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %209)
  br label %223

210:                                              ; preds = %203
  %211 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %212 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %211, i32 noundef 0)
  %213 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %214 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %213, i32 0, i32 15
  %215 = load i32, i32* %214, align 4
  %216 = and i32 %215, -257
  store i32 %216, i32* %214, align 4
  %217 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %218 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %217, i32 0, i32 15
  %219 = load i32, i32* %218, align 4
  %220 = or i32 %219, 8
  store i32 %220, i32* %218, align 4
  %221 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %222 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %221, i32 0, i32 18
  store i32 0, i32* %222, align 8
  br label %223

223:                                              ; preds = %19, %75, %208, %210, %198
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_save_buffer(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 102
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %48

13:                                               ; preds = %1
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 96
  %16 = load i8*, i8** %15, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 97
  %19 = load i8*, i8** %18, align 8
  %20 = icmp ne i8* %16, %19
  br i1 %20, label %21, label %47

21:                                               ; preds = %13
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 102
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %4, align 8
  store i64 0, i64* %3, align 8
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 96
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %5, align 8
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 97
  %30 = load i8*, i8** %29, align 8
  store i8* %30, i8** %6, align 8
  br label %31

31:                                               ; preds = %39, %21
  %32 = load i64, i64* %3, align 8
  %33 = load i64, i64* %4, align 8
  %34 = icmp ult i64 %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %31
  %36 = load i8*, i8** %5, align 8
  %37 = load i8, i8* %36, align 1
  %38 = load i8*, i8** %6, align 8
  store i8 %37, i8* %38, align 1
  br label %39

39:                                               ; preds = %35
  %40 = load i64, i64* %3, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %3, align 8
  %42 = load i8*, i8** %5, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %5, align 8
  %44 = load i8*, i8** %6, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %6, align 8
  br label %31, !llvm.loop !53

46:                                               ; preds = %31
  br label %47

47:                                               ; preds = %46, %13
  br label %48

48:                                               ; preds = %47, %1
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 102
  %51 = load i64, i64* %50, align 8
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 105
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %51, %54
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 103
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %55, %58
  br i1 %59, label %60, label %122

60:                                               ; preds = %48
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 102
  %63 = load i64, i64* %62, align 8
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 105
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 256
  %68 = sub i64 -1, %67
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %60
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %71, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7.114, i64 0, i64 0)) #13
  unreachable

72:                                               ; preds = %60
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 102
  %75 = load i64, i64* %74, align 8
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 105
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %75, %78
  %80 = add i64 %79, 256
  store i64 %80, i64* %7, align 8
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 97
  %83 = load i8*, i8** %82, align 8
  store i8* %83, i8** %8, align 8
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %85 = load i64, i64* %7, align 8
  %86 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %84, i64 noundef %85)
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 97
  store i8* %86, i8** %88, align 8
  %89 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %89, i32 0, i32 97
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %72
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %95 = load i8*, i8** %8, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %94, i8* noundef %95)
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %96, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.115, i64 0, i64 0)) #13
  unreachable

97:                                               ; preds = %72
  %98 = load i8*, i8** %8, align 8
  %99 = icmp ne i8* %98, null
  br i1 %99, label %100, label %108

100:                                              ; preds = %97
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 97
  %103 = load i8*, i8** %102, align 8
  %104 = load i8*, i8** %8, align 8
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 102
  %107 = load i64, i64* %106, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %104, i64 %107, i1 false)
  br label %116

108:                                              ; preds = %97
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 102
  %111 = load i64, i64* %110, align 8
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %114, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.116, i64 0, i64 0)) #13
  unreachable

115:                                              ; preds = %108
  br label %116

116:                                              ; preds = %115, %100
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %118 = load i8*, i8** %8, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %117, i8* noundef %118)
  %119 = load i64, i64* %7, align 8
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %120, i32 0, i32 103
  store i64 %119, i64* %121, align 8
  br label %122

122:                                              ; preds = %116, %48
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %124 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %123, i32 0, i32 105
  %125 = load i64, i64* %124, align 8
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %150

127:                                              ; preds = %122
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 97
  %130 = load i8*, i8** %129, align 8
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 102
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i8, i8* %130, i64 %133
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %135, i32 0, i32 98
  %137 = load i8*, i8** %136, align 8
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %138, i32 0, i32 105
  %140 = load i64, i64* %139, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %134, i8* align 1 %137, i64 %140, i1 false)
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 105
  %143 = load i64, i64* %142, align 8
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %144, i32 0, i32 102
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, %143
  store i64 %147, i64* %145, align 8
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %149 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %148, i32 0, i32 105
  store i64 0, i64* %149, align 8
  br label %150

150:                                              ; preds = %127, %122
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 97
  %153 = load i8*, i8** %152, align 8
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %155 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 96
  store i8* %153, i8** %155, align 8
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %157 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %156, i32 0, i32 104
  store i64 0, i64* %157, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_fill_buffer(%struct.png_struct_def* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  br label %99

13:                                               ; preds = %3
  %14 = load i8*, i8** %5, align 8
  store i8* %14, i8** %7, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 102
  %17 = load i64, i64* %16, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %58

19:                                               ; preds = %13
  %20 = load i64, i64* %6, align 8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 102
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %20, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = load i64, i64* %6, align 8
  store i64 %26, i64* %8, align 8
  br label %31

27:                                               ; preds = %19
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 102
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %8, align 8
  br label %31

31:                                               ; preds = %27, %25
  %32 = load i8*, i8** %7, align 8
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 96
  %35 = load i8*, i8** %34, align 8
  %36 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %35, i64 %36, i1 false)
  %37 = load i64, i64* %8, align 8
  %38 = load i64, i64* %6, align 8
  %39 = sub i64 %38, %37
  store i64 %39, i64* %6, align 8
  %40 = load i64, i64* %8, align 8
  %41 = load i8*, i8** %7, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  store i8* %42, i8** %7, align 8
  %43 = load i64, i64* %8, align 8
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 104
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %43
  store i64 %47, i64* %45, align 8
  %48 = load i64, i64* %8, align 8
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 102
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %51, %48
  store i64 %52, i64* %50, align 8
  %53 = load i64, i64* %8, align 8
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 96
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %53
  store i8* %57, i8** %55, align 8
  br label %58

58:                                               ; preds = %31, %13
  %59 = load i64, i64* %6, align 8
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %61, label %99

61:                                               ; preds = %58
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 105
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %66, label %99

66:                                               ; preds = %61
  %67 = load i64, i64* %6, align 8
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 105
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %67, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = load i64, i64* %6, align 8
  store i64 %73, i64* %9, align 8
  br label %78

74:                                               ; preds = %66
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 105
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %9, align 8
  br label %78

78:                                               ; preds = %74, %72
  %79 = load i8*, i8** %7, align 8
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 98
  %82 = load i8*, i8** %81, align 8
  %83 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %82, i64 %83, i1 false)
  %84 = load i64, i64* %9, align 8
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 104
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %87, %84
  store i64 %88, i64* %86, align 8
  %89 = load i64, i64* %9, align 8
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 105
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %92, %89
  store i64 %93, i64* %91, align 8
  %94 = load i64, i64* %9, align 8
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 98
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %94
  store i8* %98, i8** %96, align 8
  br label %99

99:                                               ; preds = %12, %78, %61, %58
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_process_IDAT_data(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load i64, i64* %6, align 8
  %9 = icmp ugt i64 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = load i8*, i8** %5, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %10, %3
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %14, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.105, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %10
  %16 = load i8*, i8** %5, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 19
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %18, i32 0, i32 0
  store i8* %16, i8** %19, align 8
  %20 = load i64, i64* %6, align 8
  %21 = trunc i64 %20 to i32
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 19
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %23, i32 0, i32 1
  store i32 %21, i32* %24, align 8
  br label %25

25:                                               ; preds = %174, %15
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 19
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ugt i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 16
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 8
  %36 = icmp eq i32 %35, 0
  br label %37

37:                                               ; preds = %31, %25
  %38 = phi i1 [ false, %25 ], [ %36, %31 ]
  br i1 %38, label %39, label %175

39:                                               ; preds = %37
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 19
  %42 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %41, i32 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp ugt i32 %43, 0
  br i1 %44, label %87, label %45

45:                                               ; preds = %39
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 64
  %48 = load i8, i8* %47, align 2
  %49 = zext i8 %48 to i32
  %50 = icmp sge i32 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %45
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 42
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %54 to i64
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 64
  %58 = load i8, i8* %57, align 2
  %59 = zext i8 %58 to i64
  %60 = lshr i64 %59, 3
  %61 = mul i64 %55, %60
  br label %74

62:                                               ; preds = %45
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 42
  %65 = load i32, i32* %64, align 8
  %66 = zext i32 %65 to i64
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 64
  %69 = load i8, i8* %68, align 2
  %70 = zext i8 %69 to i64
  %71 = mul i64 %66, %70
  %72 = add i64 %71, 7
  %73 = lshr i64 %72, 3
  br label %74

74:                                               ; preds = %62, %51
  %75 = phi i64 [ %61, %51 ], [ %73, %62 ]
  %76 = add i64 %75, 1
  %77 = trunc i64 %76 to i32
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 19
  %80 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %79, i32 0, i32 4
  store i32 %77, i32* %80, align 8
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 46
  %83 = load i8*, i8** %82, align 8
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 19
  %86 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %85, i32 0, i32 3
  store i8* %83, i8** %86, align 8
  br label %87

87:                                               ; preds = %74, %39
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %89 = call i32 @png_zlib_inflate(%struct.png_struct_def* noundef %88, i32 noundef 2)
  store i32 %89, i32* %7, align 4
  %90 = load i32, i32* %7, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %126

92:                                               ; preds = %87
  %93 = load i32, i32* %7, align 4
  %94 = icmp ne i32 %93, 1
  br i1 %94, label %95, label %126

95:                                               ; preds = %92
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 16
  %98 = load i32, i32* %97, align 8
  %99 = or i32 %98, 8
  store i32 %99, i32* %97, align 8
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 18
  store i32 0, i32* %101, align 8
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 43
  %104 = load i32, i32* %103, align 4
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 39
  %107 = load i32, i32* %106, align 8
  %108 = icmp uge i32 %104, %107
  br i1 %108, label %115, label %109

109:                                              ; preds = %95
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 59
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp sgt i32 %113, 6
  br i1 %114, label %115, label %117

115:                                              ; preds = %109, %95
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %116, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.106, i64 0, i64 0))
  br label %125

117:                                              ; preds = %109
  %118 = load i32, i32* %7, align 4
  %119 = icmp eq i32 %118, -3
  br i1 %119, label %120, label %122

120:                                              ; preds = %117
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %121, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13.107, i64 0, i64 0))
  br label %124

122:                                              ; preds = %117
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %123, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.108, i64 0, i64 0)) #13
  unreachable

124:                                              ; preds = %120
  br label %125

125:                                              ; preds = %124, %115
  br label %183

126:                                              ; preds = %92, %87
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 19
  %129 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %128, i32 0, i32 3
  %130 = load i8*, i8** %129, align 8
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 46
  %133 = load i8*, i8** %132, align 8
  %134 = icmp ne i8* %130, %133
  br i1 %134, label %135, label %166

135:                                              ; preds = %126
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 43
  %138 = load i32, i32* %137, align 4
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %140 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %139, i32 0, i32 39
  %141 = load i32, i32* %140, align 8
  %142 = icmp uge i32 %138, %141
  br i1 %142, label %149, label %143

143:                                              ; preds = %135
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %144, i32 0, i32 59
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp sgt i32 %147, 6
  br i1 %148, label %149, label %157

149:                                              ; preds = %143, %135
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %150, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.109, i64 0, i64 0))
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 16
  %153 = load i32, i32* %152, align 8
  %154 = or i32 %153, 8
  store i32 %154, i32* %152, align 8
  %155 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %156 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %155, i32 0, i32 18
  store i32 0, i32* %156, align 8
  br label %183

157:                                              ; preds = %143
  %158 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %158, i32 0, i32 19
  %160 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %159, i32 0, i32 4
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_push_process_row(%struct.png_struct_def* noundef %164)
  br label %165

165:                                              ; preds = %163, %157
  br label %166

166:                                              ; preds = %165, %126
  %167 = load i32, i32* %7, align 4
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %174

169:                                              ; preds = %166
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %170, i32 0, i32 16
  %172 = load i32, i32* %171, align 8
  %173 = or i32 %172, 8
  store i32 %173, i32* %171, align 8
  br label %174

174:                                              ; preds = %169, %166
  br label %25, !llvm.loop !54

175:                                              ; preds = %37
  %176 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %176, i32 0, i32 19
  %178 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = icmp ugt i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %175
  %182 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %182, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.110, i64 0, i64 0))
  br label %183

183:                                              ; preds = %125, %149, %181, %175
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_process_row(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca %struct.png_row_info_struct, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 42
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 0
  store i32 %12, i32* %13, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 61
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 2
  store i8 %16, i8* %17, align 8
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 62
  %20 = load i8, i8* %19, align 8
  %21 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 3
  store i8 %20, i8* %21, align 1
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 65
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 4
  store i8 %24, i8* %25, align 2
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 64
  %28 = load i8, i8* %27, align 2
  %29 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp sge i32 %32, 8
  br i1 %33, label %34, label %43

34:                                               ; preds = %1
  %35 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = lshr i64 %40, 3
  %42 = mul i64 %37, %41
  br label %53

43:                                               ; preds = %1
  %44 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = mul i64 %46, %49
  %51 = add i64 %50, 7
  %52 = lshr i64 %51, 3
  br label %53

53:                                               ; preds = %43, %34
  %54 = phi i64 [ %42, %34 ], [ %52, %43 ]
  %55 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 1
  store i64 %54, i64* %55, align 8
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 46
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 0
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %90

63:                                               ; preds = %53
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 46
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = icmp slt i32 %69, 5
  br i1 %70, label %71, label %87

71:                                               ; preds = %63
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 46
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 45
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 1
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 46
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  call void @png_read_filter_row(%struct.png_struct_def* noundef %72, %struct.png_row_info_struct* noundef %3, i8* noundef %76, i8* noundef %80, i32 noundef %86)
  br label %89

87:                                               ; preds = %63
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %88, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17.111, i64 0, i64 0)) #13
  unreachable

89:                                               ; preds = %71
  br label %90

90:                                               ; preds = %89, %53
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %91, i32 0, i32 45
  %93 = load i8*, i8** %92, align 8
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 46
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %93, i8* align 1 %96, i64 %99, i1 false)
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 17
  %102 = load i32, i32* %101, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %90
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_do_read_transformations(%struct.png_struct_def* noundef %105, %struct.png_row_info_struct* noundef %3)
  br label %106

106:                                              ; preds = %104, %90
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %107, i32 0, i32 69
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %128

112:                                              ; preds = %106
  %113 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  %114 = load i8, i8* %113, align 1
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 69
  store i8 %114, i8* %116, align 1
  %117 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %120, i32 0, i32 68
  %122 = load i8, i8* %121, align 2
  %123 = zext i8 %122 to i32
  %124 = icmp sgt i32 %119, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %112
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %126, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18.112, i64 0, i64 0)) #13
  unreachable

127:                                              ; preds = %112
  br label %140

128:                                              ; preds = %106
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %129, i32 0, i32 69
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 5
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp ne i32 %132, %135
  br i1 %136, label %137, label %139

137:                                              ; preds = %128
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %138, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.113, i64 0, i64 0)) #13
  unreachable

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %127
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 58
  %143 = load i8, i8* %142, align 4
  %144 = zext i8 %143 to i32
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %529

146:                                              ; preds = %140
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %148 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 17
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 2
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %529

152:                                              ; preds = %146
  %153 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %154 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %153, i32 0, i32 59
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp slt i32 %156, 6
  br i1 %157, label %158, label %170

158:                                              ; preds = %152
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %159, i32 0, i32 46
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 1
  %163 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %164 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %163, i32 0, i32 59
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %168 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %167, i32 0, i32 17
  %169 = load i32, i32* %168, align 4
  call void @png_do_read_interlace(%struct.png_row_info_struct* noundef %3, i8* noundef %162, i32 noundef %166, i32 noundef %169)
  br label %170

170:                                              ; preds = %158, %152
  %171 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %172 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %171, i32 0, i32 59
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  switch i32 %174, label %511 [
    i32 0, label %175
    i32 1, label %267
    i32 2, label %315
    i32 3, label %381
    i32 4, label %429
    i32 5, label %479
    i32 6, label %512
  ]

175:                                              ; preds = %170
  store i32 0, i32* %4, align 4
  br label %176

176:                                              ; preds = %194, %175
  %177 = load i32, i32* %4, align 4
  %178 = icmp slt i32 %177, 8
  br i1 %178, label %179, label %185

179:                                              ; preds = %176
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %181 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %180, i32 0, i32 59
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %179, %176
  %186 = phi i1 [ false, %176 ], [ %184, %179 ]
  br i1 %186, label %187, label %197

187:                                              ; preds = %185
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %189 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %190 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %189, i32 0, i32 46
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %188, i8* noundef %192)
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %193)
  br label %194

194:                                              ; preds = %187
  %195 = load i32, i32* %4, align 4
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %4, align 4
  br label %176, !llvm.loop !55

197:                                              ; preds = %185
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %198, i32 0, i32 59
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = icmp eq i32 %201, 2
  br i1 %202, label %203, label %222

203:                                              ; preds = %197
  store i32 0, i32* %4, align 4
  br label %204

204:                                              ; preds = %218, %203
  %205 = load i32, i32* %4, align 4
  %206 = icmp slt i32 %205, 4
  br i1 %206, label %207, label %213

207:                                              ; preds = %204
  %208 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %208, i32 0, i32 59
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = icmp eq i32 %211, 2
  br label %213

213:                                              ; preds = %207, %204
  %214 = phi i1 [ false, %204 ], [ %212, %207 ]
  br i1 %214, label %215, label %221

215:                                              ; preds = %213
  %216 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %216, i8* noundef null)
  %217 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %217)
  br label %218

218:                                              ; preds = %215
  %219 = load i32, i32* %4, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %4, align 4
  br label %204, !llvm.loop !56

221:                                              ; preds = %213
  br label %222

222:                                              ; preds = %221, %197
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %223, i32 0, i32 59
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = icmp eq i32 %226, 4
  br i1 %227, label %228, label %252

228:                                              ; preds = %222
  %229 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %230 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %229, i32 0, i32 38
  %231 = load i32, i32* %230, align 4
  %232 = icmp ule i32 %231, 4
  br i1 %232, label %233, label %252

233:                                              ; preds = %228
  store i32 0, i32* %4, align 4
  br label %234

234:                                              ; preds = %248, %233
  %235 = load i32, i32* %4, align 4
  %236 = icmp slt i32 %235, 2
  br i1 %236, label %237, label %243

237:                                              ; preds = %234
  %238 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %239 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %238, i32 0, i32 59
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp eq i32 %241, 4
  br label %243

243:                                              ; preds = %237, %234
  %244 = phi i1 [ false, %234 ], [ %242, %237 ]
  br i1 %244, label %245, label %251

245:                                              ; preds = %243
  %246 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %246, i8* noundef null)
  %247 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %247)
  br label %248

248:                                              ; preds = %245
  %249 = load i32, i32* %4, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %4, align 4
  br label %234, !llvm.loop !57

251:                                              ; preds = %243
  br label %252

252:                                              ; preds = %251, %228, %222
  %253 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %254 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %253, i32 0, i32 59
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = icmp eq i32 %256, 6
  br i1 %257, label %258, label %266

258:                                              ; preds = %252
  %259 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %260 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %259, i32 0, i32 38
  %261 = load i32, i32* %260, align 4
  %262 = icmp ule i32 %261, 4
  br i1 %262, label %263, label %266

263:                                              ; preds = %258
  %264 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %264, i8* noundef null)
  %265 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %265)
  br label %266

266:                                              ; preds = %263, %258, %252
  br label %528

267:                                              ; preds = %170
  store i32 0, i32* %5, align 4
  br label %268

268:                                              ; preds = %286, %267
  %269 = load i32, i32* %5, align 4
  %270 = icmp slt i32 %269, 8
  br i1 %270, label %271, label %277

271:                                              ; preds = %268
  %272 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %273 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %272, i32 0, i32 59
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = icmp eq i32 %275, 1
  br label %277

277:                                              ; preds = %271, %268
  %278 = phi i1 [ false, %268 ], [ %276, %271 ]
  br i1 %278, label %279, label %289

279:                                              ; preds = %277
  %280 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %281 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %282 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %281, i32 0, i32 46
  %283 = load i8*, i8** %282, align 8
  %284 = getelementptr inbounds i8, i8* %283, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %280, i8* noundef %284)
  %285 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %285)
  br label %286

286:                                              ; preds = %279
  %287 = load i32, i32* %5, align 4
  %288 = add nsw i32 %287, 1
  store i32 %288, i32* %5, align 4
  br label %268, !llvm.loop !58

289:                                              ; preds = %277
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %291 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %290, i32 0, i32 59
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = icmp eq i32 %293, 2
  br i1 %294, label %295, label %314

295:                                              ; preds = %289
  store i32 0, i32* %5, align 4
  br label %296

296:                                              ; preds = %310, %295
  %297 = load i32, i32* %5, align 4
  %298 = icmp slt i32 %297, 4
  br i1 %298, label %299, label %305

299:                                              ; preds = %296
  %300 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %301 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %300, i32 0, i32 59
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = icmp eq i32 %303, 2
  br label %305

305:                                              ; preds = %299, %296
  %306 = phi i1 [ false, %296 ], [ %304, %299 ]
  br i1 %306, label %307, label %313

307:                                              ; preds = %305
  %308 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %308, i8* noundef null)
  %309 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %309)
  br label %310

310:                                              ; preds = %307
  %311 = load i32, i32* %5, align 4
  %312 = add nsw i32 %311, 1
  store i32 %312, i32* %5, align 4
  br label %296, !llvm.loop !59

313:                                              ; preds = %305
  br label %314

314:                                              ; preds = %313, %289
  br label %528

315:                                              ; preds = %170
  store i32 0, i32* %6, align 4
  br label %316

316:                                              ; preds = %334, %315
  %317 = load i32, i32* %6, align 4
  %318 = icmp slt i32 %317, 4
  br i1 %318, label %319, label %325

319:                                              ; preds = %316
  %320 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %321 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %320, i32 0, i32 59
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i32
  %324 = icmp eq i32 %323, 2
  br label %325

325:                                              ; preds = %319, %316
  %326 = phi i1 [ false, %316 ], [ %324, %319 ]
  br i1 %326, label %327, label %337

327:                                              ; preds = %325
  %328 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %329 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %330 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %329, i32 0, i32 46
  %331 = load i8*, i8** %330, align 8
  %332 = getelementptr inbounds i8, i8* %331, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %328, i8* noundef %332)
  %333 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %333)
  br label %334

334:                                              ; preds = %327
  %335 = load i32, i32* %6, align 4
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %6, align 4
  br label %316, !llvm.loop !60

337:                                              ; preds = %325
  store i32 0, i32* %6, align 4
  br label %338

338:                                              ; preds = %352, %337
  %339 = load i32, i32* %6, align 4
  %340 = icmp slt i32 %339, 4
  br i1 %340, label %341, label %347

341:                                              ; preds = %338
  %342 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %343 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %342, i32 0, i32 59
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i32
  %346 = icmp eq i32 %345, 2
  br label %347

347:                                              ; preds = %341, %338
  %348 = phi i1 [ false, %338 ], [ %346, %341 ]
  br i1 %348, label %349, label %355

349:                                              ; preds = %347
  %350 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %350, i8* noundef null)
  %351 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %351)
  br label %352

352:                                              ; preds = %349
  %353 = load i32, i32* %6, align 4
  %354 = add nsw i32 %353, 1
  store i32 %354, i32* %6, align 4
  br label %338, !llvm.loop !61

355:                                              ; preds = %347
  %356 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %357 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %356, i32 0, i32 59
  %358 = load i8, i8* %357, align 1
  %359 = zext i8 %358 to i32
  %360 = icmp eq i32 %359, 4
  br i1 %360, label %361, label %380

361:                                              ; preds = %355
  store i32 0, i32* %6, align 4
  br label %362

362:                                              ; preds = %376, %361
  %363 = load i32, i32* %6, align 4
  %364 = icmp slt i32 %363, 2
  br i1 %364, label %365, label %371

365:                                              ; preds = %362
  %366 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %367 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %366, i32 0, i32 59
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = icmp eq i32 %369, 4
  br label %371

371:                                              ; preds = %365, %362
  %372 = phi i1 [ false, %362 ], [ %370, %365 ]
  br i1 %372, label %373, label %379

373:                                              ; preds = %371
  %374 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %374, i8* noundef null)
  %375 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %375)
  br label %376

376:                                              ; preds = %373
  %377 = load i32, i32* %6, align 4
  %378 = add nsw i32 %377, 1
  store i32 %378, i32* %6, align 4
  br label %362, !llvm.loop !62

379:                                              ; preds = %371
  br label %380

380:                                              ; preds = %379, %355
  br label %528

381:                                              ; preds = %170
  store i32 0, i32* %7, align 4
  br label %382

382:                                              ; preds = %400, %381
  %383 = load i32, i32* %7, align 4
  %384 = icmp slt i32 %383, 4
  br i1 %384, label %385, label %391

385:                                              ; preds = %382
  %386 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %387 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %386, i32 0, i32 59
  %388 = load i8, i8* %387, align 1
  %389 = zext i8 %388 to i32
  %390 = icmp eq i32 %389, 3
  br label %391

391:                                              ; preds = %385, %382
  %392 = phi i1 [ false, %382 ], [ %390, %385 ]
  br i1 %392, label %393, label %403

393:                                              ; preds = %391
  %394 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %395 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %396 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %395, i32 0, i32 46
  %397 = load i8*, i8** %396, align 8
  %398 = getelementptr inbounds i8, i8* %397, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %394, i8* noundef %398)
  %399 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %399)
  br label %400

400:                                              ; preds = %393
  %401 = load i32, i32* %7, align 4
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %7, align 4
  br label %382, !llvm.loop !63

403:                                              ; preds = %391
  %404 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %405 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %404, i32 0, i32 59
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i32
  %408 = icmp eq i32 %407, 4
  br i1 %408, label %409, label %428

409:                                              ; preds = %403
  store i32 0, i32* %7, align 4
  br label %410

410:                                              ; preds = %424, %409
  %411 = load i32, i32* %7, align 4
  %412 = icmp slt i32 %411, 2
  br i1 %412, label %413, label %419

413:                                              ; preds = %410
  %414 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %415 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %414, i32 0, i32 59
  %416 = load i8, i8* %415, align 1
  %417 = zext i8 %416 to i32
  %418 = icmp eq i32 %417, 4
  br label %419

419:                                              ; preds = %413, %410
  %420 = phi i1 [ false, %410 ], [ %418, %413 ]
  br i1 %420, label %421, label %427

421:                                              ; preds = %419
  %422 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %422, i8* noundef null)
  %423 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %423)
  br label %424

424:                                              ; preds = %421
  %425 = load i32, i32* %7, align 4
  %426 = add nsw i32 %425, 1
  store i32 %426, i32* %7, align 4
  br label %410, !llvm.loop !64

427:                                              ; preds = %419
  br label %428

428:                                              ; preds = %427, %403
  br label %528

429:                                              ; preds = %170
  store i32 0, i32* %8, align 4
  br label %430

430:                                              ; preds = %448, %429
  %431 = load i32, i32* %8, align 4
  %432 = icmp slt i32 %431, 2
  br i1 %432, label %433, label %439

433:                                              ; preds = %430
  %434 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %435 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %434, i32 0, i32 59
  %436 = load i8, i8* %435, align 1
  %437 = zext i8 %436 to i32
  %438 = icmp eq i32 %437, 4
  br label %439

439:                                              ; preds = %433, %430
  %440 = phi i1 [ false, %430 ], [ %438, %433 ]
  br i1 %440, label %441, label %451

441:                                              ; preds = %439
  %442 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %443 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %444 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %443, i32 0, i32 46
  %445 = load i8*, i8** %444, align 8
  %446 = getelementptr inbounds i8, i8* %445, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %442, i8* noundef %446)
  %447 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %447)
  br label %448

448:                                              ; preds = %441
  %449 = load i32, i32* %8, align 4
  %450 = add nsw i32 %449, 1
  store i32 %450, i32* %8, align 4
  br label %430, !llvm.loop !65

451:                                              ; preds = %439
  store i32 0, i32* %8, align 4
  br label %452

452:                                              ; preds = %466, %451
  %453 = load i32, i32* %8, align 4
  %454 = icmp slt i32 %453, 2
  br i1 %454, label %455, label %461

455:                                              ; preds = %452
  %456 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %457 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %456, i32 0, i32 59
  %458 = load i8, i8* %457, align 1
  %459 = zext i8 %458 to i32
  %460 = icmp eq i32 %459, 4
  br label %461

461:                                              ; preds = %455, %452
  %462 = phi i1 [ false, %452 ], [ %460, %455 ]
  br i1 %462, label %463, label %469

463:                                              ; preds = %461
  %464 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %464, i8* noundef null)
  %465 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %465)
  br label %466

466:                                              ; preds = %463
  %467 = load i32, i32* %8, align 4
  %468 = add nsw i32 %467, 1
  store i32 %468, i32* %8, align 4
  br label %452, !llvm.loop !66

469:                                              ; preds = %461
  %470 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %471 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %470, i32 0, i32 59
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i32
  %474 = icmp eq i32 %473, 6
  br i1 %474, label %475, label %478

475:                                              ; preds = %469
  %476 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %476, i8* noundef null)
  %477 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %477)
  br label %478

478:                                              ; preds = %475, %469
  br label %528

479:                                              ; preds = %170
  store i32 0, i32* %9, align 4
  br label %480

480:                                              ; preds = %498, %479
  %481 = load i32, i32* %9, align 4
  %482 = icmp slt i32 %481, 2
  br i1 %482, label %483, label %489

483:                                              ; preds = %480
  %484 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %485 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %484, i32 0, i32 59
  %486 = load i8, i8* %485, align 1
  %487 = zext i8 %486 to i32
  %488 = icmp eq i32 %487, 5
  br label %489

489:                                              ; preds = %483, %480
  %490 = phi i1 [ false, %480 ], [ %488, %483 ]
  br i1 %490, label %491, label %501

491:                                              ; preds = %489
  %492 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %493 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %494 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %493, i32 0, i32 46
  %495 = load i8*, i8** %494, align 8
  %496 = getelementptr inbounds i8, i8* %495, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %492, i8* noundef %496)
  %497 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %497)
  br label %498

498:                                              ; preds = %491
  %499 = load i32, i32* %9, align 4
  %500 = add nsw i32 %499, 1
  store i32 %500, i32* %9, align 4
  br label %480, !llvm.loop !67

501:                                              ; preds = %489
  %502 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %503 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %502, i32 0, i32 59
  %504 = load i8, i8* %503, align 1
  %505 = zext i8 %504 to i32
  %506 = icmp eq i32 %505, 6
  br i1 %506, label %507, label %510

507:                                              ; preds = %501
  %508 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %508, i8* noundef null)
  %509 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %509)
  br label %510

510:                                              ; preds = %507, %501
  br label %528

511:                                              ; preds = %170
  br label %512

512:                                              ; preds = %170, %511
  %513 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %514 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %515 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %514, i32 0, i32 46
  %516 = load i8*, i8** %515, align 8
  %517 = getelementptr inbounds i8, i8* %516, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %513, i8* noundef %517)
  %518 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %518)
  %519 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %520 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %519, i32 0, i32 59
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = icmp ne i32 %522, 6
  br i1 %523, label %524, label %525

524:                                              ; preds = %512
  br label %528

525:                                              ; preds = %512
  %526 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_push_have_row(%struct.png_struct_def* noundef %526, i8* noundef null)
  %527 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %527)
  br label %528

528:                                              ; preds = %525, %524, %510, %478, %428, %380, %314, %266
  br label %536

529:                                              ; preds = %146, %140
  %530 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %531 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %532 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %531, i32 0, i32 46
  %533 = load i8*, i8** %532, align 8
  %534 = getelementptr inbounds i8, i8* %533, i64 1
  call void @png_push_have_row(%struct.png_struct_def* noundef %530, i8* noundef %534)
  %535 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_push_finish_row(%struct.png_struct_def* noundef %535)
  br label %536

536:                                              ; preds = %529, %528
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_have_row(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 94
  %7 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %6, align 8
  %8 = icmp ne void (%struct.png_struct_def*, i8*, i32, i32)* %7, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 94
  %12 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %11, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 43
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 59
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  call void %12(%struct.png_struct_def* noundef %13, i8* noundef %14, i32 noundef %17, i32 noundef %21)
  br label %22

22:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_push_finish_row(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 43
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 43
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 39
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  br label %172

15:                                               ; preds = %1
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 58
  %18 = load i8, i8* %17, align 4
  %19 = zext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %172

21:                                               ; preds = %15
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 43
  store i32 0, i32* %23, align 4
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 45
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 41
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %169, %21
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 59
  %34 = load i8, i8* %33, align 1
  %35 = add i8 %34, 1
  store i8 %35, i8* %33, align 1
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 59
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %46

41:                                               ; preds = %31
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 37
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, 5
  br i1 %45, label %68, label %46

46:                                               ; preds = %41, %31
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 59
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp eq i32 %50, 3
  br i1 %51, label %52, label %57

52:                                               ; preds = %46
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 37
  %55 = load i32, i32* %54, align 8
  %56 = icmp ult i32 %55, 3
  br i1 %56, label %68, label %57

57:                                               ; preds = %52, %46
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 59
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i32 %61, 5
  br i1 %62, label %63, label %73

63:                                               ; preds = %57
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 37
  %66 = load i32, i32* %65, align 8
  %67 = icmp ult i32 %66, 2
  br i1 %67, label %68, label %73

68:                                               ; preds = %63, %52, %41
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 59
  %71 = load i8, i8* %70, align 1
  %72 = add i8 %71, 1
  store i8 %72, i8* %70, align 1
  br label %73

73:                                               ; preds = %68, %63, %57
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 59
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp sgt i32 %77, 7
  br i1 %78, label %79, label %84

79:                                               ; preds = %73
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 59
  %82 = load i8, i8* %81, align 1
  %83 = add i8 %82, -1
  store i8 %83, i8* %81, align 1
  br label %84

84:                                               ; preds = %79, %73
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 59
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp sge i32 %88, 7
  br i1 %89, label %90, label %91

90:                                               ; preds = %84
  br label %171

91:                                               ; preds = %84
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 37
  %94 = load i32, i32* %93, align 8
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 59
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_push_finish_row.png_pass_inc, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = add i32 %94, %101
  %103 = sub i32 %102, 1
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %105 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %104, i32 0, i32 59
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i64
  %108 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_push_finish_row.png_pass_start, i64 0, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = sub i32 %103, %110
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 59
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i64
  %116 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_push_finish_row.png_pass_inc, i64 0, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = udiv i32 %111, %118
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %120, i32 0, i32 42
  store i32 %119, i32* %121, align 8
  %122 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %122, i32 0, i32 17
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, 2
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %91
  br label %171

128:                                              ; preds = %91
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %129, i32 0, i32 38
  %131 = load i32, i32* %130, align 4
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 59
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i64
  %136 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_push_finish_row.png_pass_yinc, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = add i32 %131, %138
  %140 = sub i32 %139, 1
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 59
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_push_finish_row.png_pass_ystart, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = sub i32 %140, %147
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 59
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_push_finish_row.png_pass_yinc, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = udiv i32 %148, %155
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %157, i32 0, i32 39
  store i32 %156, i32* %158, align 8
  br label %159

159:                                              ; preds = %128
  %160 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %160, i32 0, i32 42
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %165, i32 0, i32 39
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  br label %169

169:                                              ; preds = %164, %159
  %170 = phi i1 [ true, %159 ], [ %168, %164 ]
  br i1 %170, label %31, label %171, !llvm.loop !68

171:                                              ; preds = %169, %127, %90
  br label %172

172:                                              ; preds = %14, %171, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_have_end(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 95
  %7 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %6, align 8
  %8 = icmp ne void (%struct.png_struct_def*, %struct.png_info_def*)* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 95
  %12 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %11, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void %12(%struct.png_struct_def* noundef %13, %struct.png_info_def* noundef %14)
  br label %15

15:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_push_have_info(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 93
  %7 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %6, align 8
  %8 = icmp ne void (%struct.png_struct_def*, %struct.png_info_def*)* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 93
  %12 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %11, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void %12(%struct.png_struct_def* noundef %13, %struct.png_info_def* noundef %14)
  br label %15

15:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @png_process_data_pause(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp ne %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = load i32, i32* %5, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_push_save_buffer(%struct.png_struct_def* noundef %13)
  br label %32

14:                                               ; preds = %9
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 104
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %6, align 8
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 104
  store i64 0, i64* %19, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 102
  %22 = load i64, i64* %21, align 8
  %23 = load i64, i64* %6, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = load i64, i64* %6, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 102
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  store i64 %30, i64* %3, align 8
  br label %34

31:                                               ; preds = %14
  br label %32

32:                                               ; preds = %31, %12
  br label %33

33:                                               ; preds = %32, %2
  store i64 0, i64* %3, align 8
  br label %34

34:                                               ; preds = %33, %25
  %35 = load i64, i64* %3, align 8
  ret i64 %35
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_process_data_skip(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %3, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.123, i64 0, i64 0))
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_progressive_combine_row(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %16

10:                                               ; preds = %3
  %11 = load i8*, i8** %6, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = load i8*, i8** %5, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %14, i8* noundef %15, i32 noundef 1)
  br label %16

16:                                               ; preds = %9, %13, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_progressive_read_fn(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, void (%struct.png_struct_def*, %struct.png_info_def*)* noundef %2, void (%struct.png_struct_def*, i8*, i32, i32)* noundef %3, void (%struct.png_struct_def*, %struct.png_info_def*)* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca void (%struct.png_struct_def*, %struct.png_info_def*)*, align 8
  %9 = alloca void (%struct.png_struct_def*, i8*, i32, i32)*, align 8
  %10 = alloca void (%struct.png_struct_def*, %struct.png_info_def*)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store i8* %1, i8** %7, align 8
  store void (%struct.png_struct_def*, %struct.png_info_def*)* %2, void (%struct.png_struct_def*, %struct.png_info_def*)** %8, align 8
  store void (%struct.png_struct_def*, i8*, i32, i32)* %3, void (%struct.png_struct_def*, i8*, i32, i32)** %9, align 8
  store void (%struct.png_struct_def*, %struct.png_info_def*)* %4, void (%struct.png_struct_def*, %struct.png_info_def*)** %10, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = icmp eq %struct.png_struct_def* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  br label %26

14:                                               ; preds = %5
  %15 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %8, align 8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 93
  store void (%struct.png_struct_def*, %struct.png_info_def*)* %15, void (%struct.png_struct_def*, %struct.png_info_def*)** %17, align 8
  %18 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %9, align 8
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 94
  store void (%struct.png_struct_def*, i8*, i32, i32)* %18, void (%struct.png_struct_def*, i8*, i32, i32)** %20, align 8
  %21 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %10, align 8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 95
  store void (%struct.png_struct_def*, %struct.png_info_def*)* %21, void (%struct.png_struct_def*, %struct.png_info_def*)** %23, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %25 = load i8*, i8** %7, align 8
  call void bitcast (void (%struct.png_struct_def.125*, i8*, void (%struct.png_struct_def.125*, i8*, i64)*)* @png_set_read_fn to void (%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*)*)(%struct.png_struct_def* noundef %24, i8* noundef %25, void (%struct.png_struct_def*, i8*, i64)* noundef @png_push_fill_buffer)
  br label %26

26:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_progressive_ptr(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 9
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias %struct.png_struct_def* @png_create_read_struct(i8* noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*)* noundef %2, void (%struct.png_struct_def*, i8*)* noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %8 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %7, align 8
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %7, align 8
  %12 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %8, align 8
  %13 = call noalias %struct.png_struct_def* @png_create_read_struct_2(i8* noundef %9, i8* noundef %10, void (%struct.png_struct_def*, i8*)* noundef %11, void (%struct.png_struct_def*, i8*)* noundef %12, i8* noundef null, i8* (%struct.png_struct_def*, i64)* noundef null, void (%struct.png_struct_def*, i8*)* noundef null)
  ret %struct.png_struct_def* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias %struct.png_struct_def* @png_create_read_struct_2(i8* noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*)* noundef %2, void (%struct.png_struct_def*, i8*)* noundef %3, i8* noundef %4, i8* (%struct.png_struct_def*, i64)* noundef %5, void (%struct.png_struct_def*, i8*)* noundef %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %11 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8* (%struct.png_struct_def*, i64)*, align 8
  %14 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %15 = alloca %struct.png_struct_def*, align 8
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %10, align 8
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %11, align 8
  store i8* %4, i8** %12, align 8
  store i8* (%struct.png_struct_def*, i64)* %5, i8* (%struct.png_struct_def*, i64)** %13, align 8
  store void (%struct.png_struct_def*, i8*)* %6, void (%struct.png_struct_def*, i8*)** %14, align 8
  %16 = load i8*, i8** %8, align 8
  %17 = load i8*, i8** %9, align 8
  %18 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %10, align 8
  %19 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %11, align 8
  %20 = load i8*, i8** %12, align 8
  %21 = load i8* (%struct.png_struct_def*, i64)*, i8* (%struct.png_struct_def*, i64)** %13, align 8
  %22 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %14, align 8
  %23 = call noalias %struct.png_struct_def* @png_create_png_struct(i8* noundef %16, i8* noundef %17, void (%struct.png_struct_def*, i8*)* noundef %18, void (%struct.png_struct_def*, i8*)* noundef %19, i8* noundef %20, i8* (%struct.png_struct_def*, i64)* noundef %21, void (%struct.png_struct_def*, i8*)* noundef %22)
  store %struct.png_struct_def* %23, %struct.png_struct_def** %15, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %25 = icmp ne %struct.png_struct_def* %24, null
  br i1 %25, label %26, label %40

26:                                               ; preds = %7
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 15
  store i32 32768, i32* %28, align 4
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 141
  store i32 8192, i32* %30, align 8
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 16
  %33 = load i32, i32* %32, align 8
  %34 = or i32 %33, 1048576
  store i32 %34, i32* %32, align 8
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 16
  %37 = load i32, i32* %36, align 8
  %38 = or i32 %37, 2097152
  store i32 %38, i32* %36, align 8
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  call void bitcast (void (%struct.png_struct_def.125*, i8*, void (%struct.png_struct_def.125*, i8*, i64)*)* @png_set_read_fn to void (%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*)*)(%struct.png_struct_def* noundef %39, i8* noundef null, void (%struct.png_struct_def*, i8*, i64)* noundef null)
  br label %40

40:                                               ; preds = %26, %7
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  ret %struct.png_struct_def* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_info(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %12 = icmp eq %struct.png_info_def* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %2
  br label %284

14:                                               ; preds = %10
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_read_sig(%struct.png_struct_def* noundef %15, %struct.png_info_def* noundef %16)
  br label %17

17:                                               ; preds = %283, %14
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %19 = call i32 @png_read_chunk_header(%struct.png_struct_def* noundef %18)
  store i32 %19, i32* %6, align 4
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 44
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %7, align 4
  %24 = icmp eq i32 %23, 1229209940
  br i1 %24, label %25, label %62

25:                                               ; preds = %17
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 15
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %32, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.124, i64 0, i64 0)) #13
  unreachable

33:                                               ; preds = %25
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 61
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 3
  br i1 %38, label %39, label %47

39:                                               ; preds = %33
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 15
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %46, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.125, i64 0, i64 0)) #13
  unreachable

47:                                               ; preds = %39, %33
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 15
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 8
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %54, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.126, i64 0, i64 0))
  br label %55

55:                                               ; preds = %53, %47
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 15
  %60 = load i32, i32* %59, align 4
  %61 = or i32 %60, 4
  store i32 %61, i32* %59, align 4
  br label %78

62:                                               ; preds = %17
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 15
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %77

68:                                               ; preds = %62
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 15
  %71 = load i32, i32* %70, align 4
  %72 = or i32 %71, 8192
  store i32 %72, i32* %70, align 4
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 15
  %75 = load i32, i32* %74, align 4
  %76 = or i32 %75, 8
  store i32 %76, i32* %74, align 4
  br label %77

77:                                               ; preds = %68, %62
  br label %78

78:                                               ; preds = %77, %57
  %79 = load i32, i32* %7, align 4
  %80 = icmp eq i32 %79, 1229472850
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %83 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %84 = load i32, i32* %6, align 4
  call void @png_handle_IHDR(%struct.png_struct_def* noundef %82, %struct.png_info_def* noundef %83, i32 noundef %84)
  br label %283

85:                                               ; preds = %78
  %86 = load i32, i32* %7, align 4
  %87 = icmp eq i32 %86, 1229278788
  br i1 %87, label %88, label %92

88:                                               ; preds = %85
  %89 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %90 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %91 = load i32, i32* %6, align 4
  call void @png_handle_IEND(%struct.png_struct_def* noundef %89, %struct.png_info_def* noundef %90, i32 noundef %91)
  br label %282

92:                                               ; preds = %85
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %94 = load i32, i32* %7, align 4
  %95 = call i32 @png_chunk_unknown_handling(%struct.png_struct_def* noundef %93, i32 noundef %94)
  store i32 %95, i32* %5, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %117

97:                                               ; preds = %92
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %99 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %100 = load i32, i32* %6, align 4
  %101 = load i32, i32* %5, align 4
  call void @png_handle_unknown(%struct.png_struct_def* noundef %98, %struct.png_info_def* noundef %99, i32 noundef %100, i32 noundef %101)
  %102 = load i32, i32* %7, align 4
  %103 = icmp eq i32 %102, 1347179589
  br i1 %103, label %104, label %109

104:                                              ; preds = %97
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 15
  %107 = load i32, i32* %106, align 4
  %108 = or i32 %107, 2
  store i32 %108, i32* %106, align 4
  br label %116

109:                                              ; preds = %97
  %110 = load i32, i32* %7, align 4
  %111 = icmp eq i32 %110, 1229209940
  br i1 %111, label %112, label %115

112:                                              ; preds = %109
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 50
  store i32 0, i32* %114, align 8
  br label %284

115:                                              ; preds = %109
  br label %116

116:                                              ; preds = %115, %104
  br label %281

117:                                              ; preds = %92
  %118 = load i32, i32* %7, align 4
  %119 = icmp eq i32 %118, 1347179589
  br i1 %119, label %120, label %124

120:                                              ; preds = %117
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %122 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %123 = load i32, i32* %6, align 4
  call void @png_handle_PLTE(%struct.png_struct_def* noundef %121, %struct.png_info_def* noundef %122, i32 noundef %123)
  br label %280

124:                                              ; preds = %117
  %125 = load i32, i32* %7, align 4
  %126 = icmp eq i32 %125, 1229209940
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = load i32, i32* %6, align 4
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %129, i32 0, i32 50
  store i32 %128, i32* %130, align 8
  br label %284

131:                                              ; preds = %124
  %132 = load i32, i32* %7, align 4
  %133 = icmp eq i32 %132, 1649100612
  br i1 %133, label %134, label %138

134:                                              ; preds = %131
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %136 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %137 = load i32, i32* %6, align 4
  call void @png_handle_bKGD(%struct.png_struct_def* noundef %135, %struct.png_info_def* noundef %136, i32 noundef %137)
  br label %278

138:                                              ; preds = %131
  %139 = load i32, i32* %7, align 4
  %140 = icmp eq i32 %139, 1665684045
  br i1 %140, label %141, label %145

141:                                              ; preds = %138
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %143 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %144 = load i32, i32* %6, align 4
  call void @png_handle_cHRM(%struct.png_struct_def* noundef %142, %struct.png_info_def* noundef %143, i32 noundef %144)
  br label %277

145:                                              ; preds = %138
  %146 = load i32, i32* %7, align 4
  %147 = icmp eq i32 %146, 1700284774
  br i1 %147, label %148, label %152

148:                                              ; preds = %145
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %150 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %151 = load i32, i32* %6, align 4
  call void @png_handle_eXIf(%struct.png_struct_def* noundef %149, %struct.png_info_def* noundef %150, i32 noundef %151)
  br label %276

152:                                              ; preds = %145
  %153 = load i32, i32* %7, align 4
  %154 = icmp eq i32 %153, 1732332865
  br i1 %154, label %155, label %159

155:                                              ; preds = %152
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %157 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %158 = load i32, i32* %6, align 4
  call void @png_handle_gAMA(%struct.png_struct_def* noundef %156, %struct.png_info_def* noundef %157, i32 noundef %158)
  br label %275

159:                                              ; preds = %152
  %160 = load i32, i32* %7, align 4
  %161 = icmp eq i32 %160, 1749635924
  br i1 %161, label %162, label %166

162:                                              ; preds = %159
  %163 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %164 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %165 = load i32, i32* %6, align 4
  call void @png_handle_hIST(%struct.png_struct_def* noundef %163, %struct.png_info_def* noundef %164, i32 noundef %165)
  br label %274

166:                                              ; preds = %159
  %167 = load i32, i32* %7, align 4
  %168 = icmp eq i32 %167, 1866876531
  br i1 %168, label %169, label %173

169:                                              ; preds = %166
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %171 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %172 = load i32, i32* %6, align 4
  call void @png_handle_oFFs(%struct.png_struct_def* noundef %170, %struct.png_info_def* noundef %171, i32 noundef %172)
  br label %273

173:                                              ; preds = %166
  %174 = load i32, i32* %7, align 4
  %175 = icmp eq i32 %174, 1883455820
  br i1 %175, label %176, label %180

176:                                              ; preds = %173
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %178 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %179 = load i32, i32* %6, align 4
  call void @png_handle_pCAL(%struct.png_struct_def* noundef %177, %struct.png_info_def* noundef %178, i32 noundef %179)
  br label %272

180:                                              ; preds = %173
  %181 = load i32, i32* %7, align 4
  %182 = icmp eq i32 %181, 1933787468
  br i1 %182, label %183, label %187

183:                                              ; preds = %180
  %184 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %185 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %186 = load i32, i32* %6, align 4
  call void @png_handle_sCAL(%struct.png_struct_def* noundef %184, %struct.png_info_def* noundef %185, i32 noundef %186)
  br label %271

187:                                              ; preds = %180
  %188 = load i32, i32* %7, align 4
  %189 = icmp eq i32 %188, 1883789683
  br i1 %189, label %190, label %194

190:                                              ; preds = %187
  %191 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %192 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %193 = load i32, i32* %6, align 4
  call void @png_handle_pHYs(%struct.png_struct_def* noundef %191, %struct.png_info_def* noundef %192, i32 noundef %193)
  br label %270

194:                                              ; preds = %187
  %195 = load i32, i32* %7, align 4
  %196 = icmp eq i32 %195, 1933723988
  br i1 %196, label %197, label %201

197:                                              ; preds = %194
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %199 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %200 = load i32, i32* %6, align 4
  call void @png_handle_sBIT(%struct.png_struct_def* noundef %198, %struct.png_info_def* noundef %199, i32 noundef %200)
  br label %269

201:                                              ; preds = %194
  %202 = load i32, i32* %7, align 4
  %203 = icmp eq i32 %202, 1934772034
  br i1 %203, label %204, label %208

204:                                              ; preds = %201
  %205 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %206 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %207 = load i32, i32* %6, align 4
  call void @png_handle_sRGB(%struct.png_struct_def* noundef %205, %struct.png_info_def* noundef %206, i32 noundef %207)
  br label %268

208:                                              ; preds = %201
  %209 = load i32, i32* %7, align 4
  %210 = icmp eq i32 %209, 1766015824
  br i1 %210, label %211, label %215

211:                                              ; preds = %208
  %212 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %213 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %214 = load i32, i32* %6, align 4
  call void @png_handle_iCCP(%struct.png_struct_def* noundef %212, %struct.png_info_def* noundef %213, i32 noundef %214)
  br label %267

215:                                              ; preds = %208
  %216 = load i32, i32* %7, align 4
  %217 = icmp eq i32 %216, 1934642260
  br i1 %217, label %218, label %222

218:                                              ; preds = %215
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %220 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %221 = load i32, i32* %6, align 4
  call void @png_handle_sPLT(%struct.png_struct_def* noundef %219, %struct.png_info_def* noundef %220, i32 noundef %221)
  br label %266

222:                                              ; preds = %215
  %223 = load i32, i32* %7, align 4
  %224 = icmp eq i32 %223, 1950701684
  br i1 %224, label %225, label %229

225:                                              ; preds = %222
  %226 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %227 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %228 = load i32, i32* %6, align 4
  call void @png_handle_tEXt(%struct.png_struct_def* noundef %226, %struct.png_info_def* noundef %227, i32 noundef %228)
  br label %265

229:                                              ; preds = %222
  %230 = load i32, i32* %7, align 4
  %231 = icmp eq i32 %230, 1950960965
  br i1 %231, label %232, label %236

232:                                              ; preds = %229
  %233 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %234 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %235 = load i32, i32* %6, align 4
  call void @png_handle_tIME(%struct.png_struct_def* noundef %233, %struct.png_info_def* noundef %234, i32 noundef %235)
  br label %264

236:                                              ; preds = %229
  %237 = load i32, i32* %7, align 4
  %238 = icmp eq i32 %237, 1951551059
  br i1 %238, label %239, label %243

239:                                              ; preds = %236
  %240 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %241 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %242 = load i32, i32* %6, align 4
  call void @png_handle_tRNS(%struct.png_struct_def* noundef %240, %struct.png_info_def* noundef %241, i32 noundef %242)
  br label %263

243:                                              ; preds = %236
  %244 = load i32, i32* %7, align 4
  %245 = icmp eq i32 %244, 2052348020
  br i1 %245, label %246, label %250

246:                                              ; preds = %243
  %247 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %248 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %249 = load i32, i32* %6, align 4
  call void @png_handle_zTXt(%struct.png_struct_def* noundef %247, %struct.png_info_def* noundef %248, i32 noundef %249)
  br label %262

250:                                              ; preds = %243
  %251 = load i32, i32* %7, align 4
  %252 = icmp eq i32 %251, 1767135348
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %255 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %256 = load i32, i32* %6, align 4
  call void @png_handle_iTXt(%struct.png_struct_def* noundef %254, %struct.png_info_def* noundef %255, i32 noundef %256)
  br label %261

257:                                              ; preds = %250
  %258 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %259 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %260 = load i32, i32* %6, align 4
  call void @png_handle_unknown(%struct.png_struct_def* noundef %258, %struct.png_info_def* noundef %259, i32 noundef %260, i32 noundef 0)
  br label %261

261:                                              ; preds = %257, %253
  br label %262

262:                                              ; preds = %261, %246
  br label %263

263:                                              ; preds = %262, %239
  br label %264

264:                                              ; preds = %263, %232
  br label %265

265:                                              ; preds = %264, %225
  br label %266

266:                                              ; preds = %265, %218
  br label %267

267:                                              ; preds = %266, %211
  br label %268

268:                                              ; preds = %267, %204
  br label %269

269:                                              ; preds = %268, %197
  br label %270

270:                                              ; preds = %269, %190
  br label %271

271:                                              ; preds = %270, %183
  br label %272

272:                                              ; preds = %271, %176
  br label %273

273:                                              ; preds = %272, %169
  br label %274

274:                                              ; preds = %273, %162
  br label %275

275:                                              ; preds = %274, %155
  br label %276

276:                                              ; preds = %275, %148
  br label %277

277:                                              ; preds = %276, %141
  br label %278

278:                                              ; preds = %277, %134
  br label %279

279:                                              ; preds = %278
  br label %280

280:                                              ; preds = %279, %120
  br label %281

281:                                              ; preds = %280, %116
  br label %282

282:                                              ; preds = %281, %88
  br label %283

283:                                              ; preds = %282, %81
  br label %17

284:                                              ; preds = %13, %127, %112
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_update_info(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp ne %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %20

7:                                                ; preds = %2
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 16
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 64
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_read_start_row(%struct.png_struct_def* noundef %14)
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_read_transform_info(%struct.png_struct_def* noundef %15, %struct.png_info_def* noundef %16)
  br label %19

17:                                               ; preds = %7
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %18, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.127, i64 0, i64 0))
  br label %19

19:                                               ; preds = %17, %13
  br label %20

20:                                               ; preds = %19, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_start_read_image(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp ne %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 16
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 64
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_start_row(%struct.png_struct_def* noundef %12)
  br label %15

13:                                               ; preds = %5
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %14, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4.128, i64 0, i64 0))
  br label %15

15:                                               ; preds = %13, %11
  br label %16

16:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_row(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.png_row_info_struct, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  br label %417

11:                                               ; preds = %3
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 16
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_start_row(%struct.png_struct_def* noundef %18)
  br label %19

19:                                               ; preds = %17, %11
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 42
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 0
  store i32 %22, i32* %23, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 61
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 2
  store i8 %26, i8* %27, align 8
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 62
  %30 = load i8, i8* %29, align 8
  %31 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 3
  store i8 %30, i8* %31, align 1
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 65
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 4
  store i8 %34, i8* %35, align 2
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 64
  %38 = load i8, i8* %37, align 2
  %39 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp sge i32 %42, 8
  br i1 %43, label %44, label %53

44:                                               ; preds = %19
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = lshr i64 %50, 3
  %52 = mul i64 %47, %51
  br label %63

53:                                               ; preds = %19
  %54 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = mul i64 %56, %59
  %61 = add i64 %60, 7
  %62 = lshr i64 %61, 3
  br label %63

63:                                               ; preds = %53, %44
  %64 = phi i64 [ %52, %44 ], [ %62, %53 ]
  %65 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 1
  store i64 %64, i64* %65, align 8
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 43
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %63
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 59
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  br label %77

77:                                               ; preds = %76, %70, %63
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 58
  %80 = load i8, i8* %79, align 4
  %81 = zext i8 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %222

83:                                               ; preds = %77
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 17
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 2
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %222

89:                                               ; preds = %83
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 59
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  switch i32 %93, label %211 [
    i32 0, label %94
    i32 1, label %109
    i32 2, label %129
    i32 3, label %150
    i32 4, label %170
    i32 5, label %191
    i32 6, label %212
  ]

94:                                               ; preds = %89
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 43
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 7
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %108

100:                                              ; preds = %94
  %101 = load i8*, i8** %6, align 8
  %102 = icmp ne i8* %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %105 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %104, i8* noundef %105, i32 noundef 1)
  br label %106

106:                                              ; preds = %103, %100
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %107)
  br label %417

108:                                              ; preds = %94
  br label %221

109:                                              ; preds = %89
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 43
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 7
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %109
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 37
  %118 = load i32, i32* %117, align 8
  %119 = icmp ult i32 %118, 5
  br i1 %119, label %120, label %128

120:                                              ; preds = %115, %109
  %121 = load i8*, i8** %6, align 8
  %122 = icmp ne i8* %121, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %125 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %124, i8* noundef %125, i32 noundef 1)
  br label %126

126:                                              ; preds = %123, %120
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %127)
  br label %417

128:                                              ; preds = %115
  br label %221

129:                                              ; preds = %89
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %131 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %130, i32 0, i32 43
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 7
  %134 = icmp ne i32 %133, 4
  br i1 %134, label %135, label %149

135:                                              ; preds = %129
  %136 = load i8*, i8** %6, align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %138, label %147

138:                                              ; preds = %135
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %140 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %139, i32 0, i32 43
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 4
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %146 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %145, i8* noundef %146, i32 noundef 1)
  br label %147

147:                                              ; preds = %144, %138, %135
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %148)
  br label %417

149:                                              ; preds = %129
  br label %221

150:                                              ; preds = %89
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 43
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 3
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %150
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %157, i32 0, i32 37
  %159 = load i32, i32* %158, align 8
  %160 = icmp ult i32 %159, 3
  br i1 %160, label %161, label %169

161:                                              ; preds = %156, %150
  %162 = load i8*, i8** %6, align 8
  %163 = icmp ne i8* %162, null
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %166 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %165, i8* noundef %166, i32 noundef 1)
  br label %167

167:                                              ; preds = %164, %161
  %168 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %168)
  br label %417

169:                                              ; preds = %156
  br label %221

170:                                              ; preds = %89
  %171 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %172 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %171, i32 0, i32 43
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 3
  %175 = icmp ne i32 %174, 2
  br i1 %175, label %176, label %190

176:                                              ; preds = %170
  %177 = load i8*, i8** %6, align 8
  %178 = icmp ne i8* %177, null
  br i1 %178, label %179, label %188

179:                                              ; preds = %176
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %181 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %180, i32 0, i32 43
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %182, 2
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %179
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %187 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %186, i8* noundef %187, i32 noundef 1)
  br label %188

188:                                              ; preds = %185, %179, %176
  %189 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %189)
  br label %417

190:                                              ; preds = %170
  br label %221

191:                                              ; preds = %89
  %192 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %193 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %192, i32 0, i32 43
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 1
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %202, label %197

197:                                              ; preds = %191
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %198, i32 0, i32 37
  %200 = load i32, i32* %199, align 8
  %201 = icmp ult i32 %200, 2
  br i1 %201, label %202, label %210

202:                                              ; preds = %197, %191
  %203 = load i8*, i8** %6, align 8
  %204 = icmp ne i8* %203, null
  br i1 %204, label %205, label %208

205:                                              ; preds = %202
  %206 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %207 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %206, i8* noundef %207, i32 noundef 1)
  br label %208

208:                                              ; preds = %205, %202
  %209 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %209)
  br label %417

210:                                              ; preds = %197
  br label %221

211:                                              ; preds = %89
  br label %212

212:                                              ; preds = %89, %211
  %213 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %214 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %213, i32 0, i32 43
  %215 = load i32, i32* %214, align 4
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %212
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %219)
  br label %417

220:                                              ; preds = %212
  br label %221

221:                                              ; preds = %220, %210, %190, %169, %149, %128, %108
  br label %222

222:                                              ; preds = %221, %83, %77
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %223, i32 0, i32 15
  %225 = load i32, i32* %224, align 4
  %226 = and i32 %225, 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %222
  %229 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %229, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.129, i64 0, i64 0)) #13
  unreachable

230:                                              ; preds = %222
  %231 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %232 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %231, i32 0, i32 46
  %233 = load i8*, i8** %232, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 0
  store i8 -1, i8* %234, align 1
  %235 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %236 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %237 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %236, i32 0, i32 46
  %238 = load i8*, i8** %237, align 8
  %239 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  %241 = add i64 %240, 1
  call void @png_read_IDAT_data(%struct.png_struct_def* noundef %235, i8* noundef %238, i64 noundef %241)
  %242 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %243 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %242, i32 0, i32 46
  %244 = load i8*, i8** %243, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 0
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %276

249:                                              ; preds = %230
  %250 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %251 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %250, i32 0, i32 46
  %252 = load i8*, i8** %251, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 0
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp slt i32 %255, 5
  br i1 %256, label %257, label %273

257:                                              ; preds = %249
  %258 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %259 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %260 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %259, i32 0, i32 46
  %261 = load i8*, i8** %260, align 8
  %262 = getelementptr inbounds i8, i8* %261, i64 1
  %263 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %264 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %263, i32 0, i32 45
  %265 = load i8*, i8** %264, align 8
  %266 = getelementptr inbounds i8, i8* %265, i64 1
  %267 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %268 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %267, i32 0, i32 46
  %269 = load i8*, i8** %268, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 0
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  call void @png_read_filter_row(%struct.png_struct_def* noundef %258, %struct.png_row_info_struct* noundef %7, i8* noundef %262, i8* noundef %266, i32 noundef %272)
  br label %275

273:                                              ; preds = %249
  %274 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %274, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.130, i64 0, i64 0)) #13
  unreachable

275:                                              ; preds = %257
  br label %276

276:                                              ; preds = %275, %230
  %277 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %278 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %277, i32 0, i32 45
  %279 = load i8*, i8** %278, align 8
  %280 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %281 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %280, i32 0, i32 46
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 1
  %284 = load i64, i64* %283, align 8
  %285 = add i64 %284, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %282, i64 %285, i1 false)
  %286 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %287 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %286, i32 0, i32 123
  %288 = load i32, i32* %287, align 8
  %289 = and i32 %288, 4
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %302

291:                                              ; preds = %276
  %292 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %293 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %292, i32 0, i32 124
  %294 = load i8, i8* %293, align 4
  %295 = zext i8 %294 to i32
  %296 = icmp eq i32 %295, 64
  br i1 %296, label %297, label %302

297:                                              ; preds = %291
  %298 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %299 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %298, i32 0, i32 46
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 1
  call void @png_do_read_intrapixel(%struct.png_row_info_struct* noundef %7, i8* noundef %301)
  br label %302

302:                                              ; preds = %297, %291, %276
  %303 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %304 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %303, i32 0, i32 17
  %305 = load i32, i32* %304, align 4
  %306 = icmp ne i32 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %302
  %308 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_do_read_transformations(%struct.png_struct_def* noundef %308, %struct.png_row_info_struct* noundef %7)
  br label %309

309:                                              ; preds = %307, %302
  %310 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %311 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %310, i32 0, i32 69
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %331

315:                                              ; preds = %309
  %316 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  %317 = load i8, i8* %316, align 1
  %318 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %319 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %318, i32 0, i32 69
  store i8 %317, i8* %319, align 1
  %320 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %324 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %323, i32 0, i32 68
  %325 = load i8, i8* %324, align 2
  %326 = zext i8 %325 to i32
  %327 = icmp sgt i32 %322, %326
  br i1 %327, label %328, label %330

328:                                              ; preds = %315
  %329 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %329, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.131, i64 0, i64 0)) #13
  unreachable

330:                                              ; preds = %315
  br label %343

331:                                              ; preds = %309
  %332 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %333 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %332, i32 0, i32 69
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i32
  %336 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 5
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i32
  %339 = icmp ne i32 %335, %338
  br i1 %339, label %340, label %342

340:                                              ; preds = %331
  %341 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %341, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8.132, i64 0, i64 0)) #13
  unreachable

342:                                              ; preds = %331
  br label %343

343:                                              ; preds = %342, %330
  %344 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %345 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %344, i32 0, i32 58
  %346 = load i8, i8* %345, align 4
  %347 = zext i8 %346 to i32
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %349, label %386

349:                                              ; preds = %343
  %350 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %351 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %350, i32 0, i32 17
  %352 = load i32, i32* %351, align 4
  %353 = and i32 %352, 2
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %355, label %386

355:                                              ; preds = %349
  %356 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %357 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %356, i32 0, i32 59
  %358 = load i8, i8* %357, align 1
  %359 = zext i8 %358 to i32
  %360 = icmp slt i32 %359, 6
  br i1 %360, label %361, label %373

361:                                              ; preds = %355
  %362 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %363 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %362, i32 0, i32 46
  %364 = load i8*, i8** %363, align 8
  %365 = getelementptr inbounds i8, i8* %364, i64 1
  %366 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %367 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %366, i32 0, i32 59
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %371 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %370, i32 0, i32 17
  %372 = load i32, i32* %371, align 4
  call void @png_do_read_interlace(%struct.png_row_info_struct* noundef %7, i8* noundef %365, i32 noundef %369, i32 noundef %372)
  br label %373

373:                                              ; preds = %361, %355
  %374 = load i8*, i8** %6, align 8
  %375 = icmp ne i8* %374, null
  br i1 %375, label %376, label %379

376:                                              ; preds = %373
  %377 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %378 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %377, i8* noundef %378, i32 noundef 1)
  br label %379

379:                                              ; preds = %376, %373
  %380 = load i8*, i8** %5, align 8
  %381 = icmp ne i8* %380, null
  br i1 %381, label %382, label %385

382:                                              ; preds = %379
  %383 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %384 = load i8*, i8** %5, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %383, i8* noundef %384, i32 noundef 0)
  br label %385

385:                                              ; preds = %382, %379
  br label %399

386:                                              ; preds = %349, %343
  %387 = load i8*, i8** %5, align 8
  %388 = icmp ne i8* %387, null
  br i1 %388, label %389, label %392

389:                                              ; preds = %386
  %390 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %391 = load i8*, i8** %5, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %390, i8* noundef %391, i32 noundef -1)
  br label %392

392:                                              ; preds = %389, %386
  %393 = load i8*, i8** %6, align 8
  %394 = icmp ne i8* %393, null
  br i1 %394, label %395, label %398

395:                                              ; preds = %392
  %396 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %397 = load i8*, i8** %6, align 8
  call void @png_combine_row(%struct.png_struct_def* noundef %396, i8* noundef %397, i32 noundef -1)
  br label %398

398:                                              ; preds = %395, %392
  br label %399

399:                                              ; preds = %398, %385
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_read_finish_row(%struct.png_struct_def* noundef %400)
  %401 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %402 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %401, i32 0, i32 91
  %403 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %402, align 8
  %404 = icmp ne void (%struct.png_struct_def*, i32, i32)* %403, null
  br i1 %404, label %405, label %417

405:                                              ; preds = %399
  %406 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %407 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %406, i32 0, i32 91
  %408 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %407, align 8
  %409 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %410 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %411 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %410, i32 0, i32 43
  %412 = load i32, i32* %411, align 4
  %413 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %414 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %413, i32 0, i32 59
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  call void %408(%struct.png_struct_def* noundef %409, i32 noundef %412, i32 noundef %416)
  br label %417

417:                                              ; preds = %10, %106, %126, %147, %167, %188, %208, %218, %405, %399
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_read_intrapixel(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 2
  %18 = load i8, i8* %17, align 8
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 2
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %187

22:                                               ; preds = %2
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %24 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %6, align 4
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %27 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 8
  br i1 %30, label %31, label %88

31:                                               ; preds = %22
  %32 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %33 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %32, i32 0, i32 2
  %34 = load i8, i8* %33, align 8
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  store i32 3, i32* %5, align 4
  br label %47

38:                                               ; preds = %31
  %39 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %40 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %39, i32 0, i32 2
  %41 = load i8, i8* %40, align 8
  %42 = zext i8 %41 to i32
  %43 = icmp eq i32 %42, 6
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 4, i32* %5, align 4
  br label %46

45:                                               ; preds = %38
  br label %187

46:                                               ; preds = %44
  br label %47

47:                                               ; preds = %46, %37
  store i32 0, i32* %8, align 4
  %48 = load i8*, i8** %4, align 8
  store i8* %48, i8** %7, align 8
  br label %49

49:                                               ; preds = %80, %47
  %50 = load i32, i32* %8, align 4
  %51 = load i32, i32* %6, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %87

53:                                               ; preds = %49
  %54 = load i8*, i8** %7, align 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = add nsw i32 256, %56
  %58 = load i8*, i8** %7, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = add nsw i32 %57, %61
  %63 = and i32 %62, 255
  %64 = trunc i32 %63 to i8
  %65 = load i8*, i8** %7, align 8
  store i8 %64, i8* %65, align 1
  %66 = load i8*, i8** %7, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 2
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = add nsw i32 256, %69
  %71 = load i8*, i8** %7, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = add nsw i32 %70, %74
  %76 = and i32 %75, 255
  %77 = trunc i32 %76 to i8
  %78 = load i8*, i8** %7, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 2
  store i8 %77, i8* %79, align 1
  br label %80

80:                                               ; preds = %53
  %81 = load i32, i32* %8, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %8, align 4
  %83 = load i32, i32* %5, align 4
  %84 = load i8*, i8** %7, align 8
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds i8, i8* %84, i64 %85
  store i8* %86, i8** %7, align 8
  br label %49, !llvm.loop !69

87:                                               ; preds = %49
  br label %186

88:                                               ; preds = %22
  %89 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %90 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %89, i32 0, i32 3
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 16
  br i1 %93, label %94, label %185

94:                                               ; preds = %88
  %95 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %96 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %95, i32 0, i32 2
  %97 = load i8, i8* %96, align 8
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 2
  br i1 %99, label %100, label %101

100:                                              ; preds = %94
  store i32 6, i32* %5, align 4
  br label %110

101:                                              ; preds = %94
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %103 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 2
  %104 = load i8, i8* %103, align 8
  %105 = zext i8 %104 to i32
  %106 = icmp eq i32 %105, 6
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  store i32 8, i32* %5, align 4
  br label %109

108:                                              ; preds = %101
  br label %187

109:                                              ; preds = %107
  br label %110

110:                                              ; preds = %109, %100
  store i32 0, i32* %10, align 4
  %111 = load i8*, i8** %4, align 8
  store i8* %111, i8** %9, align 8
  br label %112

112:                                              ; preds = %177, %110
  %113 = load i32, i32* %10, align 4
  %114 = load i32, i32* %6, align 4
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %116, label %184

116:                                              ; preds = %112
  %117 = load i8*, i8** %9, align 8
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = shl i32 %119, 8
  %121 = load i8*, i8** %9, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = or i32 %120, %124
  store i32 %125, i32* %11, align 4
  %126 = load i8*, i8** %9, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = shl i32 %129, 8
  %131 = load i8*, i8** %9, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = or i32 %130, %134
  store i32 %135, i32* %12, align 4
  %136 = load i8*, i8** %9, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 4
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl i32 %139, 8
  %141 = load i8*, i8** %9, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 5
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = or i32 %140, %144
  store i32 %145, i32* %13, align 4
  %146 = load i32, i32* %11, align 4
  %147 = load i32, i32* %12, align 4
  %148 = add i32 %146, %147
  %149 = add i32 %148, 65536
  %150 = and i32 %149, 65535
  store i32 %150, i32* %14, align 4
  %151 = load i32, i32* %13, align 4
  %152 = load i32, i32* %12, align 4
  %153 = add i32 %151, %152
  %154 = add i32 %153, 65536
  %155 = and i32 %154, 65535
  store i32 %155, i32* %15, align 4
  %156 = load i32, i32* %14, align 4
  %157 = lshr i32 %156, 8
  %158 = and i32 %157, 255
  %159 = trunc i32 %158 to i8
  %160 = load i8*, i8** %9, align 8
  store i8 %159, i8* %160, align 1
  %161 = load i32, i32* %14, align 4
  %162 = and i32 %161, 255
  %163 = trunc i32 %162 to i8
  %164 = load i8*, i8** %9, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 1
  store i8 %163, i8* %165, align 1
  %166 = load i32, i32* %15, align 4
  %167 = lshr i32 %166, 8
  %168 = and i32 %167, 255
  %169 = trunc i32 %168 to i8
  %170 = load i8*, i8** %9, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 4
  store i8 %169, i8* %171, align 1
  %172 = load i32, i32* %15, align 4
  %173 = and i32 %172, 255
  %174 = trunc i32 %173 to i8
  %175 = load i8*, i8** %9, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 5
  store i8 %174, i8* %176, align 1
  br label %177

177:                                              ; preds = %116
  %178 = load i32, i32* %10, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %10, align 4
  %180 = load i32, i32* %5, align 4
  %181 = load i8*, i8** %9, align 8
  %182 = sext i32 %180 to i64
  %183 = getelementptr inbounds i8, i8* %181, i64 %182
  store i8* %183, i8** %9, align 8
  br label %112, !llvm.loop !70

184:                                              ; preds = %112
  br label %185

185:                                              ; preds = %184, %88
  br label %186

186:                                              ; preds = %185, %87
  br label %187

187:                                              ; preds = %45, %108, %186, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_rows(%struct.png_struct_def* noalias noundef %0, i8** noundef %1, i8** noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 %3, i32* %8, align 4
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %17 = icmp eq %struct.png_struct_def* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %4
  br label %86

19:                                               ; preds = %4
  %20 = load i8**, i8*** %6, align 8
  store i8** %20, i8*** %10, align 8
  %21 = load i8**, i8*** %7, align 8
  store i8** %21, i8*** %11, align 8
  %22 = load i8**, i8*** %10, align 8
  %23 = icmp ne i8** %22, null
  br i1 %23, label %24, label %46

24:                                               ; preds = %19
  %25 = load i8**, i8*** %11, align 8
  %26 = icmp ne i8** %25, null
  br i1 %26, label %27, label %46

27:                                               ; preds = %24
  store i32 0, i32* %9, align 4
  br label %28

28:                                               ; preds = %42, %27
  %29 = load i32, i32* %9, align 4
  %30 = load i32, i32* %8, align 4
  %31 = icmp ult i32 %29, %30
  br i1 %31, label %32, label %45

32:                                               ; preds = %28
  %33 = load i8**, i8*** %10, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i32 1
  store i8** %34, i8*** %10, align 8
  %35 = load i8*, i8** %33, align 8
  store i8* %35, i8** %12, align 8
  %36 = load i8**, i8*** %11, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i32 1
  store i8** %37, i8*** %11, align 8
  %38 = load i8*, i8** %36, align 8
  store i8* %38, i8** %13, align 8
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %40 = load i8*, i8** %12, align 8
  %41 = load i8*, i8** %13, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %39, i8* noundef %40, i8* noundef %41)
  br label %42

42:                                               ; preds = %32
  %43 = load i32, i32* %9, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %9, align 4
  br label %28, !llvm.loop !71

45:                                               ; preds = %28
  br label %86

46:                                               ; preds = %24, %19
  %47 = load i8**, i8*** %10, align 8
  %48 = icmp ne i8** %47, null
  br i1 %48, label %49, label %65

49:                                               ; preds = %46
  store i32 0, i32* %9, align 4
  br label %50

50:                                               ; preds = %61, %49
  %51 = load i32, i32* %9, align 4
  %52 = load i32, i32* %8, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %54, label %64

54:                                               ; preds = %50
  %55 = load i8**, i8*** %10, align 8
  %56 = load i8*, i8** %55, align 8
  store i8* %56, i8** %14, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %58 = load i8*, i8** %14, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %57, i8* noundef %58, i8* noundef null)
  %59 = load i8**, i8*** %10, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i32 1
  store i8** %60, i8*** %10, align 8
  br label %61

61:                                               ; preds = %54
  %62 = load i32, i32* %9, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %9, align 4
  br label %50, !llvm.loop !72

64:                                               ; preds = %50
  br label %85

65:                                               ; preds = %46
  %66 = load i8**, i8*** %11, align 8
  %67 = icmp ne i8** %66, null
  br i1 %67, label %68, label %84

68:                                               ; preds = %65
  store i32 0, i32* %9, align 4
  br label %69

69:                                               ; preds = %80, %68
  %70 = load i32, i32* %9, align 4
  %71 = load i32, i32* %8, align 4
  %72 = icmp ult i32 %70, %71
  br i1 %72, label %73, label %83

73:                                               ; preds = %69
  %74 = load i8**, i8*** %11, align 8
  %75 = load i8*, i8** %74, align 8
  store i8* %75, i8** %15, align 8
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %77 = load i8*, i8** %15, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %76, i8* noundef null, i8* noundef %77)
  %78 = load i8**, i8*** %11, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i32 1
  store i8** %79, i8*** %11, align 8
  br label %80

80:                                               ; preds = %73
  %81 = load i32, i32* %9, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %9, align 4
  br label %69, !llvm.loop !73

83:                                               ; preds = %69
  br label %84

84:                                               ; preds = %83, %65
  br label %85

85:                                               ; preds = %84, %64
  br label %86

86:                                               ; preds = %18, %85, %45
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_image(%struct.png_struct_def* noalias noundef %0, i8** noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8** %1, i8*** %4, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  br label %72

13:                                               ; preds = %2
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 64
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %21 = call i32 bitcast (i32 (%struct.png_struct_def.205*)* @png_set_interlace_handling to i32 (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %20)
  store i32 %21, i32* %7, align 4
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_start_read_image(%struct.png_struct_def* noundef %22)
  br label %45

23:                                               ; preds = %13
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 58
  %26 = load i8, i8* %25, align 4
  %27 = zext i8 %26 to i32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %42

29:                                               ; preds = %23
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 17
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %36, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9.133, i64 0, i64 0))
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 38
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 39
  store i32 %39, i32* %41, align 8
  br label %42

42:                                               ; preds = %35, %29, %23
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %44 = call i32 bitcast (i32 (%struct.png_struct_def.205*)* @png_set_interlace_handling to i32 (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %43)
  store i32 %44, i32* %7, align 4
  br label %45

45:                                               ; preds = %42, %19
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 38
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %6, align 4
  store i32 0, i32* %8, align 4
  br label %49

49:                                               ; preds = %69, %45
  %50 = load i32, i32* %8, align 4
  %51 = load i32, i32* %7, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %72

53:                                               ; preds = %49
  %54 = load i8**, i8*** %4, align 8
  store i8** %54, i8*** %9, align 8
  store i32 0, i32* %5, align 4
  br label %55

55:                                               ; preds = %65, %53
  %56 = load i32, i32* %5, align 4
  %57 = load i32, i32* %6, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %59, label %68

59:                                               ; preds = %55
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %61 = load i8**, i8*** %9, align 8
  %62 = load i8*, i8** %61, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %60, i8* noundef %62, i8* noundef null)
  %63 = load i8**, i8*** %9, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i32 1
  store i8** %64, i8*** %9, align 8
  br label %65

65:                                               ; preds = %59
  %66 = load i32, i32* %5, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %5, align 4
  br label %55, !llvm.loop !74

68:                                               ; preds = %55
  br label %69

69:                                               ; preds = %68
  %70 = load i32, i32* %8, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %8, align 4
  br label %49, !llvm.loop !75

72:                                               ; preds = %12, %49
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_end(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  br label %299

11:                                               ; preds = %2
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %13 = call i32 @png_chunk_unknown_handling(%struct.png_struct_def* noundef %12, i32 noundef 1229209940)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_read_finish_IDAT(%struct.png_struct_def* noundef %16)
  br label %17

17:                                               ; preds = %15, %11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 61
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %34

23:                                               ; preds = %17
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 54
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 53
  %29 = load i16, i16* %28, align 8
  %30 = zext i16 %29 to i32
  %31 = icmp sgt i32 %26, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %33, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10.134, i64 0, i64 0))
  br label %34

34:                                               ; preds = %32, %23, %17
  br label %35

35:                                               ; preds = %293, %34
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %37 = call i32 @png_read_chunk_header(%struct.png_struct_def* noundef %36)
  store i32 %37, i32* %6, align 4
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 44
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %7, align 4
  %41 = load i32, i32* %7, align 4
  %42 = icmp ne i32 %41, 1229209940
  br i1 %42, label %43, label %48

43:                                               ; preds = %35
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 15
  %46 = load i32, i32* %45, align 4
  %47 = or i32 %46, 8192
  store i32 %47, i32* %45, align 4
  br label %48

48:                                               ; preds = %43, %35
  %49 = load i32, i32* %7, align 4
  %50 = icmp eq i32 %49, 1229278788
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %53 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %54 = load i32, i32* %6, align 4
  call void @png_handle_IEND(%struct.png_struct_def* noundef %52, %struct.png_info_def* noundef %53, i32 noundef %54)
  br label %292

55:                                               ; preds = %48
  %56 = load i32, i32* %7, align 4
  %57 = icmp eq i32 %56, 1229472850
  br i1 %57, label %58, label %62

58:                                               ; preds = %55
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %60 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %61 = load i32, i32* %6, align 4
  call void @png_handle_IHDR(%struct.png_struct_def* noundef %59, %struct.png_info_def* noundef %60, i32 noundef %61)
  br label %291

62:                                               ; preds = %55
  %63 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %64 = icmp eq %struct.png_info_def* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %62
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %67 = load i32, i32* %6, align 4
  %68 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %66, i32 noundef %67)
  br label %290

69:                                               ; preds = %62
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %71 = load i32, i32* %7, align 4
  %72 = call i32 @png_chunk_unknown_handling(%struct.png_struct_def* noundef %70, i32 noundef %71)
  store i32 %72, i32* %5, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %108

74:                                               ; preds = %69
  %75 = load i32, i32* %7, align 4
  %76 = icmp eq i32 %75, 1229209940
  br i1 %76, label %77, label %95

77:                                               ; preds = %74
  %78 = load i32, i32* %6, align 4
  %79 = icmp ugt i32 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %77
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 16
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 8
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %80, %77
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 15
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 8192
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86, %80
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %93, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11.135, i64 0, i64 0))
  br label %94

94:                                               ; preds = %92, %86
  br label %95

95:                                               ; preds = %94, %74
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %97 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %98 = load i32, i32* %6, align 4
  %99 = load i32, i32* %5, align 4
  call void @png_handle_unknown(%struct.png_struct_def* noundef %96, %struct.png_info_def* noundef %97, i32 noundef %98, i32 noundef %99)
  %100 = load i32, i32* %7, align 4
  %101 = icmp eq i32 %100, 1347179589
  br i1 %101, label %102, label %107

102:                                              ; preds = %95
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %104 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 15
  %105 = load i32, i32* %104, align 4
  %106 = or i32 %105, 2
  store i32 %106, i32* %104, align 4
  br label %107

107:                                              ; preds = %102, %95
  br label %289

108:                                              ; preds = %69
  %109 = load i32, i32* %7, align 4
  %110 = icmp eq i32 %109, 1229209940
  br i1 %110, label %111, label %132

111:                                              ; preds = %108
  %112 = load i32, i32* %6, align 4
  %113 = icmp ugt i32 %112, 0
  br i1 %113, label %114, label %120

114:                                              ; preds = %111
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 16
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 8
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %126

120:                                              ; preds = %114, %111
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 15
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 8192
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %120, %114
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %127, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12.136, i64 0, i64 0))
  br label %128

128:                                              ; preds = %126, %120
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %130 = load i32, i32* %6, align 4
  %131 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %129, i32 noundef %130)
  br label %288

132:                                              ; preds = %108
  %133 = load i32, i32* %7, align 4
  %134 = icmp eq i32 %133, 1347179589
  br i1 %134, label %135, label %139

135:                                              ; preds = %132
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %137 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %138 = load i32, i32* %6, align 4
  call void @png_handle_PLTE(%struct.png_struct_def* noundef %136, %struct.png_info_def* noundef %137, i32 noundef %138)
  br label %287

139:                                              ; preds = %132
  %140 = load i32, i32* %7, align 4
  %141 = icmp eq i32 %140, 1649100612
  br i1 %141, label %142, label %146

142:                                              ; preds = %139
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %144 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %145 = load i32, i32* %6, align 4
  call void @png_handle_bKGD(%struct.png_struct_def* noundef %143, %struct.png_info_def* noundef %144, i32 noundef %145)
  br label %286

146:                                              ; preds = %139
  %147 = load i32, i32* %7, align 4
  %148 = icmp eq i32 %147, 1665684045
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %151 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %152 = load i32, i32* %6, align 4
  call void @png_handle_cHRM(%struct.png_struct_def* noundef %150, %struct.png_info_def* noundef %151, i32 noundef %152)
  br label %285

153:                                              ; preds = %146
  %154 = load i32, i32* %7, align 4
  %155 = icmp eq i32 %154, 1700284774
  br i1 %155, label %156, label %160

156:                                              ; preds = %153
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %158 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %159 = load i32, i32* %6, align 4
  call void @png_handle_eXIf(%struct.png_struct_def* noundef %157, %struct.png_info_def* noundef %158, i32 noundef %159)
  br label %284

160:                                              ; preds = %153
  %161 = load i32, i32* %7, align 4
  %162 = icmp eq i32 %161, 1732332865
  br i1 %162, label %163, label %167

163:                                              ; preds = %160
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %165 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %166 = load i32, i32* %6, align 4
  call void @png_handle_gAMA(%struct.png_struct_def* noundef %164, %struct.png_info_def* noundef %165, i32 noundef %166)
  br label %283

167:                                              ; preds = %160
  %168 = load i32, i32* %7, align 4
  %169 = icmp eq i32 %168, 1749635924
  br i1 %169, label %170, label %174

170:                                              ; preds = %167
  %171 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %172 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %173 = load i32, i32* %6, align 4
  call void @png_handle_hIST(%struct.png_struct_def* noundef %171, %struct.png_info_def* noundef %172, i32 noundef %173)
  br label %282

174:                                              ; preds = %167
  %175 = load i32, i32* %7, align 4
  %176 = icmp eq i32 %175, 1866876531
  br i1 %176, label %177, label %181

177:                                              ; preds = %174
  %178 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %179 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %180 = load i32, i32* %6, align 4
  call void @png_handle_oFFs(%struct.png_struct_def* noundef %178, %struct.png_info_def* noundef %179, i32 noundef %180)
  br label %281

181:                                              ; preds = %174
  %182 = load i32, i32* %7, align 4
  %183 = icmp eq i32 %182, 1883455820
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  %185 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %186 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %187 = load i32, i32* %6, align 4
  call void @png_handle_pCAL(%struct.png_struct_def* noundef %185, %struct.png_info_def* noundef %186, i32 noundef %187)
  br label %280

188:                                              ; preds = %181
  %189 = load i32, i32* %7, align 4
  %190 = icmp eq i32 %189, 1933787468
  br i1 %190, label %191, label %195

191:                                              ; preds = %188
  %192 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %193 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %194 = load i32, i32* %6, align 4
  call void @png_handle_sCAL(%struct.png_struct_def* noundef %192, %struct.png_info_def* noundef %193, i32 noundef %194)
  br label %279

195:                                              ; preds = %188
  %196 = load i32, i32* %7, align 4
  %197 = icmp eq i32 %196, 1883789683
  br i1 %197, label %198, label %202

198:                                              ; preds = %195
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %200 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %201 = load i32, i32* %6, align 4
  call void @png_handle_pHYs(%struct.png_struct_def* noundef %199, %struct.png_info_def* noundef %200, i32 noundef %201)
  br label %278

202:                                              ; preds = %195
  %203 = load i32, i32* %7, align 4
  %204 = icmp eq i32 %203, 1933723988
  br i1 %204, label %205, label %209

205:                                              ; preds = %202
  %206 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %207 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %208 = load i32, i32* %6, align 4
  call void @png_handle_sBIT(%struct.png_struct_def* noundef %206, %struct.png_info_def* noundef %207, i32 noundef %208)
  br label %277

209:                                              ; preds = %202
  %210 = load i32, i32* %7, align 4
  %211 = icmp eq i32 %210, 1934772034
  br i1 %211, label %212, label %216

212:                                              ; preds = %209
  %213 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %214 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %215 = load i32, i32* %6, align 4
  call void @png_handle_sRGB(%struct.png_struct_def* noundef %213, %struct.png_info_def* noundef %214, i32 noundef %215)
  br label %276

216:                                              ; preds = %209
  %217 = load i32, i32* %7, align 4
  %218 = icmp eq i32 %217, 1766015824
  br i1 %218, label %219, label %223

219:                                              ; preds = %216
  %220 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %221 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %222 = load i32, i32* %6, align 4
  call void @png_handle_iCCP(%struct.png_struct_def* noundef %220, %struct.png_info_def* noundef %221, i32 noundef %222)
  br label %275

223:                                              ; preds = %216
  %224 = load i32, i32* %7, align 4
  %225 = icmp eq i32 %224, 1934642260
  br i1 %225, label %226, label %230

226:                                              ; preds = %223
  %227 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %228 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %229 = load i32, i32* %6, align 4
  call void @png_handle_sPLT(%struct.png_struct_def* noundef %227, %struct.png_info_def* noundef %228, i32 noundef %229)
  br label %274

230:                                              ; preds = %223
  %231 = load i32, i32* %7, align 4
  %232 = icmp eq i32 %231, 1950701684
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %235 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %236 = load i32, i32* %6, align 4
  call void @png_handle_tEXt(%struct.png_struct_def* noundef %234, %struct.png_info_def* noundef %235, i32 noundef %236)
  br label %273

237:                                              ; preds = %230
  %238 = load i32, i32* %7, align 4
  %239 = icmp eq i32 %238, 1950960965
  br i1 %239, label %240, label %244

240:                                              ; preds = %237
  %241 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %242 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %243 = load i32, i32* %6, align 4
  call void @png_handle_tIME(%struct.png_struct_def* noundef %241, %struct.png_info_def* noundef %242, i32 noundef %243)
  br label %272

244:                                              ; preds = %237
  %245 = load i32, i32* %7, align 4
  %246 = icmp eq i32 %245, 1951551059
  br i1 %246, label %247, label %251

247:                                              ; preds = %244
  %248 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %249 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %250 = load i32, i32* %6, align 4
  call void @png_handle_tRNS(%struct.png_struct_def* noundef %248, %struct.png_info_def* noundef %249, i32 noundef %250)
  br label %271

251:                                              ; preds = %244
  %252 = load i32, i32* %7, align 4
  %253 = icmp eq i32 %252, 2052348020
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %256 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %257 = load i32, i32* %6, align 4
  call void @png_handle_zTXt(%struct.png_struct_def* noundef %255, %struct.png_info_def* noundef %256, i32 noundef %257)
  br label %270

258:                                              ; preds = %251
  %259 = load i32, i32* %7, align 4
  %260 = icmp eq i32 %259, 1767135348
  br i1 %260, label %261, label %265

261:                                              ; preds = %258
  %262 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %263 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %264 = load i32, i32* %6, align 4
  call void @png_handle_iTXt(%struct.png_struct_def* noundef %262, %struct.png_info_def* noundef %263, i32 noundef %264)
  br label %269

265:                                              ; preds = %258
  %266 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %267 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %268 = load i32, i32* %6, align 4
  call void @png_handle_unknown(%struct.png_struct_def* noundef %266, %struct.png_info_def* noundef %267, i32 noundef %268, i32 noundef 0)
  br label %269

269:                                              ; preds = %265, %261
  br label %270

270:                                              ; preds = %269, %254
  br label %271

271:                                              ; preds = %270, %247
  br label %272

272:                                              ; preds = %271, %240
  br label %273

273:                                              ; preds = %272, %233
  br label %274

274:                                              ; preds = %273, %226
  br label %275

275:                                              ; preds = %274, %219
  br label %276

276:                                              ; preds = %275, %212
  br label %277

277:                                              ; preds = %276, %205
  br label %278

278:                                              ; preds = %277, %198
  br label %279

279:                                              ; preds = %278, %191
  br label %280

280:                                              ; preds = %279, %184
  br label %281

281:                                              ; preds = %280, %177
  br label %282

282:                                              ; preds = %281, %170
  br label %283

283:                                              ; preds = %282, %163
  br label %284

284:                                              ; preds = %283, %156
  br label %285

285:                                              ; preds = %284, %149
  br label %286

286:                                              ; preds = %285, %142
  br label %287

287:                                              ; preds = %286, %135
  br label %288

288:                                              ; preds = %287, %128
  br label %289

289:                                              ; preds = %288, %107
  br label %290

290:                                              ; preds = %289, %65
  br label %291

291:                                              ; preds = %290, %58
  br label %292

292:                                              ; preds = %291, %51
  br label %293

293:                                              ; preds = %292
  %294 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %295 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %294, i32 0, i32 15
  %296 = load i32, i32* %295, align 4
  %297 = and i32 %296, 16
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %35, label %299, !llvm.loop !76

299:                                              ; preds = %10, %293
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_destroy_read_struct(%struct.png_struct_def** noundef %0, %struct.png_info_def** noundef %1, %struct.png_info_def** noundef %2) #0 {
  %4 = alloca %struct.png_struct_def**, align 8
  %5 = alloca %struct.png_info_def**, align 8
  %6 = alloca %struct.png_info_def**, align 8
  %7 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def** %0, %struct.png_struct_def*** %4, align 8
  store %struct.png_info_def** %1, %struct.png_info_def*** %5, align 8
  store %struct.png_info_def** %2, %struct.png_info_def*** %6, align 8
  store %struct.png_struct_def* null, %struct.png_struct_def** %7, align 8
  %8 = load %struct.png_struct_def**, %struct.png_struct_def*** %4, align 8
  %9 = icmp ne %struct.png_struct_def** %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = load %struct.png_struct_def**, %struct.png_struct_def*** %4, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  store %struct.png_struct_def* %12, %struct.png_struct_def** %7, align 8
  br label %13

13:                                               ; preds = %10, %3
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %15 = icmp eq %struct.png_struct_def* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  br label %25

17:                                               ; preds = %13
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %19 = load %struct.png_info_def**, %struct.png_info_def*** %6, align 8
  call void @png_destroy_info_struct(%struct.png_struct_def* noundef %18, %struct.png_info_def** noundef %19)
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %21 = load %struct.png_info_def**, %struct.png_info_def*** %5, align 8
  call void @png_destroy_info_struct(%struct.png_struct_def* noundef %20, %struct.png_info_def** noundef %21)
  %22 = load %struct.png_struct_def**, %struct.png_struct_def*** %4, align 8
  store %struct.png_struct_def* null, %struct.png_struct_def** %22, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_read_destroy(%struct.png_struct_def* noundef %23)
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_destroy_png_struct to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %24)
  br label %25

25:                                               ; preds = %17, %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_read_destroy(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_destroy_gamma_table(%struct.png_struct_def* noundef %3)
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 128
  %7 = load i8*, i8** %6, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %4, i8* noundef %7)
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 128
  store i8* null, i8** %9, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 143
  %13 = load i8*, i8** %12, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %10, i8* noundef %13)
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 143
  store i8* null, i8** %15, align 8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 139
  %19 = load i8*, i8** %18, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %16, i8* noundef %19)
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 139
  store i8* null, i8** %21, align 8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 108
  %25 = load i8*, i8** %24, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %22, i8* noundef %25)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 108
  store i8* null, i8** %27, align 8
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 109
  %31 = load i8*, i8** %30, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %28, i8* noundef %31)
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 109
  store i8* null, i8** %33, align 8
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 112
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 4096
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %1
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %41 = bitcast %struct.png_struct_def* %40 to i8*
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 52
  %44 = load %struct.png_color_struct*, %struct.png_color_struct** %43, align 8
  %45 = bitcast %struct.png_color_struct* %44 to i8*
  call void @png_zfree(i8* noundef %41, i8* noundef %45)
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 52
  store %struct.png_color_struct* null, %struct.png_color_struct** %47, align 8
  br label %48

48:                                               ; preds = %39, %1
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 112
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, -4097
  store i32 %52, i32* %50, align 4
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 112
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 8192
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %48
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 89
  %62 = load i8*, i8** %61, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %59, i8* noundef %62)
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 89
  store i8* null, i8** %64, align 8
  br label %65

65:                                               ; preds = %58, %48
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 112
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, -8193
  store i32 %69, i32* %67, align 4
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 19
  %72 = call i32 @inflateEnd(%struct.z_stream_s* noundef %71)
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 97
  %76 = load i8*, i8** %75, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %73, i8* noundef %76)
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 97
  store i8* null, i8** %78, align 8
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 137
  %82 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %81, i32 0, i32 1
  %83 = load i8*, i8** %82, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %79, i8* noundef %83)
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 137
  %86 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %85, i32 0, i32 1
  store i8* null, i8** %86, align 8
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 117
  %90 = load i8*, i8** %89, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %87, i8* noundef %90)
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %91, i32 0, i32 117
  store i8* null, i8** %92, align 8
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 122
  %96 = load i8*, i8** %95, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %93, i8* noundef %96)
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %97, i32 0, i32 122
  store i8* null, i8** %98, align 8
  ret void
}

declare i32 @inflateEnd(%struct.z_stream_s* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_read_status_fn(%struct.png_struct_def* noalias noundef %0, void (%struct.png_struct_def*, i32, i32)* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca void (%struct.png_struct_def*, i32, i32)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store void (%struct.png_struct_def*, i32, i32)* %1, void (%struct.png_struct_def*, i32, i32)** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %4, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 91
  store void (%struct.png_struct_def*, i32, i32)* %9, void (%struct.png_struct_def*, i32, i32)** %11, align 8
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_png(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %14 = icmp eq %struct.png_info_def* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12, %4
  br label %196

16:                                               ; preds = %12
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %18 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_read_info(%struct.png_struct_def* noundef %17, %struct.png_info_def* noundef %18)
  %19 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = icmp ugt i64 %22, 536870911
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %25, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13.139, i64 0, i64 0)) #13
  unreachable

26:                                               ; preds = %16
  %27 = load i32, i32* %7, align 4
  %28 = and i32 %27, 32768
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_scale_16(%struct.png_struct_def* noundef %31)
  br label %32

32:                                               ; preds = %30, %26
  %33 = load i32, i32* %7, align 4
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_strip_16(%struct.png_struct_def* noundef %37)
  br label %38

38:                                               ; preds = %36, %32
  %39 = load i32, i32* %7, align 4
  %40 = and i32 %39, 2
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_strip_alpha(%struct.png_struct_def* noundef %43)
  br label %44

44:                                               ; preds = %42, %38
  %45 = load i32, i32* %7, align 4
  %46 = and i32 %45, 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packing to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %49)
  br label %50

50:                                               ; preds = %48, %44
  %51 = load i32, i32* %7, align 4
  %52 = and i32 %51, 8
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packswap to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %55)
  br label %56

56:                                               ; preds = %54, %50
  %57 = load i32, i32* %7, align 4
  %58 = and i32 %57, 16
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_expand(%struct.png_struct_def* noundef %61)
  br label %62

62:                                               ; preds = %60, %56
  %63 = load i32, i32* %7, align 4
  %64 = and i32 %63, 32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_invert_mono to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %67)
  br label %68

68:                                               ; preds = %66, %62
  %69 = load i32, i32* %7, align 4
  %70 = and i32 %69, 64
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %83

72:                                               ; preds = %68
  %73 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %74 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %73, i32 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 2
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %80 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %81 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %80, i32 0, i32 24
  call void bitcast (void (%struct.png_struct_def.205*, %struct.png_color_8_struct*)* @png_set_shift to void (%struct.png_struct_def*, %struct.png_color_8_struct*)*)(%struct.png_struct_def* noundef %79, %struct.png_color_8_struct* noundef %81)
  br label %82

82:                                               ; preds = %78, %72
  br label %83

83:                                               ; preds = %82, %68
  %84 = load i32, i32* %7, align 4
  %85 = and i32 %84, 128
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_bgr to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %88)
  br label %89

89:                                               ; preds = %87, %83
  %90 = load i32, i32* %7, align 4
  %91 = and i32 %90, 256
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap_alpha to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %94)
  br label %95

95:                                               ; preds = %93, %89
  %96 = load i32, i32* %7, align 4
  %97 = and i32 %96, 512
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %100)
  br label %101

101:                                              ; preds = %99, %95
  %102 = load i32, i32* %7, align 4
  %103 = and i32 %102, 1024
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_invert_alpha to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %106)
  br label %107

107:                                              ; preds = %105, %101
  %108 = load i32, i32* %7, align 4
  %109 = and i32 %108, 8192
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_gray_to_rgb(%struct.png_struct_def* noundef %112)
  br label %113

113:                                              ; preds = %111, %107
  %114 = load i32, i32* %7, align 4
  %115 = and i32 %114, 16384
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_expand_16(%struct.png_struct_def* noundef %118)
  br label %119

119:                                              ; preds = %117, %113
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %121 = call i32 bitcast (i32 (%struct.png_struct_def.205*)* @png_set_interlace_handling to i32 (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %120)
  %122 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %123 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_read_update_info(%struct.png_struct_def* noundef %122, %struct.png_info_def* noundef %123)
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %125 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %124, %struct.png_info_def* noundef %125, i32 noundef 64, i32 noundef 0)
  %126 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %127 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %126, i32 0, i32 53
  %128 = load i8**, i8*** %127, align 8
  %129 = icmp eq i8** %128, null
  br i1 %129, label %130, label %184

130:                                              ; preds = %119
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %132 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %133 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = mul i64 %135, 8
  %137 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %131, i64 noundef %136)
  %138 = bitcast i8* %137 to i8**
  %139 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %140 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %139, i32 0, i32 53
  store i8** %138, i8*** %140, align 8
  store i32 0, i32* %9, align 4
  br label %141

141:                                              ; preds = %154, %130
  %142 = load i32, i32* %9, align 4
  %143 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %144 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = icmp ult i32 %142, %145
  br i1 %146, label %147, label %157

147:                                              ; preds = %141
  %148 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %149 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %148, i32 0, i32 53
  %150 = load i8**, i8*** %149, align 8
  %151 = load i32, i32* %9, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8*, i8** %150, i64 %152
  store i8* null, i8** %153, align 8
  br label %154

154:                                              ; preds = %147
  %155 = load i32, i32* %9, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %9, align 4
  br label %141, !llvm.loop !77

157:                                              ; preds = %141
  %158 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %159 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %158, i32 0, i32 45
  %160 = load i32, i32* %159, align 4
  %161 = or i32 %160, 64
  store i32 %161, i32* %159, align 4
  store i32 0, i32* %9, align 4
  br label %162

162:                                              ; preds = %180, %157
  %163 = load i32, i32* %9, align 4
  %164 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %165 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp ult i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %162
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %170 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %171 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %170, i32 0, i32 3
  %172 = load i64, i64* %171, align 8
  %173 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %169, i64 noundef %172)
  %174 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %175 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %174, i32 0, i32 53
  %176 = load i8**, i8*** %175, align 8
  %177 = load i32, i32* %9, align 4
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i8*, i8** %176, i64 %178
  store i8* %173, i8** %179, align 8
  br label %180

180:                                              ; preds = %168
  %181 = load i32, i32* %9, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %9, align 4
  br label %162, !llvm.loop !78

183:                                              ; preds = %162
  br label %184

184:                                              ; preds = %183, %119
  %185 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %186 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %187 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %186, i32 0, i32 53
  %188 = load i8**, i8*** %187, align 8
  call void @png_read_image(%struct.png_struct_def* noundef %185, i8** noundef %188)
  %189 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %190 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %189, i32 0, i32 2
  %191 = load i32, i32* %190, align 8
  %192 = or i32 %191, 32768
  store i32 %192, i32* %190, align 8
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %194 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_read_end(%struct.png_struct_def* noundef %193, %struct.png_info_def* noundef %194)
  %195 = load i8*, i8** %8, align 8
  br label %196

196:                                              ; preds = %184, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_begin_read_from_stdio(%struct.png_image* noundef %0, %struct._IO_FILE* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  store %struct.png_image* %0, %struct.png_image** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  %6 = load %struct.png_image*, %struct.png_image** %4, align 8
  %7 = icmp ne %struct.png_image* %6, null
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = load %struct.png_image*, %struct.png_image** %4, align 8
  %10 = getelementptr inbounds %struct.png_image, %struct.png_image* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %38

13:                                               ; preds = %8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %15 = icmp ne %struct._IO_FILE* %14, null
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = load %struct.png_image*, %struct.png_image** %4, align 8
  %18 = call i32 @png_image_read_init(%struct.png_image* noundef %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %16
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %22 = bitcast %struct._IO_FILE* %21 to i8*
  %23 = load %struct.png_image*, %struct.png_image** %4, align 8
  %24 = getelementptr inbounds %struct.png_image, %struct.png_image* %23, i32 0, i32 0
  %25 = load %struct.png_control*, %struct.png_control** %24, align 8
  %26 = getelementptr inbounds %struct.png_control, %struct.png_control* %25, i32 0, i32 0
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %26, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 9
  store i8* %22, i8** %28, align 8
  %29 = load %struct.png_image*, %struct.png_image** %4, align 8
  %30 = load %struct.png_image*, %struct.png_image** %4, align 8
  %31 = bitcast %struct.png_image* %30 to i8*
  %32 = call i32 @png_safe_execute(%struct.png_image* noundef %29, i32 (i8*)* noundef @png_image_read_header, i8* noundef %31)
  store i32 %32, i32* %3, align 4
  br label %46

33:                                               ; preds = %16
  br label %37

34:                                               ; preds = %13
  %35 = load %struct.png_image*, %struct.png_image** %4, align 8
  %36 = call i32 @png_image_error(%struct.png_image* noundef %35, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.140, i64 0, i64 0))
  store i32 %36, i32* %3, align 4
  br label %46

37:                                               ; preds = %33
  br label %45

38:                                               ; preds = %8, %2
  %39 = load %struct.png_image*, %struct.png_image** %4, align 8
  %40 = icmp ne %struct.png_image* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load %struct.png_image*, %struct.png_image** %4, align 8
  %43 = call i32 @png_image_error(%struct.png_image* noundef %42, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.141, i64 0, i64 0))
  store i32 %43, i32* %3, align 4
  br label %46

44:                                               ; preds = %38
  br label %45

45:                                               ; preds = %44, %37
  store i32 0, i32* %3, align 4
  br label %46

46:                                               ; preds = %45, %41, %34, %20
  %47 = load i32, i32* %3, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_init(%struct.png_image* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_image*, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca %struct.png_control*, align 8
  store %struct.png_image* %0, %struct.png_image** %3, align 8
  %7 = load %struct.png_image*, %struct.png_image** %3, align 8
  %8 = getelementptr inbounds %struct.png_image, %struct.png_image* %7, i32 0, i32 0
  %9 = load %struct.png_control*, %struct.png_control** %8, align 8
  %10 = icmp eq %struct.png_control* %9, null
  br i1 %10, label %11, label %55

11:                                               ; preds = %1
  %12 = load %struct.png_image*, %struct.png_image** %3, align 8
  %13 = bitcast %struct.png_image* %12 to i8*
  %14 = call noalias %struct.png_struct_def* @png_create_read_struct(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.142, i64 0, i64 0), i8* noundef %13, void (%struct.png_struct_def*, i8*)* noundef @png_safe_error, void (%struct.png_struct_def*, i8*)* noundef @png_safe_warning)
  store %struct.png_struct_def* %14, %struct.png_struct_def** %4, align 8
  %15 = load %struct.png_image*, %struct.png_image** %3, align 8
  %16 = bitcast %struct.png_image* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 104, i1 false)
  %17 = load %struct.png_image*, %struct.png_image** %3, align 8
  %18 = getelementptr inbounds %struct.png_image, %struct.png_image* %17, i32 0, i32 1
  store i32 1, i32* %18, align 8
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = icmp ne %struct.png_struct_def* %19, null
  br i1 %20, label %21, label %52

21:                                               ; preds = %11
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = call noalias %struct.png_info_def* @png_create_info_struct(%struct.png_struct_def* noundef %22)
  store %struct.png_info_def* %23, %struct.png_info_def** %5, align 8
  %24 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %25 = icmp ne %struct.png_info_def* %24, null
  br i1 %25, label %26, label %51

26:                                               ; preds = %21
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %28 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %27, i64 noundef 48)
  %29 = bitcast i8* %28 to %struct.png_control*
  store %struct.png_control* %29, %struct.png_control** %6, align 8
  %30 = load %struct.png_control*, %struct.png_control** %6, align 8
  %31 = icmp ne %struct.png_control* %30, null
  br i1 %31, label %32, label %49

32:                                               ; preds = %26
  %33 = load %struct.png_control*, %struct.png_control** %6, align 8
  %34 = bitcast %struct.png_control* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 48, i1 false)
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %36 = load %struct.png_control*, %struct.png_control** %6, align 8
  %37 = getelementptr inbounds %struct.png_control, %struct.png_control* %36, i32 0, i32 0
  store %struct.png_struct_def* %35, %struct.png_struct_def** %37, align 8
  %38 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %39 = load %struct.png_control*, %struct.png_control** %6, align 8
  %40 = getelementptr inbounds %struct.png_control, %struct.png_control* %39, i32 0, i32 1
  store %struct.png_info_def* %38, %struct.png_info_def** %40, align 8
  %41 = load %struct.png_control*, %struct.png_control** %6, align 8
  %42 = getelementptr inbounds %struct.png_control, %struct.png_control* %41, i32 0, i32 5
  %43 = load i8, i8* %42, align 8
  %44 = and i8 %43, -2
  %45 = or i8 %44, 0
  store i8 %45, i8* %42, align 8
  %46 = load %struct.png_control*, %struct.png_control** %6, align 8
  %47 = load %struct.png_image*, %struct.png_image** %3, align 8
  %48 = getelementptr inbounds %struct.png_image, %struct.png_image* %47, i32 0, i32 0
  store %struct.png_control* %46, %struct.png_control** %48, align 8
  store i32 1, i32* %2, align 4
  br label %58

49:                                               ; preds = %26
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_destroy_info_struct(%struct.png_struct_def* noundef %50, %struct.png_info_def** noundef %5)
  br label %51

51:                                               ; preds = %49, %21
  call void @png_destroy_read_struct(%struct.png_struct_def** noundef %4, %struct.png_info_def** noundef null, %struct.png_info_def** noundef null)
  br label %52

52:                                               ; preds = %51, %11
  %53 = load %struct.png_image*, %struct.png_image** %3, align 8
  %54 = call i32 @png_image_error(%struct.png_image* noundef %53, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27.143, i64 0, i64 0))
  store i32 %54, i32* %2, align 4
  br label %58

55:                                               ; preds = %1
  %56 = load %struct.png_image*, %struct.png_image** %3, align 8
  %57 = call i32 @png_image_error(%struct.png_image* noundef %56, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28.144, i64 0, i64 0))
  store i32 %57, i32* %2, align 4
  br label %58

58:                                               ; preds = %55, %52, %32
  %59 = load i32, i32* %2, align 4
  ret i32 %59
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_header(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image*, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = bitcast i8* %8 to %struct.png_image*
  store %struct.png_image* %9, %struct.png_image** %3, align 8
  %10 = load %struct.png_image*, %struct.png_image** %3, align 8
  %11 = getelementptr inbounds %struct.png_image, %struct.png_image* %10, i32 0, i32 0
  %12 = load %struct.png_control*, %struct.png_control** %11, align 8
  %13 = getelementptr inbounds %struct.png_control, %struct.png_control* %12, i32 0, i32 0
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  store %struct.png_struct_def* %14, %struct.png_struct_def** %4, align 8
  %15 = load %struct.png_image*, %struct.png_image** %3, align 8
  %16 = getelementptr inbounds %struct.png_image, %struct.png_image* %15, i32 0, i32 0
  %17 = load %struct.png_control*, %struct.png_control** %16, align 8
  %18 = getelementptr inbounds %struct.png_control, %struct.png_control* %17, i32 0, i32 1
  %19 = load %struct.png_info_def*, %struct.png_info_def** %18, align 8
  store %struct.png_info_def* %19, %struct.png_info_def** %5, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_set_benign_errors(%struct.png_struct_def* noundef %20, i32 noundef 1)
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %22 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_read_info(%struct.png_struct_def* noundef %21, %struct.png_info_def* noundef %22)
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 37
  %25 = load i32, i32* %24, align 8
  %26 = load %struct.png_image*, %struct.png_image** %3, align 8
  %27 = getelementptr inbounds %struct.png_image, %struct.png_image* %26, i32 0, i32 2
  store i32 %25, i32* %27, align 4
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 38
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.png_image*, %struct.png_image** %3, align 8
  %32 = getelementptr inbounds %struct.png_image, %struct.png_image* %31, i32 0, i32 3
  store i32 %30, i32* %32, align 8
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %34 = call i32 @png_image_format(%struct.png_struct_def* noundef %33)
  store i32 %34, i32* %6, align 4
  %35 = load i32, i32* %6, align 4
  %36 = load %struct.png_image*, %struct.png_image** %3, align 8
  %37 = getelementptr inbounds %struct.png_image, %struct.png_image* %36, i32 0, i32 4
  store i32 %35, i32* %37, align 4
  %38 = load i32, i32* %6, align 4
  %39 = and i32 %38, 2
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %1
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 145
  %44 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %43, i32 0, i32 4
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 32834
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %54

49:                                               ; preds = %41
  %50 = load %struct.png_image*, %struct.png_image** %3, align 8
  %51 = getelementptr inbounds %struct.png_image, %struct.png_image* %50, i32 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = or i32 %52, 1
  store i32 %53, i32* %51, align 8
  br label %54

54:                                               ; preds = %49, %41, %1
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 61
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  switch i32 %58, label %70 [
    i32 0, label %59
    i32 3, label %65
  ]

59:                                               ; preds = %54
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 62
  %62 = load i8, i8* %61, align 8
  %63 = zext i8 %62 to i32
  %64 = shl i32 1, %63
  store i32 %64, i32* %7, align 4
  br label %71

65:                                               ; preds = %54
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 53
  %68 = load i16, i16* %67, align 8
  %69 = zext i16 %68 to i32
  store i32 %69, i32* %7, align 4
  br label %71

70:                                               ; preds = %54
  store i32 256, i32* %7, align 4
  br label %71

71:                                               ; preds = %70, %65, %59
  %72 = load i32, i32* %7, align 4
  %73 = icmp ugt i32 %72, 256
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  store i32 256, i32* %7, align 4
  br label %75

75:                                               ; preds = %74, %71
  %76 = load i32, i32* %7, align 4
  %77 = load %struct.png_image*, %struct.png_image** %3, align 8
  %78 = getelementptr inbounds %struct.png_image, %struct.png_image* %77, i32 0, i32 6
  store i32 %76, i32* %78, align 4
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_format(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  store i32 0, i32* %3, align 4
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 61
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = and i32 %7, 2
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = load i32, i32* %3, align 4
  %12 = or i32 %11, 2
  store i32 %12, i32* %3, align 4
  br label %13

13:                                               ; preds = %10, %1
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 61
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = and i32 %17, 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = load i32, i32* %3, align 4
  %22 = or i32 %21, 1
  store i32 %22, i32* %3, align 4
  br label %33

23:                                               ; preds = %13
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 55
  %26 = load i16, i16* %25, align 8
  %27 = zext i16 %26 to i32
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = load i32, i32* %3, align 4
  %31 = or i32 %30, 1
  store i32 %31, i32* %3, align 4
  br label %32

32:                                               ; preds = %29, %23
  br label %33

33:                                               ; preds = %32, %20
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 62
  %36 = load i8, i8* %35, align 8
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 16
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = load i32, i32* %3, align 4
  %41 = or i32 %40, 4
  store i32 %41, i32* %3, align 4
  br label %42

42:                                               ; preds = %39, %33
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 61
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = and i32 %46, 1
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = load i32, i32* %3, align 4
  %51 = or i32 %50, 8
  store i32 %51, i32* %3, align 4
  br label %52

52:                                               ; preds = %49, %42
  %53 = load i32, i32* %3, align 4
  ret i32 %53
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_begin_read_from_file(%struct.png_image* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  store %struct.png_image* %0, %struct.png_image** %4, align 8
  store i8* %1, i8** %5, align 8
  %7 = load %struct.png_image*, %struct.png_image** %4, align 8
  %8 = icmp ne %struct.png_image* %7, null
  br i1 %8, label %9, label %60

9:                                                ; preds = %2
  %10 = load %struct.png_image*, %struct.png_image** %4, align 8
  %11 = getelementptr inbounds %struct.png_image, %struct.png_image* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %60

14:                                               ; preds = %9
  %15 = load i8*, i8** %5, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %17, label %56

17:                                               ; preds = %14
  %18 = load i8*, i8** %5, align 8
  %19 = call noalias %struct._IO_FILE* @fopen(i8* noundef %18, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.145, i64 0, i64 0))
  store %struct._IO_FILE* %19, %struct._IO_FILE** %6, align 8
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %21 = icmp ne %struct._IO_FILE* %20, null
  br i1 %21, label %22, label %49

22:                                               ; preds = %17
  %23 = load %struct.png_image*, %struct.png_image** %4, align 8
  %24 = call i32 @png_image_read_init(%struct.png_image* noundef %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %46

26:                                               ; preds = %22
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %28 = bitcast %struct._IO_FILE* %27 to i8*
  %29 = load %struct.png_image*, %struct.png_image** %4, align 8
  %30 = getelementptr inbounds %struct.png_image, %struct.png_image* %29, i32 0, i32 0
  %31 = load %struct.png_control*, %struct.png_control** %30, align 8
  %32 = getelementptr inbounds %struct.png_control, %struct.png_control* %31, i32 0, i32 0
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %32, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 9
  store i8* %28, i8** %34, align 8
  %35 = load %struct.png_image*, %struct.png_image** %4, align 8
  %36 = getelementptr inbounds %struct.png_image, %struct.png_image* %35, i32 0, i32 0
  %37 = load %struct.png_control*, %struct.png_control** %36, align 8
  %38 = getelementptr inbounds %struct.png_control, %struct.png_control* %37, i32 0, i32 5
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, -3
  %41 = or i8 %40, 2
  store i8 %41, i8* %38, align 8
  %42 = load %struct.png_image*, %struct.png_image** %4, align 8
  %43 = load %struct.png_image*, %struct.png_image** %4, align 8
  %44 = bitcast %struct.png_image* %43 to i8*
  %45 = call i32 @png_safe_execute(%struct.png_image* noundef %42, i32 (i8*)* noundef @png_image_read_header, i8* noundef %44)
  store i32 %45, i32* %3, align 4
  br label %68

46:                                               ; preds = %22
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %48 = call i32 @fclose(%struct._IO_FILE* noundef %47)
  br label %55

49:                                               ; preds = %17
  %50 = load %struct.png_image*, %struct.png_image** %4, align 8
  %51 = call i32* @__errno_location() #18
  %52 = load i32, i32* %51, align 4
  %53 = call i8* @strerror(i32 noundef %52) #16
  %54 = call i32 @png_image_error(%struct.png_image* noundef %50, i8* noundef %53)
  store i32 %54, i32* %3, align 4
  br label %68

55:                                               ; preds = %46
  br label %59

56:                                               ; preds = %14
  %57 = load %struct.png_image*, %struct.png_image** %4, align 8
  %58 = call i32 @png_image_error(%struct.png_image* noundef %57, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17.146, i64 0, i64 0))
  store i32 %58, i32* %3, align 4
  br label %68

59:                                               ; preds = %55
  br label %67

60:                                               ; preds = %9, %2
  %61 = load %struct.png_image*, %struct.png_image** %4, align 8
  %62 = icmp ne %struct.png_image* %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = load %struct.png_image*, %struct.png_image** %4, align 8
  %65 = call i32 @png_image_error(%struct.png_image* noundef %64, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.18.147, i64 0, i64 0))
  store i32 %65, i32* %3, align 4
  br label %68

66:                                               ; preds = %60
  br label %67

67:                                               ; preds = %66, %59
  store i32 0, i32* %3, align 4
  br label %68

68:                                               ; preds = %67, %63, %56, %49, %26
  %69 = load i32, i32* %3, align 4
  ret i32 %69
}

declare noalias %struct._IO_FILE* @fopen(i8* noundef, i8* noundef) #3

; Function Attrs: nounwind readnone willreturn
declare i32* @__errno_location() #10

; Function Attrs: nounwind
declare i8* @strerror(i32 noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_begin_read_from_memory(%struct.png_image* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_image*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store %struct.png_image* %0, %struct.png_image** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %8 = load %struct.png_image*, %struct.png_image** %5, align 8
  %9 = icmp ne %struct.png_image* %8, null
  br i1 %9, label %10, label %59

10:                                               ; preds = %3
  %11 = load %struct.png_image*, %struct.png_image** %5, align 8
  %12 = getelementptr inbounds %struct.png_image, %struct.png_image* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %59

15:                                               ; preds = %10
  %16 = load i8*, i8** %6, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %55

18:                                               ; preds = %15
  %19 = load i64, i64* %7, align 8
  %20 = icmp ugt i64 %19, 0
  br i1 %20, label %21, label %55

21:                                               ; preds = %18
  %22 = load %struct.png_image*, %struct.png_image** %5, align 8
  %23 = call i32 @png_image_read_init(%struct.png_image* noundef %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %54

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 8
  %27 = load %struct.png_image*, %struct.png_image** %5, align 8
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %27, i32 0, i32 0
  %29 = load %struct.png_control*, %struct.png_control** %28, align 8
  %30 = getelementptr inbounds %struct.png_control, %struct.png_control* %29, i32 0, i32 3
  store i8* %26, i8** %30, align 8
  %31 = load i64, i64* %7, align 8
  %32 = load %struct.png_image*, %struct.png_image** %5, align 8
  %33 = getelementptr inbounds %struct.png_image, %struct.png_image* %32, i32 0, i32 0
  %34 = load %struct.png_control*, %struct.png_control** %33, align 8
  %35 = getelementptr inbounds %struct.png_control, %struct.png_control* %34, i32 0, i32 4
  store i64 %31, i64* %35, align 8
  %36 = load %struct.png_image*, %struct.png_image** %5, align 8
  %37 = bitcast %struct.png_image* %36 to i8*
  %38 = load %struct.png_image*, %struct.png_image** %5, align 8
  %39 = getelementptr inbounds %struct.png_image, %struct.png_image* %38, i32 0, i32 0
  %40 = load %struct.png_control*, %struct.png_control** %39, align 8
  %41 = getelementptr inbounds %struct.png_control, %struct.png_control* %40, i32 0, i32 0
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %41, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 9
  store i8* %37, i8** %43, align 8
  %44 = load %struct.png_image*, %struct.png_image** %5, align 8
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %44, i32 0, i32 0
  %46 = load %struct.png_control*, %struct.png_control** %45, align 8
  %47 = getelementptr inbounds %struct.png_control, %struct.png_control* %46, i32 0, i32 0
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %47, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 8
  store void (%struct.png_struct_def*, i8*, i64)* @png_image_memory_read, void (%struct.png_struct_def*, i8*, i64)** %49, align 8
  %50 = load %struct.png_image*, %struct.png_image** %5, align 8
  %51 = load %struct.png_image*, %struct.png_image** %5, align 8
  %52 = bitcast %struct.png_image* %51 to i8*
  %53 = call i32 @png_safe_execute(%struct.png_image* noundef %50, i32 (i8*)* noundef @png_image_read_header, i8* noundef %52)
  store i32 %53, i32* %4, align 4
  br label %67

54:                                               ; preds = %21
  br label %58

55:                                               ; preds = %18, %15
  %56 = load %struct.png_image*, %struct.png_image** %5, align 8
  %57 = call i32 @png_image_error(%struct.png_image* noundef %56, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19.148, i64 0, i64 0))
  store i32 %57, i32* %4, align 4
  br label %67

58:                                               ; preds = %54
  br label %66

59:                                               ; preds = %10, %3
  %60 = load %struct.png_image*, %struct.png_image** %5, align 8
  %61 = icmp ne %struct.png_image* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = load %struct.png_image*, %struct.png_image** %5, align 8
  %64 = call i32 @png_image_error(%struct.png_image* noundef %63, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.20.149, i64 0, i64 0))
  store i32 %64, i32* %4, align 4
  br label %67

65:                                               ; preds = %59
  br label %66

66:                                               ; preds = %65, %58
  store i32 0, i32* %4, align 4
  br label %67

67:                                               ; preds = %66, %62, %55, %25
  %68 = load i32, i32* %4, align 4
  ret i32 %68
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_image_memory_read(%struct.png_struct_def* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.png_image*, align 8
  %8 = alloca %struct.png_control*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = icmp ne %struct.png_struct_def* %11, null
  br i1 %12, label %13, label %58

13:                                               ; preds = %3
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 9
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %struct.png_image*
  store %struct.png_image* %17, %struct.png_image** %7, align 8
  %18 = load %struct.png_image*, %struct.png_image** %7, align 8
  %19 = icmp ne %struct.png_image* %18, null
  br i1 %19, label %20, label %56

20:                                               ; preds = %13
  %21 = load %struct.png_image*, %struct.png_image** %7, align 8
  %22 = getelementptr inbounds %struct.png_image, %struct.png_image* %21, i32 0, i32 0
  %23 = load %struct.png_control*, %struct.png_control** %22, align 8
  store %struct.png_control* %23, %struct.png_control** %8, align 8
  %24 = load %struct.png_control*, %struct.png_control** %8, align 8
  %25 = icmp ne %struct.png_control* %24, null
  br i1 %25, label %26, label %55

26:                                               ; preds = %20
  %27 = load %struct.png_control*, %struct.png_control** %8, align 8
  %28 = getelementptr inbounds %struct.png_control, %struct.png_control* %27, i32 0, i32 3
  %29 = load i8*, i8** %28, align 8
  store i8* %29, i8** %9, align 8
  %30 = load %struct.png_control*, %struct.png_control** %8, align 8
  %31 = getelementptr inbounds %struct.png_control, %struct.png_control* %30, i32 0, i32 4
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %10, align 8
  %33 = load i8*, i8** %9, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %53

35:                                               ; preds = %26
  %36 = load i64, i64* %10, align 8
  %37 = load i64, i64* %6, align 8
  %38 = icmp uge i64 %36, %37
  br i1 %38, label %39, label %53

39:                                               ; preds = %35
  %40 = load i8*, i8** %5, align 8
  %41 = load i8*, i8** %9, align 8
  %42 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %41, i64 %42, i1 false)
  %43 = load i8*, i8** %9, align 8
  %44 = load i64, i64* %6, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = load %struct.png_control*, %struct.png_control** %8, align 8
  %47 = getelementptr inbounds %struct.png_control, %struct.png_control* %46, i32 0, i32 3
  store i8* %45, i8** %47, align 8
  %48 = load i64, i64* %10, align 8
  %49 = load i64, i64* %6, align 8
  %50 = sub i64 %48, %49
  %51 = load %struct.png_control*, %struct.png_control** %8, align 8
  %52 = getelementptr inbounds %struct.png_control, %struct.png_control* %51, i32 0, i32 4
  store i64 %50, i64* %52, align 8
  br label %58

53:                                               ; preds = %35, %26
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %54, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.150, i64 0, i64 0)) #13
  unreachable

55:                                               ; preds = %20
  br label %56

56:                                               ; preds = %55, %13
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %57, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30.151, i64 0, i64 0)) #13
  unreachable

58:                                               ; preds = %39, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_finish_read(%struct.png_image* noundef %0, %struct.png_color_struct* noundef %1, i8* noundef %2, i32 noundef %3, i8* noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_image*, align 8
  %8 = alloca %struct.png_color_struct*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.png_image_read_control, align 8
  store %struct.png_image* %0, %struct.png_image** %7, align 8
  store %struct.png_color_struct* %1, %struct.png_color_struct** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i8* %4, i8** %11, align 8
  %17 = load %struct.png_image*, %struct.png_image** %7, align 8
  %18 = icmp ne %struct.png_image* %17, null
  br i1 %18, label %19, label %162

19:                                               ; preds = %5
  %20 = load %struct.png_image*, %struct.png_image** %7, align 8
  %21 = getelementptr inbounds %struct.png_image, %struct.png_image* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %162

24:                                               ; preds = %19
  %25 = load %struct.png_image*, %struct.png_image** %7, align 8
  %26 = getelementptr inbounds %struct.png_image, %struct.png_image* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  br label %37

31:                                               ; preds = %24
  %32 = load %struct.png_image*, %struct.png_image** %7, align 8
  %33 = getelementptr inbounds %struct.png_image, %struct.png_image* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 3
  %36 = add i32 %35, 1
  br label %37

37:                                               ; preds = %31, %30
  %38 = phi i32 [ 1, %30 ], [ %36, %31 ]
  store i32 %38, i32* %12, align 4
  %39 = load %struct.png_image*, %struct.png_image** %7, align 8
  %40 = getelementptr inbounds %struct.png_image, %struct.png_image* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %12, align 4
  %43 = udiv i32 2147483647, %42
  %44 = icmp ule i32 %41, %43
  br i1 %44, label %45, label %159

45:                                               ; preds = %37
  %46 = load %struct.png_image*, %struct.png_image** %7, align 8
  %47 = getelementptr inbounds %struct.png_image, %struct.png_image* %46, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %12, align 4
  %50 = mul i32 %48, %49
  store i32 %50, i32* %14, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %45
  %54 = load i32, i32* %14, align 4
  store i32 %54, i32* %10, align 4
  br label %55

55:                                               ; preds = %53, %45
  %56 = load i32, i32* %10, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load i32, i32* %10, align 4
  %60 = sub nsw i32 0, %59
  store i32 %60, i32* %13, align 4
  br label %63

61:                                               ; preds = %55
  %62 = load i32, i32* %10, align 4
  store i32 %62, i32* %13, align 4
  br label %63

63:                                               ; preds = %61, %58
  %64 = load %struct.png_image*, %struct.png_image** %7, align 8
  %65 = getelementptr inbounds %struct.png_image, %struct.png_image* %64, i32 0, i32 0
  %66 = load %struct.png_control*, %struct.png_control** %65, align 8
  %67 = icmp ne %struct.png_control* %66, null
  br i1 %67, label %68, label %156

68:                                               ; preds = %63
  %69 = load i8*, i8** %9, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %71, label %156

71:                                               ; preds = %68
  %72 = load i32, i32* %13, align 4
  %73 = load i32, i32* %14, align 4
  %74 = icmp uge i32 %72, %73
  br i1 %74, label %75, label %156

75:                                               ; preds = %71
  %76 = load %struct.png_image*, %struct.png_image** %7, align 8
  %77 = getelementptr inbounds %struct.png_image, %struct.png_image* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = load %struct.png_image*, %struct.png_image** %7, align 8
  %80 = getelementptr inbounds %struct.png_image, %struct.png_image* %79, i32 0, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 8
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %75
  br label %92

85:                                               ; preds = %75
  %86 = load %struct.png_image*, %struct.png_image** %7, align 8
  %87 = getelementptr inbounds %struct.png_image, %struct.png_image* %86, i32 0, i32 4
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 4
  %90 = lshr i32 %89, 2
  %91 = add i32 %90, 1
  br label %92

92:                                               ; preds = %85, %84
  %93 = phi i32 [ 1, %84 ], [ %91, %85 ]
  %94 = udiv i32 -1, %93
  %95 = load i32, i32* %13, align 4
  %96 = udiv i32 %94, %95
  %97 = icmp ule i32 %78, %96
  br i1 %97, label %98, label %153

98:                                               ; preds = %92
  %99 = load %struct.png_image*, %struct.png_image** %7, align 8
  %100 = getelementptr inbounds %struct.png_image, %struct.png_image* %99, i32 0, i32 4
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %98
  %105 = load %struct.png_image*, %struct.png_image** %7, align 8
  %106 = getelementptr inbounds %struct.png_image, %struct.png_image* %105, i32 0, i32 6
  %107 = load i32, i32* %106, align 4
  %108 = icmp ugt i32 %107, 0
  br i1 %108, label %109, label %150

109:                                              ; preds = %104
  %110 = load i8*, i8** %11, align 8
  %111 = icmp ne i8* %110, null
  br i1 %111, label %112, label %150

112:                                              ; preds = %109, %98
  %113 = bitcast %struct.png_image_read_control* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 80, i1 false)
  %114 = load %struct.png_image*, %struct.png_image** %7, align 8
  %115 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %16, i32 0, i32 0
  store %struct.png_image* %114, %struct.png_image** %115, align 8
  %116 = load i8*, i8** %9, align 8
  %117 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %16, i32 0, i32 1
  store i8* %116, i8** %117, align 8
  %118 = load i32, i32* %10, align 4
  %119 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %16, i32 0, i32 2
  store i32 %118, i32* %119, align 8
  %120 = load i8*, i8** %11, align 8
  %121 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %16, i32 0, i32 3
  store i8* %120, i8** %121, align 8
  %122 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %123 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %16, i32 0, i32 4
  store %struct.png_color_struct* %122, %struct.png_color_struct** %123, align 8
  %124 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %16, i32 0, i32 5
  store i8* null, i8** %124, align 8
  %125 = load %struct.png_image*, %struct.png_image** %7, align 8
  %126 = getelementptr inbounds %struct.png_image, %struct.png_image* %125, i32 0, i32 4
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 8
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %143

130:                                              ; preds = %112
  %131 = load %struct.png_image*, %struct.png_image** %7, align 8
  %132 = bitcast %struct.png_image_read_control* %16 to i8*
  %133 = call i32 @png_safe_execute(%struct.png_image* noundef %131, i32 (i8*)* noundef @png_image_read_colormap, i8* noundef %132)
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %130
  %136 = load %struct.png_image*, %struct.png_image** %7, align 8
  %137 = bitcast %struct.png_image_read_control* %16 to i8*
  %138 = call i32 @png_safe_execute(%struct.png_image* noundef %136, i32 (i8*)* noundef @png_image_read_colormapped, i8* noundef %137)
  %139 = icmp ne i32 %138, 0
  br label %140

140:                                              ; preds = %135, %130
  %141 = phi i1 [ false, %130 ], [ %139, %135 ]
  %142 = zext i1 %141 to i32
  store i32 %142, i32* %15, align 4
  br label %147

143:                                              ; preds = %112
  %144 = load %struct.png_image*, %struct.png_image** %7, align 8
  %145 = bitcast %struct.png_image_read_control* %16 to i8*
  %146 = call i32 @png_safe_execute(%struct.png_image* noundef %144, i32 (i8*)* noundef @png_image_read_direct, i8* noundef %145)
  store i32 %146, i32* %15, align 4
  br label %147

147:                                              ; preds = %143, %140
  %148 = load %struct.png_image*, %struct.png_image** %7, align 8
  call void @png_image_free(%struct.png_image* noundef %148)
  %149 = load i32, i32* %15, align 4
  store i32 %149, i32* %6, align 4
  br label %170

150:                                              ; preds = %109, %104
  %151 = load %struct.png_image*, %struct.png_image** %7, align 8
  %152 = call i32 @png_image_error(%struct.png_image* noundef %151, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21.152, i64 0, i64 0))
  store i32 %152, i32* %6, align 4
  br label %170

153:                                              ; preds = %92
  %154 = load %struct.png_image*, %struct.png_image** %7, align 8
  %155 = call i32 @png_image_error(%struct.png_image* noundef %154, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22.153, i64 0, i64 0))
  store i32 %155, i32* %6, align 4
  br label %170

156:                                              ; preds = %71, %68, %63
  %157 = load %struct.png_image*, %struct.png_image** %7, align 8
  %158 = call i32 @png_image_error(%struct.png_image* noundef %157, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23.154, i64 0, i64 0))
  store i32 %158, i32* %6, align 4
  br label %170

159:                                              ; preds = %37
  %160 = load %struct.png_image*, %struct.png_image** %7, align 8
  %161 = call i32 @png_image_error(%struct.png_image* noundef %160, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24.155, i64 0, i64 0))
  store i32 %161, i32* %6, align 4
  br label %170

162:                                              ; preds = %19, %5
  %163 = load %struct.png_image*, %struct.png_image** %7, align 8
  %164 = icmp ne %struct.png_image* %163, null
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load %struct.png_image*, %struct.png_image** %7, align 8
  %167 = call i32 @png_image_error(%struct.png_image* noundef %166, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.25.156, i64 0, i64 0))
  store i32 %167, i32* %6, align 4
  br label %170

168:                                              ; preds = %162
  br label %169

169:                                              ; preds = %168
  store i32 0, i32* %6, align 4
  br label %170

170:                                              ; preds = %169, %165, %159, %156, %153, %150, %147
  %171 = load i32, i32* %6, align 4
  ret i32 %171
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_colormap(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_read_control*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.png_color_16_struct, align 2
  %23 = alloca i32, align 4
  %24 = alloca %struct.png_color_16_struct, align 2
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca %struct.png_color_16_struct, align 2
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca %struct.png_color_16_struct, align 2
  %45 = alloca i32, align 4
  %46 = alloca i8*, align 8
  %47 = alloca %struct.png_color_struct*, align 8
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %50 = load i8*, i8** %2, align 8
  %51 = bitcast i8* %50 to %struct.png_image_read_control*
  store %struct.png_image_read_control* %51, %struct.png_image_read_control** %3, align 8
  %52 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %53 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %52, i32 0, i32 0
  %54 = load %struct.png_image*, %struct.png_image** %53, align 8
  store %struct.png_image* %54, %struct.png_image** %4, align 8
  %55 = load %struct.png_image*, %struct.png_image** %4, align 8
  %56 = getelementptr inbounds %struct.png_image, %struct.png_image* %55, i32 0, i32 0
  %57 = load %struct.png_control*, %struct.png_control** %56, align 8
  %58 = getelementptr inbounds %struct.png_control, %struct.png_control* %57, i32 0, i32 0
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %58, align 8
  store %struct.png_struct_def* %59, %struct.png_struct_def** %5, align 8
  %60 = load %struct.png_image*, %struct.png_image** %4, align 8
  %61 = getelementptr inbounds %struct.png_image, %struct.png_image* %60, i32 0, i32 4
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %6, align 4
  %63 = load i32, i32* %6, align 4
  %64 = and i32 %63, 4
  %65 = icmp ne i32 %64, 0
  %66 = zext i1 %65 to i64
  %67 = select i1 %65, i32 2, i32 1
  store i32 %67, i32* %7, align 4
  store i32 0, i32* %10, align 4
  store i32 256, i32* %11, align 4
  store i32 0, i32* %15, align 4
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 61
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = and i32 %71, 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %1
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 55
  %77 = load i16, i16* %76, align 8
  %78 = zext i16 %77 to i32
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %123

80:                                               ; preds = %74, %1
  %81 = load i32, i32* %6, align 4
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %123

84:                                               ; preds = %80
  %85 = load i32, i32* %7, align 4
  %86 = icmp eq i32 %85, 2
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  br label %122

88:                                               ; preds = %84
  %89 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %90 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %89, i32 0, i32 4
  %91 = load %struct.png_color_struct*, %struct.png_color_struct** %90, align 8
  %92 = icmp eq %struct.png_color_struct* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %94, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.31.168, i64 0, i64 0)) #13
  unreachable

95:                                               ; preds = %88
  %96 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %97 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %96, i32 0, i32 4
  %98 = load %struct.png_color_struct*, %struct.png_color_struct** %97, align 8
  %99 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %98, i32 0, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  store i32 %101, i32* %13, align 4
  %102 = load i32, i32* %6, align 4
  %103 = and i32 %102, 2
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %118

105:                                              ; preds = %95
  %106 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %107 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %106, i32 0, i32 4
  %108 = load %struct.png_color_struct*, %struct.png_color_struct** %107, align 8
  %109 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %108, i32 0, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  store i32 %111, i32* %12, align 4
  %112 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %113 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %112, i32 0, i32 4
  %114 = load %struct.png_color_struct*, %struct.png_color_struct** %113, align 8
  %115 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %114, i32 0, i32 2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  store i32 %117, i32* %14, align 4
  br label %120

118:                                              ; preds = %95
  %119 = load i32, i32* %13, align 4
  store i32 %119, i32* %12, align 4
  store i32 %119, i32* %14, align 4
  br label %120

120:                                              ; preds = %118, %105
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121, %87
  br label %129

123:                                              ; preds = %80, %74
  %124 = load i32, i32* %7, align 4
  %125 = icmp eq i32 %124, 2
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  store i32 65535, i32* %13, align 4
  store i32 65535, i32* %12, align 4
  store i32 65535, i32* %14, align 4
  br label %128

127:                                              ; preds = %123
  store i32 255, i32* %13, align 4
  store i32 255, i32* %12, align 4
  store i32 255, i32* %14, align 4
  br label %128

128:                                              ; preds = %127, %126
  br label %129

129:                                              ; preds = %128, %122
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %131 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %130, i32 0, i32 145
  %132 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %131, i32 0, i32 4
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %165

137:                                              ; preds = %129
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %138, i32 0, i32 62
  %140 = load i8, i8* %139, align 8
  %141 = zext i8 %140 to i32
  %142 = icmp eq i32 %141, 16
  br i1 %142, label %143, label %153

143:                                              ; preds = %137
  %144 = load %struct.png_image*, %struct.png_image** %4, align 8
  %145 = getelementptr inbounds %struct.png_image, %struct.png_image* %144, i32 0, i32 5
  %146 = load i32, i32* %145, align 8
  %147 = and i32 %146, 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %143
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %151 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %150, i32 0, i32 145
  %152 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %151, i32 0, i32 0
  store i32 100000, i32* %152, align 8
  br label %157

153:                                              ; preds = %143, %137
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %155 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 145
  %156 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %155, i32 0, i32 0
  store i32 45455, i32* %156, align 8
  br label %157

157:                                              ; preds = %153, %149
  %158 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %158, i32 0, i32 145
  %160 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %159, i32 0, i32 4
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = or i32 %162, 1
  %164 = trunc i32 %163 to i16
  store i16 %164, i16* %160, align 2
  br label %165

165:                                              ; preds = %157, %129
  %166 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %167 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %166, i32 0, i32 61
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  switch i32 %169, label %1230 [
    i32 0, label %170
    i32 4, label %338
    i32 2, label %595
    i32 6, label %595
    i32 3, label %1025
  ]

170:                                              ; preds = %165
  %171 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %172 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %171, i32 0, i32 62
  %173 = load i8, i8* %172, align 8
  %174 = zext i8 %173 to i32
  %175 = icmp sle i32 %174, 8
  br i1 %175, label %176, label %252

176:                                              ; preds = %170
  store i32 256, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %178 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %177, i32 0, i32 62
  %179 = load i8, i8* %178, align 8
  %180 = zext i8 %179 to i32
  %181 = shl i32 1, %180
  store i32 %181, i32* %8, align 4
  %182 = load i32, i32* %8, align 4
  %183 = load %struct.png_image*, %struct.png_image** %4, align 8
  %184 = getelementptr inbounds %struct.png_image, %struct.png_image* %183, i32 0, i32 6
  %185 = load i32, i32* %184, align 4
  %186 = icmp ugt i32 %182, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %176
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %188, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32.169, i64 0, i64 0)) #13
  unreachable

189:                                              ; preds = %176
  %190 = load i32, i32* %8, align 4
  %191 = sub i32 %190, 1
  %192 = udiv i32 255, %191
  store i32 %192, i32* %16, align 4
  store i32 0, i32* %9, align 4
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %194 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 55
  %195 = load i16, i16* %194, align 8
  %196 = zext i16 %195 to i32
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %213

198:                                              ; preds = %189
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %200 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %199, i32 0, i32 90
  %201 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %200, i32 0, i32 4
  %202 = load i16, i16* %201, align 8
  %203 = zext i16 %202 to i32
  store i32 %203, i32* %19, align 4
  %204 = load i32, i32* %6, align 4
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %212

207:                                              ; preds = %198
  %208 = load i32, i32* %7, align 4
  %209 = icmp eq i32 %208, 2
  %210 = zext i1 %209 to i64
  %211 = select i1 %209, i32 65535, i32 255
  store i32 %211, i32* %20, align 4
  br label %212

212:                                              ; preds = %207, %198
  br label %213

213:                                              ; preds = %212, %189
  store i32 0, i32* %18, align 4
  store i32 0, i32* %17, align 4
  br label %214

214:                                              ; preds = %237, %213
  %215 = load i32, i32* %17, align 4
  %216 = load i32, i32* %8, align 4
  %217 = icmp ult i32 %215, %216
  br i1 %217, label %218, label %243

218:                                              ; preds = %214
  %219 = load i32, i32* %17, align 4
  %220 = load i32, i32* %19, align 4
  %221 = icmp ne i32 %219, %220
  br i1 %221, label %222, label %228

222:                                              ; preds = %218
  %223 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %224 = load i32, i32* %17, align 4
  %225 = load i32, i32* %18, align 4
  %226 = load i32, i32* %18, align 4
  %227 = load i32, i32* %18, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %223, i32 noundef %224, i32 noundef %225, i32 noundef %226, i32 noundef %227, i32 noundef 255, i32 noundef 3)
  br label %236

228:                                              ; preds = %218
  %229 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %230 = load i32, i32* %17, align 4
  %231 = load i32, i32* %12, align 4
  %232 = load i32, i32* %13, align 4
  %233 = load i32, i32* %14, align 4
  %234 = load i32, i32* %20, align 4
  %235 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %229, i32 noundef %230, i32 noundef %231, i32 noundef %232, i32 noundef %233, i32 noundef %234, i32 noundef %235)
  br label %236

236:                                              ; preds = %228, %222
  br label %237

237:                                              ; preds = %236
  %238 = load i32, i32* %17, align 4
  %239 = add i32 %238, 1
  store i32 %239, i32* %17, align 4
  %240 = load i32, i32* %16, align 4
  %241 = load i32, i32* %18, align 4
  %242 = add i32 %241, %240
  store i32 %242, i32* %18, align 4
  br label %214, !llvm.loop !79

243:                                              ; preds = %214
  store i32 3, i32* %10, align 4
  %244 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %245 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %244, i32 0, i32 62
  %246 = load i8, i8* %245, align 8
  %247 = zext i8 %246 to i32
  %248 = icmp slt i32 %247, 8
  br i1 %248, label %249, label %251

249:                                              ; preds = %243
  %250 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packing to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %250)
  br label %251

251:                                              ; preds = %249, %243
  br label %337

252:                                              ; preds = %170
  store i32 1, i32* %10, align 4
  %253 = load %struct.png_image*, %struct.png_image** %4, align 8
  %254 = getelementptr inbounds %struct.png_image, %struct.png_image* %253, i32 0, i32 6
  %255 = load i32, i32* %254, align 4
  %256 = icmp ugt i32 256, %255
  br i1 %256, label %257, label %259

257:                                              ; preds = %252
  %258 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %258, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.33.170, i64 0, i64 0)) #13
  unreachable

259:                                              ; preds = %252
  %260 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %261 = call i32 @make_gray_colormap(%struct.png_image_read_control* noundef %260)
  store i32 %261, i32* %8, align 4
  %262 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %263 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %262, i32 0, i32 55
  %264 = load i16, i16* %263, align 8
  %265 = zext i16 %264 to i32
  %266 = icmp sgt i32 %265, 0
  br i1 %266, label %267, label %335

267:                                              ; preds = %259
  %268 = load i32, i32* %6, align 4
  %269 = and i32 %268, 1
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %267
  store i32 0, i32* %21, align 4
  br label %328

272:                                              ; preds = %267
  %273 = load i32, i32* %12, align 4
  %274 = load i32, i32* %13, align 4
  %275 = icmp eq i32 %273, %274
  br i1 %275, label %276, label %323

276:                                              ; preds = %272
  %277 = load i32, i32* %13, align 4
  %278 = load i32, i32* %14, align 4
  %279 = icmp eq i32 %277, %278
  br i1 %279, label %280, label %323

280:                                              ; preds = %276
  %281 = load i32, i32* %13, align 4
  store i32 %281, i32* %23, align 4
  %282 = load i32, i32* %7, align 4
  %283 = icmp eq i32 %282, 2
  br i1 %283, label %284, label %314

284:                                              ; preds = %280
  %285 = load i32, i32* %23, align 4
  %286 = mul i32 %285, 255
  %287 = lshr i32 %286, 15
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %288
  %290 = load i16, i16* %289, align 2
  %291 = zext i16 %290 to i32
  %292 = load i32, i32* %23, align 4
  %293 = mul i32 %292, 255
  %294 = and i32 %293, 32767
  %295 = load i32, i32* %23, align 4
  %296 = mul i32 %295, 255
  %297 = lshr i32 %296, 15
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = mul i32 %294, %301
  %303 = lshr i32 %302, 12
  %304 = add i32 %291, %303
  %305 = lshr i32 %304, 8
  %306 = and i32 255, %305
  %307 = trunc i32 %306 to i8
  %308 = zext i8 %307 to i32
  store i32 %308, i32* %23, align 4
  %309 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %310 = load i32, i32* %23, align 4
  %311 = load i32, i32* %13, align 4
  %312 = load i32, i32* %13, align 4
  %313 = load i32, i32* %13, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %309, i32 noundef %310, i32 noundef %311, i32 noundef %312, i32 noundef %313, i32 noundef 65535, i32 noundef 2)
  br label %314

314:                                              ; preds = %284, %280
  %315 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %22, i32 0, i32 0
  store i8 0, i8* %315, align 2
  %316 = load i32, i32* %23, align 4
  %317 = trunc i32 %316 to i16
  %318 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %22, i32 0, i32 3
  store i16 %317, i16* %318, align 2
  %319 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %22, i32 0, i32 2
  store i16 %317, i16* %319, align 2
  %320 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %22, i32 0, i32 1
  store i16 %317, i16* %320, align 2
  %321 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %22, i32 0, i32 4
  store i16 %317, i16* %321, align 2
  %322 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_background_fixed(%struct.png_struct_def* noundef %322, %struct.png_color_16_struct* noundef %22, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  store i32 0, i32* %9, align 4
  br label %1232

323:                                              ; preds = %276, %272
  %324 = load i32, i32* %7, align 4
  %325 = icmp eq i32 %324, 2
  %326 = zext i1 %325 to i64
  %327 = select i1 %325, i32 65535, i32 255
  store i32 %327, i32* %21, align 4
  br label %328

328:                                              ; preds = %323, %271
  store i32 1, i32* %15, align 4
  store i32 2, i32* %9, align 4
  store i32 254, i32* %11, align 4
  %329 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %330 = load i32, i32* %12, align 4
  %331 = load i32, i32* %13, align 4
  %332 = load i32, i32* %14, align 4
  %333 = load i32, i32* %21, align 4
  %334 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %329, i32 noundef 254, i32 noundef %330, i32 noundef %331, i32 noundef %332, i32 noundef %333, i32 noundef %334)
  br label %336

335:                                              ; preds = %259
  store i32 0, i32* %9, align 4
  br label %336

336:                                              ; preds = %335, %328
  br label %337

337:                                              ; preds = %336, %251
  br label %1232

338:                                              ; preds = %165
  store i32 1, i32* %10, align 4
  %339 = load i32, i32* %6, align 4
  %340 = and i32 %339, 1
  %341 = icmp ne i32 %340, 0
  br i1 %341, label %342, label %352

342:                                              ; preds = %338
  %343 = load %struct.png_image*, %struct.png_image** %4, align 8
  %344 = getelementptr inbounds %struct.png_image, %struct.png_image* %343, i32 0, i32 6
  %345 = load i32, i32* %344, align 4
  %346 = icmp ugt i32 256, %345
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  %348 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %348, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34.171, i64 0, i64 0)) #13
  unreachable

349:                                              ; preds = %342
  %350 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %351 = call i32 @make_ga_colormap(%struct.png_image_read_control* noundef %350)
  store i32 %351, i32* %8, align 4
  store i32 231, i32* %11, align 4
  store i32 1, i32* %9, align 4
  br label %594

352:                                              ; preds = %338
  %353 = load i32, i32* %6, align 4
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %364, label %356

356:                                              ; preds = %352
  %357 = load i32, i32* %12, align 4
  %358 = load i32, i32* %13, align 4
  %359 = icmp eq i32 %357, %358
  br i1 %359, label %360, label %416

360:                                              ; preds = %356
  %361 = load i32, i32* %13, align 4
  %362 = load i32, i32* %14, align 4
  %363 = icmp eq i32 %361, %362
  br i1 %363, label %364, label %416

364:                                              ; preds = %360, %352
  %365 = load i32, i32* %13, align 4
  store i32 %365, i32* %25, align 4
  %366 = load %struct.png_image*, %struct.png_image** %4, align 8
  %367 = getelementptr inbounds %struct.png_image, %struct.png_image* %366, i32 0, i32 6
  %368 = load i32, i32* %367, align 4
  %369 = icmp ugt i32 256, %368
  br i1 %369, label %370, label %372

370:                                              ; preds = %364
  %371 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %371, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.35.172, i64 0, i64 0)) #13
  unreachable

372:                                              ; preds = %364
  %373 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %374 = call i32 @make_gray_colormap(%struct.png_image_read_control* noundef %373)
  store i32 %374, i32* %8, align 4
  %375 = load i32, i32* %7, align 4
  %376 = icmp eq i32 %375, 2
  br i1 %376, label %377, label %407

377:                                              ; preds = %372
  %378 = load i32, i32* %25, align 4
  %379 = mul i32 %378, 255
  %380 = lshr i32 %379, 15
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %381
  %383 = load i16, i16* %382, align 2
  %384 = zext i16 %383 to i32
  %385 = load i32, i32* %25, align 4
  %386 = mul i32 %385, 255
  %387 = and i32 %386, 32767
  %388 = load i32, i32* %25, align 4
  %389 = mul i32 %388, 255
  %390 = lshr i32 %389, 15
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %391
  %393 = load i8, i8* %392, align 1
  %394 = zext i8 %393 to i32
  %395 = mul i32 %387, %394
  %396 = lshr i32 %395, 12
  %397 = add i32 %384, %396
  %398 = lshr i32 %397, 8
  %399 = and i32 255, %398
  %400 = trunc i32 %399 to i8
  %401 = zext i8 %400 to i32
  store i32 %401, i32* %25, align 4
  %402 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %403 = load i32, i32* %25, align 4
  %404 = load i32, i32* %13, align 4
  %405 = load i32, i32* %13, align 4
  %406 = load i32, i32* %13, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %402, i32 noundef %403, i32 noundef %404, i32 noundef %405, i32 noundef %406, i32 noundef 65535, i32 noundef 2)
  br label %407

407:                                              ; preds = %377, %372
  %408 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %24, i32 0, i32 0
  store i8 0, i8* %408, align 2
  %409 = load i32, i32* %25, align 4
  %410 = trunc i32 %409 to i16
  %411 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %24, i32 0, i32 3
  store i16 %410, i16* %411, align 2
  %412 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %24, i32 0, i32 2
  store i16 %410, i16* %412, align 2
  %413 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %24, i32 0, i32 1
  store i16 %410, i16* %413, align 2
  %414 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %24, i32 0, i32 4
  store i16 %410, i16* %414, align 2
  %415 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_background_fixed(%struct.png_struct_def* noundef %415, %struct.png_color_16_struct* noundef %24, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  store i32 0, i32* %9, align 4
  br label %593

416:                                              ; preds = %360, %356
  %417 = load %struct.png_image*, %struct.png_image** %4, align 8
  %418 = getelementptr inbounds %struct.png_image, %struct.png_image* %417, i32 0, i32 6
  %419 = load i32, i32* %418, align 4
  %420 = icmp ugt i32 256, %419
  br i1 %420, label %421, label %423

421:                                              ; preds = %416
  %422 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %422, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36.173, i64 0, i64 0)) #13
  unreachable

423:                                              ; preds = %416
  store i32 0, i32* %26, align 4
  br label %424

424:                                              ; preds = %427, %423
  %425 = load i32, i32* %26, align 4
  %426 = icmp ult i32 %425, 231
  br i1 %426, label %427, label %438

427:                                              ; preds = %424
  %428 = load i32, i32* %26, align 4
  %429 = mul i32 %428, 256
  %430 = add i32 %429, 115
  %431 = udiv i32 %430, 231
  store i32 %431, i32* %28, align 4
  %432 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %433 = load i32, i32* %26, align 4
  %434 = add i32 %433, 1
  store i32 %434, i32* %26, align 4
  %435 = load i32, i32* %28, align 4
  %436 = load i32, i32* %28, align 4
  %437 = load i32, i32* %28, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %432, i32 noundef %433, i32 noundef %435, i32 noundef %436, i32 noundef %437, i32 noundef 255, i32 noundef 1)
  br label %424, !llvm.loop !80

438:                                              ; preds = %424
  %439 = load i32, i32* %26, align 4
  store i32 %439, i32* %11, align 4
  %440 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %441 = load i32, i32* %26, align 4
  %442 = add i32 %441, 1
  store i32 %442, i32* %26, align 4
  %443 = load i32, i32* %12, align 4
  %444 = load i32, i32* %13, align 4
  %445 = load i32, i32* %14, align 4
  %446 = load i32, i32* %7, align 4
  %447 = icmp eq i32 %446, 2
  %448 = zext i1 %447 to i64
  %449 = select i1 %447, i32 65535, i32 255
  %450 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %440, i32 noundef %441, i32 noundef %443, i32 noundef %444, i32 noundef %445, i32 noundef %449, i32 noundef %450)
  %451 = load i32, i32* %7, align 4
  %452 = icmp eq i32 %451, 1
  br i1 %452, label %453, label %469

453:                                              ; preds = %438
  %454 = load i32, i32* %12, align 4
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %455
  %457 = load i16, i16* %456, align 2
  %458 = zext i16 %457 to i32
  store i32 %458, i32* %12, align 4
  %459 = load i32, i32* %13, align 4
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %460
  %462 = load i16, i16* %461, align 2
  %463 = zext i16 %462 to i32
  store i32 %463, i32* %13, align 4
  %464 = load i32, i32* %14, align 4
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %465
  %467 = load i16, i16* %466, align 2
  %468 = zext i16 %467 to i32
  store i32 %468, i32* %14, align 4
  br label %469

469:                                              ; preds = %453, %438
  store i32 1, i32* %27, align 4
  br label %470

470:                                              ; preds = %588, %469
  %471 = load i32, i32* %27, align 4
  %472 = icmp ult i32 %471, 5
  br i1 %472, label %473, label %591

473:                                              ; preds = %470
  %474 = load i32, i32* %27, align 4
  %475 = mul i32 51, %474
  store i32 %475, i32* %30, align 4
  %476 = load i32, i32* %30, align 4
  %477 = sub i32 255, %476
  %478 = load i32, i32* %12, align 4
  %479 = mul i32 %477, %478
  store i32 %479, i32* %31, align 4
  %480 = load i32, i32* %30, align 4
  %481 = sub i32 255, %480
  %482 = load i32, i32* %13, align 4
  %483 = mul i32 %481, %482
  store i32 %483, i32* %32, align 4
  %484 = load i32, i32* %30, align 4
  %485 = sub i32 255, %484
  %486 = load i32, i32* %14, align 4
  %487 = mul i32 %485, %486
  store i32 %487, i32* %33, align 4
  store i32 0, i32* %29, align 4
  br label %488

488:                                              ; preds = %584, %473
  %489 = load i32, i32* %29, align 4
  %490 = icmp ult i32 %489, 6
  br i1 %490, label %491, label %587

491:                                              ; preds = %488
  %492 = load i32, i32* %29, align 4
  %493 = mul i32 %492, 51
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %494
  %496 = load i16, i16* %495, align 2
  %497 = zext i16 %496 to i32
  %498 = load i32, i32* %30, align 4
  %499 = mul i32 %497, %498
  store i32 %499, i32* %34, align 4
  %500 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %501 = load i32, i32* %26, align 4
  %502 = add i32 %501, 1
  store i32 %502, i32* %26, align 4
  %503 = load i32, i32* %34, align 4
  %504 = load i32, i32* %31, align 4
  %505 = add i32 %503, %504
  %506 = lshr i32 %505, 15
  %507 = zext i32 %506 to i64
  %508 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %507
  %509 = load i16, i16* %508, align 2
  %510 = zext i16 %509 to i32
  %511 = load i32, i32* %34, align 4
  %512 = load i32, i32* %31, align 4
  %513 = add i32 %511, %512
  %514 = and i32 %513, 32767
  %515 = load i32, i32* %34, align 4
  %516 = load i32, i32* %31, align 4
  %517 = add i32 %515, %516
  %518 = lshr i32 %517, 15
  %519 = zext i32 %518 to i64
  %520 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %519
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = mul i32 %514, %522
  %524 = lshr i32 %523, 12
  %525 = add i32 %510, %524
  %526 = lshr i32 %525, 8
  %527 = and i32 255, %526
  %528 = trunc i32 %527 to i8
  %529 = zext i8 %528 to i32
  %530 = load i32, i32* %34, align 4
  %531 = load i32, i32* %32, align 4
  %532 = add i32 %530, %531
  %533 = lshr i32 %532, 15
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %534
  %536 = load i16, i16* %535, align 2
  %537 = zext i16 %536 to i32
  %538 = load i32, i32* %34, align 4
  %539 = load i32, i32* %32, align 4
  %540 = add i32 %538, %539
  %541 = and i32 %540, 32767
  %542 = load i32, i32* %34, align 4
  %543 = load i32, i32* %32, align 4
  %544 = add i32 %542, %543
  %545 = lshr i32 %544, 15
  %546 = zext i32 %545 to i64
  %547 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %546
  %548 = load i8, i8* %547, align 1
  %549 = zext i8 %548 to i32
  %550 = mul i32 %541, %549
  %551 = lshr i32 %550, 12
  %552 = add i32 %537, %551
  %553 = lshr i32 %552, 8
  %554 = and i32 255, %553
  %555 = trunc i32 %554 to i8
  %556 = zext i8 %555 to i32
  %557 = load i32, i32* %34, align 4
  %558 = load i32, i32* %33, align 4
  %559 = add i32 %557, %558
  %560 = lshr i32 %559, 15
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %561
  %563 = load i16, i16* %562, align 2
  %564 = zext i16 %563 to i32
  %565 = load i32, i32* %34, align 4
  %566 = load i32, i32* %33, align 4
  %567 = add i32 %565, %566
  %568 = and i32 %567, 32767
  %569 = load i32, i32* %34, align 4
  %570 = load i32, i32* %33, align 4
  %571 = add i32 %569, %570
  %572 = lshr i32 %571, 15
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %573
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i32
  %577 = mul i32 %568, %576
  %578 = lshr i32 %577, 12
  %579 = add i32 %564, %578
  %580 = lshr i32 %579, 8
  %581 = and i32 255, %580
  %582 = trunc i32 %581 to i8
  %583 = zext i8 %582 to i32
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %500, i32 noundef %501, i32 noundef %529, i32 noundef %556, i32 noundef %583, i32 noundef 255, i32 noundef 1)
  br label %584

584:                                              ; preds = %491
  %585 = load i32, i32* %29, align 4
  %586 = add i32 %585, 1
  store i32 %586, i32* %29, align 4
  br label %488, !llvm.loop !81

587:                                              ; preds = %488
  br label %588

588:                                              ; preds = %587
  %589 = load i32, i32* %27, align 4
  %590 = add i32 %589, 1
  store i32 %590, i32* %27, align 4
  br label %470, !llvm.loop !82

591:                                              ; preds = %470
  %592 = load i32, i32* %26, align 4
  store i32 %592, i32* %8, align 4
  store i32 1, i32* %9, align 4
  br label %593

593:                                              ; preds = %591, %407
  br label %594

594:                                              ; preds = %593, %349
  br label %1232

595:                                              ; preds = %165, %165
  %596 = load i32, i32* %6, align 4
  %597 = and i32 %596, 2
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %745

599:                                              ; preds = %595
  %600 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_rgb_to_gray_fixed(%struct.png_struct_def* noundef %600, i32 noundef 1, i32 noundef -1, i32 noundef -1)
  store i32 1, i32* %10, align 4
  %601 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %602 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %601, i32 0, i32 61
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i32
  %605 = icmp eq i32 %604, 6
  br i1 %605, label %612, label %606

606:                                              ; preds = %599
  %607 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %608 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %607, i32 0, i32 55
  %609 = load i16, i16* %608, align 8
  %610 = zext i16 %609 to i32
  %611 = icmp sgt i32 %610, 0
  br i1 %611, label %612, label %626

612:                                              ; preds = %606, %599
  %613 = load i32, i32* %6, align 4
  %614 = and i32 %613, 1
  %615 = icmp ne i32 %614, 0
  br i1 %615, label %616, label %626

616:                                              ; preds = %612
  store i32 1, i32* %15, align 4
  %617 = load %struct.png_image*, %struct.png_image** %4, align 8
  %618 = getelementptr inbounds %struct.png_image, %struct.png_image* %617, i32 0, i32 6
  %619 = load i32, i32* %618, align 4
  %620 = icmp ugt i32 256, %619
  br i1 %620, label %621, label %623

621:                                              ; preds = %616
  %622 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %622, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37.174, i64 0, i64 0)) #13
  unreachable

623:                                              ; preds = %616
  %624 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %625 = call i32 @make_ga_colormap(%struct.png_image_read_control* noundef %624)
  store i32 %625, i32* %8, align 4
  store i32 231, i32* %11, align 4
  store i32 1, i32* %9, align 4
  br label %744

626:                                              ; preds = %612, %606
  %627 = load %struct.png_image*, %struct.png_image** %4, align 8
  %628 = getelementptr inbounds %struct.png_image, %struct.png_image* %627, i32 0, i32 6
  %629 = load i32, i32* %628, align 4
  %630 = icmp ugt i32 256, %629
  br i1 %630, label %631, label %633

631:                                              ; preds = %626
  %632 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %632, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38.175, i64 0, i64 0)) #13
  unreachable

633:                                              ; preds = %626
  %634 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %635 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %634, i32 0, i32 61
  %636 = load i8, i8* %635, align 1
  %637 = zext i8 %636 to i32
  %638 = icmp eq i32 %637, 6
  br i1 %638, label %645, label %639

639:                                              ; preds = %633
  %640 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %641 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %640, i32 0, i32 55
  %642 = load i16, i16* %641, align 8
  %643 = zext i16 %642 to i32
  %644 = icmp sgt i32 %643, 0
  br i1 %644, label %645, label %655

645:                                              ; preds = %639, %633
  %646 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %647 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %646, i32 0, i32 145
  %648 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %647, i32 0, i32 0
  %649 = load i32, i32* %648, align 8
  %650 = call i32 @png_gamma_not_sRGB(i32 noundef %649)
  %651 = icmp ne i32 %650, 0
  br i1 %651, label %652, label %655

652:                                              ; preds = %645
  %653 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %654 = call i32 @make_gray_file_colormap(%struct.png_image_read_control* noundef %653)
  store i32 %654, i32* %8, align 4
  store i32 3, i32* %10, align 4
  br label %658

655:                                              ; preds = %645, %639
  %656 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %657 = call i32 @make_gray_colormap(%struct.png_image_read_control* noundef %656)
  store i32 %657, i32* %8, align 4
  br label %658

658:                                              ; preds = %655, %652
  %659 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %660 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %659, i32 0, i32 61
  %661 = load i8, i8* %660, align 1
  %662 = zext i8 %661 to i32
  %663 = icmp eq i32 %662, 6
  br i1 %663, label %670, label %664

664:                                              ; preds = %658
  %665 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %666 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %665, i32 0, i32 55
  %667 = load i16, i16* %666, align 8
  %668 = zext i16 %667 to i32
  %669 = icmp sgt i32 %668, 0
  br i1 %669, label %670, label %743

670:                                              ; preds = %664, %658
  %671 = load i32, i32* %13, align 4
  store i32 %671, i32* %36, align 4
  %672 = load i32, i32* %10, align 4
  %673 = icmp eq i32 %672, 3
  br i1 %673, label %674, label %700

674:                                              ; preds = %670
  %675 = load i32, i32* %7, align 4
  %676 = icmp eq i32 %675, 1
  br i1 %676, label %677, label %683

677:                                              ; preds = %674
  %678 = load i32, i32* %36, align 4
  %679 = zext i32 %678 to i64
  %680 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %679
  %681 = load i16, i16* %680, align 2
  %682 = zext i16 %681 to i32
  store i32 %682, i32* %36, align 4
  br label %683

683:                                              ; preds = %677, %674
  %684 = load i32, i32* %36, align 4
  %685 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %686 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %685, i32 0, i32 145
  %687 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %686, i32 0, i32 0
  %688 = load i32, i32* %687, align 8
  %689 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %684, i32 noundef %688)
  %690 = zext i16 %689 to i32
  %691 = mul i32 %690, 255
  %692 = add i32 %691, 32895
  %693 = lshr i32 %692, 16
  store i32 %693, i32* %36, align 4
  %694 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %695 = load i32, i32* %36, align 4
  %696 = load i32, i32* %13, align 4
  %697 = load i32, i32* %13, align 4
  %698 = load i32, i32* %13, align 4
  %699 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %694, i32 noundef %695, i32 noundef %696, i32 noundef %697, i32 noundef %698, i32 noundef 0, i32 noundef %699)
  br label %734

700:                                              ; preds = %670
  %701 = load i32, i32* %7, align 4
  %702 = icmp eq i32 %701, 2
  br i1 %702, label %703, label %733

703:                                              ; preds = %700
  %704 = load i32, i32* %36, align 4
  %705 = mul i32 %704, 255
  %706 = lshr i32 %705, 15
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %707
  %709 = load i16, i16* %708, align 2
  %710 = zext i16 %709 to i32
  %711 = load i32, i32* %36, align 4
  %712 = mul i32 %711, 255
  %713 = and i32 %712, 32767
  %714 = load i32, i32* %36, align 4
  %715 = mul i32 %714, 255
  %716 = lshr i32 %715, 15
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %717
  %719 = load i8, i8* %718, align 1
  %720 = zext i8 %719 to i32
  %721 = mul i32 %713, %720
  %722 = lshr i32 %721, 12
  %723 = add i32 %710, %722
  %724 = lshr i32 %723, 8
  %725 = and i32 255, %724
  %726 = trunc i32 %725 to i8
  %727 = zext i8 %726 to i32
  store i32 %727, i32* %36, align 4
  %728 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %729 = load i32, i32* %36, align 4
  %730 = load i32, i32* %13, align 4
  %731 = load i32, i32* %13, align 4
  %732 = load i32, i32* %13, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %728, i32 noundef %729, i32 noundef %730, i32 noundef %731, i32 noundef %732, i32 noundef 0, i32 noundef 2)
  br label %733

733:                                              ; preds = %703, %700
  br label %734

734:                                              ; preds = %733, %683
  %735 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 0
  store i8 0, i8* %735, align 2
  %736 = load i32, i32* %36, align 4
  %737 = trunc i32 %736 to i16
  %738 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 3
  store i16 %737, i16* %738, align 2
  %739 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 2
  store i16 %737, i16* %739, align 2
  %740 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 1
  store i16 %737, i16* %740, align 2
  %741 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 4
  store i16 %737, i16* %741, align 2
  store i32 1, i32* %15, align 4
  %742 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_background_fixed(%struct.png_struct_def* noundef %742, %struct.png_color_16_struct* noundef %35, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  br label %743

743:                                              ; preds = %734, %664
  store i32 0, i32* %9, align 4
  br label %744

744:                                              ; preds = %743, %623
  br label %1024

745:                                              ; preds = %595
  store i32 1, i32* %10, align 4
  %746 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %747 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %746, i32 0, i32 61
  %748 = load i8, i8* %747, align 1
  %749 = zext i8 %748 to i32
  %750 = icmp eq i32 %749, 6
  br i1 %750, label %757, label %751

751:                                              ; preds = %745
  %752 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %753 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %752, i32 0, i32 55
  %754 = load i16, i16* %753, align 8
  %755 = zext i16 %754 to i32
  %756 = icmp sgt i32 %755, 0
  br i1 %756, label %757, label %1013

757:                                              ; preds = %751, %745
  %758 = load i32, i32* %6, align 4
  %759 = and i32 %758, 1
  %760 = icmp ne i32 %759, 0
  br i1 %760, label %761, label %808

761:                                              ; preds = %757
  %762 = load %struct.png_image*, %struct.png_image** %4, align 8
  %763 = getelementptr inbounds %struct.png_image, %struct.png_image* %762, i32 0, i32 6
  %764 = load i32, i32* %763, align 4
  %765 = icmp ugt i32 244, %764
  br i1 %765, label %766, label %768

766:                                              ; preds = %761
  %767 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %767, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39.176, i64 0, i64 0)) #13
  unreachable

768:                                              ; preds = %761
  %769 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %770 = call i32 @make_rgb_colormap(%struct.png_image_read_control* noundef %769)
  store i32 %770, i32* %8, align 4
  %771 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %772 = load i32, i32* %8, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %771, i32 noundef %772, i32 noundef 255, i32 noundef 255, i32 noundef 255, i32 noundef 0, i32 noundef 1)
  %773 = load i32, i32* %8, align 4
  %774 = add i32 %773, 1
  store i32 %774, i32* %8, align 4
  store i32 %773, i32* %11, align 4
  store i32 0, i32* %37, align 4
  br label %775

775:                                              ; preds = %803, %768
  %776 = load i32, i32* %37, align 4
  %777 = icmp ult i32 %776, 256
  br i1 %777, label %778, label %807

778:                                              ; preds = %775
  store i32 0, i32* %38, align 4
  br label %779

779:                                              ; preds = %798, %778
  %780 = load i32, i32* %38, align 4
  %781 = icmp ult i32 %780, 256
  br i1 %781, label %782, label %802

782:                                              ; preds = %779
  store i32 0, i32* %39, align 4
  br label %783

783:                                              ; preds = %793, %782
  %784 = load i32, i32* %39, align 4
  %785 = icmp ult i32 %784, 256
  br i1 %785, label %786, label %797

786:                                              ; preds = %783
  %787 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %788 = load i32, i32* %8, align 4
  %789 = add i32 %788, 1
  store i32 %789, i32* %8, align 4
  %790 = load i32, i32* %37, align 4
  %791 = load i32, i32* %38, align 4
  %792 = load i32, i32* %39, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %787, i32 noundef %788, i32 noundef %790, i32 noundef %791, i32 noundef %792, i32 noundef 128, i32 noundef 1)
  br label %793

793:                                              ; preds = %786
  %794 = load i32, i32* %39, align 4
  %795 = shl i32 %794, 1
  %796 = or i32 %795, 127
  store i32 %796, i32* %39, align 4
  br label %783, !llvm.loop !83

797:                                              ; preds = %783
  br label %798

798:                                              ; preds = %797
  %799 = load i32, i32* %38, align 4
  %800 = shl i32 %799, 1
  %801 = or i32 %800, 127
  store i32 %801, i32* %38, align 4
  br label %779, !llvm.loop !84

802:                                              ; preds = %779
  br label %803

803:                                              ; preds = %802
  %804 = load i32, i32* %37, align 4
  %805 = shl i32 %804, 1
  %806 = or i32 %805, 127
  store i32 %806, i32* %37, align 4
  br label %775, !llvm.loop !85

807:                                              ; preds = %775
  store i32 1, i32* %15, align 4
  store i32 4, i32* %9, align 4
  br label %1012

808:                                              ; preds = %757
  %809 = load i32, i32* %6, align 4
  %810 = and i32 %809, 3
  %811 = add i32 %810, 1
  %812 = load i32, i32* %6, align 4
  %813 = and i32 %812, 4
  %814 = lshr i32 %813, 2
  %815 = add i32 %814, 1
  %816 = mul i32 %811, %815
  store i32 %816, i32* %40, align 4
  %817 = load %struct.png_image*, %struct.png_image** %4, align 8
  %818 = getelementptr inbounds %struct.png_image, %struct.png_image* %817, i32 0, i32 6
  %819 = load i32, i32* %818, align 4
  %820 = icmp ugt i32 244, %819
  br i1 %820, label %821, label %823

821:                                              ; preds = %808
  %822 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %822, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.40.177, i64 0, i64 0)) #13
  unreachable

823:                                              ; preds = %808
  %824 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %825 = call i32 @make_rgb_colormap(%struct.png_image_read_control* noundef %824)
  store i32 %825, i32* %8, align 4
  %826 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %827 = load i32, i32* %8, align 4
  %828 = load i32, i32* %12, align 4
  %829 = load i32, i32* %13, align 4
  %830 = load i32, i32* %14, align 4
  %831 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %826, i32 noundef %827, i32 noundef %828, i32 noundef %829, i32 noundef %830, i32 noundef 0, i32 noundef %831)
  %832 = load i32, i32* %7, align 4
  %833 = icmp eq i32 %832, 2
  br i1 %833, label %834, label %907

834:                                              ; preds = %823
  %835 = load i32, i32* %12, align 4
  %836 = mul i32 %835, 255
  %837 = lshr i32 %836, 15
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %838
  %840 = load i16, i16* %839, align 2
  %841 = zext i16 %840 to i32
  %842 = load i32, i32* %12, align 4
  %843 = mul i32 %842, 255
  %844 = and i32 %843, 32767
  %845 = load i32, i32* %12, align 4
  %846 = mul i32 %845, 255
  %847 = lshr i32 %846, 15
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %848
  %850 = load i8, i8* %849, align 1
  %851 = zext i8 %850 to i32
  %852 = mul i32 %844, %851
  %853 = lshr i32 %852, 12
  %854 = add i32 %841, %853
  %855 = lshr i32 %854, 8
  %856 = and i32 255, %855
  %857 = trunc i32 %856 to i8
  %858 = zext i8 %857 to i32
  store i32 %858, i32* %41, align 4
  %859 = load i32, i32* %13, align 4
  %860 = mul i32 %859, 255
  %861 = lshr i32 %860, 15
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %862
  %864 = load i16, i16* %863, align 2
  %865 = zext i16 %864 to i32
  %866 = load i32, i32* %13, align 4
  %867 = mul i32 %866, 255
  %868 = and i32 %867, 32767
  %869 = load i32, i32* %13, align 4
  %870 = mul i32 %869, 255
  %871 = lshr i32 %870, 15
  %872 = zext i32 %871 to i64
  %873 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %872
  %874 = load i8, i8* %873, align 1
  %875 = zext i8 %874 to i32
  %876 = mul i32 %868, %875
  %877 = lshr i32 %876, 12
  %878 = add i32 %865, %877
  %879 = lshr i32 %878, 8
  %880 = and i32 255, %879
  %881 = trunc i32 %880 to i8
  %882 = zext i8 %881 to i32
  store i32 %882, i32* %42, align 4
  %883 = load i32, i32* %14, align 4
  %884 = mul i32 %883, 255
  %885 = lshr i32 %884, 15
  %886 = zext i32 %885 to i64
  %887 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %886
  %888 = load i16, i16* %887, align 2
  %889 = zext i16 %888 to i32
  %890 = load i32, i32* %14, align 4
  %891 = mul i32 %890, 255
  %892 = and i32 %891, 32767
  %893 = load i32, i32* %14, align 4
  %894 = mul i32 %893, 255
  %895 = lshr i32 %894, 15
  %896 = zext i32 %895 to i64
  %897 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %896
  %898 = load i8, i8* %897, align 1
  %899 = zext i8 %898 to i32
  %900 = mul i32 %892, %899
  %901 = lshr i32 %900, 12
  %902 = add i32 %889, %901
  %903 = lshr i32 %902, 8
  %904 = and i32 255, %903
  %905 = trunc i32 %904 to i8
  %906 = zext i8 %905 to i32
  store i32 %906, i32* %43, align 4
  br label %911

907:                                              ; preds = %823
  %908 = load i32, i32* %12, align 4
  store i32 %908, i32* %41, align 4
  %909 = load i32, i32* %13, align 4
  store i32 %909, i32* %42, align 4
  %910 = load i32, i32* %13, align 4
  store i32 %910, i32* %43, align 4
  br label %911

911:                                              ; preds = %907, %834
  %912 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %913 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %912, i32 0, i32 3
  %914 = load i8*, i8** %913, align 8
  %915 = load i32, i32* %40, align 4
  %916 = load i32, i32* %8, align 4
  %917 = mul i32 %915, %916
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds i8, i8* %914, i64 %918
  %920 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %921 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %920, i32 0, i32 3
  %922 = load i8*, i8** %921, align 8
  %923 = load i32, i32* %40, align 4
  %924 = load i32, i32* %41, align 4
  %925 = mul i32 %924, 5
  %926 = add i32 %925, 130
  %927 = lshr i32 %926, 8
  %928 = mul i32 6, %927
  %929 = load i32, i32* %42, align 4
  %930 = mul i32 %929, 5
  %931 = add i32 %930, 130
  %932 = lshr i32 %931, 8
  %933 = add i32 %928, %932
  %934 = mul i32 6, %933
  %935 = load i32, i32* %43, align 4
  %936 = mul i32 %935, 5
  %937 = add i32 %936, 130
  %938 = lshr i32 %937, 8
  %939 = add i32 %934, %938
  %940 = trunc i32 %939 to i8
  %941 = zext i8 %940 to i32
  %942 = mul i32 %923, %941
  %943 = zext i32 %942 to i64
  %944 = getelementptr inbounds i8, i8* %922, i64 %943
  %945 = load i32, i32* %40, align 4
  %946 = zext i32 %945 to i64
  %947 = call i32 @memcmp(i8* noundef %919, i8* noundef %944, i64 noundef %946) #14
  %948 = icmp ne i32 %947, 0
  br i1 %948, label %949, label %998

949:                                              ; preds = %911
  %950 = load i32, i32* %8, align 4
  %951 = add i32 %950, 1
  store i32 %951, i32* %8, align 4
  store i32 %950, i32* %11, align 4
  store i32 0, i32* %41, align 4
  br label %952

952:                                              ; preds = %993, %949
  %953 = load i32, i32* %41, align 4
  %954 = icmp ult i32 %953, 256
  br i1 %954, label %955, label %997

955:                                              ; preds = %952
  store i32 0, i32* %42, align 4
  br label %956

956:                                              ; preds = %988, %955
  %957 = load i32, i32* %42, align 4
  %958 = icmp ult i32 %957, 256
  br i1 %958, label %959, label %992

959:                                              ; preds = %956
  store i32 0, i32* %43, align 4
  br label %960

960:                                              ; preds = %983, %959
  %961 = load i32, i32* %43, align 4
  %962 = icmp ult i32 %961, 256
  br i1 %962, label %963, label %987

963:                                              ; preds = %960
  %964 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %965 = load i32, i32* %8, align 4
  %966 = add i32 %965, 1
  store i32 %966, i32* %8, align 4
  %967 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %968 = load i32, i32* %41, align 4
  %969 = load i32, i32* %12, align 4
  %970 = load i32, i32* %7, align 4
  %971 = call i32 @png_colormap_compose(%struct.png_image_read_control* noundef %967, i32 noundef %968, i32 noundef 1, i32 noundef 128, i32 noundef %969, i32 noundef %970)
  %972 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %973 = load i32, i32* %42, align 4
  %974 = load i32, i32* %13, align 4
  %975 = load i32, i32* %7, align 4
  %976 = call i32 @png_colormap_compose(%struct.png_image_read_control* noundef %972, i32 noundef %973, i32 noundef 1, i32 noundef 128, i32 noundef %974, i32 noundef %975)
  %977 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %978 = load i32, i32* %43, align 4
  %979 = load i32, i32* %14, align 4
  %980 = load i32, i32* %7, align 4
  %981 = call i32 @png_colormap_compose(%struct.png_image_read_control* noundef %977, i32 noundef %978, i32 noundef 1, i32 noundef 128, i32 noundef %979, i32 noundef %980)
  %982 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %964, i32 noundef %965, i32 noundef %971, i32 noundef %976, i32 noundef %981, i32 noundef 0, i32 noundef %982)
  br label %983

983:                                              ; preds = %963
  %984 = load i32, i32* %43, align 4
  %985 = shl i32 %984, 1
  %986 = or i32 %985, 127
  store i32 %986, i32* %43, align 4
  br label %960, !llvm.loop !86

987:                                              ; preds = %960
  br label %988

988:                                              ; preds = %987
  %989 = load i32, i32* %42, align 4
  %990 = shl i32 %989, 1
  %991 = or i32 %990, 127
  store i32 %991, i32* %42, align 4
  br label %956, !llvm.loop !87

992:                                              ; preds = %956
  br label %993

993:                                              ; preds = %992
  %994 = load i32, i32* %41, align 4
  %995 = shl i32 %994, 1
  %996 = or i32 %995, 127
  store i32 %996, i32* %41, align 4
  br label %952, !llvm.loop !88

997:                                              ; preds = %952
  store i32 1, i32* %15, align 4
  store i32 4, i32* %9, align 4
  br label %1011

998:                                              ; preds = %911
  %999 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %44, i32 0, i32 0
  store i8 0, i8* %999, align 2
  %1000 = load i32, i32* %12, align 4
  %1001 = trunc i32 %1000 to i16
  %1002 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %44, i32 0, i32 1
  store i16 %1001, i16* %1002, align 2
  %1003 = load i32, i32* %13, align 4
  %1004 = trunc i32 %1003 to i16
  %1005 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %44, i32 0, i32 2
  store i16 %1004, i16* %1005, align 2
  %1006 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %44, i32 0, i32 4
  store i16 %1004, i16* %1006, align 2
  %1007 = load i32, i32* %14, align 4
  %1008 = trunc i32 %1007 to i16
  %1009 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %44, i32 0, i32 3
  store i16 %1008, i16* %1009, align 2
  %1010 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_background_fixed(%struct.png_struct_def* noundef %1010, %struct.png_color_16_struct* noundef %44, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  store i32 3, i32* %9, align 4
  br label %1011

1011:                                             ; preds = %998, %997
  br label %1012

1012:                                             ; preds = %1011, %807
  br label %1023

1013:                                             ; preds = %751
  %1014 = load %struct.png_image*, %struct.png_image** %4, align 8
  %1015 = getelementptr inbounds %struct.png_image, %struct.png_image* %1014, i32 0, i32 6
  %1016 = load i32, i32* %1015, align 4
  %1017 = icmp ugt i32 216, %1016
  br i1 %1017, label %1018, label %1020

1018:                                             ; preds = %1013
  %1019 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1019, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.41.178, i64 0, i64 0)) #13
  unreachable

1020:                                             ; preds = %1013
  %1021 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1022 = call i32 @make_rgb_colormap(%struct.png_image_read_control* noundef %1021)
  store i32 %1022, i32* %8, align 4
  store i32 3, i32* %9, align 4
  br label %1023

1023:                                             ; preds = %1020, %1012
  br label %1024

1024:                                             ; preds = %1023, %744
  br label %1232

1025:                                             ; preds = %165
  %1026 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1027 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1026, i32 0, i32 55
  %1028 = load i16, i16* %1027, align 8
  %1029 = zext i16 %1028 to i32
  store i32 %1029, i32* %45, align 4
  %1030 = load i32, i32* %45, align 4
  %1031 = icmp ugt i32 %1030, 0
  br i1 %1031, label %1032, label %1036

1032:                                             ; preds = %1025
  %1033 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1034 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1033, i32 0, i32 89
  %1035 = load i8*, i8** %1034, align 8
  br label %1037

1036:                                             ; preds = %1025
  br label %1037

1037:                                             ; preds = %1036, %1032
  %1038 = phi i8* [ %1035, %1032 ], [ null, %1036 ]
  store i8* %1038, i8** %46, align 8
  %1039 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1040 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1039, i32 0, i32 52
  %1041 = load %struct.png_color_struct*, %struct.png_color_struct** %1040, align 8
  store %struct.png_color_struct* %1041, %struct.png_color_struct** %47, align 8
  %1042 = load i8*, i8** %46, align 8
  %1043 = icmp ne i8* %1042, null
  br i1 %1043, label %1044, label %1048

1044:                                             ; preds = %1037
  %1045 = load i32, i32* %6, align 4
  %1046 = and i32 %1045, 1
  %1047 = icmp eq i32 %1046, 0
  br label %1048

1048:                                             ; preds = %1044, %1037
  %1049 = phi i1 [ false, %1037 ], [ %1047, %1044 ]
  %1050 = zext i1 %1049 to i32
  store i32 %1050, i32* %48, align 4
  %1051 = load i8*, i8** %46, align 8
  %1052 = icmp eq i8* %1051, null
  br i1 %1052, label %1053, label %1054

1053:                                             ; preds = %1048
  store i32 0, i32* %45, align 4
  br label %1054

1054:                                             ; preds = %1053, %1048
  store i32 0, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %1055 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1056 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1055, i32 0, i32 53
  %1057 = load i16, i16* %1056, align 8
  %1058 = zext i16 %1057 to i32
  store i32 %1058, i32* %8, align 4
  %1059 = load i32, i32* %8, align 4
  %1060 = icmp ugt i32 %1059, 256
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1054
  store i32 256, i32* %8, align 4
  br label %1062

1062:                                             ; preds = %1061, %1054
  %1063 = load i32, i32* %8, align 4
  %1064 = load %struct.png_image*, %struct.png_image** %4, align 8
  %1065 = getelementptr inbounds %struct.png_image, %struct.png_image* %1064, i32 0, i32 6
  %1066 = load i32, i32* %1065, align 4
  %1067 = icmp ugt i32 %1063, %1066
  br i1 %1067, label %1068, label %1070

1068:                                             ; preds = %1062
  %1069 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1069, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42.179, i64 0, i64 0)) #13
  unreachable

1070:                                             ; preds = %1062
  store i32 0, i32* %49, align 4
  br label %1071

1071:                                             ; preds = %1218, %1070
  %1072 = load i32, i32* %49, align 4
  %1073 = load i32, i32* %8, align 4
  %1074 = icmp ult i32 %1072, %1073
  br i1 %1074, label %1075, label %1221

1075:                                             ; preds = %1071
  %1076 = load i32, i32* %48, align 4
  %1077 = icmp ne i32 %1076, 0
  br i1 %1077, label %1078, label %1180

1078:                                             ; preds = %1075
  %1079 = load i32, i32* %49, align 4
  %1080 = load i32, i32* %45, align 4
  %1081 = icmp ult i32 %1079, %1080
  br i1 %1081, label %1082, label %1180

1082:                                             ; preds = %1078
  %1083 = load i8*, i8** %46, align 8
  %1084 = load i32, i32* %49, align 4
  %1085 = zext i32 %1084 to i64
  %1086 = getelementptr inbounds i8, i8* %1083, i64 %1085
  %1087 = load i8, i8* %1086, align 1
  %1088 = zext i8 %1087 to i32
  %1089 = icmp slt i32 %1088, 255
  br i1 %1089, label %1090, label %1180

1090:                                             ; preds = %1082
  %1091 = load i8*, i8** %46, align 8
  %1092 = load i32, i32* %49, align 4
  %1093 = zext i32 %1092 to i64
  %1094 = getelementptr inbounds i8, i8* %1091, i64 %1093
  %1095 = load i8, i8* %1094, align 1
  %1096 = zext i8 %1095 to i32
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1105

1098:                                             ; preds = %1090
  %1099 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1100 = load i32, i32* %49, align 4
  %1101 = load i32, i32* %12, align 4
  %1102 = load i32, i32* %13, align 4
  %1103 = load i32, i32* %14, align 4
  %1104 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %1099, i32 noundef %1100, i32 noundef %1101, i32 noundef %1102, i32 noundef %1103, i32 noundef 0, i32 noundef %1104)
  br label %1179

1105:                                             ; preds = %1090
  %1106 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1107 = load i32, i32* %49, align 4
  %1108 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1109 = load %struct.png_color_struct*, %struct.png_color_struct** %47, align 8
  %1110 = load i32, i32* %49, align 4
  %1111 = zext i32 %1110 to i64
  %1112 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1109, i64 %1111
  %1113 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1112, i32 0, i32 0
  %1114 = load i8, i8* %1113, align 1
  %1115 = zext i8 %1114 to i32
  %1116 = load i8*, i8** %46, align 8
  %1117 = load i32, i32* %49, align 4
  %1118 = zext i32 %1117 to i64
  %1119 = getelementptr inbounds i8, i8* %1116, i64 %1118
  %1120 = load i8, i8* %1119, align 1
  %1121 = zext i8 %1120 to i32
  %1122 = load i32, i32* %12, align 4
  %1123 = load i32, i32* %7, align 4
  %1124 = call i32 @png_colormap_compose(%struct.png_image_read_control* noundef %1108, i32 noundef %1115, i32 noundef 3, i32 noundef %1121, i32 noundef %1122, i32 noundef %1123)
  %1125 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1126 = load %struct.png_color_struct*, %struct.png_color_struct** %47, align 8
  %1127 = load i32, i32* %49, align 4
  %1128 = zext i32 %1127 to i64
  %1129 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1126, i64 %1128
  %1130 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1129, i32 0, i32 1
  %1131 = load i8, i8* %1130, align 1
  %1132 = zext i8 %1131 to i32
  %1133 = load i8*, i8** %46, align 8
  %1134 = load i32, i32* %49, align 4
  %1135 = zext i32 %1134 to i64
  %1136 = getelementptr inbounds i8, i8* %1133, i64 %1135
  %1137 = load i8, i8* %1136, align 1
  %1138 = zext i8 %1137 to i32
  %1139 = load i32, i32* %13, align 4
  %1140 = load i32, i32* %7, align 4
  %1141 = call i32 @png_colormap_compose(%struct.png_image_read_control* noundef %1125, i32 noundef %1132, i32 noundef 3, i32 noundef %1138, i32 noundef %1139, i32 noundef %1140)
  %1142 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1143 = load %struct.png_color_struct*, %struct.png_color_struct** %47, align 8
  %1144 = load i32, i32* %49, align 4
  %1145 = zext i32 %1144 to i64
  %1146 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1143, i64 %1145
  %1147 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1146, i32 0, i32 2
  %1148 = load i8, i8* %1147, align 1
  %1149 = zext i8 %1148 to i32
  %1150 = load i8*, i8** %46, align 8
  %1151 = load i32, i32* %49, align 4
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds i8, i8* %1150, i64 %1152
  %1154 = load i8, i8* %1153, align 1
  %1155 = zext i8 %1154 to i32
  %1156 = load i32, i32* %14, align 4
  %1157 = load i32, i32* %7, align 4
  %1158 = call i32 @png_colormap_compose(%struct.png_image_read_control* noundef %1142, i32 noundef %1149, i32 noundef 3, i32 noundef %1155, i32 noundef %1156, i32 noundef %1157)
  %1159 = load i32, i32* %7, align 4
  %1160 = icmp eq i32 %1159, 2
  br i1 %1160, label %1161, label %1169

1161:                                             ; preds = %1105
  %1162 = load i8*, i8** %46, align 8
  %1163 = load i32, i32* %49, align 4
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds i8, i8* %1162, i64 %1164
  %1166 = load i8, i8* %1165, align 1
  %1167 = zext i8 %1166 to i32
  %1168 = mul i32 %1167, 257
  br label %1176

1169:                                             ; preds = %1105
  %1170 = load i8*, i8** %46, align 8
  %1171 = load i32, i32* %49, align 4
  %1172 = zext i32 %1171 to i64
  %1173 = getelementptr inbounds i8, i8* %1170, i64 %1172
  %1174 = load i8, i8* %1173, align 1
  %1175 = zext i8 %1174 to i32
  br label %1176

1176:                                             ; preds = %1169, %1161
  %1177 = phi i32 [ %1168, %1161 ], [ %1175, %1169 ]
  %1178 = load i32, i32* %7, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %1106, i32 noundef %1107, i32 noundef %1124, i32 noundef %1141, i32 noundef %1158, i32 noundef %1177, i32 noundef %1178)
  br label %1179

1179:                                             ; preds = %1176, %1098
  br label %1217

1180:                                             ; preds = %1082, %1078, %1075
  %1181 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1182 = load i32, i32* %49, align 4
  %1183 = load %struct.png_color_struct*, %struct.png_color_struct** %47, align 8
  %1184 = load i32, i32* %49, align 4
  %1185 = zext i32 %1184 to i64
  %1186 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1183, i64 %1185
  %1187 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1186, i32 0, i32 0
  %1188 = load i8, i8* %1187, align 1
  %1189 = zext i8 %1188 to i32
  %1190 = load %struct.png_color_struct*, %struct.png_color_struct** %47, align 8
  %1191 = load i32, i32* %49, align 4
  %1192 = zext i32 %1191 to i64
  %1193 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1190, i64 %1192
  %1194 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1193, i32 0, i32 1
  %1195 = load i8, i8* %1194, align 1
  %1196 = zext i8 %1195 to i32
  %1197 = load %struct.png_color_struct*, %struct.png_color_struct** %47, align 8
  %1198 = load i32, i32* %49, align 4
  %1199 = zext i32 %1198 to i64
  %1200 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1197, i64 %1199
  %1201 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1200, i32 0, i32 2
  %1202 = load i8, i8* %1201, align 1
  %1203 = zext i8 %1202 to i32
  %1204 = load i32, i32* %49, align 4
  %1205 = load i32, i32* %45, align 4
  %1206 = icmp ult i32 %1204, %1205
  br i1 %1206, label %1207, label %1214

1207:                                             ; preds = %1180
  %1208 = load i8*, i8** %46, align 8
  %1209 = load i32, i32* %49, align 4
  %1210 = zext i32 %1209 to i64
  %1211 = getelementptr inbounds i8, i8* %1208, i64 %1210
  %1212 = load i8, i8* %1211, align 1
  %1213 = zext i8 %1212 to i32
  br label %1215

1214:                                             ; preds = %1180
  br label %1215

1215:                                             ; preds = %1214, %1207
  %1216 = phi i32 [ %1213, %1207 ], [ 255, %1214 ]
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %1181, i32 noundef %1182, i32 noundef %1189, i32 noundef %1196, i32 noundef %1203, i32 noundef %1216, i32 noundef 3)
  br label %1217

1217:                                             ; preds = %1215, %1179
  br label %1218

1218:                                             ; preds = %1217
  %1219 = load i32, i32* %49, align 4
  %1220 = add i32 %1219, 1
  store i32 %1220, i32* %49, align 4
  br label %1071, !llvm.loop !89

1221:                                             ; preds = %1071
  %1222 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1223 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1222, i32 0, i32 62
  %1224 = load i8, i8* %1223, align 8
  %1225 = zext i8 %1224 to i32
  %1226 = icmp slt i32 %1225, 8
  br i1 %1226, label %1227, label %1229

1227:                                             ; preds = %1221
  %1228 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packing to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %1228)
  br label %1229

1229:                                             ; preds = %1227, %1221
  br label %1232

1230:                                             ; preds = %165
  %1231 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1231, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43.180, i64 0, i64 0)) #13
  unreachable

1232:                                             ; preds = %1229, %1024, %594, %337, %314
  %1233 = load i32, i32* %15, align 4
  %1234 = icmp ne i32 %1233, 0
  br i1 %1234, label %1235, label %1250

1235:                                             ; preds = %1232
  %1236 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1237 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1236, i32 0, i32 55
  %1238 = load i16, i16* %1237, align 8
  %1239 = zext i16 %1238 to i32
  %1240 = icmp sgt i32 %1239, 0
  br i1 %1240, label %1241, label %1250

1241:                                             ; preds = %1235
  %1242 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1243 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1242, i32 0, i32 61
  %1244 = load i8, i8* %1243, align 1
  %1245 = zext i8 %1244 to i32
  %1246 = and i32 %1245, 4
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1248, label %1250

1248:                                             ; preds = %1241
  %1249 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_tRNS_to_alpha(%struct.png_struct_def* noundef %1249)
  br label %1250

1250:                                             ; preds = %1248, %1241, %1235, %1232
  %1251 = load i32, i32* %10, align 4
  switch i32 %1251, label %1263 [
    i32 1, label %1252
    i32 3, label %1254
  ]

1252:                                             ; preds = %1250
  %1253 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_alpha_mode_fixed(%struct.png_struct_def* noundef %1253, i32 noundef 0, i32 noundef 220000)
  br label %1254

1254:                                             ; preds = %1250, %1252
  %1255 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %1256 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1255, i32 0, i32 62
  %1257 = load i8, i8* %1256, align 8
  %1258 = zext i8 %1257 to i32
  %1259 = icmp sgt i32 %1258, 8
  br i1 %1259, label %1260, label %1262

1260:                                             ; preds = %1254
  %1261 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_set_scale_16(%struct.png_struct_def* noundef %1261)
  br label %1262

1262:                                             ; preds = %1260, %1254
  br label %1265

1263:                                             ; preds = %1250
  %1264 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1264, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44.181, i64 0, i64 0)) #13
  unreachable

1265:                                             ; preds = %1262
  %1266 = load i32, i32* %8, align 4
  %1267 = icmp ugt i32 %1266, 256
  br i1 %1267, label %1274, label %1268

1268:                                             ; preds = %1265
  %1269 = load i32, i32* %8, align 4
  %1270 = load %struct.png_image*, %struct.png_image** %4, align 8
  %1271 = getelementptr inbounds %struct.png_image, %struct.png_image* %1270, i32 0, i32 6
  %1272 = load i32, i32* %1271, align 4
  %1273 = icmp ugt i32 %1269, %1272
  br i1 %1273, label %1274, label %1276

1274:                                             ; preds = %1268, %1265
  %1275 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1275, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.45.182, i64 0, i64 0)) #13
  unreachable

1276:                                             ; preds = %1268
  %1277 = load i32, i32* %8, align 4
  %1278 = load %struct.png_image*, %struct.png_image** %4, align 8
  %1279 = getelementptr inbounds %struct.png_image, %struct.png_image* %1278, i32 0, i32 6
  store i32 %1277, i32* %1279, align 4
  %1280 = load i32, i32* %9, align 4
  switch i32 %1280, label %1310 [
    i32 0, label %1281
    i32 1, label %1286
    i32 2, label %1291
    i32 3, label %1300
    i32 4, label %1305
  ]

1281:                                             ; preds = %1276
  %1282 = load i32, i32* %11, align 4
  %1283 = icmp ne i32 %1282, 256
  br i1 %1283, label %1284, label %1285

1284:                                             ; preds = %1281
  br label %1312

1285:                                             ; preds = %1281
  br label %1314

1286:                                             ; preds = %1276
  %1287 = load i32, i32* %11, align 4
  %1288 = icmp ne i32 %1287, 231
  br i1 %1288, label %1289, label %1290

1289:                                             ; preds = %1286
  br label %1312

1290:                                             ; preds = %1286
  br label %1314

1291:                                             ; preds = %1276
  %1292 = load i32, i32* %11, align 4
  %1293 = load i32, i32* %8, align 4
  %1294 = icmp uge i32 %1292, %1293
  br i1 %1294, label %1298, label %1295

1295:                                             ; preds = %1291
  %1296 = load i32, i32* %11, align 4
  %1297 = icmp ne i32 %1296, 254
  br i1 %1297, label %1298, label %1299

1298:                                             ; preds = %1295, %1291
  br label %1312

1299:                                             ; preds = %1295
  br label %1314

1300:                                             ; preds = %1276
  %1301 = load i32, i32* %11, align 4
  %1302 = icmp ne i32 %1301, 256
  br i1 %1302, label %1303, label %1304

1303:                                             ; preds = %1300
  br label %1312

1304:                                             ; preds = %1300
  br label %1314

1305:                                             ; preds = %1276
  %1306 = load i32, i32* %11, align 4
  %1307 = icmp ne i32 %1306, 216
  br i1 %1307, label %1308, label %1309

1308:                                             ; preds = %1305
  br label %1312

1309:                                             ; preds = %1305
  br label %1314

1310:                                             ; preds = %1276
  %1311 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1311, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46.183, i64 0, i64 0)) #13
  unreachable

1312:                                             ; preds = %1308, %1303, %1298, %1289, %1284
  %1313 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %1313, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.47.184, i64 0, i64 0)) #13
  unreachable

1314:                                             ; preds = %1309, %1304, %1299, %1290, %1285
  %1315 = load i32, i32* %9, align 4
  %1316 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %1317 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %1316, i32 0, i32 10
  store i32 %1315, i32* %1317, align 8
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_colormapped(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_image_read_control*, align 8
  %5 = alloca %struct.png_image*, align 8
  %6 = alloca %struct.png_control*, align 8
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_info_def*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %18 = load i8*, i8** %3, align 8
  %19 = bitcast i8* %18 to %struct.png_image_read_control*
  store %struct.png_image_read_control* %19, %struct.png_image_read_control** %4, align 8
  %20 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %21 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %20, i32 0, i32 0
  %22 = load %struct.png_image*, %struct.png_image** %21, align 8
  store %struct.png_image* %22, %struct.png_image** %5, align 8
  %23 = load %struct.png_image*, %struct.png_image** %5, align 8
  %24 = getelementptr inbounds %struct.png_image, %struct.png_image* %23, i32 0, i32 0
  %25 = load %struct.png_control*, %struct.png_control** %24, align 8
  store %struct.png_control* %25, %struct.png_control** %6, align 8
  %26 = load %struct.png_control*, %struct.png_control** %6, align 8
  %27 = getelementptr inbounds %struct.png_control, %struct.png_control* %26, i32 0, i32 0
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %27, align 8
  store %struct.png_struct_def* %28, %struct.png_struct_def** %7, align 8
  %29 = load %struct.png_control*, %struct.png_control** %6, align 8
  %30 = getelementptr inbounds %struct.png_control, %struct.png_control* %29, i32 0, i32 1
  %31 = load %struct.png_info_def*, %struct.png_info_def** %30, align 8
  store %struct.png_info_def* %31, %struct.png_info_def** %8, align 8
  store i32 0, i32* %9, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_image_skip_unused_chunks(%struct.png_struct_def* noundef %32)
  %33 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %34 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %33, i32 0, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %1
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %39 = call i32 bitcast (i32 (%struct.png_struct_def.205*)* @png_set_interlace_handling to i32 (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %38)
  store i32 %39, i32* %9, align 4
  br label %40

40:                                               ; preds = %37, %1
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %42 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  call void @png_read_update_info(%struct.png_struct_def* noundef %41, %struct.png_info_def* noundef %42)
  %43 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %44 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %43, i32 0, i32 10
  %45 = load i32, i32* %44, align 8
  switch i32 %45, label %138 [
    i32 0, label %46
    i32 2, label %66
    i32 1, label %66
    i32 3, label %90
    i32 4, label %114
  ]

46:                                               ; preds = %40
  %47 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %48 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %47, i32 0, i32 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp eq i32 %50, 3
  br i1 %51, label %58, label %52

52:                                               ; preds = %46
  %53 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52, %46
  %59 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %60 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %59, i32 0, i32 7
  %61 = load i8, i8* %60, align 4
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, 8
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  br label %141

65:                                               ; preds = %58, %52
  br label %139

66:                                               ; preds = %40, %40
  %67 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %68 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %67, i32 0, i32 8
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %72, label %89

72:                                               ; preds = %66
  %73 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %74 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %73, i32 0, i32 7
  %75 = load i8, i8* %74, align 4
  %76 = zext i8 %75 to i32
  %77 = icmp eq i32 %76, 8
  br i1 %77, label %78, label %89

78:                                               ; preds = %72
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %79, i32 0, i32 80
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 220000
  br i1 %82, label %83, label %89

83:                                               ; preds = %78
  %84 = load %struct.png_image*, %struct.png_image** %5, align 8
  %85 = getelementptr inbounds %struct.png_image, %struct.png_image* %84, i32 0, i32 6
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 256
  br i1 %87, label %88, label %89

88:                                               ; preds = %83
  br label %141

89:                                               ; preds = %83, %78, %72, %66
  br label %139

90:                                               ; preds = %40
  %91 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %92 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %91, i32 0, i32 8
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 2
  br i1 %95, label %96, label %113

96:                                               ; preds = %90
  %97 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %98 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %97, i32 0, i32 7
  %99 = load i8, i8* %98, align 4
  %100 = zext i8 %99 to i32
  %101 = icmp eq i32 %100, 8
  br i1 %101, label %102, label %113

102:                                              ; preds = %96
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %104 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 80
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 220000
  br i1 %106, label %107, label %113

107:                                              ; preds = %102
  %108 = load %struct.png_image*, %struct.png_image** %5, align 8
  %109 = getelementptr inbounds %struct.png_image, %struct.png_image* %108, i32 0, i32 6
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 216
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  br label %141

113:                                              ; preds = %107, %102, %96, %90
  br label %139

114:                                              ; preds = %40
  %115 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %116 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %115, i32 0, i32 8
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = icmp eq i32 %118, 6
  br i1 %119, label %120, label %137

120:                                              ; preds = %114
  %121 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %122 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %121, i32 0, i32 7
  %123 = load i8, i8* %122, align 4
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 8
  br i1 %125, label %126, label %137

126:                                              ; preds = %120
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 80
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 220000
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = load %struct.png_image*, %struct.png_image** %5, align 8
  %133 = getelementptr inbounds %struct.png_image, %struct.png_image* %132, i32 0, i32 6
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 244
  br i1 %135, label %136, label %137

136:                                              ; preds = %131
  br label %141

137:                                              ; preds = %131, %126, %120, %114
  br label %139

138:                                              ; preds = %40
  br label %139

139:                                              ; preds = %138, %137, %113, %89, %65
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_error(%struct.png_struct_def* noundef %140, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51.167, i64 0, i64 0)) #13
  unreachable

141:                                              ; preds = %136, %112, %88, %64
  %142 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %143 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %142, i32 0, i32 1
  %144 = load i8*, i8** %143, align 8
  store i8* %144, i8** %10, align 8
  %145 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %146 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %145, i32 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = sext i32 %147 to i64
  store i64 %148, i64* %11, align 8
  %149 = load i64, i64* %11, align 8
  %150 = icmp slt i64 %149, 0
  br i1 %150, label %151, label %164

151:                                              ; preds = %141
  %152 = load i8*, i8** %10, align 8
  store i8* %152, i8** %12, align 8
  %153 = load %struct.png_image*, %struct.png_image** %5, align 8
  %154 = getelementptr inbounds %struct.png_image, %struct.png_image* %153, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = sub i32 %155, 1
  %157 = zext i32 %156 to i64
  %158 = load i64, i64* %11, align 8
  %159 = sub nsw i64 0, %158
  %160 = mul nsw i64 %157, %159
  %161 = load i8*, i8** %12, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  store i8* %162, i8** %12, align 8
  %163 = load i8*, i8** %12, align 8
  store i8* %163, i8** %10, align 8
  br label %164

164:                                              ; preds = %151, %141
  %165 = load i8*, i8** %10, align 8
  %166 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %167 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %166, i32 0, i32 6
  store i8* %165, i8** %167, align 8
  %168 = load i64, i64* %11, align 8
  %169 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %170 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %169, i32 0, i32 7
  store i64 %168, i64* %170, align 8
  %171 = load i32, i32* %9, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %191

173:                                              ; preds = %164
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %176 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %177 = call i64 @png_get_rowbytes(%struct.png_struct_def* noundef %175, %struct.png_info_def* noundef %176)
  %178 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %174, i64 noundef %177)
  store i8* %178, i8** %14, align 8
  %179 = load i8*, i8** %14, align 8
  %180 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %181 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %180, i32 0, i32 5
  store i8* %179, i8** %181, align 8
  %182 = load %struct.png_image*, %struct.png_image** %5, align 8
  %183 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %184 = bitcast %struct.png_image_read_control* %183 to i8*
  %185 = call i32 @png_safe_execute(%struct.png_image* noundef %182, i32 (i8*)* noundef @png_image_read_and_map, i8* noundef %184)
  store i32 %185, i32* %13, align 4
  %186 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %187 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %186, i32 0, i32 5
  store i8* null, i8** %187, align 8
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %189 = load i8*, i8** %14, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %188, i8* noundef %189)
  %190 = load i32, i32* %13, align 4
  store i32 %190, i32* %2, align 4
  br label %220

191:                                              ; preds = %164
  %192 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %193 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %192, i32 0, i32 7
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %15, align 8
  br label %195

195:                                              ; preds = %218, %191
  %196 = load i32, i32* %9, align 4
  %197 = add nsw i32 %196, -1
  store i32 %197, i32* %9, align 4
  %198 = icmp sge i32 %197, 0
  br i1 %198, label %199, label %219

199:                                              ; preds = %195
  %200 = load %struct.png_image*, %struct.png_image** %5, align 8
  %201 = getelementptr inbounds %struct.png_image, %struct.png_image* %200, i32 0, i32 3
  %202 = load i32, i32* %201, align 8
  store i32 %202, i32* %16, align 4
  %203 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %204 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %203, i32 0, i32 6
  %205 = load i8*, i8** %204, align 8
  store i8* %205, i8** %17, align 8
  br label %206

206:                                              ; preds = %215, %199
  %207 = load i32, i32* %16, align 4
  %208 = icmp ugt i32 %207, 0
  br i1 %208, label %209, label %218

209:                                              ; preds = %206
  %210 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %211 = load i8*, i8** %17, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %210, i8* noundef %211, i8* noundef null)
  %212 = load i64, i64* %15, align 8
  %213 = load i8*, i8** %17, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 %212
  store i8* %214, i8** %17, align 8
  br label %215

215:                                              ; preds = %209
  %216 = load i32, i32* %16, align 4
  %217 = add i32 %216, -1
  store i32 %217, i32* %16, align 4
  br label %206, !llvm.loop !90

218:                                              ; preds = %206
  br label %195, !llvm.loop !91

219:                                              ; preds = %195
  store i32 1, i32* %2, align 4
  br label %220

220:                                              ; preds = %219, %173
  %221 = load i32, i32* %2, align 4
  ret i32 %221
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_direct(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_image_read_control*, align 8
  %5 = alloca %struct.png_image*, align 8
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.png_color_16_struct, align 2
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i16, align 2
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %34 = load i8*, i8** %3, align 8
  %35 = bitcast i8* %34 to %struct.png_image_read_control*
  store %struct.png_image_read_control* %35, %struct.png_image_read_control** %4, align 8
  %36 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %37 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %36, i32 0, i32 0
  %38 = load %struct.png_image*, %struct.png_image** %37, align 8
  store %struct.png_image* %38, %struct.png_image** %5, align 8
  %39 = load %struct.png_image*, %struct.png_image** %5, align 8
  %40 = getelementptr inbounds %struct.png_image, %struct.png_image* %39, i32 0, i32 0
  %41 = load %struct.png_control*, %struct.png_control** %40, align 8
  %42 = getelementptr inbounds %struct.png_control, %struct.png_control* %41, i32 0, i32 0
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %42, align 8
  store %struct.png_struct_def* %43, %struct.png_struct_def** %6, align 8
  %44 = load %struct.png_image*, %struct.png_image** %5, align 8
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %44, i32 0, i32 0
  %46 = load %struct.png_control*, %struct.png_control** %45, align 8
  %47 = getelementptr inbounds %struct.png_control, %struct.png_control* %46, i32 0, i32 1
  %48 = load %struct.png_info_def*, %struct.png_info_def** %47, align 8
  store %struct.png_info_def* %48, %struct.png_info_def** %7, align 8
  %49 = load %struct.png_image*, %struct.png_image** %5, align 8
  %50 = getelementptr inbounds %struct.png_image, %struct.png_image* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %8, align 4
  %52 = load i32, i32* %8, align 4
  %53 = and i32 %52, 4
  %54 = icmp ne i32 %53, 0
  %55 = zext i1 %54 to i32
  store i32 %55, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_expand(%struct.png_struct_def* noundef %56)
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %58 = call i32 @png_image_format(%struct.png_struct_def* noundef %57)
  %59 = and i32 %58, -9
  store i32 %59, i32* %13, align 4
  %60 = load i32, i32* %8, align 4
  %61 = load i32, i32* %13, align 4
  %62 = xor i32 %60, %61
  store i32 %62, i32* %14, align 4
  %63 = load i32, i32* %14, align 4
  %64 = and i32 %63, 2
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %1
  %67 = load i32, i32* %8, align 4
  %68 = and i32 %67, 2
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_gray_to_rgb(%struct.png_struct_def* noundef %71)
  br label %79

72:                                               ; preds = %66
  %73 = load i32, i32* %13, align 4
  %74 = and i32 %73, 1
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  store i32 1, i32* %11, align 4
  br label %77

77:                                               ; preds = %76, %72
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_rgb_to_gray_fixed(%struct.png_struct_def* noundef %78, i32 noundef 1, i32 noundef -1, i32 noundef -1)
  br label %79

79:                                               ; preds = %77, %70
  %80 = load i32, i32* %14, align 4
  %81 = and i32 %80, -3
  store i32 %81, i32* %14, align 4
  br label %82

82:                                               ; preds = %79, %1
  %83 = load i32, i32* %13, align 4
  %84 = and i32 %83, 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %82
  %87 = load %struct.png_image*, %struct.png_image** %5, align 8
  %88 = getelementptr inbounds %struct.png_image, %struct.png_image* %87, i32 0, i32 5
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %86
  store i32 100000, i32* %17, align 4
  br label %94

93:                                               ; preds = %86, %82
  store i32 -1, i32* %17, align 4
  br label %94

94:                                               ; preds = %93, %92
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %96 = load i32, i32* %17, align 4
  call void @png_set_alpha_mode_fixed(%struct.png_struct_def* noundef %95, i32 noundef 0, i32 noundef %96)
  %97 = load i32, i32* %9, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %106

99:                                               ; preds = %94
  %100 = load i32, i32* %13, align 4
  %101 = and i32 %100, 1
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  store i32 1, i32* %16, align 4
  br label %105

104:                                              ; preds = %99
  store i32 0, i32* %16, align 4
  br label %105

105:                                              ; preds = %104, %103
  store i32 100000, i32* %15, align 4
  br label %107

106:                                              ; preds = %94
  store i32 0, i32* %16, align 4
  store i32 -1, i32* %15, align 4
  br label %107

107:                                              ; preds = %106, %105
  %108 = load i32, i32* %14, align 4
  %109 = and i32 %108, 64
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  store i32 2, i32* %16, align 4
  %112 = load i32, i32* %14, align 4
  %113 = and i32 %112, -65
  store i32 %113, i32* %14, align 4
  br label %114

114:                                              ; preds = %111, %107
  %115 = load i32, i32* %11, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %136

117:                                              ; preds = %114
  %118 = load i32, i32* %15, align 4
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %120 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 145
  %121 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %120, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = call i32 @png_muldiv(i32* noundef %18, i32 noundef %118, i32 noundef %122, i32 noundef 100000)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %117
  %126 = load i32, i32* %18, align 4
  %127 = call i32 @png_gamma_significant(i32 noundef %126)
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  store i32 0, i32* %11, align 4
  br label %135

130:                                              ; preds = %125, %117
  %131 = load i32, i32* %16, align 4
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  store i32 2, i32* %11, align 4
  store i32 0, i32* %16, align 4
  br label %134

134:                                              ; preds = %133, %130
  br label %135

135:                                              ; preds = %134, %129
  br label %136

136:                                              ; preds = %135, %114
  %137 = load i32, i32* %14, align 4
  %138 = and i32 %137, 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %150

140:                                              ; preds = %136
  %141 = load i32, i32* %9, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_expand_16(%struct.png_struct_def* noundef %144)
  br label %147

145:                                              ; preds = %140
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_scale_16(%struct.png_struct_def* noundef %146)
  br label %147

147:                                              ; preds = %145, %143
  %148 = load i32, i32* %14, align 4
  %149 = and i32 %148, -5
  store i32 %149, i32* %14, align 4
  br label %150

150:                                              ; preds = %147, %136
  %151 = load i32, i32* %14, align 4
  %152 = and i32 %151, 1
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %227

154:                                              ; preds = %150
  %155 = load i32, i32* %13, align 4
  %156 = and i32 %155, 1
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %158, label %207

158:                                              ; preds = %154
  %159 = load i32, i32* %11, align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  store i32 2, i32* %11, align 4
  br label %206

162:                                              ; preds = %158
  %163 = load i32, i32* %9, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_strip_alpha(%struct.png_struct_def* noundef %166)
  br label %205

167:                                              ; preds = %162
  %168 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %169 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %168, i32 0, i32 4
  %170 = load %struct.png_color_struct*, %struct.png_color_struct** %169, align 8
  %171 = icmp ne %struct.png_color_struct* %170, null
  br i1 %171, label %172, label %203

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %19, i32 0, i32 0
  store i8 0, i8* %173, align 2
  %174 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %175 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %174, i32 0, i32 4
  %176 = load %struct.png_color_struct*, %struct.png_color_struct** %175, align 8
  %177 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %176, i32 0, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i16
  %180 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %19, i32 0, i32 1
  store i16 %179, i16* %180, align 2
  %181 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %182 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %181, i32 0, i32 4
  %183 = load %struct.png_color_struct*, %struct.png_color_struct** %182, align 8
  %184 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %183, i32 0, i32 1
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i16
  %187 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %19, i32 0, i32 2
  store i16 %186, i16* %187, align 2
  %188 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %189 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %188, i32 0, i32 4
  %190 = load %struct.png_color_struct*, %struct.png_color_struct** %189, align 8
  %191 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %190, i32 0, i32 2
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i16
  %194 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %19, i32 0, i32 3
  store i16 %193, i16* %194, align 2
  %195 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %196 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %195, i32 0, i32 4
  %197 = load %struct.png_color_struct*, %struct.png_color_struct** %196, align 8
  %198 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %197, i32 0, i32 1
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  %201 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %19, i32 0, i32 4
  store i16 %200, i16* %201, align 2
  %202 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_background_fixed(%struct.png_struct_def* noundef %202, %struct.png_color_16_struct* noundef %19, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  br label %204

203:                                              ; preds = %167
  store i32 1, i32* %10, align 4
  store i32 2, i32* %16, align 4
  br label %204

204:                                              ; preds = %203, %172
  br label %205

205:                                              ; preds = %204, %165
  br label %206

206:                                              ; preds = %205, %161
  br label %224

207:                                              ; preds = %154
  %208 = load i32, i32* %9, align 4
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  store i32 65535, i32* %20, align 4
  br label %212

211:                                              ; preds = %207
  store i32 255, i32* %20, align 4
  br label %212

212:                                              ; preds = %211, %210
  %213 = load i32, i32* %8, align 4
  %214 = and i32 %213, 32
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %212
  store i32 0, i32* %21, align 4
  %217 = load i32, i32* %14, align 4
  %218 = and i32 %217, -33
  store i32 %218, i32* %14, align 4
  br label %220

219:                                              ; preds = %212
  store i32 1, i32* %21, align 4
  br label %220

220:                                              ; preds = %219, %216
  %221 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %222 = load i32, i32* %20, align 4
  %223 = load i32, i32* %21, align 4
  call void bitcast (void (%struct.png_struct_def.205*, i32, i32)* @png_set_add_alpha to void (%struct.png_struct_def*, i32, i32)*)(%struct.png_struct_def* noundef %221, i32 noundef %222, i32 noundef %223)
  br label %224

224:                                              ; preds = %220, %206
  %225 = load i32, i32* %14, align 4
  %226 = and i32 %225, -2
  store i32 %226, i32* %14, align 4
  br label %227

227:                                              ; preds = %224, %150
  %228 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %229 = load i32, i32* %16, align 4
  %230 = load i32, i32* %15, align 4
  call void @png_set_alpha_mode_fixed(%struct.png_struct_def* noundef %228, i32 noundef %229, i32 noundef %230)
  %231 = load i32, i32* %14, align 4
  %232 = and i32 %231, 16
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %227
  %235 = load i32, i32* %8, align 4
  %236 = and i32 %235, 2
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %234
  %239 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_bgr to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %239)
  br label %243

240:                                              ; preds = %234
  %241 = load i32, i32* %8, align 4
  %242 = and i32 %241, -17
  store i32 %242, i32* %8, align 4
  br label %243

243:                                              ; preds = %240, %238
  %244 = load i32, i32* %14, align 4
  %245 = and i32 %244, -17
  store i32 %245, i32* %14, align 4
  br label %246

246:                                              ; preds = %243, %227
  %247 = load i32, i32* %14, align 4
  %248 = and i32 %247, 32
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %250, label %266

250:                                              ; preds = %246
  %251 = load i32, i32* %8, align 4
  %252 = and i32 %251, 1
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %260

254:                                              ; preds = %250
  %255 = load i32, i32* %11, align 4
  %256 = icmp ne i32 %255, 2
  br i1 %256, label %257, label %259

257:                                              ; preds = %254
  %258 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap_alpha to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %258)
  br label %259

259:                                              ; preds = %257, %254
  br label %263

260:                                              ; preds = %250
  %261 = load i32, i32* %8, align 4
  %262 = and i32 %261, -33
  store i32 %262, i32* %8, align 4
  br label %263

263:                                              ; preds = %260, %259
  %264 = load i32, i32* %14, align 4
  %265 = and i32 %264, -33
  store i32 %265, i32* %14, align 4
  br label %266

266:                                              ; preds = %263, %246
  %267 = load i32, i32* %9, align 4
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %269, label %277

269:                                              ; preds = %266
  store i16 1, i16* %22, align 2
  %270 = bitcast i16* %22 to i8*
  %271 = load i8, i8* %270, align 2
  %272 = zext i8 %271 to i32
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %269
  %275 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %275)
  br label %276

276:                                              ; preds = %274, %269
  br label %277

277:                                              ; preds = %276, %266
  %278 = load i32, i32* %14, align 4
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %277
  %281 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %281, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.53.157, i64 0, i64 0)) #13
  unreachable

282:                                              ; preds = %277
  %283 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_image_skip_unused_chunks(%struct.png_struct_def* noundef %283)
  %284 = load i32, i32* %10, align 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %292

286:                                              ; preds = %282
  %287 = load i32, i32* %11, align 4
  %288 = icmp ne i32 %287, 2
  br i1 %288, label %289, label %292

289:                                              ; preds = %286
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %291 = call i32 bitcast (i32 (%struct.png_struct_def.205*)* @png_set_interlace_handling to i32 (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %290)
  store i32 %291, i32* %12, align 4
  br label %292

292:                                              ; preds = %289, %286, %282
  %293 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %294 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_read_update_info(%struct.png_struct_def* noundef %293, %struct.png_info_def* noundef %294)
  store i32 0, i32* %23, align 4
  %295 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %296 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %295, i32 0, i32 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i32
  %299 = and i32 %298, 2
  %300 = icmp ne i32 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %292
  %302 = load i32, i32* %23, align 4
  %303 = or i32 %302, 2
  store i32 %303, i32* %23, align 4
  br label %304

304:                                              ; preds = %301, %292
  %305 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %306 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %305, i32 0, i32 8
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = and i32 %308, 4
  %310 = icmp ne i32 %309, 0
  br i1 %310, label %311, label %326

311:                                              ; preds = %304
  %312 = load i32, i32* %10, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %325

314:                                              ; preds = %311
  %315 = load i32, i32* %11, align 4
  %316 = icmp ne i32 %315, 2
  br i1 %316, label %321, label %317

317:                                              ; preds = %314
  %318 = load i32, i32* %8, align 4
  %319 = and i32 %318, 1
  %320 = icmp ne i32 %319, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %317, %314
  %322 = load i32, i32* %23, align 4
  %323 = or i32 %322, 1
  store i32 %323, i32* %23, align 4
  br label %324

324:                                              ; preds = %321, %317
  br label %325

325:                                              ; preds = %324, %311
  br label %332

326:                                              ; preds = %304
  %327 = load i32, i32* %10, align 4
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %331

329:                                              ; preds = %326
  %330 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %330, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54.158, i64 0, i64 0)) #13
  unreachable

331:                                              ; preds = %326
  br label %332

332:                                              ; preds = %331, %325
  %333 = load i32, i32* %8, align 4
  %334 = and i32 %333, 64
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %339

336:                                              ; preds = %332
  %337 = load i32, i32* %23, align 4
  %338 = or i32 %337, 64
  store i32 %338, i32* %23, align 4
  br label %339

339:                                              ; preds = %336, %332
  %340 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %341 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %340, i32 0, i32 7
  %342 = load i8, i8* %341, align 4
  %343 = zext i8 %342 to i32
  %344 = icmp eq i32 %343, 16
  br i1 %344, label %345, label %348

345:                                              ; preds = %339
  %346 = load i32, i32* %23, align 4
  %347 = or i32 %346, 4
  store i32 %347, i32* %23, align 4
  br label %348

348:                                              ; preds = %345, %339
  %349 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %350 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %349, i32 0, i32 17
  %351 = load i32, i32* %350, align 4
  %352 = and i32 %351, 1
  %353 = icmp ne i32 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %348
  %355 = load i32, i32* %23, align 4
  %356 = or i32 %355, 16
  store i32 %356, i32* %23, align 4
  br label %357

357:                                              ; preds = %354, %348
  %358 = load i32, i32* %11, align 4
  %359 = icmp eq i32 %358, 2
  br i1 %359, label %360, label %368

360:                                              ; preds = %357
  %361 = load i32, i32* %8, align 4
  %362 = and i32 %361, 32
  %363 = icmp ne i32 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %360
  %365 = load i32, i32* %23, align 4
  %366 = or i32 %365, 32
  store i32 %366, i32* %23, align 4
  br label %367

367:                                              ; preds = %364, %360
  br label %368

368:                                              ; preds = %367, %357
  %369 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %370 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %369, i32 0, i32 17
  %371 = load i32, i32* %370, align 4
  %372 = and i32 %371, 131072
  %373 = icmp ne i32 %372, 0
  br i1 %373, label %386, label %374

374:                                              ; preds = %368
  %375 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %376 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %375, i32 0, i32 17
  %377 = load i32, i32* %376, align 4
  %378 = and i32 %377, 16777216
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %380, label %394

380:                                              ; preds = %374
  %381 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %382 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %381, i32 0, i32 16
  %383 = load i32, i32* %382, align 8
  %384 = and i32 %383, 128
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %394

386:                                              ; preds = %380, %368
  %387 = load i32, i32* %11, align 4
  %388 = icmp eq i32 %387, 2
  br i1 %388, label %389, label %391

389:                                              ; preds = %386
  %390 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %390, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.55.159, i64 0, i64 0)) #13
  unreachable

391:                                              ; preds = %386
  %392 = load i32, i32* %23, align 4
  %393 = or i32 %392, 32
  store i32 %393, i32* %23, align 4
  br label %394

394:                                              ; preds = %391, %380, %374
  %395 = load i32, i32* %23, align 4
  %396 = load i32, i32* %8, align 4
  %397 = icmp ne i32 %395, %396
  br i1 %397, label %398, label %400

398:                                              ; preds = %394
  %399 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %399, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56.160, i64 0, i64 0)) #13
  unreachable

400:                                              ; preds = %394
  %401 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %402 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %401, i32 0, i32 1
  %403 = load i8*, i8** %402, align 8
  store i8* %403, i8** %24, align 8
  %404 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %405 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %404, i32 0, i32 2
  %406 = load i32, i32* %405, align 8
  %407 = sext i32 %406 to i64
  store i64 %407, i64* %25, align 8
  %408 = load i32, i32* %9, align 4
  %409 = icmp ne i32 %408, 0
  br i1 %409, label %410, label %413

410:                                              ; preds = %400
  %411 = load i64, i64* %25, align 8
  %412 = mul nsw i64 %411, 2
  store i64 %412, i64* %25, align 8
  br label %413

413:                                              ; preds = %410, %400
  %414 = load i64, i64* %25, align 8
  %415 = icmp slt i64 %414, 0
  br i1 %415, label %416, label %429

416:                                              ; preds = %413
  %417 = load i8*, i8** %24, align 8
  store i8* %417, i8** %26, align 8
  %418 = load %struct.png_image*, %struct.png_image** %5, align 8
  %419 = getelementptr inbounds %struct.png_image, %struct.png_image* %418, i32 0, i32 3
  %420 = load i32, i32* %419, align 8
  %421 = sub i32 %420, 1
  %422 = zext i32 %421 to i64
  %423 = load i64, i64* %25, align 8
  %424 = sub nsw i64 0, %423
  %425 = mul nsw i64 %422, %424
  %426 = load i8*, i8** %26, align 8
  %427 = getelementptr inbounds i8, i8* %426, i64 %425
  store i8* %427, i8** %26, align 8
  %428 = load i8*, i8** %26, align 8
  store i8* %428, i8** %24, align 8
  br label %429

429:                                              ; preds = %416, %413
  %430 = load i8*, i8** %24, align 8
  %431 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %432 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %431, i32 0, i32 6
  store i8* %430, i8** %432, align 8
  %433 = load i64, i64* %25, align 8
  %434 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %435 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %434, i32 0, i32 7
  store i64 %433, i64* %435, align 8
  %436 = load i32, i32* %10, align 4
  %437 = icmp ne i32 %436, 0
  br i1 %437, label %438, label %456

438:                                              ; preds = %429
  %439 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %440 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %441 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %442 = call i64 @png_get_rowbytes(%struct.png_struct_def* noundef %440, %struct.png_info_def* noundef %441)
  %443 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %439, i64 noundef %442)
  store i8* %443, i8** %28, align 8
  %444 = load i8*, i8** %28, align 8
  %445 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %446 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %445, i32 0, i32 5
  store i8* %444, i8** %446, align 8
  %447 = load %struct.png_image*, %struct.png_image** %5, align 8
  %448 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %449 = bitcast %struct.png_image_read_control* %448 to i8*
  %450 = call i32 @png_safe_execute(%struct.png_image* noundef %447, i32 (i8*)* noundef @png_image_read_composite, i8* noundef %449)
  store i32 %450, i32* %27, align 4
  %451 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %452 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %451, i32 0, i32 5
  store i8* null, i8** %452, align 8
  %453 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %454 = load i8*, i8** %28, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %453, i8* noundef %454)
  %455 = load i32, i32* %27, align 4
  store i32 %455, i32* %2, align 4
  br label %506

456:                                              ; preds = %429
  %457 = load i32, i32* %11, align 4
  %458 = icmp eq i32 %457, 2
  br i1 %458, label %459, label %477

459:                                              ; preds = %456
  %460 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %461 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %462 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %463 = call i64 @png_get_rowbytes(%struct.png_struct_def* noundef %461, %struct.png_info_def* noundef %462)
  %464 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %460, i64 noundef %463)
  store i8* %464, i8** %30, align 8
  %465 = load i8*, i8** %30, align 8
  %466 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %467 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %466, i32 0, i32 5
  store i8* %465, i8** %467, align 8
  %468 = load %struct.png_image*, %struct.png_image** %5, align 8
  %469 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %470 = bitcast %struct.png_image_read_control* %469 to i8*
  %471 = call i32 @png_safe_execute(%struct.png_image* noundef %468, i32 (i8*)* noundef @png_image_read_background, i8* noundef %470)
  store i32 %471, i32* %29, align 4
  %472 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %473 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %472, i32 0, i32 5
  store i8* null, i8** %473, align 8
  %474 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %475 = load i8*, i8** %30, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %474, i8* noundef %475)
  %476 = load i32, i32* %29, align 4
  store i32 %476, i32* %2, align 4
  br label %506

477:                                              ; preds = %456
  %478 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %479 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %478, i32 0, i32 7
  %480 = load i64, i64* %479, align 8
  store i64 %480, i64* %31, align 8
  br label %481

481:                                              ; preds = %504, %477
  %482 = load i32, i32* %12, align 4
  %483 = add nsw i32 %482, -1
  store i32 %483, i32* %12, align 4
  %484 = icmp sge i32 %483, 0
  br i1 %484, label %485, label %505

485:                                              ; preds = %481
  %486 = load %struct.png_image*, %struct.png_image** %5, align 8
  %487 = getelementptr inbounds %struct.png_image, %struct.png_image* %486, i32 0, i32 3
  %488 = load i32, i32* %487, align 8
  store i32 %488, i32* %32, align 4
  %489 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %490 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %489, i32 0, i32 6
  %491 = load i8*, i8** %490, align 8
  store i8* %491, i8** %33, align 8
  br label %492

492:                                              ; preds = %501, %485
  %493 = load i32, i32* %32, align 4
  %494 = icmp ugt i32 %493, 0
  br i1 %494, label %495, label %504

495:                                              ; preds = %492
  %496 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %497 = load i8*, i8** %33, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %496, i8* noundef %497, i8* noundef null)
  %498 = load i64, i64* %31, align 8
  %499 = load i8*, i8** %33, align 8
  %500 = getelementptr inbounds i8, i8* %499, i64 %498
  store i8* %500, i8** %33, align 8
  br label %501

501:                                              ; preds = %495
  %502 = load i32, i32* %32, align 4
  %503 = add i32 %502, -1
  store i32 %503, i32* %32, align 4
  br label %492, !llvm.loop !92

504:                                              ; preds = %492
  br label %481, !llvm.loop !93

505:                                              ; preds = %481
  store i32 1, i32* %2, align 4
  br label %506

506:                                              ; preds = %505, %459, %438
  %507 = load i32, i32* %2, align 4
  ret i32 %507
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_image_skip_unused_chunks(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_set_keep_unknown_chunks(%struct.png_struct_def* noundef %3, i32 noundef 1, i8* noundef null, i32 noundef -1)
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_set_keep_unknown_chunks(%struct.png_struct_def* noundef %4, i32 noundef 0, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @png_image_skip_unused_chunks.chunks_to_process, i64 0, i64 0), i32 noundef 6)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_composite(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_read_control*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %22 = load i8*, i8** %2, align 8
  %23 = bitcast i8* %22 to %struct.png_image_read_control*
  store %struct.png_image_read_control* %23, %struct.png_image_read_control** %3, align 8
  %24 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %25 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %24, i32 0, i32 0
  %26 = load %struct.png_image*, %struct.png_image** %25, align 8
  store %struct.png_image* %26, %struct.png_image** %4, align 8
  %27 = load %struct.png_image*, %struct.png_image** %4, align 8
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %27, i32 0, i32 0
  %29 = load %struct.png_control*, %struct.png_control** %28, align 8
  %30 = getelementptr inbounds %struct.png_control, %struct.png_control* %29, i32 0, i32 0
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %30, align 8
  store %struct.png_struct_def* %31, %struct.png_struct_def** %5, align 8
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 58
  %34 = load i8, i8* %33, align 4
  %35 = zext i8 %34 to i32
  switch i32 %35, label %38 [
    i32 0, label %36
    i32 1, label %37
  ]

36:                                               ; preds = %1
  store i32 1, i32* %6, align 4
  br label %40

37:                                               ; preds = %1
  store i32 7, i32* %6, align 4
  br label %40

38:                                               ; preds = %1
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %39, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52.165, i64 0, i64 0)) #13
  unreachable

40:                                               ; preds = %37, %36
  %41 = load %struct.png_image*, %struct.png_image** %4, align 8
  %42 = getelementptr inbounds %struct.png_image, %struct.png_image* %41, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %7, align 4
  %44 = load %struct.png_image*, %struct.png_image** %4, align 8
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %8, align 4
  %47 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %48 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %47, i32 0, i32 7
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %9, align 8
  %50 = load %struct.png_image*, %struct.png_image** %4, align 8
  %51 = getelementptr inbounds %struct.png_image, %struct.png_image* %50, i32 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 2
  %54 = icmp ne i32 %53, 0
  %55 = zext i1 %54 to i64
  %56 = select i1 %54, i32 3, i32 1
  store i32 %56, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %57

57:                                               ; preds = %264, %40
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %6, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %267

61:                                               ; preds = %57
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 58
  %64 = load i8, i8* %63, align 4
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %137

67:                                               ; preds = %61
  %68 = load i32, i32* %8, align 4
  %69 = load i32, i32* %11, align 4
  %70 = icmp sgt i32 %69, 1
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = load i32, i32* %11, align 4
  %73 = sub nsw i32 7, %72
  %74 = ashr i32 %73, 1
  br label %76

75:                                               ; preds = %67
  br label %76

76:                                               ; preds = %75, %71
  %77 = phi i32 [ %74, %71 ], [ 3, %75 ]
  %78 = shl i32 1, %77
  %79 = sub nsw i32 %78, 1
  %80 = load i32, i32* %11, align 4
  %81 = and i32 1, %80
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  %84 = ashr i32 %83, 1
  %85 = sub nsw i32 3, %84
  %86 = shl i32 %81, %85
  %87 = and i32 %86, 7
  %88 = sub nsw i32 %79, %87
  %89 = add i32 %68, %88
  %90 = load i32, i32* %11, align 4
  %91 = icmp sgt i32 %90, 1
  br i1 %91, label %92, label %96

92:                                               ; preds = %76
  %93 = load i32, i32* %11, align 4
  %94 = sub nsw i32 7, %93
  %95 = ashr i32 %94, 1
  br label %97

96:                                               ; preds = %76
  br label %97

97:                                               ; preds = %96, %92
  %98 = phi i32 [ %95, %92 ], [ 3, %96 ]
  %99 = lshr i32 %89, %98
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  br label %264

102:                                              ; preds = %97
  %103 = load i32, i32* %11, align 4
  %104 = and i32 1, %103
  %105 = load i32, i32* %11, align 4
  %106 = add nsw i32 %105, 1
  %107 = ashr i32 %106, 1
  %108 = sub nsw i32 3, %107
  %109 = shl i32 %104, %108
  %110 = and i32 %109, 7
  %111 = load i32, i32* %10, align 4
  %112 = mul i32 %110, %111
  store i32 %112, i32* %12, align 4
  %113 = load i32, i32* %11, align 4
  %114 = sub nsw i32 7, %113
  %115 = ashr i32 %114, 1
  %116 = shl i32 1, %115
  %117 = load i32, i32* %10, align 4
  %118 = mul i32 %116, %117
  store i32 %118, i32* %13, align 4
  %119 = load i32, i32* %11, align 4
  %120 = xor i32 %119, -1
  %121 = and i32 1, %120
  %122 = load i32, i32* %11, align 4
  %123 = ashr i32 %122, 1
  %124 = sub nsw i32 3, %123
  %125 = shl i32 %121, %124
  %126 = and i32 %125, 7
  store i32 %126, i32* %15, align 4
  %127 = load i32, i32* %11, align 4
  %128 = icmp sgt i32 %127, 2
  br i1 %128, label %129, label %134

129:                                              ; preds = %102
  %130 = load i32, i32* %11, align 4
  %131 = sub nsw i32 %130, 1
  %132 = ashr i32 %131, 1
  %133 = ashr i32 8, %132
  br label %135

134:                                              ; preds = %102
  br label %135

135:                                              ; preds = %134, %129
  %136 = phi i32 [ %133, %129 ], [ 8, %134 ]
  store i32 %136, i32* %14, align 4
  br label %139

137:                                              ; preds = %61
  store i32 0, i32* %15, align 4
  store i32 0, i32* %12, align 4
  %138 = load i32, i32* %10, align 4
  store i32 %138, i32* %13, align 4
  store i32 1, i32* %14, align 4
  br label %139

139:                                              ; preds = %137, %135
  br label %140

140:                                              ; preds = %259, %139
  %141 = load i32, i32* %15, align 4
  %142 = load i32, i32* %7, align 4
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %144, label %263

144:                                              ; preds = %140
  %145 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %146 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %145, i32 0, i32 5
  %147 = load i8*, i8** %146, align 8
  store i8* %147, i8** %16, align 8
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %149 = load i8*, i8** %16, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %148, i8* noundef %149, i8* noundef null)
  %150 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %151 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %150, i32 0, i32 6
  %152 = load i8*, i8** %151, align 8
  store i8* %152, i8** %17, align 8
  %153 = load i32, i32* %15, align 4
  %154 = zext i32 %153 to i64
  %155 = load i64, i64* %9, align 8
  %156 = mul nsw i64 %154, %155
  %157 = load i8*, i8** %17, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 %156
  store i8* %158, i8** %17, align 8
  %159 = load i8*, i8** %17, align 8
  %160 = load i32, i32* %8, align 4
  %161 = load i32, i32* %10, align 4
  %162 = mul i32 %160, %161
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i8, i8* %159, i64 %163
  store i8* %164, i8** %18, align 8
  %165 = load i32, i32* %12, align 4
  %166 = load i8*, i8** %17, align 8
  %167 = zext i32 %165 to i64
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  store i8* %168, i8** %17, align 8
  br label %169

169:                                              ; preds = %253, %144
  %170 = load i8*, i8** %17, align 8
  %171 = load i8*, i8** %18, align 8
  %172 = icmp ult i8* %170, %171
  br i1 %172, label %173, label %258

173:                                              ; preds = %169
  %174 = load i8*, i8** %16, align 8
  %175 = load i32, i32* %10, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %174, i64 %176
  %178 = load i8, i8* %177, align 1
  store i8 %178, i8* %19, align 1
  %179 = load i8, i8* %19, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %182, label %247

182:                                              ; preds = %173
  store i32 0, i32* %20, align 4
  br label %183

183:                                              ; preds = %243, %182
  %184 = load i32, i32* %20, align 4
  %185 = load i32, i32* %10, align 4
  %186 = icmp ult i32 %184, %185
  br i1 %186, label %187, label %246

187:                                              ; preds = %183
  %188 = load i8*, i8** %16, align 8
  %189 = load i32, i32* %20, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %188, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  store i32 %193, i32* %21, align 4
  %194 = load i8, i8* %19, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp slt i32 %195, 255
  br i1 %196, label %197, label %236

197:                                              ; preds = %187
  %198 = load i32, i32* %21, align 4
  %199 = mul i32 %198, 65535
  store i32 %199, i32* %21, align 4
  %200 = load i8, i8* %19, align 1
  %201 = zext i8 %200 to i32
  %202 = sub nsw i32 255, %201
  %203 = load i8*, i8** %17, align 8
  %204 = load i32, i32* %20, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %203, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %208
  %210 = load i16, i16* %209, align 2
  %211 = zext i16 %210 to i32
  %212 = mul nsw i32 %202, %211
  %213 = load i32, i32* %21, align 4
  %214 = add i32 %213, %212
  store i32 %214, i32* %21, align 4
  %215 = load i32, i32* %21, align 4
  %216 = lshr i32 %215, 15
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %217
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = load i32, i32* %21, align 4
  %222 = and i32 %221, 32767
  %223 = load i32, i32* %21, align 4
  %224 = lshr i32 %223, 15
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = mul i32 %222, %228
  %230 = lshr i32 %229, 12
  %231 = add i32 %220, %230
  %232 = lshr i32 %231, 8
  %233 = and i32 255, %232
  %234 = trunc i32 %233 to i8
  %235 = zext i8 %234 to i32
  store i32 %235, i32* %21, align 4
  br label %236

236:                                              ; preds = %197, %187
  %237 = load i32, i32* %21, align 4
  %238 = trunc i32 %237 to i8
  %239 = load i8*, i8** %17, align 8
  %240 = load i32, i32* %20, align 4
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %239, i64 %241
  store i8 %238, i8* %242, align 1
  br label %243

243:                                              ; preds = %236
  %244 = load i32, i32* %20, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %20, align 4
  br label %183, !llvm.loop !94

246:                                              ; preds = %183
  br label %247

247:                                              ; preds = %246, %173
  %248 = load i32, i32* %10, align 4
  %249 = add i32 %248, 1
  %250 = load i8*, i8** %16, align 8
  %251 = zext i32 %249 to i64
  %252 = getelementptr inbounds i8, i8* %250, i64 %251
  store i8* %252, i8** %16, align 8
  br label %253

253:                                              ; preds = %247
  %254 = load i32, i32* %13, align 4
  %255 = load i8*, i8** %17, align 8
  %256 = zext i32 %254 to i64
  %257 = getelementptr inbounds i8, i8* %255, i64 %256
  store i8* %257, i8** %17, align 8
  br label %169, !llvm.loop !95

258:                                              ; preds = %169
  br label %259

259:                                              ; preds = %258
  %260 = load i32, i32* %14, align 4
  %261 = load i32, i32* %15, align 4
  %262 = add i32 %261, %260
  store i32 %262, i32* %15, align 4
  br label %140, !llvm.loop !96

263:                                              ; preds = %140
  br label %264

264:                                              ; preds = %263, %101
  %265 = load i32, i32* %11, align 4
  %266 = add nsw i32 %265, 1
  store i32 %266, i32* %11, align 4
  br label %57, !llvm.loop !97

267:                                              ; preds = %57
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_background(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_read_control*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca i16, align 2
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i16*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16*, align 8
  %39 = alloca i16*, align 8
  %40 = alloca i16*, align 8
  %41 = alloca i32, align 4
  %42 = alloca i16, align 2
  store i8* %0, i8** %2, align 8
  %43 = load i8*, i8** %2, align 8
  %44 = bitcast i8* %43 to %struct.png_image_read_control*
  store %struct.png_image_read_control* %44, %struct.png_image_read_control** %3, align 8
  %45 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %46 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %45, i32 0, i32 0
  %47 = load %struct.png_image*, %struct.png_image** %46, align 8
  store %struct.png_image* %47, %struct.png_image** %4, align 8
  %48 = load %struct.png_image*, %struct.png_image** %4, align 8
  %49 = getelementptr inbounds %struct.png_image, %struct.png_image* %48, i32 0, i32 0
  %50 = load %struct.png_control*, %struct.png_control** %49, align 8
  %51 = getelementptr inbounds %struct.png_control, %struct.png_control* %50, i32 0, i32 0
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %51, align 8
  store %struct.png_struct_def* %52, %struct.png_struct_def** %5, align 8
  %53 = load %struct.png_image*, %struct.png_image** %4, align 8
  %54 = getelementptr inbounds %struct.png_image, %struct.png_image* %53, i32 0, i32 0
  %55 = load %struct.png_control*, %struct.png_control** %54, align 8
  %56 = getelementptr inbounds %struct.png_control, %struct.png_control* %55, i32 0, i32 1
  %57 = load %struct.png_info_def*, %struct.png_info_def** %56, align 8
  store %struct.png_info_def* %57, %struct.png_info_def** %6, align 8
  %58 = load %struct.png_image*, %struct.png_image** %4, align 8
  %59 = getelementptr inbounds %struct.png_image, %struct.png_image* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %7, align 4
  %61 = load %struct.png_image*, %struct.png_image** %4, align 8
  %62 = getelementptr inbounds %struct.png_image, %struct.png_image* %61, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %8, align 4
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 17
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 6291456
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %1
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %70, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57.161, i64 0, i64 0)) #13
  unreachable

71:                                               ; preds = %1
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %73 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 17
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 128
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %78, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58.162, i64 0, i64 0)) #13
  unreachable

79:                                               ; preds = %71
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %81 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %82 = call zeroext i8 @png_get_channels(%struct.png_struct_def* noundef %80, %struct.png_info_def* noundef %81)
  %83 = zext i8 %82 to i32
  %84 = icmp ne i32 %83, 2
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %86, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59.163, i64 0, i64 0)) #13
  unreachable

87:                                               ; preds = %79
  %88 = load %struct.png_image*, %struct.png_image** %4, align 8
  %89 = getelementptr inbounds %struct.png_image, %struct.png_image* %88, i32 0, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %101

93:                                               ; preds = %87
  %94 = load %struct.png_image*, %struct.png_image** %4, align 8
  %95 = getelementptr inbounds %struct.png_image, %struct.png_image* %94, i32 0, i32 4
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 1
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %100, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.60.164, i64 0, i64 0)) #13
  unreachable

101:                                              ; preds = %93, %87
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 58
  %104 = load i8, i8* %103, align 4
  %105 = zext i8 %104 to i32
  switch i32 %105, label %108 [
    i32 0, label %106
    i32 1, label %107
  ]

106:                                              ; preds = %101
  store i32 1, i32* %10, align 4
  br label %110

107:                                              ; preds = %101
  store i32 7, i32* %10, align 4
  br label %110

108:                                              ; preds = %101
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52.165, i64 0, i64 0)) #13
  unreachable

110:                                              ; preds = %107, %106
  %111 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %112 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %111, i32 0, i32 7
  %113 = load i8, i8* %112, align 4
  %114 = zext i8 %113 to i32
  switch i32 %114, label %632 [
    i32 8, label %115
    i32 16, label %429
  ]

115:                                              ; preds = %110
  %116 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %117 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %116, i32 0, i32 6
  %118 = load i8*, i8** %117, align 8
  store i8* %118, i8** %11, align 8
  %119 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %120 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %119, i32 0, i32 7
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %12, align 8
  store i32 0, i32* %9, align 4
  br label %122

122:                                              ; preds = %425, %115
  %123 = load i32, i32* %9, align 4
  %124 = load i32, i32* %10, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %126, label %428

126:                                              ; preds = %122
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 58
  %129 = load i8, i8* %128, align 4
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %198

132:                                              ; preds = %126
  %133 = load i32, i32* %8, align 4
  %134 = load i32, i32* %9, align 4
  %135 = icmp sgt i32 %134, 1
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = load i32, i32* %9, align 4
  %138 = sub nsw i32 7, %137
  %139 = ashr i32 %138, 1
  br label %141

140:                                              ; preds = %132
  br label %141

141:                                              ; preds = %140, %136
  %142 = phi i32 [ %139, %136 ], [ 3, %140 ]
  %143 = shl i32 1, %142
  %144 = sub nsw i32 %143, 1
  %145 = load i32, i32* %9, align 4
  %146 = and i32 1, %145
  %147 = load i32, i32* %9, align 4
  %148 = add nsw i32 %147, 1
  %149 = ashr i32 %148, 1
  %150 = sub nsw i32 3, %149
  %151 = shl i32 %146, %150
  %152 = and i32 %151, 7
  %153 = sub nsw i32 %144, %152
  %154 = add i32 %133, %153
  %155 = load i32, i32* %9, align 4
  %156 = icmp sgt i32 %155, 1
  br i1 %156, label %157, label %161

157:                                              ; preds = %141
  %158 = load i32, i32* %9, align 4
  %159 = sub nsw i32 7, %158
  %160 = ashr i32 %159, 1
  br label %162

161:                                              ; preds = %141
  br label %162

162:                                              ; preds = %161, %157
  %163 = phi i32 [ %160, %157 ], [ 3, %161 ]
  %164 = lshr i32 %154, %163
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  br label %425

167:                                              ; preds = %162
  %168 = load i32, i32* %9, align 4
  %169 = and i32 1, %168
  %170 = load i32, i32* %9, align 4
  %171 = add nsw i32 %170, 1
  %172 = ashr i32 %171, 1
  %173 = sub nsw i32 3, %172
  %174 = shl i32 %169, %173
  %175 = and i32 %174, 7
  store i32 %175, i32* %13, align 4
  %176 = load i32, i32* %9, align 4
  %177 = sub nsw i32 7, %176
  %178 = ashr i32 %177, 1
  %179 = shl i32 1, %178
  store i32 %179, i32* %14, align 4
  %180 = load i32, i32* %9, align 4
  %181 = xor i32 %180, -1
  %182 = and i32 1, %181
  %183 = load i32, i32* %9, align 4
  %184 = ashr i32 %183, 1
  %185 = sub nsw i32 3, %184
  %186 = shl i32 %182, %185
  %187 = and i32 %186, 7
  store i32 %187, i32* %16, align 4
  %188 = load i32, i32* %9, align 4
  %189 = icmp sgt i32 %188, 2
  br i1 %189, label %190, label %195

190:                                              ; preds = %167
  %191 = load i32, i32* %9, align 4
  %192 = sub nsw i32 %191, 1
  %193 = ashr i32 %192, 1
  %194 = ashr i32 8, %193
  br label %196

195:                                              ; preds = %167
  br label %196

196:                                              ; preds = %195, %190
  %197 = phi i32 [ %194, %190 ], [ 8, %195 ]
  store i32 %197, i32* %15, align 4
  br label %199

198:                                              ; preds = %126
  store i32 0, i32* %16, align 4
  store i32 0, i32* %13, align 4
  store i32 1, i32* %15, align 4
  store i32 1, i32* %14, align 4
  br label %199

199:                                              ; preds = %198, %196
  %200 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %201 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %200, i32 0, i32 4
  %202 = load %struct.png_color_struct*, %struct.png_color_struct** %201, align 8
  %203 = icmp eq %struct.png_color_struct* %202, null
  br i1 %203, label %204, label %310

204:                                              ; preds = %199
  br label %205

205:                                              ; preds = %305, %204
  %206 = load i32, i32* %16, align 4
  %207 = load i32, i32* %7, align 4
  %208 = icmp ult i32 %206, %207
  br i1 %208, label %209, label %309

209:                                              ; preds = %205
  %210 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %211 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %210, i32 0, i32 5
  %212 = load i8*, i8** %211, align 8
  store i8* %212, i8** %17, align 8
  %213 = load i8*, i8** %11, align 8
  %214 = load i32, i32* %16, align 4
  %215 = zext i32 %214 to i64
  %216 = load i64, i64* %12, align 8
  %217 = mul nsw i64 %215, %216
  %218 = getelementptr inbounds i8, i8* %213, i64 %217
  store i8* %218, i8** %18, align 8
  %219 = load i8*, i8** %18, align 8
  %220 = load i32, i32* %8, align 4
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds i8, i8* %219, i64 %221
  store i8* %222, i8** %19, align 8
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %224 = load i8*, i8** %17, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %223, i8* noundef %224, i8* noundef null)
  %225 = load i32, i32* %13, align 4
  %226 = load i8*, i8** %18, align 8
  %227 = zext i32 %225 to i64
  %228 = getelementptr inbounds i8, i8* %226, i64 %227
  store i8* %228, i8** %18, align 8
  br label %229

229:                                              ; preds = %299, %209
  %230 = load i8*, i8** %18, align 8
  %231 = load i8*, i8** %19, align 8
  %232 = icmp ult i8* %230, %231
  br i1 %232, label %233, label %304

233:                                              ; preds = %229
  %234 = load i8*, i8** %17, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 1
  %236 = load i8, i8* %235, align 1
  store i8 %236, i8* %20, align 1
  %237 = load i8, i8* %20, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp sgt i32 %238, 0
  br i1 %239, label %240, label %296

240:                                              ; preds = %233
  %241 = load i8*, i8** %17, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 0
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  store i32 %244, i32* %21, align 4
  %245 = load i8, i8* %20, align 1
  %246 = zext i8 %245 to i32
  %247 = icmp slt i32 %246, 255
  br i1 %247, label %248, label %291

248:                                              ; preds = %240
  %249 = load i32, i32* %21, align 4
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %250
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i32
  %254 = load i8, i8* %20, align 1
  %255 = zext i8 %254 to i32
  %256 = mul nsw i32 %253, %255
  store i32 %256, i32* %21, align 4
  %257 = load i8*, i8** %18, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 0
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %260
  %262 = load i16, i16* %261, align 2
  %263 = zext i16 %262 to i32
  %264 = load i8, i8* %20, align 1
  %265 = zext i8 %264 to i32
  %266 = sub nsw i32 255, %265
  %267 = mul nsw i32 %263, %266
  %268 = load i32, i32* %21, align 4
  %269 = add i32 %268, %267
  store i32 %269, i32* %21, align 4
  %270 = load i32, i32* %21, align 4
  %271 = lshr i32 %270, 15
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %272
  %274 = load i16, i16* %273, align 2
  %275 = zext i16 %274 to i32
  %276 = load i32, i32* %21, align 4
  %277 = and i32 %276, 32767
  %278 = load i32, i32* %21, align 4
  %279 = lshr i32 %278, 15
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = mul i32 %277, %283
  %285 = lshr i32 %284, 12
  %286 = add i32 %275, %285
  %287 = lshr i32 %286, 8
  %288 = and i32 255, %287
  %289 = trunc i32 %288 to i8
  %290 = zext i8 %289 to i32
  store i32 %290, i32* %21, align 4
  br label %291

291:                                              ; preds = %248, %240
  %292 = load i32, i32* %21, align 4
  %293 = trunc i32 %292 to i8
  %294 = load i8*, i8** %18, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 0
  store i8 %293, i8* %295, align 1
  br label %296

296:                                              ; preds = %291, %233
  %297 = load i8*, i8** %17, align 8
  %298 = getelementptr inbounds i8, i8* %297, i64 2
  store i8* %298, i8** %17, align 8
  br label %299

299:                                              ; preds = %296
  %300 = load i32, i32* %14, align 4
  %301 = load i8*, i8** %18, align 8
  %302 = zext i32 %300 to i64
  %303 = getelementptr inbounds i8, i8* %301, i64 %302
  store i8* %303, i8** %18, align 8
  br label %229, !llvm.loop !98

304:                                              ; preds = %229
  br label %305

305:                                              ; preds = %304
  %306 = load i32, i32* %15, align 4
  %307 = load i32, i32* %16, align 4
  %308 = add i32 %307, %306
  store i32 %308, i32* %16, align 4
  br label %205, !llvm.loop !99

309:                                              ; preds = %205
  br label %424

310:                                              ; preds = %199
  %311 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %312 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %311, i32 0, i32 4
  %313 = load %struct.png_color_struct*, %struct.png_color_struct** %312, align 8
  %314 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %313, i32 0, i32 1
  %315 = load i8, i8* %314, align 1
  store i8 %315, i8* %22, align 1
  %316 = load i8, i8* %22, align 1
  %317 = zext i8 %316 to i64
  %318 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %317
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %23, align 2
  br label %320

320:                                              ; preds = %419, %310
  %321 = load i32, i32* %16, align 4
  %322 = load i32, i32* %7, align 4
  %323 = icmp ult i32 %321, %322
  br i1 %323, label %324, label %423

324:                                              ; preds = %320
  %325 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %326 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %325, i32 0, i32 5
  %327 = load i8*, i8** %326, align 8
  store i8* %327, i8** %24, align 8
  %328 = load i8*, i8** %11, align 8
  %329 = load i32, i32* %16, align 4
  %330 = zext i32 %329 to i64
  %331 = load i64, i64* %12, align 8
  %332 = mul nsw i64 %330, %331
  %333 = getelementptr inbounds i8, i8* %328, i64 %332
  store i8* %333, i8** %25, align 8
  %334 = load i8*, i8** %25, align 8
  %335 = load i32, i32* %8, align 4
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds i8, i8* %334, i64 %336
  store i8* %337, i8** %26, align 8
  %338 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %339 = load i8*, i8** %24, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %338, i8* noundef %339, i8* noundef null)
  %340 = load i32, i32* %13, align 4
  %341 = load i8*, i8** %25, align 8
  %342 = zext i32 %340 to i64
  %343 = getelementptr inbounds i8, i8* %341, i64 %342
  store i8* %343, i8** %25, align 8
  br label %344

344:                                              ; preds = %413, %324
  %345 = load i8*, i8** %25, align 8
  %346 = load i8*, i8** %26, align 8
  %347 = icmp ult i8* %345, %346
  br i1 %347, label %348, label %418

348:                                              ; preds = %344
  %349 = load i8*, i8** %24, align 8
  %350 = getelementptr inbounds i8, i8* %349, i64 1
  %351 = load i8, i8* %350, align 1
  store i8 %351, i8* %27, align 1
  %352 = load i8, i8* %27, align 1
  %353 = zext i8 %352 to i32
  %354 = icmp sgt i32 %353, 0
  br i1 %354, label %355, label %406

355:                                              ; preds = %348
  %356 = load i8*, i8** %24, align 8
  %357 = getelementptr inbounds i8, i8* %356, i64 0
  %358 = load i8, i8* %357, align 1
  %359 = zext i8 %358 to i32
  store i32 %359, i32* %28, align 4
  %360 = load i8, i8* %27, align 1
  %361 = zext i8 %360 to i32
  %362 = icmp slt i32 %361, 255
  br i1 %362, label %363, label %401

363:                                              ; preds = %355
  %364 = load i32, i32* %28, align 4
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %365
  %367 = load i16, i16* %366, align 2
  %368 = zext i16 %367 to i32
  %369 = load i8, i8* %27, align 1
  %370 = zext i8 %369 to i32
  %371 = mul nsw i32 %368, %370
  store i32 %371, i32* %28, align 4
  %372 = load i16, i16* %23, align 2
  %373 = zext i16 %372 to i32
  %374 = load i8, i8* %27, align 1
  %375 = zext i8 %374 to i32
  %376 = sub nsw i32 255, %375
  %377 = mul nsw i32 %373, %376
  %378 = load i32, i32* %28, align 4
  %379 = add i32 %378, %377
  store i32 %379, i32* %28, align 4
  %380 = load i32, i32* %28, align 4
  %381 = lshr i32 %380, 15
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %382
  %384 = load i16, i16* %383, align 2
  %385 = zext i16 %384 to i32
  %386 = load i32, i32* %28, align 4
  %387 = and i32 %386, 32767
  %388 = load i32, i32* %28, align 4
  %389 = lshr i32 %388, 15
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %390
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i32
  %394 = mul i32 %387, %393
  %395 = lshr i32 %394, 12
  %396 = add i32 %385, %395
  %397 = lshr i32 %396, 8
  %398 = and i32 255, %397
  %399 = trunc i32 %398 to i8
  %400 = zext i8 %399 to i32
  store i32 %400, i32* %28, align 4
  br label %401

401:                                              ; preds = %363, %355
  %402 = load i32, i32* %28, align 4
  %403 = trunc i32 %402 to i8
  %404 = load i8*, i8** %25, align 8
  %405 = getelementptr inbounds i8, i8* %404, i64 0
  store i8 %403, i8* %405, align 1
  br label %410

406:                                              ; preds = %348
  %407 = load i8, i8* %22, align 1
  %408 = load i8*, i8** %25, align 8
  %409 = getelementptr inbounds i8, i8* %408, i64 0
  store i8 %407, i8* %409, align 1
  br label %410

410:                                              ; preds = %406, %401
  %411 = load i8*, i8** %24, align 8
  %412 = getelementptr inbounds i8, i8* %411, i64 2
  store i8* %412, i8** %24, align 8
  br label %413

413:                                              ; preds = %410
  %414 = load i32, i32* %14, align 4
  %415 = load i8*, i8** %25, align 8
  %416 = zext i32 %414 to i64
  %417 = getelementptr inbounds i8, i8* %415, i64 %416
  store i8* %417, i8** %25, align 8
  br label %344, !llvm.loop !100

418:                                              ; preds = %344
  br label %419

419:                                              ; preds = %418
  %420 = load i32, i32* %15, align 4
  %421 = load i32, i32* %16, align 4
  %422 = add i32 %421, %420
  store i32 %422, i32* %16, align 4
  br label %320, !llvm.loop !101

423:                                              ; preds = %320
  br label %424

424:                                              ; preds = %423, %309
  br label %425

425:                                              ; preds = %424, %166
  %426 = load i32, i32* %9, align 4
  %427 = add nsw i32 %426, 1
  store i32 %427, i32* %9, align 4
  br label %122, !llvm.loop !102

428:                                              ; preds = %122
  br label %634

429:                                              ; preds = %110
  %430 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %431 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %430, i32 0, i32 6
  %432 = load i8*, i8** %431, align 8
  %433 = bitcast i8* %432 to i16*
  store i16* %433, i16** %29, align 8
  %434 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %435 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %434, i32 0, i32 7
  %436 = load i64, i64* %435, align 8
  %437 = sdiv i64 %436, 2
  store i64 %437, i64* %30, align 8
  %438 = load %struct.png_image*, %struct.png_image** %4, align 8
  %439 = getelementptr inbounds %struct.png_image, %struct.png_image* %438, i32 0, i32 4
  %440 = load i32, i32* %439, align 4
  %441 = and i32 %440, 1
  %442 = icmp ne i32 %441, 0
  %443 = zext i1 %442 to i32
  store i32 %443, i32* %31, align 4
  %444 = load i32, i32* %31, align 4
  %445 = add i32 1, %444
  store i32 %445, i32* %32, align 4
  store i32 0, i32* %33, align 4
  %446 = load i32, i32* %31, align 4
  %447 = icmp ne i32 %446, 0
  br i1 %447, label %448, label %455

448:                                              ; preds = %429
  %449 = load %struct.png_image*, %struct.png_image** %4, align 8
  %450 = getelementptr inbounds %struct.png_image, %struct.png_image* %449, i32 0, i32 4
  %451 = load i32, i32* %450, align 4
  %452 = and i32 %451, 32
  %453 = icmp ne i32 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %448
  store i32 1, i32* %33, align 4
  br label %455

455:                                              ; preds = %454, %448, %429
  store i32 0, i32* %9, align 4
  br label %456

456:                                              ; preds = %628, %455
  %457 = load i32, i32* %9, align 4
  %458 = load i32, i32* %10, align 4
  %459 = icmp slt i32 %457, %458
  br i1 %459, label %460, label %631

460:                                              ; preds = %456
  %461 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %462 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %461, i32 0, i32 58
  %463 = load i8, i8* %462, align 4
  %464 = zext i8 %463 to i32
  %465 = icmp eq i32 %464, 1
  br i1 %465, label %466, label %536

466:                                              ; preds = %460
  %467 = load i32, i32* %8, align 4
  %468 = load i32, i32* %9, align 4
  %469 = icmp sgt i32 %468, 1
  br i1 %469, label %470, label %474

470:                                              ; preds = %466
  %471 = load i32, i32* %9, align 4
  %472 = sub nsw i32 7, %471
  %473 = ashr i32 %472, 1
  br label %475

474:                                              ; preds = %466
  br label %475

475:                                              ; preds = %474, %470
  %476 = phi i32 [ %473, %470 ], [ 3, %474 ]
  %477 = shl i32 1, %476
  %478 = sub nsw i32 %477, 1
  %479 = load i32, i32* %9, align 4
  %480 = and i32 1, %479
  %481 = load i32, i32* %9, align 4
  %482 = add nsw i32 %481, 1
  %483 = ashr i32 %482, 1
  %484 = sub nsw i32 3, %483
  %485 = shl i32 %480, %484
  %486 = and i32 %485, 7
  %487 = sub nsw i32 %478, %486
  %488 = add i32 %467, %487
  %489 = load i32, i32* %9, align 4
  %490 = icmp sgt i32 %489, 1
  br i1 %490, label %491, label %495

491:                                              ; preds = %475
  %492 = load i32, i32* %9, align 4
  %493 = sub nsw i32 7, %492
  %494 = ashr i32 %493, 1
  br label %496

495:                                              ; preds = %475
  br label %496

496:                                              ; preds = %495, %491
  %497 = phi i32 [ %494, %491 ], [ 3, %495 ]
  %498 = lshr i32 %488, %497
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %496
  br label %628

501:                                              ; preds = %496
  %502 = load i32, i32* %9, align 4
  %503 = and i32 1, %502
  %504 = load i32, i32* %9, align 4
  %505 = add nsw i32 %504, 1
  %506 = ashr i32 %505, 1
  %507 = sub nsw i32 3, %506
  %508 = shl i32 %503, %507
  %509 = and i32 %508, 7
  %510 = load i32, i32* %32, align 4
  %511 = mul i32 %509, %510
  store i32 %511, i32* %34, align 4
  %512 = load i32, i32* %9, align 4
  %513 = sub nsw i32 7, %512
  %514 = ashr i32 %513, 1
  %515 = shl i32 1, %514
  %516 = load i32, i32* %32, align 4
  %517 = mul i32 %515, %516
  store i32 %517, i32* %35, align 4
  %518 = load i32, i32* %9, align 4
  %519 = xor i32 %518, -1
  %520 = and i32 1, %519
  %521 = load i32, i32* %9, align 4
  %522 = ashr i32 %521, 1
  %523 = sub nsw i32 3, %522
  %524 = shl i32 %520, %523
  %525 = and i32 %524, 7
  store i32 %525, i32* %37, align 4
  %526 = load i32, i32* %9, align 4
  %527 = icmp sgt i32 %526, 2
  br i1 %527, label %528, label %533

528:                                              ; preds = %501
  %529 = load i32, i32* %9, align 4
  %530 = sub nsw i32 %529, 1
  %531 = ashr i32 %530, 1
  %532 = ashr i32 8, %531
  br label %534

533:                                              ; preds = %501
  br label %534

534:                                              ; preds = %533, %528
  %535 = phi i32 [ %532, %528 ], [ 8, %533 ]
  store i32 %535, i32* %36, align 4
  br label %538

536:                                              ; preds = %460
  store i32 0, i32* %37, align 4
  store i32 0, i32* %34, align 4
  %537 = load i32, i32* %32, align 4
  store i32 %537, i32* %35, align 4
  store i32 1, i32* %36, align 4
  br label %538

538:                                              ; preds = %536, %534
  br label %539

539:                                              ; preds = %623, %538
  %540 = load i32, i32* %37, align 4
  %541 = load i32, i32* %7, align 4
  %542 = icmp ult i32 %540, %541
  br i1 %542, label %543, label %627

543:                                              ; preds = %539
  %544 = load i16*, i16** %29, align 8
  %545 = load i32, i32* %37, align 4
  %546 = zext i32 %545 to i64
  %547 = load i64, i64* %30, align 8
  %548 = mul nsw i64 %546, %547
  %549 = getelementptr inbounds i16, i16* %544, i64 %548
  store i16* %549, i16** %39, align 8
  %550 = load i16*, i16** %39, align 8
  %551 = load i32, i32* %8, align 4
  %552 = load i32, i32* %32, align 4
  %553 = mul i32 %551, %552
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds i16, i16* %550, i64 %554
  store i16* %555, i16** %40, align 8
  %556 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %557 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %558 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %557, i32 0, i32 5
  %559 = load i8*, i8** %558, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %556, i8* noundef %559, i8* noundef null)
  %560 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %561 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %560, i32 0, i32 5
  %562 = load i8*, i8** %561, align 8
  %563 = bitcast i8* %562 to i16*
  store i16* %563, i16** %38, align 8
  %564 = load i32, i32* %34, align 4
  %565 = load i16*, i16** %39, align 8
  %566 = zext i32 %564 to i64
  %567 = getelementptr inbounds i16, i16* %565, i64 %566
  store i16* %567, i16** %39, align 8
  br label %568

568:                                              ; preds = %617, %543
  %569 = load i16*, i16** %39, align 8
  %570 = load i16*, i16** %40, align 8
  %571 = icmp ult i16* %569, %570
  br i1 %571, label %572, label %622

572:                                              ; preds = %568
  %573 = load i16*, i16** %38, align 8
  %574 = getelementptr inbounds i16, i16* %573, i64 0
  %575 = load i16, i16* %574, align 2
  %576 = zext i16 %575 to i32
  store i32 %576, i32* %41, align 4
  %577 = load i16*, i16** %38, align 8
  %578 = getelementptr inbounds i16, i16* %577, i64 1
  %579 = load i16, i16* %578, align 2
  store i16 %579, i16* %42, align 2
  %580 = load i16, i16* %42, align 2
  %581 = zext i16 %580 to i32
  %582 = icmp sgt i32 %581, 0
  br i1 %582, label %583, label %597

583:                                              ; preds = %572
  %584 = load i16, i16* %42, align 2
  %585 = zext i16 %584 to i32
  %586 = icmp slt i32 %585, 65535
  br i1 %586, label %587, label %596

587:                                              ; preds = %583
  %588 = load i16, i16* %42, align 2
  %589 = zext i16 %588 to i32
  %590 = load i32, i32* %41, align 4
  %591 = mul i32 %590, %589
  store i32 %591, i32* %41, align 4
  %592 = load i32, i32* %41, align 4
  %593 = add i32 %592, 32767
  store i32 %593, i32* %41, align 4
  %594 = load i32, i32* %41, align 4
  %595 = udiv i32 %594, 65535
  store i32 %595, i32* %41, align 4
  br label %596

596:                                              ; preds = %587, %583
  br label %598

597:                                              ; preds = %572
  store i32 0, i32* %41, align 4
  br label %598

598:                                              ; preds = %597, %596
  %599 = load i32, i32* %41, align 4
  %600 = trunc i32 %599 to i16
  %601 = load i16*, i16** %39, align 8
  %602 = load i32, i32* %33, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i16, i16* %601, i64 %603
  store i16 %600, i16* %604, align 2
  %605 = load i32, i32* %31, align 4
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %607, label %614

607:                                              ; preds = %598
  %608 = load i16, i16* %42, align 2
  %609 = load i16*, i16** %39, align 8
  %610 = load i32, i32* %33, align 4
  %611 = xor i32 1, %610
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i16, i16* %609, i64 %612
  store i16 %608, i16* %613, align 2
  br label %614

614:                                              ; preds = %607, %598
  %615 = load i16*, i16** %38, align 8
  %616 = getelementptr inbounds i16, i16* %615, i64 2
  store i16* %616, i16** %38, align 8
  br label %617

617:                                              ; preds = %614
  %618 = load i32, i32* %35, align 4
  %619 = load i16*, i16** %39, align 8
  %620 = zext i32 %618 to i64
  %621 = getelementptr inbounds i16, i16* %619, i64 %620
  store i16* %621, i16** %39, align 8
  br label %568, !llvm.loop !103

622:                                              ; preds = %568
  br label %623

623:                                              ; preds = %622
  %624 = load i32, i32* %36, align 4
  %625 = load i32, i32* %37, align 4
  %626 = add i32 %625, %624
  store i32 %626, i32* %37, align 4
  br label %539, !llvm.loop !104

627:                                              ; preds = %539
  br label %628

628:                                              ; preds = %627, %500
  %629 = load i32, i32* %9, align 4
  %630 = add nsw i32 %629, 1
  store i32 %630, i32* %9, align 4
  br label %456, !llvm.loop !105

631:                                              ; preds = %456
  br label %634

632:                                              ; preds = %110
  %633 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %633, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.61.166, i64 0, i64 0)) #13
  unreachable

634:                                              ; preds = %631, %428
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_read_and_map(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_read_control*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %27 = load i8*, i8** %2, align 8
  %28 = bitcast i8* %27 to %struct.png_image_read_control*
  store %struct.png_image_read_control* %28, %struct.png_image_read_control** %3, align 8
  %29 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %30 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %29, i32 0, i32 0
  %31 = load %struct.png_image*, %struct.png_image** %30, align 8
  store %struct.png_image* %31, %struct.png_image** %4, align 8
  %32 = load %struct.png_image*, %struct.png_image** %4, align 8
  %33 = getelementptr inbounds %struct.png_image, %struct.png_image* %32, i32 0, i32 0
  %34 = load %struct.png_control*, %struct.png_control** %33, align 8
  %35 = getelementptr inbounds %struct.png_control, %struct.png_control* %34, i32 0, i32 0
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %35, align 8
  store %struct.png_struct_def* %36, %struct.png_struct_def** %5, align 8
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 58
  %39 = load i8, i8* %38, align 4
  %40 = zext i8 %39 to i32
  switch i32 %40, label %43 [
    i32 0, label %41
    i32 1, label %42
  ]

41:                                               ; preds = %1
  store i32 1, i32* %6, align 4
  br label %45

42:                                               ; preds = %1
  store i32 7, i32* %6, align 4
  br label %45

43:                                               ; preds = %1
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52.165, i64 0, i64 0)) #13
  unreachable

45:                                               ; preds = %42, %41
  %46 = load %struct.png_image*, %struct.png_image** %4, align 8
  %47 = getelementptr inbounds %struct.png_image, %struct.png_image* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %7, align 4
  %49 = load %struct.png_image*, %struct.png_image** %4, align 8
  %50 = getelementptr inbounds %struct.png_image, %struct.png_image* %49, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %8, align 4
  %52 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %53 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %52, i32 0, i32 10
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %9, align 4
  %55 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %56 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %55, i32 0, i32 6
  %57 = load i8*, i8** %56, align 8
  store i8* %57, i8** %10, align 8
  %58 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %59 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %58, i32 0, i32 7
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %11, align 8
  store i32 0, i32* %12, align 4
  br label %61

61:                                               ; preds = %413, %45
  %62 = load i32, i32* %12, align 4
  %63 = load i32, i32* %6, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %416

65:                                               ; preds = %61
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 58
  %68 = load i8, i8* %67, align 4
  %69 = zext i8 %68 to i32
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %137

71:                                               ; preds = %65
  %72 = load i32, i32* %8, align 4
  %73 = load i32, i32* %12, align 4
  %74 = icmp sgt i32 %73, 1
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = load i32, i32* %12, align 4
  %77 = sub nsw i32 7, %76
  %78 = ashr i32 %77, 1
  br label %80

79:                                               ; preds = %71
  br label %80

80:                                               ; preds = %79, %75
  %81 = phi i32 [ %78, %75 ], [ 3, %79 ]
  %82 = shl i32 1, %81
  %83 = sub nsw i32 %82, 1
  %84 = load i32, i32* %12, align 4
  %85 = and i32 1, %84
  %86 = load i32, i32* %12, align 4
  %87 = add nsw i32 %86, 1
  %88 = ashr i32 %87, 1
  %89 = sub nsw i32 3, %88
  %90 = shl i32 %85, %89
  %91 = and i32 %90, 7
  %92 = sub nsw i32 %83, %91
  %93 = add i32 %72, %92
  %94 = load i32, i32* %12, align 4
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %96, label %100

96:                                               ; preds = %80
  %97 = load i32, i32* %12, align 4
  %98 = sub nsw i32 7, %97
  %99 = ashr i32 %98, 1
  br label %101

100:                                              ; preds = %80
  br label %101

101:                                              ; preds = %100, %96
  %102 = phi i32 [ %99, %96 ], [ 3, %100 ]
  %103 = lshr i32 %93, %102
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %101
  br label %413

106:                                              ; preds = %101
  %107 = load i32, i32* %12, align 4
  %108 = and i32 1, %107
  %109 = load i32, i32* %12, align 4
  %110 = add nsw i32 %109, 1
  %111 = ashr i32 %110, 1
  %112 = sub nsw i32 3, %111
  %113 = shl i32 %108, %112
  %114 = and i32 %113, 7
  store i32 %114, i32* %13, align 4
  %115 = load i32, i32* %12, align 4
  %116 = sub nsw i32 7, %115
  %117 = ashr i32 %116, 1
  %118 = shl i32 1, %117
  store i32 %118, i32* %14, align 4
  %119 = load i32, i32* %12, align 4
  %120 = xor i32 %119, -1
  %121 = and i32 1, %120
  %122 = load i32, i32* %12, align 4
  %123 = ashr i32 %122, 1
  %124 = sub nsw i32 3, %123
  %125 = shl i32 %121, %124
  %126 = and i32 %125, 7
  store i32 %126, i32* %16, align 4
  %127 = load i32, i32* %12, align 4
  %128 = icmp sgt i32 %127, 2
  br i1 %128, label %129, label %134

129:                                              ; preds = %106
  %130 = load i32, i32* %12, align 4
  %131 = sub nsw i32 %130, 1
  %132 = ashr i32 %131, 1
  %133 = ashr i32 8, %132
  br label %135

134:                                              ; preds = %106
  br label %135

135:                                              ; preds = %134, %129
  %136 = phi i32 [ %133, %129 ], [ 8, %134 ]
  store i32 %136, i32* %15, align 4
  br label %138

137:                                              ; preds = %65
  store i32 0, i32* %16, align 4
  store i32 0, i32* %13, align 4
  store i32 1, i32* %15, align 4
  store i32 1, i32* %14, align 4
  br label %138

138:                                              ; preds = %137, %135
  br label %139

139:                                              ; preds = %408, %138
  %140 = load i32, i32* %16, align 4
  %141 = load i32, i32* %7, align 4
  %142 = icmp ult i32 %140, %141
  br i1 %142, label %143, label %412

143:                                              ; preds = %139
  %144 = load %struct.png_image_read_control*, %struct.png_image_read_control** %3, align 8
  %145 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %144, i32 0, i32 5
  %146 = load i8*, i8** %145, align 8
  store i8* %146, i8** %17, align 8
  %147 = load i8*, i8** %10, align 8
  %148 = load i32, i32* %16, align 4
  %149 = zext i32 %148 to i64
  %150 = load i64, i64* %11, align 8
  %151 = mul nsw i64 %149, %150
  %152 = getelementptr inbounds i8, i8* %147, i64 %151
  store i8* %152, i8** %18, align 8
  %153 = load i8*, i8** %18, align 8
  %154 = load i32, i32* %8, align 4
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %153, i64 %155
  store i8* %156, i8** %19, align 8
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %158 = load i8*, i8** %17, align 8
  call void @png_read_row(%struct.png_struct_def* noundef %157, i8* noundef %158, i8* noundef null)
  %159 = load i32, i32* %13, align 4
  %160 = load i8*, i8** %18, align 8
  %161 = zext i32 %159 to i64
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  store i8* %162, i8** %18, align 8
  %163 = load i32, i32* %9, align 4
  switch i32 %163, label %406 [
    i32 1, label %164
    i32 2, label %212
    i32 3, label %246
    i32 4, label %287
  ]

164:                                              ; preds = %143
  br label %165

165:                                              ; preds = %206, %164
  %166 = load i8*, i8** %18, align 8
  %167 = load i8*, i8** %19, align 8
  %168 = icmp ult i8* %166, %167
  br i1 %168, label %169, label %211

169:                                              ; preds = %165
  %170 = load i8*, i8** %17, align 8
  %171 = getelementptr inbounds i8, i8* %170, i32 1
  store i8* %171, i8** %17, align 8
  %172 = load i8, i8* %170, align 1
  %173 = zext i8 %172 to i32
  store i32 %173, i32* %20, align 4
  %174 = load i8*, i8** %17, align 8
  %175 = getelementptr inbounds i8, i8* %174, i32 1
  store i8* %175, i8** %17, align 8
  %176 = load i8, i8* %174, align 1
  %177 = zext i8 %176 to i32
  store i32 %177, i32* %21, align 4
  %178 = load i32, i32* %21, align 4
  %179 = icmp ugt i32 %178, 229
  br i1 %179, label %180, label %185

180:                                              ; preds = %169
  %181 = load i32, i32* %20, align 4
  %182 = mul i32 231, %181
  %183 = add i32 %182, 128
  %184 = lshr i32 %183, 8
  store i32 %184, i32* %22, align 4
  br label %202

185:                                              ; preds = %169
  %186 = load i32, i32* %21, align 4
  %187 = icmp ult i32 %186, 26
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  store i32 231, i32* %22, align 4
  br label %201

189:                                              ; preds = %185
  %190 = load i32, i32* %21, align 4
  %191 = mul i32 %190, 5
  %192 = add i32 %191, 130
  %193 = lshr i32 %192, 8
  %194 = mul i32 6, %193
  %195 = add i32 226, %194
  %196 = load i32, i32* %20, align 4
  %197 = mul i32 %196, 5
  %198 = add i32 %197, 130
  %199 = lshr i32 %198, 8
  %200 = add i32 %195, %199
  store i32 %200, i32* %22, align 4
  br label %201

201:                                              ; preds = %189, %188
  br label %202

202:                                              ; preds = %201, %180
  %203 = load i32, i32* %22, align 4
  %204 = trunc i32 %203 to i8
  %205 = load i8*, i8** %18, align 8
  store i8 %204, i8* %205, align 1
  br label %206

206:                                              ; preds = %202
  %207 = load i32, i32* %14, align 4
  %208 = load i8*, i8** %18, align 8
  %209 = zext i32 %207 to i64
  %210 = getelementptr inbounds i8, i8* %208, i64 %209
  store i8* %210, i8** %18, align 8
  br label %165, !llvm.loop !106

211:                                              ; preds = %165
  br label %407

212:                                              ; preds = %143
  br label %213

213:                                              ; preds = %240, %212
  %214 = load i8*, i8** %18, align 8
  %215 = load i8*, i8** %19, align 8
  %216 = icmp ult i8* %214, %215
  br i1 %216, label %217, label %245

217:                                              ; preds = %213
  %218 = load i8*, i8** %17, align 8
  %219 = getelementptr inbounds i8, i8* %218, i32 1
  store i8* %219, i8** %17, align 8
  %220 = load i8, i8* %218, align 1
  store i8 %220, i8* %23, align 1
  %221 = load i8*, i8** %17, align 8
  %222 = getelementptr inbounds i8, i8* %221, i32 1
  store i8* %222, i8** %17, align 8
  %223 = load i8, i8* %221, align 1
  store i8 %223, i8* %24, align 1
  %224 = load i8, i8* %24, align 1
  %225 = zext i8 %224 to i32
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %217
  %228 = load i8*, i8** %18, align 8
  store i8 -2, i8* %228, align 1
  br label %239

229:                                              ; preds = %217
  %230 = load i8, i8* %23, align 1
  %231 = zext i8 %230 to i32
  %232 = icmp ne i32 %231, 254
  br i1 %232, label %233, label %236

233:                                              ; preds = %229
  %234 = load i8, i8* %23, align 1
  %235 = load i8*, i8** %18, align 8
  store i8 %234, i8* %235, align 1
  br label %238

236:                                              ; preds = %229
  %237 = load i8*, i8** %18, align 8
  store i8 -1, i8* %237, align 1
  br label %238

238:                                              ; preds = %236, %233
  br label %239

239:                                              ; preds = %238, %227
  br label %240

240:                                              ; preds = %239
  %241 = load i32, i32* %14, align 4
  %242 = load i8*, i8** %18, align 8
  %243 = zext i32 %241 to i64
  %244 = getelementptr inbounds i8, i8* %242, i64 %243
  store i8* %244, i8** %18, align 8
  br label %213, !llvm.loop !107

245:                                              ; preds = %213
  br label %407

246:                                              ; preds = %143
  br label %247

247:                                              ; preds = %281, %246
  %248 = load i8*, i8** %18, align 8
  %249 = load i8*, i8** %19, align 8
  %250 = icmp ult i8* %248, %249
  br i1 %250, label %251, label %286

251:                                              ; preds = %247
  %252 = load i8*, i8** %17, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 0
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = mul nsw i32 %255, 5
  %257 = add nsw i32 %256, 130
  %258 = ashr i32 %257, 8
  %259 = mul nsw i32 6, %258
  %260 = load i8*, i8** %17, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 1
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = mul nsw i32 %263, 5
  %265 = add nsw i32 %264, 130
  %266 = ashr i32 %265, 8
  %267 = add nsw i32 %259, %266
  %268 = mul nsw i32 6, %267
  %269 = load i8*, i8** %17, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = mul nsw i32 %272, 5
  %274 = add nsw i32 %273, 130
  %275 = ashr i32 %274, 8
  %276 = add nsw i32 %268, %275
  %277 = trunc i32 %276 to i8
  %278 = load i8*, i8** %18, align 8
  store i8 %277, i8* %278, align 1
  %279 = load i8*, i8** %17, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 3
  store i8* %280, i8** %17, align 8
  br label %281

281:                                              ; preds = %251
  %282 = load i32, i32* %14, align 4
  %283 = load i8*, i8** %18, align 8
  %284 = zext i32 %282 to i64
  %285 = getelementptr inbounds i8, i8* %283, i64 %284
  store i8* %285, i8** %18, align 8
  br label %247, !llvm.loop !108

286:                                              ; preds = %247
  br label %407

287:                                              ; preds = %143
  br label %288

288:                                              ; preds = %400, %287
  %289 = load i8*, i8** %18, align 8
  %290 = load i8*, i8** %19, align 8
  %291 = icmp ult i8* %289, %290
  br i1 %291, label %292, label %405

292:                                              ; preds = %288
  %293 = load i8*, i8** %17, align 8
  %294 = getelementptr inbounds i8, i8* %293, i64 3
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  store i32 %296, i32* %25, align 4
  %297 = load i32, i32* %25, align 4
  %298 = icmp uge i32 %297, 196
  br i1 %298, label %299, label %327

299:                                              ; preds = %292
  %300 = load i8*, i8** %17, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 0
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = mul nsw i32 %303, 5
  %305 = add nsw i32 %304, 130
  %306 = ashr i32 %305, 8
  %307 = mul nsw i32 6, %306
  %308 = load i8*, i8** %17, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 1
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  %312 = mul nsw i32 %311, 5
  %313 = add nsw i32 %312, 130
  %314 = ashr i32 %313, 8
  %315 = add nsw i32 %307, %314
  %316 = mul nsw i32 6, %315
  %317 = load i8*, i8** %17, align 8
  %318 = getelementptr inbounds i8, i8* %317, i64 2
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = mul nsw i32 %320, 5
  %322 = add nsw i32 %321, 130
  %323 = ashr i32 %322, 8
  %324 = add nsw i32 %316, %323
  %325 = trunc i32 %324 to i8
  %326 = load i8*, i8** %18, align 8
  store i8 %325, i8* %326, align 1
  br label %397

327:                                              ; preds = %292
  %328 = load i32, i32* %25, align 4
  %329 = icmp ult i32 %328, 64
  br i1 %329, label %330, label %332

330:                                              ; preds = %327
  %331 = load i8*, i8** %18, align 8
  store i8 -40, i8* %331, align 1
  br label %396

332:                                              ; preds = %327
  store i32 217, i32* %26, align 4
  %333 = load i8*, i8** %17, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 0
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = and i32 %336, 128
  %338 = icmp ne i32 %337, 0
  br i1 %338, label %339, label %342

339:                                              ; preds = %332
  %340 = load i32, i32* %26, align 4
  %341 = add i32 %340, 9
  store i32 %341, i32* %26, align 4
  br label %342

342:                                              ; preds = %339, %332
  %343 = load i8*, i8** %17, align 8
  %344 = getelementptr inbounds i8, i8* %343, i64 0
  %345 = load i8, i8* %344, align 1
  %346 = zext i8 %345 to i32
  %347 = and i32 %346, 64
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %349, label %352

349:                                              ; preds = %342
  %350 = load i32, i32* %26, align 4
  %351 = add i32 %350, 9
  store i32 %351, i32* %26, align 4
  br label %352

352:                                              ; preds = %349, %342
  %353 = load i8*, i8** %17, align 8
  %354 = getelementptr inbounds i8, i8* %353, i64 0
  %355 = load i8, i8* %354, align 1
  %356 = zext i8 %355 to i32
  %357 = and i32 %356, 128
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %362

359:                                              ; preds = %352
  %360 = load i32, i32* %26, align 4
  %361 = add i32 %360, 3
  store i32 %361, i32* %26, align 4
  br label %362

362:                                              ; preds = %359, %352
  %363 = load i8*, i8** %17, align 8
  %364 = getelementptr inbounds i8, i8* %363, i64 0
  %365 = load i8, i8* %364, align 1
  %366 = zext i8 %365 to i32
  %367 = and i32 %366, 64
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %369, label %372

369:                                              ; preds = %362
  %370 = load i32, i32* %26, align 4
  %371 = add i32 %370, 3
  store i32 %371, i32* %26, align 4
  br label %372

372:                                              ; preds = %369, %362
  %373 = load i8*, i8** %17, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 0
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i32
  %377 = and i32 %376, 128
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %372
  %380 = load i32, i32* %26, align 4
  %381 = add i32 %380, 1
  store i32 %381, i32* %26, align 4
  br label %382

382:                                              ; preds = %379, %372
  %383 = load i8*, i8** %17, align 8
  %384 = getelementptr inbounds i8, i8* %383, i64 0
  %385 = load i8, i8* %384, align 1
  %386 = zext i8 %385 to i32
  %387 = and i32 %386, 64
  %388 = icmp ne i32 %387, 0
  br i1 %388, label %389, label %392

389:                                              ; preds = %382
  %390 = load i32, i32* %26, align 4
  %391 = add i32 %390, 1
  store i32 %391, i32* %26, align 4
  br label %392

392:                                              ; preds = %389, %382
  %393 = load i32, i32* %26, align 4
  %394 = trunc i32 %393 to i8
  %395 = load i8*, i8** %18, align 8
  store i8 %394, i8* %395, align 1
  br label %396

396:                                              ; preds = %392, %330
  br label %397

397:                                              ; preds = %396, %299
  %398 = load i8*, i8** %17, align 8
  %399 = getelementptr inbounds i8, i8* %398, i64 4
  store i8* %399, i8** %17, align 8
  br label %400

400:                                              ; preds = %397
  %401 = load i32, i32* %14, align 4
  %402 = load i8*, i8** %18, align 8
  %403 = zext i32 %401 to i64
  %404 = getelementptr inbounds i8, i8* %402, i64 %403
  store i8* %404, i8** %18, align 8
  br label %288, !llvm.loop !109

405:                                              ; preds = %288
  br label %407

406:                                              ; preds = %143
  br label %407

407:                                              ; preds = %406, %405, %286, %245, %211
  br label %408

408:                                              ; preds = %407
  %409 = load i32, i32* %15, align 4
  %410 = load i32, i32* %16, align 4
  %411 = add i32 %410, %409
  store i32 %411, i32* %16, align 4
  br label %139, !llvm.loop !110

412:                                              ; preds = %139
  br label %413

413:                                              ; preds = %412, %105
  %414 = load i32, i32* %12, align 4
  %415 = add nsw i32 %414, 1
  store i32 %415, i32* %12, align 4
  br label %61, !llvm.loop !111

416:                                              ; preds = %61
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_create_colormap_entry(%struct.png_image_read_control* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = alloca %struct.png_image_read_control*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.png_image*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i16*, align 8
  %23 = alloca i8*, align 8
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %24 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  %25 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %24, i32 0, i32 0
  %26 = load %struct.png_image*, %struct.png_image** %25, align 8
  store %struct.png_image* %26, %struct.png_image** %15, align 8
  %27 = load %struct.png_image*, %struct.png_image** %15, align 8
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 4
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 2, i32 1
  store i32 %33, i32* %16, align 4
  %34 = load %struct.png_image*, %struct.png_image** %15, align 8
  %35 = getelementptr inbounds %struct.png_image, %struct.png_image* %34, i32 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %7
  %40 = load i32, i32* %10, align 4
  %41 = load i32, i32* %11, align 4
  %42 = icmp ne i32 %40, %41
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = load i32, i32* %11, align 4
  %45 = load i32, i32* %12, align 4
  %46 = icmp ne i32 %44, %45
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i1 [ true, %39 ], [ %46, %43 ]
  br label %49

49:                                               ; preds = %47, %7
  %50 = phi i1 [ false, %7 ], [ %48, %47 ]
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %17, align 4
  %52 = load i32, i32* %9, align 4
  %53 = icmp ugt i32 %52, 255
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = load %struct.png_image*, %struct.png_image** %15, align 8
  %56 = getelementptr inbounds %struct.png_image, %struct.png_image* %55, i32 0, i32 0
  %57 = load %struct.png_control*, %struct.png_control** %56, align 8
  %58 = getelementptr inbounds %struct.png_control, %struct.png_control* %57, i32 0, i32 0
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %58, align 8
  call void @png_error(%struct.png_struct_def* noundef %59, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48.186, i64 0, i64 0)) #13
  unreachable

60:                                               ; preds = %49
  %61 = load i32, i32* %14, align 4
  %62 = icmp eq i32 %61, 3
  br i1 %62, label %63, label %74

63:                                               ; preds = %60
  %64 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  %65 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %64, i32 0, i32 8
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  call void @set_file_encoding(%struct.png_image_read_control* noundef %69)
  br label %70

70:                                               ; preds = %68, %63
  %71 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  %72 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %71, i32 0, i32 8
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %14, align 4
  br label %74

74:                                               ; preds = %70, %60
  %75 = load i32, i32* %14, align 4
  %76 = icmp eq i32 %75, 3
  br i1 %76, label %77, label %178

77:                                               ; preds = %74
  %78 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  %79 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %78, i32 0, i32 9
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %18, align 4
  %81 = load i32, i32* %10, align 4
  %82 = mul i32 %81, 257
  %83 = load i32, i32* %18, align 4
  %84 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %82, i32 noundef %83)
  %85 = zext i16 %84 to i32
  store i32 %85, i32* %10, align 4
  %86 = load i32, i32* %11, align 4
  %87 = mul i32 %86, 257
  %88 = load i32, i32* %18, align 4
  %89 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %87, i32 noundef %88)
  %90 = zext i16 %89 to i32
  store i32 %90, i32* %11, align 4
  %91 = load i32, i32* %12, align 4
  %92 = mul i32 %91, 257
  %93 = load i32, i32* %18, align 4
  %94 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %92, i32 noundef %93)
  %95 = zext i16 %94 to i32
  store i32 %95, i32* %12, align 4
  %96 = load i32, i32* %17, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %77
  %99 = load i32, i32* %16, align 4
  %100 = icmp eq i32 %99, 2
  br i1 %100, label %101, label %104

101:                                              ; preds = %98, %77
  %102 = load i32, i32* %13, align 4
  %103 = mul i32 %102, 257
  store i32 %103, i32* %13, align 4
  store i32 2, i32* %14, align 4
  br label %177

104:                                              ; preds = %98
  %105 = load i32, i32* %10, align 4
  %106 = mul i32 %105, 255
  %107 = lshr i32 %106, 15
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %108
  %110 = load i16, i16* %109, align 2
  %111 = zext i16 %110 to i32
  %112 = load i32, i32* %10, align 4
  %113 = mul i32 %112, 255
  %114 = and i32 %113, 32767
  %115 = load i32, i32* %10, align 4
  %116 = mul i32 %115, 255
  %117 = lshr i32 %116, 15
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = mul i32 %114, %121
  %123 = lshr i32 %122, 12
  %124 = add i32 %111, %123
  %125 = lshr i32 %124, 8
  %126 = and i32 255, %125
  %127 = trunc i32 %126 to i8
  %128 = zext i8 %127 to i32
  store i32 %128, i32* %10, align 4
  %129 = load i32, i32* %11, align 4
  %130 = mul i32 %129, 255
  %131 = lshr i32 %130, 15
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  %136 = load i32, i32* %11, align 4
  %137 = mul i32 %136, 255
  %138 = and i32 %137, 32767
  %139 = load i32, i32* %11, align 4
  %140 = mul i32 %139, 255
  %141 = lshr i32 %140, 15
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = mul i32 %138, %145
  %147 = lshr i32 %146, 12
  %148 = add i32 %135, %147
  %149 = lshr i32 %148, 8
  %150 = and i32 255, %149
  %151 = trunc i32 %150 to i8
  %152 = zext i8 %151 to i32
  store i32 %152, i32* %11, align 4
  %153 = load i32, i32* %12, align 4
  %154 = mul i32 %153, 255
  %155 = lshr i32 %154, 15
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %156
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = load i32, i32* %12, align 4
  %161 = mul i32 %160, 255
  %162 = and i32 %161, 32767
  %163 = load i32, i32* %12, align 4
  %164 = mul i32 %163, 255
  %165 = lshr i32 %164, 15
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = mul i32 %162, %169
  %171 = lshr i32 %170, 12
  %172 = add i32 %159, %171
  %173 = lshr i32 %172, 8
  %174 = and i32 255, %173
  %175 = trunc i32 %174 to i8
  %176 = zext i8 %175 to i32
  store i32 %176, i32* %12, align 4
  store i32 1, i32* %14, align 4
  br label %177

177:                                              ; preds = %104, %101
  br label %219

178:                                              ; preds = %74
  %179 = load i32, i32* %14, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %190

181:                                              ; preds = %178
  %182 = load i32, i32* %10, align 4
  %183 = mul i32 %182, 257
  store i32 %183, i32* %10, align 4
  %184 = load i32, i32* %11, align 4
  %185 = mul i32 %184, 257
  store i32 %185, i32* %11, align 4
  %186 = load i32, i32* %12, align 4
  %187 = mul i32 %186, 257
  store i32 %187, i32* %12, align 4
  %188 = load i32, i32* %13, align 4
  %189 = mul i32 %188, 257
  store i32 %189, i32* %13, align 4
  store i32 2, i32* %14, align 4
  br label %218

190:                                              ; preds = %178
  %191 = load i32, i32* %14, align 4
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %217

193:                                              ; preds = %190
  %194 = load i32, i32* %17, align 4
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %193
  %197 = load i32, i32* %16, align 4
  %198 = icmp eq i32 %197, 2
  br i1 %198, label %199, label %217

199:                                              ; preds = %196, %193
  %200 = load i32, i32* %10, align 4
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %201
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  store i32 %204, i32* %10, align 4
  %205 = load i32, i32* %11, align 4
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = zext i16 %208 to i32
  store i32 %209, i32* %11, align 4
  %210 = load i32, i32* %12, align 4
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  store i32 %214, i32* %12, align 4
  %215 = load i32, i32* %13, align 4
  %216 = mul i32 %215, 257
  store i32 %216, i32* %13, align 4
  store i32 2, i32* %14, align 4
  br label %217

217:                                              ; preds = %199, %196, %190
  br label %218

218:                                              ; preds = %217, %181
  br label %219

219:                                              ; preds = %218, %177
  %220 = load i32, i32* %14, align 4
  %221 = icmp eq i32 %220, 2
  br i1 %221, label %222, label %361

222:                                              ; preds = %219
  %223 = load i32, i32* %17, align 4
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %279

225:                                              ; preds = %222
  %226 = load i32, i32* %10, align 4
  %227 = mul i32 6968, %226
  %228 = load i32, i32* %11, align 4
  %229 = mul i32 23434, %228
  %230 = add i32 %227, %229
  %231 = load i32, i32* %12, align 4
  %232 = mul i32 2366, %231
  %233 = add i32 %230, %232
  store i32 %233, i32* %19, align 4
  %234 = load i32, i32* %16, align 4
  %235 = icmp eq i32 %234, 2
  br i1 %235, label %236, label %240

236:                                              ; preds = %225
  %237 = load i32, i32* %19, align 4
  %238 = add i32 %237, 16384
  %239 = lshr i32 %238, 15
  store i32 %239, i32* %19, align 4
  br label %277

240:                                              ; preds = %225
  %241 = load i32, i32* %19, align 4
  %242 = add i32 %241, 128
  %243 = lshr i32 %242, 8
  store i32 %243, i32* %19, align 4
  %244 = load i32, i32* %19, align 4
  %245 = mul i32 %244, 255
  store i32 %245, i32* %19, align 4
  %246 = load i32, i32* %19, align 4
  %247 = add i32 %246, 64
  %248 = lshr i32 %247, 7
  %249 = lshr i32 %248, 15
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %250
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i32
  %254 = load i32, i32* %19, align 4
  %255 = add i32 %254, 64
  %256 = lshr i32 %255, 7
  %257 = and i32 %256, 32767
  %258 = load i32, i32* %19, align 4
  %259 = add i32 %258, 64
  %260 = lshr i32 %259, 7
  %261 = lshr i32 %260, 15
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = mul i32 %257, %265
  %267 = lshr i32 %266, 12
  %268 = add i32 %253, %267
  %269 = lshr i32 %268, 8
  %270 = and i32 255, %269
  %271 = trunc i32 %270 to i8
  %272 = zext i8 %271 to i32
  store i32 %272, i32* %19, align 4
  %273 = load i32, i32* %13, align 4
  %274 = mul i32 %273, 255
  %275 = add i32 %274, 32895
  %276 = lshr i32 %275, 16
  store i32 %276, i32* %13, align 4
  store i32 1, i32* %14, align 4
  br label %277

277:                                              ; preds = %240, %236
  %278 = load i32, i32* %19, align 4
  store i32 %278, i32* %11, align 4
  store i32 %278, i32* %10, align 4
  store i32 %278, i32* %12, align 4
  br label %360

279:                                              ; preds = %222
  %280 = load i32, i32* %16, align 4
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %282, label %359

282:                                              ; preds = %279
  %283 = load i32, i32* %10, align 4
  %284 = mul i32 %283, 255
  %285 = lshr i32 %284, 15
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = load i32, i32* %10, align 4
  %291 = mul i32 %290, 255
  %292 = and i32 %291, 32767
  %293 = load i32, i32* %10, align 4
  %294 = mul i32 %293, 255
  %295 = lshr i32 %294, 15
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = mul i32 %292, %299
  %301 = lshr i32 %300, 12
  %302 = add i32 %289, %301
  %303 = lshr i32 %302, 8
  %304 = and i32 255, %303
  %305 = trunc i32 %304 to i8
  %306 = zext i8 %305 to i32
  store i32 %306, i32* %10, align 4
  %307 = load i32, i32* %11, align 4
  %308 = mul i32 %307, 255
  %309 = lshr i32 %308, 15
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %310
  %312 = load i16, i16* %311, align 2
  %313 = zext i16 %312 to i32
  %314 = load i32, i32* %11, align 4
  %315 = mul i32 %314, 255
  %316 = and i32 %315, 32767
  %317 = load i32, i32* %11, align 4
  %318 = mul i32 %317, 255
  %319 = lshr i32 %318, 15
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %320
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i32
  %324 = mul i32 %316, %323
  %325 = lshr i32 %324, 12
  %326 = add i32 %313, %325
  %327 = lshr i32 %326, 8
  %328 = and i32 255, %327
  %329 = trunc i32 %328 to i8
  %330 = zext i8 %329 to i32
  store i32 %330, i32* %11, align 4
  %331 = load i32, i32* %12, align 4
  %332 = mul i32 %331, 255
  %333 = lshr i32 %332, 15
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %334
  %336 = load i16, i16* %335, align 2
  %337 = zext i16 %336 to i32
  %338 = load i32, i32* %12, align 4
  %339 = mul i32 %338, 255
  %340 = and i32 %339, 32767
  %341 = load i32, i32* %12, align 4
  %342 = mul i32 %341, 255
  %343 = lshr i32 %342, 15
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = mul i32 %340, %347
  %349 = lshr i32 %348, 12
  %350 = add i32 %337, %349
  %351 = lshr i32 %350, 8
  %352 = and i32 255, %351
  %353 = trunc i32 %352 to i8
  %354 = zext i8 %353 to i32
  store i32 %354, i32* %12, align 4
  %355 = load i32, i32* %13, align 4
  %356 = mul i32 %355, 255
  %357 = add i32 %356, 32895
  %358 = lshr i32 %357, 16
  store i32 %358, i32* %13, align 4
  store i32 1, i32* %14, align 4
  br label %359

359:                                              ; preds = %282, %279
  br label %360

360:                                              ; preds = %359, %277
  br label %361

361:                                              ; preds = %360, %219
  %362 = load i32, i32* %14, align 4
  %363 = load i32, i32* %16, align 4
  %364 = icmp ne i32 %362, %363
  br i1 %364, label %365, label %371

365:                                              ; preds = %361
  %366 = load %struct.png_image*, %struct.png_image** %15, align 8
  %367 = getelementptr inbounds %struct.png_image, %struct.png_image* %366, i32 0, i32 0
  %368 = load %struct.png_control*, %struct.png_control** %367, align 8
  %369 = getelementptr inbounds %struct.png_control, %struct.png_control* %368, i32 0, i32 0
  %370 = load %struct.png_struct_def*, %struct.png_struct_def** %369, align 8
  call void @png_error(%struct.png_struct_def* noundef %370, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.187, i64 0, i64 0)) #13
  unreachable

371:                                              ; preds = %361
  %372 = load %struct.png_image*, %struct.png_image** %15, align 8
  %373 = getelementptr inbounds %struct.png_image, %struct.png_image* %372, i32 0, i32 4
  %374 = load i32, i32* %373, align 4
  %375 = and i32 %374, 32
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %377, label %383

377:                                              ; preds = %371
  %378 = load %struct.png_image*, %struct.png_image** %15, align 8
  %379 = getelementptr inbounds %struct.png_image, %struct.png_image* %378, i32 0, i32 4
  %380 = load i32, i32* %379, align 4
  %381 = and i32 %380, 1
  %382 = icmp ne i32 %381, 0
  br label %383

383:                                              ; preds = %377, %371
  %384 = phi i1 [ false, %371 ], [ %382, %377 ]
  %385 = zext i1 %384 to i32
  store i32 %385, i32* %20, align 4
  %386 = load %struct.png_image*, %struct.png_image** %15, align 8
  %387 = getelementptr inbounds %struct.png_image, %struct.png_image* %386, i32 0, i32 4
  %388 = load i32, i32* %387, align 4
  %389 = and i32 %388, 16
  %390 = icmp ne i32 %389, 0
  %391 = zext i1 %390 to i64
  %392 = select i1 %390, i32 2, i32 0
  store i32 %392, i32* %21, align 4
  %393 = load i32, i32* %16, align 4
  %394 = icmp eq i32 %393, 2
  br i1 %394, label %395, label %505

395:                                              ; preds = %383
  %396 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  %397 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %396, i32 0, i32 3
  %398 = load i8*, i8** %397, align 8
  %399 = bitcast i8* %398 to i16*
  store i16* %399, i16** %22, align 8
  %400 = load i32, i32* %9, align 4
  %401 = load %struct.png_image*, %struct.png_image** %15, align 8
  %402 = getelementptr inbounds %struct.png_image, %struct.png_image* %401, i32 0, i32 4
  %403 = load i32, i32* %402, align 4
  %404 = and i32 %403, 3
  %405 = add i32 %404, 1
  %406 = mul i32 %400, %405
  %407 = load i16*, i16** %22, align 8
  %408 = zext i32 %406 to i64
  %409 = getelementptr inbounds i16, i16* %407, i64 %408
  store i16* %409, i16** %22, align 8
  %410 = load %struct.png_image*, %struct.png_image** %15, align 8
  %411 = getelementptr inbounds %struct.png_image, %struct.png_image* %410, i32 0, i32 4
  %412 = load i32, i32* %411, align 4
  %413 = and i32 %412, 3
  %414 = add i32 %413, 1
  switch i32 %414, label %503 [
    i32 4, label %415
    i32 3, label %425
    i32 2, label %474
    i32 1, label %482
  ]

415:                                              ; preds = %395
  %416 = load i32, i32* %13, align 4
  %417 = trunc i32 %416 to i16
  %418 = load i16*, i16** %22, align 8
  %419 = load i32, i32* %20, align 4
  %420 = icmp ne i32 %419, 0
  %421 = zext i1 %420 to i64
  %422 = select i1 %420, i32 0, i32 3
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds i16, i16* %418, i64 %423
  store i16 %417, i16* %424, align 2
  br label %425

425:                                              ; preds = %395, %415
  %426 = load i32, i32* %13, align 4
  %427 = icmp ult i32 %426, 65535
  br i1 %427, label %428, label %449

428:                                              ; preds = %425
  %429 = load i32, i32* %13, align 4
  %430 = icmp ugt i32 %429, 0
  br i1 %430, label %431, label %447

431:                                              ; preds = %428
  %432 = load i32, i32* %12, align 4
  %433 = load i32, i32* %13, align 4
  %434 = mul i32 %432, %433
  %435 = add i32 %434, 32767
  %436 = udiv i32 %435, 65535
  store i32 %436, i32* %12, align 4
  %437 = load i32, i32* %11, align 4
  %438 = load i32, i32* %13, align 4
  %439 = mul i32 %437, %438
  %440 = add i32 %439, 32767
  %441 = udiv i32 %440, 65535
  store i32 %441, i32* %11, align 4
  %442 = load i32, i32* %10, align 4
  %443 = load i32, i32* %13, align 4
  %444 = mul i32 %442, %443
  %445 = add i32 %444, 32767
  %446 = udiv i32 %445, 65535
  store i32 %446, i32* %10, align 4
  br label %448

447:                                              ; preds = %428
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %10, align 4
  br label %448

448:                                              ; preds = %447, %431
  br label %449

449:                                              ; preds = %448, %425
  %450 = load i32, i32* %12, align 4
  %451 = trunc i32 %450 to i16
  %452 = load i16*, i16** %22, align 8
  %453 = load i32, i32* %20, align 4
  %454 = load i32, i32* %21, align 4
  %455 = xor i32 2, %454
  %456 = add nsw i32 %453, %455
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds i16, i16* %452, i64 %457
  store i16 %451, i16* %458, align 2
  %459 = load i32, i32* %11, align 4
  %460 = trunc i32 %459 to i16
  %461 = load i16*, i16** %22, align 8
  %462 = load i32, i32* %20, align 4
  %463 = add nsw i32 %462, 1
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds i16, i16* %461, i64 %464
  store i16 %460, i16* %465, align 2
  %466 = load i32, i32* %10, align 4
  %467 = trunc i32 %466 to i16
  %468 = load i16*, i16** %22, align 8
  %469 = load i32, i32* %20, align 4
  %470 = load i32, i32* %21, align 4
  %471 = add nsw i32 %469, %470
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i16, i16* %468, i64 %472
  store i16 %467, i16* %473, align 2
  br label %504

474:                                              ; preds = %395
  %475 = load i32, i32* %13, align 4
  %476 = trunc i32 %475 to i16
  %477 = load i16*, i16** %22, align 8
  %478 = load i32, i32* %20, align 4
  %479 = xor i32 1, %478
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i16, i16* %477, i64 %480
  store i16 %476, i16* %481, align 2
  br label %482

482:                                              ; preds = %395, %474
  %483 = load i32, i32* %13, align 4
  %484 = icmp ult i32 %483, 65535
  br i1 %484, label %485, label %496

485:                                              ; preds = %482
  %486 = load i32, i32* %13, align 4
  %487 = icmp ugt i32 %486, 0
  br i1 %487, label %488, label %494

488:                                              ; preds = %485
  %489 = load i32, i32* %11, align 4
  %490 = load i32, i32* %13, align 4
  %491 = mul i32 %489, %490
  %492 = add i32 %491, 32767
  %493 = udiv i32 %492, 65535
  store i32 %493, i32* %11, align 4
  br label %495

494:                                              ; preds = %485
  store i32 0, i32* %11, align 4
  br label %495

495:                                              ; preds = %494, %488
  br label %496

496:                                              ; preds = %495, %482
  %497 = load i32, i32* %11, align 4
  %498 = trunc i32 %497 to i16
  %499 = load i16*, i16** %22, align 8
  %500 = load i32, i32* %20, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i16, i16* %499, i64 %501
  store i16 %498, i16* %502, align 2
  br label %504

503:                                              ; preds = %395
  br label %504

504:                                              ; preds = %503, %496, %449
  br label %576

505:                                              ; preds = %383
  %506 = load %struct.png_image_read_control*, %struct.png_image_read_control** %8, align 8
  %507 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %506, i32 0, i32 3
  %508 = load i8*, i8** %507, align 8
  store i8* %508, i8** %23, align 8
  %509 = load i32, i32* %9, align 4
  %510 = load %struct.png_image*, %struct.png_image** %15, align 8
  %511 = getelementptr inbounds %struct.png_image, %struct.png_image* %510, i32 0, i32 4
  %512 = load i32, i32* %511, align 4
  %513 = and i32 %512, 3
  %514 = add i32 %513, 1
  %515 = mul i32 %509, %514
  %516 = load i8*, i8** %23, align 8
  %517 = zext i32 %515 to i64
  %518 = getelementptr inbounds i8, i8* %516, i64 %517
  store i8* %518, i8** %23, align 8
  %519 = load %struct.png_image*, %struct.png_image** %15, align 8
  %520 = getelementptr inbounds %struct.png_image, %struct.png_image* %519, i32 0, i32 4
  %521 = load i32, i32* %520, align 4
  %522 = and i32 %521, 3
  %523 = add i32 %522, 1
  switch i32 %523, label %574 [
    i32 4, label %524
    i32 3, label %534
    i32 2, label %559
    i32 1, label %567
  ]

524:                                              ; preds = %505
  %525 = load i32, i32* %13, align 4
  %526 = trunc i32 %525 to i8
  %527 = load i8*, i8** %23, align 8
  %528 = load i32, i32* %20, align 4
  %529 = icmp ne i32 %528, 0
  %530 = zext i1 %529 to i64
  %531 = select i1 %529, i32 0, i32 3
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %527, i64 %532
  store i8 %526, i8* %533, align 1
  br label %534

534:                                              ; preds = %505, %524
  %535 = load i32, i32* %12, align 4
  %536 = trunc i32 %535 to i8
  %537 = load i8*, i8** %23, align 8
  %538 = load i32, i32* %20, align 4
  %539 = load i32, i32* %21, align 4
  %540 = xor i32 2, %539
  %541 = add nsw i32 %538, %540
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, i8* %537, i64 %542
  store i8 %536, i8* %543, align 1
  %544 = load i32, i32* %11, align 4
  %545 = trunc i32 %544 to i8
  %546 = load i8*, i8** %23, align 8
  %547 = load i32, i32* %20, align 4
  %548 = add nsw i32 %547, 1
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds i8, i8* %546, i64 %549
  store i8 %545, i8* %550, align 1
  %551 = load i32, i32* %10, align 4
  %552 = trunc i32 %551 to i8
  %553 = load i8*, i8** %23, align 8
  %554 = load i32, i32* %20, align 4
  %555 = load i32, i32* %21, align 4
  %556 = add nsw i32 %554, %555
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds i8, i8* %553, i64 %557
  store i8 %552, i8* %558, align 1
  br label %575

559:                                              ; preds = %505
  %560 = load i32, i32* %13, align 4
  %561 = trunc i32 %560 to i8
  %562 = load i8*, i8** %23, align 8
  %563 = load i32, i32* %20, align 4
  %564 = xor i32 1, %563
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds i8, i8* %562, i64 %565
  store i8 %561, i8* %566, align 1
  br label %567

567:                                              ; preds = %505, %559
  %568 = load i32, i32* %11, align 4
  %569 = trunc i32 %568 to i8
  %570 = load i8*, i8** %23, align 8
  %571 = load i32, i32* %20, align 4
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds i8, i8* %570, i64 %572
  store i8 %569, i8* %573, align 1
  br label %575

574:                                              ; preds = %505
  br label %575

575:                                              ; preds = %574, %567, %534
  br label %576

576:                                              ; preds = %575, %504
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_gray_colormap(%struct.png_image_read_control* noundef %0) #0 {
  %2 = alloca %struct.png_image_read_control*, align 8
  %3 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %2, align 8
  store i32 0, i32* %3, align 4
  br label %4

4:                                                ; preds = %13, %1
  %5 = load i32, i32* %3, align 4
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %3, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %8, i32 noundef %9, i32 noundef %10, i32 noundef %11, i32 noundef %12, i32 noundef 255, i32 noundef 1)
  br label %13

13:                                               ; preds = %7
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  br label %4, !llvm.loop !112

16:                                               ; preds = %4
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ga_colormap(%struct.png_image_read_control* noundef %0) #0 {
  %2 = alloca %struct.png_image_read_control*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %2, align 8
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %10, %1
  %8 = load i32, i32* %3, align 4
  %9 = icmp ult i32 %8, 231
  br i1 %9, label %10, label %21

10:                                               ; preds = %7
  %11 = load i32, i32* %3, align 4
  %12 = mul i32 %11, 256
  %13 = add i32 %12, 115
  %14 = udiv i32 %13, 231
  store i32 %14, i32* %5, align 4
  %15 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  %18 = load i32, i32* %5, align 4
  %19 = load i32, i32* %5, align 4
  %20 = load i32, i32* %5, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %15, i32 noundef %16, i32 noundef %18, i32 noundef %19, i32 noundef %20, i32 noundef 255, i32 noundef 1)
  br label %7, !llvm.loop !113

21:                                               ; preds = %7
  %22 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %23 = load i32, i32* %3, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %3, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %22, i32 noundef %23, i32 noundef 255, i32 noundef 255, i32 noundef 255, i32 noundef 0, i32 noundef 1)
  store i32 1, i32* %4, align 4
  br label %25

25:                                               ; preds = %48, %21
  %26 = load i32, i32* %4, align 4
  %27 = icmp ult i32 %26, 5
  br i1 %27, label %28, label %51

28:                                               ; preds = %25
  store i32 0, i32* %6, align 4
  br label %29

29:                                               ; preds = %44, %28
  %30 = load i32, i32* %6, align 4
  %31 = icmp ult i32 %30, 6
  br i1 %31, label %32, label %47

32:                                               ; preds = %29
  %33 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %34 = load i32, i32* %3, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %3, align 4
  %36 = load i32, i32* %6, align 4
  %37 = mul i32 %36, 51
  %38 = load i32, i32* %6, align 4
  %39 = mul i32 %38, 51
  %40 = load i32, i32* %6, align 4
  %41 = mul i32 %40, 51
  %42 = load i32, i32* %4, align 4
  %43 = mul i32 %42, 51
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %33, i32 noundef %34, i32 noundef %37, i32 noundef %39, i32 noundef %41, i32 noundef %43, i32 noundef 1)
  br label %44

44:                                               ; preds = %32
  %45 = load i32, i32* %6, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %6, align 4
  br label %29, !llvm.loop !114

47:                                               ; preds = %29
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %4, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %4, align 4
  br label %25, !llvm.loop !115

51:                                               ; preds = %25
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_gamma_not_sRGB(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 100000
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  store i32 0, i32* %2, align 4
  br label %17

10:                                               ; preds = %6
  %11 = load i32, i32* %3, align 4
  %12 = mul nsw i32 %11, 11
  %13 = add nsw i32 %12, 2
  %14 = sdiv i32 %13, 5
  %15 = call i32 @png_gamma_significant(i32 noundef %14)
  store i32 %15, i32* %2, align 4
  br label %17

16:                                               ; preds = %1
  store i32 1, i32* %2, align 4
  br label %17

17:                                               ; preds = %16, %10, %9
  %18 = load i32, i32* %2, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_gray_file_colormap(%struct.png_image_read_control* noundef %0) #0 {
  %2 = alloca %struct.png_image_read_control*, align 8
  %3 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %2, align 8
  store i32 0, i32* %3, align 4
  br label %4

4:                                                ; preds = %13, %1
  %5 = load i32, i32* %3, align 4
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %7, label %16

7:                                                ; preds = %4
  %8 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %3, align 4
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %8, i32 noundef %9, i32 noundef %10, i32 noundef %11, i32 noundef %12, i32 noundef 255, i32 noundef 3)
  br label %13

13:                                               ; preds = %7
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  br label %4, !llvm.loop !116

16:                                               ; preds = %4
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_rgb_colormap(%struct.png_image_read_control* noundef %0) #0 {
  %2 = alloca %struct.png_image_read_control*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %2, align 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %36, %1
  %8 = load i32, i32* %4, align 4
  %9 = icmp ult i32 %8, 6
  br i1 %9, label %10, label %39

10:                                               ; preds = %7
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %32, %10
  %12 = load i32, i32* %5, align 4
  %13 = icmp ult i32 %12, 6
  br i1 %13, label %14, label %35

14:                                               ; preds = %11
  store i32 0, i32* %6, align 4
  br label %15

15:                                               ; preds = %28, %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp ult i32 %16, 6
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  %22 = load i32, i32* %4, align 4
  %23 = mul i32 %22, 51
  %24 = load i32, i32* %5, align 4
  %25 = mul i32 %24, 51
  %26 = load i32, i32* %6, align 4
  %27 = mul i32 %26, 51
  call void @png_create_colormap_entry(%struct.png_image_read_control* noundef %19, i32 noundef %20, i32 noundef %23, i32 noundef %25, i32 noundef %27, i32 noundef 255, i32 noundef 1)
  br label %28

28:                                               ; preds = %18
  %29 = load i32, i32* %6, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %6, align 4
  br label %15, !llvm.loop !117

31:                                               ; preds = %15
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %5, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %5, align 4
  br label %11, !llvm.loop !118

35:                                               ; preds = %11
  br label %36

36:                                               ; preds = %35
  %37 = load i32, i32* %4, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %4, align 4
  br label %7, !llvm.loop !119

39:                                               ; preds = %7
  %40 = load i32, i32* %3, align 4
  ret i32 %40
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_colormap_compose(%struct.png_image_read_control* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.png_image_read_control*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %15 = load %struct.png_image_read_control*, %struct.png_image_read_control** %7, align 8
  %16 = load i32, i32* %8, align 4
  %17 = load i32, i32* %9, align 4
  %18 = call i32 @decode_gamma(%struct.png_image_read_control* noundef %15, i32 noundef %16, i32 noundef %17)
  store i32 %18, i32* %13, align 4
  %19 = load %struct.png_image_read_control*, %struct.png_image_read_control** %7, align 8
  %20 = load i32, i32* %11, align 4
  %21 = load i32, i32* %12, align 4
  %22 = call i32 @decode_gamma(%struct.png_image_read_control* noundef %19, i32 noundef %20, i32 noundef %21)
  store i32 %22, i32* %14, align 4
  %23 = load i32, i32* %13, align 4
  %24 = load i32, i32* %10, align 4
  %25 = mul i32 %23, %24
  %26 = load i32, i32* %14, align 4
  %27 = load i32, i32* %10, align 4
  %28 = sub i32 255, %27
  %29 = mul i32 %26, %28
  %30 = add i32 %25, %29
  store i32 %30, i32* %13, align 4
  %31 = load i32, i32* %12, align 4
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %43

33:                                               ; preds = %6
  %34 = load i32, i32* %13, align 4
  %35 = mul i32 %34, 257
  store i32 %35, i32* %13, align 4
  %36 = load i32, i32* %13, align 4
  %37 = lshr i32 %36, 16
  %38 = load i32, i32* %13, align 4
  %39 = add i32 %38, %37
  store i32 %39, i32* %13, align 4
  %40 = load i32, i32* %13, align 4
  %41 = add i32 %40, 32768
  %42 = lshr i32 %41, 16
  store i32 %42, i32* %13, align 4
  br label %65

43:                                               ; preds = %6
  %44 = load i32, i32* %13, align 4
  %45 = lshr i32 %44, 15
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = load i32, i32* %13, align 4
  %51 = and i32 %50, 32767
  %52 = load i32, i32* %13, align 4
  %53 = lshr i32 %52, 15
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = mul i32 %51, %57
  %59 = lshr i32 %58, 12
  %60 = add i32 %49, %59
  %61 = lshr i32 %60, 8
  %62 = and i32 255, %61
  %63 = trunc i32 %62 to i8
  %64 = zext i8 %63 to i32
  store i32 %64, i32* %13, align 4
  br label %65

65:                                               ; preds = %43, %33
  %66 = load i32, i32* %13, align 4
  ret i32 %66
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_gamma(%struct.png_image_read_control* noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_image_read_control*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %11 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %10, i32 0, i32 8
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %9, %3
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  call void @set_file_encoding(%struct.png_image_read_control* noundef %17)
  %18 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %19 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %18, i32 0, i32 8
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %6, align 4
  br label %21

21:                                               ; preds = %16, %13
  %22 = load i32, i32* %6, align 4
  switch i32 %22, label %41 [
    i32 3, label %23
    i32 1, label %31
    i32 2, label %37
    i32 4, label %38
  ]

23:                                               ; preds = %21
  %24 = load i32, i32* %5, align 4
  %25 = mul i32 %24, 257
  %26 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %27 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %26, i32 0, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = call zeroext i16 @png_gamma_16bit_correct(i32 noundef %25, i32 noundef %28)
  %30 = zext i16 %29 to i32
  store i32 %30, i32* %5, align 4
  br label %49

31:                                               ; preds = %21
  %32 = load i32, i32* %5, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [256 x i16], [256 x i16]* @png_sRGB_table, i64 0, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  store i32 %36, i32* %5, align 4
  br label %49

37:                                               ; preds = %21
  br label %49

38:                                               ; preds = %21
  %39 = load i32, i32* %5, align 4
  %40 = mul i32 %39, 257
  store i32 %40, i32* %5, align 4
  br label %49

41:                                               ; preds = %21
  %42 = load %struct.png_image_read_control*, %struct.png_image_read_control** %4, align 8
  %43 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %42, i32 0, i32 0
  %44 = load %struct.png_image*, %struct.png_image** %43, align 8
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %44, i32 0, i32 0
  %46 = load %struct.png_control*, %struct.png_control** %45, align 8
  %47 = getelementptr inbounds %struct.png_control, %struct.png_control* %46, i32 0, i32 0
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %47, align 8
  call void @png_error(%struct.png_struct_def* noundef %48, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.50.185, i64 0, i64 0)) #13
  unreachable

49:                                               ; preds = %38, %37, %31, %23
  %50 = load i32, i32* %5, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_file_encoding(%struct.png_image_read_control* noundef %0) #0 {
  %2 = alloca %struct.png_image_read_control*, align 8
  %3 = alloca i32, align 4
  store %struct.png_image_read_control* %0, %struct.png_image_read_control** %2, align 8
  %4 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %5 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %4, i32 0, i32 0
  %6 = load %struct.png_image*, %struct.png_image** %5, align 8
  %7 = getelementptr inbounds %struct.png_image, %struct.png_image* %6, i32 0, i32 0
  %8 = load %struct.png_control*, %struct.png_control** %7, align 8
  %9 = getelementptr inbounds %struct.png_control, %struct.png_control* %8, i32 0, i32 0
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 145
  %12 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %3, align 4
  %14 = load i32, i32* %3, align 4
  %15 = call i32 @png_gamma_significant(i32 noundef %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %1
  %18 = load i32, i32* %3, align 4
  %19 = call i32 @png_gamma_not_sRGB(i32 noundef %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %23 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %22, i32 0, i32 8
  store i32 3, i32* %23, align 8
  %24 = load i32, i32* %3, align 4
  %25 = call i32 @png_reciprocal(i32 noundef %24)
  %26 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %27 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %26, i32 0, i32 9
  store i32 %25, i32* %27, align 4
  br label %31

28:                                               ; preds = %17
  %29 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %30 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %29, i32 0, i32 8
  store i32 1, i32* %30, align 8
  br label %31

31:                                               ; preds = %28, %21
  br label %35

32:                                               ; preds = %1
  %33 = load %struct.png_image_read_control*, %struct.png_image_read_control** %2, align 8
  %34 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %33, i32 0, i32 8
  store i32 4, i32* %34, align 8
  br label %35

35:                                               ; preds = %32, %31
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_data(%struct.png_struct_def.125* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.125*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.png_struct_def.125* %0, %struct.png_struct_def.125** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %7, i32 0, i32 8
  %9 = bitcast {}** %8 to void (%struct.png_struct_def.125*, i8*, i64)**
  %10 = load void (%struct.png_struct_def.125*, i8*, i64)*, void (%struct.png_struct_def.125*, i8*, i64)** %9, align 8
  %11 = icmp ne void (%struct.png_struct_def.125*, i8*, i64)* %10, null
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %13, i32 0, i32 8
  %15 = bitcast {}** %14 to void (%struct.png_struct_def.125*, i8*, i64)**
  %16 = load void (%struct.png_struct_def.125*, i8*, i64)*, void (%struct.png_struct_def.125*, i8*, i64)** %15, align 8
  %17 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i64, i64* %6, align 8
  call void %16(%struct.png_struct_def.125* noundef %17, i8* noundef %18, i64 noundef %19)
  br label %22

20:                                               ; preds = %3
  %21 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.125*, i8*)*)(%struct.png_struct_def.125* noundef %21, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.188, i64 0, i64 0)) #13
  unreachable

22:                                               ; preds = %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_default_read_data(%struct.png_struct_def.125* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.125*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.png_struct_def.125* %0, %struct.png_struct_def.125** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %9 = icmp eq %struct.png_struct_def.125* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  br label %24

11:                                               ; preds = %3
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %14, i32 0, i32 9
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %struct._IO_FILE*
  %18 = call i64 @fread(i8* noundef %12, i64 noundef 1, i64 noundef %13, %struct._IO_FILE* noundef %17)
  store i64 %18, i64* %7, align 8
  %19 = load i64, i64* %7, align 8
  %20 = load i64, i64* %6, align 8
  %21 = icmp ne i64 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.125*, i8*)*)(%struct.png_struct_def.125* noundef %23, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.189, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %10, %11
  ret void
}

declare i64 @fread(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_read_fn(%struct.png_struct_def.125* noalias noundef %0, i8* noundef %1, void (%struct.png_struct_def.125*, i8*, i64)* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.125*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca void (%struct.png_struct_def.125*, i8*, i64)*, align 8
  store %struct.png_struct_def.125* %0, %struct.png_struct_def.125** %4, align 8
  store i8* %1, i8** %5, align 8
  store void (%struct.png_struct_def.125*, i8*, i64)* %2, void (%struct.png_struct_def.125*, i8*, i64)** %6, align 8
  %7 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %8 = icmp eq %struct.png_struct_def.125* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %39

10:                                               ; preds = %3
  %11 = load i8*, i8** %5, align 8
  %12 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %12, i32 0, i32 9
  store i8* %11, i8** %13, align 8
  %14 = load void (%struct.png_struct_def.125*, i8*, i64)*, void (%struct.png_struct_def.125*, i8*, i64)** %6, align 8
  %15 = icmp ne void (%struct.png_struct_def.125*, i8*, i64)* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = load void (%struct.png_struct_def.125*, i8*, i64)*, void (%struct.png_struct_def.125*, i8*, i64)** %6, align 8
  %18 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %18, i32 0, i32 8
  %20 = bitcast {}** %19 to void (%struct.png_struct_def.125*, i8*, i64)**
  store void (%struct.png_struct_def.125*, i8*, i64)* %17, void (%struct.png_struct_def.125*, i8*, i64)** %20, align 8
  br label %25

21:                                               ; preds = %10
  %22 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %22, i32 0, i32 8
  %24 = bitcast {}** %23 to void (%struct.png_struct_def.125*, i8*, i64)**
  store void (%struct.png_struct_def.125*, i8*, i64)* @png_default_read_data, void (%struct.png_struct_def.125*, i8*, i64)** %24, align 8
  br label %25

25:                                               ; preds = %21, %16
  %26 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %27 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %26, i32 0, i32 7
  %28 = bitcast {}** %27 to void (%struct.png_struct_def.125*, i8*, i64)**
  %29 = load void (%struct.png_struct_def.125*, i8*, i64)*, void (%struct.png_struct_def.125*, i8*, i64)** %28, align 8
  %30 = icmp ne void (%struct.png_struct_def.125*, i8*, i64)* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %32, i32 0, i32 7
  %34 = bitcast {}** %33 to void (%struct.png_struct_def.125*, i8*, i64)**
  store void (%struct.png_struct_def.125*, i8*, i64)* null, void (%struct.png_struct_def.125*, i8*, i64)** %34, align 8
  %35 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.125*, i8*)*)(%struct.png_struct_def.125* noundef %35, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.2.192, i64 0, i64 0))
  br label %36

36:                                               ; preds = %31, %25
  %37 = load %struct.png_struct_def.125*, %struct.png_struct_def.125** %4, align 8
  %38 = getelementptr inbounds %struct.png_struct_def.125, %struct.png_struct_def.125* %37, i32 0, i32 76
  store void (%struct.png_struct_def.125*)* null, void (%struct.png_struct_def.125*)** %38, align 8
  br label %39

39:                                               ; preds = %36, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_crc_action(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %75

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4
  switch i32 %11, label %34 [
    i32 5, label %12
    i32 3, label %13
    i32 4, label %22
    i32 2, label %31
    i32 1, label %33
    i32 0, label %33
  ]

12:                                               ; preds = %10
  br label %39

13:                                               ; preds = %10
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, -3073
  store i32 %17, i32* %15, align 8
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 16
  %20 = load i32, i32* %19, align 8
  %21 = or i32 %20, 1024
  store i32 %21, i32* %19, align 8
  br label %39

22:                                               ; preds = %10
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 16
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, -3073
  store i32 %26, i32* %24, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 16
  %29 = load i32, i32* %28, align 8
  %30 = or i32 %29, 3072
  store i32 %30, i32* %28, align 8
  br label %39

31:                                               ; preds = %10
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %32, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.193, i64 0, i64 0))
  br label %33

33:                                               ; preds = %10, %10, %31
  br label %34

34:                                               ; preds = %10, %33
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 16
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, -3073
  store i32 %38, i32* %36, align 8
  br label %39

39:                                               ; preds = %34, %22, %13, %12
  %40 = load i32, i32* %6, align 4
  switch i32 %40, label %70 [
    i32 5, label %41
    i32 3, label %42
    i32 4, label %51
    i32 1, label %60
    i32 2, label %69
    i32 0, label %69
  ]

41:                                               ; preds = %39
  br label %75

42:                                               ; preds = %39
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 16
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, -769
  store i32 %46, i32* %44, align 8
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 16
  %49 = load i32, i32* %48, align 8
  %50 = or i32 %49, 256
  store i32 %50, i32* %48, align 8
  br label %75

51:                                               ; preds = %39
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 16
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, -769
  store i32 %55, i32* %53, align 8
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 16
  %58 = load i32, i32* %57, align 8
  %59 = or i32 %58, 768
  store i32 %59, i32* %57, align 8
  br label %75

60:                                               ; preds = %39
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 16
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, -769
  store i32 %64, i32* %62, align 8
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 16
  %67 = load i32, i32* %66, align 8
  %68 = or i32 %67, 512
  store i32 %68, i32* %66, align 8
  br label %75

69:                                               ; preds = %39, %39
  br label %70

70:                                               ; preds = %39, %69
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 16
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, -769
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %9, %70, %60, %51, %42, %41
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_background_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_color_16_struct* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_color_16_struct*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_color_16_struct* %1, %struct.png_color_16_struct** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %11, i32 noundef 0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %7, align 8
  %16 = icmp eq %struct.png_color_16_struct* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %14, %5
  br label %60

18:                                               ; preds = %14
  %19 = load i32, i32* %8, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %22, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1.196, i64 0, i64 0))
  br label %60

23:                                               ; preds = %18
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 17
  %26 = load i32, i32* %25, align 4
  %27 = or i32 %26, 262272
  store i32 %27, i32* %25, align 4
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 17
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -8388609
  store i32 %31, i32* %29, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 16
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, -8193
  store i32 %35, i32* %33, align 8
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 74
  %38 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %7, align 8
  %39 = bitcast %struct.png_color_16_struct* %37 to i8*
  %40 = bitcast %struct.png_color_16_struct* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 2 %40, i64 10, i1 false)
  %41 = load i32, i32* %10, align 4
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 73
  store i32 %41, i32* %43, align 8
  %44 = load i32, i32* %8, align 4
  %45 = trunc i32 %44 to i8
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 72
  store i8 %45, i8* %47, align 4
  %48 = load i32, i32* %9, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %23
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 17
  %53 = load i32, i32* %52, align 4
  %54 = or i32 %53, 256
  store i32 %54, i32* %52, align 4
  br label %60

55:                                               ; preds = %23
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 17
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, -257
  store i32 %59, i32* %57, align 4
  br label %60

60:                                               ; preds = %17, %21, %55, %50
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_rtran_ok(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp ne %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 16
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 64
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %15, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19.197, i64 0, i64 0))
  br label %33

16:                                               ; preds = %8
  %17 = load i32, i32* %5, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %16
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 15
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20.198, i64 0, i64 0))
  br label %32

27:                                               ; preds = %19, %16
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 16
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, 16384
  store i32 %31, i32* %29, align 8
  store i32 1, i32* %3, align 4
  br label %35

32:                                               ; preds = %25
  br label %33

33:                                               ; preds = %32, %14
  br label %34

34:                                               ; preds = %33, %2
  store i32 0, i32* %3, align 4
  br label %35

35:                                               ; preds = %34, %27
  %36 = load i32, i32* %3, align 4
  ret i32 %36
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_background(%struct.png_struct_def* noalias noundef %0, %struct.png_color_16_struct* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_color_16_struct*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_color_16_struct* %1, %struct.png_color_16_struct** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store double %4, double* %10, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = load i32, i32* %9, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %16 = load double, double* %10, align 8
  %17 = call i32 @png_fixed(%struct.png_struct_def* noundef %15, double noundef %16, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.199, i64 0, i64 0))
  call void @png_set_background_fixed(%struct.png_struct_def* noundef %11, %struct.png_color_16_struct* noundef %12, i32 noundef %13, i32 noundef %14, i32 noundef %17)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_scale_16(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 67108864
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_strip_16(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 1024
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_strip_alpha(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 262144
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_alpha_mode_fixed(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %9, i32 noundef 0)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  br label %118

13:                                               ; preds = %3
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = load i32, i32* %6, align 4
  %16 = call i32 @translate_gamma_flags(%struct.png_struct_def* noundef %14, i32 noundef %15, i32 noundef 1)
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 1000
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = load i32, i32* %6, align 4
  %21 = icmp sgt i32 %20, 10000000
  br i1 %21, label %22, label %24

22:                                               ; preds = %19, %13
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %23, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.208, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %19
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @png_reciprocal(i32 noundef %25)
  store i32 %26, i32* %8, align 4
  %27 = load i32, i32* %5, align 4
  switch i32 %27, label %64 [
    i32 0, label %28
    i32 1, label %37
    i32 2, label %46
    i32 3, label %55
  ]

28:                                               ; preds = %24
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 17
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, -8388609
  store i32 %32, i32* %30, align 4
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 16
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -8193
  store i32 %36, i32* %34, align 8
  br label %66

37:                                               ; preds = %24
  store i32 1, i32* %7, align 4
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 17
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, -8388609
  store i32 %41, i32* %39, align 4
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 16
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, -8193
  store i32 %45, i32* %43, align 8
  store i32 100000, i32* %6, align 4
  br label %66

46:                                               ; preds = %24
  store i32 1, i32* %7, align 4
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 17
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, -8388609
  store i32 %50, i32* %48, align 4
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 16
  %53 = load i32, i32* %52, align 8
  %54 = or i32 %53, 8192
  store i32 %54, i32* %52, align 8
  br label %66

55:                                               ; preds = %24
  store i32 1, i32* %7, align 4
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 17
  %58 = load i32, i32* %57, align 4
  %59 = or i32 %58, 8388608
  store i32 %59, i32* %57, align 4
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 16
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, -8193
  store i32 %63, i32* %61, align 8
  br label %66

64:                                               ; preds = %24
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %65, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4.209, i64 0, i64 0)) #13
  unreachable

66:                                               ; preds = %55, %46, %37, %28
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 145
  %69 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %66
  %73 = load i32, i32* %8, align 4
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 145
  %76 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %75, i32 0, i32 0
  store i32 %73, i32* %76, align 8
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 145
  %79 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %78, i32 0, i32 4
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = or i32 %81, 1
  %83 = trunc i32 %82 to i16
  store i16 %83, i16* %79, align 2
  br label %84

84:                                               ; preds = %72, %66
  %85 = load i32, i32* %6, align 4
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 80
  store i32 %85, i32* %87, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %118

90:                                               ; preds = %84
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %91, i32 0, i32 74
  %93 = bitcast %struct.png_color_16_struct* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 10, i1 false)
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 145
  %96 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %99 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %98, i32 0, i32 73
  store i32 %97, i32* %99, align 8
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 72
  store i8 2, i8* %101, align 4
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 17
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, -257
  store i32 %105, i32* %103, align 4
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %107 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %106, i32 0, i32 17
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 128
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %90
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %112, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.210, i64 0, i64 0)) #13
  unreachable

113:                                              ; preds = %90
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %115 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %114, i32 0, i32 17
  %116 = load i32, i32* %115, align 4
  %117 = or i32 %116, 128
  store i32 %117, i32* %115, align 4
  br label %118

118:                                              ; preds = %12, %113, %84
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @translate_gamma_flags(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load i32, i32* %5, align 4
  %11 = icmp eq i32 %10, -100000
  br i1 %11, label %12, label %22

12:                                               ; preds = %9, %3
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 16
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %15, 4096
  store i32 %16, i32* %14, align 8
  %17 = load i32, i32* %6, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %12
  store i32 220000, i32* %5, align 4
  br label %21

20:                                               ; preds = %12
  store i32 45455, i32* %5, align 4
  br label %21

21:                                               ; preds = %20, %19
  br label %35

22:                                               ; preds = %9
  %23 = load i32, i32* %5, align 4
  %24 = icmp eq i32 %23, -2
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %5, align 4
  %27 = icmp eq i32 %26, -50000
  br i1 %27, label %28, label %34

28:                                               ; preds = %25, %22
  %29 = load i32, i32* %6, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  store i32 151724, i32* %5, align 4
  br label %33

32:                                               ; preds = %28
  store i32 65909, i32* %5, align 4
  br label %33

33:                                               ; preds = %32, %31
  br label %34

34:                                               ; preds = %33, %25
  br label %35

35:                                               ; preds = %34, %21
  %36 = load i32, i32* %5, align 4
  ret i32 %36
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_alpha_mode(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, double noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store double %2, double* %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = load double, double* %6, align 8
  %11 = call i32 @convert_gamma_value(%struct.png_struct_def* noundef %9, double noundef %10)
  call void @png_set_alpha_mode_fixed(%struct.png_struct_def* noundef %7, i32 noundef %8, i32 noundef %11)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @convert_gamma_value(%struct.png_struct_def* noalias noundef %0, double noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store double %1, double* %4, align 8
  %5 = load double, double* %4, align 8
  %6 = fcmp ogt double %5, 0.000000e+00
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = load double, double* %4, align 8
  %9 = fcmp olt double %8, 1.280000e+02
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = load double, double* %4, align 8
  %12 = fmul double %11, 1.000000e+05
  store double %12, double* %4, align 8
  br label %13

13:                                               ; preds = %10, %7, %2
  %14 = load double, double* %4, align 8
  %15 = fadd double %14, 5.000000e-01
  %16 = call double @llvm.floor.f64(double %15)
  store double %16, double* %4, align 8
  %17 = load double, double* %4, align 8
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = load double, double* %4, align 8
  %21 = fcmp olt double %20, 0xC1DFFFFFFFC00000
  br i1 %21, label %22, label %24

22:                                               ; preds = %19, %13
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_fixed_error(%struct.png_struct_def* noundef %23, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21.211, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %19
  %25 = load double, double* %4, align 8
  %26 = fptosi double %25 to i32
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_quantize(%struct.png_struct_def* noalias noundef %0, %struct.png_color_struct* noundef %1, i32 noundef %2, i32 noundef %3, i16* noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_color_struct*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.png_color_struct, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %struct.png_dsort_struct*, align 8
  %30 = alloca %struct.png_dsort_struct**, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca %struct.png_dsort_struct*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %struct.png_dsort_struct*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i8*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i64, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_color_struct* %1, %struct.png_color_struct** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i16* %4, i16** %11, align 8
  store i32 %5, i32* %12, align 4
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %62 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %61, i32 noundef 0)
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %6
  br label %1132

65:                                               ; preds = %6
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 17
  %68 = load i32, i32* %67, align 4
  %69 = or i32 %68, 64
  store i32 %69, i32* %67, align 4
  %70 = load i32, i32* %12, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %97

72:                                               ; preds = %65
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %74 = load i32, i32* %9, align 4
  %75 = zext i32 %74 to i64
  %76 = mul i64 %75, 1
  %77 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %73, i64 noundef %76)
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 109
  store i8* %77, i8** %79, align 8
  store i32 0, i32* %13, align 4
  br label %80

80:                                               ; preds = %93, %72
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %9, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = load i32, i32* %13, align 4
  %86 = trunc i32 %85 to i8
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 109
  %89 = load i8*, i8** %88, align 8
  %90 = load i32, i32* %13, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %89, i64 %91
  store i8 %86, i8* %92, align 1
  br label %93

93:                                               ; preds = %84
  %94 = load i32, i32* %13, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %13, align 4
  br label %80, !llvm.loop !120

96:                                               ; preds = %80
  br label %97

97:                                               ; preds = %96, %65
  %98 = load i32, i32* %9, align 4
  %99 = load i32, i32* %10, align 4
  %100 = icmp sgt i32 %98, %99
  br i1 %100, label %101, label %939

101:                                              ; preds = %97
  %102 = load i16*, i16** %11, align 8
  %103 = icmp ne i16* %102, null
  br i1 %103, label %104, label %490

104:                                              ; preds = %101
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %106 = load i32, i32* %9, align 4
  %107 = zext i32 %106 to i64
  %108 = mul i64 %107, 1
  %109 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %105, i64 noundef %108)
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 129
  store i8* %109, i8** %111, align 8
  store i32 0, i32* %14, align 4
  br label %112

112:                                              ; preds = %125, %104
  %113 = load i32, i32* %14, align 4
  %114 = load i32, i32* %9, align 4
  %115 = icmp slt i32 %113, %114
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = load i32, i32* %14, align 4
  %118 = trunc i32 %117 to i8
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %120 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 129
  %121 = load i8*, i8** %120, align 8
  %122 = load i32, i32* %14, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  store i8 %118, i8* %124, align 1
  br label %125

125:                                              ; preds = %116
  %126 = load i32, i32* %14, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %14, align 4
  br label %112, !llvm.loop !121

128:                                              ; preds = %112
  %129 = load i32, i32* %9, align 4
  %130 = sub nsw i32 %129, 1
  store i32 %130, i32* %14, align 4
  br label %131

131:                                              ; preds = %206, %128
  %132 = load i32, i32* %14, align 4
  %133 = load i32, i32* %10, align 4
  %134 = icmp sge i32 %132, %133
  br i1 %134, label %135, label %209

135:                                              ; preds = %131
  store i32 1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  br label %136

136:                                              ; preds = %198, %135
  %137 = load i32, i32* %16, align 4
  %138 = load i32, i32* %14, align 4
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %140, label %201

140:                                              ; preds = %136
  %141 = load i16*, i16** %11, align 8
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %143 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %142, i32 0, i32 129
  %144 = load i8*, i8** %143, align 8
  %145 = load i32, i32* %16, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %144, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  %150 = getelementptr inbounds i16, i16* %141, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = load i16*, i16** %11, align 8
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %155 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 129
  %156 = load i8*, i8** %155, align 8
  %157 = load i32, i32* %16, align 4
  %158 = add nsw i32 %157, 1
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %156, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds i16, i16* %153, i64 %162
  %164 = load i16, i16* %163, align 2
  %165 = zext i16 %164 to i32
  %166 = icmp slt i32 %152, %165
  br i1 %166, label %167, label %197

167:                                              ; preds = %140
  %168 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %169 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %168, i32 0, i32 129
  %170 = load i8*, i8** %169, align 8
  %171 = load i32, i32* %16, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = load i8, i8* %173, align 1
  store i8 %174, i8* %17, align 1
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %175, i32 0, i32 129
  %177 = load i8*, i8** %176, align 8
  %178 = load i32, i32* %16, align 4
  %179 = add nsw i32 %178, 1
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %177, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %184 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %183, i32 0, i32 129
  %185 = load i8*, i8** %184, align 8
  %186 = load i32, i32* %16, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8, i8* %185, i64 %187
  store i8 %182, i8* %188, align 1
  %189 = load i8, i8* %17, align 1
  %190 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %191 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %190, i32 0, i32 129
  %192 = load i8*, i8** %191, align 8
  %193 = load i32, i32* %16, align 4
  %194 = add nsw i32 %193, 1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %192, i64 %195
  store i8 %189, i8* %196, align 1
  store i32 0, i32* %15, align 4
  br label %197

197:                                              ; preds = %167, %140
  br label %198

198:                                              ; preds = %197
  %199 = load i32, i32* %16, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %16, align 4
  br label %136, !llvm.loop !122

201:                                              ; preds = %136
  %202 = load i32, i32* %15, align 4
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  br label %209

205:                                              ; preds = %201
  br label %206

206:                                              ; preds = %205
  %207 = load i32, i32* %14, align 4
  %208 = add nsw i32 %207, -1
  store i32 %208, i32* %14, align 4
  br label %131, !llvm.loop !123

209:                                              ; preds = %204, %131
  %210 = load i32, i32* %12, align 4
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %260

212:                                              ; preds = %209
  %213 = load i32, i32* %9, align 4
  store i32 %213, i32* %18, align 4
  store i32 0, i32* %14, align 4
  br label %214

214:                                              ; preds = %256, %212
  %215 = load i32, i32* %14, align 4
  %216 = load i32, i32* %10, align 4
  %217 = icmp slt i32 %215, %216
  br i1 %217, label %218, label %259

218:                                              ; preds = %214
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %219, i32 0, i32 129
  %221 = load i8*, i8** %220, align 8
  %222 = load i32, i32* %14, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i8, i8* %221, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = load i32, i32* %10, align 4
  %228 = icmp sge i32 %226, %227
  br i1 %228, label %229, label %255

229:                                              ; preds = %218
  br label %230

230:                                              ; preds = %233, %229
  %231 = load i32, i32* %18, align 4
  %232 = add nsw i32 %231, -1
  store i32 %232, i32* %18, align 4
  br label %233

233:                                              ; preds = %230
  %234 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %235 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %234, i32 0, i32 129
  %236 = load i8*, i8** %235, align 8
  %237 = load i32, i32* %18, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, i8* %236, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = load i32, i32* %10, align 4
  %243 = icmp sge i32 %241, %242
  br i1 %243, label %230, label %244, !llvm.loop !124

244:                                              ; preds = %233
  %245 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %246 = load i32, i32* %14, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %245, i64 %247
  %249 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %250 = load i32, i32* %18, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %249, i64 %251
  %253 = bitcast %struct.png_color_struct* %248 to i8*
  %254 = bitcast %struct.png_color_struct* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %253, i8* align 1 %254, i64 3, i1 false)
  br label %255

255:                                              ; preds = %244, %218
  br label %256

256:                                              ; preds = %255
  %257 = load i32, i32* %14, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %14, align 4
  br label %214, !llvm.loop !125

259:                                              ; preds = %214
  br label %483

260:                                              ; preds = %209
  %261 = load i32, i32* %9, align 4
  store i32 %261, i32* %19, align 4
  store i32 0, i32* %14, align 4
  br label %262

262:                                              ; preds = %332, %260
  %263 = load i32, i32* %14, align 4
  %264 = load i32, i32* %10, align 4
  %265 = icmp slt i32 %263, %264
  br i1 %265, label %266, label %335

266:                                              ; preds = %262
  %267 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %268 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %267, i32 0, i32 129
  %269 = load i8*, i8** %268, align 8
  %270 = load i32, i32* %14, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i8, i8* %269, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i32
  %275 = load i32, i32* %10, align 4
  %276 = icmp sge i32 %274, %275
  br i1 %276, label %277, label %331

277:                                              ; preds = %266
  br label %278

278:                                              ; preds = %281, %277
  %279 = load i32, i32* %19, align 4
  %280 = add nsw i32 %279, -1
  store i32 %280, i32* %19, align 4
  br label %281

281:                                              ; preds = %278
  %282 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %283 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %282, i32 0, i32 129
  %284 = load i8*, i8** %283, align 8
  %285 = load i32, i32* %19, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* %284, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = load i32, i32* %10, align 4
  %291 = icmp sge i32 %289, %290
  br i1 %291, label %278, label %292, !llvm.loop !126

292:                                              ; preds = %281
  %293 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %294 = load i32, i32* %19, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %293, i64 %295
  %297 = bitcast %struct.png_color_struct* %20 to i8*
  %298 = bitcast %struct.png_color_struct* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %297, i8* align 1 %298, i64 3, i1 false)
  %299 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %300 = load i32, i32* %19, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %299, i64 %301
  %303 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %304 = load i32, i32* %14, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %303, i64 %305
  %307 = bitcast %struct.png_color_struct* %302 to i8*
  %308 = bitcast %struct.png_color_struct* %306 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %307, i8* align 1 %308, i64 3, i1 false)
  %309 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %310 = load i32, i32* %14, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %309, i64 %311
  %313 = bitcast %struct.png_color_struct* %312 to i8*
  %314 = bitcast %struct.png_color_struct* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %313, i8* align 1 %314, i64 3, i1 false)
  %315 = load i32, i32* %14, align 4
  %316 = trunc i32 %315 to i8
  %317 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %318 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %317, i32 0, i32 109
  %319 = load i8*, i8** %318, align 8
  %320 = load i32, i32* %19, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds i8, i8* %319, i64 %321
  store i8 %316, i8* %322, align 1
  %323 = load i32, i32* %19, align 4
  %324 = trunc i32 %323 to i8
  %325 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %326 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %325, i32 0, i32 109
  %327 = load i8*, i8** %326, align 8
  %328 = load i32, i32* %14, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, i8* %327, i64 %329
  store i8 %324, i8* %330, align 1
  br label %331

331:                                              ; preds = %292, %266
  br label %332

332:                                              ; preds = %331
  %333 = load i32, i32* %14, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %14, align 4
  br label %262, !llvm.loop !127

335:                                              ; preds = %262
  store i32 0, i32* %14, align 4
  br label %336

336:                                              ; preds = %479, %335
  %337 = load i32, i32* %14, align 4
  %338 = load i32, i32* %9, align 4
  %339 = icmp slt i32 %337, %338
  br i1 %339, label %340, label %482

340:                                              ; preds = %336
  %341 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %342 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %341, i32 0, i32 109
  %343 = load i8*, i8** %342, align 8
  %344 = load i32, i32* %14, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %343, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = load i32, i32* %10, align 4
  %350 = icmp sge i32 %348, %349
  br i1 %350, label %351, label %478

351:                                              ; preds = %340
  %352 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %353 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %352, i32 0, i32 109
  %354 = load i8*, i8** %353, align 8
  %355 = load i32, i32* %14, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, i8* %354, i64 %356
  %358 = load i8, i8* %357, align 1
  %359 = zext i8 %358 to i32
  store i32 %359, i32* %24, align 4
  %360 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %361 = load i32, i32* %24, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %360, i64 %362
  %364 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %363, i32 0, i32 0
  %365 = load i8, i8* %364, align 1
  %366 = zext i8 %365 to i32
  %367 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %368 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %367, i64 0
  %369 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %368, i32 0, i32 0
  %370 = load i8, i8* %369, align 1
  %371 = zext i8 %370 to i32
  %372 = sub nsw i32 %366, %371
  %373 = call i32 @abs(i32 noundef %372) #18
  %374 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %375 = load i32, i32* %24, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %374, i64 %376
  %378 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %377, i32 0, i32 1
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i32
  %381 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %382 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %381, i64 0
  %383 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %382, i32 0, i32 1
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = sub nsw i32 %380, %385
  %387 = call i32 @abs(i32 noundef %386) #18
  %388 = add nsw i32 %373, %387
  %389 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %390 = load i32, i32* %24, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %389, i64 %391
  %393 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %392, i32 0, i32 2
  %394 = load i8, i8* %393, align 1
  %395 = zext i8 %394 to i32
  %396 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %397 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %396, i64 0
  %398 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %397, i32 0, i32 2
  %399 = load i8, i8* %398, align 1
  %400 = zext i8 %399 to i32
  %401 = sub nsw i32 %395, %400
  %402 = call i32 @abs(i32 noundef %401) #18
  %403 = add nsw i32 %388, %402
  store i32 %403, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 0, i32* %23, align 4
  br label %404

404:                                              ; preds = %466, %351
  %405 = load i32, i32* %22, align 4
  %406 = load i32, i32* %10, align 4
  %407 = icmp slt i32 %405, %406
  br i1 %407, label %408, label %469

408:                                              ; preds = %404
  %409 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %410 = load i32, i32* %24, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %409, i64 %411
  %413 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %412, i32 0, i32 0
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %417 = load i32, i32* %22, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %416, i64 %418
  %420 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %419, i32 0, i32 0
  %421 = load i8, i8* %420, align 1
  %422 = zext i8 %421 to i32
  %423 = sub nsw i32 %415, %422
  %424 = call i32 @abs(i32 noundef %423) #18
  %425 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %426 = load i32, i32* %24, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %425, i64 %427
  %429 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %428, i32 0, i32 1
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i32
  %432 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %433 = load i32, i32* %22, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %432, i64 %434
  %436 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %435, i32 0, i32 1
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i32
  %439 = sub nsw i32 %431, %438
  %440 = call i32 @abs(i32 noundef %439) #18
  %441 = add nsw i32 %424, %440
  %442 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %443 = load i32, i32* %24, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %442, i64 %444
  %446 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %445, i32 0, i32 2
  %447 = load i8, i8* %446, align 1
  %448 = zext i8 %447 to i32
  %449 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %450 = load i32, i32* %22, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %449, i64 %451
  %453 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %452, i32 0, i32 2
  %454 = load i8, i8* %453, align 1
  %455 = zext i8 %454 to i32
  %456 = sub nsw i32 %448, %455
  %457 = call i32 @abs(i32 noundef %456) #18
  %458 = add nsw i32 %441, %457
  store i32 %458, i32* %25, align 4
  %459 = load i32, i32* %25, align 4
  %460 = load i32, i32* %21, align 4
  %461 = icmp slt i32 %459, %460
  br i1 %461, label %462, label %465

462:                                              ; preds = %408
  %463 = load i32, i32* %25, align 4
  store i32 %463, i32* %21, align 4
  %464 = load i32, i32* %22, align 4
  store i32 %464, i32* %23, align 4
  br label %465

465:                                              ; preds = %462, %408
  br label %466

466:                                              ; preds = %465
  %467 = load i32, i32* %22, align 4
  %468 = add nsw i32 %467, 1
  store i32 %468, i32* %22, align 4
  br label %404, !llvm.loop !128

469:                                              ; preds = %404
  %470 = load i32, i32* %23, align 4
  %471 = trunc i32 %470 to i8
  %472 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %473 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %472, i32 0, i32 109
  %474 = load i8*, i8** %473, align 8
  %475 = load i32, i32* %14, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds i8, i8* %474, i64 %476
  store i8 %471, i8* %477, align 1
  br label %478

478:                                              ; preds = %469, %340
  br label %479

479:                                              ; preds = %478
  %480 = load i32, i32* %14, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %14, align 4
  br label %336, !llvm.loop !129

482:                                              ; preds = %336
  br label %483

483:                                              ; preds = %482, %259
  %484 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %485 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %486 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %485, i32 0, i32 129
  %487 = load i8*, i8** %486, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %484, i8* noundef %487)
  %488 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %489 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %488, i32 0, i32 129
  store i8* null, i8** %489, align 8
  br label %937

490:                                              ; preds = %101
  store %struct.png_dsort_struct* null, %struct.png_dsort_struct** %29, align 8
  %491 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %492 = load i32, i32* %9, align 4
  %493 = zext i32 %492 to i64
  %494 = mul i64 %493, 1
  %495 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %491, i64 noundef %494)
  %496 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %497 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %496, i32 0, i32 130
  store i8* %495, i8** %497, align 8
  %498 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %499 = load i32, i32* %9, align 4
  %500 = zext i32 %499 to i64
  %501 = mul i64 %500, 1
  %502 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %498, i64 noundef %501)
  %503 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %504 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %503, i32 0, i32 131
  store i8* %502, i8** %504, align 8
  store i32 0, i32* %26, align 4
  br label %505

505:                                              ; preds = %526, %490
  %506 = load i32, i32* %26, align 4
  %507 = load i32, i32* %9, align 4
  %508 = icmp slt i32 %506, %507
  br i1 %508, label %509, label %529

509:                                              ; preds = %505
  %510 = load i32, i32* %26, align 4
  %511 = trunc i32 %510 to i8
  %512 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %513 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %512, i32 0, i32 130
  %514 = load i8*, i8** %513, align 8
  %515 = load i32, i32* %26, align 4
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds i8, i8* %514, i64 %516
  store i8 %511, i8* %517, align 1
  %518 = load i32, i32* %26, align 4
  %519 = trunc i32 %518 to i8
  %520 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %521 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %520, i32 0, i32 131
  %522 = load i8*, i8** %521, align 8
  %523 = load i32, i32* %26, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds i8, i8* %522, i64 %524
  store i8 %519, i8* %525, align 1
  br label %526

526:                                              ; preds = %509
  %527 = load i32, i32* %26, align 4
  %528 = add nsw i32 %527, 1
  store i32 %528, i32* %26, align 4
  br label %505, !llvm.loop !130

529:                                              ; preds = %505
  %530 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %531 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_calloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %530, i64 noundef 6152)
  %532 = bitcast i8* %531 to %struct.png_dsort_struct**
  store %struct.png_dsort_struct** %532, %struct.png_dsort_struct*** %30, align 8
  %533 = load i32, i32* %9, align 4
  store i32 %533, i32* %28, align 4
  store i32 96, i32* %27, align 4
  br label %534

534:                                              ; preds = %918, %529
  %535 = load i32, i32* %28, align 4
  %536 = load i32, i32* %10, align 4
  %537 = icmp sgt i32 %535, %536
  br i1 %537, label %538, label %921

538:                                              ; preds = %534
  store i32 0, i32* %26, align 4
  br label %539

539:                                              ; preds = %642, %538
  %540 = load i32, i32* %26, align 4
  %541 = load i32, i32* %28, align 4
  %542 = sub nsw i32 %541, 1
  %543 = icmp slt i32 %540, %542
  br i1 %543, label %544, label %645

544:                                              ; preds = %539
  %545 = load i32, i32* %26, align 4
  %546 = add nsw i32 %545, 1
  store i32 %546, i32* %31, align 4
  br label %547

547:                                              ; preds = %634, %544
  %548 = load i32, i32* %31, align 4
  %549 = load i32, i32* %28, align 4
  %550 = icmp slt i32 %548, %549
  br i1 %550, label %551, label %637

551:                                              ; preds = %547
  %552 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %553 = load i32, i32* %26, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %552, i64 %554
  %556 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %555, i32 0, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  %559 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %560 = load i32, i32* %31, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %559, i64 %561
  %563 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %562, i32 0, i32 0
  %564 = load i8, i8* %563, align 1
  %565 = zext i8 %564 to i32
  %566 = sub nsw i32 %558, %565
  %567 = call i32 @abs(i32 noundef %566) #18
  %568 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %569 = load i32, i32* %26, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %568, i64 %570
  %572 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %571, i32 0, i32 1
  %573 = load i8, i8* %572, align 1
  %574 = zext i8 %573 to i32
  %575 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %576 = load i32, i32* %31, align 4
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %575, i64 %577
  %579 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %578, i32 0, i32 1
  %580 = load i8, i8* %579, align 1
  %581 = zext i8 %580 to i32
  %582 = sub nsw i32 %574, %581
  %583 = call i32 @abs(i32 noundef %582) #18
  %584 = add nsw i32 %567, %583
  %585 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %586 = load i32, i32* %26, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %585, i64 %587
  %589 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %588, i32 0, i32 2
  %590 = load i8, i8* %589, align 1
  %591 = zext i8 %590 to i32
  %592 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %593 = load i32, i32* %31, align 4
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %592, i64 %594
  %596 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %595, i32 0, i32 2
  %597 = load i8, i8* %596, align 1
  %598 = zext i8 %597 to i32
  %599 = sub nsw i32 %591, %598
  %600 = call i32 @abs(i32 noundef %599) #18
  %601 = add nsw i32 %584, %600
  store i32 %601, i32* %32, align 4
  %602 = load i32, i32* %32, align 4
  %603 = load i32, i32* %27, align 4
  %604 = icmp sle i32 %602, %603
  br i1 %604, label %605, label %633

605:                                              ; preds = %551
  %606 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %607 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %606, i64 noundef 16)
  %608 = bitcast i8* %607 to %struct.png_dsort_struct*
  store %struct.png_dsort_struct* %608, %struct.png_dsort_struct** %29, align 8
  %609 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %610 = icmp eq %struct.png_dsort_struct* %609, null
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  br label %637

612:                                              ; preds = %605
  %613 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %614 = load i32, i32* %32, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %613, i64 %615
  %617 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %616, align 8
  %618 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %619 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %618, i32 0, i32 0
  store %struct.png_dsort_struct* %617, %struct.png_dsort_struct** %619, align 8
  %620 = load i32, i32* %26, align 4
  %621 = trunc i32 %620 to i8
  %622 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %623 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %622, i32 0, i32 1
  store i8 %621, i8* %623, align 8
  %624 = load i32, i32* %31, align 4
  %625 = trunc i32 %624 to i8
  %626 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %627 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %626, i32 0, i32 2
  store i8 %625, i8* %627, align 1
  %628 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %629 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %630 = load i32, i32* %32, align 4
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %629, i64 %631
  store %struct.png_dsort_struct* %628, %struct.png_dsort_struct** %632, align 8
  br label %633

633:                                              ; preds = %612, %551
  br label %634

634:                                              ; preds = %633
  %635 = load i32, i32* %31, align 4
  %636 = add nsw i32 %635, 1
  store i32 %636, i32* %31, align 4
  br label %547, !llvm.loop !131

637:                                              ; preds = %611, %547
  %638 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %639 = icmp eq %struct.png_dsort_struct* %638, null
  br i1 %639, label %640, label %641

640:                                              ; preds = %637
  br label %645

641:                                              ; preds = %637
  br label %642

642:                                              ; preds = %641
  %643 = load i32, i32* %26, align 4
  %644 = add nsw i32 %643, 1
  store i32 %644, i32* %26, align 4
  br label %539, !llvm.loop !132

645:                                              ; preds = %640, %539
  %646 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  %647 = icmp ne %struct.png_dsort_struct* %646, null
  br i1 %647, label %648, label %881

648:                                              ; preds = %645
  store i32 0, i32* %26, align 4
  br label %649

649:                                              ; preds = %877, %648
  %650 = load i32, i32* %26, align 4
  %651 = load i32, i32* %27, align 4
  %652 = icmp sle i32 %650, %651
  br i1 %652, label %653, label %880

653:                                              ; preds = %649
  %654 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %655 = load i32, i32* %26, align 4
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %654, i64 %656
  %658 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %657, align 8
  %659 = icmp ne %struct.png_dsort_struct* %658, null
  br i1 %659, label %660, label %876

660:                                              ; preds = %653
  %661 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %662 = load i32, i32* %26, align 4
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %661, i64 %663
  %665 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %664, align 8
  store %struct.png_dsort_struct* %665, %struct.png_dsort_struct** %33, align 8
  br label %666

666:                                              ; preds = %866, %660
  %667 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %668 = icmp ne %struct.png_dsort_struct* %667, null
  br i1 %668, label %669, label %870

669:                                              ; preds = %666
  %670 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %671 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %670, i32 0, i32 130
  %672 = load i8*, i8** %671, align 8
  %673 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %674 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %673, i32 0, i32 1
  %675 = load i8, i8* %674, align 8
  %676 = zext i8 %675 to i64
  %677 = getelementptr inbounds i8, i8* %672, i64 %676
  %678 = load i8, i8* %677, align 1
  %679 = zext i8 %678 to i32
  %680 = load i32, i32* %28, align 4
  %681 = icmp slt i32 %679, %680
  br i1 %681, label %682, label %860

682:                                              ; preds = %669
  %683 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %684 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %683, i32 0, i32 130
  %685 = load i8*, i8** %684, align 8
  %686 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %687 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %686, i32 0, i32 2
  %688 = load i8, i8* %687, align 1
  %689 = zext i8 %688 to i64
  %690 = getelementptr inbounds i8, i8* %685, i64 %689
  %691 = load i8, i8* %690, align 1
  %692 = zext i8 %691 to i32
  %693 = load i32, i32* %28, align 4
  %694 = icmp slt i32 %692, %693
  br i1 %694, label %695, label %860

695:                                              ; preds = %682
  %696 = load i32, i32* %28, align 4
  %697 = and i32 %696, 1
  %698 = icmp ne i32 %697, 0
  br i1 %698, label %699, label %708

699:                                              ; preds = %695
  %700 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %701 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %700, i32 0, i32 1
  %702 = load i8, i8* %701, align 8
  %703 = zext i8 %702 to i32
  store i32 %703, i32* %34, align 4
  %704 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %705 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %704, i32 0, i32 2
  %706 = load i8, i8* %705, align 1
  %707 = zext i8 %706 to i32
  store i32 %707, i32* %35, align 4
  br label %717

708:                                              ; preds = %695
  %709 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %710 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %709, i32 0, i32 2
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  store i32 %712, i32* %34, align 4
  %713 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %714 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %713, i32 0, i32 1
  %715 = load i8, i8* %714, align 8
  %716 = zext i8 %715 to i32
  store i32 %716, i32* %35, align 4
  br label %717

717:                                              ; preds = %708, %699
  %718 = load i32, i32* %28, align 4
  %719 = add nsw i32 %718, -1
  store i32 %719, i32* %28, align 4
  %720 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %721 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %722 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %721, i32 0, i32 130
  %723 = load i8*, i8** %722, align 8
  %724 = load i32, i32* %34, align 4
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds i8, i8* %723, i64 %725
  %727 = load i8, i8* %726, align 1
  %728 = zext i8 %727 to i64
  %729 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %720, i64 %728
  %730 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %731 = load i32, i32* %28, align 4
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %730, i64 %732
  %734 = bitcast %struct.png_color_struct* %729 to i8*
  %735 = bitcast %struct.png_color_struct* %733 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %734, i8* align 1 %735, i64 3, i1 false)
  %736 = load i32, i32* %12, align 4
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %805

738:                                              ; preds = %717
  store i32 0, i32* %36, align 4
  br label %739

739:                                              ; preds = %801, %738
  %740 = load i32, i32* %36, align 4
  %741 = load i32, i32* %9, align 4
  %742 = icmp slt i32 %740, %741
  br i1 %742, label %743, label %804

743:                                              ; preds = %739
  %744 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %745 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %744, i32 0, i32 109
  %746 = load i8*, i8** %745, align 8
  %747 = load i32, i32* %36, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, i8* %746, i64 %748
  %750 = load i8, i8* %749, align 1
  %751 = zext i8 %750 to i32
  %752 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %753 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %752, i32 0, i32 130
  %754 = load i8*, i8** %753, align 8
  %755 = load i32, i32* %34, align 4
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds i8, i8* %754, i64 %756
  %758 = load i8, i8* %757, align 1
  %759 = zext i8 %758 to i32
  %760 = icmp eq i32 %751, %759
  br i1 %760, label %761, label %775

761:                                              ; preds = %743
  %762 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %763 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %762, i32 0, i32 130
  %764 = load i8*, i8** %763, align 8
  %765 = load i32, i32* %35, align 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds i8, i8* %764, i64 %766
  %768 = load i8, i8* %767, align 1
  %769 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %770 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %769, i32 0, i32 109
  %771 = load i8*, i8** %770, align 8
  %772 = load i32, i32* %36, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds i8, i8* %771, i64 %773
  store i8 %768, i8* %774, align 1
  br label %775

775:                                              ; preds = %761, %743
  %776 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %777 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %776, i32 0, i32 109
  %778 = load i8*, i8** %777, align 8
  %779 = load i32, i32* %36, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds i8, i8* %778, i64 %780
  %782 = load i8, i8* %781, align 1
  %783 = zext i8 %782 to i32
  %784 = load i32, i32* %28, align 4
  %785 = icmp eq i32 %783, %784
  br i1 %785, label %786, label %800

786:                                              ; preds = %775
  %787 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %788 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %787, i32 0, i32 130
  %789 = load i8*, i8** %788, align 8
  %790 = load i32, i32* %34, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i8, i8* %789, i64 %791
  %793 = load i8, i8* %792, align 1
  %794 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %795 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %794, i32 0, i32 109
  %796 = load i8*, i8** %795, align 8
  %797 = load i32, i32* %36, align 4
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds i8, i8* %796, i64 %798
  store i8 %793, i8* %799, align 1
  br label %800

800:                                              ; preds = %786, %775
  br label %801

801:                                              ; preds = %800
  %802 = load i32, i32* %36, align 4
  %803 = add nsw i32 %802, 1
  store i32 %803, i32* %36, align 4
  br label %739, !llvm.loop !133

804:                                              ; preds = %739
  br label %805

805:                                              ; preds = %804, %717
  %806 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %807 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %806, i32 0, i32 130
  %808 = load i8*, i8** %807, align 8
  %809 = load i32, i32* %34, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds i8, i8* %808, i64 %810
  %812 = load i8, i8* %811, align 1
  %813 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %814 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %813, i32 0, i32 130
  %815 = load i8*, i8** %814, align 8
  %816 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %817 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %816, i32 0, i32 131
  %818 = load i8*, i8** %817, align 8
  %819 = load i32, i32* %28, align 4
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds i8, i8* %818, i64 %820
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i64
  %824 = getelementptr inbounds i8, i8* %815, i64 %823
  store i8 %812, i8* %824, align 1
  %825 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %826 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %825, i32 0, i32 131
  %827 = load i8*, i8** %826, align 8
  %828 = load i32, i32* %28, align 4
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds i8, i8* %827, i64 %829
  %831 = load i8, i8* %830, align 1
  %832 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %833 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %832, i32 0, i32 131
  %834 = load i8*, i8** %833, align 8
  %835 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %836 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %835, i32 0, i32 130
  %837 = load i8*, i8** %836, align 8
  %838 = load i32, i32* %34, align 4
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds i8, i8* %837, i64 %839
  %841 = load i8, i8* %840, align 1
  %842 = zext i8 %841 to i64
  %843 = getelementptr inbounds i8, i8* %834, i64 %842
  store i8 %831, i8* %843, align 1
  %844 = load i32, i32* %28, align 4
  %845 = trunc i32 %844 to i8
  %846 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %847 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %846, i32 0, i32 130
  %848 = load i8*, i8** %847, align 8
  %849 = load i32, i32* %34, align 4
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds i8, i8* %848, i64 %850
  store i8 %845, i8* %851, align 1
  %852 = load i32, i32* %34, align 4
  %853 = trunc i32 %852 to i8
  %854 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %855 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %854, i32 0, i32 131
  %856 = load i8*, i8** %855, align 8
  %857 = load i32, i32* %28, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds i8, i8* %856, i64 %858
  store i8 %853, i8* %859, align 1
  br label %860

860:                                              ; preds = %805, %682, %669
  %861 = load i32, i32* %28, align 4
  %862 = load i32, i32* %10, align 4
  %863 = icmp sle i32 %861, %862
  br i1 %863, label %864, label %865

864:                                              ; preds = %860
  br label %870

865:                                              ; preds = %860
  br label %866

866:                                              ; preds = %865
  %867 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %33, align 8
  %868 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %867, i32 0, i32 0
  %869 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %868, align 8
  store %struct.png_dsort_struct* %869, %struct.png_dsort_struct** %33, align 8
  br label %666, !llvm.loop !134

870:                                              ; preds = %864, %666
  %871 = load i32, i32* %28, align 4
  %872 = load i32, i32* %10, align 4
  %873 = icmp sle i32 %871, %872
  br i1 %873, label %874, label %875

874:                                              ; preds = %870
  br label %880

875:                                              ; preds = %870
  br label %876

876:                                              ; preds = %875, %653
  br label %877

877:                                              ; preds = %876
  %878 = load i32, i32* %26, align 4
  %879 = add nsw i32 %878, 1
  store i32 %879, i32* %26, align 4
  br label %649, !llvm.loop !135

880:                                              ; preds = %874, %649
  br label %881

881:                                              ; preds = %880, %645
  store i32 0, i32* %26, align 4
  br label %882

882:                                              ; preds = %915, %881
  %883 = load i32, i32* %26, align 4
  %884 = icmp slt i32 %883, 769
  br i1 %884, label %885, label %918

885:                                              ; preds = %882
  %886 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %887 = load i32, i32* %26, align 4
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %886, i64 %888
  %890 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %889, align 8
  %891 = icmp ne %struct.png_dsort_struct* %890, null
  br i1 %891, label %892, label %910

892:                                              ; preds = %885
  %893 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %894 = load i32, i32* %26, align 4
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %893, i64 %895
  %897 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %896, align 8
  store %struct.png_dsort_struct* %897, %struct.png_dsort_struct** %37, align 8
  br label %898

898:                                              ; preds = %901, %892
  %899 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %37, align 8
  %900 = icmp ne %struct.png_dsort_struct* %899, null
  br i1 %900, label %901, label %909

901:                                              ; preds = %898
  %902 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %37, align 8
  %903 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %902, i32 0, i32 0
  %904 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %903, align 8
  store %struct.png_dsort_struct* %904, %struct.png_dsort_struct** %29, align 8
  %905 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %906 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %37, align 8
  %907 = bitcast %struct.png_dsort_struct* %906 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %905, i8* noundef %907)
  %908 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %29, align 8
  store %struct.png_dsort_struct* %908, %struct.png_dsort_struct** %37, align 8
  br label %898, !llvm.loop !136

909:                                              ; preds = %898
  br label %910

910:                                              ; preds = %909, %885
  %911 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %912 = load i32, i32* %26, align 4
  %913 = sext i32 %912 to i64
  %914 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %911, i64 %913
  store %struct.png_dsort_struct* null, %struct.png_dsort_struct** %914, align 8
  br label %915

915:                                              ; preds = %910
  %916 = load i32, i32* %26, align 4
  %917 = add nsw i32 %916, 1
  store i32 %917, i32* %26, align 4
  br label %882, !llvm.loop !137

918:                                              ; preds = %882
  %919 = load i32, i32* %27, align 4
  %920 = add nsw i32 %919, 96
  store i32 %920, i32* %27, align 4
  br label %534, !llvm.loop !138

921:                                              ; preds = %534
  %922 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %923 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %30, align 8
  %924 = bitcast %struct.png_dsort_struct** %923 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %922, i8* noundef %924)
  %925 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %926 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %927 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %926, i32 0, i32 131
  %928 = load i8*, i8** %927, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %925, i8* noundef %928)
  %929 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %930 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %931 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %930, i32 0, i32 130
  %932 = load i8*, i8** %931, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %929, i8* noundef %932)
  %933 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %934 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %933, i32 0, i32 131
  store i8* null, i8** %934, align 8
  %935 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %936 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %935, i32 0, i32 130
  store i8* null, i8** %936, align 8
  br label %937

937:                                              ; preds = %921, %483
  %938 = load i32, i32* %10, align 4
  store i32 %938, i32* %9, align 4
  br label %939

939:                                              ; preds = %937, %97
  %940 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %941 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %940, i32 0, i32 52
  %942 = load %struct.png_color_struct*, %struct.png_color_struct** %941, align 8
  %943 = icmp eq %struct.png_color_struct* %942, null
  br i1 %943, label %944, label %948

944:                                              ; preds = %939
  %945 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %946 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %947 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %946, i32 0, i32 52
  store %struct.png_color_struct* %945, %struct.png_color_struct** %947, align 8
  br label %948

948:                                              ; preds = %944, %939
  %949 = load i32, i32* %9, align 4
  %950 = trunc i32 %949 to i16
  %951 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %952 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %951, i32 0, i32 53
  store i16 %950, i16* %952, align 8
  %953 = load i32, i32* %12, align 4
  %954 = icmp ne i32 %953, 0
  br i1 %954, label %955, label %1132

955:                                              ; preds = %948
  store i32 15, i32* %40, align 4
  store i32 32, i32* %41, align 4
  store i32 32, i32* %42, align 4
  store i32 32, i32* %43, align 4
  %956 = load i32, i32* %40, align 4
  %957 = zext i32 %956 to i64
  %958 = shl i64 1, %957
  store i64 %958, i64* %44, align 8
  %959 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %960 = load i64, i64* %44, align 8
  %961 = mul i64 %960, 1
  %962 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_calloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %959, i64 noundef %961)
  %963 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %964 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %963, i32 0, i32 108
  store i8* %962, i8** %964, align 8
  %965 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %966 = load i64, i64* %44, align 8
  %967 = mul i64 %966, 1
  %968 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %965, i64 noundef %967)
  store i8* %968, i8** %39, align 8
  %969 = load i8*, i8** %39, align 8
  %970 = load i64, i64* %44, align 8
  %971 = mul i64 %970, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %969, i8 -1, i64 %971, i1 false)
  store i32 0, i32* %38, align 4
  br label %972

972:                                              ; preds = %1126, %955
  %973 = load i32, i32* %38, align 4
  %974 = load i32, i32* %9, align 4
  %975 = icmp slt i32 %973, %974
  br i1 %975, label %976, label %1129

976:                                              ; preds = %972
  %977 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %978 = load i32, i32* %38, align 4
  %979 = sext i32 %978 to i64
  %980 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %977, i64 %979
  %981 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %980, i32 0, i32 0
  %982 = load i8, i8* %981, align 1
  %983 = zext i8 %982 to i32
  %984 = ashr i32 %983, 3
  store i32 %984, i32* %48, align 4
  %985 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %986 = load i32, i32* %38, align 4
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %985, i64 %987
  %989 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %988, i32 0, i32 1
  %990 = load i8, i8* %989, align 1
  %991 = zext i8 %990 to i32
  %992 = ashr i32 %991, 3
  store i32 %992, i32* %49, align 4
  %993 = load %struct.png_color_struct*, %struct.png_color_struct** %8, align 8
  %994 = load i32, i32* %38, align 4
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %993, i64 %995
  %997 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %996, i32 0, i32 2
  %998 = load i8, i8* %997, align 1
  %999 = zext i8 %998 to i32
  %1000 = ashr i32 %999, 3
  store i32 %1000, i32* %50, align 4
  store i32 0, i32* %45, align 4
  br label %1001

1001:                                             ; preds = %1122, %976
  %1002 = load i32, i32* %45, align 4
  %1003 = load i32, i32* %41, align 4
  %1004 = icmp slt i32 %1002, %1003
  br i1 %1004, label %1005, label %1125

1005:                                             ; preds = %1001
  %1006 = load i32, i32* %45, align 4
  %1007 = load i32, i32* %48, align 4
  %1008 = icmp sgt i32 %1006, %1007
  br i1 %1008, label %1009, label %1013

1009:                                             ; preds = %1005
  %1010 = load i32, i32* %45, align 4
  %1011 = load i32, i32* %48, align 4
  %1012 = sub nsw i32 %1010, %1011
  br label %1017

1013:                                             ; preds = %1005
  %1014 = load i32, i32* %48, align 4
  %1015 = load i32, i32* %45, align 4
  %1016 = sub nsw i32 %1014, %1015
  br label %1017

1017:                                             ; preds = %1013, %1009
  %1018 = phi i32 [ %1012, %1009 ], [ %1016, %1013 ]
  store i32 %1018, i32* %51, align 4
  %1019 = load i32, i32* %45, align 4
  %1020 = shl i32 %1019, 10
  store i32 %1020, i32* %52, align 4
  store i32 0, i32* %46, align 4
  br label %1021

1021:                                             ; preds = %1118, %1017
  %1022 = load i32, i32* %46, align 4
  %1023 = load i32, i32* %42, align 4
  %1024 = icmp slt i32 %1022, %1023
  br i1 %1024, label %1025, label %1121

1025:                                             ; preds = %1021
  %1026 = load i32, i32* %46, align 4
  %1027 = load i32, i32* %49, align 4
  %1028 = icmp sgt i32 %1026, %1027
  br i1 %1028, label %1029, label %1033

1029:                                             ; preds = %1025
  %1030 = load i32, i32* %46, align 4
  %1031 = load i32, i32* %49, align 4
  %1032 = sub nsw i32 %1030, %1031
  br label %1037

1033:                                             ; preds = %1025
  %1034 = load i32, i32* %49, align 4
  %1035 = load i32, i32* %46, align 4
  %1036 = sub nsw i32 %1034, %1035
  br label %1037

1037:                                             ; preds = %1033, %1029
  %1038 = phi i32 [ %1032, %1029 ], [ %1036, %1033 ]
  store i32 %1038, i32* %53, align 4
  %1039 = load i32, i32* %51, align 4
  %1040 = load i32, i32* %53, align 4
  %1041 = add nsw i32 %1039, %1040
  store i32 %1041, i32* %54, align 4
  %1042 = load i32, i32* %51, align 4
  %1043 = load i32, i32* %53, align 4
  %1044 = icmp sgt i32 %1042, %1043
  br i1 %1044, label %1045, label %1047

1045:                                             ; preds = %1037
  %1046 = load i32, i32* %51, align 4
  br label %1049

1047:                                             ; preds = %1037
  %1048 = load i32, i32* %53, align 4
  br label %1049

1049:                                             ; preds = %1047, %1045
  %1050 = phi i32 [ %1046, %1045 ], [ %1048, %1047 ]
  store i32 %1050, i32* %55, align 4
  %1051 = load i32, i32* %52, align 4
  %1052 = load i32, i32* %46, align 4
  %1053 = shl i32 %1052, 5
  %1054 = or i32 %1051, %1053
  store i32 %1054, i32* %56, align 4
  store i32 0, i32* %47, align 4
  br label %1055

1055:                                             ; preds = %1114, %1049
  %1056 = load i32, i32* %47, align 4
  %1057 = load i32, i32* %43, align 4
  %1058 = icmp slt i32 %1056, %1057
  br i1 %1058, label %1059, label %1117

1059:                                             ; preds = %1055
  %1060 = load i32, i32* %56, align 4
  %1061 = load i32, i32* %47, align 4
  %1062 = or i32 %1060, %1061
  store i32 %1062, i32* %57, align 4
  %1063 = load i32, i32* %47, align 4
  %1064 = load i32, i32* %50, align 4
  %1065 = icmp sgt i32 %1063, %1064
  br i1 %1065, label %1066, label %1070

1066:                                             ; preds = %1059
  %1067 = load i32, i32* %47, align 4
  %1068 = load i32, i32* %50, align 4
  %1069 = sub nsw i32 %1067, %1068
  br label %1074

1070:                                             ; preds = %1059
  %1071 = load i32, i32* %50, align 4
  %1072 = load i32, i32* %47, align 4
  %1073 = sub nsw i32 %1071, %1072
  br label %1074

1074:                                             ; preds = %1070, %1066
  %1075 = phi i32 [ %1069, %1066 ], [ %1073, %1070 ]
  store i32 %1075, i32* %58, align 4
  %1076 = load i32, i32* %55, align 4
  %1077 = load i32, i32* %58, align 4
  %1078 = icmp sgt i32 %1076, %1077
  br i1 %1078, label %1079, label %1081

1079:                                             ; preds = %1074
  %1080 = load i32, i32* %55, align 4
  br label %1083

1081:                                             ; preds = %1074
  %1082 = load i32, i32* %58, align 4
  br label %1083

1083:                                             ; preds = %1081, %1079
  %1084 = phi i32 [ %1080, %1079 ], [ %1082, %1081 ]
  store i32 %1084, i32* %59, align 4
  %1085 = load i32, i32* %59, align 4
  %1086 = load i32, i32* %54, align 4
  %1087 = add nsw i32 %1085, %1086
  %1088 = load i32, i32* %58, align 4
  %1089 = add nsw i32 %1087, %1088
  store i32 %1089, i32* %60, align 4
  %1090 = load i32, i32* %60, align 4
  %1091 = load i8*, i8** %39, align 8
  %1092 = load i32, i32* %57, align 4
  %1093 = sext i32 %1092 to i64
  %1094 = getelementptr inbounds i8, i8* %1091, i64 %1093
  %1095 = load i8, i8* %1094, align 1
  %1096 = zext i8 %1095 to i32
  %1097 = icmp slt i32 %1090, %1096
  br i1 %1097, label %1098, label %1113

1098:                                             ; preds = %1083
  %1099 = load i32, i32* %60, align 4
  %1100 = trunc i32 %1099 to i8
  %1101 = load i8*, i8** %39, align 8
  %1102 = load i32, i32* %57, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds i8, i8* %1101, i64 %1103
  store i8 %1100, i8* %1104, align 1
  %1105 = load i32, i32* %38, align 4
  %1106 = trunc i32 %1105 to i8
  %1107 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %1108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1107, i32 0, i32 108
  %1109 = load i8*, i8** %1108, align 8
  %1110 = load i32, i32* %57, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds i8, i8* %1109, i64 %1111
  store i8 %1106, i8* %1112, align 1
  br label %1113

1113:                                             ; preds = %1098, %1083
  br label %1114

1114:                                             ; preds = %1113
  %1115 = load i32, i32* %47, align 4
  %1116 = add nsw i32 %1115, 1
  store i32 %1116, i32* %47, align 4
  br label %1055, !llvm.loop !139

1117:                                             ; preds = %1055
  br label %1118

1118:                                             ; preds = %1117
  %1119 = load i32, i32* %46, align 4
  %1120 = add nsw i32 %1119, 1
  store i32 %1120, i32* %46, align 4
  br label %1021, !llvm.loop !140

1121:                                             ; preds = %1021
  br label %1122

1122:                                             ; preds = %1121
  %1123 = load i32, i32* %45, align 4
  %1124 = add nsw i32 %1123, 1
  store i32 %1124, i32* %45, align 4
  br label %1001, !llvm.loop !141

1125:                                             ; preds = %1001
  br label %1126

1126:                                             ; preds = %1125
  %1127 = load i32, i32* %38, align 4
  %1128 = add nsw i32 %1127, 1
  store i32 %1128, i32* %38, align 4
  br label %972, !llvm.loop !142

1129:                                             ; preds = %972
  %1130 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %1131 = load i8*, i8** %39, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %1130, i8* noundef %1131)
  br label %1132

1132:                                             ; preds = %64, %1129, %948
  ret void
}

; Function Attrs: nounwind readnone willreturn
declare i32 @abs(i32 noundef) #10

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_gamma_fixed(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %7, i32 noundef 0)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  br label %42

11:                                               ; preds = %3
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @translate_gamma_flags(%struct.png_struct_def* noundef %12, i32 noundef %13, i32 noundef 1)
  store i32 %14, i32* %5, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = load i32, i32* %6, align 4
  %17 = call i32 @translate_gamma_flags(%struct.png_struct_def* noundef %15, i32 noundef %16, i32 noundef 0)
  store i32 %17, i32* %6, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp sle i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %11
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %21, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.212, i64 0, i64 0)) #13
  unreachable

22:                                               ; preds = %11
  %23 = load i32, i32* %5, align 4
  %24 = icmp sle i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.213, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %22
  %28 = load i32, i32* %6, align 4
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 145
  %31 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %30, i32 0, i32 0
  store i32 %28, i32* %31, align 8
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 145
  %34 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %33, i32 0, i32 4
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = or i32 %36, 1
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %34, align 2
  %39 = load i32, i32* %5, align 4
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 80
  store i32 %39, i32* %41, align 4
  br label %42

42:                                               ; preds = %27, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_gamma(%struct.png_struct_def* noalias noundef %0, double noundef %1, double noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store double %1, double* %5, align 8
  store double %2, double* %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = load double, double* %5, align 8
  %10 = call i32 @convert_gamma_value(%struct.png_struct_def* noundef %8, double noundef %9)
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = load double, double* %6, align 8
  %13 = call i32 @convert_gamma_value(%struct.png_struct_def* noundef %11, double noundef %12)
  call void @png_set_gamma_fixed(%struct.png_struct_def* noundef %7, i32 noundef %10, i32 noundef %13)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_expand(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 33558528
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_palette_to_rgb(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 33558528
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 4096
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_tRNS_to_alpha(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 33558528
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_expand_16(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 33559040
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_gray_to_rgb(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %3, i32 noundef 0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %13

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* noundef %8)
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = or i32 %11, 16384
  store i32 %12, i32* %10, align 4
  br label %13

13:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_rgb_to_gray_fixed(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %12 = call i32 @png_rtran_ok(%struct.png_struct_def* noundef %11, i32 noundef 1)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %4
  br label %99

15:                                               ; preds = %4
  %16 = load i32, i32* %6, align 4
  switch i32 %16, label %32 [
    i32 1, label %17
    i32 2, label %22
    i32 3, label %27
  ]

17:                                               ; preds = %15
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 17
  %20 = load i32, i32* %19, align 4
  %21 = or i32 %20, 6291456
  store i32 %21, i32* %19, align 4
  br label %34

22:                                               ; preds = %15
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 17
  %25 = load i32, i32* %24, align 4
  %26 = or i32 %25, 4194304
  store i32 %26, i32* %24, align 4
  br label %34

27:                                               ; preds = %15
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 17
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %30, 2097152
  store i32 %31, i32* %29, align 4
  br label %34

32:                                               ; preds = %15
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %33, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.224, i64 0, i64 0)) #13
  unreachable

34:                                               ; preds = %27, %22, %17
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 61
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 3
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 17
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, 4096
  store i32 %44, i32* %42, align 4
  br label %45

45:                                               ; preds = %40, %34
  %46 = load i32, i32* %7, align 4
  %47 = icmp sge i32 %46, 0
  br i1 %47, label %48, label %73

48:                                               ; preds = %45
  %49 = load i32, i32* %8, align 4
  %50 = icmp sge i32 %49, 0
  br i1 %50, label %51, label %73

51:                                               ; preds = %48
  %52 = load i32, i32* %7, align 4
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %52, %53
  %55 = icmp sle i32 %54, 100000
  br i1 %55, label %56, label %73

56:                                               ; preds = %51
  %57 = load i32, i32* %7, align 4
  %58 = mul i32 %57, 32768
  %59 = udiv i32 %58, 100000
  %60 = trunc i32 %59 to i16
  store i16 %60, i16* %9, align 2
  %61 = load i32, i32* %8, align 4
  %62 = mul i32 %61, 32768
  %63 = udiv i32 %62, 100000
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %10, align 2
  %65 = load i16, i16* %9, align 2
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 120
  store i16 %65, i16* %67, align 2
  %68 = load i16, i16* %10, align 2
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 121
  store i16 %68, i16* %70, align 4
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 119
  store i8 1, i8* %72, align 1
  br label %99

73:                                               ; preds = %51, %48, %45
  %74 = load i32, i32* %7, align 4
  %75 = icmp sge i32 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %73
  %77 = load i32, i32* %8, align 4
  %78 = icmp sge i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %80, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9.225, i64 0, i64 0))
  br label %81

81:                                               ; preds = %79, %76, %73
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 120
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %98

87:                                               ; preds = %81
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 121
  %90 = load i16, i16* %89, align 4
  %91 = zext i16 %90 to i32
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %87
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 120
  store i16 6968, i16* %95, align 2
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 121
  store i16 23434, i16* %97, align 4
  br label %98

98:                                               ; preds = %93, %87, %81
  br label %99

99:                                               ; preds = %14, %98, %56
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_rgb_to_gray(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, double noundef %2, double noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i32 %1, i32* %6, align 4
  store double %2, double* %7, align 8
  store double %3, double* %8, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %12 = load double, double* %7, align 8
  %13 = call i32 @png_fixed(%struct.png_struct_def* noundef %11, double noundef %12, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10.226, i64 0, i64 0))
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %15 = load double, double* %8, align 8
  %16 = call i32 @png_fixed(%struct.png_struct_def* noundef %14, double noundef %15, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.227, i64 0, i64 0))
  call void @png_set_rgb_to_gray_fixed(%struct.png_struct_def* noundef %9, i32 noundef %10, i32 noundef %13, i32 noundef %16)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_read_user_transform_fn(%struct.png_struct_def* noalias noundef %0, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %1, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 17
  %7 = load i32, i32* %6, align 4
  %8 = or i32 %7, 1048576
  store i32 %8, i32* %6, align 4
  %9 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %4, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 10
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %9, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_init_read_transformations(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_color_struct, align 1
  %5 = alloca %struct.png_color_struct, align 1
  %6 = alloca %struct.png_color_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.png_color_struct*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %struct.png_color_struct, align 1
  %26 = alloca %struct.png_color_struct*, align 8
  %27 = alloca i16, align 2
  %28 = alloca i16, align 2
  %29 = alloca i16, align 2
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  store i32 0, i32* %3, align 4
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 145
  %38 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %64

41:                                               ; preds = %1
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 80
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %41
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 145
  %49 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 80
  %53 = load i32, i32* %52, align 4
  %54 = call i32 @png_gamma_threshold(i32 noundef %50, i32 noundef %53)
  store i32 %54, i32* %3, align 4
  br label %63

55:                                               ; preds = %41
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 145
  %58 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = call i32 @png_reciprocal(i32 noundef %59)
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 80
  store i32 %60, i32* %62, align 4
  br label %63

63:                                               ; preds = %55, %46
  br label %84

64:                                               ; preds = %1
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 80
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %77

69:                                               ; preds = %64
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 80
  %72 = load i32, i32* %71, align 4
  %73 = call i32 @png_reciprocal(i32 noundef %72)
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 145
  %76 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %75, i32 0, i32 0
  store i32 %73, i32* %76, align 8
  br label %83

77:                                               ; preds = %64
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 145
  %80 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %79, i32 0, i32 0
  store i32 100000, i32* %80, align 8
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 80
  store i32 100000, i32* %82, align 4
  br label %83

83:                                               ; preds = %77, %69
  br label %84

84:                                               ; preds = %83, %63
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 145
  %87 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %86, i32 0, i32 4
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = or i32 %89, 1
  %91 = trunc i32 %90 to i16
  store i16 %91, i16* %87, align 2
  %92 = load i32, i32* %3, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %84
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 17
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 8192
  store i32 %98, i32* %96, align 4
  br label %104

99:                                               ; preds = %84
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 17
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, -8193
  store i32 %103, i32* %101, align 4
  br label %104

104:                                              ; preds = %99, %94
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 17
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 262144
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %127

110:                                              ; preds = %104
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 17
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 128
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %127

116:                                              ; preds = %110
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 17
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, -41943297
  store i32 %120, i32* %118, align 4
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 16
  %123 = load i32, i32* %122, align 8
  %124 = and i32 %123, -8193
  store i32 %124, i32* %122, align 8
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %125, i32 0, i32 55
  store i16 0, i16* %126, align 8
  br label %127

127:                                              ; preds = %116, %110, %104
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 80
  %130 = load i32, i32* %129, align 4
  %131 = call i32 @png_gamma_significant(i32 noundef %130)
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %142

133:                                              ; preds = %127
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 17
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, -8388609
  store i32 %137, i32* %135, align 4
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %138, i32 0, i32 16
  %140 = load i32, i32* %139, align 8
  %141 = and i32 %140, -8193
  store i32 %141, i32* %139, align 8
  br label %142

142:                                              ; preds = %133, %127
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %144 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %143, i32 0, i32 17
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, 6291456
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %142
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_colorspace_set_rgb_coefficients(%struct.png_struct_def* noundef %149)
  br label %150

150:                                              ; preds = %148, %142
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 17
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 256
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %169

156:                                              ; preds = %150
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %157, i32 0, i32 61
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %156
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %165 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %164, i32 0, i32 15
  %166 = load i32, i32* %165, align 4
  %167 = or i32 %166, 2048
  store i32 %167, i32* %165, align 4
  br label %168

168:                                              ; preds = %163, %156
  br label %220

169:                                              ; preds = %150
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %170, i32 0, i32 17
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 128
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %219

175:                                              ; preds = %169
  %176 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %176, i32 0, i32 17
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 16384
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %218

181:                                              ; preds = %175
  %182 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %183 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %182, i32 0, i32 74
  %184 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %183, i32 0, i32 1
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i32
  %187 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %187, i32 0, i32 74
  %189 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %188, i32 0, i32 2
  %190 = load i16, i16* %189, align 4
  %191 = zext i16 %190 to i32
  %192 = icmp eq i32 %186, %191
  br i1 %192, label %193, label %217

193:                                              ; preds = %181
  %194 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %195 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %194, i32 0, i32 74
  %196 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %195, i32 0, i32 1
  %197 = load i16, i16* %196, align 2
  %198 = zext i16 %197 to i32
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %200 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %199, i32 0, i32 74
  %201 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %200, i32 0, i32 3
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = icmp eq i32 %198, %203
  br i1 %204, label %205, label %217

205:                                              ; preds = %193
  %206 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %207 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %206, i32 0, i32 15
  %208 = load i32, i32* %207, align 4
  %209 = or i32 %208, 2048
  store i32 %209, i32* %207, align 4
  %210 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %211 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %210, i32 0, i32 74
  %212 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %211, i32 0, i32 1
  %213 = load i16, i16* %212, align 2
  %214 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %215 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %214, i32 0, i32 74
  %216 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %215, i32 0, i32 4
  store i16 %213, i16* %216, align 4
  br label %217

217:                                              ; preds = %205, %193, %181
  br label %218

218:                                              ; preds = %217, %175
  br label %219

219:                                              ; preds = %218, %169
  br label %220

220:                                              ; preds = %219, %168
  %221 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %222 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %221, i32 0, i32 61
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = icmp eq i32 %224, 3
  br i1 %225, label %226, label %228

226:                                              ; preds = %220
  %227 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_init_palette_transformations(%struct.png_struct_def* noundef %227)
  br label %230

228:                                              ; preds = %220
  %229 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_init_rgb_transformations(%struct.png_struct_def* noundef %229)
  br label %230

230:                                              ; preds = %228, %226
  %231 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %232 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %231, i32 0, i32 17
  %233 = load i32, i32* %232, align 4
  %234 = and i32 %233, 512
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %303

236:                                              ; preds = %230
  %237 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %238 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %237, i32 0, i32 17
  %239 = load i32, i32* %238, align 4
  %240 = and i32 %239, 128
  %241 = icmp ne i32 %240, 0
  br i1 %241, label %242, label %303

242:                                              ; preds = %236
  %243 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %244 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %243, i32 0, i32 17
  %245 = load i32, i32* %244, align 4
  %246 = and i32 %245, 256
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %303

248:                                              ; preds = %242
  %249 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %250 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %249, i32 0, i32 62
  %251 = load i8, i8* %250, align 8
  %252 = zext i8 %251 to i32
  %253 = icmp ne i32 %252, 16
  br i1 %253, label %254, label %303

254:                                              ; preds = %248
  %255 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %256 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %255, i32 0, i32 74
  %257 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %256, i32 0, i32 1
  %258 = load i16, i16* %257, align 2
  %259 = zext i16 %258 to i32
  %260 = mul i32 %259, 255
  %261 = add i32 %260, 32895
  %262 = lshr i32 %261, 16
  %263 = trunc i32 %262 to i16
  %264 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %265 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %264, i32 0, i32 74
  %266 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %265, i32 0, i32 1
  store i16 %263, i16* %266, align 2
  %267 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %268 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %267, i32 0, i32 74
  %269 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %268, i32 0, i32 2
  %270 = load i16, i16* %269, align 4
  %271 = zext i16 %270 to i32
  %272 = mul i32 %271, 255
  %273 = add i32 %272, 32895
  %274 = lshr i32 %273, 16
  %275 = trunc i32 %274 to i16
  %276 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %277 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %276, i32 0, i32 74
  %278 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %277, i32 0, i32 2
  store i16 %275, i16* %278, align 4
  %279 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %280 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %279, i32 0, i32 74
  %281 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %280, i32 0, i32 3
  %282 = load i16, i16* %281, align 2
  %283 = zext i16 %282 to i32
  %284 = mul i32 %283, 255
  %285 = add i32 %284, 32895
  %286 = lshr i32 %285, 16
  %287 = trunc i32 %286 to i16
  %288 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %289 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %288, i32 0, i32 74
  %290 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %289, i32 0, i32 3
  store i16 %287, i16* %290, align 2
  %291 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %292 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %291, i32 0, i32 74
  %293 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %292, i32 0, i32 4
  %294 = load i16, i16* %293, align 4
  %295 = zext i16 %294 to i32
  %296 = mul i32 %295, 255
  %297 = add i32 %296, 32895
  %298 = lshr i32 %297, 16
  %299 = trunc i32 %298 to i16
  %300 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %301 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %300, i32 0, i32 74
  %302 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %301, i32 0, i32 4
  store i16 %299, i16* %302, align 4
  br label %303

303:                                              ; preds = %254, %248, %242, %236, %230
  %304 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %305 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %304, i32 0, i32 17
  %306 = load i32, i32* %305, align 4
  %307 = and i32 %306, 67109888
  %308 = icmp ne i32 %307, 0
  br i1 %308, label %309, label %368

309:                                              ; preds = %303
  %310 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %311 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %310, i32 0, i32 17
  %312 = load i32, i32* %311, align 4
  %313 = and i32 %312, 128
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %315, label %368

315:                                              ; preds = %309
  %316 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %317 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %316, i32 0, i32 17
  %318 = load i32, i32* %317, align 4
  %319 = and i32 %318, 256
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %368

321:                                              ; preds = %315
  %322 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %323 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %322, i32 0, i32 62
  %324 = load i8, i8* %323, align 8
  %325 = zext i8 %324 to i32
  %326 = icmp eq i32 %325, 16
  br i1 %326, label %327, label %368

327:                                              ; preds = %321
  %328 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %329 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %328, i32 0, i32 74
  %330 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %329, i32 0, i32 1
  %331 = load i16, i16* %330, align 2
  %332 = zext i16 %331 to i32
  %333 = mul nsw i32 %332, 257
  %334 = trunc i32 %333 to i16
  %335 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %336 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %335, i32 0, i32 74
  %337 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %336, i32 0, i32 1
  store i16 %334, i16* %337, align 2
  %338 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %339 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %338, i32 0, i32 74
  %340 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %339, i32 0, i32 2
  %341 = load i16, i16* %340, align 4
  %342 = zext i16 %341 to i32
  %343 = mul nsw i32 %342, 257
  %344 = trunc i32 %343 to i16
  %345 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %346 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %345, i32 0, i32 74
  %347 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %346, i32 0, i32 2
  store i16 %344, i16* %347, align 4
  %348 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %349 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %348, i32 0, i32 74
  %350 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %349, i32 0, i32 3
  %351 = load i16, i16* %350, align 2
  %352 = zext i16 %351 to i32
  %353 = mul nsw i32 %352, 257
  %354 = trunc i32 %353 to i16
  %355 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %356 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %355, i32 0, i32 74
  %357 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %356, i32 0, i32 3
  store i16 %354, i16* %357, align 2
  %358 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %359 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %358, i32 0, i32 74
  %360 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %359, i32 0, i32 4
  %361 = load i16, i16* %360, align 4
  %362 = zext i16 %361 to i32
  %363 = mul nsw i32 %362, 257
  %364 = trunc i32 %363 to i16
  %365 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %366 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %365, i32 0, i32 74
  %367 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %366, i32 0, i32 4
  store i16 %364, i16* %367, align 4
  br label %368

368:                                              ; preds = %327, %321, %315, %309, %303
  %369 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %370 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %369, i32 0, i32 75
  %371 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %372 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %371, i32 0, i32 74
  %373 = bitcast %struct.png_color_16_struct* %370 to i8*
  %374 = bitcast %struct.png_color_16_struct* %372 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %373, i8* align 4 %374, i64 10, i1 false)
  %375 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %376 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %375, i32 0, i32 17
  %377 = load i32, i32* %376, align 4
  %378 = and i32 %377, 8192
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %442, label %380

380:                                              ; preds = %368
  %381 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %382 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %381, i32 0, i32 17
  %383 = load i32, i32* %382, align 4
  %384 = and i32 %383, 6291456
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %386, label %399

386:                                              ; preds = %380
  %387 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %388 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %387, i32 0, i32 145
  %389 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %388, i32 0, i32 0
  %390 = load i32, i32* %389, align 8
  %391 = call i32 @png_gamma_significant(i32 noundef %390)
  %392 = icmp ne i32 %391, 0
  br i1 %392, label %442, label %393

393:                                              ; preds = %386
  %394 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %395 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %394, i32 0, i32 80
  %396 = load i32, i32* %395, align 4
  %397 = call i32 @png_gamma_significant(i32 noundef %396)
  %398 = icmp ne i32 %397, 0
  br i1 %398, label %442, label %399

399:                                              ; preds = %393, %380
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %401 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %400, i32 0, i32 17
  %402 = load i32, i32* %401, align 4
  %403 = and i32 %402, 128
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %405, label %430

405:                                              ; preds = %399
  %406 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %407 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %406, i32 0, i32 145
  %408 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %407, i32 0, i32 0
  %409 = load i32, i32* %408, align 8
  %410 = call i32 @png_gamma_significant(i32 noundef %409)
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %442, label %412

412:                                              ; preds = %405
  %413 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %414 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %413, i32 0, i32 80
  %415 = load i32, i32* %414, align 4
  %416 = call i32 @png_gamma_significant(i32 noundef %415)
  %417 = icmp ne i32 %416, 0
  br i1 %417, label %442, label %418

418:                                              ; preds = %412
  %419 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %420 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %419, i32 0, i32 72
  %421 = load i8, i8* %420, align 4
  %422 = zext i8 %421 to i32
  %423 = icmp eq i32 %422, 3
  br i1 %423, label %424, label %430

424:                                              ; preds = %418
  %425 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %426 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %425, i32 0, i32 73
  %427 = load i32, i32* %426, align 8
  %428 = call i32 @png_gamma_significant(i32 noundef %427)
  %429 = icmp ne i32 %428, 0
  br i1 %429, label %442, label %430

430:                                              ; preds = %424, %418, %399
  %431 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %432 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %431, i32 0, i32 17
  %433 = load i32, i32* %432, align 4
  %434 = and i32 %433, 8388608
  %435 = icmp ne i32 %434, 0
  br i1 %435, label %436, label %1287

436:                                              ; preds = %430
  %437 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %438 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %437, i32 0, i32 80
  %439 = load i32, i32* %438, align 4
  %440 = call i32 @png_gamma_significant(i32 noundef %439)
  %441 = icmp ne i32 %440, 0
  br i1 %441, label %442, label %1287

442:                                              ; preds = %436, %424, %412, %405, %393, %386, %368
  %443 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %444 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %445 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %444, i32 0, i32 62
  %446 = load i8, i8* %445, align 8
  %447 = zext i8 %446 to i32
  call void @png_build_gamma_table(%struct.png_struct_def* noundef %443, i32 noundef %447)
  %448 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %449 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %448, i32 0, i32 17
  %450 = load i32, i32* %449, align 4
  %451 = and i32 %450, 128
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %1195

453:                                              ; preds = %442
  %454 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %455 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %454, i32 0, i32 17
  %456 = load i32, i32* %455, align 4
  %457 = and i32 %456, 6291456
  %458 = icmp ne i32 %457, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %453
  %460 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_warning(%struct.png_struct_def* noundef %460, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.12.228, i64 0, i64 0))
  br label %461

461:                                              ; preds = %459, %453
  %462 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %463 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %462, i32 0, i32 61
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i32
  %466 = icmp eq i32 %465, 3
  %467 = zext i1 %466 to i32
  %468 = icmp ne i32 %467, 0
  br i1 %468, label %469, label %982

469:                                              ; preds = %461
  %470 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %471 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %470, i32 0, i32 52
  %472 = load %struct.png_color_struct*, %struct.png_color_struct** %471, align 8
  store %struct.png_color_struct* %472, %struct.png_color_struct** %6, align 8
  %473 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %474 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %473, i32 0, i32 53
  %475 = load i16, i16* %474, align 8
  %476 = zext i16 %475 to i32
  store i32 %476, i32* %7, align 4
  %477 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %478 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %477, i32 0, i32 72
  %479 = load i8, i8* %478, align 4
  %480 = zext i8 %479 to i32
  %481 = icmp eq i32 %480, 2
  br i1 %481, label %482, label %549

482:                                              ; preds = %469
  %483 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %484 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %483, i32 0, i32 81
  %485 = load i8*, i8** %484, align 8
  %486 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %487 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %486, i32 0, i32 74
  %488 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %487, i32 0, i32 1
  %489 = load i16, i16* %488, align 2
  %490 = zext i16 %489 to i64
  %491 = getelementptr inbounds i8, i8* %485, i64 %490
  %492 = load i8, i8* %491, align 1
  %493 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 0
  store i8 %492, i8* %493, align 1
  %494 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %495 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %494, i32 0, i32 81
  %496 = load i8*, i8** %495, align 8
  %497 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %498 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %497, i32 0, i32 74
  %499 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %498, i32 0, i32 2
  %500 = load i16, i16* %499, align 4
  %501 = zext i16 %500 to i64
  %502 = getelementptr inbounds i8, i8* %496, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 1
  store i8 %503, i8* %504, align 1
  %505 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %506 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %505, i32 0, i32 81
  %507 = load i8*, i8** %506, align 8
  %508 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %509 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %508, i32 0, i32 74
  %510 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %509, i32 0, i32 3
  %511 = load i16, i16* %510, align 2
  %512 = zext i16 %511 to i64
  %513 = getelementptr inbounds i8, i8* %507, i64 %512
  %514 = load i8, i8* %513, align 1
  %515 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 2
  store i8 %514, i8* %515, align 1
  %516 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %517 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %516, i32 0, i32 84
  %518 = load i8*, i8** %517, align 8
  %519 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %520 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %519, i32 0, i32 74
  %521 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %520, i32 0, i32 1
  %522 = load i16, i16* %521, align 2
  %523 = zext i16 %522 to i64
  %524 = getelementptr inbounds i8, i8* %518, i64 %523
  %525 = load i8, i8* %524, align 1
  %526 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 0
  store i8 %525, i8* %526, align 1
  %527 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %528 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %527, i32 0, i32 84
  %529 = load i8*, i8** %528, align 8
  %530 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %531 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %530, i32 0, i32 74
  %532 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %531, i32 0, i32 2
  %533 = load i16, i16* %532, align 4
  %534 = zext i16 %533 to i64
  %535 = getelementptr inbounds i8, i8* %529, i64 %534
  %536 = load i8, i8* %535, align 1
  %537 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 1
  store i8 %536, i8* %537, align 1
  %538 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %539 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %538, i32 0, i32 84
  %540 = load i8*, i8** %539, align 8
  %541 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %542 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %541, i32 0, i32 74
  %543 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %542, i32 0, i32 3
  %544 = load i16, i16* %543, align 2
  %545 = zext i16 %544 to i64
  %546 = getelementptr inbounds i8, i8* %540, i64 %545
  %547 = load i8, i8* %546, align 1
  %548 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 2
  store i8 %547, i8* %548, align 1
  br label %682

549:                                              ; preds = %469
  %550 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %551 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %550, i32 0, i32 72
  %552 = load i8, i8* %551, align 4
  %553 = zext i8 %552 to i32
  switch i32 %553, label %584 [
    i32 1, label %554
    i32 2, label %558
    i32 3, label %572
  ]

554:                                              ; preds = %549
  %555 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %556 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %555, i32 0, i32 80
  %557 = load i32, i32* %556, align 4
  store i32 %557, i32* %9, align 4
  store i32 100000, i32* %10, align 4
  br label %585

558:                                              ; preds = %549
  %559 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %560 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %559, i32 0, i32 145
  %561 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %560, i32 0, i32 0
  %562 = load i32, i32* %561, align 8
  %563 = call i32 @png_reciprocal(i32 noundef %562)
  store i32 %563, i32* %9, align 4
  %564 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %565 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %564, i32 0, i32 145
  %566 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %565, i32 0, i32 0
  %567 = load i32, i32* %566, align 8
  %568 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %569 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %568, i32 0, i32 80
  %570 = load i32, i32* %569, align 4
  %571 = call i32 @png_reciprocal2(i32 noundef %567, i32 noundef %570)
  store i32 %571, i32* %10, align 4
  br label %585

572:                                              ; preds = %549
  %573 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %574 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %573, i32 0, i32 73
  %575 = load i32, i32* %574, align 8
  %576 = call i32 @png_reciprocal(i32 noundef %575)
  store i32 %576, i32* %9, align 4
  %577 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %578 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %577, i32 0, i32 73
  %579 = load i32, i32* %578, align 8
  %580 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %581 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %580, i32 0, i32 80
  %582 = load i32, i32* %581, align 4
  %583 = call i32 @png_reciprocal2(i32 noundef %579, i32 noundef %582)
  store i32 %583, i32* %10, align 4
  br label %585

584:                                              ; preds = %549
  store i32 100000, i32* %9, align 4
  store i32 100000, i32* %10, align 4
  br label %585

585:                                              ; preds = %584, %572, %558, %554
  %586 = load i32, i32* %10, align 4
  %587 = call i32 @png_gamma_significant(i32 noundef %586)
  %588 = icmp ne i32 %587, 0
  br i1 %588, label %589, label %614

589:                                              ; preds = %585
  %590 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %591 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %590, i32 0, i32 74
  %592 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %591, i32 0, i32 1
  %593 = load i16, i16* %592, align 2
  %594 = zext i16 %593 to i32
  %595 = load i32, i32* %10, align 4
  %596 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %594, i32 noundef %595)
  %597 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 0
  store i8 %596, i8* %597, align 1
  %598 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %599 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %598, i32 0, i32 74
  %600 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %599, i32 0, i32 2
  %601 = load i16, i16* %600, align 4
  %602 = zext i16 %601 to i32
  %603 = load i32, i32* %10, align 4
  %604 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %602, i32 noundef %603)
  %605 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 1
  store i8 %604, i8* %605, align 1
  %606 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %607 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %606, i32 0, i32 74
  %608 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %607, i32 0, i32 3
  %609 = load i16, i16* %608, align 2
  %610 = zext i16 %609 to i32
  %611 = load i32, i32* %10, align 4
  %612 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %610, i32 noundef %611)
  %613 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 2
  store i8 %612, i8* %613, align 1
  br label %633

614:                                              ; preds = %585
  %615 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %616 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %615, i32 0, i32 74
  %617 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %616, i32 0, i32 1
  %618 = load i16, i16* %617, align 2
  %619 = trunc i16 %618 to i8
  %620 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 0
  store i8 %619, i8* %620, align 1
  %621 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %622 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %621, i32 0, i32 74
  %623 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %622, i32 0, i32 2
  %624 = load i16, i16* %623, align 4
  %625 = trunc i16 %624 to i8
  %626 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 1
  store i8 %625, i8* %626, align 1
  %627 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %628 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %627, i32 0, i32 74
  %629 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %628, i32 0, i32 3
  %630 = load i16, i16* %629, align 2
  %631 = trunc i16 %630 to i8
  %632 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %4, i32 0, i32 2
  store i8 %631, i8* %632, align 1
  br label %633

633:                                              ; preds = %614, %589
  %634 = load i32, i32* %9, align 4
  %635 = call i32 @png_gamma_significant(i32 noundef %634)
  %636 = icmp ne i32 %635, 0
  br i1 %636, label %637, label %662

637:                                              ; preds = %633
  %638 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %639 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %638, i32 0, i32 74
  %640 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %639, i32 0, i32 1
  %641 = load i16, i16* %640, align 2
  %642 = zext i16 %641 to i32
  %643 = load i32, i32* %9, align 4
  %644 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %642, i32 noundef %643)
  %645 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 0
  store i8 %644, i8* %645, align 1
  %646 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %647 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %646, i32 0, i32 74
  %648 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %647, i32 0, i32 2
  %649 = load i16, i16* %648, align 4
  %650 = zext i16 %649 to i32
  %651 = load i32, i32* %9, align 4
  %652 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %650, i32 noundef %651)
  %653 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 1
  store i8 %652, i8* %653, align 1
  %654 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %655 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %654, i32 0, i32 74
  %656 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %655, i32 0, i32 3
  %657 = load i16, i16* %656, align 2
  %658 = zext i16 %657 to i32
  %659 = load i32, i32* %9, align 4
  %660 = call zeroext i8 @png_gamma_8bit_correct(i32 noundef %658, i32 noundef %659)
  %661 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 2
  store i8 %660, i8* %661, align 1
  br label %681

662:                                              ; preds = %633
  %663 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %664 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %663, i32 0, i32 74
  %665 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %664, i32 0, i32 1
  %666 = load i16, i16* %665, align 2
  %667 = trunc i16 %666 to i8
  %668 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 0
  store i8 %667, i8* %668, align 1
  %669 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %670 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %669, i32 0, i32 74
  %671 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %670, i32 0, i32 2
  %672 = load i16, i16* %671, align 4
  %673 = trunc i16 %672 to i8
  %674 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 1
  store i8 %673, i8* %674, align 1
  %675 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %676 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %675, i32 0, i32 74
  %677 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %676, i32 0, i32 3
  %678 = load i16, i16* %677, align 2
  %679 = trunc i16 %678 to i8
  %680 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 2
  store i8 %679, i8* %680, align 1
  br label %681

681:                                              ; preds = %662, %637
  br label %682

682:                                              ; preds = %681, %482
  store i32 0, i32* %8, align 4
  br label %683

683:                                              ; preds = %974, %682
  %684 = load i32, i32* %8, align 4
  %685 = load i32, i32* %7, align 4
  %686 = icmp slt i32 %684, %685
  br i1 %686, label %687, label %977

687:                                              ; preds = %683
  %688 = load i32, i32* %8, align 4
  %689 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %690 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %689, i32 0, i32 55
  %691 = load i16, i16* %690, align 8
  %692 = zext i16 %691 to i32
  %693 = icmp slt i32 %688, %692
  br i1 %693, label %694, label %921

694:                                              ; preds = %687
  %695 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %696 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %695, i32 0, i32 89
  %697 = load i8*, i8** %696, align 8
  %698 = load i32, i32* %8, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i8, i8* %697, i64 %699
  %701 = load i8, i8* %700, align 1
  %702 = zext i8 %701 to i32
  %703 = icmp ne i32 %702, 255
  br i1 %703, label %704, label %921

704:                                              ; preds = %694
  %705 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %706 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %705, i32 0, i32 89
  %707 = load i8*, i8** %706, align 8
  %708 = load i32, i32* %8, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds i8, i8* %707, i64 %709
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %721

714:                                              ; preds = %704
  %715 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %716 = load i32, i32* %8, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %715, i64 %717
  %719 = bitcast %struct.png_color_struct* %718 to i8*
  %720 = bitcast %struct.png_color_struct* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %719, i8* align 1 %720, i64 3, i1 false)
  br label %920

721:                                              ; preds = %704
  %722 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %723 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %722, i32 0, i32 84
  %724 = load i8*, i8** %723, align 8
  %725 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %726 = load i32, i32* %8, align 4
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %725, i64 %727
  %729 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %728, i32 0, i32 0
  %730 = load i8, i8* %729, align 1
  %731 = zext i8 %730 to i64
  %732 = getelementptr inbounds i8, i8* %724, i64 %731
  %733 = load i8, i8* %732, align 1
  store i8 %733, i8* %11, align 1
  %734 = load i8, i8* %11, align 1
  %735 = zext i8 %734 to i16
  %736 = zext i16 %735 to i32
  %737 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %738 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %737, i32 0, i32 89
  %739 = load i8*, i8** %738, align 8
  %740 = load i32, i32* %8, align 4
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds i8, i8* %739, i64 %741
  %743 = load i8, i8* %742, align 1
  %744 = zext i8 %743 to i16
  %745 = zext i16 %744 to i32
  %746 = mul nsw i32 %736, %745
  %747 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 0
  %748 = load i8, i8* %747, align 1
  %749 = zext i8 %748 to i16
  %750 = zext i16 %749 to i32
  %751 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %752 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %751, i32 0, i32 89
  %753 = load i8*, i8** %752, align 8
  %754 = load i32, i32* %8, align 4
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds i8, i8* %753, i64 %755
  %757 = load i8, i8* %756, align 1
  %758 = zext i8 %757 to i16
  %759 = zext i16 %758 to i32
  %760 = sub nsw i32 255, %759
  %761 = trunc i32 %760 to i16
  %762 = zext i16 %761 to i32
  %763 = mul nsw i32 %750, %762
  %764 = add nsw i32 %746, %763
  %765 = add nsw i32 %764, 128
  %766 = trunc i32 %765 to i16
  store i16 %766, i16* %13, align 2
  %767 = load i16, i16* %13, align 2
  %768 = zext i16 %767 to i32
  %769 = load i16, i16* %13, align 2
  %770 = zext i16 %769 to i32
  %771 = ashr i32 %770, 8
  %772 = add nsw i32 %768, %771
  %773 = ashr i32 %772, 8
  %774 = and i32 %773, 255
  %775 = trunc i32 %774 to i8
  store i8 %775, i8* %12, align 1
  %776 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %777 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %776, i32 0, i32 83
  %778 = load i8*, i8** %777, align 8
  %779 = load i8, i8* %12, align 1
  %780 = zext i8 %779 to i64
  %781 = getelementptr inbounds i8, i8* %778, i64 %780
  %782 = load i8, i8* %781, align 1
  %783 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %784 = load i32, i32* %8, align 4
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %783, i64 %785
  %787 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %786, i32 0, i32 0
  store i8 %782, i8* %787, align 1
  %788 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %789 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %788, i32 0, i32 84
  %790 = load i8*, i8** %789, align 8
  %791 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %792 = load i32, i32* %8, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %791, i64 %793
  %795 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %794, i32 0, i32 1
  %796 = load i8, i8* %795, align 1
  %797 = zext i8 %796 to i64
  %798 = getelementptr inbounds i8, i8* %790, i64 %797
  %799 = load i8, i8* %798, align 1
  store i8 %799, i8* %11, align 1
  %800 = load i8, i8* %11, align 1
  %801 = zext i8 %800 to i16
  %802 = zext i16 %801 to i32
  %803 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %804 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %803, i32 0, i32 89
  %805 = load i8*, i8** %804, align 8
  %806 = load i32, i32* %8, align 4
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds i8, i8* %805, i64 %807
  %809 = load i8, i8* %808, align 1
  %810 = zext i8 %809 to i16
  %811 = zext i16 %810 to i32
  %812 = mul nsw i32 %802, %811
  %813 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 1
  %814 = load i8, i8* %813, align 1
  %815 = zext i8 %814 to i16
  %816 = zext i16 %815 to i32
  %817 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %818 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %817, i32 0, i32 89
  %819 = load i8*, i8** %818, align 8
  %820 = load i32, i32* %8, align 4
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds i8, i8* %819, i64 %821
  %823 = load i8, i8* %822, align 1
  %824 = zext i8 %823 to i16
  %825 = zext i16 %824 to i32
  %826 = sub nsw i32 255, %825
  %827 = trunc i32 %826 to i16
  %828 = zext i16 %827 to i32
  %829 = mul nsw i32 %816, %828
  %830 = add nsw i32 %812, %829
  %831 = add nsw i32 %830, 128
  %832 = trunc i32 %831 to i16
  store i16 %832, i16* %14, align 2
  %833 = load i16, i16* %14, align 2
  %834 = zext i16 %833 to i32
  %835 = load i16, i16* %14, align 2
  %836 = zext i16 %835 to i32
  %837 = ashr i32 %836, 8
  %838 = add nsw i32 %834, %837
  %839 = ashr i32 %838, 8
  %840 = and i32 %839, 255
  %841 = trunc i32 %840 to i8
  store i8 %841, i8* %12, align 1
  %842 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %843 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %842, i32 0, i32 83
  %844 = load i8*, i8** %843, align 8
  %845 = load i8, i8* %12, align 1
  %846 = zext i8 %845 to i64
  %847 = getelementptr inbounds i8, i8* %844, i64 %846
  %848 = load i8, i8* %847, align 1
  %849 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %850 = load i32, i32* %8, align 4
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %849, i64 %851
  %853 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %852, i32 0, i32 1
  store i8 %848, i8* %853, align 1
  %854 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %855 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %854, i32 0, i32 84
  %856 = load i8*, i8** %855, align 8
  %857 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %858 = load i32, i32* %8, align 4
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %857, i64 %859
  %861 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %860, i32 0, i32 2
  %862 = load i8, i8* %861, align 1
  %863 = zext i8 %862 to i64
  %864 = getelementptr inbounds i8, i8* %856, i64 %863
  %865 = load i8, i8* %864, align 1
  store i8 %865, i8* %11, align 1
  %866 = load i8, i8* %11, align 1
  %867 = zext i8 %866 to i16
  %868 = zext i16 %867 to i32
  %869 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %870 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %869, i32 0, i32 89
  %871 = load i8*, i8** %870, align 8
  %872 = load i32, i32* %8, align 4
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds i8, i8* %871, i64 %873
  %875 = load i8, i8* %874, align 1
  %876 = zext i8 %875 to i16
  %877 = zext i16 %876 to i32
  %878 = mul nsw i32 %868, %877
  %879 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i32 0, i32 2
  %880 = load i8, i8* %879, align 1
  %881 = zext i8 %880 to i16
  %882 = zext i16 %881 to i32
  %883 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %884 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %883, i32 0, i32 89
  %885 = load i8*, i8** %884, align 8
  %886 = load i32, i32* %8, align 4
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds i8, i8* %885, i64 %887
  %889 = load i8, i8* %888, align 1
  %890 = zext i8 %889 to i16
  %891 = zext i16 %890 to i32
  %892 = sub nsw i32 255, %891
  %893 = trunc i32 %892 to i16
  %894 = zext i16 %893 to i32
  %895 = mul nsw i32 %882, %894
  %896 = add nsw i32 %878, %895
  %897 = add nsw i32 %896, 128
  %898 = trunc i32 %897 to i16
  store i16 %898, i16* %15, align 2
  %899 = load i16, i16* %15, align 2
  %900 = zext i16 %899 to i32
  %901 = load i16, i16* %15, align 2
  %902 = zext i16 %901 to i32
  %903 = ashr i32 %902, 8
  %904 = add nsw i32 %900, %903
  %905 = ashr i32 %904, 8
  %906 = and i32 %905, 255
  %907 = trunc i32 %906 to i8
  store i8 %907, i8* %12, align 1
  %908 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %909 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %908, i32 0, i32 83
  %910 = load i8*, i8** %909, align 8
  %911 = load i8, i8* %12, align 1
  %912 = zext i8 %911 to i64
  %913 = getelementptr inbounds i8, i8* %910, i64 %912
  %914 = load i8, i8* %913, align 1
  %915 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %916 = load i32, i32* %8, align 4
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %915, i64 %917
  %919 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %918, i32 0, i32 2
  store i8 %914, i8* %919, align 1
  br label %920

920:                                              ; preds = %721, %714
  br label %973

921:                                              ; preds = %694, %687
  %922 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %923 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %922, i32 0, i32 81
  %924 = load i8*, i8** %923, align 8
  %925 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %926 = load i32, i32* %8, align 4
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %925, i64 %927
  %929 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %928, i32 0, i32 0
  %930 = load i8, i8* %929, align 1
  %931 = zext i8 %930 to i64
  %932 = getelementptr inbounds i8, i8* %924, i64 %931
  %933 = load i8, i8* %932, align 1
  %934 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %935 = load i32, i32* %8, align 4
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %934, i64 %936
  %938 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %937, i32 0, i32 0
  store i8 %933, i8* %938, align 1
  %939 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %940 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %939, i32 0, i32 81
  %941 = load i8*, i8** %940, align 8
  %942 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %943 = load i32, i32* %8, align 4
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %942, i64 %944
  %946 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %945, i32 0, i32 1
  %947 = load i8, i8* %946, align 1
  %948 = zext i8 %947 to i64
  %949 = getelementptr inbounds i8, i8* %941, i64 %948
  %950 = load i8, i8* %949, align 1
  %951 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %952 = load i32, i32* %8, align 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %951, i64 %953
  %955 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %954, i32 0, i32 1
  store i8 %950, i8* %955, align 1
  %956 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %957 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %956, i32 0, i32 81
  %958 = load i8*, i8** %957, align 8
  %959 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %960 = load i32, i32* %8, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %959, i64 %961
  %963 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %962, i32 0, i32 2
  %964 = load i8, i8* %963, align 1
  %965 = zext i8 %964 to i64
  %966 = getelementptr inbounds i8, i8* %958, i64 %965
  %967 = load i8, i8* %966, align 1
  %968 = load %struct.png_color_struct*, %struct.png_color_struct** %6, align 8
  %969 = load i32, i32* %8, align 4
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %968, i64 %970
  %972 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %971, i32 0, i32 2
  store i8 %967, i8* %972, align 1
  br label %973

973:                                              ; preds = %921, %920
  br label %974

974:                                              ; preds = %973
  %975 = load i32, i32* %8, align 4
  %976 = add nsw i32 %975, 1
  store i32 %976, i32* %8, align 4
  br label %683, !llvm.loop !143

977:                                              ; preds = %683
  %978 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %979 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %978, i32 0, i32 17
  %980 = load i32, i32* %979, align 4
  %981 = and i32 %980, -8321
  store i32 %981, i32* %979, align 4
  br label %1194

982:                                              ; preds = %461
  store i32 100000, i32* %18, align 4
  store i32 100000, i32* %19, align 4
  %983 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %984 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %983, i32 0, i32 72
  %985 = load i8, i8* %984, align 4
  %986 = zext i8 %985 to i32
  switch i32 %986, label %1017 [
    i32 1, label %987
    i32 2, label %991
    i32 3, label %1005
  ]

987:                                              ; preds = %982
  %988 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %989 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %988, i32 0, i32 80
  %990 = load i32, i32* %989, align 4
  store i32 %990, i32* %18, align 4
  br label %1019

991:                                              ; preds = %982
  %992 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %993 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %992, i32 0, i32 145
  %994 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %993, i32 0, i32 0
  %995 = load i32, i32* %994, align 8
  %996 = call i32 @png_reciprocal(i32 noundef %995)
  store i32 %996, i32* %18, align 4
  %997 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %998 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %997, i32 0, i32 145
  %999 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %998, i32 0, i32 0
  %1000 = load i32, i32* %999, align 8
  %1001 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1002 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1001, i32 0, i32 80
  %1003 = load i32, i32* %1002, align 4
  %1004 = call i32 @png_reciprocal2(i32 noundef %1000, i32 noundef %1003)
  store i32 %1004, i32* %19, align 4
  br label %1019

1005:                                             ; preds = %982
  %1006 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1007 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1006, i32 0, i32 73
  %1008 = load i32, i32* %1007, align 8
  %1009 = call i32 @png_reciprocal(i32 noundef %1008)
  store i32 %1009, i32* %18, align 4
  %1010 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1011 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1010, i32 0, i32 73
  %1012 = load i32, i32* %1011, align 8
  %1013 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1014 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1013, i32 0, i32 80
  %1015 = load i32, i32* %1014, align 4
  %1016 = call i32 @png_reciprocal2(i32 noundef %1012, i32 noundef %1015)
  store i32 %1016, i32* %19, align 4
  br label %1019

1017:                                             ; preds = %982
  %1018 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %1018, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.229, i64 0, i64 0)) #13
  unreachable

1019:                                             ; preds = %1005, %991, %987
  %1020 = load i32, i32* %18, align 4
  %1021 = call i32 @png_gamma_significant(i32 noundef %1020)
  store i32 %1021, i32* %17, align 4
  %1022 = load i32, i32* %19, align 4
  %1023 = call i32 @png_gamma_significant(i32 noundef %1022)
  store i32 %1023, i32* %16, align 4
  %1024 = load i32, i32* %17, align 4
  %1025 = icmp ne i32 %1024, 0
  br i1 %1025, label %1026, label %1038

1026:                                             ; preds = %1019
  %1027 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1028 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1029 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1028, i32 0, i32 74
  %1030 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1029, i32 0, i32 4
  %1031 = load i16, i16* %1030, align 4
  %1032 = zext i16 %1031 to i32
  %1033 = load i32, i32* %18, align 4
  %1034 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1027, i32 noundef %1032, i32 noundef %1033)
  %1035 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1036 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1035, i32 0, i32 75
  %1037 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1036, i32 0, i32 4
  store i16 %1034, i16* %1037, align 2
  br label %1038

1038:                                             ; preds = %1026, %1019
  %1039 = load i32, i32* %16, align 4
  %1040 = icmp ne i32 %1039, 0
  br i1 %1040, label %1041, label %1053

1041:                                             ; preds = %1038
  %1042 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1043 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1044 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1043, i32 0, i32 74
  %1045 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1044, i32 0, i32 4
  %1046 = load i16, i16* %1045, align 4
  %1047 = zext i16 %1046 to i32
  %1048 = load i32, i32* %19, align 4
  %1049 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1042, i32 noundef %1047, i32 noundef %1048)
  %1050 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1051 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1050, i32 0, i32 74
  %1052 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1051, i32 0, i32 4
  store i16 %1049, i16* %1052, align 4
  br label %1053

1053:                                             ; preds = %1041, %1038
  %1054 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1055 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1054, i32 0, i32 74
  %1056 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1055, i32 0, i32 1
  %1057 = load i16, i16* %1056, align 2
  %1058 = zext i16 %1057 to i32
  %1059 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1060 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1059, i32 0, i32 74
  %1061 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1060, i32 0, i32 2
  %1062 = load i16, i16* %1061, align 4
  %1063 = zext i16 %1062 to i32
  %1064 = icmp ne i32 %1058, %1063
  br i1 %1064, label %1089, label %1065

1065:                                             ; preds = %1053
  %1066 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1067 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1066, i32 0, i32 74
  %1068 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1067, i32 0, i32 1
  %1069 = load i16, i16* %1068, align 2
  %1070 = zext i16 %1069 to i32
  %1071 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1072 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1071, i32 0, i32 74
  %1073 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1072, i32 0, i32 3
  %1074 = load i16, i16* %1073, align 2
  %1075 = zext i16 %1074 to i32
  %1076 = icmp ne i32 %1070, %1075
  br i1 %1076, label %1089, label %1077

1077:                                             ; preds = %1065
  %1078 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1079 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1078, i32 0, i32 74
  %1080 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1079, i32 0, i32 1
  %1081 = load i16, i16* %1080, align 2
  %1082 = zext i16 %1081 to i32
  %1083 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1084 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1083, i32 0, i32 74
  %1085 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1084, i32 0, i32 4
  %1086 = load i16, i16* %1085, align 4
  %1087 = zext i16 %1086 to i32
  %1088 = icmp ne i32 %1082, %1087
  br i1 %1088, label %1089, label %1164

1089:                                             ; preds = %1077, %1065, %1053
  %1090 = load i32, i32* %17, align 4
  %1091 = icmp ne i32 %1090, 0
  br i1 %1091, label %1092, label %1126

1092:                                             ; preds = %1089
  %1093 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1094 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1095 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1094, i32 0, i32 74
  %1096 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1095, i32 0, i32 1
  %1097 = load i16, i16* %1096, align 2
  %1098 = zext i16 %1097 to i32
  %1099 = load i32, i32* %18, align 4
  %1100 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1093, i32 noundef %1098, i32 noundef %1099)
  %1101 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1101, i32 0, i32 75
  %1103 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1102, i32 0, i32 1
  store i16 %1100, i16* %1103, align 2
  %1104 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1105 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1105, i32 0, i32 74
  %1107 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1106, i32 0, i32 2
  %1108 = load i16, i16* %1107, align 4
  %1109 = zext i16 %1108 to i32
  %1110 = load i32, i32* %18, align 4
  %1111 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1104, i32 noundef %1109, i32 noundef %1110)
  %1112 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1112, i32 0, i32 75
  %1114 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1113, i32 0, i32 2
  store i16 %1111, i16* %1114, align 2
  %1115 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1116 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1116, i32 0, i32 74
  %1118 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1117, i32 0, i32 3
  %1119 = load i16, i16* %1118, align 2
  %1120 = zext i16 %1119 to i32
  %1121 = load i32, i32* %18, align 4
  %1122 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1115, i32 noundef %1120, i32 noundef %1121)
  %1123 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1124 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1123, i32 0, i32 75
  %1125 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1124, i32 0, i32 3
  store i16 %1122, i16* %1125, align 2
  br label %1126

1126:                                             ; preds = %1092, %1089
  %1127 = load i32, i32* %16, align 4
  %1128 = icmp ne i32 %1127, 0
  br i1 %1128, label %1129, label %1163

1129:                                             ; preds = %1126
  %1130 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1131 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1131, i32 0, i32 74
  %1133 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1132, i32 0, i32 1
  %1134 = load i16, i16* %1133, align 2
  %1135 = zext i16 %1134 to i32
  %1136 = load i32, i32* %19, align 4
  %1137 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1130, i32 noundef %1135, i32 noundef %1136)
  %1138 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1138, i32 0, i32 74
  %1140 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1139, i32 0, i32 1
  store i16 %1137, i16* %1140, align 2
  %1141 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1142 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1143 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1142, i32 0, i32 74
  %1144 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1143, i32 0, i32 2
  %1145 = load i16, i16* %1144, align 4
  %1146 = zext i16 %1145 to i32
  %1147 = load i32, i32* %19, align 4
  %1148 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1141, i32 noundef %1146, i32 noundef %1147)
  %1149 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1149, i32 0, i32 74
  %1151 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1150, i32 0, i32 2
  store i16 %1148, i16* %1151, align 4
  %1152 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1153 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1154 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1153, i32 0, i32 74
  %1155 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1154, i32 0, i32 3
  %1156 = load i16, i16* %1155, align 2
  %1157 = zext i16 %1156 to i32
  %1158 = load i32, i32* %19, align 4
  %1159 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* noundef %1152, i32 noundef %1157, i32 noundef %1158)
  %1160 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1160, i32 0, i32 74
  %1162 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1161, i32 0, i32 3
  store i16 %1159, i16* %1162, align 2
  br label %1163

1163:                                             ; preds = %1129, %1126
  br label %1191

1164:                                             ; preds = %1077
  %1165 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1165, i32 0, i32 75
  %1167 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1166, i32 0, i32 4
  %1168 = load i16, i16* %1167, align 2
  %1169 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1169, i32 0, i32 75
  %1171 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1170, i32 0, i32 3
  store i16 %1168, i16* %1171, align 2
  %1172 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1173 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1172, i32 0, i32 75
  %1174 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1173, i32 0, i32 2
  store i16 %1168, i16* %1174, align 2
  %1175 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1175, i32 0, i32 75
  %1177 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1176, i32 0, i32 1
  store i16 %1168, i16* %1177, align 2
  %1178 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1179 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1178, i32 0, i32 74
  %1180 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1179, i32 0, i32 4
  %1181 = load i16, i16* %1180, align 4
  %1182 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1183 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1182, i32 0, i32 74
  %1184 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1183, i32 0, i32 3
  store i16 %1181, i16* %1184, align 2
  %1185 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1186 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1185, i32 0, i32 74
  %1187 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1186, i32 0, i32 2
  store i16 %1181, i16* %1187, align 4
  %1188 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1189 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1188, i32 0, i32 74
  %1190 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1189, i32 0, i32 1
  store i16 %1181, i16* %1190, align 2
  br label %1191

1191:                                             ; preds = %1164, %1163
  %1192 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1193 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1192, i32 0, i32 72
  store i8 1, i8* %1193, align 4
  br label %1194

1194:                                             ; preds = %1191, %977
  br label %1286

1195:                                             ; preds = %442
  %1196 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1197 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1196, i32 0, i32 61
  %1198 = load i8, i8* %1197, align 1
  %1199 = zext i8 %1198 to i32
  %1200 = icmp eq i32 %1199, 3
  br i1 %1200, label %1201, label %1285

1201:                                             ; preds = %1195
  %1202 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1203 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1202, i32 0, i32 17
  %1204 = load i32, i32* %1203, align 4
  %1205 = and i32 %1204, 4096
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1213, label %1207

1207:                                             ; preds = %1201
  %1208 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1208, i32 0, i32 17
  %1210 = load i32, i32* %1209, align 4
  %1211 = and i32 %1210, 6291456
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1285

1213:                                             ; preds = %1207, %1201
  %1214 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1215 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1214, i32 0, i32 52
  %1216 = load %struct.png_color_struct*, %struct.png_color_struct** %1215, align 8
  store %struct.png_color_struct* %1216, %struct.png_color_struct** %20, align 8
  %1217 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1218 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1217, i32 0, i32 53
  %1219 = load i16, i16* %1218, align 8
  %1220 = zext i16 %1219 to i32
  store i32 %1220, i32* %21, align 4
  store i32 0, i32* %22, align 4
  br label %1221

1221:                                             ; preds = %1277, %1213
  %1222 = load i32, i32* %22, align 4
  %1223 = load i32, i32* %21, align 4
  %1224 = icmp slt i32 %1222, %1223
  br i1 %1224, label %1225, label %1280

1225:                                             ; preds = %1221
  %1226 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1227 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1226, i32 0, i32 81
  %1228 = load i8*, i8** %1227, align 8
  %1229 = load %struct.png_color_struct*, %struct.png_color_struct** %20, align 8
  %1230 = load i32, i32* %22, align 4
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1229, i64 %1231
  %1233 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1232, i32 0, i32 0
  %1234 = load i8, i8* %1233, align 1
  %1235 = zext i8 %1234 to i64
  %1236 = getelementptr inbounds i8, i8* %1228, i64 %1235
  %1237 = load i8, i8* %1236, align 1
  %1238 = load %struct.png_color_struct*, %struct.png_color_struct** %20, align 8
  %1239 = load i32, i32* %22, align 4
  %1240 = sext i32 %1239 to i64
  %1241 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1238, i64 %1240
  %1242 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1241, i32 0, i32 0
  store i8 %1237, i8* %1242, align 1
  %1243 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1244 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1243, i32 0, i32 81
  %1245 = load i8*, i8** %1244, align 8
  %1246 = load %struct.png_color_struct*, %struct.png_color_struct** %20, align 8
  %1247 = load i32, i32* %22, align 4
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1246, i64 %1248
  %1250 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1249, i32 0, i32 1
  %1251 = load i8, i8* %1250, align 1
  %1252 = zext i8 %1251 to i64
  %1253 = getelementptr inbounds i8, i8* %1245, i64 %1252
  %1254 = load i8, i8* %1253, align 1
  %1255 = load %struct.png_color_struct*, %struct.png_color_struct** %20, align 8
  %1256 = load i32, i32* %22, align 4
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1255, i64 %1257
  %1259 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1258, i32 0, i32 1
  store i8 %1254, i8* %1259, align 1
  %1260 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1261 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1260, i32 0, i32 81
  %1262 = load i8*, i8** %1261, align 8
  %1263 = load %struct.png_color_struct*, %struct.png_color_struct** %20, align 8
  %1264 = load i32, i32* %22, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1263, i64 %1265
  %1267 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1266, i32 0, i32 2
  %1268 = load i8, i8* %1267, align 1
  %1269 = zext i8 %1268 to i64
  %1270 = getelementptr inbounds i8, i8* %1262, i64 %1269
  %1271 = load i8, i8* %1270, align 1
  %1272 = load %struct.png_color_struct*, %struct.png_color_struct** %20, align 8
  %1273 = load i32, i32* %22, align 4
  %1274 = sext i32 %1273 to i64
  %1275 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1272, i64 %1274
  %1276 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1275, i32 0, i32 2
  store i8 %1271, i8* %1276, align 1
  br label %1277

1277:                                             ; preds = %1225
  %1278 = load i32, i32* %22, align 4
  %1279 = add nsw i32 %1278, 1
  store i32 %1279, i32* %22, align 4
  br label %1221, !llvm.loop !144

1280:                                             ; preds = %1221
  %1281 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1282 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1281, i32 0, i32 17
  %1283 = load i32, i32* %1282, align 4
  %1284 = and i32 %1283, -8193
  store i32 %1284, i32* %1282, align 4
  br label %1285

1285:                                             ; preds = %1280, %1207, %1195
  br label %1286

1286:                                             ; preds = %1285, %1194
  br label %1524

1287:                                             ; preds = %436, %430
  %1288 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1289 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1288, i32 0, i32 17
  %1290 = load i32, i32* %1289, align 4
  %1291 = and i32 %1290, 128
  %1292 = icmp ne i32 %1291, 0
  br i1 %1292, label %1293, label %1523

1293:                                             ; preds = %1287
  %1294 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1295 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1294, i32 0, i32 61
  %1296 = load i8, i8* %1295, align 1
  %1297 = zext i8 %1296 to i32
  %1298 = icmp eq i32 %1297, 3
  br i1 %1298, label %1299, label %1523

1299:                                             ; preds = %1293
  %1300 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1301 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1300, i32 0, i32 55
  %1302 = load i16, i16* %1301, align 8
  %1303 = zext i16 %1302 to i32
  store i32 %1303, i32* %24, align 4
  %1304 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1305 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1304, i32 0, i32 52
  %1306 = load %struct.png_color_struct*, %struct.png_color_struct** %1305, align 8
  store %struct.png_color_struct* %1306, %struct.png_color_struct** %26, align 8
  %1307 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1308 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1307, i32 0, i32 74
  %1309 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1308, i32 0, i32 1
  %1310 = load i16, i16* %1309, align 2
  %1311 = trunc i16 %1310 to i8
  %1312 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %25, i32 0, i32 0
  store i8 %1311, i8* %1312, align 1
  %1313 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1314 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1313, i32 0, i32 74
  %1315 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1314, i32 0, i32 2
  %1316 = load i16, i16* %1315, align 4
  %1317 = trunc i16 %1316 to i8
  %1318 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %25, i32 0, i32 1
  store i8 %1317, i8* %1318, align 1
  %1319 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1320 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1319, i32 0, i32 74
  %1321 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1320, i32 0, i32 3
  %1322 = load i16, i16* %1321, align 2
  %1323 = trunc i16 %1322 to i8
  %1324 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %25, i32 0, i32 2
  store i8 %1323, i8* %1324, align 1
  store i32 0, i32* %23, align 4
  br label %1325

1325:                                             ; preds = %1515, %1299
  %1326 = load i32, i32* %23, align 4
  %1327 = load i32, i32* %24, align 4
  %1328 = icmp slt i32 %1326, %1327
  br i1 %1328, label %1329, label %1518

1329:                                             ; preds = %1325
  %1330 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1331 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1330, i32 0, i32 89
  %1332 = load i8*, i8** %1331, align 8
  %1333 = load i32, i32* %23, align 4
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds i8, i8* %1332, i64 %1334
  %1336 = load i8, i8* %1335, align 1
  %1337 = zext i8 %1336 to i32
  %1338 = icmp eq i32 %1337, 0
  br i1 %1338, label %1339, label %1346

1339:                                             ; preds = %1329
  %1340 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1341 = load i32, i32* %23, align 4
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1340, i64 %1342
  %1344 = bitcast %struct.png_color_struct* %1343 to i8*
  %1345 = bitcast %struct.png_color_struct* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1344, i8* align 1 %1345, i64 3, i1 false)
  br label %1514

1346:                                             ; preds = %1329
  %1347 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1348 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1347, i32 0, i32 89
  %1349 = load i8*, i8** %1348, align 8
  %1350 = load i32, i32* %23, align 4
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds i8, i8* %1349, i64 %1351
  %1353 = load i8, i8* %1352, align 1
  %1354 = zext i8 %1353 to i32
  %1355 = icmp ne i32 %1354, 255
  br i1 %1355, label %1356, label %1513

1356:                                             ; preds = %1346
  %1357 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1358 = load i32, i32* %23, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1357, i64 %1359
  %1361 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1360, i32 0, i32 0
  %1362 = load i8, i8* %1361, align 1
  %1363 = zext i8 %1362 to i16
  %1364 = zext i16 %1363 to i32
  %1365 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1366 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1365, i32 0, i32 89
  %1367 = load i8*, i8** %1366, align 8
  %1368 = load i32, i32* %23, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds i8, i8* %1367, i64 %1369
  %1371 = load i8, i8* %1370, align 1
  %1372 = zext i8 %1371 to i16
  %1373 = zext i16 %1372 to i32
  %1374 = mul nsw i32 %1364, %1373
  %1375 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %25, i32 0, i32 0
  %1376 = load i8, i8* %1375, align 1
  %1377 = zext i8 %1376 to i16
  %1378 = zext i16 %1377 to i32
  %1379 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1380 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1379, i32 0, i32 89
  %1381 = load i8*, i8** %1380, align 8
  %1382 = load i32, i32* %23, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds i8, i8* %1381, i64 %1383
  %1385 = load i8, i8* %1384, align 1
  %1386 = zext i8 %1385 to i16
  %1387 = zext i16 %1386 to i32
  %1388 = sub nsw i32 255, %1387
  %1389 = trunc i32 %1388 to i16
  %1390 = zext i16 %1389 to i32
  %1391 = mul nsw i32 %1378, %1390
  %1392 = add nsw i32 %1374, %1391
  %1393 = add nsw i32 %1392, 128
  %1394 = trunc i32 %1393 to i16
  store i16 %1394, i16* %27, align 2
  %1395 = load i16, i16* %27, align 2
  %1396 = zext i16 %1395 to i32
  %1397 = load i16, i16* %27, align 2
  %1398 = zext i16 %1397 to i32
  %1399 = ashr i32 %1398, 8
  %1400 = add nsw i32 %1396, %1399
  %1401 = ashr i32 %1400, 8
  %1402 = and i32 %1401, 255
  %1403 = trunc i32 %1402 to i8
  %1404 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1405 = load i32, i32* %23, align 4
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1404, i64 %1406
  %1408 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1407, i32 0, i32 0
  store i8 %1403, i8* %1408, align 1
  %1409 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1410 = load i32, i32* %23, align 4
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1409, i64 %1411
  %1413 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1412, i32 0, i32 1
  %1414 = load i8, i8* %1413, align 1
  %1415 = zext i8 %1414 to i16
  %1416 = zext i16 %1415 to i32
  %1417 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1418 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1417, i32 0, i32 89
  %1419 = load i8*, i8** %1418, align 8
  %1420 = load i32, i32* %23, align 4
  %1421 = sext i32 %1420 to i64
  %1422 = getelementptr inbounds i8, i8* %1419, i64 %1421
  %1423 = load i8, i8* %1422, align 1
  %1424 = zext i8 %1423 to i16
  %1425 = zext i16 %1424 to i32
  %1426 = mul nsw i32 %1416, %1425
  %1427 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %25, i32 0, i32 1
  %1428 = load i8, i8* %1427, align 1
  %1429 = zext i8 %1428 to i16
  %1430 = zext i16 %1429 to i32
  %1431 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1432 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1431, i32 0, i32 89
  %1433 = load i8*, i8** %1432, align 8
  %1434 = load i32, i32* %23, align 4
  %1435 = sext i32 %1434 to i64
  %1436 = getelementptr inbounds i8, i8* %1433, i64 %1435
  %1437 = load i8, i8* %1436, align 1
  %1438 = zext i8 %1437 to i16
  %1439 = zext i16 %1438 to i32
  %1440 = sub nsw i32 255, %1439
  %1441 = trunc i32 %1440 to i16
  %1442 = zext i16 %1441 to i32
  %1443 = mul nsw i32 %1430, %1442
  %1444 = add nsw i32 %1426, %1443
  %1445 = add nsw i32 %1444, 128
  %1446 = trunc i32 %1445 to i16
  store i16 %1446, i16* %28, align 2
  %1447 = load i16, i16* %28, align 2
  %1448 = zext i16 %1447 to i32
  %1449 = load i16, i16* %28, align 2
  %1450 = zext i16 %1449 to i32
  %1451 = ashr i32 %1450, 8
  %1452 = add nsw i32 %1448, %1451
  %1453 = ashr i32 %1452, 8
  %1454 = and i32 %1453, 255
  %1455 = trunc i32 %1454 to i8
  %1456 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1457 = load i32, i32* %23, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1456, i64 %1458
  %1460 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1459, i32 0, i32 1
  store i8 %1455, i8* %1460, align 1
  %1461 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1462 = load i32, i32* %23, align 4
  %1463 = sext i32 %1462 to i64
  %1464 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1461, i64 %1463
  %1465 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1464, i32 0, i32 2
  %1466 = load i8, i8* %1465, align 1
  %1467 = zext i8 %1466 to i16
  %1468 = zext i16 %1467 to i32
  %1469 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1470 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1469, i32 0, i32 89
  %1471 = load i8*, i8** %1470, align 8
  %1472 = load i32, i32* %23, align 4
  %1473 = sext i32 %1472 to i64
  %1474 = getelementptr inbounds i8, i8* %1471, i64 %1473
  %1475 = load i8, i8* %1474, align 1
  %1476 = zext i8 %1475 to i16
  %1477 = zext i16 %1476 to i32
  %1478 = mul nsw i32 %1468, %1477
  %1479 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %25, i32 0, i32 2
  %1480 = load i8, i8* %1479, align 1
  %1481 = zext i8 %1480 to i16
  %1482 = zext i16 %1481 to i32
  %1483 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1484 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1483, i32 0, i32 89
  %1485 = load i8*, i8** %1484, align 8
  %1486 = load i32, i32* %23, align 4
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds i8, i8* %1485, i64 %1487
  %1489 = load i8, i8* %1488, align 1
  %1490 = zext i8 %1489 to i16
  %1491 = zext i16 %1490 to i32
  %1492 = sub nsw i32 255, %1491
  %1493 = trunc i32 %1492 to i16
  %1494 = zext i16 %1493 to i32
  %1495 = mul nsw i32 %1482, %1494
  %1496 = add nsw i32 %1478, %1495
  %1497 = add nsw i32 %1496, 128
  %1498 = trunc i32 %1497 to i16
  store i16 %1498, i16* %29, align 2
  %1499 = load i16, i16* %29, align 2
  %1500 = zext i16 %1499 to i32
  %1501 = load i16, i16* %29, align 2
  %1502 = zext i16 %1501 to i32
  %1503 = ashr i32 %1502, 8
  %1504 = add nsw i32 %1500, %1503
  %1505 = ashr i32 %1504, 8
  %1506 = and i32 %1505, 255
  %1507 = trunc i32 %1506 to i8
  %1508 = load %struct.png_color_struct*, %struct.png_color_struct** %26, align 8
  %1509 = load i32, i32* %23, align 4
  %1510 = sext i32 %1509 to i64
  %1511 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1508, i64 %1510
  %1512 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1511, i32 0, i32 2
  store i8 %1507, i8* %1512, align 1
  br label %1513

1513:                                             ; preds = %1356, %1346
  br label %1514

1514:                                             ; preds = %1513, %1339
  br label %1515

1515:                                             ; preds = %1514
  %1516 = load i32, i32* %23, align 4
  %1517 = add nsw i32 %1516, 1
  store i32 %1517, i32* %23, align 4
  br label %1325, !llvm.loop !145

1518:                                             ; preds = %1325
  %1519 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1520 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1519, i32 0, i32 17
  %1521 = load i32, i32* %1520, align 4
  %1522 = and i32 %1521, -129
  store i32 %1522, i32* %1520, align 4
  br label %1523

1523:                                             ; preds = %1518, %1293, %1287
  br label %1524

1524:                                             ; preds = %1523, %1286
  %1525 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1526 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1525, i32 0, i32 17
  %1527 = load i32, i32* %1526, align 4
  %1528 = and i32 %1527, 8
  %1529 = icmp ne i32 %1528, 0
  br i1 %1529, label %1530, label %1680

1530:                                             ; preds = %1524
  %1531 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1532 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1531, i32 0, i32 17
  %1533 = load i32, i32* %1532, align 4
  %1534 = and i32 %1533, 4096
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %1536, label %1680

1536:                                             ; preds = %1530
  %1537 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1538 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1537, i32 0, i32 61
  %1539 = load i8, i8* %1538, align 1
  %1540 = zext i8 %1539 to i32
  %1541 = icmp eq i32 %1540, 3
  br i1 %1541, label %1542, label %1680

1542:                                             ; preds = %1536
  %1543 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1544 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1543, i32 0, i32 53
  %1545 = load i16, i16* %1544, align 8
  %1546 = zext i16 %1545 to i32
  store i32 %1546, i32* %31, align 4
  %1547 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1548 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1547, i32 0, i32 87
  %1549 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %1548, i32 0, i32 0
  %1550 = load i8, i8* %1549, align 8
  %1551 = zext i8 %1550 to i32
  %1552 = sub nsw i32 8, %1551
  store i32 %1552, i32* %32, align 4
  %1553 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1554 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1553, i32 0, i32 17
  %1555 = load i32, i32* %1554, align 4
  %1556 = and i32 %1555, -9
  store i32 %1556, i32* %1554, align 4
  %1557 = load i32, i32* %32, align 4
  %1558 = icmp sgt i32 %1557, 0
  br i1 %1558, label %1559, label %1593

1559:                                             ; preds = %1542
  %1560 = load i32, i32* %32, align 4
  %1561 = icmp slt i32 %1560, 8
  br i1 %1561, label %1562, label %1593

1562:                                             ; preds = %1559
  store i32 0, i32* %30, align 4
  br label %1563

1563:                                             ; preds = %1589, %1562
  %1564 = load i32, i32* %30, align 4
  %1565 = load i32, i32* %31, align 4
  %1566 = icmp slt i32 %1564, %1565
  br i1 %1566, label %1567, label %1592

1567:                                             ; preds = %1563
  %1568 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1569 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1568, i32 0, i32 52
  %1570 = load %struct.png_color_struct*, %struct.png_color_struct** %1569, align 8
  %1571 = load i32, i32* %30, align 4
  %1572 = sext i32 %1571 to i64
  %1573 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1570, i64 %1572
  %1574 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1573, i32 0, i32 0
  %1575 = load i8, i8* %1574, align 1
  %1576 = zext i8 %1575 to i32
  store i32 %1576, i32* %33, align 4
  %1577 = load i32, i32* %32, align 4
  %1578 = load i32, i32* %33, align 4
  %1579 = ashr i32 %1578, %1577
  store i32 %1579, i32* %33, align 4
  %1580 = load i32, i32* %33, align 4
  %1581 = trunc i32 %1580 to i8
  %1582 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1583 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1582, i32 0, i32 52
  %1584 = load %struct.png_color_struct*, %struct.png_color_struct** %1583, align 8
  %1585 = load i32, i32* %30, align 4
  %1586 = sext i32 %1585 to i64
  %1587 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1584, i64 %1586
  %1588 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1587, i32 0, i32 0
  store i8 %1581, i8* %1588, align 1
  br label %1589

1589:                                             ; preds = %1567
  %1590 = load i32, i32* %30, align 4
  %1591 = add nsw i32 %1590, 1
  store i32 %1591, i32* %30, align 4
  br label %1563, !llvm.loop !146

1592:                                             ; preds = %1563
  br label %1593

1593:                                             ; preds = %1592, %1559, %1542
  %1594 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1595 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1594, i32 0, i32 87
  %1596 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %1595, i32 0, i32 1
  %1597 = load i8, i8* %1596, align 1
  %1598 = zext i8 %1597 to i32
  %1599 = sub nsw i32 8, %1598
  store i32 %1599, i32* %32, align 4
  %1600 = load i32, i32* %32, align 4
  %1601 = icmp sgt i32 %1600, 0
  br i1 %1601, label %1602, label %1636

1602:                                             ; preds = %1593
  %1603 = load i32, i32* %32, align 4
  %1604 = icmp slt i32 %1603, 8
  br i1 %1604, label %1605, label %1636

1605:                                             ; preds = %1602
  store i32 0, i32* %30, align 4
  br label %1606

1606:                                             ; preds = %1632, %1605
  %1607 = load i32, i32* %30, align 4
  %1608 = load i32, i32* %31, align 4
  %1609 = icmp slt i32 %1607, %1608
  br i1 %1609, label %1610, label %1635

1610:                                             ; preds = %1606
  %1611 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1612 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1611, i32 0, i32 52
  %1613 = load %struct.png_color_struct*, %struct.png_color_struct** %1612, align 8
  %1614 = load i32, i32* %30, align 4
  %1615 = sext i32 %1614 to i64
  %1616 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1613, i64 %1615
  %1617 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1616, i32 0, i32 1
  %1618 = load i8, i8* %1617, align 1
  %1619 = zext i8 %1618 to i32
  store i32 %1619, i32* %34, align 4
  %1620 = load i32, i32* %32, align 4
  %1621 = load i32, i32* %34, align 4
  %1622 = ashr i32 %1621, %1620
  store i32 %1622, i32* %34, align 4
  %1623 = load i32, i32* %34, align 4
  %1624 = trunc i32 %1623 to i8
  %1625 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1626 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1625, i32 0, i32 52
  %1627 = load %struct.png_color_struct*, %struct.png_color_struct** %1626, align 8
  %1628 = load i32, i32* %30, align 4
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1627, i64 %1629
  %1631 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1630, i32 0, i32 1
  store i8 %1624, i8* %1631, align 1
  br label %1632

1632:                                             ; preds = %1610
  %1633 = load i32, i32* %30, align 4
  %1634 = add nsw i32 %1633, 1
  store i32 %1634, i32* %30, align 4
  br label %1606, !llvm.loop !147

1635:                                             ; preds = %1606
  br label %1636

1636:                                             ; preds = %1635, %1602, %1593
  %1637 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1638 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1637, i32 0, i32 87
  %1639 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %1638, i32 0, i32 2
  %1640 = load i8, i8* %1639, align 2
  %1641 = zext i8 %1640 to i32
  %1642 = sub nsw i32 8, %1641
  store i32 %1642, i32* %32, align 4
  %1643 = load i32, i32* %32, align 4
  %1644 = icmp sgt i32 %1643, 0
  br i1 %1644, label %1645, label %1679

1645:                                             ; preds = %1636
  %1646 = load i32, i32* %32, align 4
  %1647 = icmp slt i32 %1646, 8
  br i1 %1647, label %1648, label %1679

1648:                                             ; preds = %1645
  store i32 0, i32* %30, align 4
  br label %1649

1649:                                             ; preds = %1675, %1648
  %1650 = load i32, i32* %30, align 4
  %1651 = load i32, i32* %31, align 4
  %1652 = icmp slt i32 %1650, %1651
  br i1 %1652, label %1653, label %1678

1653:                                             ; preds = %1649
  %1654 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1655 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1654, i32 0, i32 52
  %1656 = load %struct.png_color_struct*, %struct.png_color_struct** %1655, align 8
  %1657 = load i32, i32* %30, align 4
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1656, i64 %1658
  %1660 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1659, i32 0, i32 2
  %1661 = load i8, i8* %1660, align 1
  %1662 = zext i8 %1661 to i32
  store i32 %1662, i32* %35, align 4
  %1663 = load i32, i32* %32, align 4
  %1664 = load i32, i32* %35, align 4
  %1665 = ashr i32 %1664, %1663
  store i32 %1665, i32* %35, align 4
  %1666 = load i32, i32* %35, align 4
  %1667 = trunc i32 %1666 to i8
  %1668 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %1669 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1668, i32 0, i32 52
  %1670 = load %struct.png_color_struct*, %struct.png_color_struct** %1669, align 8
  %1671 = load i32, i32* %30, align 4
  %1672 = sext i32 %1671 to i64
  %1673 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1670, i64 %1672
  %1674 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %1673, i32 0, i32 2
  store i8 %1667, i8* %1674, align 1
  br label %1675

1675:                                             ; preds = %1653
  %1676 = load i32, i32* %30, align 4
  %1677 = add nsw i32 %1676, 1
  store i32 %1677, i32* %30, align 4
  br label %1649, !llvm.loop !148

1678:                                             ; preds = %1649
  br label %1679

1679:                                             ; preds = %1678, %1645, %1636
  br label %1680

1680:                                             ; preds = %1679, %1536, %1530, %1524
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_gamma_threshold(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %3, align 4
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @png_muldiv(i32* noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef 100000)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @png_gamma_significant(i32 noundef %11)
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %10, %2
  %15 = phi i1 [ true, %2 ], [ %13, %10 ]
  %16 = zext i1 %15 to i32
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_init_palette_transformations(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 55
  %10 = load i16, i16* %9, align 8
  %11 = zext i16 %10 to i32
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %50

13:                                               ; preds = %1
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %46, %13
  %15 = load i32, i32* %5, align 4
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 55
  %18 = load i16, i16* %17, align 8
  %19 = zext i16 %18 to i32
  %20 = icmp slt i32 %15, %19
  br i1 %20, label %21, label %49

21:                                               ; preds = %14
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 89
  %24 = load i8*, i8** %23, align 8
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 255
  br i1 %30, label %31, label %32

31:                                               ; preds = %21
  br label %46

32:                                               ; preds = %21
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 89
  %35 = load i8*, i8** %34, align 8
  %36 = load i32, i32* %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %32
  store i32 1, i32* %4, align 4
  br label %44

43:                                               ; preds = %32
  store i32 1, i32* %4, align 4
  store i32 1, i32* %3, align 4
  br label %49

44:                                               ; preds = %42
  br label %45

45:                                               ; preds = %44
  br label %46

46:                                               ; preds = %45, %31
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %5, align 4
  br label %14, !llvm.loop !149

49:                                               ; preds = %43, %14
  br label %50

50:                                               ; preds = %49, %1
  %51 = load i32, i32* %3, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %70

53:                                               ; preds = %50
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 17
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, -8388609
  store i32 %57, i32* %55, align 4
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 16
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -8193
  store i32 %61, i32* %59, align 8
  %62 = load i32, i32* %4, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %53
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 17
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, -385
  store i32 %68, i32* %66, align 4
  br label %69

69:                                               ; preds = %64, %53
  br label %70

70:                                               ; preds = %69, %50
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 17
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 256
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %171

76:                                               ; preds = %70
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 17
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 4096
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %171

82:                                               ; preds = %76
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %84 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %83, i32 0, i32 52
  %85 = load %struct.png_color_struct*, %struct.png_color_struct** %84, align 8
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 74
  %88 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %87, i32 0, i32 0
  %89 = load i8, i8* %88, align 4
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %85, i64 %90
  %92 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %91, i32 0, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 74
  %97 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %96, i32 0, i32 1
  store i16 %94, i16* %97, align 2
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %99 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %98, i32 0, i32 52
  %100 = load %struct.png_color_struct*, %struct.png_color_struct** %99, align 8
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 74
  %103 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %102, i32 0, i32 0
  %104 = load i8, i8* %103, align 4
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %100, i64 %105
  %107 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %106, i32 0, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i16
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 74
  %112 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %111, i32 0, i32 2
  store i16 %109, i16* %112, align 4
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 52
  %115 = load %struct.png_color_struct*, %struct.png_color_struct** %114, align 8
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 74
  %118 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %117, i32 0, i32 0
  %119 = load i8, i8* %118, align 4
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %115, i64 %120
  %122 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %121, i32 0, i32 2
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %125, i32 0, i32 74
  %127 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %126, i32 0, i32 3
  store i16 %124, i16* %127, align 2
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 17
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 524288
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %170

133:                                              ; preds = %82
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 17
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 33554432
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %169

139:                                              ; preds = %133
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 55
  %142 = load i16, i16* %141, align 8
  %143 = zext i16 %142 to i32
  store i32 %143, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %144

144:                                              ; preds = %165, %139
  %145 = load i32, i32* %6, align 4
  %146 = load i32, i32* %7, align 4
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %148, label %168

148:                                              ; preds = %144
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 89
  %151 = load i8*, i8** %150, align 8
  %152 = load i32, i32* %6, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = sub nsw i32 255, %156
  %158 = trunc i32 %157 to i8
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %159, i32 0, i32 89
  %161 = load i8*, i8** %160, align 8
  %162 = load i32, i32* %6, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, i8* %161, i64 %163
  store i8 %158, i8* %164, align 1
  br label %165

165:                                              ; preds = %148
  %166 = load i32, i32* %6, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %6, align 4
  br label %144, !llvm.loop !150

168:                                              ; preds = %144
  br label %169

169:                                              ; preds = %168, %133
  br label %170

170:                                              ; preds = %169, %82
  br label %171

171:                                              ; preds = %170, %76, %70
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_init_rgb_transformations(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 61
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = and i32 %10, 4
  %12 = icmp ne i32 %11, 0
  %13 = zext i1 %12 to i32
  store i32 %13, i32* %3, align 4
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 55
  %16 = load i16, i16* %15, align 8
  %17 = zext i16 %16 to i32
  %18 = icmp sgt i32 %17, 0
  %19 = zext i1 %18 to i32
  store i32 %19, i32* %4, align 4
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %39

22:                                               ; preds = %1
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 17
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -8388609
  store i32 %26, i32* %24, align 4
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 16
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -8193
  store i32 %30, i32* %28, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 17
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, -385
  store i32 %37, i32* %35, align 4
  br label %38

38:                                               ; preds = %33, %22
  br label %39

39:                                               ; preds = %38, %1
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 17
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 256
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %120

45:                                               ; preds = %39
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 17
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 4096
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %120

51:                                               ; preds = %45
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 61
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %120

58:                                               ; preds = %51
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 74
  %61 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %60, i32 0, i32 4
  %62 = load i16, i16* %61, align 4
  %63 = zext i16 %62 to i32
  store i32 %63, i32* %5, align 4
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 90
  %66 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %65, i32 0, i32 4
  %67 = load i16, i16* %66, align 8
  %68 = zext i16 %67 to i32
  store i32 %68, i32* %6, align 4
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 62
  %71 = load i8, i8* %70, align 8
  %72 = zext i8 %71 to i32
  switch i32 %72, label %88 [
    i32 1, label %73
    i32 2, label %78
    i32 4, label %83
    i32 8, label %89
    i32 16, label %89
  ]

73:                                               ; preds = %58
  %74 = load i32, i32* %5, align 4
  %75 = mul nsw i32 %74, 255
  store i32 %75, i32* %5, align 4
  %76 = load i32, i32* %6, align 4
  %77 = mul nsw i32 %76, 255
  store i32 %77, i32* %6, align 4
  br label %90

78:                                               ; preds = %58
  %79 = load i32, i32* %5, align 4
  %80 = mul nsw i32 %79, 85
  store i32 %80, i32* %5, align 4
  %81 = load i32, i32* %6, align 4
  %82 = mul nsw i32 %81, 85
  store i32 %82, i32* %6, align 4
  br label %90

83:                                               ; preds = %58
  %84 = load i32, i32* %5, align 4
  %85 = mul nsw i32 %84, 17
  store i32 %85, i32* %5, align 4
  %86 = load i32, i32* %6, align 4
  %87 = mul nsw i32 %86, 17
  store i32 %87, i32* %6, align 4
  br label %90

88:                                               ; preds = %58
  br label %89

89:                                               ; preds = %58, %58, %88
  br label %90

90:                                               ; preds = %89, %83, %78, %73
  %91 = load i32, i32* %5, align 4
  %92 = trunc i32 %91 to i16
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %94 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %93, i32 0, i32 74
  %95 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %94, i32 0, i32 3
  store i16 %92, i16* %95, align 2
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 74
  %98 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %97, i32 0, i32 2
  store i16 %92, i16* %98, align 4
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 74
  %101 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %100, i32 0, i32 1
  store i16 %92, i16* %101, align 2
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 17
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, 33554432
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %90
  %108 = load i32, i32* %6, align 4
  %109 = trunc i32 %108 to i16
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 90
  %112 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %111, i32 0, i32 3
  store i16 %109, i16* %112, align 2
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 90
  %115 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %114, i32 0, i32 2
  store i16 %109, i16* %115, align 4
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 90
  %118 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %117, i32 0, i32 1
  store i16 %109, i16* %118, align 2
  br label %119

119:                                              ; preds = %107, %90
  br label %120

120:                                              ; preds = %119, %51, %45, %39
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_transform_info(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 17
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 4096
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %73

10:                                               ; preds = %2
  %11 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %11, i32 0, i32 8
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %40

16:                                               ; preds = %10
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 55
  %19 = load i16, i16* %18, align 8
  %20 = zext i16 %19 to i32
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 8
  store i8 6, i8* %24, align 1
  br label %28

25:                                               ; preds = %16
  %26 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %27 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %26, i32 0, i32 8
  store i8 2, i8* %27, align 1
  br label %28

28:                                               ; preds = %25, %22
  %29 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 7
  store i8 8, i8* %30, align 4
  %31 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %32 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %31, i32 0, i32 6
  store i16 0, i16* %32, align 2
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 52
  %35 = load %struct.png_color_struct*, %struct.png_color_struct** %34, align 8
  %36 = icmp eq %struct.png_color_struct* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %38, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14.232, i64 0, i64 0)) #13
  unreachable

39:                                               ; preds = %28
  br label %72

40:                                               ; preds = %10
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 55
  %43 = load i16, i16* %42, align 8
  %44 = zext i16 %43 to i32
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %40
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 17
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 33554432
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %56, 4
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %54, align 1
  br label %59

59:                                               ; preds = %52, %46
  br label %60

60:                                               ; preds = %59, %40
  %61 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %62 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %61, i32 0, i32 7
  %63 = load i8, i8* %62, align 4
  %64 = zext i8 %63 to i32
  %65 = icmp slt i32 %64, 8
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %68 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %67, i32 0, i32 7
  store i8 8, i8* %68, align 4
  br label %69

69:                                               ; preds = %66, %60
  %70 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %70, i32 0, i32 6
  store i16 0, i16* %71, align 2
  br label %72

72:                                               ; preds = %69, %39
  br label %73

73:                                               ; preds = %72, %2
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 17
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 128
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %73
  %80 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %81 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %80, i32 0, i32 27
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 74
  %84 = bitcast %struct.png_color_16_struct* %81 to i8*
  %85 = bitcast %struct.png_color_16_struct* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %84, i8* align 4 %85, i64 10, i1 false)
  br label %86

86:                                               ; preds = %79, %73
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 145
  %89 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %92 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %91, i32 0, i32 16
  %93 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %92, i32 0, i32 0
  store i32 %90, i32* %93, align 4
  %94 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %95 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %94, i32 0, i32 7
  %96 = load i8, i8* %95, align 4
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 16
  br i1 %98, label %99, label %118

99:                                               ; preds = %86
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 17
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 67108864
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %99
  %106 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %107 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %106, i32 0, i32 7
  store i8 8, i8* %107, align 4
  br label %108

108:                                              ; preds = %105, %99
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 17
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 1024
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %116 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %115, i32 0, i32 7
  store i8 8, i8* %116, align 4
  br label %117

117:                                              ; preds = %114, %108
  br label %118

118:                                              ; preds = %117, %86
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %120 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 17
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 16384
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %118
  %125 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %126 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %125, i32 0, i32 8
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = or i32 %128, 2
  %130 = trunc i32 %129 to i8
  %131 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %132 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %131, i32 0, i32 8
  store i8 %130, i8* %132, align 1
  br label %133

133:                                              ; preds = %124, %118
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 17
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 6291456
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %148

139:                                              ; preds = %133
  %140 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %141 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %140, i32 0, i32 8
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = and i32 %143, -3
  %145 = trunc i32 %144 to i8
  %146 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %147 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %146, i32 0, i32 8
  store i8 %145, i8* %147, align 1
  br label %148

148:                                              ; preds = %139, %133
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 17
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 64
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %181

154:                                              ; preds = %148
  %155 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %156 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %155, i32 0, i32 8
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = icmp eq i32 %158, 2
  br i1 %159, label %166, label %160

160:                                              ; preds = %154
  %161 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %162 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %161, i32 0, i32 8
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 6
  br i1 %165, label %166, label %180

166:                                              ; preds = %160, %154
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %168 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %167, i32 0, i32 108
  %169 = load i8*, i8** %168, align 8
  %170 = icmp ne i8* %169, null
  br i1 %170, label %171, label %180

171:                                              ; preds = %166
  %172 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %173 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %172, i32 0, i32 7
  %174 = load i8, i8* %173, align 4
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 8
  br i1 %176, label %177, label %180

177:                                              ; preds = %171
  %178 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %179 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %178, i32 0, i32 8
  store i8 3, i8* %179, align 1
  br label %180

180:                                              ; preds = %177, %171, %166, %160
  br label %181

181:                                              ; preds = %180, %148
  %182 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %183 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %182, i32 0, i32 17
  %184 = load i32, i32* %183, align 4
  %185 = and i32 %184, 512
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %187, label %202

187:                                              ; preds = %181
  %188 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %189 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %188, i32 0, i32 7
  %190 = load i8, i8* %189, align 4
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 8
  br i1 %192, label %193, label %202

193:                                              ; preds = %187
  %194 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %195 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %194, i32 0, i32 8
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = icmp ne i32 %197, 3
  br i1 %198, label %199, label %202

199:                                              ; preds = %193
  %200 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %201 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %200, i32 0, i32 7
  store i8 16, i8* %201, align 4
  br label %202

202:                                              ; preds = %199, %193, %187, %181
  %203 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %204 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %203, i32 0, i32 17
  %205 = load i32, i32* %204, align 4
  %206 = and i32 %205, 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %217

208:                                              ; preds = %202
  %209 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %210 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %209, i32 0, i32 7
  %211 = load i8, i8* %210, align 4
  %212 = zext i8 %211 to i32
  %213 = icmp slt i32 %212, 8
  br i1 %213, label %214, label %217

214:                                              ; preds = %208
  %215 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %216 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %215, i32 0, i32 7
  store i8 8, i8* %216, align 4
  br label %217

217:                                              ; preds = %214, %208, %202
  %218 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %219 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %218, i32 0, i32 8
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = icmp eq i32 %221, 3
  br i1 %222, label %223, label %226

223:                                              ; preds = %217
  %224 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %225 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %224, i32 0, i32 12
  store i8 1, i8* %225, align 1
  br label %240

226:                                              ; preds = %217
  %227 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %228 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %227, i32 0, i32 8
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = and i32 %230, 2
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %226
  %234 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %235 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %234, i32 0, i32 12
  store i8 3, i8* %235, align 1
  br label %239

236:                                              ; preds = %226
  %237 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %238 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %237, i32 0, i32 12
  store i8 1, i8* %238, align 1
  br label %239

239:                                              ; preds = %236, %233
  br label %240

240:                                              ; preds = %239, %223
  %241 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %241, i32 0, i32 17
  %243 = load i32, i32* %242, align 4
  %244 = and i32 %243, 262144
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %246, label %257

246:                                              ; preds = %240
  %247 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %248 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %247, i32 0, i32 8
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = and i32 %250, -5
  %252 = trunc i32 %251 to i8
  %253 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %254 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %253, i32 0, i32 8
  store i8 %252, i8* %254, align 1
  %255 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %256 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %255, i32 0, i32 6
  store i16 0, i16* %256, align 2
  br label %257

257:                                              ; preds = %246, %240
  %258 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %259 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %258, i32 0, i32 8
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = and i32 %261, 4
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %269

264:                                              ; preds = %257
  %265 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %266 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %265, i32 0, i32 12
  %267 = load i8, i8* %266, align 1
  %268 = add i8 %267, 1
  store i8 %268, i8* %266, align 1
  br label %269

269:                                              ; preds = %264, %257
  %270 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %271 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %270, i32 0, i32 17
  %272 = load i32, i32* %271, align 4
  %273 = and i32 %272, 32768
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %305

275:                                              ; preds = %269
  %276 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %277 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %276, i32 0, i32 8
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = icmp eq i32 %279, 2
  br i1 %280, label %287, label %281

281:                                              ; preds = %275
  %282 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %283 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %282, i32 0, i32 8
  %284 = load i8, i8* %283, align 1
  %285 = zext i8 %284 to i32
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %305

287:                                              ; preds = %281, %275
  %288 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %289 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %288, i32 0, i32 12
  %290 = load i8, i8* %289, align 1
  %291 = add i8 %290, 1
  store i8 %291, i8* %289, align 1
  %292 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %293 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %292, i32 0, i32 17
  %294 = load i32, i32* %293, align 4
  %295 = and i32 %294, 16777216
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %297, label %304

297:                                              ; preds = %287
  %298 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %299 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %298, i32 0, i32 8
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = or i32 %301, 4
  %303 = trunc i32 %302 to i8
  store i8 %303, i8* %299, align 1
  br label %304

304:                                              ; preds = %297, %287
  br label %305

305:                                              ; preds = %304, %281, %269
  %306 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %307 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %306, i32 0, i32 17
  %308 = load i32, i32* %307, align 4
  %309 = and i32 %308, 1048576
  %310 = icmp ne i32 %309, 0
  br i1 %310, label %311, label %336

311:                                              ; preds = %305
  %312 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %313 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %312, i32 0, i32 13
  %314 = load i8, i8* %313, align 8
  %315 = zext i8 %314 to i32
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %317, label %323

317:                                              ; preds = %311
  %318 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %319 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %318, i32 0, i32 13
  %320 = load i8, i8* %319, align 8
  %321 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %322 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %321, i32 0, i32 7
  store i8 %320, i8* %322, align 4
  br label %323

323:                                              ; preds = %317, %311
  %324 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %325 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %324, i32 0, i32 14
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i32
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %335

329:                                              ; preds = %323
  %330 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %331 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %330, i32 0, i32 14
  %332 = load i8, i8* %331, align 1
  %333 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %334 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %333, i32 0, i32 12
  store i8 %332, i8* %334, align 1
  br label %335

335:                                              ; preds = %329, %323
  br label %336

336:                                              ; preds = %335, %305
  %337 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %338 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %337, i32 0, i32 12
  %339 = load i8, i8* %338, align 1
  %340 = zext i8 %339 to i32
  %341 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %342 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %341, i32 0, i32 7
  %343 = load i8, i8* %342, align 4
  %344 = zext i8 %343 to i32
  %345 = mul nsw i32 %340, %344
  %346 = trunc i32 %345 to i8
  %347 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %348 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %347, i32 0, i32 13
  store i8 %346, i8* %348, align 2
  %349 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %350 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %349, i32 0, i32 13
  %351 = load i8, i8* %350, align 2
  %352 = zext i8 %351 to i32
  %353 = icmp sge i32 %352, 8
  br i1 %353, label %354, label %365

354:                                              ; preds = %336
  %355 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %356 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %355, i32 0, i32 0
  %357 = load i32, i32* %356, align 8
  %358 = zext i32 %357 to i64
  %359 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %360 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %359, i32 0, i32 13
  %361 = load i8, i8* %360, align 2
  %362 = zext i8 %361 to i64
  %363 = lshr i64 %362, 3
  %364 = mul i64 %358, %363
  br label %377

365:                                              ; preds = %336
  %366 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %367 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %366, i32 0, i32 0
  %368 = load i32, i32* %367, align 8
  %369 = zext i32 %368 to i64
  %370 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %371 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %370, i32 0, i32 13
  %372 = load i8, i8* %371, align 2
  %373 = zext i8 %372 to i64
  %374 = mul i64 %369, %373
  %375 = add i64 %374, 7
  %376 = lshr i64 %375, 3
  br label %377

377:                                              ; preds = %365, %354
  %378 = phi i64 [ %364, %354 ], [ %376, %365 ]
  %379 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %380 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %379, i32 0, i32 3
  store i64 %378, i64* %380, align 8
  %381 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %382 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %381, i32 0, i32 3
  %383 = load i64, i64* %382, align 8
  %384 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %385 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %384, i32 0, i32 49
  store i64 %383, i64* %385, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_read_transformations(%struct.png_struct_def* noalias noundef %0, %struct.png_row_info_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %4, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 46
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %11, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.235, i64 0, i64 0)) #13
  unreachable

12:                                               ; preds = %2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 16
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 16384
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 16
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 64
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %25, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16.236, i64 0, i64 0)) #13
  unreachable

26:                                               ; preds = %18, %12
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 17
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 4096
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %83

32:                                               ; preds = %26
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 2
  %35 = load i8, i8* %34, align 8
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 3
  br i1 %37, label %38, label %55

38:                                               ; preds = %32
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %40 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 46
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 52
  %47 = load %struct.png_color_struct*, %struct.png_color_struct** %46, align 8
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 89
  %50 = load i8*, i8** %49, align 8
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 55
  %53 = load i16, i16* %52, align 8
  %54 = zext i16 %53 to i32
  call void @png_do_expand_palette(%struct.png_struct_def* noundef %39, %struct.png_row_info_struct* noundef %40, i8* noundef %44, %struct.png_color_struct* noundef %47, i8* noundef %50, i32 noundef %54)
  br label %82

55:                                               ; preds = %32
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 55
  %58 = load i16, i16* %57, align 8
  %59 = zext i16 %58 to i32
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %75

61:                                               ; preds = %55
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 17
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 33554432
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %75

67:                                               ; preds = %61
  %68 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 46
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 90
  call void @png_do_expand(%struct.png_row_info_struct* noundef %68, i8* noundef %72, %struct.png_color_16_struct* noundef %74)
  br label %81

75:                                               ; preds = %61, %55
  %76 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 46
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 1
  call void @png_do_expand(%struct.png_row_info_struct* noundef %76, i8* noundef %80, %struct.png_color_16_struct* noundef null)
  br label %81

81:                                               ; preds = %75, %67
  br label %82

82:                                               ; preds = %81, %38
  br label %83

83:                                               ; preds = %82, %26
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 17
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 262144
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %113

89:                                               ; preds = %83
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 17
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 128
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %113

95:                                               ; preds = %89
  %96 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %97 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %96, i32 0, i32 2
  %98 = load i8, i8* %97, align 8
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 6
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %103 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 2
  %104 = load i8, i8* %103, align 8
  %105 = zext i8 %104 to i32
  %106 = icmp eq i32 %105, 4
  br i1 %106, label %107, label %113

107:                                              ; preds = %101, %95
  %108 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 46
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 1
  call void @png_do_strip_channel(%struct.png_row_info_struct* noundef %108, i8* noundef %112, i32 noundef 0)
  br label %113

113:                                              ; preds = %107, %101, %89, %83
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %115 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %114, i32 0, i32 17
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 6291456
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %149

119:                                              ; preds = %113
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %121 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %122 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %122, i32 0, i32 46
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 1
  %126 = call i32 @png_do_rgb_to_gray(%struct.png_struct_def* noundef %120, %struct.png_row_info_struct* noundef %121, i8* noundef %125)
  store i32 %126, i32* %5, align 4
  %127 = load i32, i32* %5, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %148

129:                                              ; preds = %119
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %131 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %130, i32 0, i32 118
  store i8 1, i8* %131, align 8
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 17
  %134 = load i32, i32* %133, align 4
  %135 = and i32 %134, 6291456
  %136 = icmp eq i32 %135, 4194304
  br i1 %136, label %137, label %139

137:                                              ; preds = %129
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %138, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17.237, i64 0, i64 0))
  br label %139

139:                                              ; preds = %137, %129
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 17
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 6291456
  %144 = icmp eq i32 %143, 2097152
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %146, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17.237, i64 0, i64 0)) #13
  unreachable

147:                                              ; preds = %139
  br label %148

148:                                              ; preds = %147, %119
  br label %149

149:                                              ; preds = %148, %113
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %151 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %150, i32 0, i32 17
  %152 = load i32, i32* %151, align 4
  %153 = and i32 %152, 16384
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %167

155:                                              ; preds = %149
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %157 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %156, i32 0, i32 15
  %158 = load i32, i32* %157, align 4
  %159 = and i32 %158, 2048
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %167

161:                                              ; preds = %155
  %162 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %163 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %164 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %163, i32 0, i32 46
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 1
  call void @png_do_gray_to_rgb(%struct.png_row_info_struct* noundef %162, i8* noundef %166)
  br label %167

167:                                              ; preds = %161, %155, %149
  %168 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %169 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %168, i32 0, i32 17
  %170 = load i32, i32* %169, align 4
  %171 = and i32 %170, 128
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %167
  %174 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %175, i32 0, i32 46
  %177 = load i8*, i8** %176, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 1
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_do_compose(%struct.png_row_info_struct* noundef %174, i8* noundef %178, %struct.png_struct_def* noundef %179)
  br label %180

180:                                              ; preds = %173, %167
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %182 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %181, i32 0, i32 17
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 8192
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %224

186:                                              ; preds = %180
  %187 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %187, i32 0, i32 17
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 6291456
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %224

192:                                              ; preds = %186
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %194 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 17
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 128
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %211

198:                                              ; preds = %192
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %200 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %199, i32 0, i32 55
  %201 = load i16, i16* %200, align 8
  %202 = zext i16 %201 to i32
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %224, label %204

204:                                              ; preds = %198
  %205 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %206 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %205, i32 0, i32 61
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = and i32 %208, 4
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %224, label %211

211:                                              ; preds = %204, %192
  %212 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %213 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %212, i32 0, i32 61
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = icmp ne i32 %215, 3
  br i1 %216, label %217, label %224

217:                                              ; preds = %211
  %218 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %219, i32 0, i32 46
  %221 = load i8*, i8** %220, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_do_gamma(%struct.png_row_info_struct* noundef %218, i8* noundef %222, %struct.png_struct_def* noundef %223)
  br label %224

224:                                              ; preds = %217, %211, %204, %198, %186, %180
  %225 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %226 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %225, i32 0, i32 17
  %227 = load i32, i32* %226, align 4
  %228 = and i32 %227, 262144
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %254

230:                                              ; preds = %224
  %231 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %232 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %231, i32 0, i32 17
  %233 = load i32, i32* %232, align 4
  %234 = and i32 %233, 128
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %254

236:                                              ; preds = %230
  %237 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %238 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %237, i32 0, i32 2
  %239 = load i8, i8* %238, align 8
  %240 = zext i8 %239 to i32
  %241 = icmp eq i32 %240, 6
  br i1 %241, label %248, label %242

242:                                              ; preds = %236
  %243 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %244 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %243, i32 0, i32 2
  %245 = load i8, i8* %244, align 8
  %246 = zext i8 %245 to i32
  %247 = icmp eq i32 %246, 4
  br i1 %247, label %248, label %254

248:                                              ; preds = %242, %236
  %249 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %250 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %251 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %250, i32 0, i32 46
  %252 = load i8*, i8** %251, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 1
  call void @png_do_strip_channel(%struct.png_row_info_struct* noundef %249, i8* noundef %253, i32 noundef 0)
  br label %254

254:                                              ; preds = %248, %242, %230, %224
  %255 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %256 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %255, i32 0, i32 17
  %257 = load i32, i32* %256, align 4
  %258 = and i32 %257, 8388608
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %274

260:                                              ; preds = %254
  %261 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %262 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %261, i32 0, i32 2
  %263 = load i8, i8* %262, align 8
  %264 = zext i8 %263 to i32
  %265 = and i32 %264, 4
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %267, label %274

267:                                              ; preds = %260
  %268 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %269 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %270 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %269, i32 0, i32 46
  %271 = load i8*, i8** %270, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 1
  %273 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_do_encode_alpha(%struct.png_row_info_struct* noundef %268, i8* noundef %272, %struct.png_struct_def* noundef %273)
  br label %274

274:                                              ; preds = %267, %260, %254
  %275 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %276 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %275, i32 0, i32 17
  %277 = load i32, i32* %276, align 4
  %278 = and i32 %277, 67108864
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %286

280:                                              ; preds = %274
  %281 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %282 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %283 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %282, i32 0, i32 46
  %284 = load i8*, i8** %283, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 1
  call void @png_do_scale_16_to_8(%struct.png_row_info_struct* noundef %281, i8* noundef %285)
  br label %286

286:                                              ; preds = %280, %274
  %287 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %288 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %287, i32 0, i32 17
  %289 = load i32, i32* %288, align 4
  %290 = and i32 %289, 1024
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %298

292:                                              ; preds = %286
  %293 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %294 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %295 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %294, i32 0, i32 46
  %296 = load i8*, i8** %295, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 1
  call void @png_do_chop(%struct.png_row_info_struct* noundef %293, i8* noundef %297)
  br label %298

298:                                              ; preds = %292, %286
  %299 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %300 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %299, i32 0, i32 17
  %301 = load i32, i32* %300, align 4
  %302 = and i32 %301, 64
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %304, label %323

304:                                              ; preds = %298
  %305 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %306 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %307 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %306, i32 0, i32 46
  %308 = load i8*, i8** %307, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 1
  %310 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %311 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %310, i32 0, i32 108
  %312 = load i8*, i8** %311, align 8
  %313 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %314 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %313, i32 0, i32 109
  %315 = load i8*, i8** %314, align 8
  call void @png_do_quantize(%struct.png_row_info_struct* noundef %305, i8* noundef %309, i8* noundef %312, i8* noundef %315)
  %316 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %317 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %316, i32 0, i32 1
  %318 = load i64, i64* %317, align 8
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %304
  %321 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %321, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18.238, i64 0, i64 0)) #13
  unreachable

322:                                              ; preds = %304
  br label %323

323:                                              ; preds = %322, %298
  %324 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %325 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %324, i32 0, i32 17
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, 512
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %335

329:                                              ; preds = %323
  %330 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %331 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %332 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %331, i32 0, i32 46
  %333 = load i8*, i8** %332, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 1
  call void @png_do_expand_16(%struct.png_row_info_struct* noundef %330, i8* noundef %334)
  br label %335

335:                                              ; preds = %329, %323
  %336 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %337 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %336, i32 0, i32 17
  %338 = load i32, i32* %337, align 4
  %339 = and i32 %338, 16384
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %341, label %353

341:                                              ; preds = %335
  %342 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %343 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %342, i32 0, i32 15
  %344 = load i32, i32* %343, align 4
  %345 = and i32 %344, 2048
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %353

347:                                              ; preds = %341
  %348 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %349 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %350 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %349, i32 0, i32 46
  %351 = load i8*, i8** %350, align 8
  %352 = getelementptr inbounds i8, i8* %351, i64 1
  call void @png_do_gray_to_rgb(%struct.png_row_info_struct* noundef %348, i8* noundef %352)
  br label %353

353:                                              ; preds = %347, %341, %335
  %354 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %355 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %354, i32 0, i32 17
  %356 = load i32, i32* %355, align 4
  %357 = and i32 %356, 32
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %365

359:                                              ; preds = %353
  %360 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %361 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %362 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %361, i32 0, i32 46
  %363 = load i8*, i8** %362, align 8
  %364 = getelementptr inbounds i8, i8* %363, i64 1
  call void @png_do_invert(%struct.png_row_info_struct* noundef %360, i8* noundef %364)
  br label %365

365:                                              ; preds = %359, %353
  %366 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %367 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %366, i32 0, i32 17
  %368 = load i32, i32* %367, align 4
  %369 = and i32 %368, 524288
  %370 = icmp ne i32 %369, 0
  br i1 %370, label %371, label %377

371:                                              ; preds = %365
  %372 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %373 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %374 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %373, i32 0, i32 46
  %375 = load i8*, i8** %374, align 8
  %376 = getelementptr inbounds i8, i8* %375, i64 1
  call void @png_do_read_invert_alpha(%struct.png_row_info_struct* noundef %372, i8* noundef %376)
  br label %377

377:                                              ; preds = %371, %365
  %378 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %379 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %378, i32 0, i32 17
  %380 = load i32, i32* %379, align 4
  %381 = and i32 %380, 8
  %382 = icmp ne i32 %381, 0
  br i1 %382, label %383, label %391

383:                                              ; preds = %377
  %384 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %385 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %386 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %385, i32 0, i32 46
  %387 = load i8*, i8** %386, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 1
  %389 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %390 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %389, i32 0, i32 88
  call void @png_do_unshift(%struct.png_row_info_struct* noundef %384, i8* noundef %388, %struct.png_color_8_struct* noundef %390)
  br label %391

391:                                              ; preds = %383, %377
  %392 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %393 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %392, i32 0, i32 17
  %394 = load i32, i32* %393, align 4
  %395 = and i32 %394, 4
  %396 = icmp ne i32 %395, 0
  br i1 %396, label %397, label %403

397:                                              ; preds = %391
  %398 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %399 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %400 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %399, i32 0, i32 46
  %401 = load i8*, i8** %400, align 8
  %402 = getelementptr inbounds i8, i8* %401, i64 1
  call void @png_do_unpack(%struct.png_row_info_struct* noundef %398, i8* noundef %402)
  br label %403

403:                                              ; preds = %397, %391
  %404 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %405 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %404, i32 0, i32 2
  %406 = load i8, i8* %405, align 8
  %407 = zext i8 %406 to i32
  %408 = icmp eq i32 %407, 3
  br i1 %408, label %409, label %417

409:                                              ; preds = %403
  %410 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %411 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %410, i32 0, i32 54
  %412 = load i32, i32* %411, align 4
  %413 = icmp sge i32 %412, 0
  br i1 %413, label %414, label %417

414:                                              ; preds = %409
  %415 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %416 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  call void bitcast (void (%struct.png_struct_def.205*, %struct.png_row_info_struct*)* @png_do_check_palette_indexes to void (%struct.png_struct_def*, %struct.png_row_info_struct*)*)(%struct.png_struct_def* noundef %415, %struct.png_row_info_struct* noundef %416)
  br label %417

417:                                              ; preds = %414, %409, %403
  %418 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %419 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %418, i32 0, i32 17
  %420 = load i32, i32* %419, align 4
  %421 = and i32 %420, 1
  %422 = icmp ne i32 %421, 0
  br i1 %422, label %423, label %429

423:                                              ; preds = %417
  %424 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %425 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %426 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %425, i32 0, i32 46
  %427 = load i8*, i8** %426, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 1
  call void @png_do_bgr(%struct.png_row_info_struct* noundef %424, i8* noundef %428)
  br label %429

429:                                              ; preds = %423, %417
  %430 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %431 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %430, i32 0, i32 17
  %432 = load i32, i32* %431, align 4
  %433 = and i32 %432, 65536
  %434 = icmp ne i32 %433, 0
  br i1 %434, label %435, label %441

435:                                              ; preds = %429
  %436 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %437 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %438 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %437, i32 0, i32 46
  %439 = load i8*, i8** %438, align 8
  %440 = getelementptr inbounds i8, i8* %439, i64 1
  call void @png_do_packswap(%struct.png_row_info_struct* noundef %436, i8* noundef %440)
  br label %441

441:                                              ; preds = %435, %429
  %442 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %443 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %442, i32 0, i32 17
  %444 = load i32, i32* %443, align 4
  %445 = and i32 %444, 32768
  %446 = icmp ne i32 %445, 0
  br i1 %446, label %447, label %460

447:                                              ; preds = %441
  %448 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %449 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %450 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %449, i32 0, i32 46
  %451 = load i8*, i8** %450, align 8
  %452 = getelementptr inbounds i8, i8* %451, i64 1
  %453 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %454 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %453, i32 0, i32 71
  %455 = load i16, i16* %454, align 2
  %456 = zext i16 %455 to i32
  %457 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %458 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %457, i32 0, i32 16
  %459 = load i32, i32* %458, align 8
  call void @png_do_read_filler(%struct.png_row_info_struct* noundef %448, i8* noundef %452, i32 noundef %456, i32 noundef %459)
  br label %460

460:                                              ; preds = %447, %441
  %461 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %462 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %461, i32 0, i32 17
  %463 = load i32, i32* %462, align 4
  %464 = and i32 %463, 131072
  %465 = icmp ne i32 %464, 0
  br i1 %465, label %466, label %472

466:                                              ; preds = %460
  %467 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %468 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %469 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %468, i32 0, i32 46
  %470 = load i8*, i8** %469, align 8
  %471 = getelementptr inbounds i8, i8* %470, i64 1
  call void @png_do_read_swap_alpha(%struct.png_row_info_struct* noundef %467, i8* noundef %471)
  br label %472

472:                                              ; preds = %466, %460
  %473 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %474 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %473, i32 0, i32 17
  %475 = load i32, i32* %474, align 4
  %476 = and i32 %475, 16
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %478, label %484

478:                                              ; preds = %472
  %479 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %480 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %481 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %480, i32 0, i32 46
  %482 = load i8*, i8** %481, align 8
  %483 = getelementptr inbounds i8, i8* %482, i64 1
  call void @png_do_swap(%struct.png_row_info_struct* noundef %479, i8* noundef %483)
  br label %484

484:                                              ; preds = %478, %472
  %485 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %486 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %485, i32 0, i32 17
  %487 = load i32, i32* %486, align 4
  %488 = and i32 %487, 1048576
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %490, label %574

490:                                              ; preds = %484
  %491 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %492 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %491, i32 0, i32 10
  %493 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %492, align 8
  %494 = icmp ne void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %493, null
  br i1 %494, label %495, label %505

495:                                              ; preds = %490
  %496 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %497 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %496, i32 0, i32 10
  %498 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %497, align 8
  %499 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %500 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %501 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %502 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %501, i32 0, i32 46
  %503 = load i8*, i8** %502, align 8
  %504 = getelementptr inbounds i8, i8* %503, i64 1
  call void %498(%struct.png_struct_def* noundef %499, %struct.png_row_info_struct* noundef %500, i8* noundef %504)
  br label %505

505:                                              ; preds = %495, %490
  %506 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %507 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %506, i32 0, i32 13
  %508 = load i8, i8* %507, align 8
  %509 = zext i8 %508 to i32
  %510 = icmp ne i32 %509, 0
  br i1 %510, label %511, label %517

511:                                              ; preds = %505
  %512 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %513 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %512, i32 0, i32 13
  %514 = load i8, i8* %513, align 8
  %515 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %516 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %515, i32 0, i32 3
  store i8 %514, i8* %516, align 1
  br label %517

517:                                              ; preds = %511, %505
  %518 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %519 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %518, i32 0, i32 14
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = icmp ne i32 %521, 0
  br i1 %522, label %523, label %529

523:                                              ; preds = %517
  %524 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %525 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %524, i32 0, i32 14
  %526 = load i8, i8* %525, align 1
  %527 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %528 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %527, i32 0, i32 4
  store i8 %526, i8* %528, align 2
  br label %529

529:                                              ; preds = %523, %517
  %530 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %531 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %530, i32 0, i32 3
  %532 = load i8, i8* %531, align 1
  %533 = zext i8 %532 to i32
  %534 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %535 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %534, i32 0, i32 4
  %536 = load i8, i8* %535, align 2
  %537 = zext i8 %536 to i32
  %538 = mul nsw i32 %533, %537
  %539 = trunc i32 %538 to i8
  %540 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %541 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %540, i32 0, i32 5
  store i8 %539, i8* %541, align 1
  %542 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %543 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %542, i32 0, i32 5
  %544 = load i8, i8* %543, align 1
  %545 = zext i8 %544 to i32
  %546 = icmp sge i32 %545, 8
  br i1 %546, label %547, label %558

547:                                              ; preds = %529
  %548 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %549 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %548, i32 0, i32 0
  %550 = load i32, i32* %549, align 8
  %551 = zext i32 %550 to i64
  %552 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %553 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %552, i32 0, i32 5
  %554 = load i8, i8* %553, align 1
  %555 = zext i8 %554 to i64
  %556 = lshr i64 %555, 3
  %557 = mul i64 %551, %556
  br label %570

558:                                              ; preds = %529
  %559 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %560 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %559, i32 0, i32 0
  %561 = load i32, i32* %560, align 8
  %562 = zext i32 %561 to i64
  %563 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %564 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %563, i32 0, i32 5
  %565 = load i8, i8* %564, align 1
  %566 = zext i8 %565 to i64
  %567 = mul i64 %562, %566
  %568 = add i64 %567, 7
  %569 = lshr i64 %568, 3
  br label %570

570:                                              ; preds = %558, %547
  %571 = phi i64 [ %557, %547 ], [ %569, %558 ]
  %572 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %573 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %572, i32 0, i32 1
  store i64 %571, i64* %573, align 8
  br label %574

574:                                              ; preds = %570, %484
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_expand_palette(%struct.png_struct_def* noalias noundef %0, %struct.png_row_info_struct* noundef %1, i8* noundef %2, %struct.png_color_struct* noundef %3, i8* noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_row_info_struct*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.png_color_struct*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %8, align 8
  store i8* %2, i8** %9, align 8
  store %struct.png_color_struct* %3, %struct.png_color_struct** %10, align 8
  store i8* %4, i8** %11, align 8
  store i32 %5, i32* %12, align 4
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %20 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %18, align 4
  %22 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %23 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %22, i32 0, i32 2
  %24 = load i8, i8* %23, align 8
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %343

27:                                               ; preds = %6
  %28 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %29 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %28, i32 0, i32 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = icmp slt i32 %31, 8
  br i1 %32, label %33, label %186

33:                                               ; preds = %27
  %34 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %35 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %34, i32 0, i32 3
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  switch i32 %37, label %176 [
    i32 1, label %38
    i32 2, label %86
    i32 4, label %132
  ]

38:                                               ; preds = %33
  %39 = load i8*, i8** %9, align 8
  %40 = load i32, i32* %18, align 4
  %41 = sub i32 %40, 1
  %42 = lshr i32 %41, 3
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %39, i64 %43
  store i8* %44, i8** %15, align 8
  %45 = load i8*, i8** %9, align 8
  %46 = load i32, i32* %18, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = getelementptr inbounds i8, i8* %48, i64 -1
  store i8* %49, i8** %16, align 8
  %50 = load i32, i32* %18, align 4
  %51 = add i32 %50, 7
  %52 = and i32 %51, 7
  %53 = sub nsw i32 7, %52
  store i32 %53, i32* %13, align 4
  store i32 0, i32* %17, align 4
  br label %54

54:                                               ; preds = %82, %38
  %55 = load i32, i32* %17, align 4
  %56 = load i32, i32* %18, align 4
  %57 = icmp ult i32 %55, %56
  br i1 %57, label %58, label %85

58:                                               ; preds = %54
  %59 = load i8*, i8** %15, align 8
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = load i32, i32* %13, align 4
  %63 = ashr i32 %61, %62
  %64 = and i32 %63, 1
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = load i8*, i8** %16, align 8
  store i8 1, i8* %67, align 1
  br label %70

68:                                               ; preds = %58
  %69 = load i8*, i8** %16, align 8
  store i8 0, i8* %69, align 1
  br label %70

70:                                               ; preds = %68, %66
  %71 = load i32, i32* %13, align 4
  %72 = icmp eq i32 %71, 7
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  store i32 0, i32* %13, align 4
  %74 = load i8*, i8** %15, align 8
  %75 = getelementptr inbounds i8, i8* %74, i32 -1
  store i8* %75, i8** %15, align 8
  br label %79

76:                                               ; preds = %70
  %77 = load i32, i32* %13, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %13, align 4
  br label %79

79:                                               ; preds = %76, %73
  %80 = load i8*, i8** %16, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 -1
  store i8* %81, i8** %16, align 8
  br label %82

82:                                               ; preds = %79
  %83 = load i32, i32* %17, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %17, align 4
  br label %54, !llvm.loop !151

85:                                               ; preds = %54
  br label %177

86:                                               ; preds = %33
  %87 = load i8*, i8** %9, align 8
  %88 = load i32, i32* %18, align 4
  %89 = sub i32 %88, 1
  %90 = lshr i32 %89, 2
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %87, i64 %91
  store i8* %92, i8** %15, align 8
  %93 = load i8*, i8** %9, align 8
  %94 = load i32, i32* %18, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = getelementptr inbounds i8, i8* %96, i64 -1
  store i8* %97, i8** %16, align 8
  %98 = load i32, i32* %18, align 4
  %99 = add i32 %98, 3
  %100 = and i32 %99, 3
  %101 = sub i32 3, %100
  %102 = shl i32 %101, 1
  store i32 %102, i32* %13, align 4
  store i32 0, i32* %17, align 4
  br label %103

103:                                              ; preds = %128, %86
  %104 = load i32, i32* %17, align 4
  %105 = load i32, i32* %18, align 4
  %106 = icmp ult i32 %104, %105
  br i1 %106, label %107, label %131

107:                                              ; preds = %103
  %108 = load i8*, i8** %15, align 8
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = load i32, i32* %13, align 4
  %112 = ashr i32 %110, %111
  %113 = and i32 %112, 3
  store i32 %113, i32* %14, align 4
  %114 = load i32, i32* %14, align 4
  %115 = trunc i32 %114 to i8
  %116 = load i8*, i8** %16, align 8
  store i8 %115, i8* %116, align 1
  %117 = load i32, i32* %13, align 4
  %118 = icmp eq i32 %117, 6
  br i1 %118, label %119, label %122

119:                                              ; preds = %107
  store i32 0, i32* %13, align 4
  %120 = load i8*, i8** %15, align 8
  %121 = getelementptr inbounds i8, i8* %120, i32 -1
  store i8* %121, i8** %15, align 8
  br label %125

122:                                              ; preds = %107
  %123 = load i32, i32* %13, align 4
  %124 = add nsw i32 %123, 2
  store i32 %124, i32* %13, align 4
  br label %125

125:                                              ; preds = %122, %119
  %126 = load i8*, i8** %16, align 8
  %127 = getelementptr inbounds i8, i8* %126, i32 -1
  store i8* %127, i8** %16, align 8
  br label %128

128:                                              ; preds = %125
  %129 = load i32, i32* %17, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %17, align 4
  br label %103, !llvm.loop !152

131:                                              ; preds = %103
  br label %177

132:                                              ; preds = %33
  %133 = load i8*, i8** %9, align 8
  %134 = load i32, i32* %18, align 4
  %135 = sub i32 %134, 1
  %136 = lshr i32 %135, 1
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %133, i64 %137
  store i8* %138, i8** %15, align 8
  %139 = load i8*, i8** %9, align 8
  %140 = load i32, i32* %18, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %139, i64 %141
  %143 = getelementptr inbounds i8, i8* %142, i64 -1
  store i8* %143, i8** %16, align 8
  %144 = load i32, i32* %18, align 4
  %145 = and i32 %144, 1
  %146 = shl i32 %145, 2
  store i32 %146, i32* %13, align 4
  store i32 0, i32* %17, align 4
  br label %147

147:                                              ; preds = %172, %132
  %148 = load i32, i32* %17, align 4
  %149 = load i32, i32* %18, align 4
  %150 = icmp ult i32 %148, %149
  br i1 %150, label %151, label %175

151:                                              ; preds = %147
  %152 = load i8*, i8** %15, align 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = load i32, i32* %13, align 4
  %156 = ashr i32 %154, %155
  %157 = and i32 %156, 15
  store i32 %157, i32* %14, align 4
  %158 = load i32, i32* %14, align 4
  %159 = trunc i32 %158 to i8
  %160 = load i8*, i8** %16, align 8
  store i8 %159, i8* %160, align 1
  %161 = load i32, i32* %13, align 4
  %162 = icmp eq i32 %161, 4
  br i1 %162, label %163, label %166

163:                                              ; preds = %151
  store i32 0, i32* %13, align 4
  %164 = load i8*, i8** %15, align 8
  %165 = getelementptr inbounds i8, i8* %164, i32 -1
  store i8* %165, i8** %15, align 8
  br label %169

166:                                              ; preds = %151
  %167 = load i32, i32* %13, align 4
  %168 = add nsw i32 %167, 4
  store i32 %168, i32* %13, align 4
  br label %169

169:                                              ; preds = %166, %163
  %170 = load i8*, i8** %16, align 8
  %171 = getelementptr inbounds i8, i8* %170, i32 -1
  store i8* %171, i8** %16, align 8
  br label %172

172:                                              ; preds = %169
  %173 = load i32, i32* %17, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %17, align 4
  br label %147, !llvm.loop !153

175:                                              ; preds = %147
  br label %177

176:                                              ; preds = %33
  br label %177

177:                                              ; preds = %176, %175, %131, %85
  %178 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %179 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %178, i32 0, i32 3
  store i8 8, i8* %179, align 1
  %180 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %181 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %180, i32 0, i32 5
  store i8 8, i8* %181, align 1
  %182 = load i32, i32* %18, align 4
  %183 = zext i32 %182 to i64
  %184 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %185 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %184, i32 0, i32 1
  store i64 %183, i64* %185, align 8
  br label %186

186:                                              ; preds = %177, %27
  %187 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %188 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %187, i32 0, i32 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 8
  br i1 %191, label %192, label %342

192:                                              ; preds = %186
  %193 = load i32, i32* %12, align 4
  %194 = icmp sgt i32 %193, 0
  br i1 %194, label %195, label %277

195:                                              ; preds = %192
  %196 = load i8*, i8** %9, align 8
  %197 = load i32, i32* %18, align 4
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %196, i64 %198
  %200 = getelementptr inbounds i8, i8* %199, i64 -1
  store i8* %200, i8** %15, align 8
  %201 = load i8*, i8** %9, align 8
  %202 = load i32, i32* %18, align 4
  %203 = zext i32 %202 to i64
  %204 = shl i64 %203, 2
  %205 = getelementptr inbounds i8, i8* %201, i64 %204
  %206 = getelementptr inbounds i8, i8* %205, i64 -1
  store i8* %206, i8** %16, align 8
  store i32 0, i32* %17, align 4
  %207 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  br label %208

208:                                              ; preds = %260, %195
  %209 = load i32, i32* %17, align 4
  %210 = load i32, i32* %18, align 4
  %211 = icmp ult i32 %209, %210
  br i1 %211, label %212, label %263

212:                                              ; preds = %208
  %213 = load i8*, i8** %15, align 8
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = load i32, i32* %12, align 4
  %217 = icmp sge i32 %215, %216
  br i1 %217, label %218, label %221

218:                                              ; preds = %212
  %219 = load i8*, i8** %16, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 -1
  store i8* %220, i8** %16, align 8
  store i8 -1, i8* %219, align 1
  br label %230

221:                                              ; preds = %212
  %222 = load i8*, i8** %11, align 8
  %223 = load i8*, i8** %15, align 8
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds i8, i8* %222, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = load i8*, i8** %16, align 8
  %229 = getelementptr inbounds i8, i8* %228, i32 -1
  store i8* %229, i8** %16, align 8
  store i8 %227, i8* %228, align 1
  br label %230

230:                                              ; preds = %221, %218
  %231 = load %struct.png_color_struct*, %struct.png_color_struct** %10, align 8
  %232 = load i8*, i8** %15, align 8
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %231, i64 %234
  %236 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %235, i32 0, i32 2
  %237 = load i8, i8* %236, align 1
  %238 = load i8*, i8** %16, align 8
  %239 = getelementptr inbounds i8, i8* %238, i32 -1
  store i8* %239, i8** %16, align 8
  store i8 %237, i8* %238, align 1
  %240 = load %struct.png_color_struct*, %struct.png_color_struct** %10, align 8
  %241 = load i8*, i8** %15, align 8
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i64
  %244 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %240, i64 %243
  %245 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %244, i32 0, i32 1
  %246 = load i8, i8* %245, align 1
  %247 = load i8*, i8** %16, align 8
  %248 = getelementptr inbounds i8, i8* %247, i32 -1
  store i8* %248, i8** %16, align 8
  store i8 %246, i8* %247, align 1
  %249 = load %struct.png_color_struct*, %struct.png_color_struct** %10, align 8
  %250 = load i8*, i8** %15, align 8
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %249, i64 %252
  %254 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %253, i32 0, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = load i8*, i8** %16, align 8
  %257 = getelementptr inbounds i8, i8* %256, i32 -1
  store i8* %257, i8** %16, align 8
  store i8 %255, i8* %256, align 1
  %258 = load i8*, i8** %15, align 8
  %259 = getelementptr inbounds i8, i8* %258, i32 -1
  store i8* %259, i8** %15, align 8
  br label %260

260:                                              ; preds = %230
  %261 = load i32, i32* %17, align 4
  %262 = add i32 %261, 1
  store i32 %262, i32* %17, align 4
  br label %208, !llvm.loop !154

263:                                              ; preds = %208
  %264 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %265 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %264, i32 0, i32 3
  store i8 8, i8* %265, align 1
  %266 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %267 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %266, i32 0, i32 5
  store i8 32, i8* %267, align 1
  %268 = load i32, i32* %18, align 4
  %269 = mul i32 %268, 4
  %270 = zext i32 %269 to i64
  %271 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %272 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %271, i32 0, i32 1
  store i64 %270, i64* %272, align 8
  %273 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %274 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %273, i32 0, i32 2
  store i8 6, i8* %274, align 8
  %275 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %276 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %275, i32 0, i32 4
  store i8 4, i8* %276, align 2
  br label %341

277:                                              ; preds = %192
  %278 = load i8*, i8** %9, align 8
  %279 = load i32, i32* %18, align 4
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %278, i64 %280
  %282 = getelementptr inbounds i8, i8* %281, i64 -1
  store i8* %282, i8** %15, align 8
  %283 = load i8*, i8** %9, align 8
  %284 = load i32, i32* %18, align 4
  %285 = mul i32 %284, 3
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* %283, i64 %286
  %288 = getelementptr inbounds i8, i8* %287, i64 -1
  store i8* %288, i8** %16, align 8
  store i32 0, i32* %17, align 4
  %289 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  br label %290

290:                                              ; preds = %324, %277
  %291 = load i32, i32* %17, align 4
  %292 = load i32, i32* %18, align 4
  %293 = icmp ult i32 %291, %292
  br i1 %293, label %294, label %327

294:                                              ; preds = %290
  %295 = load %struct.png_color_struct*, %struct.png_color_struct** %10, align 8
  %296 = load i8*, i8** %15, align 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %295, i64 %298
  %300 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %299, i32 0, i32 2
  %301 = load i8, i8* %300, align 1
  %302 = load i8*, i8** %16, align 8
  %303 = getelementptr inbounds i8, i8* %302, i32 -1
  store i8* %303, i8** %16, align 8
  store i8 %301, i8* %302, align 1
  %304 = load %struct.png_color_struct*, %struct.png_color_struct** %10, align 8
  %305 = load i8*, i8** %15, align 8
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i64
  %308 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %304, i64 %307
  %309 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %308, i32 0, i32 1
  %310 = load i8, i8* %309, align 1
  %311 = load i8*, i8** %16, align 8
  %312 = getelementptr inbounds i8, i8* %311, i32 -1
  store i8* %312, i8** %16, align 8
  store i8 %310, i8* %311, align 1
  %313 = load %struct.png_color_struct*, %struct.png_color_struct** %10, align 8
  %314 = load i8*, i8** %15, align 8
  %315 = load i8, i8* %314, align 1
  %316 = zext i8 %315 to i64
  %317 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %313, i64 %316
  %318 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %317, i32 0, i32 0
  %319 = load i8, i8* %318, align 1
  %320 = load i8*, i8** %16, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 -1
  store i8* %321, i8** %16, align 8
  store i8 %319, i8* %320, align 1
  %322 = load i8*, i8** %15, align 8
  %323 = getelementptr inbounds i8, i8* %322, i32 -1
  store i8* %323, i8** %15, align 8
  br label %324

324:                                              ; preds = %294
  %325 = load i32, i32* %17, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %17, align 4
  br label %290, !llvm.loop !155

327:                                              ; preds = %290
  %328 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %329 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %328, i32 0, i32 3
  store i8 8, i8* %329, align 1
  %330 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %331 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %330, i32 0, i32 5
  store i8 24, i8* %331, align 1
  %332 = load i32, i32* %18, align 4
  %333 = mul i32 %332, 3
  %334 = zext i32 %333 to i64
  %335 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %336 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %335, i32 0, i32 1
  store i64 %334, i64* %336, align 8
  %337 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %338 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %337, i32 0, i32 2
  store i8 2, i8* %338, align 8
  %339 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %8, align 8
  %340 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %339, i32 0, i32 4
  store i8 3, i8* %340, align 2
  br label %341

341:                                              ; preds = %327, %263
  br label %342

342:                                              ; preds = %341, %186
  br label %343

343:                                              ; preds = %342, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_expand(%struct.png_row_info_struct* noundef %0, i8* noundef %1, %struct.png_color_16_struct* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.png_color_16_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.png_color_16_struct* %2, %struct.png_color_16_struct** %6, align 8
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %12, align 4
  %28 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %29 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %28, i32 0, i32 2
  %30 = load i8, i8* %29, align 8
  %31 = zext i8 %30 to i32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %385

33:                                               ; preds = %3
  %34 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %35 = icmp ne %struct.png_color_16_struct* %34, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  %37 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %38 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %37, i32 0, i32 4
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  br label %42

41:                                               ; preds = %33
  br label %42

42:                                               ; preds = %41, %36
  %43 = phi i32 [ %40, %36 ], [ 0, %41 ]
  store i32 %43, i32* %13, align 4
  %44 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %44, i32 0, i32 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp slt i32 %47, 8
  br i1 %48, label %49, label %223

49:                                               ; preds = %42
  %50 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %51 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %50, i32 0, i32 3
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  switch i32 %53, label %213 [
    i32 1, label %54
    i32 2, label %105
    i32 4, label %163
  ]

54:                                               ; preds = %49
  %55 = load i32, i32* %13, align 4
  %56 = and i32 %55, 1
  %57 = mul i32 %56, 255
  store i32 %57, i32* %13, align 4
  %58 = load i8*, i8** %5, align 8
  %59 = load i32, i32* %12, align 4
  %60 = sub i32 %59, 1
  %61 = lshr i32 %60, 3
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %58, i64 %62
  store i8* %63, i8** %9, align 8
  %64 = load i8*, i8** %5, align 8
  %65 = load i32, i32* %12, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = getelementptr inbounds i8, i8* %67, i64 -1
  store i8* %68, i8** %10, align 8
  %69 = load i32, i32* %12, align 4
  %70 = add i32 %69, 7
  %71 = and i32 %70, 7
  %72 = sub nsw i32 7, %71
  store i32 %72, i32* %7, align 4
  store i32 0, i32* %11, align 4
  br label %73

73:                                               ; preds = %101, %54
  %74 = load i32, i32* %11, align 4
  %75 = load i32, i32* %12, align 4
  %76 = icmp ult i32 %74, %75
  br i1 %76, label %77, label %104

77:                                               ; preds = %73
  %78 = load i8*, i8** %9, align 8
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = load i32, i32* %7, align 4
  %82 = ashr i32 %80, %81
  %83 = and i32 %82, 1
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %77
  %86 = load i8*, i8** %10, align 8
  store i8 -1, i8* %86, align 1
  br label %89

87:                                               ; preds = %77
  %88 = load i8*, i8** %10, align 8
  store i8 0, i8* %88, align 1
  br label %89

89:                                               ; preds = %87, %85
  %90 = load i32, i32* %7, align 4
  %91 = icmp eq i32 %90, 7
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  store i32 0, i32* %7, align 4
  %93 = load i8*, i8** %9, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 -1
  store i8* %94, i8** %9, align 8
  br label %98

95:                                               ; preds = %89
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  br label %98

98:                                               ; preds = %95, %92
  %99 = load i8*, i8** %10, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 -1
  store i8* %100, i8** %10, align 8
  br label %101

101:                                              ; preds = %98
  %102 = load i32, i32* %11, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %11, align 4
  br label %73, !llvm.loop !156

104:                                              ; preds = %73
  br label %214

105:                                              ; preds = %49
  %106 = load i32, i32* %13, align 4
  %107 = and i32 %106, 3
  %108 = mul i32 %107, 85
  store i32 %108, i32* %13, align 4
  %109 = load i8*, i8** %5, align 8
  %110 = load i32, i32* %12, align 4
  %111 = sub i32 %110, 1
  %112 = lshr i32 %111, 2
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %109, i64 %113
  store i8* %114, i8** %9, align 8
  %115 = load i8*, i8** %5, align 8
  %116 = load i32, i32* %12, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = getelementptr inbounds i8, i8* %118, i64 -1
  store i8* %119, i8** %10, align 8
  %120 = load i32, i32* %12, align 4
  %121 = add i32 %120, 3
  %122 = and i32 %121, 3
  %123 = sub i32 3, %122
  %124 = shl i32 %123, 1
  store i32 %124, i32* %7, align 4
  store i32 0, i32* %11, align 4
  br label %125

125:                                              ; preds = %159, %105
  %126 = load i32, i32* %11, align 4
  %127 = load i32, i32* %12, align 4
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %129, label %162

129:                                              ; preds = %125
  %130 = load i8*, i8** %9, align 8
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = load i32, i32* %7, align 4
  %134 = ashr i32 %132, %133
  %135 = and i32 %134, 3
  store i32 %135, i32* %8, align 4
  %136 = load i32, i32* %8, align 4
  %137 = load i32, i32* %8, align 4
  %138 = shl i32 %137, 2
  %139 = or i32 %136, %138
  %140 = load i32, i32* %8, align 4
  %141 = shl i32 %140, 4
  %142 = or i32 %139, %141
  %143 = load i32, i32* %8, align 4
  %144 = shl i32 %143, 6
  %145 = or i32 %142, %144
  %146 = trunc i32 %145 to i8
  %147 = load i8*, i8** %10, align 8
  store i8 %146, i8* %147, align 1
  %148 = load i32, i32* %7, align 4
  %149 = icmp eq i32 %148, 6
  br i1 %149, label %150, label %153

150:                                              ; preds = %129
  store i32 0, i32* %7, align 4
  %151 = load i8*, i8** %9, align 8
  %152 = getelementptr inbounds i8, i8* %151, i32 -1
  store i8* %152, i8** %9, align 8
  br label %156

153:                                              ; preds = %129
  %154 = load i32, i32* %7, align 4
  %155 = add nsw i32 %154, 2
  store i32 %155, i32* %7, align 4
  br label %156

156:                                              ; preds = %153, %150
  %157 = load i8*, i8** %10, align 8
  %158 = getelementptr inbounds i8, i8* %157, i32 -1
  store i8* %158, i8** %10, align 8
  br label %159

159:                                              ; preds = %156
  %160 = load i32, i32* %11, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %11, align 4
  br label %125, !llvm.loop !157

162:                                              ; preds = %125
  br label %214

163:                                              ; preds = %49
  %164 = load i32, i32* %13, align 4
  %165 = and i32 %164, 15
  %166 = mul i32 %165, 17
  store i32 %166, i32* %13, align 4
  %167 = load i8*, i8** %5, align 8
  %168 = load i32, i32* %12, align 4
  %169 = sub i32 %168, 1
  %170 = lshr i32 %169, 1
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %167, i64 %171
  store i8* %172, i8** %9, align 8
  %173 = load i8*, i8** %5, align 8
  %174 = load i32, i32* %12, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  %177 = getelementptr inbounds i8, i8* %176, i64 -1
  store i8* %177, i8** %10, align 8
  %178 = load i32, i32* %12, align 4
  %179 = add i32 %178, 1
  %180 = and i32 %179, 1
  %181 = sub i32 1, %180
  %182 = shl i32 %181, 2
  store i32 %182, i32* %7, align 4
  store i32 0, i32* %11, align 4
  br label %183

183:                                              ; preds = %209, %163
  %184 = load i32, i32* %11, align 4
  %185 = load i32, i32* %12, align 4
  %186 = icmp ult i32 %184, %185
  br i1 %186, label %187, label %212

187:                                              ; preds = %183
  %188 = load i8*, i8** %9, align 8
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = load i32, i32* %7, align 4
  %192 = ashr i32 %190, %191
  %193 = and i32 %192, 15
  store i32 %193, i32* %8, align 4
  %194 = load i32, i32* %8, align 4
  %195 = load i32, i32* %8, align 4
  %196 = shl i32 %195, 4
  %197 = or i32 %194, %196
  %198 = trunc i32 %197 to i8
  %199 = load i8*, i8** %10, align 8
  store i8 %198, i8* %199, align 1
  %200 = load i32, i32* %7, align 4
  %201 = icmp eq i32 %200, 4
  br i1 %201, label %202, label %205

202:                                              ; preds = %187
  store i32 0, i32* %7, align 4
  %203 = load i8*, i8** %9, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 -1
  store i8* %204, i8** %9, align 8
  br label %206

205:                                              ; preds = %187
  store i32 4, i32* %7, align 4
  br label %206

206:                                              ; preds = %205, %202
  %207 = load i8*, i8** %10, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 -1
  store i8* %208, i8** %10, align 8
  br label %209

209:                                              ; preds = %206
  %210 = load i32, i32* %11, align 4
  %211 = add i32 %210, 1
  store i32 %211, i32* %11, align 4
  br label %183, !llvm.loop !158

212:                                              ; preds = %183
  br label %214

213:                                              ; preds = %49
  br label %214

214:                                              ; preds = %213, %212, %162, %104
  %215 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %216 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %215, i32 0, i32 3
  store i8 8, i8* %216, align 1
  %217 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %218 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %217, i32 0, i32 5
  store i8 8, i8* %218, align 1
  %219 = load i32, i32* %12, align 4
  %220 = zext i32 %219 to i64
  %221 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %222 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %221, i32 0, i32 1
  store i64 %220, i64* %222, align 8
  br label %223

223:                                              ; preds = %214, %42
  %224 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %225 = icmp ne %struct.png_color_16_struct* %224, null
  br i1 %225, label %226, label %384

226:                                              ; preds = %223
  %227 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %228 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %227, i32 0, i32 3
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = icmp eq i32 %230, 8
  br i1 %231, label %232, label %273

232:                                              ; preds = %226
  %233 = load i32, i32* %13, align 4
  %234 = and i32 %233, 255
  store i32 %234, i32* %13, align 4
  %235 = load i8*, i8** %5, align 8
  %236 = load i32, i32* %12, align 4
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i8, i8* %235, i64 %237
  %239 = getelementptr inbounds i8, i8* %238, i64 -1
  store i8* %239, i8** %9, align 8
  %240 = load i8*, i8** %5, align 8
  %241 = load i32, i32* %12, align 4
  %242 = zext i32 %241 to i64
  %243 = shl i64 %242, 1
  %244 = getelementptr inbounds i8, i8* %240, i64 %243
  %245 = getelementptr inbounds i8, i8* %244, i64 -1
  store i8* %245, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %246

246:                                              ; preds = %269, %232
  %247 = load i32, i32* %11, align 4
  %248 = load i32, i32* %12, align 4
  %249 = icmp ult i32 %247, %248
  br i1 %249, label %250, label %272

250:                                              ; preds = %246
  %251 = load i8*, i8** %9, align 8
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = and i32 %253, 255
  %255 = load i32, i32* %13, align 4
  %256 = icmp eq i32 %254, %255
  br i1 %256, label %257, label %260

257:                                              ; preds = %250
  %258 = load i8*, i8** %10, align 8
  %259 = getelementptr inbounds i8, i8* %258, i32 -1
  store i8* %259, i8** %10, align 8
  store i8 0, i8* %258, align 1
  br label %263

260:                                              ; preds = %250
  %261 = load i8*, i8** %10, align 8
  %262 = getelementptr inbounds i8, i8* %261, i32 -1
  store i8* %262, i8** %10, align 8
  store i8 -1, i8* %261, align 1
  br label %263

263:                                              ; preds = %260, %257
  %264 = load i8*, i8** %9, align 8
  %265 = getelementptr inbounds i8, i8* %264, i32 -1
  store i8* %265, i8** %9, align 8
  %266 = load i8, i8* %264, align 1
  %267 = load i8*, i8** %10, align 8
  %268 = getelementptr inbounds i8, i8* %267, i32 -1
  store i8* %268, i8** %10, align 8
  store i8 %266, i8* %267, align 1
  br label %269

269:                                              ; preds = %263
  %270 = load i32, i32* %11, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %11, align 4
  br label %246, !llvm.loop !159

272:                                              ; preds = %246
  br label %343

273:                                              ; preds = %226
  %274 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %275 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %274, i32 0, i32 3
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = icmp eq i32 %277, 16
  br i1 %278, label %279, label %342

279:                                              ; preds = %273
  %280 = load i32, i32* %13, align 4
  %281 = lshr i32 %280, 8
  %282 = and i32 %281, 255
  store i32 %282, i32* %14, align 4
  %283 = load i32, i32* %13, align 4
  %284 = and i32 %283, 255
  store i32 %284, i32* %15, align 4
  %285 = load i8*, i8** %5, align 8
  %286 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %287 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %286, i32 0, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds i8, i8* %285, i64 %288
  %290 = getelementptr inbounds i8, i8* %289, i64 -1
  store i8* %290, i8** %9, align 8
  %291 = load i8*, i8** %5, align 8
  %292 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %293 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %292, i32 0, i32 1
  %294 = load i64, i64* %293, align 8
  %295 = shl i64 %294, 1
  %296 = getelementptr inbounds i8, i8* %291, i64 %295
  %297 = getelementptr inbounds i8, i8* %296, i64 -1
  store i8* %297, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %298

298:                                              ; preds = %338, %279
  %299 = load i32, i32* %11, align 4
  %300 = load i32, i32* %12, align 4
  %301 = icmp ult i32 %299, %300
  br i1 %301, label %302, label %341

302:                                              ; preds = %298
  %303 = load i8*, i8** %9, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 -1
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = and i32 %306, 255
  %308 = load i32, i32* %14, align 4
  %309 = icmp eq i32 %307, %308
  br i1 %309, label %310, label %322

310:                                              ; preds = %302
  %311 = load i8*, i8** %9, align 8
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = and i32 %313, 255
  %315 = load i32, i32* %15, align 4
  %316 = icmp eq i32 %314, %315
  br i1 %316, label %317, label %322

317:                                              ; preds = %310
  %318 = load i8*, i8** %10, align 8
  %319 = getelementptr inbounds i8, i8* %318, i32 -1
  store i8* %319, i8** %10, align 8
  store i8 0, i8* %318, align 1
  %320 = load i8*, i8** %10, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 -1
  store i8* %321, i8** %10, align 8
  store i8 0, i8* %320, align 1
  br label %327

322:                                              ; preds = %310, %302
  %323 = load i8*, i8** %10, align 8
  %324 = getelementptr inbounds i8, i8* %323, i32 -1
  store i8* %324, i8** %10, align 8
  store i8 -1, i8* %323, align 1
  %325 = load i8*, i8** %10, align 8
  %326 = getelementptr inbounds i8, i8* %325, i32 -1
  store i8* %326, i8** %10, align 8
  store i8 -1, i8* %325, align 1
  br label %327

327:                                              ; preds = %322, %317
  %328 = load i8*, i8** %9, align 8
  %329 = getelementptr inbounds i8, i8* %328, i32 -1
  store i8* %329, i8** %9, align 8
  %330 = load i8, i8* %328, align 1
  %331 = load i8*, i8** %10, align 8
  %332 = getelementptr inbounds i8, i8* %331, i32 -1
  store i8* %332, i8** %10, align 8
  store i8 %330, i8* %331, align 1
  %333 = load i8*, i8** %9, align 8
  %334 = getelementptr inbounds i8, i8* %333, i32 -1
  store i8* %334, i8** %9, align 8
  %335 = load i8, i8* %333, align 1
  %336 = load i8*, i8** %10, align 8
  %337 = getelementptr inbounds i8, i8* %336, i32 -1
  store i8* %337, i8** %10, align 8
  store i8 %335, i8* %336, align 1
  br label %338

338:                                              ; preds = %327
  %339 = load i32, i32* %11, align 4
  %340 = add i32 %339, 1
  store i32 %340, i32* %11, align 4
  br label %298, !llvm.loop !160

341:                                              ; preds = %298
  br label %342

342:                                              ; preds = %341, %273
  br label %343

343:                                              ; preds = %342, %272
  %344 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %345 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %344, i32 0, i32 2
  store i8 4, i8* %345, align 8
  %346 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %347 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %346, i32 0, i32 4
  store i8 2, i8* %347, align 2
  %348 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %349 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %348, i32 0, i32 3
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = shl i32 %351, 1
  %353 = trunc i32 %352 to i8
  %354 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %355 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %354, i32 0, i32 5
  store i8 %353, i8* %355, align 1
  %356 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %357 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %356, i32 0, i32 5
  %358 = load i8, i8* %357, align 1
  %359 = zext i8 %358 to i32
  %360 = icmp sge i32 %359, 8
  br i1 %360, label %361, label %370

361:                                              ; preds = %343
  %362 = load i32, i32* %12, align 4
  %363 = zext i32 %362 to i64
  %364 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %365 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %364, i32 0, i32 5
  %366 = load i8, i8* %365, align 1
  %367 = zext i8 %366 to i64
  %368 = lshr i64 %367, 3
  %369 = mul i64 %363, %368
  br label %380

370:                                              ; preds = %343
  %371 = load i32, i32* %12, align 4
  %372 = zext i32 %371 to i64
  %373 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %374 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %373, i32 0, i32 5
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i64
  %377 = mul i64 %372, %376
  %378 = add i64 %377, 7
  %379 = lshr i64 %378, 3
  br label %380

380:                                              ; preds = %370, %361
  %381 = phi i64 [ %369, %361 ], [ %379, %370 ]
  %382 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %383 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %382, i32 0, i32 1
  store i64 %381, i64* %383, align 8
  br label %384

384:                                              ; preds = %380, %223
  br label %681

385:                                              ; preds = %3
  %386 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %387 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %386, i32 0, i32 2
  %388 = load i8, i8* %387, align 8
  %389 = zext i8 %388 to i32
  %390 = icmp eq i32 %389, 2
  br i1 %390, label %391, label %680

391:                                              ; preds = %385
  %392 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %393 = icmp ne %struct.png_color_16_struct* %392, null
  br i1 %393, label %394, label %680

394:                                              ; preds = %391
  %395 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %396 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %395, i32 0, i32 3
  %397 = load i8, i8* %396, align 1
  %398 = zext i8 %397 to i32
  %399 = icmp eq i32 %398, 8
  br i1 %399, label %400, label %484

400:                                              ; preds = %394
  %401 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %402 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %401, i32 0, i32 1
  %403 = load i16, i16* %402, align 2
  %404 = zext i16 %403 to i32
  %405 = and i32 %404, 255
  %406 = trunc i32 %405 to i8
  store i8 %406, i8* %16, align 1
  %407 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %408 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %407, i32 0, i32 2
  %409 = load i16, i16* %408, align 2
  %410 = zext i16 %409 to i32
  %411 = and i32 %410, 255
  %412 = trunc i32 %411 to i8
  store i8 %412, i8* %17, align 1
  %413 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %414 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %413, i32 0, i32 3
  %415 = load i16, i16* %414, align 2
  %416 = zext i16 %415 to i32
  %417 = and i32 %416, 255
  %418 = trunc i32 %417 to i8
  store i8 %418, i8* %18, align 1
  %419 = load i8*, i8** %5, align 8
  %420 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %421 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %420, i32 0, i32 1
  %422 = load i64, i64* %421, align 8
  %423 = getelementptr inbounds i8, i8* %419, i64 %422
  %424 = getelementptr inbounds i8, i8* %423, i64 -1
  store i8* %424, i8** %9, align 8
  %425 = load i8*, i8** %5, align 8
  %426 = load i32, i32* %12, align 4
  %427 = zext i32 %426 to i64
  %428 = shl i64 %427, 2
  %429 = getelementptr inbounds i8, i8* %425, i64 %428
  %430 = getelementptr inbounds i8, i8* %429, i64 -1
  store i8* %430, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %431

431:                                              ; preds = %480, %400
  %432 = load i32, i32* %11, align 4
  %433 = load i32, i32* %12, align 4
  %434 = icmp ult i32 %432, %433
  br i1 %434, label %435, label %483

435:                                              ; preds = %431
  %436 = load i8*, i8** %9, align 8
  %437 = getelementptr inbounds i8, i8* %436, i64 -2
  %438 = load i8, i8* %437, align 1
  %439 = zext i8 %438 to i32
  %440 = load i8, i8* %16, align 1
  %441 = zext i8 %440 to i32
  %442 = icmp eq i32 %439, %441
  br i1 %442, label %443, label %461

443:                                              ; preds = %435
  %444 = load i8*, i8** %9, align 8
  %445 = getelementptr inbounds i8, i8* %444, i64 -1
  %446 = load i8, i8* %445, align 1
  %447 = zext i8 %446 to i32
  %448 = load i8, i8* %17, align 1
  %449 = zext i8 %448 to i32
  %450 = icmp eq i32 %447, %449
  br i1 %450, label %451, label %461

451:                                              ; preds = %443
  %452 = load i8*, i8** %9, align 8
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i32
  %455 = load i8, i8* %18, align 1
  %456 = zext i8 %455 to i32
  %457 = icmp eq i32 %454, %456
  br i1 %457, label %458, label %461

458:                                              ; preds = %451
  %459 = load i8*, i8** %10, align 8
  %460 = getelementptr inbounds i8, i8* %459, i32 -1
  store i8* %460, i8** %10, align 8
  store i8 0, i8* %459, align 1
  br label %464

461:                                              ; preds = %451, %443, %435
  %462 = load i8*, i8** %10, align 8
  %463 = getelementptr inbounds i8, i8* %462, i32 -1
  store i8* %463, i8** %10, align 8
  store i8 -1, i8* %462, align 1
  br label %464

464:                                              ; preds = %461, %458
  %465 = load i8*, i8** %9, align 8
  %466 = getelementptr inbounds i8, i8* %465, i32 -1
  store i8* %466, i8** %9, align 8
  %467 = load i8, i8* %465, align 1
  %468 = load i8*, i8** %10, align 8
  %469 = getelementptr inbounds i8, i8* %468, i32 -1
  store i8* %469, i8** %10, align 8
  store i8 %467, i8* %468, align 1
  %470 = load i8*, i8** %9, align 8
  %471 = getelementptr inbounds i8, i8* %470, i32 -1
  store i8* %471, i8** %9, align 8
  %472 = load i8, i8* %470, align 1
  %473 = load i8*, i8** %10, align 8
  %474 = getelementptr inbounds i8, i8* %473, i32 -1
  store i8* %474, i8** %10, align 8
  store i8 %472, i8* %473, align 1
  %475 = load i8*, i8** %9, align 8
  %476 = getelementptr inbounds i8, i8* %475, i32 -1
  store i8* %476, i8** %9, align 8
  %477 = load i8, i8* %475, align 1
  %478 = load i8*, i8** %10, align 8
  %479 = getelementptr inbounds i8, i8* %478, i32 -1
  store i8* %479, i8** %10, align 8
  store i8 %477, i8* %478, align 1
  br label %480

480:                                              ; preds = %464
  %481 = load i32, i32* %11, align 4
  %482 = add i32 %481, 1
  store i32 %482, i32* %11, align 4
  br label %431, !llvm.loop !161

483:                                              ; preds = %431
  br label %639

484:                                              ; preds = %394
  %485 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %486 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %485, i32 0, i32 3
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = icmp eq i32 %488, 16
  br i1 %489, label %490, label %638

490:                                              ; preds = %484
  %491 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %492 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %491, i32 0, i32 1
  %493 = load i16, i16* %492, align 2
  %494 = zext i16 %493 to i32
  %495 = ashr i32 %494, 8
  %496 = and i32 %495, 255
  %497 = trunc i32 %496 to i8
  store i8 %497, i8* %19, align 1
  %498 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %499 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %498, i32 0, i32 2
  %500 = load i16, i16* %499, align 2
  %501 = zext i16 %500 to i32
  %502 = ashr i32 %501, 8
  %503 = and i32 %502, 255
  %504 = trunc i32 %503 to i8
  store i8 %504, i8* %20, align 1
  %505 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %506 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %505, i32 0, i32 3
  %507 = load i16, i16* %506, align 2
  %508 = zext i16 %507 to i32
  %509 = ashr i32 %508, 8
  %510 = and i32 %509, 255
  %511 = trunc i32 %510 to i8
  store i8 %511, i8* %21, align 1
  %512 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %513 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %512, i32 0, i32 1
  %514 = load i16, i16* %513, align 2
  %515 = zext i16 %514 to i32
  %516 = and i32 %515, 255
  %517 = trunc i32 %516 to i8
  store i8 %517, i8* %22, align 1
  %518 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %519 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %518, i32 0, i32 2
  %520 = load i16, i16* %519, align 2
  %521 = zext i16 %520 to i32
  %522 = and i32 %521, 255
  %523 = trunc i32 %522 to i8
  store i8 %523, i8* %23, align 1
  %524 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %525 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %524, i32 0, i32 3
  %526 = load i16, i16* %525, align 2
  %527 = zext i16 %526 to i32
  %528 = and i32 %527, 255
  %529 = trunc i32 %528 to i8
  store i8 %529, i8* %24, align 1
  %530 = load i8*, i8** %5, align 8
  %531 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %532 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %531, i32 0, i32 1
  %533 = load i64, i64* %532, align 8
  %534 = getelementptr inbounds i8, i8* %530, i64 %533
  %535 = getelementptr inbounds i8, i8* %534, i64 -1
  store i8* %535, i8** %9, align 8
  %536 = load i8*, i8** %5, align 8
  %537 = load i32, i32* %12, align 4
  %538 = zext i32 %537 to i64
  %539 = shl i64 %538, 3
  %540 = getelementptr inbounds i8, i8* %536, i64 %539
  %541 = getelementptr inbounds i8, i8* %540, i64 -1
  store i8* %541, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %542

542:                                              ; preds = %634, %490
  %543 = load i32, i32* %11, align 4
  %544 = load i32, i32* %12, align 4
  %545 = icmp ult i32 %543, %544
  br i1 %545, label %546, label %637

546:                                              ; preds = %542
  %547 = load i8*, i8** %9, align 8
  %548 = getelementptr inbounds i8, i8* %547, i64 -5
  %549 = load i8, i8* %548, align 1
  %550 = zext i8 %549 to i32
  %551 = load i8, i8* %19, align 1
  %552 = zext i8 %551 to i32
  %553 = icmp eq i32 %550, %552
  br i1 %553, label %554, label %598

554:                                              ; preds = %546
  %555 = load i8*, i8** %9, align 8
  %556 = getelementptr inbounds i8, i8* %555, i64 -4
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  %559 = load i8, i8* %22, align 1
  %560 = zext i8 %559 to i32
  %561 = icmp eq i32 %558, %560
  br i1 %561, label %562, label %598

562:                                              ; preds = %554
  %563 = load i8*, i8** %9, align 8
  %564 = getelementptr inbounds i8, i8* %563, i64 -3
  %565 = load i8, i8* %564, align 1
  %566 = zext i8 %565 to i32
  %567 = load i8, i8* %20, align 1
  %568 = zext i8 %567 to i32
  %569 = icmp eq i32 %566, %568
  br i1 %569, label %570, label %598

570:                                              ; preds = %562
  %571 = load i8*, i8** %9, align 8
  %572 = getelementptr inbounds i8, i8* %571, i64 -2
  %573 = load i8, i8* %572, align 1
  %574 = zext i8 %573 to i32
  %575 = load i8, i8* %23, align 1
  %576 = zext i8 %575 to i32
  %577 = icmp eq i32 %574, %576
  br i1 %577, label %578, label %598

578:                                              ; preds = %570
  %579 = load i8*, i8** %9, align 8
  %580 = getelementptr inbounds i8, i8* %579, i64 -1
  %581 = load i8, i8* %580, align 1
  %582 = zext i8 %581 to i32
  %583 = load i8, i8* %21, align 1
  %584 = zext i8 %583 to i32
  %585 = icmp eq i32 %582, %584
  br i1 %585, label %586, label %598

586:                                              ; preds = %578
  %587 = load i8*, i8** %9, align 8
  %588 = load i8, i8* %587, align 1
  %589 = zext i8 %588 to i32
  %590 = load i8, i8* %24, align 1
  %591 = zext i8 %590 to i32
  %592 = icmp eq i32 %589, %591
  br i1 %592, label %593, label %598

593:                                              ; preds = %586
  %594 = load i8*, i8** %10, align 8
  %595 = getelementptr inbounds i8, i8* %594, i32 -1
  store i8* %595, i8** %10, align 8
  store i8 0, i8* %594, align 1
  %596 = load i8*, i8** %10, align 8
  %597 = getelementptr inbounds i8, i8* %596, i32 -1
  store i8* %597, i8** %10, align 8
  store i8 0, i8* %596, align 1
  br label %603

598:                                              ; preds = %586, %578, %570, %562, %554, %546
  %599 = load i8*, i8** %10, align 8
  %600 = getelementptr inbounds i8, i8* %599, i32 -1
  store i8* %600, i8** %10, align 8
  store i8 -1, i8* %599, align 1
  %601 = load i8*, i8** %10, align 8
  %602 = getelementptr inbounds i8, i8* %601, i32 -1
  store i8* %602, i8** %10, align 8
  store i8 -1, i8* %601, align 1
  br label %603

603:                                              ; preds = %598, %593
  %604 = load i8*, i8** %9, align 8
  %605 = getelementptr inbounds i8, i8* %604, i32 -1
  store i8* %605, i8** %9, align 8
  %606 = load i8, i8* %604, align 1
  %607 = load i8*, i8** %10, align 8
  %608 = getelementptr inbounds i8, i8* %607, i32 -1
  store i8* %608, i8** %10, align 8
  store i8 %606, i8* %607, align 1
  %609 = load i8*, i8** %9, align 8
  %610 = getelementptr inbounds i8, i8* %609, i32 -1
  store i8* %610, i8** %9, align 8
  %611 = load i8, i8* %609, align 1
  %612 = load i8*, i8** %10, align 8
  %613 = getelementptr inbounds i8, i8* %612, i32 -1
  store i8* %613, i8** %10, align 8
  store i8 %611, i8* %612, align 1
  %614 = load i8*, i8** %9, align 8
  %615 = getelementptr inbounds i8, i8* %614, i32 -1
  store i8* %615, i8** %9, align 8
  %616 = load i8, i8* %614, align 1
  %617 = load i8*, i8** %10, align 8
  %618 = getelementptr inbounds i8, i8* %617, i32 -1
  store i8* %618, i8** %10, align 8
  store i8 %616, i8* %617, align 1
  %619 = load i8*, i8** %9, align 8
  %620 = getelementptr inbounds i8, i8* %619, i32 -1
  store i8* %620, i8** %9, align 8
  %621 = load i8, i8* %619, align 1
  %622 = load i8*, i8** %10, align 8
  %623 = getelementptr inbounds i8, i8* %622, i32 -1
  store i8* %623, i8** %10, align 8
  store i8 %621, i8* %622, align 1
  %624 = load i8*, i8** %9, align 8
  %625 = getelementptr inbounds i8, i8* %624, i32 -1
  store i8* %625, i8** %9, align 8
  %626 = load i8, i8* %624, align 1
  %627 = load i8*, i8** %10, align 8
  %628 = getelementptr inbounds i8, i8* %627, i32 -1
  store i8* %628, i8** %10, align 8
  store i8 %626, i8* %627, align 1
  %629 = load i8*, i8** %9, align 8
  %630 = getelementptr inbounds i8, i8* %629, i32 -1
  store i8* %630, i8** %9, align 8
  %631 = load i8, i8* %629, align 1
  %632 = load i8*, i8** %10, align 8
  %633 = getelementptr inbounds i8, i8* %632, i32 -1
  store i8* %633, i8** %10, align 8
  store i8 %631, i8* %632, align 1
  br label %634

634:                                              ; preds = %603
  %635 = load i32, i32* %11, align 4
  %636 = add i32 %635, 1
  store i32 %636, i32* %11, align 4
  br label %542, !llvm.loop !162

637:                                              ; preds = %542
  br label %638

638:                                              ; preds = %637, %484
  br label %639

639:                                              ; preds = %638, %483
  %640 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %641 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %640, i32 0, i32 2
  store i8 6, i8* %641, align 8
  %642 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %643 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %642, i32 0, i32 4
  store i8 4, i8* %643, align 2
  %644 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %645 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %644, i32 0, i32 3
  %646 = load i8, i8* %645, align 1
  %647 = zext i8 %646 to i32
  %648 = shl i32 %647, 2
  %649 = trunc i32 %648 to i8
  %650 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %651 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %650, i32 0, i32 5
  store i8 %649, i8* %651, align 1
  %652 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %653 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %652, i32 0, i32 5
  %654 = load i8, i8* %653, align 1
  %655 = zext i8 %654 to i32
  %656 = icmp sge i32 %655, 8
  br i1 %656, label %657, label %666

657:                                              ; preds = %639
  %658 = load i32, i32* %12, align 4
  %659 = zext i32 %658 to i64
  %660 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %661 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %660, i32 0, i32 5
  %662 = load i8, i8* %661, align 1
  %663 = zext i8 %662 to i64
  %664 = lshr i64 %663, 3
  %665 = mul i64 %659, %664
  br label %676

666:                                              ; preds = %639
  %667 = load i32, i32* %12, align 4
  %668 = zext i32 %667 to i64
  %669 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %670 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %669, i32 0, i32 5
  %671 = load i8, i8* %670, align 1
  %672 = zext i8 %671 to i64
  %673 = mul i64 %668, %672
  %674 = add i64 %673, 7
  %675 = lshr i64 %674, 3
  br label %676

676:                                              ; preds = %666, %657
  %677 = phi i64 [ %665, %657 ], [ %675, %666 ]
  %678 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %679 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %678, i32 0, i32 1
  store i64 %677, i64* %679, align 8
  br label %680

680:                                              ; preds = %676, %391, %385
  br label %681

681:                                              ; preds = %680, %384
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_do_rgb_to_gray(%struct.png_struct_def* noalias noundef %0, %struct.png_row_info_struct* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_row_info_struct*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i16, align 2
  %29 = alloca i16, align 2
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i16, align 2
  %35 = alloca i16, align 2
  %36 = alloca i16, align 2
  %37 = alloca i16, align 2
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i16, align 2
  %42 = alloca i16, align 2
  %43 = alloca i16, align 2
  %44 = alloca i16, align 2
  %45 = alloca i8, align 1
  %46 = alloca i8, align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %5, align 8
  store i8* %2, i8** %6, align 8
  store i32 0, i32* %7, align 4
  %47 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %48 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %47, i32 0, i32 2
  %49 = load i8, i8* %48, align 8
  %50 = zext i8 %49 to i32
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %665

53:                                               ; preds = %3
  %54 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %55 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %54, i32 0, i32 2
  %56 = load i8, i8* %55, align 8
  %57 = zext i8 %56 to i32
  %58 = and i32 %57, 2
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %665

60:                                               ; preds = %53
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 120
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  store i32 %64, i32* %8, align 4
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 121
  %67 = load i16, i16* %66, align 4
  %68 = zext i16 %67 to i32
  store i32 %68, i32* %9, align 4
  %69 = load i32, i32* %8, align 4
  %70 = sub i32 32768, %69
  %71 = load i32, i32* %9, align 4
  %72 = sub i32 %70, %71
  store i32 %72, i32* %10, align 4
  %73 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %74 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %73, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %11, align 4
  %76 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %77 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %76, i32 0, i32 2
  %78 = load i8, i8* %77, align 8
  %79 = zext i8 %78 to i32
  %80 = and i32 %79, 4
  %81 = icmp ne i32 %80, 0
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %12, align 4
  %83 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %84 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %83, i32 0, i32 3
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %86, 8
  br i1 %87, label %88, label %273

88:                                               ; preds = %60
  %89 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %89, i32 0, i32 83
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %205

93:                                               ; preds = %88
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 84
  %96 = load i8*, i8** %95, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %98, label %205

98:                                               ; preds = %93
  %99 = load i8*, i8** %6, align 8
  store i8* %99, i8** %13, align 8
  %100 = load i8*, i8** %6, align 8
  store i8* %100, i8** %14, align 8
  store i32 0, i32* %15, align 4
  br label %101

101:                                              ; preds = %201, %98
  %102 = load i32, i32* %15, align 4
  %103 = load i32, i32* %11, align 4
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %105, label %204

105:                                              ; preds = %101
  %106 = load i8*, i8** %13, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %13, align 8
  %108 = load i8, i8* %106, align 1
  store i8 %108, i8* %16, align 1
  %109 = load i8*, i8** %13, align 8
  %110 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %110, i8** %13, align 8
  %111 = load i8, i8* %109, align 1
  store i8 %111, i8* %17, align 1
  %112 = load i8*, i8** %13, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %113, i8** %13, align 8
  %114 = load i8, i8* %112, align 1
  store i8 %114, i8* %18, align 1
  %115 = load i8, i8* %16, align 1
  %116 = zext i8 %115 to i32
  %117 = load i8, i8* %17, align 1
  %118 = zext i8 %117 to i32
  %119 = icmp ne i32 %116, %118
  br i1 %119, label %126, label %120

120:                                              ; preds = %105
  %121 = load i8, i8* %16, align 1
  %122 = zext i8 %121 to i32
  %123 = load i8, i8* %18, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp ne i32 %122, %124
  br i1 %125, label %126, label %174

126:                                              ; preds = %120, %105
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 84
  %129 = load i8*, i8** %128, align 8
  %130 = load i8, i8* %16, align 1
  %131 = zext i8 %130 to i64
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %16, align 1
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 84
  %136 = load i8*, i8** %135, align 8
  %137 = load i8, i8* %17, align 1
  %138 = zext i8 %137 to i64
  %139 = getelementptr inbounds i8, i8* %136, i64 %138
  %140 = load i8, i8* %139, align 1
  store i8 %140, i8* %17, align 1
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 84
  %143 = load i8*, i8** %142, align 8
  %144 = load i8, i8* %18, align 1
  %145 = zext i8 %144 to i64
  %146 = getelementptr inbounds i8, i8* %143, i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %18, align 1
  %148 = load i32, i32* %7, align 4
  %149 = or i32 %148, 1
  store i32 %149, i32* %7, align 4
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %151 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %150, i32 0, i32 83
  %152 = load i8*, i8** %151, align 8
  %153 = load i32, i32* %8, align 4
  %154 = load i8, i8* %16, align 1
  %155 = zext i8 %154 to i32
  %156 = mul i32 %153, %155
  %157 = load i32, i32* %9, align 4
  %158 = load i8, i8* %17, align 1
  %159 = zext i8 %158 to i32
  %160 = mul i32 %157, %159
  %161 = add i32 %156, %160
  %162 = load i32, i32* %10, align 4
  %163 = load i8, i8* %18, align 1
  %164 = zext i8 %163 to i32
  %165 = mul i32 %162, %164
  %166 = add i32 %161, %165
  %167 = add i32 %166, 16384
  %168 = lshr i32 %167, 15
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %152, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = load i8*, i8** %14, align 8
  %173 = getelementptr inbounds i8, i8* %172, i32 1
  store i8* %173, i8** %14, align 8
  store i8 %171, i8* %172, align 1
  br label %191

174:                                              ; preds = %120
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %175, i32 0, i32 81
  %177 = load i8*, i8** %176, align 8
  %178 = icmp ne i8* %177, null
  br i1 %178, label %179, label %187

179:                                              ; preds = %174
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %181 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %180, i32 0, i32 81
  %182 = load i8*, i8** %181, align 8
  %183 = load i8, i8* %16, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds i8, i8* %182, i64 %184
  %186 = load i8, i8* %185, align 1
  store i8 %186, i8* %16, align 1
  br label %187

187:                                              ; preds = %179, %174
  %188 = load i8, i8* %16, align 1
  %189 = load i8*, i8** %14, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %14, align 8
  store i8 %188, i8* %189, align 1
  br label %191

191:                                              ; preds = %187, %126
  %192 = load i32, i32* %12, align 4
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %200

194:                                              ; preds = %191
  %195 = load i8*, i8** %13, align 8
  %196 = getelementptr inbounds i8, i8* %195, i32 1
  store i8* %196, i8** %13, align 8
  %197 = load i8, i8* %195, align 1
  %198 = load i8*, i8** %14, align 8
  %199 = getelementptr inbounds i8, i8* %198, i32 1
  store i8* %199, i8** %14, align 8
  store i8 %197, i8* %198, align 1
  br label %200

200:                                              ; preds = %194, %191
  br label %201

201:                                              ; preds = %200
  %202 = load i32, i32* %15, align 4
  %203 = add i32 %202, 1
  store i32 %203, i32* %15, align 4
  br label %101, !llvm.loop !163

204:                                              ; preds = %101
  br label %272

205:                                              ; preds = %93, %88
  %206 = load i8*, i8** %6, align 8
  store i8* %206, i8** %19, align 8
  %207 = load i8*, i8** %6, align 8
  store i8* %207, i8** %20, align 8
  store i32 0, i32* %21, align 4
  br label %208

208:                                              ; preds = %268, %205
  %209 = load i32, i32* %21, align 4
  %210 = load i32, i32* %11, align 4
  %211 = icmp ult i32 %209, %210
  br i1 %211, label %212, label %271

212:                                              ; preds = %208
  %213 = load i8*, i8** %19, align 8
  %214 = getelementptr inbounds i8, i8* %213, i32 1
  store i8* %214, i8** %19, align 8
  %215 = load i8, i8* %213, align 1
  store i8 %215, i8* %22, align 1
  %216 = load i8*, i8** %19, align 8
  %217 = getelementptr inbounds i8, i8* %216, i32 1
  store i8* %217, i8** %19, align 8
  %218 = load i8, i8* %216, align 1
  store i8 %218, i8* %23, align 1
  %219 = load i8*, i8** %19, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 1
  store i8* %220, i8** %19, align 8
  %221 = load i8, i8* %219, align 1
  store i8 %221, i8* %24, align 1
  %222 = load i8, i8* %22, align 1
  %223 = zext i8 %222 to i32
  %224 = load i8, i8* %23, align 1
  %225 = zext i8 %224 to i32
  %226 = icmp ne i32 %223, %225
  br i1 %226, label %233, label %227

227:                                              ; preds = %212
  %228 = load i8, i8* %22, align 1
  %229 = zext i8 %228 to i32
  %230 = load i8, i8* %24, align 1
  %231 = zext i8 %230 to i32
  %232 = icmp ne i32 %229, %231
  br i1 %232, label %233, label %254

233:                                              ; preds = %227, %212
  %234 = load i32, i32* %7, align 4
  %235 = or i32 %234, 1
  store i32 %235, i32* %7, align 4
  %236 = load i32, i32* %8, align 4
  %237 = load i8, i8* %22, align 1
  %238 = zext i8 %237 to i32
  %239 = mul i32 %236, %238
  %240 = load i32, i32* %9, align 4
  %241 = load i8, i8* %23, align 1
  %242 = zext i8 %241 to i32
  %243 = mul i32 %240, %242
  %244 = add i32 %239, %243
  %245 = load i32, i32* %10, align 4
  %246 = load i8, i8* %24, align 1
  %247 = zext i8 %246 to i32
  %248 = mul i32 %245, %247
  %249 = add i32 %244, %248
  %250 = lshr i32 %249, 15
  %251 = trunc i32 %250 to i8
  %252 = load i8*, i8** %20, align 8
  %253 = getelementptr inbounds i8, i8* %252, i32 1
  store i8* %253, i8** %20, align 8
  store i8 %251, i8* %252, align 1
  br label %258

254:                                              ; preds = %227
  %255 = load i8, i8* %22, align 1
  %256 = load i8*, i8** %20, align 8
  %257 = getelementptr inbounds i8, i8* %256, i32 1
  store i8* %257, i8** %20, align 8
  store i8 %255, i8* %256, align 1
  br label %258

258:                                              ; preds = %254, %233
  %259 = load i32, i32* %12, align 4
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %267

261:                                              ; preds = %258
  %262 = load i8*, i8** %19, align 8
  %263 = getelementptr inbounds i8, i8* %262, i32 1
  store i8* %263, i8** %19, align 8
  %264 = load i8, i8* %262, align 1
  %265 = load i8*, i8** %20, align 8
  %266 = getelementptr inbounds i8, i8* %265, i32 1
  store i8* %266, i8** %20, align 8
  store i8 %264, i8* %265, align 1
  br label %267

267:                                              ; preds = %261, %258
  br label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %21, align 4
  %270 = add i32 %269, 1
  store i32 %270, i32* %21, align 4
  br label %208, !llvm.loop !164

271:                                              ; preds = %208
  br label %272

272:                                              ; preds = %271, %204
  br label %608

273:                                              ; preds = %60
  %274 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %275 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %274, i32 0, i32 86
  %276 = load i16**, i16*** %275, align 8
  %277 = icmp ne i16** %276, null
  br i1 %277, label %278, label %497

278:                                              ; preds = %273
  %279 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %280 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %279, i32 0, i32 85
  %281 = load i16**, i16*** %280, align 8
  %282 = icmp ne i16** %281, null
  br i1 %282, label %283, label %497

283:                                              ; preds = %278
  %284 = load i8*, i8** %6, align 8
  store i8* %284, i8** %25, align 8
  %285 = load i8*, i8** %6, align 8
  store i8* %285, i8** %26, align 8
  store i32 0, i32* %27, align 4
  br label %286

286:                                              ; preds = %493, %283
  %287 = load i32, i32* %27, align 4
  %288 = load i32, i32* %11, align 4
  %289 = icmp ult i32 %287, %288
  br i1 %289, label %290, label %496

290:                                              ; preds = %286
  %291 = load i8*, i8** %25, align 8
  %292 = getelementptr inbounds i8, i8* %291, i32 1
  store i8* %292, i8** %25, align 8
  %293 = load i8, i8* %291, align 1
  store i8 %293, i8* %32, align 1
  %294 = load i8*, i8** %25, align 8
  %295 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %295, i8** %25, align 8
  %296 = load i8, i8* %294, align 1
  store i8 %296, i8* %33, align 1
  %297 = load i8, i8* %32, align 1
  %298 = zext i8 %297 to i32
  %299 = shl i32 %298, 8
  %300 = load i8, i8* %33, align 1
  %301 = zext i8 %300 to i32
  %302 = or i32 %299, %301
  %303 = trunc i32 %302 to i16
  store i16 %303, i16* %28, align 2
  %304 = load i8*, i8** %25, align 8
  %305 = getelementptr inbounds i8, i8* %304, i32 1
  store i8* %305, i8** %25, align 8
  %306 = load i8, i8* %304, align 1
  store i8 %306, i8* %32, align 1
  %307 = load i8*, i8** %25, align 8
  %308 = getelementptr inbounds i8, i8* %307, i32 1
  store i8* %308, i8** %25, align 8
  %309 = load i8, i8* %307, align 1
  store i8 %309, i8* %33, align 1
  %310 = load i8, i8* %32, align 1
  %311 = zext i8 %310 to i32
  %312 = shl i32 %311, 8
  %313 = load i8, i8* %33, align 1
  %314 = zext i8 %313 to i32
  %315 = or i32 %312, %314
  %316 = trunc i32 %315 to i16
  store i16 %316, i16* %29, align 2
  %317 = load i8*, i8** %25, align 8
  %318 = getelementptr inbounds i8, i8* %317, i32 1
  store i8* %318, i8** %25, align 8
  %319 = load i8, i8* %317, align 1
  store i8 %319, i8* %32, align 1
  %320 = load i8*, i8** %25, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 1
  store i8* %321, i8** %25, align 8
  %322 = load i8, i8* %320, align 1
  store i8 %322, i8* %33, align 1
  %323 = load i8, i8* %32, align 1
  %324 = zext i8 %323 to i32
  %325 = shl i32 %324, 8
  %326 = load i8, i8* %33, align 1
  %327 = zext i8 %326 to i32
  %328 = or i32 %325, %327
  %329 = trunc i32 %328 to i16
  store i16 %329, i16* %30, align 2
  %330 = load i16, i16* %28, align 2
  %331 = zext i16 %330 to i32
  %332 = load i16, i16* %29, align 2
  %333 = zext i16 %332 to i32
  %334 = icmp eq i32 %331, %333
  br i1 %334, label %335, label %369

335:                                              ; preds = %290
  %336 = load i16, i16* %28, align 2
  %337 = zext i16 %336 to i32
  %338 = load i16, i16* %30, align 2
  %339 = zext i16 %338 to i32
  %340 = icmp eq i32 %337, %339
  br i1 %340, label %341, label %369

341:                                              ; preds = %335
  %342 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %343 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %342, i32 0, i32 82
  %344 = load i16**, i16*** %343, align 8
  %345 = icmp ne i16** %344, null
  br i1 %345, label %346, label %366

346:                                              ; preds = %341
  %347 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %348 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %347, i32 0, i32 82
  %349 = load i16**, i16*** %348, align 8
  %350 = load i16, i16* %28, align 2
  %351 = zext i16 %350 to i32
  %352 = and i32 %351, 255
  %353 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %354 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %353, i32 0, i32 79
  %355 = load i32, i32* %354, align 8
  %356 = ashr i32 %352, %355
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i16*, i16** %349, i64 %357
  %359 = load i16*, i16** %358, align 8
  %360 = load i16, i16* %28, align 2
  %361 = zext i16 %360 to i32
  %362 = ashr i32 %361, 8
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i16, i16* %359, i64 %363
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %31, align 2
  br label %368

366:                                              ; preds = %341
  %367 = load i16, i16* %28, align 2
  store i16 %367, i16* %31, align 2
  br label %368

368:                                              ; preds = %366, %346
  br label %465

369:                                              ; preds = %335, %290
  %370 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %371 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %370, i32 0, i32 86
  %372 = load i16**, i16*** %371, align 8
  %373 = load i16, i16* %28, align 2
  %374 = zext i16 %373 to i32
  %375 = and i32 %374, 255
  %376 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %377 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %376, i32 0, i32 79
  %378 = load i32, i32* %377, align 8
  %379 = ashr i32 %375, %378
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i16*, i16** %372, i64 %380
  %382 = load i16*, i16** %381, align 8
  %383 = load i16, i16* %28, align 2
  %384 = zext i16 %383 to i32
  %385 = ashr i32 %384, 8
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i16, i16* %382, i64 %386
  %388 = load i16, i16* %387, align 2
  store i16 %388, i16* %34, align 2
  %389 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %390 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %389, i32 0, i32 86
  %391 = load i16**, i16*** %390, align 8
  %392 = load i16, i16* %29, align 2
  %393 = zext i16 %392 to i32
  %394 = and i32 %393, 255
  %395 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %396 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %395, i32 0, i32 79
  %397 = load i32, i32* %396, align 8
  %398 = ashr i32 %394, %397
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i16*, i16** %391, i64 %399
  %401 = load i16*, i16** %400, align 8
  %402 = load i16, i16* %29, align 2
  %403 = zext i16 %402 to i32
  %404 = ashr i32 %403, 8
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i16, i16* %401, i64 %405
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %35, align 2
  %408 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %409 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %408, i32 0, i32 86
  %410 = load i16**, i16*** %409, align 8
  %411 = load i16, i16* %30, align 2
  %412 = zext i16 %411 to i32
  %413 = and i32 %412, 255
  %414 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %415 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %414, i32 0, i32 79
  %416 = load i32, i32* %415, align 8
  %417 = ashr i32 %413, %416
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i16*, i16** %410, i64 %418
  %420 = load i16*, i16** %419, align 8
  %421 = load i16, i16* %30, align 2
  %422 = zext i16 %421 to i32
  %423 = ashr i32 %422, 8
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds i16, i16* %420, i64 %424
  %426 = load i16, i16* %425, align 2
  store i16 %426, i16* %36, align 2
  %427 = load i32, i32* %8, align 4
  %428 = load i16, i16* %34, align 2
  %429 = zext i16 %428 to i32
  %430 = mul i32 %427, %429
  %431 = load i32, i32* %9, align 4
  %432 = load i16, i16* %35, align 2
  %433 = zext i16 %432 to i32
  %434 = mul i32 %431, %433
  %435 = add i32 %430, %434
  %436 = load i32, i32* %10, align 4
  %437 = load i16, i16* %36, align 2
  %438 = zext i16 %437 to i32
  %439 = mul i32 %436, %438
  %440 = add i32 %435, %439
  %441 = add i32 %440, 16384
  %442 = lshr i32 %441, 15
  %443 = trunc i32 %442 to i16
  store i16 %443, i16* %37, align 2
  %444 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %445 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %444, i32 0, i32 85
  %446 = load i16**, i16*** %445, align 8
  %447 = load i16, i16* %37, align 2
  %448 = zext i16 %447 to i32
  %449 = and i32 %448, 255
  %450 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %451 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %450, i32 0, i32 79
  %452 = load i32, i32* %451, align 8
  %453 = ashr i32 %449, %452
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds i16*, i16** %446, i64 %454
  %456 = load i16*, i16** %455, align 8
  %457 = load i16, i16* %37, align 2
  %458 = zext i16 %457 to i32
  %459 = ashr i32 %458, 8
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i16, i16* %456, i64 %460
  %462 = load i16, i16* %461, align 2
  store i16 %462, i16* %31, align 2
  %463 = load i32, i32* %7, align 4
  %464 = or i32 %463, 1
  store i32 %464, i32* %7, align 4
  br label %465

465:                                              ; preds = %369, %368
  %466 = load i16, i16* %31, align 2
  %467 = zext i16 %466 to i32
  %468 = ashr i32 %467, 8
  %469 = and i32 %468, 255
  %470 = trunc i32 %469 to i8
  %471 = load i8*, i8** %26, align 8
  %472 = getelementptr inbounds i8, i8* %471, i32 1
  store i8* %472, i8** %26, align 8
  store i8 %470, i8* %471, align 1
  %473 = load i16, i16* %31, align 2
  %474 = zext i16 %473 to i32
  %475 = and i32 %474, 255
  %476 = trunc i32 %475 to i8
  %477 = load i8*, i8** %26, align 8
  %478 = getelementptr inbounds i8, i8* %477, i32 1
  store i8* %478, i8** %26, align 8
  store i8 %476, i8* %477, align 1
  %479 = load i32, i32* %12, align 4
  %480 = icmp ne i32 %479, 0
  br i1 %480, label %481, label %492

481:                                              ; preds = %465
  %482 = load i8*, i8** %25, align 8
  %483 = getelementptr inbounds i8, i8* %482, i32 1
  store i8* %483, i8** %25, align 8
  %484 = load i8, i8* %482, align 1
  %485 = load i8*, i8** %26, align 8
  %486 = getelementptr inbounds i8, i8* %485, i32 1
  store i8* %486, i8** %26, align 8
  store i8 %484, i8* %485, align 1
  %487 = load i8*, i8** %25, align 8
  %488 = getelementptr inbounds i8, i8* %487, i32 1
  store i8* %488, i8** %25, align 8
  %489 = load i8, i8* %487, align 1
  %490 = load i8*, i8** %26, align 8
  %491 = getelementptr inbounds i8, i8* %490, i32 1
  store i8* %491, i8** %26, align 8
  store i8 %489, i8* %490, align 1
  br label %492

492:                                              ; preds = %481, %465
  br label %493

493:                                              ; preds = %492
  %494 = load i32, i32* %27, align 4
  %495 = add i32 %494, 1
  store i32 %495, i32* %27, align 4
  br label %286, !llvm.loop !165

496:                                              ; preds = %286
  br label %607

497:                                              ; preds = %278, %273
  %498 = load i8*, i8** %6, align 8
  store i8* %498, i8** %38, align 8
  %499 = load i8*, i8** %6, align 8
  store i8* %499, i8** %39, align 8
  store i32 0, i32* %40, align 4
  br label %500

500:                                              ; preds = %603, %497
  %501 = load i32, i32* %40, align 4
  %502 = load i32, i32* %11, align 4
  %503 = icmp ult i32 %501, %502
  br i1 %503, label %504, label %606

504:                                              ; preds = %500
  %505 = load i8*, i8** %38, align 8
  %506 = getelementptr inbounds i8, i8* %505, i32 1
  store i8* %506, i8** %38, align 8
  %507 = load i8, i8* %505, align 1
  store i8 %507, i8* %45, align 1
  %508 = load i8*, i8** %38, align 8
  %509 = getelementptr inbounds i8, i8* %508, i32 1
  store i8* %509, i8** %38, align 8
  %510 = load i8, i8* %508, align 1
  store i8 %510, i8* %46, align 1
  %511 = load i8, i8* %45, align 1
  %512 = zext i8 %511 to i32
  %513 = shl i32 %512, 8
  %514 = load i8, i8* %46, align 1
  %515 = zext i8 %514 to i32
  %516 = or i32 %513, %515
  %517 = trunc i32 %516 to i16
  store i16 %517, i16* %41, align 2
  %518 = load i8*, i8** %38, align 8
  %519 = getelementptr inbounds i8, i8* %518, i32 1
  store i8* %519, i8** %38, align 8
  %520 = load i8, i8* %518, align 1
  store i8 %520, i8* %45, align 1
  %521 = load i8*, i8** %38, align 8
  %522 = getelementptr inbounds i8, i8* %521, i32 1
  store i8* %522, i8** %38, align 8
  %523 = load i8, i8* %521, align 1
  store i8 %523, i8* %46, align 1
  %524 = load i8, i8* %45, align 1
  %525 = zext i8 %524 to i32
  %526 = shl i32 %525, 8
  %527 = load i8, i8* %46, align 1
  %528 = zext i8 %527 to i32
  %529 = or i32 %526, %528
  %530 = trunc i32 %529 to i16
  store i16 %530, i16* %42, align 2
  %531 = load i8*, i8** %38, align 8
  %532 = getelementptr inbounds i8, i8* %531, i32 1
  store i8* %532, i8** %38, align 8
  %533 = load i8, i8* %531, align 1
  store i8 %533, i8* %45, align 1
  %534 = load i8*, i8** %38, align 8
  %535 = getelementptr inbounds i8, i8* %534, i32 1
  store i8* %535, i8** %38, align 8
  %536 = load i8, i8* %534, align 1
  store i8 %536, i8* %46, align 1
  %537 = load i8, i8* %45, align 1
  %538 = zext i8 %537 to i32
  %539 = shl i32 %538, 8
  %540 = load i8, i8* %46, align 1
  %541 = zext i8 %540 to i32
  %542 = or i32 %539, %541
  %543 = trunc i32 %542 to i16
  store i16 %543, i16* %43, align 2
  %544 = load i16, i16* %41, align 2
  %545 = zext i16 %544 to i32
  %546 = load i16, i16* %42, align 2
  %547 = zext i16 %546 to i32
  %548 = icmp ne i32 %545, %547
  br i1 %548, label %555, label %549

549:                                              ; preds = %504
  %550 = load i16, i16* %41, align 2
  %551 = zext i16 %550 to i32
  %552 = load i16, i16* %43, align 2
  %553 = zext i16 %552 to i32
  %554 = icmp ne i32 %551, %553
  br i1 %554, label %555, label %558

555:                                              ; preds = %549, %504
  %556 = load i32, i32* %7, align 4
  %557 = or i32 %556, 1
  store i32 %557, i32* %7, align 4
  br label %558

558:                                              ; preds = %555, %549
  %559 = load i32, i32* %8, align 4
  %560 = load i16, i16* %41, align 2
  %561 = zext i16 %560 to i32
  %562 = mul i32 %559, %561
  %563 = load i32, i32* %9, align 4
  %564 = load i16, i16* %42, align 2
  %565 = zext i16 %564 to i32
  %566 = mul i32 %563, %565
  %567 = add i32 %562, %566
  %568 = load i32, i32* %10, align 4
  %569 = load i16, i16* %43, align 2
  %570 = zext i16 %569 to i32
  %571 = mul i32 %568, %570
  %572 = add i32 %567, %571
  %573 = add i32 %572, 16384
  %574 = lshr i32 %573, 15
  %575 = trunc i32 %574 to i16
  store i16 %575, i16* %44, align 2
  %576 = load i16, i16* %44, align 2
  %577 = zext i16 %576 to i32
  %578 = ashr i32 %577, 8
  %579 = and i32 %578, 255
  %580 = trunc i32 %579 to i8
  %581 = load i8*, i8** %39, align 8
  %582 = getelementptr inbounds i8, i8* %581, i32 1
  store i8* %582, i8** %39, align 8
  store i8 %580, i8* %581, align 1
  %583 = load i16, i16* %44, align 2
  %584 = zext i16 %583 to i32
  %585 = and i32 %584, 255
  %586 = trunc i32 %585 to i8
  %587 = load i8*, i8** %39, align 8
  %588 = getelementptr inbounds i8, i8* %587, i32 1
  store i8* %588, i8** %39, align 8
  store i8 %586, i8* %587, align 1
  %589 = load i32, i32* %12, align 4
  %590 = icmp ne i32 %589, 0
  br i1 %590, label %591, label %602

591:                                              ; preds = %558
  %592 = load i8*, i8** %38, align 8
  %593 = getelementptr inbounds i8, i8* %592, i32 1
  store i8* %593, i8** %38, align 8
  %594 = load i8, i8* %592, align 1
  %595 = load i8*, i8** %39, align 8
  %596 = getelementptr inbounds i8, i8* %595, i32 1
  store i8* %596, i8** %39, align 8
  store i8 %594, i8* %595, align 1
  %597 = load i8*, i8** %38, align 8
  %598 = getelementptr inbounds i8, i8* %597, i32 1
  store i8* %598, i8** %38, align 8
  %599 = load i8, i8* %597, align 1
  %600 = load i8*, i8** %39, align 8
  %601 = getelementptr inbounds i8, i8* %600, i32 1
  store i8* %601, i8** %39, align 8
  store i8 %599, i8* %600, align 1
  br label %602

602:                                              ; preds = %591, %558
  br label %603

603:                                              ; preds = %602
  %604 = load i32, i32* %40, align 4
  %605 = add i32 %604, 1
  store i32 %605, i32* %40, align 4
  br label %500, !llvm.loop !166

606:                                              ; preds = %500
  br label %607

607:                                              ; preds = %606, %496
  br label %608

608:                                              ; preds = %607, %272
  %609 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %610 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %609, i32 0, i32 4
  %611 = load i8, i8* %610, align 2
  %612 = zext i8 %611 to i32
  %613 = sub nsw i32 %612, 2
  %614 = trunc i32 %613 to i8
  %615 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %616 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %615, i32 0, i32 4
  store i8 %614, i8* %616, align 2
  %617 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %618 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %617, i32 0, i32 2
  %619 = load i8, i8* %618, align 8
  %620 = zext i8 %619 to i32
  %621 = and i32 %620, -3
  %622 = trunc i32 %621 to i8
  %623 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %624 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %623, i32 0, i32 2
  store i8 %622, i8* %624, align 8
  %625 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %626 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %625, i32 0, i32 4
  %627 = load i8, i8* %626, align 2
  %628 = zext i8 %627 to i32
  %629 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %630 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %629, i32 0, i32 3
  %631 = load i8, i8* %630, align 1
  %632 = zext i8 %631 to i32
  %633 = mul nsw i32 %628, %632
  %634 = trunc i32 %633 to i8
  %635 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %636 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %635, i32 0, i32 5
  store i8 %634, i8* %636, align 1
  %637 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %638 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %637, i32 0, i32 5
  %639 = load i8, i8* %638, align 1
  %640 = zext i8 %639 to i32
  %641 = icmp sge i32 %640, 8
  br i1 %641, label %642, label %651

642:                                              ; preds = %608
  %643 = load i32, i32* %11, align 4
  %644 = zext i32 %643 to i64
  %645 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %646 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %645, i32 0, i32 5
  %647 = load i8, i8* %646, align 1
  %648 = zext i8 %647 to i64
  %649 = lshr i64 %648, 3
  %650 = mul i64 %644, %649
  br label %661

651:                                              ; preds = %608
  %652 = load i32, i32* %11, align 4
  %653 = zext i32 %652 to i64
  %654 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %655 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %654, i32 0, i32 5
  %656 = load i8, i8* %655, align 1
  %657 = zext i8 %656 to i64
  %658 = mul i64 %653, %657
  %659 = add i64 %658, 7
  %660 = lshr i64 %659, 3
  br label %661

661:                                              ; preds = %651, %642
  %662 = phi i64 [ %650, %642 ], [ %660, %651 ]
  %663 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %664 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %663, i32 0, i32 1
  store i64 %662, i64* %664, align 8
  br label %665

665:                                              ; preds = %661, %53, %3
  %666 = load i32, i32* %7, align 4
  ret i32 %666
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_gray_to_rgb(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %15 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %16 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %6, align 4
  %18 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %19 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %18, i32 0, i32 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp sge i32 %21, 8
  br i1 %22, label %23, label %292

23:                                               ; preds = %2
  %24 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %25 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %24, i32 0, i32 2
  %26 = load i8, i8* %25, align 8
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %292

30:                                               ; preds = %23
  %31 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %32 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %31, i32 0, i32 2
  %33 = load i8, i8* %32, align 8
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %125

36:                                               ; preds = %30
  %37 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %38 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %37, i32 0, i32 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = icmp eq i32 %40, 8
  br i1 %41, label %42, label %75

42:                                               ; preds = %36
  %43 = load i8*, i8** %4, align 8
  %44 = load i32, i32* %6, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = getelementptr inbounds i8, i8* %46, i64 -1
  store i8* %47, i8** %7, align 8
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %6, align 4
  %50 = zext i32 %49 to i64
  %51 = mul i64 %50, 2
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  store i8* %52, i8** %8, align 8
  store i32 0, i32* %5, align 4
  br label %53

53:                                               ; preds = %71, %42
  %54 = load i32, i32* %5, align 4
  %55 = load i32, i32* %6, align 4
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %57, label %74

57:                                               ; preds = %53
  %58 = load i8*, i8** %7, align 8
  %59 = load i8, i8* %58, align 1
  %60 = load i8*, i8** %8, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 -1
  store i8* %61, i8** %8, align 8
  store i8 %59, i8* %60, align 1
  %62 = load i8*, i8** %7, align 8
  %63 = load i8, i8* %62, align 1
  %64 = load i8*, i8** %8, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 -1
  store i8* %65, i8** %8, align 8
  store i8 %63, i8* %64, align 1
  %66 = load i8*, i8** %7, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 -1
  store i8* %67, i8** %7, align 8
  %68 = load i8, i8* %66, align 1
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 -1
  store i8* %70, i8** %8, align 8
  store i8 %68, i8* %69, align 1
  br label %71

71:                                               ; preds = %57
  %72 = load i32, i32* %5, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %5, align 4
  br label %53, !llvm.loop !167

74:                                               ; preds = %53
  br label %124

75:                                               ; preds = %36
  %76 = load i8*, i8** %4, align 8
  %77 = load i32, i32* %6, align 4
  %78 = zext i32 %77 to i64
  %79 = mul i64 %78, 2
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = getelementptr inbounds i8, i8* %80, i64 -1
  store i8* %81, i8** %9, align 8
  %82 = load i8*, i8** %9, align 8
  %83 = load i32, i32* %6, align 4
  %84 = zext i32 %83 to i64
  %85 = mul i64 %84, 4
  %86 = getelementptr inbounds i8, i8* %82, i64 %85
  store i8* %86, i8** %10, align 8
  store i32 0, i32* %5, align 4
  br label %87

87:                                               ; preds = %120, %75
  %88 = load i32, i32* %5, align 4
  %89 = load i32, i32* %6, align 4
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %123

91:                                               ; preds = %87
  %92 = load i8*, i8** %9, align 8
  %93 = load i8, i8* %92, align 1
  %94 = load i8*, i8** %10, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 -1
  store i8* %95, i8** %10, align 8
  store i8 %93, i8* %94, align 1
  %96 = load i8*, i8** %9, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 -1
  %98 = load i8, i8* %97, align 1
  %99 = load i8*, i8** %10, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 -1
  store i8* %100, i8** %10, align 8
  store i8 %98, i8* %99, align 1
  %101 = load i8*, i8** %9, align 8
  %102 = load i8, i8* %101, align 1
  %103 = load i8*, i8** %10, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 -1
  store i8* %104, i8** %10, align 8
  store i8 %102, i8* %103, align 1
  %105 = load i8*, i8** %9, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 -1
  %107 = load i8, i8* %106, align 1
  %108 = load i8*, i8** %10, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 -1
  store i8* %109, i8** %10, align 8
  store i8 %107, i8* %108, align 1
  %110 = load i8*, i8** %9, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 -1
  store i8* %111, i8** %9, align 8
  %112 = load i8, i8* %110, align 1
  %113 = load i8*, i8** %10, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 -1
  store i8* %114, i8** %10, align 8
  store i8 %112, i8* %113, align 1
  %115 = load i8*, i8** %9, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 -1
  store i8* %116, i8** %9, align 8
  %117 = load i8, i8* %115, align 1
  %118 = load i8*, i8** %10, align 8
  %119 = getelementptr inbounds i8, i8* %118, i32 -1
  store i8* %119, i8** %10, align 8
  store i8 %117, i8* %118, align 1
  br label %120

120:                                              ; preds = %91
  %121 = load i32, i32* %5, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %5, align 4
  br label %87, !llvm.loop !168

123:                                              ; preds = %87
  br label %124

124:                                              ; preds = %123, %74
  br label %237

125:                                              ; preds = %30
  %126 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %127 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %126, i32 0, i32 2
  %128 = load i8, i8* %127, align 8
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 4
  br i1 %130, label %131, label %236

131:                                              ; preds = %125
  %132 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %133 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %132, i32 0, i32 3
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %135, 8
  br i1 %136, label %137, label %176

137:                                              ; preds = %131
  %138 = load i8*, i8** %4, align 8
  %139 = load i32, i32* %6, align 4
  %140 = zext i32 %139 to i64
  %141 = mul i64 %140, 2
  %142 = getelementptr inbounds i8, i8* %138, i64 %141
  %143 = getelementptr inbounds i8, i8* %142, i64 -1
  store i8* %143, i8** %11, align 8
  %144 = load i8*, i8** %11, align 8
  %145 = load i32, i32* %6, align 4
  %146 = zext i32 %145 to i64
  %147 = mul i64 %146, 2
  %148 = getelementptr inbounds i8, i8* %144, i64 %147
  store i8* %148, i8** %12, align 8
  store i32 0, i32* %5, align 4
  br label %149

149:                                              ; preds = %172, %137
  %150 = load i32, i32* %5, align 4
  %151 = load i32, i32* %6, align 4
  %152 = icmp ult i32 %150, %151
  br i1 %152, label %153, label %175

153:                                              ; preds = %149
  %154 = load i8*, i8** %11, align 8
  %155 = getelementptr inbounds i8, i8* %154, i32 -1
  store i8* %155, i8** %11, align 8
  %156 = load i8, i8* %154, align 1
  %157 = load i8*, i8** %12, align 8
  %158 = getelementptr inbounds i8, i8* %157, i32 -1
  store i8* %158, i8** %12, align 8
  store i8 %156, i8* %157, align 1
  %159 = load i8*, i8** %11, align 8
  %160 = load i8, i8* %159, align 1
  %161 = load i8*, i8** %12, align 8
  %162 = getelementptr inbounds i8, i8* %161, i32 -1
  store i8* %162, i8** %12, align 8
  store i8 %160, i8* %161, align 1
  %163 = load i8*, i8** %11, align 8
  %164 = load i8, i8* %163, align 1
  %165 = load i8*, i8** %12, align 8
  %166 = getelementptr inbounds i8, i8* %165, i32 -1
  store i8* %166, i8** %12, align 8
  store i8 %164, i8* %165, align 1
  %167 = load i8*, i8** %11, align 8
  %168 = getelementptr inbounds i8, i8* %167, i32 -1
  store i8* %168, i8** %11, align 8
  %169 = load i8, i8* %167, align 1
  %170 = load i8*, i8** %12, align 8
  %171 = getelementptr inbounds i8, i8* %170, i32 -1
  store i8* %171, i8** %12, align 8
  store i8 %169, i8* %170, align 1
  br label %172

172:                                              ; preds = %153
  %173 = load i32, i32* %5, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %5, align 4
  br label %149, !llvm.loop !169

175:                                              ; preds = %149
  br label %235

176:                                              ; preds = %131
  %177 = load i8*, i8** %4, align 8
  %178 = load i32, i32* %6, align 4
  %179 = zext i32 %178 to i64
  %180 = mul i64 %179, 4
  %181 = getelementptr inbounds i8, i8* %177, i64 %180
  %182 = getelementptr inbounds i8, i8* %181, i64 -1
  store i8* %182, i8** %13, align 8
  %183 = load i8*, i8** %13, align 8
  %184 = load i32, i32* %6, align 4
  %185 = zext i32 %184 to i64
  %186 = mul i64 %185, 4
  %187 = getelementptr inbounds i8, i8* %183, i64 %186
  store i8* %187, i8** %14, align 8
  store i32 0, i32* %5, align 4
  br label %188

188:                                              ; preds = %231, %176
  %189 = load i32, i32* %5, align 4
  %190 = load i32, i32* %6, align 4
  %191 = icmp ult i32 %189, %190
  br i1 %191, label %192, label %234

192:                                              ; preds = %188
  %193 = load i8*, i8** %13, align 8
  %194 = getelementptr inbounds i8, i8* %193, i32 -1
  store i8* %194, i8** %13, align 8
  %195 = load i8, i8* %193, align 1
  %196 = load i8*, i8** %14, align 8
  %197 = getelementptr inbounds i8, i8* %196, i32 -1
  store i8* %197, i8** %14, align 8
  store i8 %195, i8* %196, align 1
  %198 = load i8*, i8** %13, align 8
  %199 = getelementptr inbounds i8, i8* %198, i32 -1
  store i8* %199, i8** %13, align 8
  %200 = load i8, i8* %198, align 1
  %201 = load i8*, i8** %14, align 8
  %202 = getelementptr inbounds i8, i8* %201, i32 -1
  store i8* %202, i8** %14, align 8
  store i8 %200, i8* %201, align 1
  %203 = load i8*, i8** %13, align 8
  %204 = load i8, i8* %203, align 1
  %205 = load i8*, i8** %14, align 8
  %206 = getelementptr inbounds i8, i8* %205, i32 -1
  store i8* %206, i8** %14, align 8
  store i8 %204, i8* %205, align 1
  %207 = load i8*, i8** %13, align 8
  %208 = getelementptr inbounds i8, i8* %207, i64 -1
  %209 = load i8, i8* %208, align 1
  %210 = load i8*, i8** %14, align 8
  %211 = getelementptr inbounds i8, i8* %210, i32 -1
  store i8* %211, i8** %14, align 8
  store i8 %209, i8* %210, align 1
  %212 = load i8*, i8** %13, align 8
  %213 = load i8, i8* %212, align 1
  %214 = load i8*, i8** %14, align 8
  %215 = getelementptr inbounds i8, i8* %214, i32 -1
  store i8* %215, i8** %14, align 8
  store i8 %213, i8* %214, align 1
  %216 = load i8*, i8** %13, align 8
  %217 = getelementptr inbounds i8, i8* %216, i64 -1
  %218 = load i8, i8* %217, align 1
  %219 = load i8*, i8** %14, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 -1
  store i8* %220, i8** %14, align 8
  store i8 %218, i8* %219, align 1
  %221 = load i8*, i8** %13, align 8
  %222 = getelementptr inbounds i8, i8* %221, i32 -1
  store i8* %222, i8** %13, align 8
  %223 = load i8, i8* %221, align 1
  %224 = load i8*, i8** %14, align 8
  %225 = getelementptr inbounds i8, i8* %224, i32 -1
  store i8* %225, i8** %14, align 8
  store i8 %223, i8* %224, align 1
  %226 = load i8*, i8** %13, align 8
  %227 = getelementptr inbounds i8, i8* %226, i32 -1
  store i8* %227, i8** %13, align 8
  %228 = load i8, i8* %226, align 1
  %229 = load i8*, i8** %14, align 8
  %230 = getelementptr inbounds i8, i8* %229, i32 -1
  store i8* %230, i8** %14, align 8
  store i8 %228, i8* %229, align 1
  br label %231

231:                                              ; preds = %192
  %232 = load i32, i32* %5, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %5, align 4
  br label %188, !llvm.loop !170

234:                                              ; preds = %188
  br label %235

235:                                              ; preds = %234, %175
  br label %236

236:                                              ; preds = %235, %125
  br label %237

237:                                              ; preds = %236, %124
  %238 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %239 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %238, i32 0, i32 4
  %240 = load i8, i8* %239, align 2
  %241 = zext i8 %240 to i32
  %242 = add nsw i32 %241, 2
  %243 = trunc i32 %242 to i8
  %244 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %245 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %244, i32 0, i32 4
  store i8 %243, i8* %245, align 2
  %246 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %247 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %246, i32 0, i32 2
  %248 = load i8, i8* %247, align 8
  %249 = zext i8 %248 to i32
  %250 = or i32 %249, 2
  %251 = trunc i32 %250 to i8
  store i8 %251, i8* %247, align 8
  %252 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %253 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %252, i32 0, i32 4
  %254 = load i8, i8* %253, align 2
  %255 = zext i8 %254 to i32
  %256 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %257 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %256, i32 0, i32 3
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = mul nsw i32 %255, %259
  %261 = trunc i32 %260 to i8
  %262 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %263 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %262, i32 0, i32 5
  store i8 %261, i8* %263, align 1
  %264 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %265 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %264, i32 0, i32 5
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = icmp sge i32 %267, 8
  br i1 %268, label %269, label %278

269:                                              ; preds = %237
  %270 = load i32, i32* %6, align 4
  %271 = zext i32 %270 to i64
  %272 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %273 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %272, i32 0, i32 5
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i64
  %276 = lshr i64 %275, 3
  %277 = mul i64 %271, %276
  br label %288

278:                                              ; preds = %237
  %279 = load i32, i32* %6, align 4
  %280 = zext i32 %279 to i64
  %281 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %282 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %281, i32 0, i32 5
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = mul i64 %280, %284
  %286 = add i64 %285, 7
  %287 = lshr i64 %286, 3
  br label %288

288:                                              ; preds = %278, %269
  %289 = phi i64 [ %277, %269 ], [ %287, %278 ]
  %290 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %291 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %290, i32 0, i32 1
  store i64 %289, i64* %291, align 8
  br label %292

292:                                              ; preds = %288, %23, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_compose(%struct.png_row_info_struct* noundef %0, i8* noundef %1, %struct.png_struct_def* noalias noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i16**, align 8
  %11 = alloca i16**, align 8
  %12 = alloca i16**, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca i16, align 2
  %33 = alloca i16, align 2
  %34 = alloca i16, align 2
  %35 = alloca i16, align 2
  %36 = alloca i16, align 2
  %37 = alloca i16, align 2
  %38 = alloca i16, align 2
  %39 = alloca i16, align 2
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i16, align 2
  %43 = alloca i8, align 1
  %44 = alloca i16, align 2
  %45 = alloca i16, align 2
  %46 = alloca i16, align 2
  %47 = alloca i16, align 2
  %48 = alloca i16, align 2
  %49 = alloca i16, align 2
  %50 = alloca i32, align 4
  %51 = alloca i16, align 2
  %52 = alloca i16, align 2
  %53 = alloca i16, align 2
  %54 = alloca i32, align 4
  %55 = alloca i8, align 1
  %56 = alloca i8, align 1
  %57 = alloca i8, align 1
  %58 = alloca i16, align 2
  %59 = alloca i16, align 2
  %60 = alloca i16, align 2
  %61 = alloca i8, align 1
  %62 = alloca i16, align 2
  %63 = alloca i16, align 2
  %64 = alloca i16, align 2
  %65 = alloca i16, align 2
  %66 = alloca i16, align 2
  %67 = alloca i16, align 2
  %68 = alloca i16, align 2
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i16, align 2
  %73 = alloca i16, align 2
  %74 = alloca i16, align 2
  %75 = alloca i16, align 2
  %76 = alloca i16, align 2
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.png_struct_def* %2, %struct.png_struct_def** %6, align 8
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 81
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** %7, align 8
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %84 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %83, i32 0, i32 83
  %85 = load i8*, i8** %84, align 8
  store i8* %85, i8** %8, align 8
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 84
  %88 = load i8*, i8** %87, align 8
  store i8* %88, i8** %9, align 8
  %89 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %89, i32 0, i32 82
  %91 = load i16**, i16*** %90, align 8
  store i16** %91, i16*** %10, align 8
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 85
  %94 = load i16**, i16*** %93, align 8
  store i16** %94, i16*** %11, align 8
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 86
  %97 = load i16**, i16*** %96, align 8
  store i16** %97, i16*** %12, align 8
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %99 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %98, i32 0, i32 79
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %13, align 4
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 16
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 8192
  %105 = icmp ne i32 %104, 0
  %106 = zext i1 %105 to i32
  store i32 %106, i32* %14, align 4
  %107 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %108 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  store i32 %109, i32* %17, align 4
  %110 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %111 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %110, i32 0, i32 2
  %112 = load i8, i8* %111, align 8
  %113 = zext i8 %112 to i32
  switch i32 %113, label %2657 [
    i32 0, label %114
    i32 2, label %689
    i32 4, label %1206
    i32 6, label %1637
  ]

114:                                              ; preds = %3
  %115 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %116 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %115, i32 0, i32 3
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  switch i32 %118, label %687 [
    i32 1, label %119
    i32 2, label %175
    i32 4, label %331
    i32 8, label %481
    i32 16, label %553
  ]

119:                                              ; preds = %114
  %120 = load i8*, i8** %5, align 8
  store i8* %120, i8** %15, align 8
  store i32 7, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %121

121:                                              ; preds = %171, %119
  %122 = load i32, i32* %16, align 4
  %123 = load i32, i32* %17, align 4
  %124 = icmp ult i32 %122, %123
  br i1 %124, label %125, label %174

125:                                              ; preds = %121
  %126 = load i8*, i8** %15, align 8
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = load i32, i32* %18, align 4
  %130 = ashr i32 %128, %129
  %131 = and i32 %130, 1
  %132 = trunc i32 %131 to i16
  %133 = zext i16 %132 to i32
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 90
  %136 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %135, i32 0, i32 4
  %137 = load i16, i16* %136, align 8
  %138 = zext i16 %137 to i32
  %139 = icmp eq i32 %133, %138
  br i1 %139, label %140, label %161

140:                                              ; preds = %125
  %141 = load i8*, i8** %15, align 8
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = load i32, i32* %18, align 4
  %145 = sub nsw i32 7, %144
  %146 = ashr i32 32639, %145
  %147 = and i32 %143, %146
  store i32 %147, i32* %19, align 4
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %149 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %148, i32 0, i32 74
  %150 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %149, i32 0, i32 4
  %151 = load i16, i16* %150, align 4
  %152 = zext i16 %151 to i32
  %153 = load i32, i32* %18, align 4
  %154 = shl i32 %152, %153
  %155 = load i32, i32* %19, align 4
  %156 = or i32 %155, %154
  store i32 %156, i32* %19, align 4
  %157 = load i32, i32* %19, align 4
  %158 = and i32 %157, 255
  %159 = trunc i32 %158 to i8
  %160 = load i8*, i8** %15, align 8
  store i8 %159, i8* %160, align 1
  br label %161

161:                                              ; preds = %140, %125
  %162 = load i32, i32* %18, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  store i32 7, i32* %18, align 4
  %165 = load i8*, i8** %15, align 8
  %166 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %166, i8** %15, align 8
  br label %170

167:                                              ; preds = %161
  %168 = load i32, i32* %18, align 4
  %169 = add nsw i32 %168, -1
  store i32 %169, i32* %18, align 4
  br label %170

170:                                              ; preds = %167, %164
  br label %171

171:                                              ; preds = %170
  %172 = load i32, i32* %16, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %16, align 4
  br label %121, !llvm.loop !171

174:                                              ; preds = %121
  br label %688

175:                                              ; preds = %114
  %176 = load i8*, i8** %7, align 8
  %177 = icmp ne i8* %176, null
  br i1 %177, label %178, label %274

178:                                              ; preds = %175
  %179 = load i8*, i8** %5, align 8
  store i8* %179, i8** %15, align 8
  store i32 6, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %180

180:                                              ; preds = %270, %178
  %181 = load i32, i32* %16, align 4
  %182 = load i32, i32* %17, align 4
  %183 = icmp ult i32 %181, %182
  br i1 %183, label %184, label %273

184:                                              ; preds = %180
  %185 = load i8*, i8** %15, align 8
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = load i32, i32* %18, align 4
  %189 = ashr i32 %187, %188
  %190 = and i32 %189, 3
  %191 = trunc i32 %190 to i16
  %192 = zext i16 %191 to i32
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %194 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 90
  %195 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %194, i32 0, i32 4
  %196 = load i16, i16* %195, align 8
  %197 = zext i16 %196 to i32
  %198 = icmp eq i32 %192, %197
  br i1 %198, label %199, label %220

199:                                              ; preds = %184
  %200 = load i8*, i8** %15, align 8
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = load i32, i32* %18, align 4
  %204 = sub nsw i32 6, %203
  %205 = ashr i32 16191, %204
  %206 = and i32 %202, %205
  store i32 %206, i32* %20, align 4
  %207 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %208 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %207, i32 0, i32 74
  %209 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %208, i32 0, i32 4
  %210 = load i16, i16* %209, align 4
  %211 = zext i16 %210 to i32
  %212 = load i32, i32* %18, align 4
  %213 = shl i32 %211, %212
  %214 = load i32, i32* %20, align 4
  %215 = or i32 %214, %213
  store i32 %215, i32* %20, align 4
  %216 = load i32, i32* %20, align 4
  %217 = and i32 %216, 255
  %218 = trunc i32 %217 to i8
  %219 = load i8*, i8** %15, align 8
  store i8 %218, i8* %219, align 1
  br label %260

220:                                              ; preds = %184
  %221 = load i8*, i8** %15, align 8
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = load i32, i32* %18, align 4
  %225 = ashr i32 %223, %224
  %226 = and i32 %225, 3
  store i32 %226, i32* %21, align 4
  %227 = load i8*, i8** %7, align 8
  %228 = load i32, i32* %21, align 4
  %229 = load i32, i32* %21, align 4
  %230 = shl i32 %229, 2
  %231 = or i32 %228, %230
  %232 = load i32, i32* %21, align 4
  %233 = shl i32 %232, 4
  %234 = or i32 %231, %233
  %235 = load i32, i32* %21, align 4
  %236 = shl i32 %235, 6
  %237 = or i32 %234, %236
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds i8, i8* %227, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = ashr i32 %241, 6
  %243 = and i32 %242, 3
  store i32 %243, i32* %22, align 4
  %244 = load i8*, i8** %15, align 8
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = load i32, i32* %18, align 4
  %248 = sub nsw i32 6, %247
  %249 = ashr i32 16191, %248
  %250 = and i32 %246, %249
  store i32 %250, i32* %23, align 4
  %251 = load i32, i32* %22, align 4
  %252 = load i32, i32* %18, align 4
  %253 = shl i32 %251, %252
  %254 = load i32, i32* %23, align 4
  %255 = or i32 %254, %253
  store i32 %255, i32* %23, align 4
  %256 = load i32, i32* %23, align 4
  %257 = and i32 %256, 255
  %258 = trunc i32 %257 to i8
  %259 = load i8*, i8** %15, align 8
  store i8 %258, i8* %259, align 1
  br label %260

260:                                              ; preds = %220, %199
  %261 = load i32, i32* %18, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %260
  store i32 6, i32* %18, align 4
  %264 = load i8*, i8** %15, align 8
  %265 = getelementptr inbounds i8, i8* %264, i32 1
  store i8* %265, i8** %15, align 8
  br label %269

266:                                              ; preds = %260
  %267 = load i32, i32* %18, align 4
  %268 = sub nsw i32 %267, 2
  store i32 %268, i32* %18, align 4
  br label %269

269:                                              ; preds = %266, %263
  br label %270

270:                                              ; preds = %269
  %271 = load i32, i32* %16, align 4
  %272 = add i32 %271, 1
  store i32 %272, i32* %16, align 4
  br label %180, !llvm.loop !172

273:                                              ; preds = %180
  br label %330

274:                                              ; preds = %175
  %275 = load i8*, i8** %5, align 8
  store i8* %275, i8** %15, align 8
  store i32 6, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %276

276:                                              ; preds = %326, %274
  %277 = load i32, i32* %16, align 4
  %278 = load i32, i32* %17, align 4
  %279 = icmp ult i32 %277, %278
  br i1 %279, label %280, label %329

280:                                              ; preds = %276
  %281 = load i8*, i8** %15, align 8
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = load i32, i32* %18, align 4
  %285 = ashr i32 %283, %284
  %286 = and i32 %285, 3
  %287 = trunc i32 %286 to i16
  %288 = zext i16 %287 to i32
  %289 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %290 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %289, i32 0, i32 90
  %291 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %290, i32 0, i32 4
  %292 = load i16, i16* %291, align 8
  %293 = zext i16 %292 to i32
  %294 = icmp eq i32 %288, %293
  br i1 %294, label %295, label %316

295:                                              ; preds = %280
  %296 = load i8*, i8** %15, align 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i32
  %299 = load i32, i32* %18, align 4
  %300 = sub nsw i32 6, %299
  %301 = ashr i32 16191, %300
  %302 = and i32 %298, %301
  store i32 %302, i32* %24, align 4
  %303 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %304 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %303, i32 0, i32 74
  %305 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %304, i32 0, i32 4
  %306 = load i16, i16* %305, align 4
  %307 = zext i16 %306 to i32
  %308 = load i32, i32* %18, align 4
  %309 = shl i32 %307, %308
  %310 = load i32, i32* %24, align 4
  %311 = or i32 %310, %309
  store i32 %311, i32* %24, align 4
  %312 = load i32, i32* %24, align 4
  %313 = and i32 %312, 255
  %314 = trunc i32 %313 to i8
  %315 = load i8*, i8** %15, align 8
  store i8 %314, i8* %315, align 1
  br label %316

316:                                              ; preds = %295, %280
  %317 = load i32, i32* %18, align 4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %316
  store i32 6, i32* %18, align 4
  %320 = load i8*, i8** %15, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 1
  store i8* %321, i8** %15, align 8
  br label %325

322:                                              ; preds = %316
  %323 = load i32, i32* %18, align 4
  %324 = sub nsw i32 %323, 2
  store i32 %324, i32* %18, align 4
  br label %325

325:                                              ; preds = %322, %319
  br label %326

326:                                              ; preds = %325
  %327 = load i32, i32* %16, align 4
  %328 = add i32 %327, 1
  store i32 %328, i32* %16, align 4
  br label %276, !llvm.loop !173

329:                                              ; preds = %276
  br label %330

330:                                              ; preds = %329, %273
  br label %688

331:                                              ; preds = %114
  %332 = load i8*, i8** %7, align 8
  %333 = icmp ne i8* %332, null
  br i1 %333, label %334, label %424

334:                                              ; preds = %331
  %335 = load i8*, i8** %5, align 8
  store i8* %335, i8** %15, align 8
  store i32 4, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %336

336:                                              ; preds = %420, %334
  %337 = load i32, i32* %16, align 4
  %338 = load i32, i32* %17, align 4
  %339 = icmp ult i32 %337, %338
  br i1 %339, label %340, label %423

340:                                              ; preds = %336
  %341 = load i8*, i8** %15, align 8
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  %344 = load i32, i32* %18, align 4
  %345 = ashr i32 %343, %344
  %346 = and i32 %345, 15
  %347 = trunc i32 %346 to i16
  %348 = zext i16 %347 to i32
  %349 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %350 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %349, i32 0, i32 90
  %351 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %350, i32 0, i32 4
  %352 = load i16, i16* %351, align 8
  %353 = zext i16 %352 to i32
  %354 = icmp eq i32 %348, %353
  br i1 %354, label %355, label %376

355:                                              ; preds = %340
  %356 = load i8*, i8** %15, align 8
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = load i32, i32* %18, align 4
  %360 = sub nsw i32 4, %359
  %361 = ashr i32 3855, %360
  %362 = and i32 %358, %361
  store i32 %362, i32* %25, align 4
  %363 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %364 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %363, i32 0, i32 74
  %365 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %364, i32 0, i32 4
  %366 = load i16, i16* %365, align 4
  %367 = zext i16 %366 to i32
  %368 = load i32, i32* %18, align 4
  %369 = shl i32 %367, %368
  %370 = load i32, i32* %25, align 4
  %371 = or i32 %370, %369
  store i32 %371, i32* %25, align 4
  %372 = load i32, i32* %25, align 4
  %373 = and i32 %372, 255
  %374 = trunc i32 %373 to i8
  %375 = load i8*, i8** %15, align 8
  store i8 %374, i8* %375, align 1
  br label %410

376:                                              ; preds = %340
  %377 = load i8*, i8** %15, align 8
  %378 = load i8, i8* %377, align 1
  %379 = zext i8 %378 to i32
  %380 = load i32, i32* %18, align 4
  %381 = ashr i32 %379, %380
  %382 = and i32 %381, 15
  store i32 %382, i32* %26, align 4
  %383 = load i8*, i8** %7, align 8
  %384 = load i32, i32* %26, align 4
  %385 = load i32, i32* %26, align 4
  %386 = shl i32 %385, 4
  %387 = or i32 %384, %386
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds i8, i8* %383, i64 %388
  %390 = load i8, i8* %389, align 1
  %391 = zext i8 %390 to i32
  %392 = ashr i32 %391, 4
  %393 = and i32 %392, 15
  store i32 %393, i32* %27, align 4
  %394 = load i8*, i8** %15, align 8
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i32
  %397 = load i32, i32* %18, align 4
  %398 = sub nsw i32 4, %397
  %399 = ashr i32 3855, %398
  %400 = and i32 %396, %399
  store i32 %400, i32* %28, align 4
  %401 = load i32, i32* %27, align 4
  %402 = load i32, i32* %18, align 4
  %403 = shl i32 %401, %402
  %404 = load i32, i32* %28, align 4
  %405 = or i32 %404, %403
  store i32 %405, i32* %28, align 4
  %406 = load i32, i32* %28, align 4
  %407 = and i32 %406, 255
  %408 = trunc i32 %407 to i8
  %409 = load i8*, i8** %15, align 8
  store i8 %408, i8* %409, align 1
  br label %410

410:                                              ; preds = %376, %355
  %411 = load i32, i32* %18, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %410
  store i32 4, i32* %18, align 4
  %414 = load i8*, i8** %15, align 8
  %415 = getelementptr inbounds i8, i8* %414, i32 1
  store i8* %415, i8** %15, align 8
  br label %419

416:                                              ; preds = %410
  %417 = load i32, i32* %18, align 4
  %418 = sub nsw i32 %417, 4
  store i32 %418, i32* %18, align 4
  br label %419

419:                                              ; preds = %416, %413
  br label %420

420:                                              ; preds = %419
  %421 = load i32, i32* %16, align 4
  %422 = add i32 %421, 1
  store i32 %422, i32* %16, align 4
  br label %336, !llvm.loop !174

423:                                              ; preds = %336
  br label %480

424:                                              ; preds = %331
  %425 = load i8*, i8** %5, align 8
  store i8* %425, i8** %15, align 8
  store i32 4, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %426

426:                                              ; preds = %476, %424
  %427 = load i32, i32* %16, align 4
  %428 = load i32, i32* %17, align 4
  %429 = icmp ult i32 %427, %428
  br i1 %429, label %430, label %479

430:                                              ; preds = %426
  %431 = load i8*, i8** %15, align 8
  %432 = load i8, i8* %431, align 1
  %433 = zext i8 %432 to i32
  %434 = load i32, i32* %18, align 4
  %435 = ashr i32 %433, %434
  %436 = and i32 %435, 15
  %437 = trunc i32 %436 to i16
  %438 = zext i16 %437 to i32
  %439 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %440 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %439, i32 0, i32 90
  %441 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %440, i32 0, i32 4
  %442 = load i16, i16* %441, align 8
  %443 = zext i16 %442 to i32
  %444 = icmp eq i32 %438, %443
  br i1 %444, label %445, label %466

445:                                              ; preds = %430
  %446 = load i8*, i8** %15, align 8
  %447 = load i8, i8* %446, align 1
  %448 = zext i8 %447 to i32
  %449 = load i32, i32* %18, align 4
  %450 = sub nsw i32 4, %449
  %451 = ashr i32 3855, %450
  %452 = and i32 %448, %451
  store i32 %452, i32* %29, align 4
  %453 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %454 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %453, i32 0, i32 74
  %455 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %454, i32 0, i32 4
  %456 = load i16, i16* %455, align 4
  %457 = zext i16 %456 to i32
  %458 = load i32, i32* %18, align 4
  %459 = shl i32 %457, %458
  %460 = load i32, i32* %29, align 4
  %461 = or i32 %460, %459
  store i32 %461, i32* %29, align 4
  %462 = load i32, i32* %29, align 4
  %463 = and i32 %462, 255
  %464 = trunc i32 %463 to i8
  %465 = load i8*, i8** %15, align 8
  store i8 %464, i8* %465, align 1
  br label %466

466:                                              ; preds = %445, %430
  %467 = load i32, i32* %18, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %472

469:                                              ; preds = %466
  store i32 4, i32* %18, align 4
  %470 = load i8*, i8** %15, align 8
  %471 = getelementptr inbounds i8, i8* %470, i32 1
  store i8* %471, i8** %15, align 8
  br label %475

472:                                              ; preds = %466
  %473 = load i32, i32* %18, align 4
  %474 = sub nsw i32 %473, 4
  store i32 %474, i32* %18, align 4
  br label %475

475:                                              ; preds = %472, %469
  br label %476

476:                                              ; preds = %475
  %477 = load i32, i32* %16, align 4
  %478 = add i32 %477, 1
  store i32 %478, i32* %16, align 4
  br label %426, !llvm.loop !175

479:                                              ; preds = %426
  br label %480

480:                                              ; preds = %479, %423
  br label %688

481:                                              ; preds = %114
  %482 = load i8*, i8** %7, align 8
  %483 = icmp ne i8* %482, null
  br i1 %483, label %484, label %522

484:                                              ; preds = %481
  %485 = load i8*, i8** %5, align 8
  store i8* %485, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %486

486:                                              ; preds = %516, %484
  %487 = load i32, i32* %16, align 4
  %488 = load i32, i32* %17, align 4
  %489 = icmp ult i32 %487, %488
  br i1 %489, label %490, label %521

490:                                              ; preds = %486
  %491 = load i8*, i8** %15, align 8
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %495 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %494, i32 0, i32 90
  %496 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %495, i32 0, i32 4
  %497 = load i16, i16* %496, align 8
  %498 = zext i16 %497 to i32
  %499 = icmp eq i32 %493, %498
  br i1 %499, label %500, label %507

500:                                              ; preds = %490
  %501 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %502 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %501, i32 0, i32 74
  %503 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %502, i32 0, i32 4
  %504 = load i16, i16* %503, align 4
  %505 = trunc i16 %504 to i8
  %506 = load i8*, i8** %15, align 8
  store i8 %505, i8* %506, align 1
  br label %515

507:                                              ; preds = %490
  %508 = load i8*, i8** %7, align 8
  %509 = load i8*, i8** %15, align 8
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i64
  %512 = getelementptr inbounds i8, i8* %508, i64 %511
  %513 = load i8, i8* %512, align 1
  %514 = load i8*, i8** %15, align 8
  store i8 %513, i8* %514, align 1
  br label %515

515:                                              ; preds = %507, %500
  br label %516

516:                                              ; preds = %515
  %517 = load i32, i32* %16, align 4
  %518 = add i32 %517, 1
  store i32 %518, i32* %16, align 4
  %519 = load i8*, i8** %15, align 8
  %520 = getelementptr inbounds i8, i8* %519, i32 1
  store i8* %520, i8** %15, align 8
  br label %486, !llvm.loop !176

521:                                              ; preds = %486
  br label %552

522:                                              ; preds = %481
  %523 = load i8*, i8** %5, align 8
  store i8* %523, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %524

524:                                              ; preds = %546, %522
  %525 = load i32, i32* %16, align 4
  %526 = load i32, i32* %17, align 4
  %527 = icmp ult i32 %525, %526
  br i1 %527, label %528, label %551

528:                                              ; preds = %524
  %529 = load i8*, i8** %15, align 8
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %533 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %532, i32 0, i32 90
  %534 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %533, i32 0, i32 4
  %535 = load i16, i16* %534, align 8
  %536 = zext i16 %535 to i32
  %537 = icmp eq i32 %531, %536
  br i1 %537, label %538, label %545

538:                                              ; preds = %528
  %539 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %540 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %539, i32 0, i32 74
  %541 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %540, i32 0, i32 4
  %542 = load i16, i16* %541, align 4
  %543 = trunc i16 %542 to i8
  %544 = load i8*, i8** %15, align 8
  store i8 %543, i8* %544, align 1
  br label %545

545:                                              ; preds = %538, %528
  br label %546

546:                                              ; preds = %545
  %547 = load i32, i32* %16, align 4
  %548 = add i32 %547, 1
  store i32 %548, i32* %16, align 4
  %549 = load i8*, i8** %15, align 8
  %550 = getelementptr inbounds i8, i8* %549, i32 1
  store i8* %550, i8** %15, align 8
  br label %524, !llvm.loop !177

551:                                              ; preds = %524
  br label %552

552:                                              ; preds = %551, %521
  br label %688

553:                                              ; preds = %114
  %554 = load i16**, i16*** %10, align 8
  %555 = icmp ne i16** %554, null
  br i1 %555, label %556, label %635

556:                                              ; preds = %553
  %557 = load i8*, i8** %5, align 8
  store i8* %557, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %558

558:                                              ; preds = %629, %556
  %559 = load i32, i32* %16, align 4
  %560 = load i32, i32* %17, align 4
  %561 = icmp ult i32 %559, %560
  br i1 %561, label %562, label %634

562:                                              ; preds = %558
  %563 = load i8*, i8** %15, align 8
  %564 = load i8, i8* %563, align 1
  %565 = zext i8 %564 to i32
  %566 = shl i32 %565, 8
  %567 = load i8*, i8** %15, align 8
  %568 = getelementptr inbounds i8, i8* %567, i64 1
  %569 = load i8, i8* %568, align 1
  %570 = zext i8 %569 to i32
  %571 = add nsw i32 %566, %570
  %572 = trunc i32 %571 to i16
  store i16 %572, i16* %30, align 2
  %573 = load i16, i16* %30, align 2
  %574 = zext i16 %573 to i32
  %575 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %576 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %575, i32 0, i32 90
  %577 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %576, i32 0, i32 4
  %578 = load i16, i16* %577, align 8
  %579 = zext i16 %578 to i32
  %580 = icmp eq i32 %574, %579
  br i1 %580, label %581, label %600

581:                                              ; preds = %562
  %582 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %583 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %582, i32 0, i32 74
  %584 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %583, i32 0, i32 4
  %585 = load i16, i16* %584, align 4
  %586 = zext i16 %585 to i32
  %587 = ashr i32 %586, 8
  %588 = and i32 %587, 255
  %589 = trunc i32 %588 to i8
  %590 = load i8*, i8** %15, align 8
  store i8 %589, i8* %590, align 1
  %591 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %592 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %591, i32 0, i32 74
  %593 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %592, i32 0, i32 4
  %594 = load i16, i16* %593, align 4
  %595 = zext i16 %594 to i32
  %596 = and i32 %595, 255
  %597 = trunc i32 %596 to i8
  %598 = load i8*, i8** %15, align 8
  %599 = getelementptr inbounds i8, i8* %598, i64 1
  store i8 %597, i8* %599, align 1
  br label %628

600:                                              ; preds = %562
  %601 = load i16**, i16*** %10, align 8
  %602 = load i8*, i8** %15, align 8
  %603 = getelementptr inbounds i8, i8* %602, i64 1
  %604 = load i8, i8* %603, align 1
  %605 = zext i8 %604 to i32
  %606 = load i32, i32* %13, align 4
  %607 = ashr i32 %605, %606
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds i16*, i16** %601, i64 %608
  %610 = load i16*, i16** %609, align 8
  %611 = load i8*, i8** %15, align 8
  %612 = load i8, i8* %611, align 1
  %613 = zext i8 %612 to i64
  %614 = getelementptr inbounds i16, i16* %610, i64 %613
  %615 = load i16, i16* %614, align 2
  store i16 %615, i16* %30, align 2
  %616 = load i16, i16* %30, align 2
  %617 = zext i16 %616 to i32
  %618 = ashr i32 %617, 8
  %619 = and i32 %618, 255
  %620 = trunc i32 %619 to i8
  %621 = load i8*, i8** %15, align 8
  store i8 %620, i8* %621, align 1
  %622 = load i16, i16* %30, align 2
  %623 = zext i16 %622 to i32
  %624 = and i32 %623, 255
  %625 = trunc i32 %624 to i8
  %626 = load i8*, i8** %15, align 8
  %627 = getelementptr inbounds i8, i8* %626, i64 1
  store i8 %625, i8* %627, align 1
  br label %628

628:                                              ; preds = %600, %581
  br label %629

629:                                              ; preds = %628
  %630 = load i32, i32* %16, align 4
  %631 = add i32 %630, 1
  store i32 %631, i32* %16, align 4
  %632 = load i8*, i8** %15, align 8
  %633 = getelementptr inbounds i8, i8* %632, i64 2
  store i8* %633, i8** %15, align 8
  br label %558, !llvm.loop !178

634:                                              ; preds = %558
  br label %686

635:                                              ; preds = %553
  %636 = load i8*, i8** %5, align 8
  store i8* %636, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %637

637:                                              ; preds = %680, %635
  %638 = load i32, i32* %16, align 4
  %639 = load i32, i32* %17, align 4
  %640 = icmp ult i32 %638, %639
  br i1 %640, label %641, label %685

641:                                              ; preds = %637
  %642 = load i8*, i8** %15, align 8
  %643 = load i8, i8* %642, align 1
  %644 = zext i8 %643 to i32
  %645 = shl i32 %644, 8
  %646 = load i8*, i8** %15, align 8
  %647 = getelementptr inbounds i8, i8* %646, i64 1
  %648 = load i8, i8* %647, align 1
  %649 = zext i8 %648 to i32
  %650 = add nsw i32 %645, %649
  %651 = trunc i32 %650 to i16
  store i16 %651, i16* %31, align 2
  %652 = load i16, i16* %31, align 2
  %653 = zext i16 %652 to i32
  %654 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %655 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %654, i32 0, i32 90
  %656 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %655, i32 0, i32 4
  %657 = load i16, i16* %656, align 8
  %658 = zext i16 %657 to i32
  %659 = icmp eq i32 %653, %658
  br i1 %659, label %660, label %679

660:                                              ; preds = %641
  %661 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %662 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %661, i32 0, i32 74
  %663 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %662, i32 0, i32 4
  %664 = load i16, i16* %663, align 4
  %665 = zext i16 %664 to i32
  %666 = ashr i32 %665, 8
  %667 = and i32 %666, 255
  %668 = trunc i32 %667 to i8
  %669 = load i8*, i8** %15, align 8
  store i8 %668, i8* %669, align 1
  %670 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %671 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %670, i32 0, i32 74
  %672 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %671, i32 0, i32 4
  %673 = load i16, i16* %672, align 4
  %674 = zext i16 %673 to i32
  %675 = and i32 %674, 255
  %676 = trunc i32 %675 to i8
  %677 = load i8*, i8** %15, align 8
  %678 = getelementptr inbounds i8, i8* %677, i64 1
  store i8 %676, i8* %678, align 1
  br label %679

679:                                              ; preds = %660, %641
  br label %680

680:                                              ; preds = %679
  %681 = load i32, i32* %16, align 4
  %682 = add i32 %681, 1
  store i32 %682, i32* %16, align 4
  %683 = load i8*, i8** %15, align 8
  %684 = getelementptr inbounds i8, i8* %683, i64 2
  store i8* %684, i8** %15, align 8
  br label %637, !llvm.loop !179

685:                                              ; preds = %637
  br label %686

686:                                              ; preds = %685, %634
  br label %688

687:                                              ; preds = %114
  br label %688

688:                                              ; preds = %687, %686, %552, %480, %330, %174
  br label %2658

689:                                              ; preds = %3
  %690 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %691 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %690, i32 0, i32 3
  %692 = load i8, i8* %691, align 1
  %693 = zext i8 %692 to i32
  %694 = icmp eq i32 %693, 8
  br i1 %694, label %695, label %857

695:                                              ; preds = %689
  %696 = load i8*, i8** %7, align 8
  %697 = icmp ne i8* %696, null
  br i1 %697, label %698, label %790

698:                                              ; preds = %695
  %699 = load i8*, i8** %5, align 8
  store i8* %699, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %700

700:                                              ; preds = %784, %698
  %701 = load i32, i32* %16, align 4
  %702 = load i32, i32* %17, align 4
  %703 = icmp ult i32 %701, %702
  br i1 %703, label %704, label %789

704:                                              ; preds = %700
  %705 = load i8*, i8** %15, align 8
  %706 = load i8, i8* %705, align 1
  %707 = zext i8 %706 to i32
  %708 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %709 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %708, i32 0, i32 90
  %710 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %709, i32 0, i32 1
  %711 = load i16, i16* %710, align 2
  %712 = zext i16 %711 to i32
  %713 = icmp eq i32 %707, %712
  br i1 %713, label %714, label %757

714:                                              ; preds = %704
  %715 = load i8*, i8** %15, align 8
  %716 = getelementptr inbounds i8, i8* %715, i64 1
  %717 = load i8, i8* %716, align 1
  %718 = zext i8 %717 to i32
  %719 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %720 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %719, i32 0, i32 90
  %721 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %720, i32 0, i32 2
  %722 = load i16, i16* %721, align 4
  %723 = zext i16 %722 to i32
  %724 = icmp eq i32 %718, %723
  br i1 %724, label %725, label %757

725:                                              ; preds = %714
  %726 = load i8*, i8** %15, align 8
  %727 = getelementptr inbounds i8, i8* %726, i64 2
  %728 = load i8, i8* %727, align 1
  %729 = zext i8 %728 to i32
  %730 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %731 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %730, i32 0, i32 90
  %732 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %731, i32 0, i32 3
  %733 = load i16, i16* %732, align 2
  %734 = zext i16 %733 to i32
  %735 = icmp eq i32 %729, %734
  br i1 %735, label %736, label %757

736:                                              ; preds = %725
  %737 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %738 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %737, i32 0, i32 74
  %739 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %738, i32 0, i32 1
  %740 = load i16, i16* %739, align 2
  %741 = trunc i16 %740 to i8
  %742 = load i8*, i8** %15, align 8
  store i8 %741, i8* %742, align 1
  %743 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %744 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %743, i32 0, i32 74
  %745 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %744, i32 0, i32 2
  %746 = load i16, i16* %745, align 4
  %747 = trunc i16 %746 to i8
  %748 = load i8*, i8** %15, align 8
  %749 = getelementptr inbounds i8, i8* %748, i64 1
  store i8 %747, i8* %749, align 1
  %750 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %751 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %750, i32 0, i32 74
  %752 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %751, i32 0, i32 3
  %753 = load i16, i16* %752, align 2
  %754 = trunc i16 %753 to i8
  %755 = load i8*, i8** %15, align 8
  %756 = getelementptr inbounds i8, i8* %755, i64 2
  store i8 %754, i8* %756, align 1
  br label %783

757:                                              ; preds = %725, %714, %704
  %758 = load i8*, i8** %7, align 8
  %759 = load i8*, i8** %15, align 8
  %760 = load i8, i8* %759, align 1
  %761 = zext i8 %760 to i64
  %762 = getelementptr inbounds i8, i8* %758, i64 %761
  %763 = load i8, i8* %762, align 1
  %764 = load i8*, i8** %15, align 8
  store i8 %763, i8* %764, align 1
  %765 = load i8*, i8** %7, align 8
  %766 = load i8*, i8** %15, align 8
  %767 = getelementptr inbounds i8, i8* %766, i64 1
  %768 = load i8, i8* %767, align 1
  %769 = zext i8 %768 to i64
  %770 = getelementptr inbounds i8, i8* %765, i64 %769
  %771 = load i8, i8* %770, align 1
  %772 = load i8*, i8** %15, align 8
  %773 = getelementptr inbounds i8, i8* %772, i64 1
  store i8 %771, i8* %773, align 1
  %774 = load i8*, i8** %7, align 8
  %775 = load i8*, i8** %15, align 8
  %776 = getelementptr inbounds i8, i8* %775, i64 2
  %777 = load i8, i8* %776, align 1
  %778 = zext i8 %777 to i64
  %779 = getelementptr inbounds i8, i8* %774, i64 %778
  %780 = load i8, i8* %779, align 1
  %781 = load i8*, i8** %15, align 8
  %782 = getelementptr inbounds i8, i8* %781, i64 2
  store i8 %780, i8* %782, align 1
  br label %783

783:                                              ; preds = %757, %736
  br label %784

784:                                              ; preds = %783
  %785 = load i32, i32* %16, align 4
  %786 = add i32 %785, 1
  store i32 %786, i32* %16, align 4
  %787 = load i8*, i8** %15, align 8
  %788 = getelementptr inbounds i8, i8* %787, i64 3
  store i8* %788, i8** %15, align 8
  br label %700, !llvm.loop !180

789:                                              ; preds = %700
  br label %856

790:                                              ; preds = %695
  %791 = load i8*, i8** %5, align 8
  store i8* %791, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %792

792:                                              ; preds = %850, %790
  %793 = load i32, i32* %16, align 4
  %794 = load i32, i32* %17, align 4
  %795 = icmp ult i32 %793, %794
  br i1 %795, label %796, label %855

796:                                              ; preds = %792
  %797 = load i8*, i8** %15, align 8
  %798 = load i8, i8* %797, align 1
  %799 = zext i8 %798 to i32
  %800 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %801 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %800, i32 0, i32 90
  %802 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %801, i32 0, i32 1
  %803 = load i16, i16* %802, align 2
  %804 = zext i16 %803 to i32
  %805 = icmp eq i32 %799, %804
  br i1 %805, label %806, label %849

806:                                              ; preds = %796
  %807 = load i8*, i8** %15, align 8
  %808 = getelementptr inbounds i8, i8* %807, i64 1
  %809 = load i8, i8* %808, align 1
  %810 = zext i8 %809 to i32
  %811 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %812 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %811, i32 0, i32 90
  %813 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %812, i32 0, i32 2
  %814 = load i16, i16* %813, align 4
  %815 = zext i16 %814 to i32
  %816 = icmp eq i32 %810, %815
  br i1 %816, label %817, label %849

817:                                              ; preds = %806
  %818 = load i8*, i8** %15, align 8
  %819 = getelementptr inbounds i8, i8* %818, i64 2
  %820 = load i8, i8* %819, align 1
  %821 = zext i8 %820 to i32
  %822 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %823 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %822, i32 0, i32 90
  %824 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %823, i32 0, i32 3
  %825 = load i16, i16* %824, align 2
  %826 = zext i16 %825 to i32
  %827 = icmp eq i32 %821, %826
  br i1 %827, label %828, label %849

828:                                              ; preds = %817
  %829 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %830 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %829, i32 0, i32 74
  %831 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %830, i32 0, i32 1
  %832 = load i16, i16* %831, align 2
  %833 = trunc i16 %832 to i8
  %834 = load i8*, i8** %15, align 8
  store i8 %833, i8* %834, align 1
  %835 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %836 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %835, i32 0, i32 74
  %837 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %836, i32 0, i32 2
  %838 = load i16, i16* %837, align 4
  %839 = trunc i16 %838 to i8
  %840 = load i8*, i8** %15, align 8
  %841 = getelementptr inbounds i8, i8* %840, i64 1
  store i8 %839, i8* %841, align 1
  %842 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %843 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %842, i32 0, i32 74
  %844 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %843, i32 0, i32 3
  %845 = load i16, i16* %844, align 2
  %846 = trunc i16 %845 to i8
  %847 = load i8*, i8** %15, align 8
  %848 = getelementptr inbounds i8, i8* %847, i64 2
  store i8 %846, i8* %848, align 1
  br label %849

849:                                              ; preds = %828, %817, %806, %796
  br label %850

850:                                              ; preds = %849
  %851 = load i32, i32* %16, align 4
  %852 = add i32 %851, 1
  store i32 %852, i32* %16, align 4
  %853 = load i8*, i8** %15, align 8
  %854 = getelementptr inbounds i8, i8* %853, i64 3
  store i8* %854, i8** %15, align 8
  br label %792, !llvm.loop !181

855:                                              ; preds = %792
  br label %856

856:                                              ; preds = %855, %789
  br label %1205

857:                                              ; preds = %689
  %858 = load i16**, i16*** %10, align 8
  %859 = icmp ne i16** %858, null
  br i1 %859, label %860, label %1075

860:                                              ; preds = %857
  %861 = load i8*, i8** %5, align 8
  store i8* %861, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %862

862:                                              ; preds = %1069, %860
  %863 = load i32, i32* %16, align 4
  %864 = load i32, i32* %17, align 4
  %865 = icmp ult i32 %863, %864
  br i1 %865, label %866, label %1074

866:                                              ; preds = %862
  %867 = load i8*, i8** %15, align 8
  %868 = load i8, i8* %867, align 1
  %869 = zext i8 %868 to i32
  %870 = shl i32 %869, 8
  %871 = load i8*, i8** %15, align 8
  %872 = getelementptr inbounds i8, i8* %871, i64 1
  %873 = load i8, i8* %872, align 1
  %874 = zext i8 %873 to i32
  %875 = add nsw i32 %870, %874
  %876 = trunc i32 %875 to i16
  store i16 %876, i16* %32, align 2
  %877 = load i8*, i8** %15, align 8
  %878 = getelementptr inbounds i8, i8* %877, i64 2
  %879 = load i8, i8* %878, align 1
  %880 = zext i8 %879 to i32
  %881 = shl i32 %880, 8
  %882 = load i8*, i8** %15, align 8
  %883 = getelementptr inbounds i8, i8* %882, i64 3
  %884 = load i8, i8* %883, align 1
  %885 = zext i8 %884 to i32
  %886 = add nsw i32 %881, %885
  %887 = trunc i32 %886 to i16
  store i16 %887, i16* %33, align 2
  %888 = load i8*, i8** %15, align 8
  %889 = getelementptr inbounds i8, i8* %888, i64 4
  %890 = load i8, i8* %889, align 1
  %891 = zext i8 %890 to i32
  %892 = shl i32 %891, 8
  %893 = load i8*, i8** %15, align 8
  %894 = getelementptr inbounds i8, i8* %893, i64 5
  %895 = load i8, i8* %894, align 1
  %896 = zext i8 %895 to i32
  %897 = add nsw i32 %892, %896
  %898 = trunc i32 %897 to i16
  store i16 %898, i16* %34, align 2
  %899 = load i16, i16* %32, align 2
  %900 = zext i16 %899 to i32
  %901 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %902 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %901, i32 0, i32 90
  %903 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %902, i32 0, i32 1
  %904 = load i16, i16* %903, align 2
  %905 = zext i16 %904 to i32
  %906 = icmp eq i32 %900, %905
  br i1 %906, label %907, label %982

907:                                              ; preds = %866
  %908 = load i16, i16* %33, align 2
  %909 = zext i16 %908 to i32
  %910 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %911 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %910, i32 0, i32 90
  %912 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %911, i32 0, i32 2
  %913 = load i16, i16* %912, align 4
  %914 = zext i16 %913 to i32
  %915 = icmp eq i32 %909, %914
  br i1 %915, label %916, label %982

916:                                              ; preds = %907
  %917 = load i16, i16* %34, align 2
  %918 = zext i16 %917 to i32
  %919 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %920 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %919, i32 0, i32 90
  %921 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %920, i32 0, i32 3
  %922 = load i16, i16* %921, align 2
  %923 = zext i16 %922 to i32
  %924 = icmp eq i32 %918, %923
  br i1 %924, label %925, label %982

925:                                              ; preds = %916
  %926 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %927 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %926, i32 0, i32 74
  %928 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %927, i32 0, i32 1
  %929 = load i16, i16* %928, align 2
  %930 = zext i16 %929 to i32
  %931 = ashr i32 %930, 8
  %932 = and i32 %931, 255
  %933 = trunc i32 %932 to i8
  %934 = load i8*, i8** %15, align 8
  store i8 %933, i8* %934, align 1
  %935 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %936 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %935, i32 0, i32 74
  %937 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %936, i32 0, i32 1
  %938 = load i16, i16* %937, align 2
  %939 = zext i16 %938 to i32
  %940 = and i32 %939, 255
  %941 = trunc i32 %940 to i8
  %942 = load i8*, i8** %15, align 8
  %943 = getelementptr inbounds i8, i8* %942, i64 1
  store i8 %941, i8* %943, align 1
  %944 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %945 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %944, i32 0, i32 74
  %946 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %945, i32 0, i32 2
  %947 = load i16, i16* %946, align 4
  %948 = zext i16 %947 to i32
  %949 = ashr i32 %948, 8
  %950 = and i32 %949, 255
  %951 = trunc i32 %950 to i8
  %952 = load i8*, i8** %15, align 8
  %953 = getelementptr inbounds i8, i8* %952, i64 2
  store i8 %951, i8* %953, align 1
  %954 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %955 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %954, i32 0, i32 74
  %956 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %955, i32 0, i32 2
  %957 = load i16, i16* %956, align 4
  %958 = zext i16 %957 to i32
  %959 = and i32 %958, 255
  %960 = trunc i32 %959 to i8
  %961 = load i8*, i8** %15, align 8
  %962 = getelementptr inbounds i8, i8* %961, i64 3
  store i8 %960, i8* %962, align 1
  %963 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %964 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %963, i32 0, i32 74
  %965 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %964, i32 0, i32 3
  %966 = load i16, i16* %965, align 2
  %967 = zext i16 %966 to i32
  %968 = ashr i32 %967, 8
  %969 = and i32 %968, 255
  %970 = trunc i32 %969 to i8
  %971 = load i8*, i8** %15, align 8
  %972 = getelementptr inbounds i8, i8* %971, i64 4
  store i8 %970, i8* %972, align 1
  %973 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %974 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %973, i32 0, i32 74
  %975 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %974, i32 0, i32 3
  %976 = load i16, i16* %975, align 2
  %977 = zext i16 %976 to i32
  %978 = and i32 %977, 255
  %979 = trunc i32 %978 to i8
  %980 = load i8*, i8** %15, align 8
  %981 = getelementptr inbounds i8, i8* %980, i64 5
  store i8 %979, i8* %981, align 1
  br label %1068

982:                                              ; preds = %916, %907, %866
  %983 = load i16**, i16*** %10, align 8
  %984 = load i8*, i8** %15, align 8
  %985 = getelementptr inbounds i8, i8* %984, i64 1
  %986 = load i8, i8* %985, align 1
  %987 = zext i8 %986 to i32
  %988 = load i32, i32* %13, align 4
  %989 = ashr i32 %987, %988
  %990 = sext i32 %989 to i64
  %991 = getelementptr inbounds i16*, i16** %983, i64 %990
  %992 = load i16*, i16** %991, align 8
  %993 = load i8*, i8** %15, align 8
  %994 = load i8, i8* %993, align 1
  %995 = zext i8 %994 to i64
  %996 = getelementptr inbounds i16, i16* %992, i64 %995
  %997 = load i16, i16* %996, align 2
  store i16 %997, i16* %35, align 2
  %998 = load i16, i16* %35, align 2
  %999 = zext i16 %998 to i32
  %1000 = ashr i32 %999, 8
  %1001 = and i32 %1000, 255
  %1002 = trunc i32 %1001 to i8
  %1003 = load i8*, i8** %15, align 8
  store i8 %1002, i8* %1003, align 1
  %1004 = load i16, i16* %35, align 2
  %1005 = zext i16 %1004 to i32
  %1006 = and i32 %1005, 255
  %1007 = trunc i32 %1006 to i8
  %1008 = load i8*, i8** %15, align 8
  %1009 = getelementptr inbounds i8, i8* %1008, i64 1
  store i8 %1007, i8* %1009, align 1
  %1010 = load i16**, i16*** %10, align 8
  %1011 = load i8*, i8** %15, align 8
  %1012 = getelementptr inbounds i8, i8* %1011, i64 3
  %1013 = load i8, i8* %1012, align 1
  %1014 = zext i8 %1013 to i32
  %1015 = load i32, i32* %13, align 4
  %1016 = ashr i32 %1014, %1015
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i16*, i16** %1010, i64 %1017
  %1019 = load i16*, i16** %1018, align 8
  %1020 = load i8*, i8** %15, align 8
  %1021 = getelementptr inbounds i8, i8* %1020, i64 2
  %1022 = load i8, i8* %1021, align 1
  %1023 = zext i8 %1022 to i64
  %1024 = getelementptr inbounds i16, i16* %1019, i64 %1023
  %1025 = load i16, i16* %1024, align 2
  store i16 %1025, i16* %35, align 2
  %1026 = load i16, i16* %35, align 2
  %1027 = zext i16 %1026 to i32
  %1028 = ashr i32 %1027, 8
  %1029 = and i32 %1028, 255
  %1030 = trunc i32 %1029 to i8
  %1031 = load i8*, i8** %15, align 8
  %1032 = getelementptr inbounds i8, i8* %1031, i64 2
  store i8 %1030, i8* %1032, align 1
  %1033 = load i16, i16* %35, align 2
  %1034 = zext i16 %1033 to i32
  %1035 = and i32 %1034, 255
  %1036 = trunc i32 %1035 to i8
  %1037 = load i8*, i8** %15, align 8
  %1038 = getelementptr inbounds i8, i8* %1037, i64 3
  store i8 %1036, i8* %1038, align 1
  %1039 = load i16**, i16*** %10, align 8
  %1040 = load i8*, i8** %15, align 8
  %1041 = getelementptr inbounds i8, i8* %1040, i64 5
  %1042 = load i8, i8* %1041, align 1
  %1043 = zext i8 %1042 to i32
  %1044 = load i32, i32* %13, align 4
  %1045 = ashr i32 %1043, %1044
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds i16*, i16** %1039, i64 %1046
  %1048 = load i16*, i16** %1047, align 8
  %1049 = load i8*, i8** %15, align 8
  %1050 = getelementptr inbounds i8, i8* %1049, i64 4
  %1051 = load i8, i8* %1050, align 1
  %1052 = zext i8 %1051 to i64
  %1053 = getelementptr inbounds i16, i16* %1048, i64 %1052
  %1054 = load i16, i16* %1053, align 2
  store i16 %1054, i16* %35, align 2
  %1055 = load i16, i16* %35, align 2
  %1056 = zext i16 %1055 to i32
  %1057 = ashr i32 %1056, 8
  %1058 = and i32 %1057, 255
  %1059 = trunc i32 %1058 to i8
  %1060 = load i8*, i8** %15, align 8
  %1061 = getelementptr inbounds i8, i8* %1060, i64 4
  store i8 %1059, i8* %1061, align 1
  %1062 = load i16, i16* %35, align 2
  %1063 = zext i16 %1062 to i32
  %1064 = and i32 %1063, 255
  %1065 = trunc i32 %1064 to i8
  %1066 = load i8*, i8** %15, align 8
  %1067 = getelementptr inbounds i8, i8* %1066, i64 5
  store i8 %1065, i8* %1067, align 1
  br label %1068

1068:                                             ; preds = %982, %925
  br label %1069

1069:                                             ; preds = %1068
  %1070 = load i32, i32* %16, align 4
  %1071 = add i32 %1070, 1
  store i32 %1071, i32* %16, align 4
  %1072 = load i8*, i8** %15, align 8
  %1073 = getelementptr inbounds i8, i8* %1072, i64 6
  store i8* %1073, i8** %15, align 8
  br label %862, !llvm.loop !182

1074:                                             ; preds = %862
  br label %1204

1075:                                             ; preds = %857
  %1076 = load i8*, i8** %5, align 8
  store i8* %1076, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1077

1077:                                             ; preds = %1198, %1075
  %1078 = load i32, i32* %16, align 4
  %1079 = load i32, i32* %17, align 4
  %1080 = icmp ult i32 %1078, %1079
  br i1 %1080, label %1081, label %1203

1081:                                             ; preds = %1077
  %1082 = load i8*, i8** %15, align 8
  %1083 = load i8, i8* %1082, align 1
  %1084 = zext i8 %1083 to i32
  %1085 = shl i32 %1084, 8
  %1086 = load i8*, i8** %15, align 8
  %1087 = getelementptr inbounds i8, i8* %1086, i64 1
  %1088 = load i8, i8* %1087, align 1
  %1089 = zext i8 %1088 to i32
  %1090 = add nsw i32 %1085, %1089
  %1091 = trunc i32 %1090 to i16
  store i16 %1091, i16* %36, align 2
  %1092 = load i8*, i8** %15, align 8
  %1093 = getelementptr inbounds i8, i8* %1092, i64 2
  %1094 = load i8, i8* %1093, align 1
  %1095 = zext i8 %1094 to i32
  %1096 = shl i32 %1095, 8
  %1097 = load i8*, i8** %15, align 8
  %1098 = getelementptr inbounds i8, i8* %1097, i64 3
  %1099 = load i8, i8* %1098, align 1
  %1100 = zext i8 %1099 to i32
  %1101 = add nsw i32 %1096, %1100
  %1102 = trunc i32 %1101 to i16
  store i16 %1102, i16* %37, align 2
  %1103 = load i8*, i8** %15, align 8
  %1104 = getelementptr inbounds i8, i8* %1103, i64 4
  %1105 = load i8, i8* %1104, align 1
  %1106 = zext i8 %1105 to i32
  %1107 = shl i32 %1106, 8
  %1108 = load i8*, i8** %15, align 8
  %1109 = getelementptr inbounds i8, i8* %1108, i64 5
  %1110 = load i8, i8* %1109, align 1
  %1111 = zext i8 %1110 to i32
  %1112 = add nsw i32 %1107, %1111
  %1113 = trunc i32 %1112 to i16
  store i16 %1113, i16* %38, align 2
  %1114 = load i16, i16* %36, align 2
  %1115 = zext i16 %1114 to i32
  %1116 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1116, i32 0, i32 90
  %1118 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1117, i32 0, i32 1
  %1119 = load i16, i16* %1118, align 2
  %1120 = zext i16 %1119 to i32
  %1121 = icmp eq i32 %1115, %1120
  br i1 %1121, label %1122, label %1197

1122:                                             ; preds = %1081
  %1123 = load i16, i16* %37, align 2
  %1124 = zext i16 %1123 to i32
  %1125 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1125, i32 0, i32 90
  %1127 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1126, i32 0, i32 2
  %1128 = load i16, i16* %1127, align 4
  %1129 = zext i16 %1128 to i32
  %1130 = icmp eq i32 %1124, %1129
  br i1 %1130, label %1131, label %1197

1131:                                             ; preds = %1122
  %1132 = load i16, i16* %38, align 2
  %1133 = zext i16 %1132 to i32
  %1134 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1134, i32 0, i32 90
  %1136 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1135, i32 0, i32 3
  %1137 = load i16, i16* %1136, align 2
  %1138 = zext i16 %1137 to i32
  %1139 = icmp eq i32 %1133, %1138
  br i1 %1139, label %1140, label %1197

1140:                                             ; preds = %1131
  %1141 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1141, i32 0, i32 74
  %1143 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1142, i32 0, i32 1
  %1144 = load i16, i16* %1143, align 2
  %1145 = zext i16 %1144 to i32
  %1146 = ashr i32 %1145, 8
  %1147 = and i32 %1146, 255
  %1148 = trunc i32 %1147 to i8
  %1149 = load i8*, i8** %15, align 8
  store i8 %1148, i8* %1149, align 1
  %1150 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1151 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1150, i32 0, i32 74
  %1152 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1151, i32 0, i32 1
  %1153 = load i16, i16* %1152, align 2
  %1154 = zext i16 %1153 to i32
  %1155 = and i32 %1154, 255
  %1156 = trunc i32 %1155 to i8
  %1157 = load i8*, i8** %15, align 8
  %1158 = getelementptr inbounds i8, i8* %1157, i64 1
  store i8 %1156, i8* %1158, align 1
  %1159 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1159, i32 0, i32 74
  %1161 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1160, i32 0, i32 2
  %1162 = load i16, i16* %1161, align 4
  %1163 = zext i16 %1162 to i32
  %1164 = ashr i32 %1163, 8
  %1165 = and i32 %1164, 255
  %1166 = trunc i32 %1165 to i8
  %1167 = load i8*, i8** %15, align 8
  %1168 = getelementptr inbounds i8, i8* %1167, i64 2
  store i8 %1166, i8* %1168, align 1
  %1169 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1169, i32 0, i32 74
  %1171 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1170, i32 0, i32 2
  %1172 = load i16, i16* %1171, align 4
  %1173 = zext i16 %1172 to i32
  %1174 = and i32 %1173, 255
  %1175 = trunc i32 %1174 to i8
  %1176 = load i8*, i8** %15, align 8
  %1177 = getelementptr inbounds i8, i8* %1176, i64 3
  store i8 %1175, i8* %1177, align 1
  %1178 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1179 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1178, i32 0, i32 74
  %1180 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1179, i32 0, i32 3
  %1181 = load i16, i16* %1180, align 2
  %1182 = zext i16 %1181 to i32
  %1183 = ashr i32 %1182, 8
  %1184 = and i32 %1183, 255
  %1185 = trunc i32 %1184 to i8
  %1186 = load i8*, i8** %15, align 8
  %1187 = getelementptr inbounds i8, i8* %1186, i64 4
  store i8 %1185, i8* %1187, align 1
  %1188 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1189 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1188, i32 0, i32 74
  %1190 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1189, i32 0, i32 3
  %1191 = load i16, i16* %1190, align 2
  %1192 = zext i16 %1191 to i32
  %1193 = and i32 %1192, 255
  %1194 = trunc i32 %1193 to i8
  %1195 = load i8*, i8** %15, align 8
  %1196 = getelementptr inbounds i8, i8* %1195, i64 5
  store i8 %1194, i8* %1196, align 1
  br label %1197

1197:                                             ; preds = %1140, %1131, %1122, %1081
  br label %1198

1198:                                             ; preds = %1197
  %1199 = load i32, i32* %16, align 4
  %1200 = add i32 %1199, 1
  store i32 %1200, i32* %16, align 4
  %1201 = load i8*, i8** %15, align 8
  %1202 = getelementptr inbounds i8, i8* %1201, i64 6
  store i8* %1202, i8** %15, align 8
  br label %1077, !llvm.loop !183

1203:                                             ; preds = %1077
  br label %1204

1204:                                             ; preds = %1203, %1074
  br label %1205

1205:                                             ; preds = %1204, %856
  br label %2658

1206:                                             ; preds = %3
  %1207 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %1208 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1207, i32 0, i32 3
  %1209 = load i8, i8* %1208, align 1
  %1210 = zext i8 %1209 to i32
  %1211 = icmp eq i32 %1210, 8
  br i1 %1211, label %1212, label %1376

1212:                                             ; preds = %1206
  %1213 = load i8*, i8** %9, align 8
  %1214 = icmp ne i8* %1213, null
  br i1 %1214, label %1215, label %1309

1215:                                             ; preds = %1212
  %1216 = load i8*, i8** %8, align 8
  %1217 = icmp ne i8* %1216, null
  br i1 %1217, label %1218, label %1309

1218:                                             ; preds = %1215
  %1219 = load i8*, i8** %7, align 8
  %1220 = icmp ne i8* %1219, null
  br i1 %1220, label %1221, label %1309

1221:                                             ; preds = %1218
  %1222 = load i8*, i8** %5, align 8
  store i8* %1222, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1223

1223:                                             ; preds = %1303, %1221
  %1224 = load i32, i32* %16, align 4
  %1225 = load i32, i32* %17, align 4
  %1226 = icmp ult i32 %1224, %1225
  br i1 %1226, label %1227, label %1308

1227:                                             ; preds = %1223
  %1228 = load i8*, i8** %15, align 8
  %1229 = getelementptr inbounds i8, i8* %1228, i64 1
  %1230 = load i8, i8* %1229, align 1
  %1231 = zext i8 %1230 to i16
  store i16 %1231, i16* %39, align 2
  %1232 = load i16, i16* %39, align 2
  %1233 = zext i16 %1232 to i32
  %1234 = icmp eq i32 %1233, 255
  br i1 %1234, label %1235, label %1243

1235:                                             ; preds = %1227
  %1236 = load i8*, i8** %7, align 8
  %1237 = load i8*, i8** %15, align 8
  %1238 = load i8, i8* %1237, align 1
  %1239 = zext i8 %1238 to i64
  %1240 = getelementptr inbounds i8, i8* %1236, i64 %1239
  %1241 = load i8, i8* %1240, align 1
  %1242 = load i8*, i8** %15, align 8
  store i8 %1241, i8* %1242, align 1
  br label %1302

1243:                                             ; preds = %1227
  %1244 = load i16, i16* %39, align 2
  %1245 = zext i16 %1244 to i32
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1247, label %1254

1247:                                             ; preds = %1243
  %1248 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1249 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1248, i32 0, i32 74
  %1250 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1249, i32 0, i32 4
  %1251 = load i16, i16* %1250, align 4
  %1252 = trunc i16 %1251 to i8
  %1253 = load i8*, i8** %15, align 8
  store i8 %1252, i8* %1253, align 1
  br label %1301

1254:                                             ; preds = %1243
  %1255 = load i8*, i8** %9, align 8
  %1256 = load i8*, i8** %15, align 8
  %1257 = load i8, i8* %1256, align 1
  %1258 = zext i8 %1257 to i64
  %1259 = getelementptr inbounds i8, i8* %1255, i64 %1258
  %1260 = load i8, i8* %1259, align 1
  store i8 %1260, i8* %40, align 1
  %1261 = load i8, i8* %40, align 1
  %1262 = zext i8 %1261 to i16
  %1263 = zext i16 %1262 to i32
  %1264 = load i16, i16* %39, align 2
  %1265 = zext i16 %1264 to i32
  %1266 = mul nsw i32 %1263, %1265
  %1267 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1268 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1267, i32 0, i32 75
  %1269 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1268, i32 0, i32 4
  %1270 = load i16, i16* %1269, align 2
  %1271 = zext i16 %1270 to i32
  %1272 = load i16, i16* %39, align 2
  %1273 = zext i16 %1272 to i32
  %1274 = sub nsw i32 255, %1273
  %1275 = trunc i32 %1274 to i16
  %1276 = zext i16 %1275 to i32
  %1277 = mul nsw i32 %1271, %1276
  %1278 = add nsw i32 %1266, %1277
  %1279 = add nsw i32 %1278, 128
  %1280 = trunc i32 %1279 to i16
  store i16 %1280, i16* %42, align 2
  %1281 = load i16, i16* %42, align 2
  %1282 = zext i16 %1281 to i32
  %1283 = load i16, i16* %42, align 2
  %1284 = zext i16 %1283 to i32
  %1285 = ashr i32 %1284, 8
  %1286 = add nsw i32 %1282, %1285
  %1287 = ashr i32 %1286, 8
  %1288 = and i32 %1287, 255
  %1289 = trunc i32 %1288 to i8
  store i8 %1289, i8* %41, align 1
  %1290 = load i32, i32* %14, align 4
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1292, label %1298

1292:                                             ; preds = %1254
  %1293 = load i8*, i8** %8, align 8
  %1294 = load i8, i8* %41, align 1
  %1295 = zext i8 %1294 to i64
  %1296 = getelementptr inbounds i8, i8* %1293, i64 %1295
  %1297 = load i8, i8* %1296, align 1
  store i8 %1297, i8* %41, align 1
  br label %1298

1298:                                             ; preds = %1292, %1254
  %1299 = load i8, i8* %41, align 1
  %1300 = load i8*, i8** %15, align 8
  store i8 %1299, i8* %1300, align 1
  br label %1301

1301:                                             ; preds = %1298, %1247
  br label %1302

1302:                                             ; preds = %1301, %1235
  br label %1303

1303:                                             ; preds = %1302
  %1304 = load i32, i32* %16, align 4
  %1305 = add i32 %1304, 1
  store i32 %1305, i32* %16, align 4
  %1306 = load i8*, i8** %15, align 8
  %1307 = getelementptr inbounds i8, i8* %1306, i64 2
  store i8* %1307, i8** %15, align 8
  br label %1223, !llvm.loop !184

1308:                                             ; preds = %1223
  br label %1375

1309:                                             ; preds = %1218, %1215, %1212
  %1310 = load i8*, i8** %5, align 8
  store i8* %1310, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1311

1311:                                             ; preds = %1369, %1309
  %1312 = load i32, i32* %16, align 4
  %1313 = load i32, i32* %17, align 4
  %1314 = icmp ult i32 %1312, %1313
  br i1 %1314, label %1315, label %1374

1315:                                             ; preds = %1311
  %1316 = load i8*, i8** %15, align 8
  %1317 = getelementptr inbounds i8, i8* %1316, i64 1
  %1318 = load i8, i8* %1317, align 1
  store i8 %1318, i8* %43, align 1
  %1319 = load i8, i8* %43, align 1
  %1320 = zext i8 %1319 to i32
  %1321 = icmp eq i32 %1320, 0
  br i1 %1321, label %1322, label %1329

1322:                                             ; preds = %1315
  %1323 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1324 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1323, i32 0, i32 74
  %1325 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1324, i32 0, i32 4
  %1326 = load i16, i16* %1325, align 4
  %1327 = trunc i16 %1326 to i8
  %1328 = load i8*, i8** %15, align 8
  store i8 %1327, i8* %1328, align 1
  br label %1368

1329:                                             ; preds = %1315
  %1330 = load i8, i8* %43, align 1
  %1331 = zext i8 %1330 to i32
  %1332 = icmp slt i32 %1331, 255
  br i1 %1332, label %1333, label %1367

1333:                                             ; preds = %1329
  %1334 = load i8*, i8** %15, align 8
  %1335 = load i8, i8* %1334, align 1
  %1336 = zext i8 %1335 to i16
  %1337 = zext i16 %1336 to i32
  %1338 = load i8, i8* %43, align 1
  %1339 = zext i8 %1338 to i16
  %1340 = zext i16 %1339 to i32
  %1341 = mul nsw i32 %1337, %1340
  %1342 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1343 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1342, i32 0, i32 74
  %1344 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1343, i32 0, i32 4
  %1345 = load i16, i16* %1344, align 4
  %1346 = zext i16 %1345 to i32
  %1347 = load i8, i8* %43, align 1
  %1348 = zext i8 %1347 to i16
  %1349 = zext i16 %1348 to i32
  %1350 = sub nsw i32 255, %1349
  %1351 = trunc i32 %1350 to i16
  %1352 = zext i16 %1351 to i32
  %1353 = mul nsw i32 %1346, %1352
  %1354 = add nsw i32 %1341, %1353
  %1355 = add nsw i32 %1354, 128
  %1356 = trunc i32 %1355 to i16
  store i16 %1356, i16* %44, align 2
  %1357 = load i16, i16* %44, align 2
  %1358 = zext i16 %1357 to i32
  %1359 = load i16, i16* %44, align 2
  %1360 = zext i16 %1359 to i32
  %1361 = ashr i32 %1360, 8
  %1362 = add nsw i32 %1358, %1361
  %1363 = ashr i32 %1362, 8
  %1364 = and i32 %1363, 255
  %1365 = trunc i32 %1364 to i8
  %1366 = load i8*, i8** %15, align 8
  store i8 %1365, i8* %1366, align 1
  br label %1367

1367:                                             ; preds = %1333, %1329
  br label %1368

1368:                                             ; preds = %1367, %1322
  br label %1369

1369:                                             ; preds = %1368
  %1370 = load i32, i32* %16, align 4
  %1371 = add i32 %1370, 1
  store i32 %1371, i32* %16, align 4
  %1372 = load i8*, i8** %15, align 8
  %1373 = getelementptr inbounds i8, i8* %1372, i64 2
  store i8* %1373, i8** %15, align 8
  br label %1311, !llvm.loop !185

1374:                                             ; preds = %1311
  br label %1375

1375:                                             ; preds = %1374, %1308
  br label %1636

1376:                                             ; preds = %1206
  %1377 = load i16**, i16*** %10, align 8
  %1378 = icmp ne i16** %1377, null
  br i1 %1378, label %1379, label %1537

1379:                                             ; preds = %1376
  %1380 = load i16**, i16*** %11, align 8
  %1381 = icmp ne i16** %1380, null
  br i1 %1381, label %1382, label %1537

1382:                                             ; preds = %1379
  %1383 = load i16**, i16*** %12, align 8
  %1384 = icmp ne i16** %1383, null
  br i1 %1384, label %1385, label %1537

1385:                                             ; preds = %1382
  %1386 = load i8*, i8** %5, align 8
  store i8* %1386, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1387

1387:                                             ; preds = %1531, %1385
  %1388 = load i32, i32* %16, align 4
  %1389 = load i32, i32* %17, align 4
  %1390 = icmp ult i32 %1388, %1389
  br i1 %1390, label %1391, label %1536

1391:                                             ; preds = %1387
  %1392 = load i8*, i8** %15, align 8
  %1393 = getelementptr inbounds i8, i8* %1392, i64 2
  %1394 = load i8, i8* %1393, align 1
  %1395 = zext i8 %1394 to i32
  %1396 = shl i32 %1395, 8
  %1397 = load i8*, i8** %15, align 8
  %1398 = getelementptr inbounds i8, i8* %1397, i64 3
  %1399 = load i8, i8* %1398, align 1
  %1400 = zext i8 %1399 to i32
  %1401 = add nsw i32 %1396, %1400
  %1402 = trunc i32 %1401 to i16
  store i16 %1402, i16* %45, align 2
  %1403 = load i16, i16* %45, align 2
  %1404 = zext i16 %1403 to i32
  %1405 = icmp eq i32 %1404, 65535
  br i1 %1405, label %1406, label %1434

1406:                                             ; preds = %1391
  %1407 = load i16**, i16*** %10, align 8
  %1408 = load i8*, i8** %15, align 8
  %1409 = getelementptr inbounds i8, i8* %1408, i64 1
  %1410 = load i8, i8* %1409, align 1
  %1411 = zext i8 %1410 to i32
  %1412 = load i32, i32* %13, align 4
  %1413 = ashr i32 %1411, %1412
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds i16*, i16** %1407, i64 %1414
  %1416 = load i16*, i16** %1415, align 8
  %1417 = load i8*, i8** %15, align 8
  %1418 = load i8, i8* %1417, align 1
  %1419 = zext i8 %1418 to i64
  %1420 = getelementptr inbounds i16, i16* %1416, i64 %1419
  %1421 = load i16, i16* %1420, align 2
  store i16 %1421, i16* %46, align 2
  %1422 = load i16, i16* %46, align 2
  %1423 = zext i16 %1422 to i32
  %1424 = ashr i32 %1423, 8
  %1425 = and i32 %1424, 255
  %1426 = trunc i32 %1425 to i8
  %1427 = load i8*, i8** %15, align 8
  store i8 %1426, i8* %1427, align 1
  %1428 = load i16, i16* %46, align 2
  %1429 = zext i16 %1428 to i32
  %1430 = and i32 %1429, 255
  %1431 = trunc i32 %1430 to i8
  %1432 = load i8*, i8** %15, align 8
  %1433 = getelementptr inbounds i8, i8* %1432, i64 1
  store i8 %1431, i8* %1433, align 1
  br label %1530

1434:                                             ; preds = %1391
  %1435 = load i16, i16* %45, align 2
  %1436 = zext i16 %1435 to i32
  %1437 = icmp eq i32 %1436, 0
  br i1 %1437, label %1438, label %1457

1438:                                             ; preds = %1434
  %1439 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1440 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1439, i32 0, i32 74
  %1441 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1440, i32 0, i32 4
  %1442 = load i16, i16* %1441, align 4
  %1443 = zext i16 %1442 to i32
  %1444 = ashr i32 %1443, 8
  %1445 = and i32 %1444, 255
  %1446 = trunc i32 %1445 to i8
  %1447 = load i8*, i8** %15, align 8
  store i8 %1446, i8* %1447, align 1
  %1448 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1449 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1448, i32 0, i32 74
  %1450 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1449, i32 0, i32 4
  %1451 = load i16, i16* %1450, align 4
  %1452 = zext i16 %1451 to i32
  %1453 = and i32 %1452, 255
  %1454 = trunc i32 %1453 to i8
  %1455 = load i8*, i8** %15, align 8
  %1456 = getelementptr inbounds i8, i8* %1455, i64 1
  store i8 %1454, i8* %1456, align 1
  br label %1529

1457:                                             ; preds = %1434
  %1458 = load i16**, i16*** %12, align 8
  %1459 = load i8*, i8** %15, align 8
  %1460 = getelementptr inbounds i8, i8* %1459, i64 1
  %1461 = load i8, i8* %1460, align 1
  %1462 = zext i8 %1461 to i32
  %1463 = load i32, i32* %13, align 4
  %1464 = ashr i32 %1462, %1463
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds i16*, i16** %1458, i64 %1465
  %1467 = load i16*, i16** %1466, align 8
  %1468 = load i8*, i8** %15, align 8
  %1469 = load i8, i8* %1468, align 1
  %1470 = zext i8 %1469 to i64
  %1471 = getelementptr inbounds i16, i16* %1467, i64 %1470
  %1472 = load i16, i16* %1471, align 2
  store i16 %1472, i16* %47, align 2
  %1473 = load i16, i16* %47, align 2
  %1474 = zext i16 %1473 to i32
  %1475 = load i16, i16* %45, align 2
  %1476 = zext i16 %1475 to i32
  %1477 = mul i32 %1474, %1476
  %1478 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1479 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1478, i32 0, i32 75
  %1480 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1479, i32 0, i32 4
  %1481 = load i16, i16* %1480, align 2
  %1482 = zext i16 %1481 to i32
  %1483 = load i16, i16* %45, align 2
  %1484 = zext i16 %1483 to i32
  %1485 = sub i32 65535, %1484
  %1486 = mul i32 %1482, %1485
  %1487 = add i32 %1477, %1486
  %1488 = add i32 %1487, 32768
  store i32 %1488, i32* %50, align 4
  %1489 = load i32, i32* %50, align 4
  %1490 = load i32, i32* %50, align 4
  %1491 = lshr i32 %1490, 16
  %1492 = add i32 %1489, %1491
  %1493 = lshr i32 %1492, 16
  %1494 = and i32 65535, %1493
  %1495 = trunc i32 %1494 to i16
  store i16 %1495, i16* %48, align 2
  %1496 = load i32, i32* %14, align 4
  %1497 = icmp ne i32 %1496, 0
  br i1 %1497, label %1498, label %1500

1498:                                             ; preds = %1457
  %1499 = load i16, i16* %48, align 2
  store i16 %1499, i16* %49, align 2
  br label %1516

1500:                                             ; preds = %1457
  %1501 = load i16**, i16*** %11, align 8
  %1502 = load i16, i16* %48, align 2
  %1503 = zext i16 %1502 to i32
  %1504 = and i32 %1503, 255
  %1505 = load i32, i32* %13, align 4
  %1506 = ashr i32 %1504, %1505
  %1507 = sext i32 %1506 to i64
  %1508 = getelementptr inbounds i16*, i16** %1501, i64 %1507
  %1509 = load i16*, i16** %1508, align 8
  %1510 = load i16, i16* %48, align 2
  %1511 = zext i16 %1510 to i32
  %1512 = ashr i32 %1511, 8
  %1513 = sext i32 %1512 to i64
  %1514 = getelementptr inbounds i16, i16* %1509, i64 %1513
  %1515 = load i16, i16* %1514, align 2
  store i16 %1515, i16* %49, align 2
  br label %1516

1516:                                             ; preds = %1500, %1498
  %1517 = load i16, i16* %49, align 2
  %1518 = zext i16 %1517 to i32
  %1519 = ashr i32 %1518, 8
  %1520 = and i32 %1519, 255
  %1521 = trunc i32 %1520 to i8
  %1522 = load i8*, i8** %15, align 8
  store i8 %1521, i8* %1522, align 1
  %1523 = load i16, i16* %49, align 2
  %1524 = zext i16 %1523 to i32
  %1525 = and i32 %1524, 255
  %1526 = trunc i32 %1525 to i8
  %1527 = load i8*, i8** %15, align 8
  %1528 = getelementptr inbounds i8, i8* %1527, i64 1
  store i8 %1526, i8* %1528, align 1
  br label %1529

1529:                                             ; preds = %1516, %1438
  br label %1530

1530:                                             ; preds = %1529, %1406
  br label %1531

1531:                                             ; preds = %1530
  %1532 = load i32, i32* %16, align 4
  %1533 = add i32 %1532, 1
  store i32 %1533, i32* %16, align 4
  %1534 = load i8*, i8** %15, align 8
  %1535 = getelementptr inbounds i8, i8* %1534, i64 4
  store i8* %1535, i8** %15, align 8
  br label %1387, !llvm.loop !186

1536:                                             ; preds = %1387
  br label %1635

1537:                                             ; preds = %1382, %1379, %1376
  %1538 = load i8*, i8** %5, align 8
  store i8* %1538, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1539

1539:                                             ; preds = %1629, %1537
  %1540 = load i32, i32* %16, align 4
  %1541 = load i32, i32* %17, align 4
  %1542 = icmp ult i32 %1540, %1541
  br i1 %1542, label %1543, label %1634

1543:                                             ; preds = %1539
  %1544 = load i8*, i8** %15, align 8
  %1545 = getelementptr inbounds i8, i8* %1544, i64 2
  %1546 = load i8, i8* %1545, align 1
  %1547 = zext i8 %1546 to i32
  %1548 = shl i32 %1547, 8
  %1549 = load i8*, i8** %15, align 8
  %1550 = getelementptr inbounds i8, i8* %1549, i64 3
  %1551 = load i8, i8* %1550, align 1
  %1552 = zext i8 %1551 to i32
  %1553 = add nsw i32 %1548, %1552
  %1554 = trunc i32 %1553 to i16
  store i16 %1554, i16* %51, align 2
  %1555 = load i16, i16* %51, align 2
  %1556 = zext i16 %1555 to i32
  %1557 = icmp eq i32 %1556, 0
  br i1 %1557, label %1558, label %1577

1558:                                             ; preds = %1543
  %1559 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1560 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1559, i32 0, i32 74
  %1561 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1560, i32 0, i32 4
  %1562 = load i16, i16* %1561, align 4
  %1563 = zext i16 %1562 to i32
  %1564 = ashr i32 %1563, 8
  %1565 = and i32 %1564, 255
  %1566 = trunc i32 %1565 to i8
  %1567 = load i8*, i8** %15, align 8
  store i8 %1566, i8* %1567, align 1
  %1568 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1569 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1568, i32 0, i32 74
  %1570 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1569, i32 0, i32 4
  %1571 = load i16, i16* %1570, align 4
  %1572 = zext i16 %1571 to i32
  %1573 = and i32 %1572, 255
  %1574 = trunc i32 %1573 to i8
  %1575 = load i8*, i8** %15, align 8
  %1576 = getelementptr inbounds i8, i8* %1575, i64 1
  store i8 %1574, i8* %1576, align 1
  br label %1628

1577:                                             ; preds = %1543
  %1578 = load i16, i16* %51, align 2
  %1579 = zext i16 %1578 to i32
  %1580 = icmp slt i32 %1579, 65535
  br i1 %1580, label %1581, label %1627

1581:                                             ; preds = %1577
  %1582 = load i8*, i8** %15, align 8
  %1583 = load i8, i8* %1582, align 1
  %1584 = zext i8 %1583 to i32
  %1585 = shl i32 %1584, 8
  %1586 = load i8*, i8** %15, align 8
  %1587 = getelementptr inbounds i8, i8* %1586, i64 1
  %1588 = load i8, i8* %1587, align 1
  %1589 = zext i8 %1588 to i32
  %1590 = add nsw i32 %1585, %1589
  %1591 = trunc i32 %1590 to i16
  store i16 %1591, i16* %52, align 2
  %1592 = load i16, i16* %52, align 2
  %1593 = zext i16 %1592 to i32
  %1594 = load i16, i16* %51, align 2
  %1595 = zext i16 %1594 to i32
  %1596 = mul i32 %1593, %1595
  %1597 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1598 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1597, i32 0, i32 74
  %1599 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1598, i32 0, i32 4
  %1600 = load i16, i16* %1599, align 4
  %1601 = zext i16 %1600 to i32
  %1602 = load i16, i16* %51, align 2
  %1603 = zext i16 %1602 to i32
  %1604 = sub i32 65535, %1603
  %1605 = mul i32 %1601, %1604
  %1606 = add i32 %1596, %1605
  %1607 = add i32 %1606, 32768
  store i32 %1607, i32* %54, align 4
  %1608 = load i32, i32* %54, align 4
  %1609 = load i32, i32* %54, align 4
  %1610 = lshr i32 %1609, 16
  %1611 = add i32 %1608, %1610
  %1612 = lshr i32 %1611, 16
  %1613 = and i32 65535, %1612
  %1614 = trunc i32 %1613 to i16
  store i16 %1614, i16* %53, align 2
  %1615 = load i16, i16* %53, align 2
  %1616 = zext i16 %1615 to i32
  %1617 = ashr i32 %1616, 8
  %1618 = and i32 %1617, 255
  %1619 = trunc i32 %1618 to i8
  %1620 = load i8*, i8** %15, align 8
  store i8 %1619, i8* %1620, align 1
  %1621 = load i16, i16* %53, align 2
  %1622 = zext i16 %1621 to i32
  %1623 = and i32 %1622, 255
  %1624 = trunc i32 %1623 to i8
  %1625 = load i8*, i8** %15, align 8
  %1626 = getelementptr inbounds i8, i8* %1625, i64 1
  store i8 %1624, i8* %1626, align 1
  br label %1627

1627:                                             ; preds = %1581, %1577
  br label %1628

1628:                                             ; preds = %1627, %1558
  br label %1629

1629:                                             ; preds = %1628
  %1630 = load i32, i32* %16, align 4
  %1631 = add i32 %1630, 1
  store i32 %1631, i32* %16, align 4
  %1632 = load i8*, i8** %15, align 8
  %1633 = getelementptr inbounds i8, i8* %1632, i64 4
  store i8* %1633, i8** %15, align 8
  br label %1539, !llvm.loop !187

1634:                                             ; preds = %1539
  br label %1635

1635:                                             ; preds = %1634, %1536
  br label %1636

1636:                                             ; preds = %1635, %1375
  br label %2658

1637:                                             ; preds = %3
  %1638 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %1639 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1638, i32 0, i32 3
  %1640 = load i8, i8* %1639, align 1
  %1641 = zext i8 %1640 to i32
  %1642 = icmp eq i32 %1641, 8
  br i1 %1642, label %1643, label %2024

1643:                                             ; preds = %1637
  %1644 = load i8*, i8** %9, align 8
  %1645 = icmp ne i8* %1644, null
  br i1 %1645, label %1646, label %1873

1646:                                             ; preds = %1643
  %1647 = load i8*, i8** %8, align 8
  %1648 = icmp ne i8* %1647, null
  br i1 %1648, label %1649, label %1873

1649:                                             ; preds = %1646
  %1650 = load i8*, i8** %7, align 8
  %1651 = icmp ne i8* %1650, null
  br i1 %1651, label %1652, label %1873

1652:                                             ; preds = %1649
  %1653 = load i8*, i8** %5, align 8
  store i8* %1653, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1654

1654:                                             ; preds = %1867, %1652
  %1655 = load i32, i32* %16, align 4
  %1656 = load i32, i32* %17, align 4
  %1657 = icmp ult i32 %1655, %1656
  br i1 %1657, label %1658, label %1872

1658:                                             ; preds = %1654
  %1659 = load i8*, i8** %15, align 8
  %1660 = getelementptr inbounds i8, i8* %1659, i64 3
  %1661 = load i8, i8* %1660, align 1
  store i8 %1661, i8* %55, align 1
  %1662 = load i8, i8* %55, align 1
  %1663 = zext i8 %1662 to i32
  %1664 = icmp eq i32 %1663, 255
  br i1 %1664, label %1665, label %1691

1665:                                             ; preds = %1658
  %1666 = load i8*, i8** %7, align 8
  %1667 = load i8*, i8** %15, align 8
  %1668 = load i8, i8* %1667, align 1
  %1669 = zext i8 %1668 to i64
  %1670 = getelementptr inbounds i8, i8* %1666, i64 %1669
  %1671 = load i8, i8* %1670, align 1
  %1672 = load i8*, i8** %15, align 8
  store i8 %1671, i8* %1672, align 1
  %1673 = load i8*, i8** %7, align 8
  %1674 = load i8*, i8** %15, align 8
  %1675 = getelementptr inbounds i8, i8* %1674, i64 1
  %1676 = load i8, i8* %1675, align 1
  %1677 = zext i8 %1676 to i64
  %1678 = getelementptr inbounds i8, i8* %1673, i64 %1677
  %1679 = load i8, i8* %1678, align 1
  %1680 = load i8*, i8** %15, align 8
  %1681 = getelementptr inbounds i8, i8* %1680, i64 1
  store i8 %1679, i8* %1681, align 1
  %1682 = load i8*, i8** %7, align 8
  %1683 = load i8*, i8** %15, align 8
  %1684 = getelementptr inbounds i8, i8* %1683, i64 2
  %1685 = load i8, i8* %1684, align 1
  %1686 = zext i8 %1685 to i64
  %1687 = getelementptr inbounds i8, i8* %1682, i64 %1686
  %1688 = load i8, i8* %1687, align 1
  %1689 = load i8*, i8** %15, align 8
  %1690 = getelementptr inbounds i8, i8* %1689, i64 2
  store i8 %1688, i8* %1690, align 1
  br label %1866

1691:                                             ; preds = %1658
  %1692 = load i8, i8* %55, align 1
  %1693 = zext i8 %1692 to i32
  %1694 = icmp eq i32 %1693, 0
  br i1 %1694, label %1695, label %1716

1695:                                             ; preds = %1691
  %1696 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1697 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1696, i32 0, i32 74
  %1698 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1697, i32 0, i32 1
  %1699 = load i16, i16* %1698, align 2
  %1700 = trunc i16 %1699 to i8
  %1701 = load i8*, i8** %15, align 8
  store i8 %1700, i8* %1701, align 1
  %1702 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1703 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1702, i32 0, i32 74
  %1704 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1703, i32 0, i32 2
  %1705 = load i16, i16* %1704, align 4
  %1706 = trunc i16 %1705 to i8
  %1707 = load i8*, i8** %15, align 8
  %1708 = getelementptr inbounds i8, i8* %1707, i64 1
  store i8 %1706, i8* %1708, align 1
  %1709 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1710 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1709, i32 0, i32 74
  %1711 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1710, i32 0, i32 3
  %1712 = load i16, i16* %1711, align 2
  %1713 = trunc i16 %1712 to i8
  %1714 = load i8*, i8** %15, align 8
  %1715 = getelementptr inbounds i8, i8* %1714, i64 2
  store i8 %1713, i8* %1715, align 1
  br label %1865

1716:                                             ; preds = %1691
  %1717 = load i8*, i8** %9, align 8
  %1718 = load i8*, i8** %15, align 8
  %1719 = load i8, i8* %1718, align 1
  %1720 = zext i8 %1719 to i64
  %1721 = getelementptr inbounds i8, i8* %1717, i64 %1720
  %1722 = load i8, i8* %1721, align 1
  store i8 %1722, i8* %56, align 1
  %1723 = load i8, i8* %56, align 1
  %1724 = zext i8 %1723 to i16
  %1725 = zext i16 %1724 to i32
  %1726 = load i8, i8* %55, align 1
  %1727 = zext i8 %1726 to i16
  %1728 = zext i16 %1727 to i32
  %1729 = mul nsw i32 %1725, %1728
  %1730 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1731 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1730, i32 0, i32 75
  %1732 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1731, i32 0, i32 1
  %1733 = load i16, i16* %1732, align 2
  %1734 = zext i16 %1733 to i32
  %1735 = load i8, i8* %55, align 1
  %1736 = zext i8 %1735 to i16
  %1737 = zext i16 %1736 to i32
  %1738 = sub nsw i32 255, %1737
  %1739 = trunc i32 %1738 to i16
  %1740 = zext i16 %1739 to i32
  %1741 = mul nsw i32 %1734, %1740
  %1742 = add nsw i32 %1729, %1741
  %1743 = add nsw i32 %1742, 128
  %1744 = trunc i32 %1743 to i16
  store i16 %1744, i16* %58, align 2
  %1745 = load i16, i16* %58, align 2
  %1746 = zext i16 %1745 to i32
  %1747 = load i16, i16* %58, align 2
  %1748 = zext i16 %1747 to i32
  %1749 = ashr i32 %1748, 8
  %1750 = add nsw i32 %1746, %1749
  %1751 = ashr i32 %1750, 8
  %1752 = and i32 %1751, 255
  %1753 = trunc i32 %1752 to i8
  store i8 %1753, i8* %57, align 1
  %1754 = load i32, i32* %14, align 4
  %1755 = icmp eq i32 %1754, 0
  br i1 %1755, label %1756, label %1762

1756:                                             ; preds = %1716
  %1757 = load i8*, i8** %8, align 8
  %1758 = load i8, i8* %57, align 1
  %1759 = zext i8 %1758 to i64
  %1760 = getelementptr inbounds i8, i8* %1757, i64 %1759
  %1761 = load i8, i8* %1760, align 1
  store i8 %1761, i8* %57, align 1
  br label %1762

1762:                                             ; preds = %1756, %1716
  %1763 = load i8, i8* %57, align 1
  %1764 = load i8*, i8** %15, align 8
  store i8 %1763, i8* %1764, align 1
  %1765 = load i8*, i8** %9, align 8
  %1766 = load i8*, i8** %15, align 8
  %1767 = getelementptr inbounds i8, i8* %1766, i64 1
  %1768 = load i8, i8* %1767, align 1
  %1769 = zext i8 %1768 to i64
  %1770 = getelementptr inbounds i8, i8* %1765, i64 %1769
  %1771 = load i8, i8* %1770, align 1
  store i8 %1771, i8* %56, align 1
  %1772 = load i8, i8* %56, align 1
  %1773 = zext i8 %1772 to i16
  %1774 = zext i16 %1773 to i32
  %1775 = load i8, i8* %55, align 1
  %1776 = zext i8 %1775 to i16
  %1777 = zext i16 %1776 to i32
  %1778 = mul nsw i32 %1774, %1777
  %1779 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1780 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1779, i32 0, i32 75
  %1781 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1780, i32 0, i32 2
  %1782 = load i16, i16* %1781, align 2
  %1783 = zext i16 %1782 to i32
  %1784 = load i8, i8* %55, align 1
  %1785 = zext i8 %1784 to i16
  %1786 = zext i16 %1785 to i32
  %1787 = sub nsw i32 255, %1786
  %1788 = trunc i32 %1787 to i16
  %1789 = zext i16 %1788 to i32
  %1790 = mul nsw i32 %1783, %1789
  %1791 = add nsw i32 %1778, %1790
  %1792 = add nsw i32 %1791, 128
  %1793 = trunc i32 %1792 to i16
  store i16 %1793, i16* %59, align 2
  %1794 = load i16, i16* %59, align 2
  %1795 = zext i16 %1794 to i32
  %1796 = load i16, i16* %59, align 2
  %1797 = zext i16 %1796 to i32
  %1798 = ashr i32 %1797, 8
  %1799 = add nsw i32 %1795, %1798
  %1800 = ashr i32 %1799, 8
  %1801 = and i32 %1800, 255
  %1802 = trunc i32 %1801 to i8
  store i8 %1802, i8* %57, align 1
  %1803 = load i32, i32* %14, align 4
  %1804 = icmp eq i32 %1803, 0
  br i1 %1804, label %1805, label %1811

1805:                                             ; preds = %1762
  %1806 = load i8*, i8** %8, align 8
  %1807 = load i8, i8* %57, align 1
  %1808 = zext i8 %1807 to i64
  %1809 = getelementptr inbounds i8, i8* %1806, i64 %1808
  %1810 = load i8, i8* %1809, align 1
  store i8 %1810, i8* %57, align 1
  br label %1811

1811:                                             ; preds = %1805, %1762
  %1812 = load i8, i8* %57, align 1
  %1813 = load i8*, i8** %15, align 8
  %1814 = getelementptr inbounds i8, i8* %1813, i64 1
  store i8 %1812, i8* %1814, align 1
  %1815 = load i8*, i8** %9, align 8
  %1816 = load i8*, i8** %15, align 8
  %1817 = getelementptr inbounds i8, i8* %1816, i64 2
  %1818 = load i8, i8* %1817, align 1
  %1819 = zext i8 %1818 to i64
  %1820 = getelementptr inbounds i8, i8* %1815, i64 %1819
  %1821 = load i8, i8* %1820, align 1
  store i8 %1821, i8* %56, align 1
  %1822 = load i8, i8* %56, align 1
  %1823 = zext i8 %1822 to i16
  %1824 = zext i16 %1823 to i32
  %1825 = load i8, i8* %55, align 1
  %1826 = zext i8 %1825 to i16
  %1827 = zext i16 %1826 to i32
  %1828 = mul nsw i32 %1824, %1827
  %1829 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1830 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1829, i32 0, i32 75
  %1831 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1830, i32 0, i32 3
  %1832 = load i16, i16* %1831, align 2
  %1833 = zext i16 %1832 to i32
  %1834 = load i8, i8* %55, align 1
  %1835 = zext i8 %1834 to i16
  %1836 = zext i16 %1835 to i32
  %1837 = sub nsw i32 255, %1836
  %1838 = trunc i32 %1837 to i16
  %1839 = zext i16 %1838 to i32
  %1840 = mul nsw i32 %1833, %1839
  %1841 = add nsw i32 %1828, %1840
  %1842 = add nsw i32 %1841, 128
  %1843 = trunc i32 %1842 to i16
  store i16 %1843, i16* %60, align 2
  %1844 = load i16, i16* %60, align 2
  %1845 = zext i16 %1844 to i32
  %1846 = load i16, i16* %60, align 2
  %1847 = zext i16 %1846 to i32
  %1848 = ashr i32 %1847, 8
  %1849 = add nsw i32 %1845, %1848
  %1850 = ashr i32 %1849, 8
  %1851 = and i32 %1850, 255
  %1852 = trunc i32 %1851 to i8
  store i8 %1852, i8* %57, align 1
  %1853 = load i32, i32* %14, align 4
  %1854 = icmp eq i32 %1853, 0
  br i1 %1854, label %1855, label %1861

1855:                                             ; preds = %1811
  %1856 = load i8*, i8** %8, align 8
  %1857 = load i8, i8* %57, align 1
  %1858 = zext i8 %1857 to i64
  %1859 = getelementptr inbounds i8, i8* %1856, i64 %1858
  %1860 = load i8, i8* %1859, align 1
  store i8 %1860, i8* %57, align 1
  br label %1861

1861:                                             ; preds = %1855, %1811
  %1862 = load i8, i8* %57, align 1
  %1863 = load i8*, i8** %15, align 8
  %1864 = getelementptr inbounds i8, i8* %1863, i64 2
  store i8 %1862, i8* %1864, align 1
  br label %1865

1865:                                             ; preds = %1861, %1695
  br label %1866

1866:                                             ; preds = %1865, %1665
  br label %1867

1867:                                             ; preds = %1866
  %1868 = load i32, i32* %16, align 4
  %1869 = add i32 %1868, 1
  store i32 %1869, i32* %16, align 4
  %1870 = load i8*, i8** %15, align 8
  %1871 = getelementptr inbounds i8, i8* %1870, i64 4
  store i8* %1871, i8** %15, align 8
  br label %1654, !llvm.loop !188

1872:                                             ; preds = %1654
  br label %2023

1873:                                             ; preds = %1649, %1646, %1643
  %1874 = load i8*, i8** %5, align 8
  store i8* %1874, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %1875

1875:                                             ; preds = %2017, %1873
  %1876 = load i32, i32* %16, align 4
  %1877 = load i32, i32* %17, align 4
  %1878 = icmp ult i32 %1876, %1877
  br i1 %1878, label %1879, label %2022

1879:                                             ; preds = %1875
  %1880 = load i8*, i8** %15, align 8
  %1881 = getelementptr inbounds i8, i8* %1880, i64 3
  %1882 = load i8, i8* %1881, align 1
  store i8 %1882, i8* %61, align 1
  %1883 = load i8, i8* %61, align 1
  %1884 = zext i8 %1883 to i32
  %1885 = icmp eq i32 %1884, 0
  br i1 %1885, label %1886, label %1907

1886:                                             ; preds = %1879
  %1887 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1888 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1887, i32 0, i32 74
  %1889 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1888, i32 0, i32 1
  %1890 = load i16, i16* %1889, align 2
  %1891 = trunc i16 %1890 to i8
  %1892 = load i8*, i8** %15, align 8
  store i8 %1891, i8* %1892, align 1
  %1893 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1894 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1893, i32 0, i32 74
  %1895 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1894, i32 0, i32 2
  %1896 = load i16, i16* %1895, align 4
  %1897 = trunc i16 %1896 to i8
  %1898 = load i8*, i8** %15, align 8
  %1899 = getelementptr inbounds i8, i8* %1898, i64 1
  store i8 %1897, i8* %1899, align 1
  %1900 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1901 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1900, i32 0, i32 74
  %1902 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1901, i32 0, i32 3
  %1903 = load i16, i16* %1902, align 2
  %1904 = trunc i16 %1903 to i8
  %1905 = load i8*, i8** %15, align 8
  %1906 = getelementptr inbounds i8, i8* %1905, i64 2
  store i8 %1904, i8* %1906, align 1
  br label %2016

1907:                                             ; preds = %1879
  %1908 = load i8, i8* %61, align 1
  %1909 = zext i8 %1908 to i32
  %1910 = icmp slt i32 %1909, 255
  br i1 %1910, label %1911, label %2015

1911:                                             ; preds = %1907
  %1912 = load i8*, i8** %15, align 8
  %1913 = load i8, i8* %1912, align 1
  %1914 = zext i8 %1913 to i16
  %1915 = zext i16 %1914 to i32
  %1916 = load i8, i8* %61, align 1
  %1917 = zext i8 %1916 to i16
  %1918 = zext i16 %1917 to i32
  %1919 = mul nsw i32 %1915, %1918
  %1920 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1921 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1920, i32 0, i32 74
  %1922 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1921, i32 0, i32 1
  %1923 = load i16, i16* %1922, align 2
  %1924 = zext i16 %1923 to i32
  %1925 = load i8, i8* %61, align 1
  %1926 = zext i8 %1925 to i16
  %1927 = zext i16 %1926 to i32
  %1928 = sub nsw i32 255, %1927
  %1929 = trunc i32 %1928 to i16
  %1930 = zext i16 %1929 to i32
  %1931 = mul nsw i32 %1924, %1930
  %1932 = add nsw i32 %1919, %1931
  %1933 = add nsw i32 %1932, 128
  %1934 = trunc i32 %1933 to i16
  store i16 %1934, i16* %62, align 2
  %1935 = load i16, i16* %62, align 2
  %1936 = zext i16 %1935 to i32
  %1937 = load i16, i16* %62, align 2
  %1938 = zext i16 %1937 to i32
  %1939 = ashr i32 %1938, 8
  %1940 = add nsw i32 %1936, %1939
  %1941 = ashr i32 %1940, 8
  %1942 = and i32 %1941, 255
  %1943 = trunc i32 %1942 to i8
  %1944 = load i8*, i8** %15, align 8
  store i8 %1943, i8* %1944, align 1
  %1945 = load i8*, i8** %15, align 8
  %1946 = getelementptr inbounds i8, i8* %1945, i64 1
  %1947 = load i8, i8* %1946, align 1
  %1948 = zext i8 %1947 to i16
  %1949 = zext i16 %1948 to i32
  %1950 = load i8, i8* %61, align 1
  %1951 = zext i8 %1950 to i16
  %1952 = zext i16 %1951 to i32
  %1953 = mul nsw i32 %1949, %1952
  %1954 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1955 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1954, i32 0, i32 74
  %1956 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1955, i32 0, i32 2
  %1957 = load i16, i16* %1956, align 4
  %1958 = zext i16 %1957 to i32
  %1959 = load i8, i8* %61, align 1
  %1960 = zext i8 %1959 to i16
  %1961 = zext i16 %1960 to i32
  %1962 = sub nsw i32 255, %1961
  %1963 = trunc i32 %1962 to i16
  %1964 = zext i16 %1963 to i32
  %1965 = mul nsw i32 %1958, %1964
  %1966 = add nsw i32 %1953, %1965
  %1967 = add nsw i32 %1966, 128
  %1968 = trunc i32 %1967 to i16
  store i16 %1968, i16* %63, align 2
  %1969 = load i16, i16* %63, align 2
  %1970 = zext i16 %1969 to i32
  %1971 = load i16, i16* %63, align 2
  %1972 = zext i16 %1971 to i32
  %1973 = ashr i32 %1972, 8
  %1974 = add nsw i32 %1970, %1973
  %1975 = ashr i32 %1974, 8
  %1976 = and i32 %1975, 255
  %1977 = trunc i32 %1976 to i8
  %1978 = load i8*, i8** %15, align 8
  %1979 = getelementptr inbounds i8, i8* %1978, i64 1
  store i8 %1977, i8* %1979, align 1
  %1980 = load i8*, i8** %15, align 8
  %1981 = getelementptr inbounds i8, i8* %1980, i64 2
  %1982 = load i8, i8* %1981, align 1
  %1983 = zext i8 %1982 to i16
  %1984 = zext i16 %1983 to i32
  %1985 = load i8, i8* %61, align 1
  %1986 = zext i8 %1985 to i16
  %1987 = zext i16 %1986 to i32
  %1988 = mul nsw i32 %1984, %1987
  %1989 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %1990 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1989, i32 0, i32 74
  %1991 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1990, i32 0, i32 3
  %1992 = load i16, i16* %1991, align 2
  %1993 = zext i16 %1992 to i32
  %1994 = load i8, i8* %61, align 1
  %1995 = zext i8 %1994 to i16
  %1996 = zext i16 %1995 to i32
  %1997 = sub nsw i32 255, %1996
  %1998 = trunc i32 %1997 to i16
  %1999 = zext i16 %1998 to i32
  %2000 = mul nsw i32 %1993, %1999
  %2001 = add nsw i32 %1988, %2000
  %2002 = add nsw i32 %2001, 128
  %2003 = trunc i32 %2002 to i16
  store i16 %2003, i16* %64, align 2
  %2004 = load i16, i16* %64, align 2
  %2005 = zext i16 %2004 to i32
  %2006 = load i16, i16* %64, align 2
  %2007 = zext i16 %2006 to i32
  %2008 = ashr i32 %2007, 8
  %2009 = add nsw i32 %2005, %2008
  %2010 = ashr i32 %2009, 8
  %2011 = and i32 %2010, 255
  %2012 = trunc i32 %2011 to i8
  %2013 = load i8*, i8** %15, align 8
  %2014 = getelementptr inbounds i8, i8* %2013, i64 2
  store i8 %2012, i8* %2014, align 1
  br label %2015

2015:                                             ; preds = %1911, %1907
  br label %2016

2016:                                             ; preds = %2015, %1886
  br label %2017

2017:                                             ; preds = %2016
  %2018 = load i32, i32* %16, align 4
  %2019 = add i32 %2018, 1
  store i32 %2019, i32* %16, align 4
  %2020 = load i8*, i8** %15, align 8
  %2021 = getelementptr inbounds i8, i8* %2020, i64 4
  store i8* %2021, i8** %15, align 8
  br label %1875, !llvm.loop !189

2022:                                             ; preds = %1875
  br label %2023

2023:                                             ; preds = %2022, %1872
  br label %2656

2024:                                             ; preds = %1637
  %2025 = load i16**, i16*** %10, align 8
  %2026 = icmp ne i16** %2025, null
  br i1 %2026, label %2027, label %2423

2027:                                             ; preds = %2024
  %2028 = load i16**, i16*** %11, align 8
  %2029 = icmp ne i16** %2028, null
  br i1 %2029, label %2030, label %2423

2030:                                             ; preds = %2027
  %2031 = load i16**, i16*** %12, align 8
  %2032 = icmp ne i16** %2031, null
  br i1 %2032, label %2033, label %2423

2033:                                             ; preds = %2030
  %2034 = load i8*, i8** %5, align 8
  store i8* %2034, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %2035

2035:                                             ; preds = %2417, %2033
  %2036 = load i32, i32* %16, align 4
  %2037 = load i32, i32* %17, align 4
  %2038 = icmp ult i32 %2036, %2037
  br i1 %2038, label %2039, label %2422

2039:                                             ; preds = %2035
  %2040 = load i8*, i8** %15, align 8
  %2041 = getelementptr inbounds i8, i8* %2040, i64 6
  %2042 = load i8, i8* %2041, align 1
  %2043 = zext i8 %2042 to i16
  %2044 = zext i16 %2043 to i32
  %2045 = shl i32 %2044, 8
  %2046 = load i8*, i8** %15, align 8
  %2047 = getelementptr inbounds i8, i8* %2046, i64 7
  %2048 = load i8, i8* %2047, align 1
  %2049 = zext i8 %2048 to i16
  %2050 = zext i16 %2049 to i32
  %2051 = add nsw i32 %2045, %2050
  %2052 = trunc i32 %2051 to i16
  store i16 %2052, i16* %65, align 2
  %2053 = load i16, i16* %65, align 2
  %2054 = zext i16 %2053 to i32
  %2055 = icmp eq i32 %2054, 65535
  br i1 %2055, label %2056, label %2142

2056:                                             ; preds = %2039
  %2057 = load i16**, i16*** %10, align 8
  %2058 = load i8*, i8** %15, align 8
  %2059 = getelementptr inbounds i8, i8* %2058, i64 1
  %2060 = load i8, i8* %2059, align 1
  %2061 = zext i8 %2060 to i32
  %2062 = load i32, i32* %13, align 4
  %2063 = ashr i32 %2061, %2062
  %2064 = sext i32 %2063 to i64
  %2065 = getelementptr inbounds i16*, i16** %2057, i64 %2064
  %2066 = load i16*, i16** %2065, align 8
  %2067 = load i8*, i8** %15, align 8
  %2068 = load i8, i8* %2067, align 1
  %2069 = zext i8 %2068 to i64
  %2070 = getelementptr inbounds i16, i16* %2066, i64 %2069
  %2071 = load i16, i16* %2070, align 2
  store i16 %2071, i16* %66, align 2
  %2072 = load i16, i16* %66, align 2
  %2073 = zext i16 %2072 to i32
  %2074 = ashr i32 %2073, 8
  %2075 = and i32 %2074, 255
  %2076 = trunc i32 %2075 to i8
  %2077 = load i8*, i8** %15, align 8
  store i8 %2076, i8* %2077, align 1
  %2078 = load i16, i16* %66, align 2
  %2079 = zext i16 %2078 to i32
  %2080 = and i32 %2079, 255
  %2081 = trunc i32 %2080 to i8
  %2082 = load i8*, i8** %15, align 8
  %2083 = getelementptr inbounds i8, i8* %2082, i64 1
  store i8 %2081, i8* %2083, align 1
  %2084 = load i16**, i16*** %10, align 8
  %2085 = load i8*, i8** %15, align 8
  %2086 = getelementptr inbounds i8, i8* %2085, i64 3
  %2087 = load i8, i8* %2086, align 1
  %2088 = zext i8 %2087 to i32
  %2089 = load i32, i32* %13, align 4
  %2090 = ashr i32 %2088, %2089
  %2091 = sext i32 %2090 to i64
  %2092 = getelementptr inbounds i16*, i16** %2084, i64 %2091
  %2093 = load i16*, i16** %2092, align 8
  %2094 = load i8*, i8** %15, align 8
  %2095 = getelementptr inbounds i8, i8* %2094, i64 2
  %2096 = load i8, i8* %2095, align 1
  %2097 = zext i8 %2096 to i64
  %2098 = getelementptr inbounds i16, i16* %2093, i64 %2097
  %2099 = load i16, i16* %2098, align 2
  store i16 %2099, i16* %66, align 2
  %2100 = load i16, i16* %66, align 2
  %2101 = zext i16 %2100 to i32
  %2102 = ashr i32 %2101, 8
  %2103 = and i32 %2102, 255
  %2104 = trunc i32 %2103 to i8
  %2105 = load i8*, i8** %15, align 8
  %2106 = getelementptr inbounds i8, i8* %2105, i64 2
  store i8 %2104, i8* %2106, align 1
  %2107 = load i16, i16* %66, align 2
  %2108 = zext i16 %2107 to i32
  %2109 = and i32 %2108, 255
  %2110 = trunc i32 %2109 to i8
  %2111 = load i8*, i8** %15, align 8
  %2112 = getelementptr inbounds i8, i8* %2111, i64 3
  store i8 %2110, i8* %2112, align 1
  %2113 = load i16**, i16*** %10, align 8
  %2114 = load i8*, i8** %15, align 8
  %2115 = getelementptr inbounds i8, i8* %2114, i64 5
  %2116 = load i8, i8* %2115, align 1
  %2117 = zext i8 %2116 to i32
  %2118 = load i32, i32* %13, align 4
  %2119 = ashr i32 %2117, %2118
  %2120 = sext i32 %2119 to i64
  %2121 = getelementptr inbounds i16*, i16** %2113, i64 %2120
  %2122 = load i16*, i16** %2121, align 8
  %2123 = load i8*, i8** %15, align 8
  %2124 = getelementptr inbounds i8, i8* %2123, i64 4
  %2125 = load i8, i8* %2124, align 1
  %2126 = zext i8 %2125 to i64
  %2127 = getelementptr inbounds i16, i16* %2122, i64 %2126
  %2128 = load i16, i16* %2127, align 2
  store i16 %2128, i16* %66, align 2
  %2129 = load i16, i16* %66, align 2
  %2130 = zext i16 %2129 to i32
  %2131 = ashr i32 %2130, 8
  %2132 = and i32 %2131, 255
  %2133 = trunc i32 %2132 to i8
  %2134 = load i8*, i8** %15, align 8
  %2135 = getelementptr inbounds i8, i8* %2134, i64 4
  store i8 %2133, i8* %2135, align 1
  %2136 = load i16, i16* %66, align 2
  %2137 = zext i16 %2136 to i32
  %2138 = and i32 %2137, 255
  %2139 = trunc i32 %2138 to i8
  %2140 = load i8*, i8** %15, align 8
  %2141 = getelementptr inbounds i8, i8* %2140, i64 5
  store i8 %2139, i8* %2141, align 1
  br label %2416

2142:                                             ; preds = %2039
  %2143 = load i16, i16* %65, align 2
  %2144 = zext i16 %2143 to i32
  %2145 = icmp eq i32 %2144, 0
  br i1 %2145, label %2146, label %2203

2146:                                             ; preds = %2142
  %2147 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2148 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2147, i32 0, i32 74
  %2149 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2148, i32 0, i32 1
  %2150 = load i16, i16* %2149, align 2
  %2151 = zext i16 %2150 to i32
  %2152 = ashr i32 %2151, 8
  %2153 = and i32 %2152, 255
  %2154 = trunc i32 %2153 to i8
  %2155 = load i8*, i8** %15, align 8
  store i8 %2154, i8* %2155, align 1
  %2156 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2157 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2156, i32 0, i32 74
  %2158 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2157, i32 0, i32 1
  %2159 = load i16, i16* %2158, align 2
  %2160 = zext i16 %2159 to i32
  %2161 = and i32 %2160, 255
  %2162 = trunc i32 %2161 to i8
  %2163 = load i8*, i8** %15, align 8
  %2164 = getelementptr inbounds i8, i8* %2163, i64 1
  store i8 %2162, i8* %2164, align 1
  %2165 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2165, i32 0, i32 74
  %2167 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2166, i32 0, i32 2
  %2168 = load i16, i16* %2167, align 4
  %2169 = zext i16 %2168 to i32
  %2170 = ashr i32 %2169, 8
  %2171 = and i32 %2170, 255
  %2172 = trunc i32 %2171 to i8
  %2173 = load i8*, i8** %15, align 8
  %2174 = getelementptr inbounds i8, i8* %2173, i64 2
  store i8 %2172, i8* %2174, align 1
  %2175 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2175, i32 0, i32 74
  %2177 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2176, i32 0, i32 2
  %2178 = load i16, i16* %2177, align 4
  %2179 = zext i16 %2178 to i32
  %2180 = and i32 %2179, 255
  %2181 = trunc i32 %2180 to i8
  %2182 = load i8*, i8** %15, align 8
  %2183 = getelementptr inbounds i8, i8* %2182, i64 3
  store i8 %2181, i8* %2183, align 1
  %2184 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2185 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2184, i32 0, i32 74
  %2186 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2185, i32 0, i32 3
  %2187 = load i16, i16* %2186, align 2
  %2188 = zext i16 %2187 to i32
  %2189 = ashr i32 %2188, 8
  %2190 = and i32 %2189, 255
  %2191 = trunc i32 %2190 to i8
  %2192 = load i8*, i8** %15, align 8
  %2193 = getelementptr inbounds i8, i8* %2192, i64 4
  store i8 %2191, i8* %2193, align 1
  %2194 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2195 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2194, i32 0, i32 74
  %2196 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2195, i32 0, i32 3
  %2197 = load i16, i16* %2196, align 2
  %2198 = zext i16 %2197 to i32
  %2199 = and i32 %2198, 255
  %2200 = trunc i32 %2199 to i8
  %2201 = load i8*, i8** %15, align 8
  %2202 = getelementptr inbounds i8, i8* %2201, i64 5
  store i8 %2200, i8* %2202, align 1
  br label %2415

2203:                                             ; preds = %2142
  %2204 = load i16**, i16*** %12, align 8
  %2205 = load i8*, i8** %15, align 8
  %2206 = getelementptr inbounds i8, i8* %2205, i64 1
  %2207 = load i8, i8* %2206, align 1
  %2208 = zext i8 %2207 to i32
  %2209 = load i32, i32* %13, align 4
  %2210 = ashr i32 %2208, %2209
  %2211 = sext i32 %2210 to i64
  %2212 = getelementptr inbounds i16*, i16** %2204, i64 %2211
  %2213 = load i16*, i16** %2212, align 8
  %2214 = load i8*, i8** %15, align 8
  %2215 = load i8, i8* %2214, align 1
  %2216 = zext i8 %2215 to i64
  %2217 = getelementptr inbounds i16, i16* %2213, i64 %2216
  %2218 = load i16, i16* %2217, align 2
  store i16 %2218, i16* %67, align 2
  %2219 = load i16, i16* %67, align 2
  %2220 = zext i16 %2219 to i32
  %2221 = load i16, i16* %65, align 2
  %2222 = zext i16 %2221 to i32
  %2223 = mul i32 %2220, %2222
  %2224 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2225 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2224, i32 0, i32 75
  %2226 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2225, i32 0, i32 1
  %2227 = load i16, i16* %2226, align 2
  %2228 = zext i16 %2227 to i32
  %2229 = load i16, i16* %65, align 2
  %2230 = zext i16 %2229 to i32
  %2231 = sub i32 65535, %2230
  %2232 = mul i32 %2228, %2231
  %2233 = add i32 %2223, %2232
  %2234 = add i32 %2233, 32768
  store i32 %2234, i32* %69, align 4
  %2235 = load i32, i32* %69, align 4
  %2236 = load i32, i32* %69, align 4
  %2237 = lshr i32 %2236, 16
  %2238 = add i32 %2235, %2237
  %2239 = lshr i32 %2238, 16
  %2240 = and i32 65535, %2239
  %2241 = trunc i32 %2240 to i16
  store i16 %2241, i16* %68, align 2
  %2242 = load i32, i32* %14, align 4
  %2243 = icmp eq i32 %2242, 0
  br i1 %2243, label %2244, label %2260

2244:                                             ; preds = %2203
  %2245 = load i16**, i16*** %11, align 8
  %2246 = load i16, i16* %68, align 2
  %2247 = zext i16 %2246 to i32
  %2248 = and i32 %2247, 255
  %2249 = load i32, i32* %13, align 4
  %2250 = ashr i32 %2248, %2249
  %2251 = sext i32 %2250 to i64
  %2252 = getelementptr inbounds i16*, i16** %2245, i64 %2251
  %2253 = load i16*, i16** %2252, align 8
  %2254 = load i16, i16* %68, align 2
  %2255 = zext i16 %2254 to i32
  %2256 = ashr i32 %2255, 8
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds i16, i16* %2253, i64 %2257
  %2259 = load i16, i16* %2258, align 2
  store i16 %2259, i16* %68, align 2
  br label %2260

2260:                                             ; preds = %2244, %2203
  %2261 = load i16, i16* %68, align 2
  %2262 = zext i16 %2261 to i32
  %2263 = ashr i32 %2262, 8
  %2264 = and i32 %2263, 255
  %2265 = trunc i32 %2264 to i8
  %2266 = load i8*, i8** %15, align 8
  store i8 %2265, i8* %2266, align 1
  %2267 = load i16, i16* %68, align 2
  %2268 = zext i16 %2267 to i32
  %2269 = and i32 %2268, 255
  %2270 = trunc i32 %2269 to i8
  %2271 = load i8*, i8** %15, align 8
  %2272 = getelementptr inbounds i8, i8* %2271, i64 1
  store i8 %2270, i8* %2272, align 1
  %2273 = load i16**, i16*** %12, align 8
  %2274 = load i8*, i8** %15, align 8
  %2275 = getelementptr inbounds i8, i8* %2274, i64 3
  %2276 = load i8, i8* %2275, align 1
  %2277 = zext i8 %2276 to i32
  %2278 = load i32, i32* %13, align 4
  %2279 = ashr i32 %2277, %2278
  %2280 = sext i32 %2279 to i64
  %2281 = getelementptr inbounds i16*, i16** %2273, i64 %2280
  %2282 = load i16*, i16** %2281, align 8
  %2283 = load i8*, i8** %15, align 8
  %2284 = getelementptr inbounds i8, i8* %2283, i64 2
  %2285 = load i8, i8* %2284, align 1
  %2286 = zext i8 %2285 to i64
  %2287 = getelementptr inbounds i16, i16* %2282, i64 %2286
  %2288 = load i16, i16* %2287, align 2
  store i16 %2288, i16* %67, align 2
  %2289 = load i16, i16* %67, align 2
  %2290 = zext i16 %2289 to i32
  %2291 = load i16, i16* %65, align 2
  %2292 = zext i16 %2291 to i32
  %2293 = mul i32 %2290, %2292
  %2294 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2295 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2294, i32 0, i32 75
  %2296 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2295, i32 0, i32 2
  %2297 = load i16, i16* %2296, align 2
  %2298 = zext i16 %2297 to i32
  %2299 = load i16, i16* %65, align 2
  %2300 = zext i16 %2299 to i32
  %2301 = sub i32 65535, %2300
  %2302 = mul i32 %2298, %2301
  %2303 = add i32 %2293, %2302
  %2304 = add i32 %2303, 32768
  store i32 %2304, i32* %70, align 4
  %2305 = load i32, i32* %70, align 4
  %2306 = load i32, i32* %70, align 4
  %2307 = lshr i32 %2306, 16
  %2308 = add i32 %2305, %2307
  %2309 = lshr i32 %2308, 16
  %2310 = and i32 65535, %2309
  %2311 = trunc i32 %2310 to i16
  store i16 %2311, i16* %68, align 2
  %2312 = load i32, i32* %14, align 4
  %2313 = icmp eq i32 %2312, 0
  br i1 %2313, label %2314, label %2330

2314:                                             ; preds = %2260
  %2315 = load i16**, i16*** %11, align 8
  %2316 = load i16, i16* %68, align 2
  %2317 = zext i16 %2316 to i32
  %2318 = and i32 %2317, 255
  %2319 = load i32, i32* %13, align 4
  %2320 = ashr i32 %2318, %2319
  %2321 = sext i32 %2320 to i64
  %2322 = getelementptr inbounds i16*, i16** %2315, i64 %2321
  %2323 = load i16*, i16** %2322, align 8
  %2324 = load i16, i16* %68, align 2
  %2325 = zext i16 %2324 to i32
  %2326 = ashr i32 %2325, 8
  %2327 = sext i32 %2326 to i64
  %2328 = getelementptr inbounds i16, i16* %2323, i64 %2327
  %2329 = load i16, i16* %2328, align 2
  store i16 %2329, i16* %68, align 2
  br label %2330

2330:                                             ; preds = %2314, %2260
  %2331 = load i16, i16* %68, align 2
  %2332 = zext i16 %2331 to i32
  %2333 = ashr i32 %2332, 8
  %2334 = and i32 %2333, 255
  %2335 = trunc i32 %2334 to i8
  %2336 = load i8*, i8** %15, align 8
  %2337 = getelementptr inbounds i8, i8* %2336, i64 2
  store i8 %2335, i8* %2337, align 1
  %2338 = load i16, i16* %68, align 2
  %2339 = zext i16 %2338 to i32
  %2340 = and i32 %2339, 255
  %2341 = trunc i32 %2340 to i8
  %2342 = load i8*, i8** %15, align 8
  %2343 = getelementptr inbounds i8, i8* %2342, i64 3
  store i8 %2341, i8* %2343, align 1
  %2344 = load i16**, i16*** %12, align 8
  %2345 = load i8*, i8** %15, align 8
  %2346 = getelementptr inbounds i8, i8* %2345, i64 5
  %2347 = load i8, i8* %2346, align 1
  %2348 = zext i8 %2347 to i32
  %2349 = load i32, i32* %13, align 4
  %2350 = ashr i32 %2348, %2349
  %2351 = sext i32 %2350 to i64
  %2352 = getelementptr inbounds i16*, i16** %2344, i64 %2351
  %2353 = load i16*, i16** %2352, align 8
  %2354 = load i8*, i8** %15, align 8
  %2355 = getelementptr inbounds i8, i8* %2354, i64 4
  %2356 = load i8, i8* %2355, align 1
  %2357 = zext i8 %2356 to i64
  %2358 = getelementptr inbounds i16, i16* %2353, i64 %2357
  %2359 = load i16, i16* %2358, align 2
  store i16 %2359, i16* %67, align 2
  %2360 = load i16, i16* %67, align 2
  %2361 = zext i16 %2360 to i32
  %2362 = load i16, i16* %65, align 2
  %2363 = zext i16 %2362 to i32
  %2364 = mul i32 %2361, %2363
  %2365 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2366 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2365, i32 0, i32 75
  %2367 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2366, i32 0, i32 3
  %2368 = load i16, i16* %2367, align 2
  %2369 = zext i16 %2368 to i32
  %2370 = load i16, i16* %65, align 2
  %2371 = zext i16 %2370 to i32
  %2372 = sub i32 65535, %2371
  %2373 = mul i32 %2369, %2372
  %2374 = add i32 %2364, %2373
  %2375 = add i32 %2374, 32768
  store i32 %2375, i32* %71, align 4
  %2376 = load i32, i32* %71, align 4
  %2377 = load i32, i32* %71, align 4
  %2378 = lshr i32 %2377, 16
  %2379 = add i32 %2376, %2378
  %2380 = lshr i32 %2379, 16
  %2381 = and i32 65535, %2380
  %2382 = trunc i32 %2381 to i16
  store i16 %2382, i16* %68, align 2
  %2383 = load i32, i32* %14, align 4
  %2384 = icmp eq i32 %2383, 0
  br i1 %2384, label %2385, label %2401

2385:                                             ; preds = %2330
  %2386 = load i16**, i16*** %11, align 8
  %2387 = load i16, i16* %68, align 2
  %2388 = zext i16 %2387 to i32
  %2389 = and i32 %2388, 255
  %2390 = load i32, i32* %13, align 4
  %2391 = ashr i32 %2389, %2390
  %2392 = sext i32 %2391 to i64
  %2393 = getelementptr inbounds i16*, i16** %2386, i64 %2392
  %2394 = load i16*, i16** %2393, align 8
  %2395 = load i16, i16* %68, align 2
  %2396 = zext i16 %2395 to i32
  %2397 = ashr i32 %2396, 8
  %2398 = sext i32 %2397 to i64
  %2399 = getelementptr inbounds i16, i16* %2394, i64 %2398
  %2400 = load i16, i16* %2399, align 2
  store i16 %2400, i16* %68, align 2
  br label %2401

2401:                                             ; preds = %2385, %2330
  %2402 = load i16, i16* %68, align 2
  %2403 = zext i16 %2402 to i32
  %2404 = ashr i32 %2403, 8
  %2405 = and i32 %2404, 255
  %2406 = trunc i32 %2405 to i8
  %2407 = load i8*, i8** %15, align 8
  %2408 = getelementptr inbounds i8, i8* %2407, i64 4
  store i8 %2406, i8* %2408, align 1
  %2409 = load i16, i16* %68, align 2
  %2410 = zext i16 %2409 to i32
  %2411 = and i32 %2410, 255
  %2412 = trunc i32 %2411 to i8
  %2413 = load i8*, i8** %15, align 8
  %2414 = getelementptr inbounds i8, i8* %2413, i64 5
  store i8 %2412, i8* %2414, align 1
  br label %2415

2415:                                             ; preds = %2401, %2146
  br label %2416

2416:                                             ; preds = %2415, %2056
  br label %2417

2417:                                             ; preds = %2416
  %2418 = load i32, i32* %16, align 4
  %2419 = add i32 %2418, 1
  store i32 %2419, i32* %16, align 4
  %2420 = load i8*, i8** %15, align 8
  %2421 = getelementptr inbounds i8, i8* %2420, i64 8
  store i8* %2421, i8** %15, align 8
  br label %2035, !llvm.loop !190

2422:                                             ; preds = %2035
  br label %2655

2423:                                             ; preds = %2030, %2027, %2024
  %2424 = load i8*, i8** %5, align 8
  store i8* %2424, i8** %15, align 8
  store i32 0, i32* %16, align 4
  br label %2425

2425:                                             ; preds = %2649, %2423
  %2426 = load i32, i32* %16, align 4
  %2427 = load i32, i32* %17, align 4
  %2428 = icmp ult i32 %2426, %2427
  br i1 %2428, label %2429, label %2654

2429:                                             ; preds = %2425
  %2430 = load i8*, i8** %15, align 8
  %2431 = getelementptr inbounds i8, i8* %2430, i64 6
  %2432 = load i8, i8* %2431, align 1
  %2433 = zext i8 %2432 to i16
  %2434 = zext i16 %2433 to i32
  %2435 = shl i32 %2434, 8
  %2436 = load i8*, i8** %15, align 8
  %2437 = getelementptr inbounds i8, i8* %2436, i64 7
  %2438 = load i8, i8* %2437, align 1
  %2439 = zext i8 %2438 to i16
  %2440 = zext i16 %2439 to i32
  %2441 = add nsw i32 %2435, %2440
  %2442 = trunc i32 %2441 to i16
  store i16 %2442, i16* %72, align 2
  %2443 = load i16, i16* %72, align 2
  %2444 = zext i16 %2443 to i32
  %2445 = icmp eq i32 %2444, 0
  br i1 %2445, label %2446, label %2503

2446:                                             ; preds = %2429
  %2447 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2448 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2447, i32 0, i32 74
  %2449 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2448, i32 0, i32 1
  %2450 = load i16, i16* %2449, align 2
  %2451 = zext i16 %2450 to i32
  %2452 = ashr i32 %2451, 8
  %2453 = and i32 %2452, 255
  %2454 = trunc i32 %2453 to i8
  %2455 = load i8*, i8** %15, align 8
  store i8 %2454, i8* %2455, align 1
  %2456 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2457 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2456, i32 0, i32 74
  %2458 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2457, i32 0, i32 1
  %2459 = load i16, i16* %2458, align 2
  %2460 = zext i16 %2459 to i32
  %2461 = and i32 %2460, 255
  %2462 = trunc i32 %2461 to i8
  %2463 = load i8*, i8** %15, align 8
  %2464 = getelementptr inbounds i8, i8* %2463, i64 1
  store i8 %2462, i8* %2464, align 1
  %2465 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2466 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2465, i32 0, i32 74
  %2467 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2466, i32 0, i32 2
  %2468 = load i16, i16* %2467, align 4
  %2469 = zext i16 %2468 to i32
  %2470 = ashr i32 %2469, 8
  %2471 = and i32 %2470, 255
  %2472 = trunc i32 %2471 to i8
  %2473 = load i8*, i8** %15, align 8
  %2474 = getelementptr inbounds i8, i8* %2473, i64 2
  store i8 %2472, i8* %2474, align 1
  %2475 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2476 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2475, i32 0, i32 74
  %2477 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2476, i32 0, i32 2
  %2478 = load i16, i16* %2477, align 4
  %2479 = zext i16 %2478 to i32
  %2480 = and i32 %2479, 255
  %2481 = trunc i32 %2480 to i8
  %2482 = load i8*, i8** %15, align 8
  %2483 = getelementptr inbounds i8, i8* %2482, i64 3
  store i8 %2481, i8* %2483, align 1
  %2484 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2485 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2484, i32 0, i32 74
  %2486 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2485, i32 0, i32 3
  %2487 = load i16, i16* %2486, align 2
  %2488 = zext i16 %2487 to i32
  %2489 = ashr i32 %2488, 8
  %2490 = and i32 %2489, 255
  %2491 = trunc i32 %2490 to i8
  %2492 = load i8*, i8** %15, align 8
  %2493 = getelementptr inbounds i8, i8* %2492, i64 4
  store i8 %2491, i8* %2493, align 1
  %2494 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2495 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2494, i32 0, i32 74
  %2496 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2495, i32 0, i32 3
  %2497 = load i16, i16* %2496, align 2
  %2498 = zext i16 %2497 to i32
  %2499 = and i32 %2498, 255
  %2500 = trunc i32 %2499 to i8
  %2501 = load i8*, i8** %15, align 8
  %2502 = getelementptr inbounds i8, i8* %2501, i64 5
  store i8 %2500, i8* %2502, align 1
  br label %2648

2503:                                             ; preds = %2429
  %2504 = load i16, i16* %72, align 2
  %2505 = zext i16 %2504 to i32
  %2506 = icmp slt i32 %2505, 65535
  br i1 %2506, label %2507, label %2647

2507:                                             ; preds = %2503
  %2508 = load i8*, i8** %15, align 8
  %2509 = load i8, i8* %2508, align 1
  %2510 = zext i8 %2509 to i32
  %2511 = shl i32 %2510, 8
  %2512 = load i8*, i8** %15, align 8
  %2513 = getelementptr inbounds i8, i8* %2512, i64 1
  %2514 = load i8, i8* %2513, align 1
  %2515 = zext i8 %2514 to i32
  %2516 = add nsw i32 %2511, %2515
  %2517 = trunc i32 %2516 to i16
  store i16 %2517, i16* %74, align 2
  %2518 = load i8*, i8** %15, align 8
  %2519 = getelementptr inbounds i8, i8* %2518, i64 2
  %2520 = load i8, i8* %2519, align 1
  %2521 = zext i8 %2520 to i32
  %2522 = shl i32 %2521, 8
  %2523 = load i8*, i8** %15, align 8
  %2524 = getelementptr inbounds i8, i8* %2523, i64 3
  %2525 = load i8, i8* %2524, align 1
  %2526 = zext i8 %2525 to i32
  %2527 = add nsw i32 %2522, %2526
  %2528 = trunc i32 %2527 to i16
  store i16 %2528, i16* %75, align 2
  %2529 = load i8*, i8** %15, align 8
  %2530 = getelementptr inbounds i8, i8* %2529, i64 4
  %2531 = load i8, i8* %2530, align 1
  %2532 = zext i8 %2531 to i32
  %2533 = shl i32 %2532, 8
  %2534 = load i8*, i8** %15, align 8
  %2535 = getelementptr inbounds i8, i8* %2534, i64 5
  %2536 = load i8, i8* %2535, align 1
  %2537 = zext i8 %2536 to i32
  %2538 = add nsw i32 %2533, %2537
  %2539 = trunc i32 %2538 to i16
  store i16 %2539, i16* %76, align 2
  %2540 = load i16, i16* %74, align 2
  %2541 = zext i16 %2540 to i32
  %2542 = load i16, i16* %72, align 2
  %2543 = zext i16 %2542 to i32
  %2544 = mul i32 %2541, %2543
  %2545 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2546 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2545, i32 0, i32 74
  %2547 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2546, i32 0, i32 1
  %2548 = load i16, i16* %2547, align 2
  %2549 = zext i16 %2548 to i32
  %2550 = load i16, i16* %72, align 2
  %2551 = zext i16 %2550 to i32
  %2552 = sub i32 65535, %2551
  %2553 = mul i32 %2549, %2552
  %2554 = add i32 %2544, %2553
  %2555 = add i32 %2554, 32768
  store i32 %2555, i32* %77, align 4
  %2556 = load i32, i32* %77, align 4
  %2557 = load i32, i32* %77, align 4
  %2558 = lshr i32 %2557, 16
  %2559 = add i32 %2556, %2558
  %2560 = lshr i32 %2559, 16
  %2561 = and i32 65535, %2560
  %2562 = trunc i32 %2561 to i16
  store i16 %2562, i16* %73, align 2
  %2563 = load i16, i16* %73, align 2
  %2564 = zext i16 %2563 to i32
  %2565 = ashr i32 %2564, 8
  %2566 = and i32 %2565, 255
  %2567 = trunc i32 %2566 to i8
  %2568 = load i8*, i8** %15, align 8
  store i8 %2567, i8* %2568, align 1
  %2569 = load i16, i16* %73, align 2
  %2570 = zext i16 %2569 to i32
  %2571 = and i32 %2570, 255
  %2572 = trunc i32 %2571 to i8
  %2573 = load i8*, i8** %15, align 8
  %2574 = getelementptr inbounds i8, i8* %2573, i64 1
  store i8 %2572, i8* %2574, align 1
  %2575 = load i16, i16* %75, align 2
  %2576 = zext i16 %2575 to i32
  %2577 = load i16, i16* %72, align 2
  %2578 = zext i16 %2577 to i32
  %2579 = mul i32 %2576, %2578
  %2580 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2581 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2580, i32 0, i32 74
  %2582 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2581, i32 0, i32 2
  %2583 = load i16, i16* %2582, align 4
  %2584 = zext i16 %2583 to i32
  %2585 = load i16, i16* %72, align 2
  %2586 = zext i16 %2585 to i32
  %2587 = sub i32 65535, %2586
  %2588 = mul i32 %2584, %2587
  %2589 = add i32 %2579, %2588
  %2590 = add i32 %2589, 32768
  store i32 %2590, i32* %78, align 4
  %2591 = load i32, i32* %78, align 4
  %2592 = load i32, i32* %78, align 4
  %2593 = lshr i32 %2592, 16
  %2594 = add i32 %2591, %2593
  %2595 = lshr i32 %2594, 16
  %2596 = and i32 65535, %2595
  %2597 = trunc i32 %2596 to i16
  store i16 %2597, i16* %73, align 2
  %2598 = load i16, i16* %73, align 2
  %2599 = zext i16 %2598 to i32
  %2600 = ashr i32 %2599, 8
  %2601 = and i32 %2600, 255
  %2602 = trunc i32 %2601 to i8
  %2603 = load i8*, i8** %15, align 8
  %2604 = getelementptr inbounds i8, i8* %2603, i64 2
  store i8 %2602, i8* %2604, align 1
  %2605 = load i16, i16* %73, align 2
  %2606 = zext i16 %2605 to i32
  %2607 = and i32 %2606, 255
  %2608 = trunc i32 %2607 to i8
  %2609 = load i8*, i8** %15, align 8
  %2610 = getelementptr inbounds i8, i8* %2609, i64 3
  store i8 %2608, i8* %2610, align 1
  %2611 = load i16, i16* %76, align 2
  %2612 = zext i16 %2611 to i32
  %2613 = load i16, i16* %72, align 2
  %2614 = zext i16 %2613 to i32
  %2615 = mul i32 %2612, %2614
  %2616 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %2617 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2616, i32 0, i32 74
  %2618 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2617, i32 0, i32 3
  %2619 = load i16, i16* %2618, align 2
  %2620 = zext i16 %2619 to i32
  %2621 = load i16, i16* %72, align 2
  %2622 = zext i16 %2621 to i32
  %2623 = sub i32 65535, %2622
  %2624 = mul i32 %2620, %2623
  %2625 = add i32 %2615, %2624
  %2626 = add i32 %2625, 32768
  store i32 %2626, i32* %79, align 4
  %2627 = load i32, i32* %79, align 4
  %2628 = load i32, i32* %79, align 4
  %2629 = lshr i32 %2628, 16
  %2630 = add i32 %2627, %2629
  %2631 = lshr i32 %2630, 16
  %2632 = and i32 65535, %2631
  %2633 = trunc i32 %2632 to i16
  store i16 %2633, i16* %73, align 2
  %2634 = load i16, i16* %73, align 2
  %2635 = zext i16 %2634 to i32
  %2636 = ashr i32 %2635, 8
  %2637 = and i32 %2636, 255
  %2638 = trunc i32 %2637 to i8
  %2639 = load i8*, i8** %15, align 8
  %2640 = getelementptr inbounds i8, i8* %2639, i64 4
  store i8 %2638, i8* %2640, align 1
  %2641 = load i16, i16* %73, align 2
  %2642 = zext i16 %2641 to i32
  %2643 = and i32 %2642, 255
  %2644 = trunc i32 %2643 to i8
  %2645 = load i8*, i8** %15, align 8
  %2646 = getelementptr inbounds i8, i8* %2645, i64 5
  store i8 %2644, i8* %2646, align 1
  br label %2647

2647:                                             ; preds = %2507, %2503
  br label %2648

2648:                                             ; preds = %2647, %2446
  br label %2649

2649:                                             ; preds = %2648
  %2650 = load i32, i32* %16, align 4
  %2651 = add i32 %2650, 1
  store i32 %2651, i32* %16, align 4
  %2652 = load i8*, i8** %15, align 8
  %2653 = getelementptr inbounds i8, i8* %2652, i64 8
  store i8* %2653, i8** %15, align 8
  br label %2425, !llvm.loop !191

2654:                                             ; preds = %2425
  br label %2655

2655:                                             ; preds = %2654, %2422
  br label %2656

2656:                                             ; preds = %2655, %2023
  br label %2658

2657:                                             ; preds = %3
  br label %2658

2658:                                             ; preds = %2657, %2656, %1636, %1205, %688
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_gamma(%struct.png_row_info_struct* noundef %0, i8* noundef %1, %struct.png_struct_def* noalias noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i16, align 2
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.png_struct_def* %2, %struct.png_struct_def** %6, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 81
  %25 = load i8*, i8** %24, align 8
  store i8* %25, i8** %7, align 8
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 82
  %28 = load i16**, i16*** %27, align 8
  store i16** %28, i16*** %8, align 8
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 79
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %9, align 4
  %32 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %33 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %12, align 4
  %35 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %36 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %35, i32 0, i32 3
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp sle i32 %38, 8
  br i1 %39, label %40, label %43

40:                                               ; preds = %3
  %41 = load i8*, i8** %7, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %52, label %43

43:                                               ; preds = %40, %3
  %44 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %44, i32 0, i32 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, 16
  br i1 %48, label %49, label %645

49:                                               ; preds = %43
  %50 = load i16**, i16*** %8, align 8
  %51 = icmp ne i16** %50, null
  br i1 %51, label %52, label %645

52:                                               ; preds = %49, %40
  %53 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %54 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %53, i32 0, i32 2
  %55 = load i8, i8* %54, align 8
  %56 = zext i8 %55 to i32
  switch i32 %56, label %643 [
    i32 2, label %57
    i32 6, label %200
    i32 4, label %345
    i32 0, label %412
  ]

57:                                               ; preds = %52
  %58 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %59 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %58, i32 0, i32 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i32 %61, 8
  br i1 %62, label %63, label %101

63:                                               ; preds = %57
  %64 = load i8*, i8** %5, align 8
  store i8* %64, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %65

65:                                               ; preds = %97, %63
  %66 = load i32, i32* %11, align 4
  %67 = load i32, i32* %12, align 4
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %100

69:                                               ; preds = %65
  %70 = load i8*, i8** %7, align 8
  %71 = load i8*, i8** %10, align 8
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = load i8*, i8** %10, align 8
  store i8 %75, i8* %76, align 1
  %77 = load i8*, i8** %10, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %10, align 8
  %79 = load i8*, i8** %7, align 8
  %80 = load i8*, i8** %10, align 8
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = getelementptr inbounds i8, i8* %79, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = load i8*, i8** %10, align 8
  store i8 %84, i8* %85, align 1
  %86 = load i8*, i8** %10, align 8
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %10, align 8
  %88 = load i8*, i8** %7, align 8
  %89 = load i8*, i8** %10, align 8
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds i8, i8* %88, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = load i8*, i8** %10, align 8
  store i8 %93, i8* %94, align 1
  %95 = load i8*, i8** %10, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %10, align 8
  br label %97

97:                                               ; preds = %69
  %98 = load i32, i32* %11, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %11, align 4
  br label %65, !llvm.loop !192

100:                                              ; preds = %65
  br label %199

101:                                              ; preds = %57
  %102 = load i8*, i8** %5, align 8
  store i8* %102, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %103

103:                                              ; preds = %195, %101
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %12, align 4
  %106 = icmp ult i32 %104, %105
  br i1 %106, label %107, label %198

107:                                              ; preds = %103
  %108 = load i16**, i16*** %8, align 8
  %109 = load i8*, i8** %10, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = load i32, i32* %9, align 4
  %114 = ashr i32 %112, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i16*, i16** %108, i64 %115
  %117 = load i16*, i16** %116, align 8
  %118 = load i8*, i8** %10, align 8
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds i16, i16* %117, i64 %120
  %122 = load i16, i16* %121, align 2
  store i16 %122, i16* %13, align 2
  %123 = load i16, i16* %13, align 2
  %124 = zext i16 %123 to i32
  %125 = ashr i32 %124, 8
  %126 = and i32 %125, 255
  %127 = trunc i32 %126 to i8
  %128 = load i8*, i8** %10, align 8
  store i8 %127, i8* %128, align 1
  %129 = load i16, i16* %13, align 2
  %130 = zext i16 %129 to i32
  %131 = and i32 %130, 255
  %132 = trunc i32 %131 to i8
  %133 = load i8*, i8** %10, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 1
  store i8 %132, i8* %134, align 1
  %135 = load i8*, i8** %10, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 2
  store i8* %136, i8** %10, align 8
  %137 = load i16**, i16*** %8, align 8
  %138 = load i8*, i8** %10, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 1
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = load i32, i32* %9, align 4
  %143 = ashr i32 %141, %142
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i16*, i16** %137, i64 %144
  %146 = load i16*, i16** %145, align 8
  %147 = load i8*, i8** %10, align 8
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  %150 = getelementptr inbounds i16, i16* %146, i64 %149
  %151 = load i16, i16* %150, align 2
  store i16 %151, i16* %13, align 2
  %152 = load i16, i16* %13, align 2
  %153 = zext i16 %152 to i32
  %154 = ashr i32 %153, 8
  %155 = and i32 %154, 255
  %156 = trunc i32 %155 to i8
  %157 = load i8*, i8** %10, align 8
  store i8 %156, i8* %157, align 1
  %158 = load i16, i16* %13, align 2
  %159 = zext i16 %158 to i32
  %160 = and i32 %159, 255
  %161 = trunc i32 %160 to i8
  %162 = load i8*, i8** %10, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 1
  store i8 %161, i8* %163, align 1
  %164 = load i8*, i8** %10, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 2
  store i8* %165, i8** %10, align 8
  %166 = load i16**, i16*** %8, align 8
  %167 = load i8*, i8** %10, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = load i32, i32* %9, align 4
  %172 = ashr i32 %170, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i16*, i16** %166, i64 %173
  %175 = load i16*, i16** %174, align 8
  %176 = load i8*, i8** %10, align 8
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds i16, i16* %175, i64 %178
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %13, align 2
  %181 = load i16, i16* %13, align 2
  %182 = zext i16 %181 to i32
  %183 = ashr i32 %182, 8
  %184 = and i32 %183, 255
  %185 = trunc i32 %184 to i8
  %186 = load i8*, i8** %10, align 8
  store i8 %185, i8* %186, align 1
  %187 = load i16, i16* %13, align 2
  %188 = zext i16 %187 to i32
  %189 = and i32 %188, 255
  %190 = trunc i32 %189 to i8
  %191 = load i8*, i8** %10, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 1
  store i8 %190, i8* %192, align 1
  %193 = load i8*, i8** %10, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 2
  store i8* %194, i8** %10, align 8
  br label %195

195:                                              ; preds = %107
  %196 = load i32, i32* %11, align 4
  %197 = add i32 %196, 1
  store i32 %197, i32* %11, align 4
  br label %103, !llvm.loop !193

198:                                              ; preds = %103
  br label %199

199:                                              ; preds = %198, %100
  br label %644

200:                                              ; preds = %52
  %201 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %202 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %201, i32 0, i32 3
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = icmp eq i32 %204, 8
  br i1 %205, label %206, label %246

206:                                              ; preds = %200
  %207 = load i8*, i8** %5, align 8
  store i8* %207, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %208

208:                                              ; preds = %242, %206
  %209 = load i32, i32* %11, align 4
  %210 = load i32, i32* %12, align 4
  %211 = icmp ult i32 %209, %210
  br i1 %211, label %212, label %245

212:                                              ; preds = %208
  %213 = load i8*, i8** %7, align 8
  %214 = load i8*, i8** %10, align 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds i8, i8* %213, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = load i8*, i8** %10, align 8
  store i8 %218, i8* %219, align 1
  %220 = load i8*, i8** %10, align 8
  %221 = getelementptr inbounds i8, i8* %220, i32 1
  store i8* %221, i8** %10, align 8
  %222 = load i8*, i8** %7, align 8
  %223 = load i8*, i8** %10, align 8
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds i8, i8* %222, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = load i8*, i8** %10, align 8
  store i8 %227, i8* %228, align 1
  %229 = load i8*, i8** %10, align 8
  %230 = getelementptr inbounds i8, i8* %229, i32 1
  store i8* %230, i8** %10, align 8
  %231 = load i8*, i8** %7, align 8
  %232 = load i8*, i8** %10, align 8
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds i8, i8* %231, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = load i8*, i8** %10, align 8
  store i8 %236, i8* %237, align 1
  %238 = load i8*, i8** %10, align 8
  %239 = getelementptr inbounds i8, i8* %238, i32 1
  store i8* %239, i8** %10, align 8
  %240 = load i8*, i8** %10, align 8
  %241 = getelementptr inbounds i8, i8* %240, i32 1
  store i8* %241, i8** %10, align 8
  br label %242

242:                                              ; preds = %212
  %243 = load i32, i32* %11, align 4
  %244 = add i32 %243, 1
  store i32 %244, i32* %11, align 4
  br label %208, !llvm.loop !194

245:                                              ; preds = %208
  br label %344

246:                                              ; preds = %200
  %247 = load i8*, i8** %5, align 8
  store i8* %247, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %248

248:                                              ; preds = %340, %246
  %249 = load i32, i32* %11, align 4
  %250 = load i32, i32* %12, align 4
  %251 = icmp ult i32 %249, %250
  br i1 %251, label %252, label %343

252:                                              ; preds = %248
  %253 = load i16**, i16*** %8, align 8
  %254 = load i8*, i8** %10, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 1
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = load i32, i32* %9, align 4
  %259 = ashr i32 %257, %258
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i16*, i16** %253, i64 %260
  %262 = load i16*, i16** %261, align 8
  %263 = load i8*, i8** %10, align 8
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i64
  %266 = getelementptr inbounds i16, i16* %262, i64 %265
  %267 = load i16, i16* %266, align 2
  store i16 %267, i16* %14, align 2
  %268 = load i16, i16* %14, align 2
  %269 = zext i16 %268 to i32
  %270 = ashr i32 %269, 8
  %271 = and i32 %270, 255
  %272 = trunc i32 %271 to i8
  %273 = load i8*, i8** %10, align 8
  store i8 %272, i8* %273, align 1
  %274 = load i16, i16* %14, align 2
  %275 = zext i16 %274 to i32
  %276 = and i32 %275, 255
  %277 = trunc i32 %276 to i8
  %278 = load i8*, i8** %10, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 1
  store i8 %277, i8* %279, align 1
  %280 = load i8*, i8** %10, align 8
  %281 = getelementptr inbounds i8, i8* %280, i64 2
  store i8* %281, i8** %10, align 8
  %282 = load i16**, i16*** %8, align 8
  %283 = load i8*, i8** %10, align 8
  %284 = getelementptr inbounds i8, i8* %283, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i32
  %287 = load i32, i32* %9, align 4
  %288 = ashr i32 %286, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i16*, i16** %282, i64 %289
  %291 = load i16*, i16** %290, align 8
  %292 = load i8*, i8** %10, align 8
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i64
  %295 = getelementptr inbounds i16, i16* %291, i64 %294
  %296 = load i16, i16* %295, align 2
  store i16 %296, i16* %14, align 2
  %297 = load i16, i16* %14, align 2
  %298 = zext i16 %297 to i32
  %299 = ashr i32 %298, 8
  %300 = and i32 %299, 255
  %301 = trunc i32 %300 to i8
  %302 = load i8*, i8** %10, align 8
  store i8 %301, i8* %302, align 1
  %303 = load i16, i16* %14, align 2
  %304 = zext i16 %303 to i32
  %305 = and i32 %304, 255
  %306 = trunc i32 %305 to i8
  %307 = load i8*, i8** %10, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 1
  store i8 %306, i8* %308, align 1
  %309 = load i8*, i8** %10, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 2
  store i8* %310, i8** %10, align 8
  %311 = load i16**, i16*** %8, align 8
  %312 = load i8*, i8** %10, align 8
  %313 = getelementptr inbounds i8, i8* %312, i64 1
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = load i32, i32* %9, align 4
  %317 = ashr i32 %315, %316
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i16*, i16** %311, i64 %318
  %320 = load i16*, i16** %319, align 8
  %321 = load i8*, i8** %10, align 8
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i64
  %324 = getelementptr inbounds i16, i16* %320, i64 %323
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %14, align 2
  %326 = load i16, i16* %14, align 2
  %327 = zext i16 %326 to i32
  %328 = ashr i32 %327, 8
  %329 = and i32 %328, 255
  %330 = trunc i32 %329 to i8
  %331 = load i8*, i8** %10, align 8
  store i8 %330, i8* %331, align 1
  %332 = load i16, i16* %14, align 2
  %333 = zext i16 %332 to i32
  %334 = and i32 %333, 255
  %335 = trunc i32 %334 to i8
  %336 = load i8*, i8** %10, align 8
  %337 = getelementptr inbounds i8, i8* %336, i64 1
  store i8 %335, i8* %337, align 1
  %338 = load i8*, i8** %10, align 8
  %339 = getelementptr inbounds i8, i8* %338, i64 4
  store i8* %339, i8** %10, align 8
  br label %340

340:                                              ; preds = %252
  %341 = load i32, i32* %11, align 4
  %342 = add i32 %341, 1
  store i32 %342, i32* %11, align 4
  br label %248, !llvm.loop !195

343:                                              ; preds = %248
  br label %344

344:                                              ; preds = %343, %245
  br label %644

345:                                              ; preds = %52
  %346 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %347 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %346, i32 0, i32 3
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i32
  %350 = icmp eq i32 %349, 8
  br i1 %350, label %351, label %371

351:                                              ; preds = %345
  %352 = load i8*, i8** %5, align 8
  store i8* %352, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %353

353:                                              ; preds = %367, %351
  %354 = load i32, i32* %11, align 4
  %355 = load i32, i32* %12, align 4
  %356 = icmp ult i32 %354, %355
  br i1 %356, label %357, label %370

357:                                              ; preds = %353
  %358 = load i8*, i8** %7, align 8
  %359 = load i8*, i8** %10, align 8
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i64
  %362 = getelementptr inbounds i8, i8* %358, i64 %361
  %363 = load i8, i8* %362, align 1
  %364 = load i8*, i8** %10, align 8
  store i8 %363, i8* %364, align 1
  %365 = load i8*, i8** %10, align 8
  %366 = getelementptr inbounds i8, i8* %365, i64 2
  store i8* %366, i8** %10, align 8
  br label %367

367:                                              ; preds = %357
  %368 = load i32, i32* %11, align 4
  %369 = add i32 %368, 1
  store i32 %369, i32* %11, align 4
  br label %353, !llvm.loop !196

370:                                              ; preds = %353
  br label %411

371:                                              ; preds = %345
  %372 = load i8*, i8** %5, align 8
  store i8* %372, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %373

373:                                              ; preds = %407, %371
  %374 = load i32, i32* %11, align 4
  %375 = load i32, i32* %12, align 4
  %376 = icmp ult i32 %374, %375
  br i1 %376, label %377, label %410

377:                                              ; preds = %373
  %378 = load i16**, i16*** %8, align 8
  %379 = load i8*, i8** %10, align 8
  %380 = getelementptr inbounds i8, i8* %379, i64 1
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i32
  %383 = load i32, i32* %9, align 4
  %384 = ashr i32 %382, %383
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i16*, i16** %378, i64 %385
  %387 = load i16*, i16** %386, align 8
  %388 = load i8*, i8** %10, align 8
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i64
  %391 = getelementptr inbounds i16, i16* %387, i64 %390
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %15, align 2
  %393 = load i16, i16* %15, align 2
  %394 = zext i16 %393 to i32
  %395 = ashr i32 %394, 8
  %396 = and i32 %395, 255
  %397 = trunc i32 %396 to i8
  %398 = load i8*, i8** %10, align 8
  store i8 %397, i8* %398, align 1
  %399 = load i16, i16* %15, align 2
  %400 = zext i16 %399 to i32
  %401 = and i32 %400, 255
  %402 = trunc i32 %401 to i8
  %403 = load i8*, i8** %10, align 8
  %404 = getelementptr inbounds i8, i8* %403, i64 1
  store i8 %402, i8* %404, align 1
  %405 = load i8*, i8** %10, align 8
  %406 = getelementptr inbounds i8, i8* %405, i64 4
  store i8* %406, i8** %10, align 8
  br label %407

407:                                              ; preds = %377
  %408 = load i32, i32* %11, align 4
  %409 = add i32 %408, 1
  store i32 %409, i32* %11, align 4
  br label %373, !llvm.loop !197

410:                                              ; preds = %373
  br label %411

411:                                              ; preds = %410, %370
  br label %644

412:                                              ; preds = %52
  %413 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %414 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %413, i32 0, i32 3
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = icmp eq i32 %416, 2
  br i1 %417, label %418, label %518

418:                                              ; preds = %412
  %419 = load i8*, i8** %5, align 8
  store i8* %419, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %420

420:                                              ; preds = %514, %418
  %421 = load i32, i32* %11, align 4
  %422 = load i32, i32* %12, align 4
  %423 = icmp ult i32 %421, %422
  br i1 %423, label %424, label %517

424:                                              ; preds = %420
  %425 = load i8*, i8** %10, align 8
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i32
  %428 = and i32 %427, 192
  store i32 %428, i32* %16, align 4
  %429 = load i8*, i8** %10, align 8
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i32
  %432 = and i32 %431, 48
  store i32 %432, i32* %17, align 4
  %433 = load i8*, i8** %10, align 8
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = and i32 %435, 12
  store i32 %436, i32* %18, align 4
  %437 = load i8*, i8** %10, align 8
  %438 = load i8, i8* %437, align 1
  %439 = zext i8 %438 to i32
  %440 = and i32 %439, 3
  store i32 %440, i32* %19, align 4
  %441 = load i8*, i8** %7, align 8
  %442 = load i32, i32* %16, align 4
  %443 = load i32, i32* %16, align 4
  %444 = ashr i32 %443, 2
  %445 = or i32 %442, %444
  %446 = load i32, i32* %16, align 4
  %447 = ashr i32 %446, 4
  %448 = or i32 %445, %447
  %449 = load i32, i32* %16, align 4
  %450 = ashr i32 %449, 6
  %451 = or i32 %448, %450
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i8, i8* %441, i64 %452
  %454 = load i8, i8* %453, align 1
  %455 = zext i8 %454 to i32
  %456 = and i32 %455, 192
  %457 = load i8*, i8** %7, align 8
  %458 = load i32, i32* %17, align 4
  %459 = shl i32 %458, 2
  %460 = load i32, i32* %17, align 4
  %461 = or i32 %459, %460
  %462 = load i32, i32* %17, align 4
  %463 = ashr i32 %462, 2
  %464 = or i32 %461, %463
  %465 = load i32, i32* %17, align 4
  %466 = ashr i32 %465, 4
  %467 = or i32 %464, %466
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i8, i8* %457, i64 %468
  %470 = load i8, i8* %469, align 1
  %471 = zext i8 %470 to i32
  %472 = ashr i32 %471, 2
  %473 = and i32 %472, 48
  %474 = or i32 %456, %473
  %475 = load i8*, i8** %7, align 8
  %476 = load i32, i32* %18, align 4
  %477 = shl i32 %476, 4
  %478 = load i32, i32* %18, align 4
  %479 = shl i32 %478, 2
  %480 = or i32 %477, %479
  %481 = load i32, i32* %18, align 4
  %482 = or i32 %480, %481
  %483 = load i32, i32* %18, align 4
  %484 = ashr i32 %483, 2
  %485 = or i32 %482, %484
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds i8, i8* %475, i64 %486
  %488 = load i8, i8* %487, align 1
  %489 = zext i8 %488 to i32
  %490 = ashr i32 %489, 4
  %491 = and i32 %490, 12
  %492 = or i32 %474, %491
  %493 = load i8*, i8** %7, align 8
  %494 = load i32, i32* %19, align 4
  %495 = shl i32 %494, 6
  %496 = load i32, i32* %19, align 4
  %497 = shl i32 %496, 4
  %498 = or i32 %495, %497
  %499 = load i32, i32* %19, align 4
  %500 = shl i32 %499, 2
  %501 = or i32 %498, %500
  %502 = load i32, i32* %19, align 4
  %503 = or i32 %501, %502
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds i8, i8* %493, i64 %504
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i32
  %508 = ashr i32 %507, 6
  %509 = or i32 %492, %508
  %510 = trunc i32 %509 to i8
  %511 = load i8*, i8** %10, align 8
  store i8 %510, i8* %511, align 1
  %512 = load i8*, i8** %10, align 8
  %513 = getelementptr inbounds i8, i8* %512, i32 1
  store i8* %513, i8** %10, align 8
  br label %514

514:                                              ; preds = %424
  %515 = load i32, i32* %11, align 4
  %516 = add i32 %515, 4
  store i32 %516, i32* %11, align 4
  br label %420, !llvm.loop !198

517:                                              ; preds = %420
  br label %518

518:                                              ; preds = %517, %412
  %519 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %520 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %519, i32 0, i32 3
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = icmp eq i32 %522, 4
  br i1 %523, label %524, label %568

524:                                              ; preds = %518
  %525 = load i8*, i8** %5, align 8
  store i8* %525, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %526

526:                                              ; preds = %564, %524
  %527 = load i32, i32* %11, align 4
  %528 = load i32, i32* %12, align 4
  %529 = icmp ult i32 %527, %528
  br i1 %529, label %530, label %567

530:                                              ; preds = %526
  %531 = load i8*, i8** %10, align 8
  %532 = load i8, i8* %531, align 1
  %533 = zext i8 %532 to i32
  %534 = and i32 %533, 240
  store i32 %534, i32* %20, align 4
  %535 = load i8*, i8** %10, align 8
  %536 = load i8, i8* %535, align 1
  %537 = zext i8 %536 to i32
  %538 = and i32 %537, 15
  store i32 %538, i32* %21, align 4
  %539 = load i8*, i8** %7, align 8
  %540 = load i32, i32* %20, align 4
  %541 = load i32, i32* %20, align 4
  %542 = ashr i32 %541, 4
  %543 = or i32 %540, %542
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds i8, i8* %539, i64 %544
  %546 = load i8, i8* %545, align 1
  %547 = zext i8 %546 to i32
  %548 = and i32 %547, 240
  %549 = load i8*, i8** %7, align 8
  %550 = load i32, i32* %21, align 4
  %551 = shl i32 %550, 4
  %552 = load i32, i32* %21, align 4
  %553 = or i32 %551, %552
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds i8, i8* %549, i64 %554
  %556 = load i8, i8* %555, align 1
  %557 = zext i8 %556 to i32
  %558 = ashr i32 %557, 4
  %559 = or i32 %548, %558
  %560 = trunc i32 %559 to i8
  %561 = load i8*, i8** %10, align 8
  store i8 %560, i8* %561, align 1
  %562 = load i8*, i8** %10, align 8
  %563 = getelementptr inbounds i8, i8* %562, i32 1
  store i8* %563, i8** %10, align 8
  br label %564

564:                                              ; preds = %530
  %565 = load i32, i32* %11, align 4
  %566 = add i32 %565, 2
  store i32 %566, i32* %11, align 4
  br label %526, !llvm.loop !199

567:                                              ; preds = %526
  br label %642

568:                                              ; preds = %518
  %569 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %570 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %569, i32 0, i32 3
  %571 = load i8, i8* %570, align 1
  %572 = zext i8 %571 to i32
  %573 = icmp eq i32 %572, 8
  br i1 %573, label %574, label %594

574:                                              ; preds = %568
  %575 = load i8*, i8** %5, align 8
  store i8* %575, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %576

576:                                              ; preds = %590, %574
  %577 = load i32, i32* %11, align 4
  %578 = load i32, i32* %12, align 4
  %579 = icmp ult i32 %577, %578
  br i1 %579, label %580, label %593

580:                                              ; preds = %576
  %581 = load i8*, i8** %7, align 8
  %582 = load i8*, i8** %10, align 8
  %583 = load i8, i8* %582, align 1
  %584 = zext i8 %583 to i64
  %585 = getelementptr inbounds i8, i8* %581, i64 %584
  %586 = load i8, i8* %585, align 1
  %587 = load i8*, i8** %10, align 8
  store i8 %586, i8* %587, align 1
  %588 = load i8*, i8** %10, align 8
  %589 = getelementptr inbounds i8, i8* %588, i32 1
  store i8* %589, i8** %10, align 8
  br label %590

590:                                              ; preds = %580
  %591 = load i32, i32* %11, align 4
  %592 = add i32 %591, 1
  store i32 %592, i32* %11, align 4
  br label %576, !llvm.loop !200

593:                                              ; preds = %576
  br label %641

594:                                              ; preds = %568
  %595 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %596 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %595, i32 0, i32 3
  %597 = load i8, i8* %596, align 1
  %598 = zext i8 %597 to i32
  %599 = icmp eq i32 %598, 16
  br i1 %599, label %600, label %640

600:                                              ; preds = %594
  %601 = load i8*, i8** %5, align 8
  store i8* %601, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %602

602:                                              ; preds = %636, %600
  %603 = load i32, i32* %11, align 4
  %604 = load i32, i32* %12, align 4
  %605 = icmp ult i32 %603, %604
  br i1 %605, label %606, label %639

606:                                              ; preds = %602
  %607 = load i16**, i16*** %8, align 8
  %608 = load i8*, i8** %10, align 8
  %609 = getelementptr inbounds i8, i8* %608, i64 1
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i32
  %612 = load i32, i32* %9, align 4
  %613 = ashr i32 %611, %612
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds i16*, i16** %607, i64 %614
  %616 = load i16*, i16** %615, align 8
  %617 = load i8*, i8** %10, align 8
  %618 = load i8, i8* %617, align 1
  %619 = zext i8 %618 to i64
  %620 = getelementptr inbounds i16, i16* %616, i64 %619
  %621 = load i16, i16* %620, align 2
  store i16 %621, i16* %22, align 2
  %622 = load i16, i16* %22, align 2
  %623 = zext i16 %622 to i32
  %624 = ashr i32 %623, 8
  %625 = and i32 %624, 255
  %626 = trunc i32 %625 to i8
  %627 = load i8*, i8** %10, align 8
  store i8 %626, i8* %627, align 1
  %628 = load i16, i16* %22, align 2
  %629 = zext i16 %628 to i32
  %630 = and i32 %629, 255
  %631 = trunc i32 %630 to i8
  %632 = load i8*, i8** %10, align 8
  %633 = getelementptr inbounds i8, i8* %632, i64 1
  store i8 %631, i8* %633, align 1
  %634 = load i8*, i8** %10, align 8
  %635 = getelementptr inbounds i8, i8* %634, i64 2
  store i8* %635, i8** %10, align 8
  br label %636

636:                                              ; preds = %606
  %637 = load i32, i32* %11, align 4
  %638 = add i32 %637, 1
  store i32 %638, i32* %11, align 4
  br label %602, !llvm.loop !201

639:                                              ; preds = %602
  br label %640

640:                                              ; preds = %639, %594
  br label %641

641:                                              ; preds = %640, %593
  br label %642

642:                                              ; preds = %641, %567
  br label %644

643:                                              ; preds = %52
  br label %644

644:                                              ; preds = %643, %642, %411, %344, %199
  br label %645

645:                                              ; preds = %644, %49, %43
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_encode_alpha(%struct.png_row_info_struct* noundef %0, i8* noundef %1, %struct.png_struct_def* noalias noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i16**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i16, align 2
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.png_struct_def* %2, %struct.png_struct_def** %6, align 8
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %7, align 4
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %18 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 2
  %19 = load i8, i8* %18, align 8
  %20 = zext i8 %19 to i32
  %21 = and i32 %20, 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %140

23:                                               ; preds = %3
  %24 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %25 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %24, i32 0, i32 3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %69

29:                                               ; preds = %23
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 83
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %8, align 8
  %33 = load i8*, i8** %8, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %68

35:                                               ; preds = %29
  %36 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %37 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %36, i32 0, i32 2
  %38 = load i8, i8* %37, align 8
  %39 = zext i8 %38 to i32
  %40 = and i32 %39, 2
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i32 4, i32 2
  store i32 %43, i32* %9, align 4
  %44 = load i32, i32* %9, align 4
  %45 = sub nsw i32 %44, 1
  %46 = load i8*, i8** %5, align 8
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  store i8* %48, i8** %5, align 8
  br label %49

49:                                               ; preds = %60, %35
  %50 = load i32, i32* %7, align 4
  %51 = icmp ugt i32 %50, 0
  br i1 %51, label %52, label %67

52:                                               ; preds = %49
  %53 = load i8*, i8** %8, align 8
  %54 = load i8*, i8** %5, align 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = load i8*, i8** %5, align 8
  store i8 %58, i8* %59, align 1
  br label %60

60:                                               ; preds = %52
  %61 = load i32, i32* %7, align 4
  %62 = add i32 %61, -1
  store i32 %62, i32* %7, align 4
  %63 = load i32, i32* %9, align 4
  %64 = load i8*, i8** %5, align 8
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  store i8* %66, i8** %5, align 8
  br label %49, !llvm.loop !202

67:                                               ; preds = %49
  br label %142

68:                                               ; preds = %29
  br label %139

69:                                               ; preds = %23
  %70 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %71 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %70, i32 0, i32 3
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 %73, 16
  br i1 %74, label %75, label %138

75:                                               ; preds = %69
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 85
  %78 = load i16**, i16*** %77, align 8
  store i16** %78, i16*** %10, align 8
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %79, i32 0, i32 79
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %11, align 4
  %82 = load i16**, i16*** %10, align 8
  %83 = icmp ne i16** %82, null
  br i1 %83, label %84, label %137

84:                                               ; preds = %75
  %85 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %86 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %85, i32 0, i32 2
  %87 = load i8, i8* %86, align 8
  %88 = zext i8 %87 to i32
  %89 = and i32 %88, 2
  %90 = icmp ne i32 %89, 0
  %91 = zext i1 %90 to i64
  %92 = select i1 %90, i32 8, i32 4
  store i32 %92, i32* %12, align 4
  %93 = load i32, i32* %12, align 4
  %94 = sub nsw i32 %93, 2
  %95 = load i8*, i8** %5, align 8
  %96 = sext i32 %94 to i64
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  store i8* %97, i8** %5, align 8
  br label %98

98:                                               ; preds = %129, %84
  %99 = load i32, i32* %7, align 4
  %100 = icmp ugt i32 %99, 0
  br i1 %100, label %101, label %136

101:                                              ; preds = %98
  %102 = load i16**, i16*** %10, align 8
  %103 = load i8*, i8** %5, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = load i32, i32* %11, align 4
  %108 = ashr i32 %106, %107
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i16*, i16** %102, i64 %109
  %111 = load i16*, i16** %110, align 8
  %112 = load i8*, i8** %5, align 8
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds i16, i16* %111, i64 %114
  %116 = load i16, i16* %115, align 2
  store i16 %116, i16* %13, align 2
  %117 = load i16, i16* %13, align 2
  %118 = zext i16 %117 to i32
  %119 = ashr i32 %118, 8
  %120 = and i32 %119, 255
  %121 = trunc i32 %120 to i8
  %122 = load i8*, i8** %5, align 8
  store i8 %121, i8* %122, align 1
  %123 = load i16, i16* %13, align 2
  %124 = zext i16 %123 to i32
  %125 = and i32 %124, 255
  %126 = trunc i32 %125 to i8
  %127 = load i8*, i8** %5, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  store i8 %126, i8* %128, align 1
  br label %129

129:                                              ; preds = %101
  %130 = load i32, i32* %7, align 4
  %131 = add i32 %130, -1
  store i32 %131, i32* %7, align 4
  %132 = load i32, i32* %12, align 4
  %133 = load i8*, i8** %5, align 8
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  store i8* %135, i8** %5, align 8
  br label %98, !llvm.loop !203

136:                                              ; preds = %98
  br label %142

137:                                              ; preds = %75
  br label %138

138:                                              ; preds = %137, %69
  br label %139

139:                                              ; preds = %138, %68
  br label %140

140:                                              ; preds = %139, %3
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %141, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22.239, i64 0, i64 0))
  br label %142

142:                                              ; preds = %140, %136, %67
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_scale_16_to_8(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %10 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %9, i32 0, i32 3
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 16
  br i1 %13, label %14, label %68

14:                                               ; preds = %2
  %15 = load i8*, i8** %4, align 8
  store i8* %15, i8** %5, align 8
  %16 = load i8*, i8** %4, align 8
  store i8* %16, i8** %6, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %19 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %18, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 %20
  store i8* %21, i8** %7, align 8
  br label %22

22:                                               ; preds = %26, %14
  %23 = load i8*, i8** %5, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = icmp ult i8* %23, %24
  br i1 %25, label %26, label %46

26:                                               ; preds = %22
  %27 = load i8*, i8** %5, align 8
  %28 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %28, i8** %5, align 8
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %8, align 4
  %31 = load i8*, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** %5, align 8
  %33 = load i8, i8* %31, align 1
  %34 = zext i8 %33 to i32
  %35 = load i32, i32* %8, align 4
  %36 = sub nsw i32 %34, %35
  %37 = add nsw i32 %36, 128
  %38 = mul nsw i32 %37, 65535
  %39 = ashr i32 %38, 24
  %40 = load i32, i32* %8, align 4
  %41 = add nsw i32 %40, %39
  store i32 %41, i32* %8, align 4
  %42 = load i32, i32* %8, align 4
  %43 = trunc i32 %42 to i8
  %44 = load i8*, i8** %6, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %6, align 8
  store i8 %43, i8* %44, align 1
  br label %22, !llvm.loop !204

46:                                               ; preds = %22
  %47 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %48 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %47, i32 0, i32 3
  store i8 8, i8* %48, align 1
  %49 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %50 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %49, i32 0, i32 4
  %51 = load i8, i8* %50, align 2
  %52 = zext i8 %51 to i32
  %53 = mul nsw i32 8, %52
  %54 = trunc i32 %53 to i8
  %55 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %56 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %55, i32 0, i32 5
  store i8 %54, i8* %56, align 1
  %57 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %58 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %61 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %60, i32 0, i32 4
  %62 = load i8, i8* %61, align 2
  %63 = zext i8 %62 to i32
  %64 = mul i32 %59, %63
  %65 = zext i32 %64 to i64
  %66 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %67 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %66, i32 0, i32 1
  store i64 %65, i64* %67, align 8
  br label %68

68:                                               ; preds = %46, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_chop(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %8, i32 0, i32 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 16
  br i1 %12, label %13, label %54

13:                                               ; preds = %2
  %14 = load i8*, i8** %4, align 8
  store i8* %14, i8** %5, align 8
  %15 = load i8*, i8** %4, align 8
  store i8* %15, i8** %6, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %18 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  br label %21

21:                                               ; preds = %25, %13
  %22 = load i8*, i8** %5, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = icmp ult i8* %22, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %21
  %26 = load i8*, i8** %5, align 8
  %27 = load i8, i8* %26, align 1
  %28 = load i8*, i8** %6, align 8
  %29 = getelementptr inbounds i8, i8* %28, i32 1
  store i8* %29, i8** %6, align 8
  store i8 %27, i8* %28, align 1
  %30 = load i8*, i8** %5, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  store i8* %31, i8** %5, align 8
  br label %21, !llvm.loop !205

32:                                               ; preds = %21
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 3
  store i8 8, i8* %34, align 1
  %35 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %36 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %35, i32 0, i32 4
  %37 = load i8, i8* %36, align 2
  %38 = zext i8 %37 to i32
  %39 = mul nsw i32 8, %38
  %40 = trunc i32 %39 to i8
  %41 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %42 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %41, i32 0, i32 5
  store i8 %40, i8* %42, align 1
  %43 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %44 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %47 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %46, i32 0, i32 4
  %48 = load i8, i8* %47, align 2
  %49 = zext i8 %48 to i32
  %50 = mul i32 %45, %49
  %51 = zext i32 %50 to i64
  %52 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %53 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %52, i32 0, i32 1
  store i64 %51, i64* %53, align 8
  br label %54

54:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_quantize(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.png_row_info_struct*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %21 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %12, align 4
  %24 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %25 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %24, i32 0, i32 3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %243

29:                                               ; preds = %4
  %30 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %31 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %30, i32 0, i32 2
  %32 = load i8, i8* %31, align 8
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %35, label %119

35:                                               ; preds = %29
  %36 = load i8*, i8** %7, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %38, label %119

38:                                               ; preds = %35
  %39 = load i8*, i8** %6, align 8
  store i8* %39, i8** %9, align 8
  %40 = load i8*, i8** %6, align 8
  store i8* %40, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %41

41:                                               ; preds = %78, %38
  %42 = load i32, i32* %11, align 4
  %43 = load i32, i32* %12, align 4
  %44 = icmp ult i32 %42, %43
  br i1 %44, label %45, label %81

45:                                               ; preds = %41
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %9, align 8
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i32
  store i32 %49, i32* %13, align 4
  %50 = load i8*, i8** %9, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %9, align 8
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i32
  store i32 %53, i32* %14, align 4
  %54 = load i8*, i8** %9, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %9, align 8
  %56 = load i8, i8* %54, align 1
  %57 = zext i8 %56 to i32
  store i32 %57, i32* %15, align 4
  %58 = load i32, i32* %13, align 4
  %59 = ashr i32 %58, 3
  %60 = and i32 %59, 31
  %61 = shl i32 %60, 10
  %62 = load i32, i32* %14, align 4
  %63 = ashr i32 %62, 3
  %64 = and i32 %63, 31
  %65 = shl i32 %64, 5
  %66 = or i32 %61, %65
  %67 = load i32, i32* %15, align 4
  %68 = ashr i32 %67, 3
  %69 = and i32 %68, 31
  %70 = or i32 %66, %69
  store i32 %70, i32* %16, align 4
  %71 = load i8*, i8** %7, align 8
  %72 = load i32, i32* %16, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = load i8*, i8** %10, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %10, align 8
  store i8 %75, i8* %76, align 1
  br label %78

78:                                               ; preds = %45
  %79 = load i32, i32* %11, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %11, align 4
  br label %41, !llvm.loop !206

81:                                               ; preds = %41
  %82 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %83 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %82, i32 0, i32 2
  store i8 3, i8* %83, align 8
  %84 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %85 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %84, i32 0, i32 4
  store i8 1, i8* %85, align 2
  %86 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %87 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %86, i32 0, i32 3
  %88 = load i8, i8* %87, align 1
  %89 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %90 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %89, i32 0, i32 5
  store i8 %88, i8* %90, align 1
  %91 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %92 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %91, i32 0, i32 5
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp sge i32 %94, 8
  br i1 %95, label %96, label %105

96:                                               ; preds = %81
  %97 = load i32, i32* %12, align 4
  %98 = zext i32 %97 to i64
  %99 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %100 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %99, i32 0, i32 5
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i64
  %103 = lshr i64 %102, 3
  %104 = mul i64 %98, %103
  br label %115

105:                                              ; preds = %81
  %106 = load i32, i32* %12, align 4
  %107 = zext i32 %106 to i64
  %108 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %109 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %108, i32 0, i32 5
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = mul i64 %107, %111
  %113 = add i64 %112, 7
  %114 = lshr i64 %113, 3
  br label %115

115:                                              ; preds = %105, %96
  %116 = phi i64 [ %104, %96 ], [ %114, %105 ]
  %117 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %118 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %117, i32 0, i32 1
  store i64 %116, i64* %118, align 8
  br label %242

119:                                              ; preds = %35, %29
  %120 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %121 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %120, i32 0, i32 2
  %122 = load i8, i8* %121, align 8
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 6
  br i1 %124, label %125, label %211

125:                                              ; preds = %119
  %126 = load i8*, i8** %7, align 8
  %127 = icmp ne i8* %126, null
  br i1 %127, label %128, label %211

128:                                              ; preds = %125
  %129 = load i8*, i8** %6, align 8
  store i8* %129, i8** %9, align 8
  %130 = load i8*, i8** %6, align 8
  store i8* %130, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %131

131:                                              ; preds = %170, %128
  %132 = load i32, i32* %11, align 4
  %133 = load i32, i32* %12, align 4
  %134 = icmp ult i32 %132, %133
  br i1 %134, label %135, label %173

135:                                              ; preds = %131
  %136 = load i8*, i8** %9, align 8
  %137 = getelementptr inbounds i8, i8* %136, i32 1
  store i8* %137, i8** %9, align 8
  %138 = load i8, i8* %136, align 1
  %139 = zext i8 %138 to i32
  store i32 %139, i32* %17, align 4
  %140 = load i8*, i8** %9, align 8
  %141 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %141, i8** %9, align 8
  %142 = load i8, i8* %140, align 1
  %143 = zext i8 %142 to i32
  store i32 %143, i32* %18, align 4
  %144 = load i8*, i8** %9, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %9, align 8
  %146 = load i8, i8* %144, align 1
  %147 = zext i8 %146 to i32
  store i32 %147, i32* %19, align 4
  %148 = load i8*, i8** %9, align 8
  %149 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %149, i8** %9, align 8
  %150 = load i32, i32* %17, align 4
  %151 = ashr i32 %150, 3
  %152 = and i32 %151, 31
  %153 = shl i32 %152, 10
  %154 = load i32, i32* %18, align 4
  %155 = ashr i32 %154, 3
  %156 = and i32 %155, 31
  %157 = shl i32 %156, 5
  %158 = or i32 %153, %157
  %159 = load i32, i32* %19, align 4
  %160 = ashr i32 %159, 3
  %161 = and i32 %160, 31
  %162 = or i32 %158, %161
  store i32 %162, i32* %20, align 4
  %163 = load i8*, i8** %7, align 8
  %164 = load i32, i32* %20, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = load i8*, i8** %10, align 8
  %169 = getelementptr inbounds i8, i8* %168, i32 1
  store i8* %169, i8** %10, align 8
  store i8 %167, i8* %168, align 1
  br label %170

170:                                              ; preds = %135
  %171 = load i32, i32* %11, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %11, align 4
  br label %131, !llvm.loop !207

173:                                              ; preds = %131
  %174 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %175 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %174, i32 0, i32 2
  store i8 3, i8* %175, align 8
  %176 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %177 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %176, i32 0, i32 4
  store i8 1, i8* %177, align 2
  %178 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %179 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %178, i32 0, i32 3
  %180 = load i8, i8* %179, align 1
  %181 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %182 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %181, i32 0, i32 5
  store i8 %180, i8* %182, align 1
  %183 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %184 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %183, i32 0, i32 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp sge i32 %186, 8
  br i1 %187, label %188, label %197

188:                                              ; preds = %173
  %189 = load i32, i32* %12, align 4
  %190 = zext i32 %189 to i64
  %191 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %192 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %191, i32 0, i32 5
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = lshr i64 %194, 3
  %196 = mul i64 %190, %195
  br label %207

197:                                              ; preds = %173
  %198 = load i32, i32* %12, align 4
  %199 = zext i32 %198 to i64
  %200 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %201 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %200, i32 0, i32 5
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = mul i64 %199, %203
  %205 = add i64 %204, 7
  %206 = lshr i64 %205, 3
  br label %207

207:                                              ; preds = %197, %188
  %208 = phi i64 [ %196, %188 ], [ %206, %197 ]
  %209 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %210 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %209, i32 0, i32 1
  store i64 %208, i64* %210, align 8
  br label %241

211:                                              ; preds = %125, %119
  %212 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %213 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %212, i32 0, i32 2
  %214 = load i8, i8* %213, align 8
  %215 = zext i8 %214 to i32
  %216 = icmp eq i32 %215, 3
  br i1 %216, label %217, label %240

217:                                              ; preds = %211
  %218 = load i8*, i8** %8, align 8
  %219 = icmp ne i8* %218, null
  br i1 %219, label %220, label %240

220:                                              ; preds = %217
  %221 = load i8*, i8** %6, align 8
  store i8* %221, i8** %9, align 8
  store i32 0, i32* %11, align 4
  br label %222

222:                                              ; preds = %234, %220
  %223 = load i32, i32* %11, align 4
  %224 = load i32, i32* %12, align 4
  %225 = icmp ult i32 %223, %224
  br i1 %225, label %226, label %239

226:                                              ; preds = %222
  %227 = load i8*, i8** %8, align 8
  %228 = load i8*, i8** %9, align 8
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds i8, i8* %227, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = load i8*, i8** %9, align 8
  store i8 %232, i8* %233, align 1
  br label %234

234:                                              ; preds = %226
  %235 = load i32, i32* %11, align 4
  %236 = add i32 %235, 1
  store i32 %236, i32* %11, align 4
  %237 = load i8*, i8** %9, align 8
  %238 = getelementptr inbounds i8, i8* %237, i32 1
  store i8* %238, i8** %9, align 8
  br label %222, !llvm.loop !208

239:                                              ; preds = %222
  br label %240

240:                                              ; preds = %239, %217, %211
  br label %241

241:                                              ; preds = %240, %207
  br label %242

242:                                              ; preds = %241, %115
  br label %243

243:                                              ; preds = %242, %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_expand_16(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %8 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 3
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 8
  br i1 %11, label %12, label %58

12:                                               ; preds = %2
  %13 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %14 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %13, i32 0, i32 2
  %15 = load i8, i8* %14, align 8
  %16 = zext i8 %15 to i32
  %17 = icmp ne i32 %16, 3
  br i1 %17, label %18, label %58

18:                                               ; preds = %12
  %19 = load i8*, i8** %4, align 8
  %20 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %21 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %20, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  store i8* %23, i8** %5, align 8
  %24 = load i8*, i8** %5, align 8
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  store i8* %28, i8** %6, align 8
  br label %29

29:                                               ; preds = %33, %18
  %30 = load i8*, i8** %6, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = icmp ugt i8* %30, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %29
  %34 = load i8*, i8** %5, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 -1
  store i8* %35, i8** %5, align 8
  %36 = load i8, i8* %35, align 1
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 -1
  store i8 %36, i8* %38, align 1
  %39 = load i8*, i8** %6, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 -2
  store i8 %36, i8* %40, align 1
  %41 = load i8*, i8** %6, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 -2
  store i8* %42, i8** %6, align 8
  br label %29, !llvm.loop !209

43:                                               ; preds = %29
  %44 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %44, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = mul i64 %46, 2
  store i64 %47, i64* %45, align 8
  %48 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %49 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %48, i32 0, i32 3
  store i8 16, i8* %49, align 1
  %50 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %51 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %50, i32 0, i32 4
  %52 = load i8, i8* %51, align 2
  %53 = zext i8 %52 to i32
  %54 = mul nsw i32 %53, 16
  %55 = trunc i32 %54 to i8
  %56 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %57 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %56, i32 0, i32 5
  store i8 %55, i8* %57, align 1
  br label %58

58:                                               ; preds = %43, %12, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_read_invert_alpha(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %18 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %19 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %5, align 4
  %21 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %21, i32 0, i32 2
  %23 = load i8, i8* %22, align 8
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %95

26:                                               ; preds = %2
  %27 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %28 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %27, i32 0, i32 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %59

32:                                               ; preds = %26
  %33 = load i8*, i8** %4, align 8
  %34 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %35 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %34, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  store i8* %37, i8** %6, align 8
  %38 = load i8*, i8** %6, align 8
  store i8* %38, i8** %7, align 8
  store i32 0, i32* %8, align 4
  br label %39

39:                                               ; preds = %55, %32
  %40 = load i32, i32* %8, align 4
  %41 = load i32, i32* %5, align 4
  %42 = icmp ult i32 %40, %41
  br i1 %42, label %43, label %58

43:                                               ; preds = %39
  %44 = load i8*, i8** %6, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 -1
  store i8* %45, i8** %6, align 8
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = sub nsw i32 255, %47
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %7, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 -1
  store i8* %51, i8** %7, align 8
  store i8 %49, i8* %51, align 1
  %52 = load i8*, i8** %6, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 -3
  store i8* %53, i8** %6, align 8
  %54 = load i8*, i8** %6, align 8
  store i8* %54, i8** %7, align 8
  br label %55

55:                                               ; preds = %43
  %56 = load i32, i32* %8, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %8, align 4
  br label %39, !llvm.loop !210

58:                                               ; preds = %39
  br label %94

59:                                               ; preds = %26
  %60 = load i8*, i8** %4, align 8
  %61 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %62 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  store i8* %64, i8** %9, align 8
  %65 = load i8*, i8** %9, align 8
  store i8* %65, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %66

66:                                               ; preds = %90, %59
  %67 = load i32, i32* %11, align 4
  %68 = load i32, i32* %5, align 4
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %70, label %93

70:                                               ; preds = %66
  %71 = load i8*, i8** %9, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 -1
  store i8* %72, i8** %9, align 8
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = sub nsw i32 255, %74
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %10, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 -1
  store i8* %78, i8** %10, align 8
  store i8 %76, i8* %78, align 1
  %79 = load i8*, i8** %9, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 -1
  store i8* %80, i8** %9, align 8
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = sub nsw i32 255, %82
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %10, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 -1
  store i8* %86, i8** %10, align 8
  store i8 %84, i8* %86, align 1
  %87 = load i8*, i8** %9, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 -6
  store i8* %88, i8** %9, align 8
  %89 = load i8*, i8** %9, align 8
  store i8* %89, i8** %10, align 8
  br label %90

90:                                               ; preds = %70
  %91 = load i32, i32* %11, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %11, align 4
  br label %66, !llvm.loop !211

93:                                               ; preds = %66
  br label %94

94:                                               ; preds = %93, %58
  br label %173

95:                                               ; preds = %2
  %96 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %97 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %96, i32 0, i32 2
  %98 = load i8, i8* %97, align 8
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %101, label %172

101:                                              ; preds = %95
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %103 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp eq i32 %105, 8
  br i1 %106, label %107, label %136

107:                                              ; preds = %101
  %108 = load i8*, i8** %4, align 8
  %109 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %110 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %109, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds i8, i8* %108, i64 %111
  store i8* %112, i8** %12, align 8
  %113 = load i8*, i8** %12, align 8
  store i8* %113, i8** %13, align 8
  store i32 0, i32* %14, align 4
  br label %114

114:                                              ; preds = %132, %107
  %115 = load i32, i32* %14, align 4
  %116 = load i32, i32* %5, align 4
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %118, label %135

118:                                              ; preds = %114
  %119 = load i8*, i8** %12, align 8
  %120 = getelementptr inbounds i8, i8* %119, i32 -1
  store i8* %120, i8** %12, align 8
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = sub nsw i32 255, %122
  %124 = trunc i32 %123 to i8
  %125 = load i8*, i8** %13, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 -1
  store i8* %126, i8** %13, align 8
  store i8 %124, i8* %126, align 1
  %127 = load i8*, i8** %12, align 8
  %128 = getelementptr inbounds i8, i8* %127, i32 -1
  store i8* %128, i8** %12, align 8
  %129 = load i8, i8* %128, align 1
  %130 = load i8*, i8** %13, align 8
  %131 = getelementptr inbounds i8, i8* %130, i32 -1
  store i8* %131, i8** %13, align 8
  store i8 %129, i8* %131, align 1
  br label %132

132:                                              ; preds = %118
  %133 = load i32, i32* %14, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %14, align 4
  br label %114, !llvm.loop !212

135:                                              ; preds = %114
  br label %171

136:                                              ; preds = %101
  %137 = load i8*, i8** %4, align 8
  %138 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %139 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %138, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds i8, i8* %137, i64 %140
  store i8* %141, i8** %15, align 8
  %142 = load i8*, i8** %15, align 8
  store i8* %142, i8** %16, align 8
  store i32 0, i32* %17, align 4
  br label %143

143:                                              ; preds = %167, %136
  %144 = load i32, i32* %17, align 4
  %145 = load i32, i32* %5, align 4
  %146 = icmp ult i32 %144, %145
  br i1 %146, label %147, label %170

147:                                              ; preds = %143
  %148 = load i8*, i8** %15, align 8
  %149 = getelementptr inbounds i8, i8* %148, i32 -1
  store i8* %149, i8** %15, align 8
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = sub nsw i32 255, %151
  %153 = trunc i32 %152 to i8
  %154 = load i8*, i8** %16, align 8
  %155 = getelementptr inbounds i8, i8* %154, i32 -1
  store i8* %155, i8** %16, align 8
  store i8 %153, i8* %155, align 1
  %156 = load i8*, i8** %15, align 8
  %157 = getelementptr inbounds i8, i8* %156, i32 -1
  store i8* %157, i8** %15, align 8
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = sub nsw i32 255, %159
  %161 = trunc i32 %160 to i8
  %162 = load i8*, i8** %16, align 8
  %163 = getelementptr inbounds i8, i8* %162, i32 -1
  store i8* %163, i8** %16, align 8
  store i8 %161, i8* %163, align 1
  %164 = load i8*, i8** %15, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 -2
  store i8* %165, i8** %15, align 8
  %166 = load i8*, i8** %15, align 8
  store i8* %166, i8** %16, align 8
  br label %167

167:                                              ; preds = %147
  %168 = load i32, i32* %17, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %17, align 4
  br label %143, !llvm.loop !213

170:                                              ; preds = %143
  br label %171

171:                                              ; preds = %170, %135
  br label %172

172:                                              ; preds = %171, %95
  br label %173

173:                                              ; preds = %172, %94
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_unshift(%struct.png_row_info_struct* noundef %0, i8* noundef %1, %struct.png_color_8_struct* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.png_color_8_struct*, align 8
  %7 = alloca i32, align 4
  %8 = alloca [4 x i32], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.png_color_8_struct* %2, %struct.png_color_8_struct** %6, align 8
  %29 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %30 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %29, i32 0, i32 2
  %31 = load i8, i8* %30, align 8
  %32 = zext i8 %31 to i32
  store i32 %32, i32* %7, align 4
  %33 = load i32, i32* %7, align 4
  %34 = icmp ne i32 %33, 3
  br i1 %34, label %35, label %264

35:                                               ; preds = %3
  store i32 0, i32* %9, align 4
  %36 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %37 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %36, i32 0, i32 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  store i32 %39, i32* %10, align 4
  %40 = load i32, i32* %7, align 4
  %41 = and i32 %40, 2
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %74

43:                                               ; preds = %35
  %44 = load i32, i32* %10, align 4
  %45 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %46 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %45, i32 0, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = sub nsw i32 %44, %48
  %50 = load i32, i32* %9, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %9, align 4
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %52
  store i32 %49, i32* %53, align 4
  %54 = load i32, i32* %10, align 4
  %55 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %56 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %55, i32 0, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = sub nsw i32 %54, %58
  %60 = load i32, i32* %9, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %9, align 4
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %62
  store i32 %59, i32* %63, align 4
  %64 = load i32, i32* %10, align 4
  %65 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %66 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %65, i32 0, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = sub nsw i32 %64, %68
  %70 = load i32, i32* %9, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %9, align 4
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %72
  store i32 %69, i32* %73, align 4
  br label %85

74:                                               ; preds = %35
  %75 = load i32, i32* %10, align 4
  %76 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %77 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %76, i32 0, i32 3
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = sub nsw i32 %75, %79
  %81 = load i32, i32* %9, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %9, align 4
  %83 = sext i32 %81 to i64
  %84 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %83
  store i32 %80, i32* %84, align 4
  br label %85

85:                                               ; preds = %74, %43
  %86 = load i32, i32* %7, align 4
  %87 = and i32 %86, 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %100

89:                                               ; preds = %85
  %90 = load i32, i32* %10, align 4
  %91 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %92 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %91, i32 0, i32 4
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = sub nsw i32 %90, %94
  %96 = load i32, i32* %9, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %9, align 4
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %98
  store i32 %95, i32* %99, align 4
  br label %100

100:                                              ; preds = %89, %85
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  br label %101

101:                                              ; preds = %124, %100
  %102 = load i32, i32* %11, align 4
  %103 = load i32, i32* %9, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %127

105:                                              ; preds = %101
  %106 = load i32, i32* %11, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = icmp sle i32 %109, 0
  br i1 %110, label %118, label %111

111:                                              ; preds = %105
  %112 = load i32, i32* %11, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = load i32, i32* %10, align 4
  %117 = icmp sge i32 %115, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %111, %105
  %119 = load i32, i32* %11, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %120
  store i32 0, i32* %121, align 4
  br label %123

122:                                              ; preds = %111
  store i32 1, i32* %12, align 4
  br label %123

123:                                              ; preds = %122, %118
  br label %124

124:                                              ; preds = %123
  %125 = load i32, i32* %11, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %11, align 4
  br label %101, !llvm.loop !214

127:                                              ; preds = %101
  %128 = load i32, i32* %12, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  br label %264

131:                                              ; preds = %127
  %132 = load i32, i32* %10, align 4
  switch i32 %132, label %133 [
    i32 2, label %134
    i32 4, label %156
    i32 8, label %188
    i32 16, label %219
  ]

133:                                              ; preds = %131
  br label %263

134:                                              ; preds = %131
  %135 = load i8*, i8** %5, align 8
  store i8* %135, i8** %13, align 8
  %136 = load i8*, i8** %13, align 8
  %137 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %138 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %137, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds i8, i8* %136, i64 %139
  store i8* %140, i8** %14, align 8
  br label %141

141:                                              ; preds = %145, %134
  %142 = load i8*, i8** %13, align 8
  %143 = load i8*, i8** %14, align 8
  %144 = icmp ult i8* %142, %143
  br i1 %144, label %145, label %155

145:                                              ; preds = %141
  %146 = load i8*, i8** %13, align 8
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = ashr i32 %148, 1
  %150 = and i32 %149, 85
  store i32 %150, i32* %15, align 4
  %151 = load i32, i32* %15, align 4
  %152 = trunc i32 %151 to i8
  %153 = load i8*, i8** %13, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %13, align 8
  store i8 %152, i8* %153, align 1
  br label %141, !llvm.loop !215

155:                                              ; preds = %141
  br label %263

156:                                              ; preds = %131
  %157 = load i8*, i8** %5, align 8
  store i8* %157, i8** %16, align 8
  %158 = load i8*, i8** %16, align 8
  %159 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %160 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %159, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds i8, i8* %158, i64 %161
  store i8* %162, i8** %17, align 8
  %163 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %164 = load i32, i32* %163, align 16
  store i32 %164, i32* %18, align 4
  %165 = load i32, i32* %18, align 4
  %166 = ashr i32 15, %165
  store i32 %166, i32* %19, align 4
  %167 = load i32, i32* %19, align 4
  %168 = shl i32 %167, 4
  %169 = load i32, i32* %19, align 4
  %170 = or i32 %169, %168
  store i32 %170, i32* %19, align 4
  br label %171

171:                                              ; preds = %175, %156
  %172 = load i8*, i8** %16, align 8
  %173 = load i8*, i8** %17, align 8
  %174 = icmp ult i8* %172, %173
  br i1 %174, label %175, label %187

175:                                              ; preds = %171
  %176 = load i8*, i8** %16, align 8
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = load i32, i32* %18, align 4
  %180 = ashr i32 %178, %179
  %181 = load i32, i32* %19, align 4
  %182 = and i32 %180, %181
  store i32 %182, i32* %20, align 4
  %183 = load i32, i32* %20, align 4
  %184 = trunc i32 %183 to i8
  %185 = load i8*, i8** %16, align 8
  %186 = getelementptr inbounds i8, i8* %185, i32 1
  store i8* %186, i8** %16, align 8
  store i8 %184, i8* %185, align 1
  br label %171, !llvm.loop !216

187:                                              ; preds = %171
  br label %263

188:                                              ; preds = %131
  %189 = load i8*, i8** %5, align 8
  store i8* %189, i8** %21, align 8
  %190 = load i8*, i8** %21, align 8
  %191 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %192 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %191, i32 0, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds i8, i8* %190, i64 %193
  store i8* %194, i8** %22, align 8
  store i32 0, i32* %23, align 4
  br label %195

195:                                              ; preds = %213, %188
  %196 = load i8*, i8** %21, align 8
  %197 = load i8*, i8** %22, align 8
  %198 = icmp ult i8* %196, %197
  br i1 %198, label %199, label %218

199:                                              ; preds = %195
  %200 = load i8*, i8** %21, align 8
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = load i32, i32* %23, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = ashr i32 %202, %206
  store i32 %207, i32* %24, align 4
  %208 = load i32, i32* %23, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %23, align 4
  %210 = load i32, i32* %9, align 4
  %211 = icmp sge i32 %209, %210
  br i1 %211, label %212, label %213

212:                                              ; preds = %199
  store i32 0, i32* %23, align 4
  br label %213

213:                                              ; preds = %212, %199
  %214 = load i32, i32* %24, align 4
  %215 = trunc i32 %214 to i8
  %216 = load i8*, i8** %21, align 8
  %217 = getelementptr inbounds i8, i8* %216, i32 1
  store i8* %217, i8** %21, align 8
  store i8 %215, i8* %216, align 1
  br label %195, !llvm.loop !217

218:                                              ; preds = %195
  br label %263

219:                                              ; preds = %131
  %220 = load i8*, i8** %5, align 8
  store i8* %220, i8** %25, align 8
  %221 = load i8*, i8** %25, align 8
  %222 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %223 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %222, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds i8, i8* %221, i64 %224
  store i8* %225, i8** %26, align 8
  store i32 0, i32* %27, align 4
  br label %226

226:                                              ; preds = %252, %219
  %227 = load i8*, i8** %25, align 8
  %228 = load i8*, i8** %26, align 8
  %229 = icmp ult i8* %227, %228
  br i1 %229, label %230, label %262

230:                                              ; preds = %226
  %231 = load i8*, i8** %25, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 0
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = shl i32 %234, 8
  %236 = load i8*, i8** %25, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = add nsw i32 %235, %239
  store i32 %240, i32* %28, align 4
  %241 = load i32, i32* %27, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = load i32, i32* %28, align 4
  %246 = ashr i32 %245, %244
  store i32 %246, i32* %28, align 4
  %247 = load i32, i32* %27, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %27, align 4
  %249 = load i32, i32* %9, align 4
  %250 = icmp sge i32 %248, %249
  br i1 %250, label %251, label %252

251:                                              ; preds = %230
  store i32 0, i32* %27, align 4
  br label %252

252:                                              ; preds = %251, %230
  %253 = load i32, i32* %28, align 4
  %254 = ashr i32 %253, 8
  %255 = trunc i32 %254 to i8
  %256 = load i8*, i8** %25, align 8
  %257 = getelementptr inbounds i8, i8* %256, i32 1
  store i8* %257, i8** %25, align 8
  store i8 %255, i8* %256, align 1
  %258 = load i32, i32* %28, align 4
  %259 = trunc i32 %258 to i8
  %260 = load i8*, i8** %25, align 8
  %261 = getelementptr inbounds i8, i8* %260, i32 1
  store i8* %261, i8** %25, align 8
  store i8 %259, i8* %260, align 1
  br label %226, !llvm.loop !218

262:                                              ; preds = %226
  br label %263

263:                                              ; preds = %262, %218, %187, %155, %133
  br label %264

264:                                              ; preds = %130, %263, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_unpack(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp slt i32 %19, 8
  br i1 %20, label %21, label %182

21:                                               ; preds = %2
  %22 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %23 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %6, align 4
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  switch i32 %28, label %161 [
    i32 1, label %29
    i32 2, label %73
    i32 4, label %118
  ]

29:                                               ; preds = %21
  %30 = load i8*, i8** %4, align 8
  %31 = load i32, i32* %6, align 4
  %32 = sub i32 %31, 1
  %33 = lshr i32 %32, 3
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %30, i64 %34
  store i8* %35, i8** %7, align 8
  %36 = load i8*, i8** %4, align 8
  %37 = load i32, i32* %6, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = getelementptr inbounds i8, i8* %39, i64 -1
  store i8* %40, i8** %8, align 8
  %41 = load i32, i32* %6, align 4
  %42 = add i32 %41, 7
  %43 = and i32 %42, 7
  %44 = sub i32 7, %43
  store i32 %44, i32* %9, align 4
  store i32 0, i32* %5, align 4
  br label %45

45:                                               ; preds = %69, %29
  %46 = load i32, i32* %5, align 4
  %47 = load i32, i32* %6, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %49, label %72

49:                                               ; preds = %45
  %50 = load i8*, i8** %7, align 8
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = load i32, i32* %9, align 4
  %54 = ashr i32 %52, %53
  %55 = and i32 %54, 1
  %56 = trunc i32 %55 to i8
  %57 = load i8*, i8** %8, align 8
  store i8 %56, i8* %57, align 1
  %58 = load i32, i32* %9, align 4
  %59 = icmp eq i32 %58, 7
  br i1 %59, label %60, label %63

60:                                               ; preds = %49
  store i32 0, i32* %9, align 4
  %61 = load i8*, i8** %7, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 -1
  store i8* %62, i8** %7, align 8
  br label %66

63:                                               ; preds = %49
  %64 = load i32, i32* %9, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %9, align 4
  br label %66

66:                                               ; preds = %63, %60
  %67 = load i8*, i8** %8, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 -1
  store i8* %68, i8** %8, align 8
  br label %69

69:                                               ; preds = %66
  %70 = load i32, i32* %5, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %5, align 4
  br label %45, !llvm.loop !219

72:                                               ; preds = %45
  br label %162

73:                                               ; preds = %21
  %74 = load i8*, i8** %4, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sub i32 %75, 1
  %77 = lshr i32 %76, 2
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %74, i64 %78
  store i8* %79, i8** %10, align 8
  %80 = load i8*, i8** %4, align 8
  %81 = load i32, i32* %6, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = getelementptr inbounds i8, i8* %83, i64 -1
  store i8* %84, i8** %11, align 8
  %85 = load i32, i32* %6, align 4
  %86 = add i32 %85, 3
  %87 = and i32 %86, 3
  %88 = sub i32 3, %87
  %89 = shl i32 %88, 1
  store i32 %89, i32* %12, align 4
  store i32 0, i32* %5, align 4
  br label %90

90:                                               ; preds = %114, %73
  %91 = load i32, i32* %5, align 4
  %92 = load i32, i32* %6, align 4
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %94, label %117

94:                                               ; preds = %90
  %95 = load i8*, i8** %10, align 8
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = load i32, i32* %12, align 4
  %99 = ashr i32 %97, %98
  %100 = and i32 %99, 3
  %101 = trunc i32 %100 to i8
  %102 = load i8*, i8** %11, align 8
  store i8 %101, i8* %102, align 1
  %103 = load i32, i32* %12, align 4
  %104 = icmp eq i32 %103, 6
  br i1 %104, label %105, label %108

105:                                              ; preds = %94
  store i32 0, i32* %12, align 4
  %106 = load i8*, i8** %10, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 -1
  store i8* %107, i8** %10, align 8
  br label %111

108:                                              ; preds = %94
  %109 = load i32, i32* %12, align 4
  %110 = add i32 %109, 2
  store i32 %110, i32* %12, align 4
  br label %111

111:                                              ; preds = %108, %105
  %112 = load i8*, i8** %11, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 -1
  store i8* %113, i8** %11, align 8
  br label %114

114:                                              ; preds = %111
  %115 = load i32, i32* %5, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %5, align 4
  br label %90, !llvm.loop !220

117:                                              ; preds = %90
  br label %162

118:                                              ; preds = %21
  %119 = load i8*, i8** %4, align 8
  %120 = load i32, i32* %6, align 4
  %121 = sub i32 %120, 1
  %122 = lshr i32 %121, 1
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %119, i64 %123
  store i8* %124, i8** %13, align 8
  %125 = load i8*, i8** %4, align 8
  %126 = load i32, i32* %6, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %125, i64 %127
  %129 = getelementptr inbounds i8, i8* %128, i64 -1
  store i8* %129, i8** %14, align 8
  %130 = load i32, i32* %6, align 4
  %131 = add i32 %130, 1
  %132 = and i32 %131, 1
  %133 = sub i32 1, %132
  %134 = shl i32 %133, 2
  store i32 %134, i32* %15, align 4
  store i32 0, i32* %5, align 4
  br label %135

135:                                              ; preds = %157, %118
  %136 = load i32, i32* %5, align 4
  %137 = load i32, i32* %6, align 4
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %139, label %160

139:                                              ; preds = %135
  %140 = load i8*, i8** %13, align 8
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = load i32, i32* %15, align 4
  %144 = ashr i32 %142, %143
  %145 = and i32 %144, 15
  %146 = trunc i32 %145 to i8
  %147 = load i8*, i8** %14, align 8
  store i8 %146, i8* %147, align 1
  %148 = load i32, i32* %15, align 4
  %149 = icmp eq i32 %148, 4
  br i1 %149, label %150, label %153

150:                                              ; preds = %139
  store i32 0, i32* %15, align 4
  %151 = load i8*, i8** %13, align 8
  %152 = getelementptr inbounds i8, i8* %151, i32 -1
  store i8* %152, i8** %13, align 8
  br label %154

153:                                              ; preds = %139
  store i32 4, i32* %15, align 4
  br label %154

154:                                              ; preds = %153, %150
  %155 = load i8*, i8** %14, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 -1
  store i8* %156, i8** %14, align 8
  br label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %5, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %5, align 4
  br label %135, !llvm.loop !221

160:                                              ; preds = %135
  br label %162

161:                                              ; preds = %21
  br label %162

162:                                              ; preds = %161, %160, %117, %72
  %163 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %164 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %163, i32 0, i32 3
  store i8 8, i8* %164, align 1
  %165 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %166 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %165, i32 0, i32 4
  %167 = load i8, i8* %166, align 2
  %168 = zext i8 %167 to i32
  %169 = mul nsw i32 8, %168
  %170 = trunc i32 %169 to i8
  %171 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %172 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %171, i32 0, i32 5
  store i8 %170, i8* %172, align 1
  %173 = load i32, i32* %6, align 4
  %174 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %175 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %174, i32 0, i32 4
  %176 = load i8, i8* %175, align 2
  %177 = zext i8 %176 to i32
  %178 = mul i32 %173, %177
  %179 = zext i32 %178 to i64
  %180 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %181 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %180, i32 0, i32 1
  store i64 %179, i64* %181, align 8
  br label %182

182:                                              ; preds = %162, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_read_filler(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_row_info_struct*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %29 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %30 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %10, align 4
  %32 = load i32, i32* %7, align 4
  %33 = lshr i32 %32, 8
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %11, align 1
  %35 = load i32, i32* %7, align 4
  %36 = trunc i32 %35 to i8
  store i8 %36, i8* %12, align 1
  %37 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %38 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %37, i32 0, i32 2
  %39 = load i8, i8* %38, align 8
  %40 = zext i8 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %235

42:                                               ; preds = %4
  %43 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %44 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %43, i32 0, i32 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 8
  br i1 %47, label %48, label %126

48:                                               ; preds = %42
  %49 = load i32, i32* %8, align 4
  %50 = and i32 %49, 128
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %90

52:                                               ; preds = %48
  %53 = load i8*, i8** %6, align 8
  %54 = load i32, i32* %10, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %13, align 8
  %57 = load i8*, i8** %13, align 8
  %58 = load i32, i32* %10, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  store i8* %60, i8** %14, align 8
  store i32 1, i32* %9, align 4
  br label %61

61:                                               ; preds = %74, %52
  %62 = load i32, i32* %9, align 4
  %63 = load i32, i32* %10, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %77

65:                                               ; preds = %61
  %66 = load i8, i8* %12, align 1
  %67 = load i8*, i8** %14, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 -1
  store i8* %68, i8** %14, align 8
  store i8 %66, i8* %68, align 1
  %69 = load i8*, i8** %13, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 -1
  store i8* %70, i8** %13, align 8
  %71 = load i8, i8* %70, align 1
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 -1
  store i8* %73, i8** %14, align 8
  store i8 %71, i8* %73, align 1
  br label %74

74:                                               ; preds = %65
  %75 = load i32, i32* %9, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %9, align 4
  br label %61, !llvm.loop !222

77:                                               ; preds = %61
  %78 = load i8, i8* %12, align 1
  %79 = load i8*, i8** %14, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 -1
  store i8* %80, i8** %14, align 8
  store i8 %78, i8* %80, align 1
  %81 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %82 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %81, i32 0, i32 4
  store i8 2, i8* %82, align 2
  %83 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %84 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %83, i32 0, i32 5
  store i8 16, i8* %84, align 1
  %85 = load i32, i32* %10, align 4
  %86 = mul i32 %85, 2
  %87 = zext i32 %86 to i64
  %88 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %89 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %88, i32 0, i32 1
  store i64 %87, i64* %89, align 8
  br label %125

90:                                               ; preds = %48
  %91 = load i8*, i8** %6, align 8
  %92 = load i32, i32* %10, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %91, i64 %93
  store i8* %94, i8** %15, align 8
  %95 = load i8*, i8** %15, align 8
  %96 = load i32, i32* %10, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  store i8* %98, i8** %16, align 8
  store i32 0, i32* %9, align 4
  br label %99

99:                                               ; preds = %112, %90
  %100 = load i32, i32* %9, align 4
  %101 = load i32, i32* %10, align 4
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %103, label %115

103:                                              ; preds = %99
  %104 = load i8*, i8** %15, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 -1
  store i8* %105, i8** %15, align 8
  %106 = load i8, i8* %105, align 1
  %107 = load i8*, i8** %16, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 -1
  store i8* %108, i8** %16, align 8
  store i8 %106, i8* %108, align 1
  %109 = load i8, i8* %12, align 1
  %110 = load i8*, i8** %16, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 -1
  store i8* %111, i8** %16, align 8
  store i8 %109, i8* %111, align 1
  br label %112

112:                                              ; preds = %103
  %113 = load i32, i32* %9, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %9, align 4
  br label %99, !llvm.loop !223

115:                                              ; preds = %99
  %116 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %117 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %116, i32 0, i32 4
  store i8 2, i8* %117, align 2
  %118 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %119 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %118, i32 0, i32 5
  store i8 16, i8* %119, align 1
  %120 = load i32, i32* %10, align 4
  %121 = mul i32 %120, 2
  %122 = zext i32 %121 to i64
  %123 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %124 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %123, i32 0, i32 1
  store i64 %122, i64* %124, align 8
  br label %125

125:                                              ; preds = %115, %77
  br label %234

126:                                              ; preds = %42
  %127 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %128 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %127, i32 0, i32 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 16
  br i1 %131, label %132, label %233

132:                                              ; preds = %126
  %133 = load i32, i32* %8, align 4
  %134 = and i32 %133, 128
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %187

136:                                              ; preds = %132
  %137 = load i8*, i8** %6, align 8
  %138 = load i32, i32* %10, align 4
  %139 = zext i32 %138 to i64
  %140 = mul i64 %139, 2
  %141 = getelementptr inbounds i8, i8* %137, i64 %140
  store i8* %141, i8** %17, align 8
  %142 = load i8*, i8** %17, align 8
  %143 = load i32, i32* %10, align 4
  %144 = zext i32 %143 to i64
  %145 = mul i64 %144, 2
  %146 = getelementptr inbounds i8, i8* %142, i64 %145
  store i8* %146, i8** %18, align 8
  store i32 1, i32* %9, align 4
  br label %147

147:                                              ; preds = %168, %136
  %148 = load i32, i32* %9, align 4
  %149 = load i32, i32* %10, align 4
  %150 = icmp ult i32 %148, %149
  br i1 %150, label %151, label %171

151:                                              ; preds = %147
  %152 = load i8, i8* %12, align 1
  %153 = load i8*, i8** %18, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 -1
  store i8* %154, i8** %18, align 8
  store i8 %152, i8* %154, align 1
  %155 = load i8, i8* %11, align 1
  %156 = load i8*, i8** %18, align 8
  %157 = getelementptr inbounds i8, i8* %156, i32 -1
  store i8* %157, i8** %18, align 8
  store i8 %155, i8* %157, align 1
  %158 = load i8*, i8** %17, align 8
  %159 = getelementptr inbounds i8, i8* %158, i32 -1
  store i8* %159, i8** %17, align 8
  %160 = load i8, i8* %159, align 1
  %161 = load i8*, i8** %18, align 8
  %162 = getelementptr inbounds i8, i8* %161, i32 -1
  store i8* %162, i8** %18, align 8
  store i8 %160, i8* %162, align 1
  %163 = load i8*, i8** %17, align 8
  %164 = getelementptr inbounds i8, i8* %163, i32 -1
  store i8* %164, i8** %17, align 8
  %165 = load i8, i8* %164, align 1
  %166 = load i8*, i8** %18, align 8
  %167 = getelementptr inbounds i8, i8* %166, i32 -1
  store i8* %167, i8** %18, align 8
  store i8 %165, i8* %167, align 1
  br label %168

168:                                              ; preds = %151
  %169 = load i32, i32* %9, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %9, align 4
  br label %147, !llvm.loop !224

171:                                              ; preds = %147
  %172 = load i8, i8* %12, align 1
  %173 = load i8*, i8** %18, align 8
  %174 = getelementptr inbounds i8, i8* %173, i32 -1
  store i8* %174, i8** %18, align 8
  store i8 %172, i8* %174, align 1
  %175 = load i8, i8* %11, align 1
  %176 = load i8*, i8** %18, align 8
  %177 = getelementptr inbounds i8, i8* %176, i32 -1
  store i8* %177, i8** %18, align 8
  store i8 %175, i8* %177, align 1
  %178 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %179 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %178, i32 0, i32 4
  store i8 2, i8* %179, align 2
  %180 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %181 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %180, i32 0, i32 5
  store i8 32, i8* %181, align 1
  %182 = load i32, i32* %10, align 4
  %183 = mul i32 %182, 4
  %184 = zext i32 %183 to i64
  %185 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %186 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %185, i32 0, i32 1
  store i64 %184, i64* %186, align 8
  br label %232

187:                                              ; preds = %132
  %188 = load i8*, i8** %6, align 8
  %189 = load i32, i32* %10, align 4
  %190 = zext i32 %189 to i64
  %191 = mul i64 %190, 2
  %192 = getelementptr inbounds i8, i8* %188, i64 %191
  store i8* %192, i8** %19, align 8
  %193 = load i8*, i8** %19, align 8
  %194 = load i32, i32* %10, align 4
  %195 = zext i32 %194 to i64
  %196 = mul i64 %195, 2
  %197 = getelementptr inbounds i8, i8* %193, i64 %196
  store i8* %197, i8** %20, align 8
  store i32 0, i32* %9, align 4
  br label %198

198:                                              ; preds = %219, %187
  %199 = load i32, i32* %9, align 4
  %200 = load i32, i32* %10, align 4
  %201 = icmp ult i32 %199, %200
  br i1 %201, label %202, label %222

202:                                              ; preds = %198
  %203 = load i8*, i8** %19, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 -1
  store i8* %204, i8** %19, align 8
  %205 = load i8, i8* %204, align 1
  %206 = load i8*, i8** %20, align 8
  %207 = getelementptr inbounds i8, i8* %206, i32 -1
  store i8* %207, i8** %20, align 8
  store i8 %205, i8* %207, align 1
  %208 = load i8*, i8** %19, align 8
  %209 = getelementptr inbounds i8, i8* %208, i32 -1
  store i8* %209, i8** %19, align 8
  %210 = load i8, i8* %209, align 1
  %211 = load i8*, i8** %20, align 8
  %212 = getelementptr inbounds i8, i8* %211, i32 -1
  store i8* %212, i8** %20, align 8
  store i8 %210, i8* %212, align 1
  %213 = load i8, i8* %12, align 1
  %214 = load i8*, i8** %20, align 8
  %215 = getelementptr inbounds i8, i8* %214, i32 -1
  store i8* %215, i8** %20, align 8
  store i8 %213, i8* %215, align 1
  %216 = load i8, i8* %11, align 1
  %217 = load i8*, i8** %20, align 8
  %218 = getelementptr inbounds i8, i8* %217, i32 -1
  store i8* %218, i8** %20, align 8
  store i8 %216, i8* %218, align 1
  br label %219

219:                                              ; preds = %202
  %220 = load i32, i32* %9, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %9, align 4
  br label %198, !llvm.loop !225

222:                                              ; preds = %198
  %223 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %224 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %223, i32 0, i32 4
  store i8 2, i8* %224, align 2
  %225 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %226 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %225, i32 0, i32 5
  store i8 32, i8* %226, align 1
  %227 = load i32, i32* %10, align 4
  %228 = mul i32 %227, 4
  %229 = zext i32 %228 to i64
  %230 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %231 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %230, i32 0, i32 1
  store i64 %229, i64* %231, align 8
  br label %232

232:                                              ; preds = %222, %171
  br label %233

233:                                              ; preds = %232, %126
  br label %234

234:                                              ; preds = %233, %125
  br label %497

235:                                              ; preds = %4
  %236 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %237 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %236, i32 0, i32 2
  %238 = load i8, i8* %237, align 8
  %239 = zext i8 %238 to i32
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %496

241:                                              ; preds = %235
  %242 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %243 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %242, i32 0, i32 3
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = icmp eq i32 %245, 8
  br i1 %246, label %247, label %347

247:                                              ; preds = %241
  %248 = load i32, i32* %8, align 4
  %249 = and i32 %248, 128
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %251, label %300

251:                                              ; preds = %247
  %252 = load i8*, i8** %6, align 8
  %253 = load i32, i32* %10, align 4
  %254 = zext i32 %253 to i64
  %255 = mul i64 %254, 3
  %256 = getelementptr inbounds i8, i8* %252, i64 %255
  store i8* %256, i8** %21, align 8
  %257 = load i8*, i8** %21, align 8
  %258 = load i32, i32* %10, align 4
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds i8, i8* %257, i64 %259
  store i8* %260, i8** %22, align 8
  store i32 1, i32* %9, align 4
  br label %261

261:                                              ; preds = %284, %251
  %262 = load i32, i32* %9, align 4
  %263 = load i32, i32* %10, align 4
  %264 = icmp ult i32 %262, %263
  br i1 %264, label %265, label %287

265:                                              ; preds = %261
  %266 = load i8, i8* %12, align 1
  %267 = load i8*, i8** %22, align 8
  %268 = getelementptr inbounds i8, i8* %267, i32 -1
  store i8* %268, i8** %22, align 8
  store i8 %266, i8* %268, align 1
  %269 = load i8*, i8** %21, align 8
  %270 = getelementptr inbounds i8, i8* %269, i32 -1
  store i8* %270, i8** %21, align 8
  %271 = load i8, i8* %270, align 1
  %272 = load i8*, i8** %22, align 8
  %273 = getelementptr inbounds i8, i8* %272, i32 -1
  store i8* %273, i8** %22, align 8
  store i8 %271, i8* %273, align 1
  %274 = load i8*, i8** %21, align 8
  %275 = getelementptr inbounds i8, i8* %274, i32 -1
  store i8* %275, i8** %21, align 8
  %276 = load i8, i8* %275, align 1
  %277 = load i8*, i8** %22, align 8
  %278 = getelementptr inbounds i8, i8* %277, i32 -1
  store i8* %278, i8** %22, align 8
  store i8 %276, i8* %278, align 1
  %279 = load i8*, i8** %21, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 -1
  store i8* %280, i8** %21, align 8
  %281 = load i8, i8* %280, align 1
  %282 = load i8*, i8** %22, align 8
  %283 = getelementptr inbounds i8, i8* %282, i32 -1
  store i8* %283, i8** %22, align 8
  store i8 %281, i8* %283, align 1
  br label %284

284:                                              ; preds = %265
  %285 = load i32, i32* %9, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %9, align 4
  br label %261, !llvm.loop !226

287:                                              ; preds = %261
  %288 = load i8, i8* %12, align 1
  %289 = load i8*, i8** %22, align 8
  %290 = getelementptr inbounds i8, i8* %289, i32 -1
  store i8* %290, i8** %22, align 8
  store i8 %288, i8* %290, align 1
  %291 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %292 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %291, i32 0, i32 4
  store i8 4, i8* %292, align 2
  %293 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %294 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %293, i32 0, i32 5
  store i8 32, i8* %294, align 1
  %295 = load i32, i32* %10, align 4
  %296 = mul i32 %295, 4
  %297 = zext i32 %296 to i64
  %298 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %299 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %298, i32 0, i32 1
  store i64 %297, i64* %299, align 8
  br label %346

300:                                              ; preds = %247
  %301 = load i8*, i8** %6, align 8
  %302 = load i32, i32* %10, align 4
  %303 = zext i32 %302 to i64
  %304 = mul i64 %303, 3
  %305 = getelementptr inbounds i8, i8* %301, i64 %304
  store i8* %305, i8** %23, align 8
  %306 = load i8*, i8** %23, align 8
  %307 = load i32, i32* %10, align 4
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds i8, i8* %306, i64 %308
  store i8* %309, i8** %24, align 8
  store i32 0, i32* %9, align 4
  br label %310

310:                                              ; preds = %333, %300
  %311 = load i32, i32* %9, align 4
  %312 = load i32, i32* %10, align 4
  %313 = icmp ult i32 %311, %312
  br i1 %313, label %314, label %336

314:                                              ; preds = %310
  %315 = load i8*, i8** %23, align 8
  %316 = getelementptr inbounds i8, i8* %315, i32 -1
  store i8* %316, i8** %23, align 8
  %317 = load i8, i8* %316, align 1
  %318 = load i8*, i8** %24, align 8
  %319 = getelementptr inbounds i8, i8* %318, i32 -1
  store i8* %319, i8** %24, align 8
  store i8 %317, i8* %319, align 1
  %320 = load i8*, i8** %23, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 -1
  store i8* %321, i8** %23, align 8
  %322 = load i8, i8* %321, align 1
  %323 = load i8*, i8** %24, align 8
  %324 = getelementptr inbounds i8, i8* %323, i32 -1
  store i8* %324, i8** %24, align 8
  store i8 %322, i8* %324, align 1
  %325 = load i8*, i8** %23, align 8
  %326 = getelementptr inbounds i8, i8* %325, i32 -1
  store i8* %326, i8** %23, align 8
  %327 = load i8, i8* %326, align 1
  %328 = load i8*, i8** %24, align 8
  %329 = getelementptr inbounds i8, i8* %328, i32 -1
  store i8* %329, i8** %24, align 8
  store i8 %327, i8* %329, align 1
  %330 = load i8, i8* %12, align 1
  %331 = load i8*, i8** %24, align 8
  %332 = getelementptr inbounds i8, i8* %331, i32 -1
  store i8* %332, i8** %24, align 8
  store i8 %330, i8* %332, align 1
  br label %333

333:                                              ; preds = %314
  %334 = load i32, i32* %9, align 4
  %335 = add i32 %334, 1
  store i32 %335, i32* %9, align 4
  br label %310, !llvm.loop !227

336:                                              ; preds = %310
  %337 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %338 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %337, i32 0, i32 4
  store i8 4, i8* %338, align 2
  %339 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %340 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %339, i32 0, i32 5
  store i8 32, i8* %340, align 1
  %341 = load i32, i32* %10, align 4
  %342 = mul i32 %341, 4
  %343 = zext i32 %342 to i64
  %344 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %345 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %344, i32 0, i32 1
  store i64 %343, i64* %345, align 8
  br label %346

346:                                              ; preds = %336, %287
  br label %495

347:                                              ; preds = %241
  %348 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %349 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %348, i32 0, i32 3
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = icmp eq i32 %351, 16
  br i1 %352, label %353, label %494

353:                                              ; preds = %347
  %354 = load i32, i32* %8, align 4
  %355 = and i32 %354, 128
  %356 = icmp ne i32 %355, 0
  br i1 %356, label %357, label %428

357:                                              ; preds = %353
  %358 = load i8*, i8** %6, align 8
  %359 = load i32, i32* %10, align 4
  %360 = zext i32 %359 to i64
  %361 = mul i64 %360, 6
  %362 = getelementptr inbounds i8, i8* %358, i64 %361
  store i8* %362, i8** %25, align 8
  %363 = load i8*, i8** %25, align 8
  %364 = load i32, i32* %10, align 4
  %365 = zext i32 %364 to i64
  %366 = mul i64 %365, 2
  %367 = getelementptr inbounds i8, i8* %363, i64 %366
  store i8* %367, i8** %26, align 8
  store i32 1, i32* %9, align 4
  br label %368

368:                                              ; preds = %409, %357
  %369 = load i32, i32* %9, align 4
  %370 = load i32, i32* %10, align 4
  %371 = icmp ult i32 %369, %370
  br i1 %371, label %372, label %412

372:                                              ; preds = %368
  %373 = load i8, i8* %12, align 1
  %374 = load i8*, i8** %26, align 8
  %375 = getelementptr inbounds i8, i8* %374, i32 -1
  store i8* %375, i8** %26, align 8
  store i8 %373, i8* %375, align 1
  %376 = load i8, i8* %11, align 1
  %377 = load i8*, i8** %26, align 8
  %378 = getelementptr inbounds i8, i8* %377, i32 -1
  store i8* %378, i8** %26, align 8
  store i8 %376, i8* %378, align 1
  %379 = load i8*, i8** %25, align 8
  %380 = getelementptr inbounds i8, i8* %379, i32 -1
  store i8* %380, i8** %25, align 8
  %381 = load i8, i8* %380, align 1
  %382 = load i8*, i8** %26, align 8
  %383 = getelementptr inbounds i8, i8* %382, i32 -1
  store i8* %383, i8** %26, align 8
  store i8 %381, i8* %383, align 1
  %384 = load i8*, i8** %25, align 8
  %385 = getelementptr inbounds i8, i8* %384, i32 -1
  store i8* %385, i8** %25, align 8
  %386 = load i8, i8* %385, align 1
  %387 = load i8*, i8** %26, align 8
  %388 = getelementptr inbounds i8, i8* %387, i32 -1
  store i8* %388, i8** %26, align 8
  store i8 %386, i8* %388, align 1
  %389 = load i8*, i8** %25, align 8
  %390 = getelementptr inbounds i8, i8* %389, i32 -1
  store i8* %390, i8** %25, align 8
  %391 = load i8, i8* %390, align 1
  %392 = load i8*, i8** %26, align 8
  %393 = getelementptr inbounds i8, i8* %392, i32 -1
  store i8* %393, i8** %26, align 8
  store i8 %391, i8* %393, align 1
  %394 = load i8*, i8** %25, align 8
  %395 = getelementptr inbounds i8, i8* %394, i32 -1
  store i8* %395, i8** %25, align 8
  %396 = load i8, i8* %395, align 1
  %397 = load i8*, i8** %26, align 8
  %398 = getelementptr inbounds i8, i8* %397, i32 -1
  store i8* %398, i8** %26, align 8
  store i8 %396, i8* %398, align 1
  %399 = load i8*, i8** %25, align 8
  %400 = getelementptr inbounds i8, i8* %399, i32 -1
  store i8* %400, i8** %25, align 8
  %401 = load i8, i8* %400, align 1
  %402 = load i8*, i8** %26, align 8
  %403 = getelementptr inbounds i8, i8* %402, i32 -1
  store i8* %403, i8** %26, align 8
  store i8 %401, i8* %403, align 1
  %404 = load i8*, i8** %25, align 8
  %405 = getelementptr inbounds i8, i8* %404, i32 -1
  store i8* %405, i8** %25, align 8
  %406 = load i8, i8* %405, align 1
  %407 = load i8*, i8** %26, align 8
  %408 = getelementptr inbounds i8, i8* %407, i32 -1
  store i8* %408, i8** %26, align 8
  store i8 %406, i8* %408, align 1
  br label %409

409:                                              ; preds = %372
  %410 = load i32, i32* %9, align 4
  %411 = add i32 %410, 1
  store i32 %411, i32* %9, align 4
  br label %368, !llvm.loop !228

412:                                              ; preds = %368
  %413 = load i8, i8* %12, align 1
  %414 = load i8*, i8** %26, align 8
  %415 = getelementptr inbounds i8, i8* %414, i32 -1
  store i8* %415, i8** %26, align 8
  store i8 %413, i8* %415, align 1
  %416 = load i8, i8* %11, align 1
  %417 = load i8*, i8** %26, align 8
  %418 = getelementptr inbounds i8, i8* %417, i32 -1
  store i8* %418, i8** %26, align 8
  store i8 %416, i8* %418, align 1
  %419 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %420 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %419, i32 0, i32 4
  store i8 4, i8* %420, align 2
  %421 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %422 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %421, i32 0, i32 5
  store i8 64, i8* %422, align 1
  %423 = load i32, i32* %10, align 4
  %424 = mul i32 %423, 8
  %425 = zext i32 %424 to i64
  %426 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %427 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %426, i32 0, i32 1
  store i64 %425, i64* %427, align 8
  br label %493

428:                                              ; preds = %353
  %429 = load i8*, i8** %6, align 8
  %430 = load i32, i32* %10, align 4
  %431 = zext i32 %430 to i64
  %432 = mul i64 %431, 6
  %433 = getelementptr inbounds i8, i8* %429, i64 %432
  store i8* %433, i8** %27, align 8
  %434 = load i8*, i8** %27, align 8
  %435 = load i32, i32* %10, align 4
  %436 = zext i32 %435 to i64
  %437 = mul i64 %436, 2
  %438 = getelementptr inbounds i8, i8* %434, i64 %437
  store i8* %438, i8** %28, align 8
  store i32 0, i32* %9, align 4
  br label %439

439:                                              ; preds = %480, %428
  %440 = load i32, i32* %9, align 4
  %441 = load i32, i32* %10, align 4
  %442 = icmp ult i32 %440, %441
  br i1 %442, label %443, label %483

443:                                              ; preds = %439
  %444 = load i8*, i8** %27, align 8
  %445 = getelementptr inbounds i8, i8* %444, i32 -1
  store i8* %445, i8** %27, align 8
  %446 = load i8, i8* %445, align 1
  %447 = load i8*, i8** %28, align 8
  %448 = getelementptr inbounds i8, i8* %447, i32 -1
  store i8* %448, i8** %28, align 8
  store i8 %446, i8* %448, align 1
  %449 = load i8*, i8** %27, align 8
  %450 = getelementptr inbounds i8, i8* %449, i32 -1
  store i8* %450, i8** %27, align 8
  %451 = load i8, i8* %450, align 1
  %452 = load i8*, i8** %28, align 8
  %453 = getelementptr inbounds i8, i8* %452, i32 -1
  store i8* %453, i8** %28, align 8
  store i8 %451, i8* %453, align 1
  %454 = load i8*, i8** %27, align 8
  %455 = getelementptr inbounds i8, i8* %454, i32 -1
  store i8* %455, i8** %27, align 8
  %456 = load i8, i8* %455, align 1
  %457 = load i8*, i8** %28, align 8
  %458 = getelementptr inbounds i8, i8* %457, i32 -1
  store i8* %458, i8** %28, align 8
  store i8 %456, i8* %458, align 1
  %459 = load i8*, i8** %27, align 8
  %460 = getelementptr inbounds i8, i8* %459, i32 -1
  store i8* %460, i8** %27, align 8
  %461 = load i8, i8* %460, align 1
  %462 = load i8*, i8** %28, align 8
  %463 = getelementptr inbounds i8, i8* %462, i32 -1
  store i8* %463, i8** %28, align 8
  store i8 %461, i8* %463, align 1
  %464 = load i8*, i8** %27, align 8
  %465 = getelementptr inbounds i8, i8* %464, i32 -1
  store i8* %465, i8** %27, align 8
  %466 = load i8, i8* %465, align 1
  %467 = load i8*, i8** %28, align 8
  %468 = getelementptr inbounds i8, i8* %467, i32 -1
  store i8* %468, i8** %28, align 8
  store i8 %466, i8* %468, align 1
  %469 = load i8*, i8** %27, align 8
  %470 = getelementptr inbounds i8, i8* %469, i32 -1
  store i8* %470, i8** %27, align 8
  %471 = load i8, i8* %470, align 1
  %472 = load i8*, i8** %28, align 8
  %473 = getelementptr inbounds i8, i8* %472, i32 -1
  store i8* %473, i8** %28, align 8
  store i8 %471, i8* %473, align 1
  %474 = load i8, i8* %12, align 1
  %475 = load i8*, i8** %28, align 8
  %476 = getelementptr inbounds i8, i8* %475, i32 -1
  store i8* %476, i8** %28, align 8
  store i8 %474, i8* %476, align 1
  %477 = load i8, i8* %11, align 1
  %478 = load i8*, i8** %28, align 8
  %479 = getelementptr inbounds i8, i8* %478, i32 -1
  store i8* %479, i8** %28, align 8
  store i8 %477, i8* %479, align 1
  br label %480

480:                                              ; preds = %443
  %481 = load i32, i32* %9, align 4
  %482 = add i32 %481, 1
  store i32 %482, i32* %9, align 4
  br label %439, !llvm.loop !229

483:                                              ; preds = %439
  %484 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %485 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %484, i32 0, i32 4
  store i8 4, i8* %485, align 2
  %486 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %487 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %486, i32 0, i32 5
  store i8 64, i8* %487, align 1
  %488 = load i32, i32* %10, align 4
  %489 = mul i32 %488, 8
  %490 = zext i32 %489 to i64
  %491 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %492 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %491, i32 0, i32 1
  store i64 %490, i64* %492, align 8
  br label %493

493:                                              ; preds = %483, %412
  br label %494

494:                                              ; preds = %493, %347
  br label %495

495:                                              ; preds = %494, %346
  br label %496

496:                                              ; preds = %495, %235
  br label %497

497:                                              ; preds = %496, %234
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_read_swap_alpha(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [2 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca [2 x i8], align 1
  %21 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %22 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %23 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %5, align 4
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 2
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %136

30:                                               ; preds = %2
  %31 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %32 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %31, i32 0, i32 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 8
  br i1 %35, label %36, label %73

36:                                               ; preds = %30
  %37 = load i8*, i8** %4, align 8
  %38 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %39 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 %40
  store i8* %41, i8** %6, align 8
  %42 = load i8*, i8** %6, align 8
  store i8* %42, i8** %7, align 8
  store i32 0, i32* %9, align 4
  br label %43

43:                                               ; preds = %69, %36
  %44 = load i32, i32* %9, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %47, label %72

47:                                               ; preds = %43
  %48 = load i8*, i8** %6, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 -1
  store i8* %49, i8** %6, align 8
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %8, align 1
  %51 = load i8*, i8** %6, align 8
  %52 = getelementptr inbounds i8, i8* %51, i32 -1
  store i8* %52, i8** %6, align 8
  %53 = load i8, i8* %52, align 1
  %54 = load i8*, i8** %7, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 -1
  store i8* %55, i8** %7, align 8
  store i8 %53, i8* %55, align 1
  %56 = load i8*, i8** %6, align 8
  %57 = getelementptr inbounds i8, i8* %56, i32 -1
  store i8* %57, i8** %6, align 8
  %58 = load i8, i8* %57, align 1
  %59 = load i8*, i8** %7, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 -1
  store i8* %60, i8** %7, align 8
  store i8 %58, i8* %60, align 1
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 -1
  store i8* %62, i8** %6, align 8
  %63 = load i8, i8* %62, align 1
  %64 = load i8*, i8** %7, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 -1
  store i8* %65, i8** %7, align 8
  store i8 %63, i8* %65, align 1
  %66 = load i8, i8* %8, align 1
  %67 = load i8*, i8** %7, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 -1
  store i8* %68, i8** %7, align 8
  store i8 %66, i8* %68, align 1
  br label %69

69:                                               ; preds = %47
  %70 = load i32, i32* %9, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %9, align 4
  br label %43, !llvm.loop !230

72:                                               ; preds = %43
  br label %135

73:                                               ; preds = %30
  %74 = load i8*, i8** %4, align 8
  %75 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %76 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %75, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %74, i64 %77
  store i8* %78, i8** %10, align 8
  %79 = load i8*, i8** %10, align 8
  store i8* %79, i8** %11, align 8
  store i32 0, i32* %13, align 4
  br label %80

80:                                               ; preds = %131, %73
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %5, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %134

84:                                               ; preds = %80
  %85 = load i8*, i8** %10, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 -1
  store i8* %86, i8** %10, align 8
  %87 = load i8, i8* %86, align 1
  %88 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0
  store i8 %87, i8* %88, align 1
  %89 = load i8*, i8** %10, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 -1
  store i8* %90, i8** %10, align 8
  %91 = load i8, i8* %90, align 1
  %92 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 1
  store i8 %91, i8* %92, align 1
  %93 = load i8*, i8** %10, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 -1
  store i8* %94, i8** %10, align 8
  %95 = load i8, i8* %94, align 1
  %96 = load i8*, i8** %11, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 -1
  store i8* %97, i8** %11, align 8
  store i8 %95, i8* %97, align 1
  %98 = load i8*, i8** %10, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 -1
  store i8* %99, i8** %10, align 8
  %100 = load i8, i8* %99, align 1
  %101 = load i8*, i8** %11, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 -1
  store i8* %102, i8** %11, align 8
  store i8 %100, i8* %102, align 1
  %103 = load i8*, i8** %10, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 -1
  store i8* %104, i8** %10, align 8
  %105 = load i8, i8* %104, align 1
  %106 = load i8*, i8** %11, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 -1
  store i8* %107, i8** %11, align 8
  store i8 %105, i8* %107, align 1
  %108 = load i8*, i8** %10, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 -1
  store i8* %109, i8** %10, align 8
  %110 = load i8, i8* %109, align 1
  %111 = load i8*, i8** %11, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 -1
  store i8* %112, i8** %11, align 8
  store i8 %110, i8* %112, align 1
  %113 = load i8*, i8** %10, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 -1
  store i8* %114, i8** %10, align 8
  %115 = load i8, i8* %114, align 1
  %116 = load i8*, i8** %11, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 -1
  store i8* %117, i8** %11, align 8
  store i8 %115, i8* %117, align 1
  %118 = load i8*, i8** %10, align 8
  %119 = getelementptr inbounds i8, i8* %118, i32 -1
  store i8* %119, i8** %10, align 8
  %120 = load i8, i8* %119, align 1
  %121 = load i8*, i8** %11, align 8
  %122 = getelementptr inbounds i8, i8* %121, i32 -1
  store i8* %122, i8** %11, align 8
  store i8 %120, i8* %122, align 1
  %123 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0
  %124 = load i8, i8* %123, align 1
  %125 = load i8*, i8** %11, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 -1
  store i8* %126, i8** %11, align 8
  store i8 %124, i8* %126, align 1
  %127 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = load i8*, i8** %11, align 8
  %130 = getelementptr inbounds i8, i8* %129, i32 -1
  store i8* %130, i8** %11, align 8
  store i8 %128, i8* %130, align 1
  br label %131

131:                                              ; preds = %84
  %132 = load i32, i32* %13, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %13, align 4
  br label %80, !llvm.loop !231

134:                                              ; preds = %80
  br label %135

135:                                              ; preds = %134, %72
  br label %219

136:                                              ; preds = %2
  %137 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %138 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %137, i32 0, i32 2
  %139 = load i8, i8* %138, align 8
  %140 = zext i8 %139 to i32
  %141 = icmp eq i32 %140, 4
  br i1 %141, label %142, label %218

142:                                              ; preds = %136
  %143 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %144 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %143, i32 0, i32 3
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = icmp eq i32 %146, 8
  br i1 %147, label %148, label %175

148:                                              ; preds = %142
  %149 = load i8*, i8** %4, align 8
  %150 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %151 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %150, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds i8, i8* %149, i64 %152
  store i8* %153, i8** %14, align 8
  %154 = load i8*, i8** %14, align 8
  store i8* %154, i8** %15, align 8
  store i32 0, i32* %17, align 4
  br label %155

155:                                              ; preds = %171, %148
  %156 = load i32, i32* %17, align 4
  %157 = load i32, i32* %5, align 4
  %158 = icmp ult i32 %156, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %155
  %160 = load i8*, i8** %14, align 8
  %161 = getelementptr inbounds i8, i8* %160, i32 -1
  store i8* %161, i8** %14, align 8
  %162 = load i8, i8* %161, align 1
  store i8 %162, i8* %16, align 1
  %163 = load i8*, i8** %14, align 8
  %164 = getelementptr inbounds i8, i8* %163, i32 -1
  store i8* %164, i8** %14, align 8
  %165 = load i8, i8* %164, align 1
  %166 = load i8*, i8** %15, align 8
  %167 = getelementptr inbounds i8, i8* %166, i32 -1
  store i8* %167, i8** %15, align 8
  store i8 %165, i8* %167, align 1
  %168 = load i8, i8* %16, align 1
  %169 = load i8*, i8** %15, align 8
  %170 = getelementptr inbounds i8, i8* %169, i32 -1
  store i8* %170, i8** %15, align 8
  store i8 %168, i8* %170, align 1
  br label %171

171:                                              ; preds = %159
  %172 = load i32, i32* %17, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %17, align 4
  br label %155, !llvm.loop !232

174:                                              ; preds = %155
  br label %217

175:                                              ; preds = %142
  %176 = load i8*, i8** %4, align 8
  %177 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %178 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %177, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i8, i8* %176, i64 %179
  store i8* %180, i8** %18, align 8
  %181 = load i8*, i8** %18, align 8
  store i8* %181, i8** %19, align 8
  store i32 0, i32* %21, align 4
  br label %182

182:                                              ; preds = %213, %175
  %183 = load i32, i32* %21, align 4
  %184 = load i32, i32* %5, align 4
  %185 = icmp ult i32 %183, %184
  br i1 %185, label %186, label %216

186:                                              ; preds = %182
  %187 = load i8*, i8** %18, align 8
  %188 = getelementptr inbounds i8, i8* %187, i32 -1
  store i8* %188, i8** %18, align 8
  %189 = load i8, i8* %188, align 1
  %190 = getelementptr inbounds [2 x i8], [2 x i8]* %20, i64 0, i64 0
  store i8 %189, i8* %190, align 1
  %191 = load i8*, i8** %18, align 8
  %192 = getelementptr inbounds i8, i8* %191, i32 -1
  store i8* %192, i8** %18, align 8
  %193 = load i8, i8* %192, align 1
  %194 = getelementptr inbounds [2 x i8], [2 x i8]* %20, i64 0, i64 1
  store i8 %193, i8* %194, align 1
  %195 = load i8*, i8** %18, align 8
  %196 = getelementptr inbounds i8, i8* %195, i32 -1
  store i8* %196, i8** %18, align 8
  %197 = load i8, i8* %196, align 1
  %198 = load i8*, i8** %19, align 8
  %199 = getelementptr inbounds i8, i8* %198, i32 -1
  store i8* %199, i8** %19, align 8
  store i8 %197, i8* %199, align 1
  %200 = load i8*, i8** %18, align 8
  %201 = getelementptr inbounds i8, i8* %200, i32 -1
  store i8* %201, i8** %18, align 8
  %202 = load i8, i8* %201, align 1
  %203 = load i8*, i8** %19, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 -1
  store i8* %204, i8** %19, align 8
  store i8 %202, i8* %204, align 1
  %205 = getelementptr inbounds [2 x i8], [2 x i8]* %20, i64 0, i64 0
  %206 = load i8, i8* %205, align 1
  %207 = load i8*, i8** %19, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 -1
  store i8* %208, i8** %19, align 8
  store i8 %206, i8* %208, align 1
  %209 = getelementptr inbounds [2 x i8], [2 x i8]* %20, i64 0, i64 1
  %210 = load i8, i8* %209, align 1
  %211 = load i8*, i8** %19, align 8
  %212 = getelementptr inbounds i8, i8* %211, i32 -1
  store i8* %212, i8** %19, align 8
  store i8 %210, i8* %212, align 1
  br label %213

213:                                              ; preds = %186
  %214 = load i32, i32* %21, align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %21, align 4
  br label %182, !llvm.loop !233

216:                                              ; preds = %182
  br label %217

217:                                              ; preds = %216, %174
  br label %218

218:                                              ; preds = %217, %136
  br label %219

219:                                              ; preds = %218, %135
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_uint_31(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = shl i32 %8, 24
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl i32 %13, 16
  %15 = add i32 %9, %14
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, 8
  %21 = add i32 %15, %20
  %22 = load i8*, i8** %4, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = add i32 %21, %25
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %5, align 4
  %28 = icmp ugt i32 %27, 2147483647
  br i1 %28, label %29, label %31

29:                                               ; preds = %2
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %30, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.242, i64 0, i64 0)) #13
  unreachable

31:                                               ; preds = %2
  %32 = load i32, i32* %5, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_uint_32(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl i32 %6, 24
  %8 = load i8*, i8** %2, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl i32 %11, 16
  %13 = add i32 %7, %12
  %14 = load i8*, i8** %2, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 2
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl i32 %17, 8
  %19 = add i32 %13, %18
  %20 = load i8*, i8** %2, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = add i32 %19, %23
  store i32 %24, i32* %3, align 4
  %25 = load i32, i32* %3, align 4
  ret i32 %25
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_int_32(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl i32 %7, 24
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl i32 %12, 16
  %14 = add i32 %8, %13
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl i32 %18, 8
  %20 = add i32 %14, %19
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add i32 %20, %24
  store i32 %25, i32* %4, align 4
  %26 = load i32, i32* %4, align 4
  %27 = and i32 %26, -2147483648
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %1
  %30 = load i32, i32* %4, align 4
  store i32 %30, i32* %2, align 4
  br label %42

31:                                               ; preds = %1
  %32 = load i32, i32* %4, align 4
  %33 = xor i32 %32, -1
  %34 = add i32 %33, 1
  store i32 %34, i32* %4, align 4
  %35 = load i32, i32* %4, align 4
  %36 = and i32 %35, -2147483648
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = load i32, i32* %4, align 4
  %40 = sub nsw i32 0, %39
  store i32 %40, i32* %2, align 4
  br label %42

41:                                               ; preds = %31
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %41, %38, %29
  %43 = load i32, i32* %2, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i16 @png_get_uint_16(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl i32 %6, 8
  %8 = load i8*, i8** %2, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = add i32 %7, %11
  store i32 %12, i32* %3, align 4
  %13 = load i32, i32* %3, align 4
  %14 = trunc i32 %13 to i16
  ret i16 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_sig(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 67
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp sge i32 %10, 8
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  br label %61

13:                                               ; preds = %2
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 67
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  store i64 %17, i64* %5, align 8
  %18 = load i64, i64* %5, align 8
  %19 = sub i64 8, %18
  store i64 %19, i64* %6, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 142
  store i32 17, i32* %21, align 4
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %23 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 15
  %25 = load i64, i64* %5, align 8
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %24, i64 0, i64 %25
  %27 = load i64, i64* %6, align 8
  call void bitcast (void (%struct.png_struct_def.125*, i8*, i64)* @png_read_data to void (%struct.png_struct_def*, i8*, i64)*)(%struct.png_struct_def* noundef %22, i8* noundef %26, i64 noundef %27)
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 67
  store i8 8, i8* %29, align 1
  %30 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 15
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %31, i64 0, i64 0
  %33 = load i64, i64* %5, align 8
  %34 = load i64, i64* %6, align 8
  %35 = call i32 @png_sig_cmp(i8* noundef %32, i64 noundef %33, i64 noundef %34)
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %13
  %38 = load i64, i64* %5, align 8
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %40, label %51

40:                                               ; preds = %37
  %41 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 15
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %42, i64 0, i64 0
  %44 = load i64, i64* %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = sub i64 %45, 4
  %47 = call i32 @png_sig_cmp(i8* noundef %43, i64 noundef %44, i64 noundef %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %40
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %50, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.245, i64 0, i64 0)) #13
  unreachable

51:                                               ; preds = %40, %37
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %52, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.246, i64 0, i64 0)) #13
  unreachable

53:                                               ; preds = %13
  %54 = load i64, i64* %5, align 8
  %55 = icmp ult i64 %54, 3
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 15
  %59 = load i32, i32* %58, align 4
  %60 = or i32 %59, 4096
  store i32 %60, i32* %58, align 4
  br label %61

61:                                               ; preds = %12, %56, %53
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_read_chunk_header(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca [8 x i8], align 1
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 142
  store i32 33, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  call void bitcast (void (%struct.png_struct_def.125*, i8*, i64)* @png_read_data to void (%struct.png_struct_def*, i8*, i64)*)(%struct.png_struct_def* noundef %7, i8* noundef %8, i64 noundef 8)
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %10 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  %11 = call i32 @png_get_uint_31(%struct.png_struct_def* noundef %9, i8* noundef %10)
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  %13 = getelementptr inbounds i8, i8* %12, i64 4
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = and i32 255, %16
  %18 = shl i32 %17, 24
  %19 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = and i32 255, %23
  %25 = shl i32 %24, 16
  %26 = or i32 %18, %25
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  %28 = getelementptr inbounds i8, i8* %27, i64 4
  %29 = getelementptr inbounds i8, i8* %28, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = and i32 255, %31
  %33 = shl i32 %32, 8
  %34 = or i32 %26, %33
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  %37 = getelementptr inbounds i8, i8* %36, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = and i32 255, %39
  %41 = shl i32 %40, 0
  %42 = or i32 %34, %41
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 44
  store i32 %42, i32* %44, align 8
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_reset_crc(%struct.png_struct_def* noundef %45)
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %47 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 0
  %48 = getelementptr inbounds i8, i8* %47, i64 4
  call void @png_calculate_crc(%struct.png_struct_def* noundef %46, i8* noundef %48, i64 noundef 4)
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 44
  %52 = load i32, i32* %51, align 8
  call void @png_check_chunk_name(%struct.png_struct_def* noundef %49, i32 noundef %52)
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %54 = load i32, i32* %4, align 4
  call void @png_check_chunk_length(%struct.png_struct_def* noundef %53, i32 noundef %54)
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 142
  store i32 65, i32* %56, align 4
  %57 = load i32, i32* %4, align 4
  ret i32 %57
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_check_chunk_name(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  store i32 %8, i32* %6, align 4
  store i32 1, i32* %5, align 4
  br label %9

9:                                                ; preds = %31, %2
  %10 = load i32, i32* %5, align 4
  %11 = icmp sle i32 %10, 4
  br i1 %11, label %12, label %34

12:                                               ; preds = %9
  %13 = load i32, i32* %6, align 4
  %14 = and i32 %13, 255
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 65
  br i1 %16, label %26, label %17

17:                                               ; preds = %12
  %18 = load i32, i32* %7, align 4
  %19 = icmp sgt i32 %18, 122
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = load i32, i32* %7, align 4
  %22 = icmp sgt i32 %21, 90
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4
  %25 = icmp slt i32 %24, 97
  br i1 %25, label %26, label %28

26:                                               ; preds = %23, %17, %12
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49.254, i64 0, i64 0)) #13
  unreachable

28:                                               ; preds = %23, %20
  %29 = load i32, i32* %6, align 4
  %30 = lshr i32 %29, 8
  store i32 %30, i32* %6, align 4
  br label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %9, !llvm.loop !234

34:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_check_chunk_length(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 2147483647, i64* %5, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 136
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 136
  %15 = load i64, i64* %14, align 8
  %16 = load i64, i64* %5, align 8
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 136
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %5, align 8
  br label %22

22:                                               ; preds = %18, %12, %2
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 44
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1229209940
  br i1 %26, label %27, label %103

27:                                               ; preds = %22
  store i64 2147483647, i64* %6, align 8
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 37
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 65
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = mul i64 %31, %35
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 62
  %39 = load i8, i8* %38, align 8
  %40 = zext i8 %39 to i32
  %41 = icmp sgt i32 %40, 8
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i32 2, i32 1
  %44 = sext i32 %43 to i64
  %45 = mul i64 %36, %44
  %46 = add i64 %45, 1
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 58
  %49 = load i8, i8* %48, align 4
  %50 = zext i8 %49 to i32
  %51 = icmp ne i32 %50, 0
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 6, i32 0
  %54 = sext i32 %53 to i64
  %55 = add i64 %46, %54
  store i64 %55, i64* %7, align 8
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 38
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = load i64, i64* %7, align 8
  %61 = udiv i64 4294967295, %60
  %62 = icmp ugt i64 %59, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %27
  store i64 2147483647, i64* %6, align 8
  br label %71

64:                                               ; preds = %27
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 38
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = load i64, i64* %7, align 8
  %70 = mul i64 %68, %69
  store i64 %70, i64* %6, align 8
  br label %71

71:                                               ; preds = %64, %63
  %72 = load i64, i64* %7, align 8
  %73 = icmp ugt i64 %72, 32566
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  br label %77

75:                                               ; preds = %71
  %76 = load i64, i64* %7, align 8
  br label %77

77:                                               ; preds = %75, %74
  %78 = phi i64 [ 32566, %74 ], [ %76, %75 ]
  store i64 %78, i64* %7, align 8
  %79 = load i64, i64* %6, align 8
  %80 = load i64, i64* %7, align 8
  %81 = udiv i64 %79, %80
  %82 = add i64 %81, 1
  %83 = mul i64 5, %82
  %84 = add i64 6, %83
  %85 = load i64, i64* %6, align 8
  %86 = add i64 %85, %84
  store i64 %86, i64* %6, align 8
  %87 = load i64, i64* %6, align 8
  %88 = icmp ult i64 %87, 2147483647
  br i1 %88, label %89, label %91

89:                                               ; preds = %77
  %90 = load i64, i64* %6, align 8
  br label %92

91:                                               ; preds = %77
  br label %92

92:                                               ; preds = %91, %89
  %93 = phi i64 [ %90, %89 ], [ 2147483647, %91 ]
  store i64 %93, i64* %6, align 8
  %94 = load i64, i64* %5, align 8
  %95 = load i64, i64* %6, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = load i64, i64* %6, align 8
  br label %101

99:                                               ; preds = %92
  %100 = load i64, i64* %5, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %100, %99 ]
  store i64 %102, i64* %5, align 8
  br label %103

103:                                              ; preds = %101, %22
  %104 = load i32, i32* %4, align 4
  %105 = zext i32 %104 to i64
  %106 = load i64, i64* %5, align 8
  %107 = icmp ugt i64 %105, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %109, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50.253, i64 0, i64 0))
  br label %110

110:                                              ; preds = %108, %103
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_crc_read(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %19

10:                                               ; preds = %3
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load i32, i32* %6, align 4
  %14 = zext i32 %13 to i64
  call void bitcast (void (%struct.png_struct_def.125*, i8*, i64)* @png_read_data to void (%struct.png_struct_def*, i8*, i64)*)(%struct.png_struct_def* noundef %11, i8* noundef %12, i64 noundef %14)
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = load i32, i32* %6, align 4
  %18 = zext i32 %17 to i64
  call void @png_calculate_crc(%struct.png_struct_def* noundef %15, i8* noundef %16, i64 noundef %18)
  br label %19

19:                                               ; preds = %10, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_crc_finish(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [1024 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  br label %8

8:                                                ; preds = %17, %2
  %9 = load i32, i32* %5, align 4
  %10 = icmp ugt i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %8
  store i32 1024, i32* %6, align 4
  %12 = load i32, i32* %6, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp ugt i32 %12, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = load i32, i32* %5, align 4
  store i32 %16, i32* %6, align 4
  br label %17

17:                                               ; preds = %15, %11
  %18 = load i32, i32* %6, align 4
  %19 = load i32, i32* %5, align 4
  %20 = sub i32 %19, %18
  store i32 %20, i32* %5, align 4
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %23 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %21, i8* noundef %22, i32 noundef %23)
  br label %8, !llvm.loop !235

24:                                               ; preds = %8
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = call i32 @png_crc_error(%struct.png_struct_def* noundef %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %52

28:                                               ; preds = %24
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 44
  %31 = load i32, i32* %30, align 8
  %32 = lshr i32 %31, 29
  %33 = and i32 1, %32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %28
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 16
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 512
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %49

41:                                               ; preds = %28
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 16
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 1024
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %41, %35
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %48, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.259, i64 0, i64 0))
  br label %51

49:                                               ; preds = %41, %35
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %50, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.259, i64 0, i64 0)) #13
  unreachable

51:                                               ; preds = %47
  store i32 1, i32* %3, align 4
  br label %53

52:                                               ; preds = %24
  store i32 0, i32* %3, align 4
  br label %53

53:                                               ; preds = %52, %51
  %54 = load i32, i32* %3, align 4
  ret i32 %54
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_crc_error(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca [4 x i8], align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 1, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 44
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 29
  %11 = and i32 1, %10
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %1
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 768
  %18 = icmp eq i32 %17, 768
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  store i32 0, i32* %6, align 4
  br label %20

20:                                               ; preds = %19, %13
  br label %29

21:                                               ; preds = %1
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 16
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 2048
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  store i32 0, i32* %6, align 4
  br label %28

28:                                               ; preds = %27, %21
  br label %29

29:                                               ; preds = %28, %20
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 142
  store i32 129, i32* %31, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  call void bitcast (void (%struct.png_struct_def.125*, i8*, i64)* @png_read_data to void (%struct.png_struct_def*, i8*, i64)*)(%struct.png_struct_def* noundef %32, i8* noundef %33, i64 noundef 4)
  %34 = load i32, i32* %6, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %64

36:                                               ; preds = %29
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl i32 %39, 24
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl i32 %44, 16
  %46 = add i32 %40, %45
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  %48 = getelementptr inbounds i8, i8* %47, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl i32 %50, 8
  %52 = add i32 %46, %51
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  %54 = getelementptr inbounds i8, i8* %53, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = add i32 %52, %56
  store i32 %57, i32* %5, align 4
  %58 = load i32, i32* %5, align 4
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 51
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %58, %61
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %2, align 4
  br label %65

64:                                               ; preds = %29
  store i32 0, i32* %2, align 4
  br label %65

65:                                               ; preds = %64, %36
  %66 = load i32, i32* %2, align 4
  ret i32 %66
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_zlib_inflate(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 70
  %8 = load i8, i8* %7, align 8
  %9 = zext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %2
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ugt i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 19
  %20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = ashr i32 %23, 4
  %25 = icmp sgt i32 %24, 7
  br i1 %25, label %26, label %30

26:                                               ; preds = %17
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 19
  %29 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %28, i32 0, i32 6
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.262, i64 0, i64 0), i8** %29, align 8
  store i32 -3, i32* %3, align 4
  br label %38

30:                                               ; preds = %17
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 70
  store i8 0, i8* %32, align 8
  br label %33

33:                                               ; preds = %30, %11, %2
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 19
  %36 = load i32, i32* %5, align 4
  %37 = call i32 @inflate(%struct.z_stream_s* noundef %35, i32 noundef %36)
  store i32 %37, i32* %3, align 4
  br label %38

38:                                               ; preds = %33, %26
  %39 = load i32, i32* %3, align 4
  ret i32 %39
}

declare i32 @inflate(%struct.z_stream_s* noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_IHDR(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [13 x i8], align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 15
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %21, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0)) #13
  unreachable

22:                                               ; preds = %3
  %23 = load i32, i32* %6, align 4
  %24 = icmp ne i32 %23, 13
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %22
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 15
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %32, i8* noundef %33, i32 noundef 13)
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %35 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %34, i32 noundef 0)
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %37 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 0
  %38 = call i32 @png_get_uint_31(%struct.png_struct_def* noundef %36, i8* noundef %37)
  store i32 %38, i32* %8, align 4
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 0
  %41 = getelementptr inbounds i8, i8* %40, i64 4
  %42 = call i32 @png_get_uint_31(%struct.png_struct_def* noundef %39, i8* noundef %41)
  store i32 %42, i32* %9, align 4
  %43 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  store i32 %45, i32* %10, align 4
  %46 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  store i32 %48, i32* %11, align 4
  %49 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 10
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  store i32 %51, i32* %12, align 4
  %52 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 11
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  store i32 %54, i32* %13, align 4
  %55 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 12
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  store i32 %57, i32* %14, align 4
  %58 = load i32, i32* %8, align 4
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 37
  store i32 %58, i32* %60, align 8
  %61 = load i32, i32* %9, align 4
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 38
  store i32 %61, i32* %63, align 4
  %64 = load i32, i32* %10, align 4
  %65 = trunc i32 %64 to i8
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 62
  store i8 %65, i8* %67, align 8
  %68 = load i32, i32* %14, align 4
  %69 = trunc i32 %68 to i8
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 58
  store i8 %69, i8* %71, align 4
  %72 = load i32, i32* %11, align 4
  %73 = trunc i32 %72 to i8
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 61
  store i8 %73, i8* %75, align 1
  %76 = load i32, i32* %13, align 4
  %77 = trunc i32 %76 to i8
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 124
  store i8 %77, i8* %79, align 4
  %80 = load i32, i32* %12, align 4
  %81 = trunc i32 %80 to i8
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 132
  store i8 %81, i8* %83, align 8
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 61
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  switch i32 %87, label %88 [
    i32 0, label %89
    i32 3, label %89
    i32 2, label %92
    i32 4, label %95
    i32 6, label %98
  ]

88:                                               ; preds = %27
  br label %89

89:                                               ; preds = %27, %27, %88
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 65
  store i8 1, i8* %91, align 1
  br label %101

92:                                               ; preds = %27
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %94 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %93, i32 0, i32 65
  store i8 3, i8* %94, align 1
  br label %101

95:                                               ; preds = %27
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 65
  store i8 2, i8* %97, align 1
  br label %101

98:                                               ; preds = %27
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 65
  store i8 4, i8* %100, align 1
  br label %101

101:                                              ; preds = %98, %95, %92, %89
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 62
  %104 = load i8, i8* %103, align 8
  %105 = zext i8 %104 to i32
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %107 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %106, i32 0, i32 65
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nsw i32 %105, %109
  %111 = trunc i32 %110 to i8
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 64
  store i8 %111, i8* %113, align 2
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %115 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %114, i32 0, i32 64
  %116 = load i8, i8* %115, align 2
  %117 = zext i8 %116 to i32
  %118 = icmp sge i32 %117, 8
  br i1 %118, label %119, label %130

119:                                              ; preds = %101
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %120, i32 0, i32 37
  %122 = load i32, i32* %121, align 8
  %123 = zext i32 %122 to i64
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 64
  %126 = load i8, i8* %125, align 2
  %127 = zext i8 %126 to i64
  %128 = lshr i64 %127, 3
  %129 = mul i64 %123, %128
  br label %142

130:                                              ; preds = %101
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 37
  %133 = load i32, i32* %132, align 8
  %134 = zext i32 %133 to i64
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %135, i32 0, i32 64
  %137 = load i8, i8* %136, align 2
  %138 = zext i8 %137 to i64
  %139 = mul i64 %134, %138
  %140 = add i64 %139, 7
  %141 = lshr i64 %140, 3
  br label %142

142:                                              ; preds = %130, %119
  %143 = phi i64 [ %129, %119 ], [ %141, %130 ]
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %144, i32 0, i32 41
  store i64 %143, i64* %145, align 8
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %147 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %148 = load i32, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = load i32, i32* %10, align 4
  %151 = load i32, i32* %11, align 4
  %152 = load i32, i32* %14, align 4
  %153 = load i32, i32* %12, align 4
  %154 = load i32, i32* %13, align 4
  call void @png_set_IHDR(%struct.png_struct_def* noundef %146, %struct.png_info_def* noundef %147, i32 noundef %148, i32 noundef %149, i32 noundef %150, i32 noundef %151, i32 noundef %152, i32 noundef %153, i32 noundef %154)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_PLTE(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [256 x %struct.png_color_struct], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.png_color_struct*, align 8
  %12 = alloca [3 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 15
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %19, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

20:                                               ; preds = %3
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 15
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 2
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0)) #13
  unreachable

28:                                               ; preds = %20
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 15
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %36 = load i32, i32* %6, align 4
  %37 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %35, i32 noundef %36)
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %38, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %182

39:                                               ; preds = %28
  br label %40

40:                                               ; preds = %39
  br label %41

41:                                               ; preds = %40
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 15
  %44 = load i32, i32* %43, align 4
  %45 = or i32 %44, 2
  store i32 %45, i32* %43, align 4
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 61
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %41
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %54 = load i32, i32* %6, align 4
  %55 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %53, i32 noundef %54)
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %56, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.271, i64 0, i64 0))
  br label %182

57:                                               ; preds = %41
  %58 = load i32, i32* %6, align 4
  %59 = icmp ugt i32 %58, 768
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = load i32, i32* %6, align 4
  %62 = urem i32 %61, 3
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %60, %57
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %66 = load i32, i32* %6, align 4
  %67 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %65, i32 noundef %66)
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 61
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp ne i32 %71, 3
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %74, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %77

75:                                               ; preds = %64
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %76, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0)) #13
  unreachable

77:                                               ; preds = %73
  br label %182

78:                                               ; preds = %60
  %79 = load i32, i32* %6, align 4
  %80 = sdiv i32 %79, 3
  store i32 %80, i32* %9, align 4
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 61
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = icmp eq i32 %84, 3
  br i1 %85, label %86, label %92

86:                                               ; preds = %78
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 62
  %89 = load i8, i8* %88, align 8
  %90 = zext i8 %89 to i32
  %91 = shl i32 1, %90
  store i32 %91, i32* %8, align 4
  br label %93

92:                                               ; preds = %78
  store i32 256, i32* %8, align 4
  br label %93

93:                                               ; preds = %92, %86
  %94 = load i32, i32* %9, align 4
  %95 = load i32, i32* %8, align 4
  %96 = icmp sgt i32 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = load i32, i32* %8, align 4
  store i32 %98, i32* %9, align 4
  br label %99

99:                                               ; preds = %97, %93
  store i32 0, i32* %10, align 4
  %100 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %7, i64 0, i64 0
  store %struct.png_color_struct* %100, %struct.png_color_struct** %11, align 8
  br label %101

101:                                              ; preds = %120, %99
  %102 = load i32, i32* %10, align 4
  %103 = load i32, i32* %9, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %125

105:                                              ; preds = %101
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %107 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %106, i8* noundef %107, i32 noundef 3)
  %108 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  %109 = load i8, i8* %108, align 1
  %110 = load %struct.png_color_struct*, %struct.png_color_struct** %11, align 8
  %111 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %110, i32 0, i32 0
  store i8 %109, i8* %111, align 1
  %112 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = load %struct.png_color_struct*, %struct.png_color_struct** %11, align 8
  %115 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %114, i32 0, i32 1
  store i8 %113, i8* %115, align 1
  %116 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = load %struct.png_color_struct*, %struct.png_color_struct** %11, align 8
  %119 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %118, i32 0, i32 2
  store i8 %117, i8* %119, align 1
  br label %120

120:                                              ; preds = %105
  %121 = load i32, i32* %10, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %10, align 4
  %123 = load %struct.png_color_struct*, %struct.png_color_struct** %11, align 8
  %124 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %123, i32 1
  store %struct.png_color_struct* %124, %struct.png_color_struct** %11, align 8
  br label %101, !llvm.loop !236

125:                                              ; preds = %101
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %127 = load i32, i32* %6, align 4
  %128 = load i32, i32* %9, align 4
  %129 = mul i32 %128, 3
  %130 = sub i32 %127, %129
  %131 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %126, i32 noundef %130)
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %133 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %134 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %7, i64 0, i64 0
  %135 = load i32, i32* %9, align 4
  call void @png_set_PLTE(%struct.png_struct_def* noundef %132, %struct.png_info_def* noundef %133, %struct.png_color_struct* noundef %134, i32 noundef %135)
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 55
  %138 = load i16, i16* %137, align 8
  %139 = zext i16 %138 to i32
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %150, label %141

141:                                              ; preds = %125
  %142 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %143 = icmp ne %struct.png_info_def* %142, null
  br i1 %143, label %144, label %160

144:                                              ; preds = %141
  %145 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %146 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %145, i32 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = and i32 %147, 16
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %160

150:                                              ; preds = %144, %125
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 55
  store i16 0, i16* %152, align 8
  %153 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %154 = icmp ne %struct.png_info_def* %153, null
  br i1 %154, label %155, label %158

155:                                              ; preds = %150
  %156 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %157 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %156, i32 0, i32 6
  store i16 0, i16* %157, align 2
  br label %158

158:                                              ; preds = %155, %150
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %159, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10.272, i64 0, i64 0))
  br label %160

160:                                              ; preds = %158, %144, %141
  %161 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %162 = icmp ne %struct.png_info_def* %161, null
  br i1 %162, label %163, label %171

163:                                              ; preds = %160
  %164 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %165 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %164, i32 0, i32 2
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 64
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %163
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %170, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11.273, i64 0, i64 0))
  br label %171

171:                                              ; preds = %169, %163, %160
  %172 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %173 = icmp ne %struct.png_info_def* %172, null
  br i1 %173, label %174, label %182

174:                                              ; preds = %171
  %175 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %176 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %175, i32 0, i32 2
  %177 = load i32, i32* %176, align 8
  %178 = and i32 %177, 32
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %181, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12.274, i64 0, i64 0))
  br label %182

182:                                              ; preds = %34, %52, %77, %180, %174, %171
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_IEND(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 15
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 15
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %12, %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %19, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0)) #13
  unreachable

20:                                               ; preds = %12
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 15
  %23 = load i32, i32* %22, align 4
  %24 = or i32 %23, 24
  store i32 %24, i32* %22, align 4
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %25, i32 noundef %26)
  %28 = load i32, i32* %6, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %31, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %32

32:                                               ; preds = %30, %20
  %33 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_gAMA(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [4 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %15, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 15
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 6
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %24 = load i32, i32* %6, align 4
  %25 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %23, i32 noundef %24)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %52

27:                                               ; preds = %16
  br label %28

28:                                               ; preds = %27
  %29 = load i32, i32* %6, align 4
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %32, i32 noundef %33)
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %52

36:                                               ; preds = %28
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %37, i8* noundef %38, i32 noundef 4)
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %39, i32 noundef 0)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %36
  br label %52

43:                                               ; preds = %36
  %44 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %45 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %44)
  store i32 %45, i32* %7, align 4
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 145
  %49 = load i32, i32* %7, align 4
  call void @png_colorspace_set_gamma(%struct.png_struct_def* noundef %46, %struct.png_colorspace* noundef %48, i32 noundef %49)
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %51 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %50, %struct.png_info_def* noundef %51)
  br label %52

52:                                               ; preds = %43, %42, %31, %22
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_get_fixed_point(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 24
  %11 = load i8*, i8** %5, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl i32 %14, 16
  %16 = add i32 %10, %15
  %17 = load i8*, i8** %5, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl i32 %20, 8
  %22 = add i32 %16, %21
  %23 = load i8*, i8** %5, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add i32 %22, %26
  store i32 %27, i32* %6, align 4
  %28 = load i32, i32* %6, align 4
  %29 = icmp ule i32 %28, 2147483647
  br i1 %29, label %30, label %32

30:                                               ; preds = %2
  %31 = load i32, i32* %6, align 4
  store i32 %31, i32* %3, align 4
  br label %38

32:                                               ; preds = %2
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %34 = icmp ne %struct.png_struct_def* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %36, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.59.279, i64 0, i64 0))
  br label %37

37:                                               ; preds = %35, %32
  store i32 -1, i32* %3, align 4
  br label %38

38:                                               ; preds = %37, %30
  %39 = load i32, i32* %3, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_sBIT(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca [4 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 6
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %25, i32 noundef %26)
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %28, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %170

29:                                               ; preds = %18
  br label %30

30:                                               ; preds = %29
  %31 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %32 = icmp ne %struct.png_info_def* %31, null
  br i1 %32, label %33, label %44

33:                                               ; preds = %30
  %34 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 2
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %33
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %41 = load i32, i32* %6, align 4
  %42 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %40, i32 noundef %41)
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %43, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %170

44:                                               ; preds = %33, %30
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 61
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  store i32 3, i32* %7, align 4
  store i8 8, i8* %9, align 1
  br label %59

51:                                               ; preds = %44
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 65
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  store i32 %55, i32* %7, align 4
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 62
  %58 = load i8, i8* %57, align 8
  store i8 %58, i8* %9, align 1
  br label %59

59:                                               ; preds = %51, %50
  %60 = load i32, i32* %6, align 4
  %61 = load i32, i32* %7, align 4
  %62 = icmp ne i32 %60, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = load i32, i32* %6, align 4
  %65 = icmp ugt i32 %64, 4
  br i1 %65, label %66, label %71

66:                                               ; preds = %63, %59
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %67, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = load i32, i32* %6, align 4
  %70 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %68, i32 noundef %69)
  br label %170

71:                                               ; preds = %63
  %72 = load i8, i8* %9, align 1
  %73 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 3
  store i8 %72, i8* %73, align 1
  %74 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 2
  store i8 %72, i8* %74, align 1
  %75 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  store i8 %72, i8* %75, align 1
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  store i8 %72, i8* %76, align 1
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %78 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %79 = load i32, i32* %7, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %77, i8* noundef %78, i32 noundef %79)
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %81 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %80, i32 noundef 0)
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %71
  br label %170

84:                                               ; preds = %71
  store i32 0, i32* %8, align 4
  br label %85

85:                                               ; preds = %108, %84
  %86 = load i32, i32* %8, align 4
  %87 = load i32, i32* %7, align 4
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %89, label %111

89:                                               ; preds = %85
  %90 = load i32, i32* %8, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %105, label %96

96:                                               ; preds = %89
  %97 = load i32, i32* %8, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = load i8, i8* %9, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp sgt i32 %101, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %96, %89
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %106, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %170

107:                                              ; preds = %96
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %8, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %8, align 4
  br label %85, !llvm.loop !237

111:                                              ; preds = %85
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 61
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = and i32 %115, 2
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %139

118:                                              ; preds = %111
  %119 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %120 = load i8, i8* %119, align 1
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 87
  %123 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %122, i32 0, i32 0
  store i8 %120, i8* %123, align 8
  %124 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  %125 = load i8, i8* %124, align 1
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %127 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %126, i32 0, i32 87
  %128 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %127, i32 0, i32 1
  store i8 %125, i8* %128, align 1
  %129 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 2
  %130 = load i8, i8* %129, align 1
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 87
  %133 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %132, i32 0, i32 2
  store i8 %130, i8* %133, align 2
  %134 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 3
  %135 = load i8, i8* %134, align 1
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 87
  %138 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %137, i32 0, i32 4
  store i8 %135, i8* %138, align 4
  br label %165

139:                                              ; preds = %111
  %140 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %141 = load i8, i8* %140, align 1
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %143 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %142, i32 0, i32 87
  %144 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %143, i32 0, i32 3
  store i8 %141, i8* %144, align 1
  %145 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %146 = load i8, i8* %145, align 1
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %148 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 87
  %149 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %148, i32 0, i32 0
  store i8 %146, i8* %149, align 8
  %150 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %151 = load i8, i8* %150, align 1
  %152 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %153 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %152, i32 0, i32 87
  %154 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %153, i32 0, i32 1
  store i8 %151, i8* %154, align 1
  %155 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  %156 = load i8, i8* %155, align 1
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %157, i32 0, i32 87
  %159 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %158, i32 0, i32 2
  store i8 %156, i8* %159, align 2
  %160 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %163 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %162, i32 0, i32 87
  %164 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %163, i32 0, i32 4
  store i8 %161, i8* %164, align 4
  br label %165

165:                                              ; preds = %139, %118
  %166 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %167 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %168 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %169 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %168, i32 0, i32 87
  call void @png_set_sBIT(%struct.png_struct_def* noundef %166, %struct.png_info_def* noundef %167, %struct.png_color_8_struct* noundef %169)
  br label %170

170:                                              ; preds = %165, %105, %83, %66, %39, %24
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_cHRM(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [32 x i8], align 16
  %8 = alloca %struct.png_xy, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %15, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 15
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 6
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %24 = load i32, i32* %6, align 4
  %25 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %23, i32 noundef %24)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %150

27:                                               ; preds = %16
  br label %28

28:                                               ; preds = %27
  %29 = load i32, i32* %6, align 4
  %30 = icmp ne i32 %29, 32
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %32, i32 noundef %33)
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %150

36:                                               ; preds = %28
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %38 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %37, i8* noundef %38, i32 noundef 32)
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %39, i32 noundef 0)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %36
  br label %150

43:                                               ; preds = %36
  %44 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %45 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %44)
  %46 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 6
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %48 = getelementptr inbounds i8, i8* %47, i64 4
  %49 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %48)
  %50 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 7
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %52)
  %54 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 0
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %56 = getelementptr inbounds i8, i8* %55, i64 12
  %57 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %56)
  %58 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %60 = getelementptr inbounds i8, i8* %59, i64 16
  %61 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %60)
  %62 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %64 = getelementptr inbounds i8, i8* %63, i64 20
  %65 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %64)
  %66 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 3
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %68 = getelementptr inbounds i8, i8* %67, i64 24
  %69 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %68)
  %70 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 4
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %72 = getelementptr inbounds i8, i8* %71, i64 28
  %73 = call i32 @png_get_fixed_point(%struct.png_struct_def* noundef null, i8* noundef %72)
  %74 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 5
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 6
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %106, label %78

78:                                               ; preds = %43
  %79 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 7
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %106, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %106, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %106, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %106, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %106, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 4
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %8, i32 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102, %98, %94, %90, %86, %82, %78, %43
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %107, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13.284, i64 0, i64 0))
  br label %150

108:                                              ; preds = %102
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 145
  %111 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %110, i32 0, i32 4
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = and i32 %113, 32768
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %108
  br label %150

117:                                              ; preds = %108
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 145
  %120 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %119, i32 0, i32 4
  %121 = load i16, i16* %120, align 2
  %122 = zext i16 %121 to i32
  %123 = and i32 %122, 16
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %136

125:                                              ; preds = %117
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %127 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %126, i32 0, i32 145
  %128 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %127, i32 0, i32 4
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = or i32 %130, 32768
  %132 = trunc i32 %131 to i16
  store i16 %132, i16* %128, align 2
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %134 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %133, %struct.png_info_def* noundef %134)
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %135, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %150

136:                                              ; preds = %117
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %138 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %137, i32 0, i32 145
  %139 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %138, i32 0, i32 4
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i32
  %142 = or i32 %141, 16
  %143 = trunc i32 %142 to i16
  store i16 %143, i16* %139, align 2
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %146 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 145
  %147 = call i32 @png_colorspace_set_chromaticities(%struct.png_struct_def* noundef %144, %struct.png_colorspace* noundef %146, %struct.png_xy* noundef %8, i32 noundef 1)
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %149 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %148, %struct.png_info_def* noundef %149)
  br label %150

150:                                              ; preds = %136, %125, %116, %106, %42, %31, %22
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_sRGB(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 15
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %14, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 15
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 6
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = load i32, i32* %6, align 4
  %24 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %22, i32 noundef %23)
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %25, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %78

26:                                               ; preds = %15
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %6, align 4
  %29 = icmp ne i32 %28, 1
  br i1 %29, label %30, label %35

30:                                               ; preds = %27
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = load i32, i32* %6, align 4
  %33 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %31, i32 noundef %32)
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %34, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %78

35:                                               ; preds = %27
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_crc_read(%struct.png_struct_def* noundef %36, i8* noundef %7, i32 noundef 1)
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %38 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %37, i32 noundef 0)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  br label %78

41:                                               ; preds = %35
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 145
  %44 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %43, i32 0, i32 4
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 32768
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %41
  br label %78

50:                                               ; preds = %41
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 145
  %53 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %52, i32 0, i32 4
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = and i32 %55, 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %69

58:                                               ; preds = %50
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 145
  %61 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %60, i32 0, i32 4
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = or i32 %63, 32768
  %65 = trunc i32 %64 to i16
  store i16 %65, i16* %61, align 2
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %67 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %66, %struct.png_info_def* noundef %67)
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %68, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14.287, i64 0, i64 0))
  br label %78

69:                                               ; preds = %50
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 145
  %73 = load i8, i8* %7, align 1
  %74 = zext i8 %73 to i32
  %75 = call i32 @png_colorspace_set_sRGB(%struct.png_struct_def* noundef %70, %struct.png_colorspace* noundef %72, i32 noundef %74)
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %77 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %76, %struct.png_info_def* noundef %77)
  br label %78

78:                                               ; preds = %69, %58, %49, %40, %30, %21
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_iCCP(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [81 x i8], align 16
  %12 = alloca [132 x i8], align 16
  %13 = alloca [1024 x i8], align 16
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  store i8* null, i8** %7, align 8
  store i32 0, i32* %8, align 4
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 15
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %24, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

25:                                               ; preds = %3
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 15
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 6
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %32, i32 noundef %33)
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %418

36:                                               ; preds = %25
  br label %37

37:                                               ; preds = %36
  %38 = load i32, i32* %6, align 4
  %39 = icmp ult i32 %38, 14
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %42 = load i32, i32* %6, align 4
  %43 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %41, i32 noundef %42)
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.290, i64 0, i64 0))
  br label %418

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 145
  %48 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %47, i32 0, i32 4
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = and i32 %50, 32768
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %45
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = load i32, i32* %6, align 4
  %56 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %54, i32 noundef %55)
  br label %418

57:                                               ; preds = %45
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 145
  %60 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %59, i32 0, i32 4
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = and i32 %62, 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %395

65:                                               ; preds = %57
  store i32 81, i32* %9, align 4
  %66 = load i32, i32* %9, align 4
  %67 = load i32, i32* %6, align 4
  %68 = icmp ugt i32 %66, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = load i32, i32* %6, align 4
  store i32 %70, i32* %9, align 4
  br label %71

71:                                               ; preds = %69, %65
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %73 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 0
  %74 = load i32, i32* %9, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %72, i8* noundef %73, i32 noundef %74)
  %75 = load i32, i32* %9, align 4
  %76 = load i32, i32* %6, align 4
  %77 = sub i32 %76, %75
  store i32 %77, i32* %6, align 4
  %78 = load i32, i32* %6, align 4
  %79 = icmp ult i32 %78, 11
  br i1 %79, label %80, label %85

80:                                               ; preds = %71
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %82 = load i32, i32* %6, align 4
  %83 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %81, i32 noundef %82)
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %84, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.290, i64 0, i64 0))
  br label %418

85:                                               ; preds = %71
  store i32 0, i32* %10, align 4
  br label %86

86:                                               ; preds = %102, %85
  %87 = load i32, i32* %10, align 4
  %88 = icmp ult i32 %87, 80
  br i1 %88, label %89, label %100

89:                                               ; preds = %86
  %90 = load i32, i32* %10, align 4
  %91 = load i32, i32* %9, align 4
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %93, label %100

93:                                               ; preds = %89
  %94 = load i32, i32* %10, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp ne i32 %98, 0
  br label %100

100:                                              ; preds = %93, %89, %86
  %101 = phi i1 [ false, %89 ], [ false, %86 ], [ %99, %93 ]
  br i1 %101, label %102, label %105

102:                                              ; preds = %100
  %103 = load i32, i32* %10, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %10, align 4
  br label %86, !llvm.loop !238

105:                                              ; preds = %100
  %106 = load i32, i32* %10, align 4
  %107 = icmp uge i32 %106, 1
  br i1 %107, label %108, label %393

108:                                              ; preds = %105
  %109 = load i32, i32* %10, align 4
  %110 = icmp ule i32 %109, 79
  br i1 %110, label %111, label %393

111:                                              ; preds = %108
  %112 = load i32, i32* %10, align 4
  %113 = add i32 %112, 1
  %114 = load i32, i32* %9, align 4
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %116, label %391

116:                                              ; preds = %111
  %117 = load i32, i32* %10, align 4
  %118 = add i32 %117, 1
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %391

124:                                              ; preds = %116
  %125 = load i32, i32* %10, align 4
  %126 = add i32 %125, 2
  %127 = load i32, i32* %9, align 4
  %128 = sub i32 %127, %126
  store i32 %128, i32* %9, align 4
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %130 = call i32 @png_inflate_claim(%struct.png_struct_def* noundef %129, i32 noundef 1766015824)
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %385

132:                                              ; preds = %124
  %133 = bitcast [132 x i8]* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %133, i8 0, i64 132, i1 false)
  store i64 132, i64* %14, align 8
  %134 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 0
  %135 = load i32, i32* %10, align 4
  %136 = add i32 %135, 2
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %134, i64 %137
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %140 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %139, i32 0, i32 19
  %141 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %140, i32 0, i32 0
  store i8* %138, i8** %141, align 8
  %142 = load i32, i32* %9, align 4
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %144 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %143, i32 0, i32 19
  %145 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %144, i32 0, i32 1
  store i32 %142, i32* %145, align 8
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %147 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %148 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %149 = call i32 @png_inflate_read(%struct.png_struct_def* noundef %146, i8* noundef %147, i32 noundef 1024, i32* noundef %6, i8* noundef %148, i64* noundef %14, i32 noundef 0)
  %150 = load i64, i64* %14, align 8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %377

152:                                              ; preds = %132
  %153 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %154 = load i8, i8* %153, align 16
  %155 = zext i8 %154 to i32
  %156 = shl i32 %155, 24
  %157 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %158 = getelementptr inbounds i8, i8* %157, i64 1
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = shl i32 %160, 16
  %162 = add i32 %156, %161
  %163 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %164 = getelementptr inbounds i8, i8* %163, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = shl i32 %166, 8
  %168 = add i32 %162, %167
  %169 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %170 = getelementptr inbounds i8, i8* %169, i64 3
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = add i32 %168, %172
  store i32 %173, i32* %15, align 4
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %175, i32 0, i32 145
  %177 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 0
  %178 = load i32, i32* %15, align 4
  %179 = call i32 @png_icc_check_length(%struct.png_struct_def* noundef %174, %struct.png_colorspace* noundef %176, i8* noundef %177, i32 noundef %178)
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %376

181:                                              ; preds = %152
  %182 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %184 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %183, i32 0, i32 145
  %185 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 0
  %186 = load i32, i32* %15, align 4
  %187 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %189 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %188, i32 0, i32 61
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = call i32 @png_icc_check_header(%struct.png_struct_def* noundef %182, %struct.png_colorspace* noundef %184, i8* noundef %185, i32 noundef %186, i8* noundef %187, i32 noundef %191)
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %375

194:                                              ; preds = %181
  %195 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %196 = getelementptr inbounds i8, i8* %195, i64 128
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = shl i32 %198, 24
  %200 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %201 = getelementptr inbounds i8, i8* %200, i64 128
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = shl i32 %204, 16
  %206 = add i32 %199, %205
  %207 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %208 = getelementptr inbounds i8, i8* %207, i64 128
  %209 = getelementptr inbounds i8, i8* %208, i64 2
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = shl i32 %211, 8
  %213 = add i32 %206, %212
  %214 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  %215 = getelementptr inbounds i8, i8* %214, i64 128
  %216 = getelementptr inbounds i8, i8* %215, i64 3
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = add i32 %213, %218
  store i32 %219, i32* %16, align 4
  %220 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %221 = load i32, i32* %15, align 4
  %222 = zext i32 %221 to i64
  %223 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %220, i64 noundef %222, i32 noundef 2)
  store i8* %223, i8** %17, align 8
  %224 = load i8*, i8** %17, align 8
  %225 = icmp ne i8* %224, null
  br i1 %225, label %226, label %373

226:                                              ; preds = %194
  %227 = load i8*, i8** %17, align 8
  %228 = getelementptr inbounds [132 x i8], [132 x i8]* %12, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %227, i8* align 16 %228, i64 132, i1 false)
  %229 = load i32, i32* %16, align 4
  %230 = mul i32 12, %229
  %231 = zext i32 %230 to i64
  store i64 %231, i64* %14, align 8
  %232 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %233 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %234 = load i8*, i8** %17, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 132
  %236 = call i32 @png_inflate_read(%struct.png_struct_def* noundef %232, i8* noundef %233, i32 noundef 1024, i32* noundef %6, i8* noundef %235, i64* noundef %14, i32 noundef 0)
  %237 = load i64, i64* %14, align 8
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %367

239:                                              ; preds = %226
  %240 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %241 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %241, i32 0, i32 145
  %243 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 0
  %244 = load i32, i32* %15, align 4
  %245 = load i8*, i8** %17, align 8
  %246 = call i32 @png_icc_check_tag_table(%struct.png_struct_def* noundef %240, %struct.png_colorspace* noundef %242, i8* noundef %243, i32 noundef %244, i8* noundef %245)
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %248, label %366

248:                                              ; preds = %239
  %249 = load i32, i32* %15, align 4
  %250 = zext i32 %249 to i64
  %251 = sub i64 %250, 132
  %252 = load i32, i32* %16, align 4
  %253 = mul i32 12, %252
  %254 = zext i32 %253 to i64
  %255 = sub i64 %251, %254
  store i64 %255, i64* %14, align 8
  %256 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %257 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %258 = load i8*, i8** %17, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 132
  %260 = load i32, i32* %16, align 4
  %261 = mul i32 12, %260
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8* %259, i64 %262
  %264 = call i32 @png_inflate_read(%struct.png_struct_def* noundef %256, i8* noundef %257, i32 noundef 1024, i32* noundef %6, i8* noundef %263, i64* noundef %14, i32 noundef 1)
  %265 = load i32, i32* %6, align 4
  %266 = icmp ugt i32 %265, 0
  br i1 %266, label %267, label %274

267:                                              ; preds = %248
  %268 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %269 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %268, i32 0, i32 16
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 1048576
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %274, label %273

273:                                              ; preds = %267
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.291, i64 0, i64 0), i8** %7, align 8
  br label %357

274:                                              ; preds = %267, %248
  %275 = load i64, i64* %14, align 8
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %356

277:                                              ; preds = %274
  %278 = load i32, i32* %6, align 4
  %279 = icmp ugt i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %277
  %281 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %281, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.291, i64 0, i64 0))
  br label %282

282:                                              ; preds = %280, %277
  %283 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %284 = load i32, i32* %6, align 4
  %285 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %283, i32 noundef %284)
  store i32 1, i32* %8, align 4
  %286 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %287 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %288 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %287, i32 0, i32 145
  %289 = load i8*, i8** %17, align 8
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %291 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %290, i32 0, i32 19
  %292 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %291, i32 0, i32 12
  %293 = load i64, i64* %292, align 8
  call void @png_icc_set_sRGB(%struct.png_struct_def* noundef %286, %struct.png_colorspace* noundef %288, i8* noundef %289, i64 noundef %293)
  %294 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %295 = icmp ne %struct.png_info_def* %294, null
  br i1 %295, label %296, label %343

296:                                              ; preds = %282
  %297 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %298 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %297, %struct.png_info_def* noundef %298, i32 noundef 16, i32 noundef 0)
  %299 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %300 = load i32, i32* %10, align 4
  %301 = add i32 %300, 1
  %302 = zext i32 %301 to i64
  %303 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %299, i64 noundef %302)
  %304 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %305 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %304, i32 0, i32 17
  store i8* %303, i8** %305, align 8
  %306 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %307 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %306, i32 0, i32 17
  %308 = load i8*, i8** %307, align 8
  %309 = icmp ne i8* %308, null
  br i1 %309, label %310, label %334

310:                                              ; preds = %296
  %311 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %312 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %311, i32 0, i32 17
  %313 = load i8*, i8** %312, align 8
  %314 = getelementptr inbounds [81 x i8], [81 x i8]* %11, i64 0, i64 0
  %315 = load i32, i32* %10, align 4
  %316 = add i32 %315, 1
  %317 = zext i32 %316 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %313, i8* align 16 %314, i64 %317, i1 false)
  %318 = load i32, i32* %15, align 4
  %319 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %320 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %319, i32 0, i32 19
  store i32 %318, i32* %320, align 8
  %321 = load i8*, i8** %17, align 8
  %322 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %323 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %322, i32 0, i32 18
  store i8* %321, i8** %323, align 8
  %324 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %325 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %324, i32 0, i32 139
  store i8* null, i8** %325, align 8
  %326 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %327 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %326, i32 0, i32 45
  %328 = load i32, i32* %327, align 4
  %329 = or i32 %328, 16
  store i32 %329, i32* %327, align 4
  %330 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %331 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %330, i32 0, i32 2
  %332 = load i32, i32* %331, align 8
  %333 = or i32 %332, 4096
  store i32 %333, i32* %331, align 8
  br label %342

334:                                              ; preds = %296
  %335 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %336 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %335, i32 0, i32 145
  %337 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %336, i32 0, i32 4
  %338 = load i16, i16* %337, align 2
  %339 = zext i16 %338 to i32
  %340 = or i32 %339, 32768
  %341 = trunc i32 %340 to i16
  store i16 %341, i16* %337, align 2
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0), i8** %7, align 8
  br label %342

342:                                              ; preds = %334, %310
  br label %343

343:                                              ; preds = %342, %282
  %344 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %345 = icmp ne %struct.png_info_def* %344, null
  br i1 %345, label %346, label %349

346:                                              ; preds = %343
  %347 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %348 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %347, %struct.png_info_def* noundef %348)
  br label %349

349:                                              ; preds = %346, %343
  %350 = load i8*, i8** %7, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %352, label %355

352:                                              ; preds = %349
  %353 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %354 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %353, i32 0, i32 18
  store i32 0, i32* %354, align 8
  br label %418

355:                                              ; preds = %349
  br label %356

356:                                              ; preds = %355, %274
  br label %357

357:                                              ; preds = %356, %273
  %358 = load i8*, i8** %7, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %360, label %365

360:                                              ; preds = %357
  %361 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %362 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %361, i32 0, i32 19
  %363 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %362, i32 0, i32 6
  %364 = load i8*, i8** %363, align 8
  store i8* %364, i8** %7, align 8
  br label %365

365:                                              ; preds = %360, %357
  br label %366

366:                                              ; preds = %365, %239
  br label %372

367:                                              ; preds = %226
  %368 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %369 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %368, i32 0, i32 19
  %370 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %369, i32 0, i32 6
  %371 = load i8*, i8** %370, align 8
  store i8* %371, i8** %7, align 8
  br label %372

372:                                              ; preds = %367, %366
  br label %374

373:                                              ; preds = %194
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0), i8** %7, align 8
  br label %374

374:                                              ; preds = %373, %372
  br label %375

375:                                              ; preds = %374, %181
  br label %376

376:                                              ; preds = %375, %152
  br label %382

377:                                              ; preds = %132
  %378 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %379 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %378, i32 0, i32 19
  %380 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %379, i32 0, i32 6
  %381 = load i8*, i8** %380, align 8
  store i8* %381, i8** %7, align 8
  br label %382

382:                                              ; preds = %377, %376
  %383 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %384 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %383, i32 0, i32 18
  store i32 0, i32* %384, align 8
  br label %390

385:                                              ; preds = %124
  %386 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %387 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %386, i32 0, i32 19
  %388 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %387, i32 0, i32 6
  %389 = load i8*, i8** %388, align 8
  store i8* %389, i8** %7, align 8
  br label %390

390:                                              ; preds = %385, %382
  br label %392

391:                                              ; preds = %116, %111
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18.293, i64 0, i64 0), i8** %7, align 8
  br label %392

392:                                              ; preds = %391, %390
  br label %394

393:                                              ; preds = %108, %105
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.294, i64 0, i64 0), i8** %7, align 8
  br label %394

394:                                              ; preds = %393, %392
  br label %396

395:                                              ; preds = %57
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14.287, i64 0, i64 0), i8** %7, align 8
  br label %396

396:                                              ; preds = %395, %394
  %397 = load i32, i32* %8, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %403

399:                                              ; preds = %396
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %401 = load i32, i32* %6, align 4
  %402 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %400, i32 noundef %401)
  br label %403

403:                                              ; preds = %399, %396
  %404 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %405 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %404, i32 0, i32 145
  %406 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %405, i32 0, i32 4
  %407 = load i16, i16* %406, align 2
  %408 = zext i16 %407 to i32
  %409 = or i32 %408, 32768
  %410 = trunc i32 %409 to i16
  store i16 %410, i16* %406, align 2
  %411 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %412 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync(%struct.png_struct_def* noundef %411, %struct.png_info_def* noundef %412)
  %413 = load i8*, i8** %7, align 8
  %414 = icmp ne i8* %413, null
  br i1 %414, label %415, label %418

415:                                              ; preds = %403
  %416 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %417 = load i8*, i8** %7, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %416, i8* noundef %417)
  br label %418

418:                                              ; preds = %31, %40, %53, %80, %352, %415, %403
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_inflate_claim(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [64 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 18
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 24
  %17 = and i32 %16, 255
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  store i8 %18, i8* %20, align 16
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 18
  %23 = load i32, i32* %22, align 8
  %24 = lshr i32 %23, 16
  %25 = and i32 %24, 255
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 %26, i8* %28, align 1
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 18
  %31 = load i32, i32* %30, align 8
  %32 = lshr i32 %31, 8
  %33 = and i32 %32, 255
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %36 = getelementptr inbounds i8, i8* %35, i64 2
  store i8 %34, i8* %36, align 2
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 18
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 255
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %43 = getelementptr inbounds i8, i8* %42, i64 3
  store i8 %41, i8* %43, align 1
  %44 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %45 = call i64 @png_safecat(i8* noundef %44, i64 noundef 64, i64 noundef 4, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60.297, i64 0, i64 0))
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %47 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @png_chunk_warning(%struct.png_struct_def* noundef %46, i8* noundef %47)
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 18
  store i32 0, i32* %49, align 8
  br label %50

50:                                               ; preds = %12, %2
  store i32 0, i32* %7, align 4
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 110
  %53 = load i32, i32* %52, align 8
  %54 = lshr i32 %53, 2
  %55 = and i32 %54, 3
  %56 = icmp eq i32 %55, 3
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  store i32 15, i32* %7, align 4
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 70
  store i8 0, i8* %59, align 8
  br label %63

60:                                               ; preds = %50
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 70
  store i8 1, i8* %62, align 8
  br label %63

63:                                               ; preds = %60, %57
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 19
  %66 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %65, i32 0, i32 0
  store i8* null, i8** %66, align 8
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 19
  %69 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %68, i32 0, i32 1
  store i32 0, i32* %69, align 8
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 19
  %72 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %71, i32 0, i32 3
  store i8* null, i8** %72, align 8
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 19
  %75 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %74, i32 0, i32 4
  store i32 0, i32* %75, align 8
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 16
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 2
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %63
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 19
  %84 = load i32, i32* %7, align 4
  %85 = call i32 @inflateReset2(%struct.z_stream_s* noundef %83, i32 noundef %84)
  store i32 %85, i32* %6, align 4
  br label %99

86:                                               ; preds = %63
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 19
  %89 = load i32, i32* %7, align 4
  %90 = call i32 @inflateInit2_(%struct.z_stream_s* noundef %88, i32 noundef %89, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61.298, i64 0, i64 0), i32 noundef 112)
  store i32 %90, i32* %6, align 4
  %91 = load i32, i32* %6, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %86
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 16
  %96 = load i32, i32* %95, align 8
  %97 = or i32 %96, 2
  store i32 %97, i32* %95, align 8
  br label %98

98:                                               ; preds = %93, %86
  br label %99

99:                                               ; preds = %98, %81
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 110
  %102 = load i32, i32* %101, align 8
  %103 = lshr i32 %102, 8
  %104 = and i32 %103, 3
  %105 = icmp eq i32 %104, 3
  br i1 %105, label %106, label %110

106:                                              ; preds = %99
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %107, i32 0, i32 19
  %109 = call i32 @inflateValidate(%struct.z_stream_s* noundef %108, i32 noundef 0)
  store i32 %109, i32* %6, align 4
  br label %110

110:                                              ; preds = %106, %99
  %111 = load i32, i32* %6, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  %114 = load i32, i32* %4, align 4
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 18
  store i32 %114, i32* %116, align 8
  br label %120

117:                                              ; preds = %110
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %119 = load i32, i32* %6, align 4
  call void @png_zstream_error(%struct.png_struct_def* noundef %118, i32 noundef %119)
  br label %120

120:                                              ; preds = %117, %113
  %121 = load i32, i32* %6, align 4
  ret i32 %121
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_inflate_read(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i32 noundef %2, i32* noundef %3, i8* noundef %4, i64* noundef %5, i32 noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.png_struct_def*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %9, align 8
  store i8* %1, i8** %10, align 8
  store i32 %2, i32* %11, align 4
  store i32* %3, i32** %12, align 8
  store i8* %4, i8** %13, align 8
  store i64* %5, i64** %14, align 8
  store i32 %6, i32* %15, align 4
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 18
  %20 = load i32, i32* %19, align 8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 44
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %25, label %139

25:                                               ; preds = %7
  %26 = load i8*, i8** %13, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 19
  %29 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %28, i32 0, i32 3
  store i8* %26, i8** %29, align 8
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 19
  %32 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %31, i32 0, i32 4
  store i32 0, i32* %32, align 8
  br label %33

33:                                               ; preds = %122, %25
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 19
  %36 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %67

39:                                               ; preds = %33
  %40 = load i32, i32* %11, align 4
  %41 = load i32*, i32** %12, align 8
  %42 = load i32, i32* %41, align 4
  %43 = icmp ugt i32 %40, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = load i32*, i32** %12, align 8
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %11, align 4
  br label %47

47:                                               ; preds = %44, %39
  %48 = load i32, i32* %11, align 4
  %49 = load i32*, i32** %12, align 8
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 %50, %48
  store i32 %51, i32* %49, align 4
  %52 = load i32, i32* %11, align 4
  %53 = icmp ugt i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %47
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %56 = load i8*, i8** %10, align 8
  %57 = load i32, i32* %11, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %55, i8* noundef %56, i32 noundef %57)
  br label %58

58:                                               ; preds = %54, %47
  %59 = load i8*, i8** %10, align 8
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 19
  %62 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %61, i32 0, i32 0
  store i8* %59, i8** %62, align 8
  %63 = load i32, i32* %11, align 4
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 19
  %66 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %65, i32 0, i32 1
  store i32 %63, i32* %66, align 8
  br label %67

67:                                               ; preds = %58, %33
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 19
  %70 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %69, i32 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %93

73:                                               ; preds = %67
  store i32 -1, i32* %17, align 4
  %74 = load i32, i32* %17, align 4
  %75 = zext i32 %74 to i64
  %76 = load i64*, i64** %14, align 8
  %77 = load i64, i64* %76, align 8
  %78 = icmp ugt i64 %75, %77
  br i1 %78, label %79, label %83

79:                                               ; preds = %73
  %80 = load i64*, i64** %14, align 8
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* %17, align 4
  br label %83

83:                                               ; preds = %79, %73
  %84 = load i32, i32* %17, align 4
  %85 = zext i32 %84 to i64
  %86 = load i64*, i64** %14, align 8
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %87, %85
  store i64 %88, i64* %86, align 8
  %89 = load i32, i32* %17, align 4
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 19
  %92 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %91, i32 0, i32 4
  store i32 %89, i32* %92, align 8
  br label %93

93:                                               ; preds = %83, %67
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %95 = load i32*, i32** %12, align 8
  %96 = load i32, i32* %95, align 4
  %97 = icmp ugt i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  br label %104

99:                                               ; preds = %93
  %100 = load i32, i32* %15, align 4
  %101 = icmp ne i32 %100, 0
  %102 = zext i1 %101 to i64
  %103 = select i1 %101, i32 4, i32 2
  br label %104

104:                                              ; preds = %99, %98
  %105 = phi i32 [ 0, %98 ], [ %103, %99 ]
  %106 = call i32 @png_zlib_inflate(%struct.png_struct_def* noundef %94, i32 noundef %105)
  store i32 %106, i32* %16, align 4
  br label %107

107:                                              ; preds = %104
  %108 = load i32, i32* %16, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %122

110:                                              ; preds = %107
  %111 = load i64*, i64** %14, align 8
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %112, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 19
  %117 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %116, i32 0, i32 4
  %118 = load i32, i32* %117, align 8
  %119 = icmp ugt i32 %118, 0
  br label %120

120:                                              ; preds = %114, %110
  %121 = phi i1 [ true, %110 ], [ %119, %114 ]
  br label %122

122:                                              ; preds = %120, %107
  %123 = phi i1 [ false, %107 ], [ %121, %120 ]
  br i1 %123, label %33, label %124, !llvm.loop !239

124:                                              ; preds = %122
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %125, i32 0, i32 19
  %127 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %126, i32 0, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = zext i32 %128 to i64
  %130 = load i64*, i64** %14, align 8
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, %129
  store i64 %132, i64* %130, align 8
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %134 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %133, i32 0, i32 19
  %135 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %134, i32 0, i32 4
  store i32 0, i32* %135, align 8
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %137 = load i32, i32* %16, align 4
  call void @png_zstream_error(%struct.png_struct_def* noundef %136, i32 noundef %137)
  %138 = load i32, i32* %16, align 4
  store i32 %138, i32* %8, align 4
  br label %143

139:                                              ; preds = %7
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 19
  %142 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %141, i32 0, i32 6
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62.296, i64 0, i64 0), i8** %142, align 8
  store i32 -2, i32* %8, align 4
  br label %143

143:                                              ; preds = %139, %124
  %144 = load i32, i32* %8, align 4
  ret i32 %144
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @png_read_buffer(%struct.png_struct_def* noalias noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 139
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %7, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %26

13:                                               ; preds = %3
  %14 = load i64, i64* %5, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 140
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %14, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 139
  store i8* null, i8** %21, align 8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 140
  store i64 0, i64* %23, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %25 = load i8*, i8** %7, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %24, i8* noundef %25)
  store i8* null, i8** %7, align 8
  br label %26

26:                                               ; preds = %19, %13, %3
  %27 = load i8*, i8** %7, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %57

29:                                               ; preds = %26
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %31 = load i64, i64* %5, align 8
  %32 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %30, i64 noundef %31)
  store i8* %32, i8** %7, align 8
  %33 = load i8*, i8** %7, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %44

35:                                               ; preds = %29
  %36 = load i8*, i8** %7, align 8
  %37 = load i64, i64* %5, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 0, i64 %37, i1 false)
  %38 = load i8*, i8** %7, align 8
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 139
  store i8* %38, i8** %40, align 8
  %41 = load i64, i64* %5, align 8
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 140
  store i64 %41, i64* %43, align 8
  br label %56

44:                                               ; preds = %29
  %45 = load i32, i32* %6, align 4
  %46 = icmp slt i32 %45, 2
  br i1 %46, label %47, label %55

47:                                               ; preds = %44
  %48 = load i32, i32* %6, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %51, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63.295, i64 0, i64 0))
  br label %54

52:                                               ; preds = %47
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %53, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63.295, i64 0, i64 0)) #13
  unreachable

54:                                               ; preds = %50
  br label %55

55:                                               ; preds = %54, %44
  br label %56

56:                                               ; preds = %55, %35
  br label %57

57:                                               ; preds = %56, %26
  %58 = load i8*, i8** %7, align 8
  ret i8* %58
}

declare i32 @inflateReset2(%struct.z_stream_s* noundef, i32 noundef) #3

declare i32 @inflateInit2_(%struct.z_stream_s* noundef, i32 noundef, i8* noundef, i32 noundef) #3

declare i32 @inflateValidate(%struct.z_stream_s* noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_sPLT(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.png_sPLT_struct, align 8
  %10 = alloca %struct.png_sPLT_entry_struct*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %14, align 4
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 135
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %3
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 135
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %27, i32 noundef %28)
  br label %291

30:                                               ; preds = %21
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 135
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %32, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %37, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20.301, i64 0, i64 0))
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = load i32, i32* %6, align 4
  %40 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %38, i32 noundef %39)
  br label %291

41:                                               ; preds = %30
  br label %42

42:                                               ; preds = %41, %3
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 15
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %49, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

50:                                               ; preds = %42
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 15
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %50
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %58 = load i32, i32* %6, align 4
  %59 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %57, i32 noundef %58)
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %60, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %291

61:                                               ; preds = %50
  br label %62

62:                                               ; preds = %61
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %64 = load i32, i32* %6, align 4
  %65 = add i32 %64, 1
  %66 = zext i32 %65 to i64
  %67 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %63, i64 noundef %66, i32 noundef 2)
  store i8* %67, i8** %8, align 8
  %68 = load i8*, i8** %8, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %75

70:                                               ; preds = %62
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %72 = load i32, i32* %6, align 4
  %73 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %71, i32 noundef %72)
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %74, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %291

75:                                               ; preds = %62
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %77 = load i8*, i8** %8, align 8
  %78 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %76, i8* noundef %77, i32 noundef %78)
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %80 = load i32, i32* %14, align 4
  %81 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %79, i32 noundef %80)
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %75
  br label %291

84:                                               ; preds = %75
  %85 = load i8*, i8** %8, align 8
  %86 = load i32, i32* %6, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  store i8 0, i8* %88, align 1
  %89 = load i8*, i8** %8, align 8
  store i8* %89, i8** %7, align 8
  br label %90

90:                                               ; preds = %95, %84
  %91 = load i8*, i8** %7, align 8
  %92 = load i8, i8* %91, align 1
  %93 = icmp ne i8 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  br label %95

95:                                               ; preds = %94
  %96 = load i8*, i8** %7, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %7, align 8
  br label %90, !llvm.loop !240

98:                                               ; preds = %90
  %99 = load i8*, i8** %7, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %7, align 8
  %101 = load i32, i32* %6, align 4
  %102 = icmp ult i32 %101, 2
  br i1 %102, label %111, label %103

103:                                              ; preds = %98
  %104 = load i8*, i8** %7, align 8
  %105 = load i8*, i8** %8, align 8
  %106 = load i32, i32* %6, align 4
  %107 = sub i32 %106, 2
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  %110 = icmp ugt i8* %104, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %103, %98
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %112, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.302, i64 0, i64 0))
  br label %291

113:                                              ; preds = %103
  %114 = load i8*, i8** %7, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %7, align 8
  %116 = load i8, i8* %114, align 1
  %117 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 1
  store i8 %116, i8* %117, align 8
  %118 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 1
  %119 = load i8, i8* %118, align 8
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 8
  %122 = zext i1 %121 to i64
  %123 = select i1 %121, i32 6, i32 10
  store i32 %123, i32* %12, align 4
  %124 = load i32, i32* %6, align 4
  %125 = load i8*, i8** %7, align 8
  %126 = load i8*, i8** %8, align 8
  %127 = ptrtoint i8* %125 to i64
  %128 = ptrtoint i8* %126 to i64
  %129 = sub i64 %127, %128
  %130 = trunc i64 %129 to i32
  %131 = sub i32 %124, %130
  store i32 %131, i32* %11, align 4
  %132 = load i32, i32* %11, align 4
  %133 = load i32, i32* %12, align 4
  %134 = urem i32 %132, %133
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %113
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %137, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22.303, i64 0, i64 0))
  br label %291

138:                                              ; preds = %113
  %139 = load i32, i32* %11, align 4
  %140 = load i32, i32* %12, align 4
  %141 = udiv i32 %139, %140
  store i32 %141, i32* %15, align 4
  store i64 1844674407370955161, i64* %16, align 8
  %142 = load i32, i32* %15, align 4
  %143 = zext i32 %142 to i64
  %144 = load i64, i64* %16, align 8
  %145 = icmp ugt i64 %143, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %138
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %147, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23.304, i64 0, i64 0))
  br label %291

148:                                              ; preds = %138
  %149 = load i32, i32* %11, align 4
  %150 = load i32, i32* %12, align 4
  %151 = udiv i32 %149, %150
  %152 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 3
  store i32 %151, i32* %152, align 8
  %153 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %154 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = sext i32 %155 to i64
  %157 = mul i64 %156, 10
  %158 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %153, i64 noundef %157)
  %159 = bitcast i8* %158 to %struct.png_sPLT_entry_struct*
  %160 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 2
  store %struct.png_sPLT_entry_struct* %159, %struct.png_sPLT_entry_struct** %160, align 8
  %161 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 2
  %162 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %161, align 8
  %163 = icmp eq %struct.png_sPLT_entry_struct* %162, null
  br i1 %163, label %164, label %166

164:                                              ; preds = %148
  %165 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %165, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24.305, i64 0, i64 0))
  br label %291

166:                                              ; preds = %148
  store i32 0, i32* %13, align 4
  br label %167

167:                                              ; preds = %279, %166
  %168 = load i32, i32* %13, align 4
  %169 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = icmp slt i32 %168, %170
  br i1 %171, label %172, label %282

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 2
  %174 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %173, align 8
  %175 = load i32, i32* %13, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %174, i64 %176
  store %struct.png_sPLT_entry_struct* %177, %struct.png_sPLT_entry_struct** %10, align 8
  %178 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 1
  %179 = load i8, i8* %178, align 8
  %180 = zext i8 %179 to i32
  %181 = icmp eq i32 %180, 8
  br i1 %181, label %182, label %207

182:                                              ; preds = %172
  %183 = load i8*, i8** %7, align 8
  %184 = getelementptr inbounds i8, i8* %183, i32 1
  store i8* %184, i8** %7, align 8
  %185 = load i8, i8* %183, align 1
  %186 = zext i8 %185 to i16
  %187 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %188 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %187, i32 0, i32 0
  store i16 %186, i16* %188, align 2
  %189 = load i8*, i8** %7, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %7, align 8
  %191 = load i8, i8* %189, align 1
  %192 = zext i8 %191 to i16
  %193 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %194 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %193, i32 0, i32 1
  store i16 %192, i16* %194, align 2
  %195 = load i8*, i8** %7, align 8
  %196 = getelementptr inbounds i8, i8* %195, i32 1
  store i8* %196, i8** %7, align 8
  %197 = load i8, i8* %195, align 1
  %198 = zext i8 %197 to i16
  %199 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %200 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %199, i32 0, i32 2
  store i16 %198, i16* %200, align 2
  %201 = load i8*, i8** %7, align 8
  %202 = getelementptr inbounds i8, i8* %201, i32 1
  store i8* %202, i8** %7, align 8
  %203 = load i8, i8* %201, align 1
  %204 = zext i8 %203 to i16
  %205 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %206 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %205, i32 0, i32 3
  store i16 %204, i16* %206, align 2
  br label %264

207:                                              ; preds = %172
  %208 = load i8*, i8** %7, align 8
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = shl i32 %210, 8
  %212 = load i8*, i8** %7, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 1
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = add i32 %211, %215
  %217 = trunc i32 %216 to i16
  %218 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %219 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %218, i32 0, i32 0
  store i16 %217, i16* %219, align 2
  %220 = load i8*, i8** %7, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 2
  store i8* %221, i8** %7, align 8
  %222 = load i8*, i8** %7, align 8
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = shl i32 %224, 8
  %226 = load i8*, i8** %7, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 1
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = add i32 %225, %229
  %231 = trunc i32 %230 to i16
  %232 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %233 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %232, i32 0, i32 1
  store i16 %231, i16* %233, align 2
  %234 = load i8*, i8** %7, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 2
  store i8* %235, i8** %7, align 8
  %236 = load i8*, i8** %7, align 8
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = shl i32 %238, 8
  %240 = load i8*, i8** %7, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 1
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = add i32 %239, %243
  %245 = trunc i32 %244 to i16
  %246 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %247 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %246, i32 0, i32 2
  store i16 %245, i16* %247, align 2
  %248 = load i8*, i8** %7, align 8
  %249 = getelementptr inbounds i8, i8* %248, i64 2
  store i8* %249, i8** %7, align 8
  %250 = load i8*, i8** %7, align 8
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = shl i32 %252, 8
  %254 = load i8*, i8** %7, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 1
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = add i32 %253, %257
  %259 = trunc i32 %258 to i16
  %260 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %261 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %260, i32 0, i32 3
  store i16 %259, i16* %261, align 2
  %262 = load i8*, i8** %7, align 8
  %263 = getelementptr inbounds i8, i8* %262, i64 2
  store i8* %263, i8** %7, align 8
  br label %264

264:                                              ; preds = %207, %182
  %265 = load i8*, i8** %7, align 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = shl i32 %267, 8
  %269 = load i8*, i8** %7, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 1
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = add i32 %268, %272
  %274 = trunc i32 %273 to i16
  %275 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %276 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %275, i32 0, i32 4
  store i16 %274, i16* %276, align 2
  %277 = load i8*, i8** %7, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 2
  store i8* %278, i8** %7, align 8
  br label %279

279:                                              ; preds = %264
  %280 = load i32, i32* %13, align 4
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %13, align 4
  br label %167, !llvm.loop !241

282:                                              ; preds = %167
  %283 = load i8*, i8** %8, align 8
  %284 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 0
  store i8* %283, i8** %284, align 8
  %285 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %286 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_set_sPLT(%struct.png_struct_def* noundef %285, %struct.png_info_def* noundef %286, %struct.png_sPLT_struct* noundef %9, i32 noundef 1)
  %287 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %288 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %9, i32 0, i32 2
  %289 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %288, align 8
  %290 = bitcast %struct.png_sPLT_entry_struct* %289 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %287, i8* noundef %290)
  br label %291

291:                                              ; preds = %282, %164, %146, %136, %111, %83, %70, %56, %36, %26
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_tRNS(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [256 x i8], align 16
  %8 = alloca [2 x i8], align 1
  %9 = alloca [6 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 15
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %3
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 15
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %24, i32 noundef %25)
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %206

28:                                               ; preds = %17
  %29 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %30 = icmp ne %struct.png_info_def* %29, null
  br i1 %30, label %31, label %42

31:                                               ; preds = %28
  %32 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %32, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 16
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = load i32, i32* %6, align 4
  %40 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %38, i32 noundef %39)
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %41, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %206

42:                                               ; preds = %31, %28
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 61
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %76

50:                                               ; preds = %44
  %51 = load i32, i32* %6, align 4
  %52 = icmp ne i32 %51, 2
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = load i32, i32* %6, align 4
  %56 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %54, i32 noundef %55)
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %57, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %206

58:                                               ; preds = %50
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %60 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %59, i8* noundef %60, i32 noundef 2)
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 55
  store i16 1, i16* %62, align 8
  %63 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 8
  %67 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  %68 = getelementptr inbounds i8, i8* %67, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = add i32 %66, %70
  %72 = trunc i32 %71 to i16
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 90
  %75 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %74, i32 0, i32 4
  store i16 %72, i16* %75, align 8
  br label %189

76:                                               ; preds = %44
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 61
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = icmp eq i32 %80, 2
  br i1 %81, label %82, label %139

82:                                               ; preds = %76
  %83 = load i32, i32* %6, align 4
  %84 = icmp ne i32 %83, 6
  br i1 %84, label %85, label %90

85:                                               ; preds = %82
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %87 = load i32, i32* %6, align 4
  %88 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %86, i32 noundef %87)
  %89 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %89, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %206

90:                                               ; preds = %82
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %92 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %93 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %91, i8* noundef %92, i32 noundef %93)
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 55
  store i16 1, i16* %95, align 8
  %96 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl i32 %98, 8
  %100 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %101 = getelementptr inbounds i8, i8* %100, i64 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = add i32 %99, %103
  %105 = trunc i32 %104 to i16
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %107 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %106, i32 0, i32 90
  %108 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %107, i32 0, i32 1
  store i16 %105, i16* %108, align 2
  %109 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %110 = getelementptr inbounds i8, i8* %109, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl i32 %112, 8
  %114 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %115 = getelementptr inbounds i8, i8* %114, i64 2
  %116 = getelementptr inbounds i8, i8* %115, i64 1
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = add i32 %113, %118
  %120 = trunc i32 %119 to i16
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 90
  %123 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %122, i32 0, i32 2
  store i16 %120, i16* %123, align 4
  %124 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %125 = getelementptr inbounds i8, i8* %124, i64 4
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl i32 %127, 8
  %129 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %130 = getelementptr inbounds i8, i8* %129, i64 4
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = add i32 %128, %133
  %135 = trunc i32 %134 to i16
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 90
  %138 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %137, i32 0, i32 3
  store i16 %135, i16* %138, align 2
  br label %188

139:                                              ; preds = %76
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 61
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, 3
  br i1 %144, label %145, label %182

145:                                              ; preds = %139
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %147 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %146, i32 0, i32 15
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %145
  %152 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %153 = load i32, i32* %6, align 4
  %154 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %152, i32 noundef %153)
  %155 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %155, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %206

156:                                              ; preds = %145
  %157 = load i32, i32* %6, align 4
  %158 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %158, i32 0, i32 53
  %160 = load i16, i16* %159, align 8
  %161 = zext i16 %160 to i32
  %162 = icmp ugt i32 %157, %161
  br i1 %162, label %169, label %163

163:                                              ; preds = %156
  %164 = load i32, i32* %6, align 4
  %165 = icmp ugt i32 %164, 256
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %6, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %174

169:                                              ; preds = %166, %163, %156
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %171 = load i32, i32* %6, align 4
  %172 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %170, i32 noundef %171)
  %173 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %173, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %206

174:                                              ; preds = %166
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %177 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %175, i8* noundef %176, i32 noundef %177)
  %178 = load i32, i32* %6, align 4
  %179 = trunc i32 %178 to i16
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %181 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %180, i32 0, i32 55
  store i16 %179, i16* %181, align 8
  br label %187

182:                                              ; preds = %139
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %184 = load i32, i32* %6, align 4
  %185 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %183, i32 noundef %184)
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %186, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25.308, i64 0, i64 0))
  br label %206

187:                                              ; preds = %174
  br label %188

188:                                              ; preds = %187, %90
  br label %189

189:                                              ; preds = %188, %58
  %190 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %191 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %190, i32 noundef 0)
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %189
  %194 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %195 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %194, i32 0, i32 55
  store i16 0, i16* %195, align 8
  br label %206

196:                                              ; preds = %189
  %197 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %198 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %200 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %201 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %200, i32 0, i32 55
  %202 = load i16, i16* %201, align 8
  %203 = zext i16 %202 to i32
  %204 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %205 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %204, i32 0, i32 90
  call void @png_set_tRNS(%struct.png_struct_def* noundef %197, %struct.png_info_def* noundef %198, i8* noundef %199, i32 noundef %203, %struct.png_color_16_struct* noundef %205)
  br label %206

206:                                              ; preds = %196, %193, %182, %169, %151, %85, %53, %37, %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_bKGD(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [6 x i8], align 1
  %9 = alloca %struct.png_color_16_struct, align 2
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 15
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %3
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 15
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %17
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 61
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %40

29:                                               ; preds = %23
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 15
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %29, %17
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %37 = load i32, i32* %6, align 4
  %38 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %36, i32 noundef %37)
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %39, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %274

40:                                               ; preds = %29, %23
  %41 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %42 = icmp ne %struct.png_info_def* %41, null
  br i1 %42, label %43, label %54

43:                                               ; preds = %40
  %44 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 32
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %43
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %51 = load i32, i32* %6, align 4
  %52 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %50, i32 noundef %51)
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %53, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %274

54:                                               ; preds = %43, %40
  br label %55

55:                                               ; preds = %54
  br label %56

56:                                               ; preds = %55
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 61
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %60, 3
  br i1 %61, label %62, label %63

62:                                               ; preds = %56
  store i32 1, i32* %7, align 4
  br label %73

63:                                               ; preds = %56
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 61
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = and i32 %67, 2
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %63
  store i32 6, i32* %7, align 4
  br label %72

71:                                               ; preds = %63
  store i32 2, i32* %7, align 4
  br label %72

72:                                               ; preds = %71, %70
  br label %73

73:                                               ; preds = %72, %62
  %74 = load i32, i32* %6, align 4
  %75 = load i32, i32* %7, align 4
  %76 = icmp ne i32 %74, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %79 = load i32, i32* %6, align 4
  %80 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %78, i32 noundef %79)
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %81, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %274

82:                                               ; preds = %73
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %84 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %85 = load i32, i32* %7, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %83, i8* noundef %84, i32 noundef %85)
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %87 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %86, i32 noundef 0)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %82
  br label %274

90:                                               ; preds = %82
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %91, i32 0, i32 61
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 3
  br i1 %95, label %96, label %159

96:                                               ; preds = %90
  %97 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %98 = load i8, i8* %97, align 1
  %99 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 0
  store i8 %98, i8* %99, align 2
  %100 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %101 = icmp ne %struct.png_info_def* %100, null
  br i1 %101, label %102, label %153

102:                                              ; preds = %96
  %103 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 5
  %105 = load i16, i16* %104, align 8
  %106 = zext i16 %105 to i32
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %153

108:                                              ; preds = %102
  %109 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %113 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %112, i32 0, i32 5
  %114 = load i16, i16* %113, align 8
  %115 = zext i16 %114 to i32
  %116 = icmp sge i32 %111, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %108
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %118, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26.311, i64 0, i64 0))
  br label %274

119:                                              ; preds = %108
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %120, i32 0, i32 52
  %122 = load %struct.png_color_struct*, %struct.png_color_struct** %121, align 8
  %123 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %122, i64 %125
  %127 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %126, i32 0, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 1
  store i16 %129, i16* %130, align 2
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 52
  %133 = load %struct.png_color_struct*, %struct.png_color_struct** %132, align 8
  %134 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %133, i64 %136
  %138 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %137, i32 0, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 2
  store i16 %140, i16* %141, align 2
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %143 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %142, i32 0, i32 52
  %144 = load %struct.png_color_struct*, %struct.png_color_struct** %143, align 8
  %145 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %144, i64 %147
  %149 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %148, i32 0, i32 2
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i16
  %152 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 3
  store i16 %151, i16* %152, align 2
  br label %157

153:                                              ; preds = %102, %96
  %154 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 3
  store i16 0, i16* %154, align 2
  %155 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 2
  store i16 0, i16* %155, align 2
  %156 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 1
  store i16 0, i16* %156, align 2
  br label %157

157:                                              ; preds = %153, %119
  %158 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 4
  store i16 0, i16* %158, align 2
  br label %271

159:                                              ; preds = %90
  %160 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %160, i32 0, i32 61
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %206

166:                                              ; preds = %159
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %168 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %167, i32 0, i32 62
  %169 = load i8, i8* %168, align 8
  %170 = zext i8 %169 to i32
  %171 = icmp sle i32 %170, 8
  br i1 %171, label %172, label %190

172:                                              ; preds = %166
  %173 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %187, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 1
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %182 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %181, i32 0, i32 62
  %183 = load i8, i8* %182, align 8
  %184 = zext i8 %183 to i32
  %185 = shl i32 1, %184
  %186 = icmp uge i32 %180, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %177, %172
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %188, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27.312, i64 0, i64 0))
  br label %274

189:                                              ; preds = %177
  br label %190

190:                                              ; preds = %189, %166
  %191 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 0
  store i8 0, i8* %191, align 2
  %192 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = shl i32 %194, 8
  %196 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = add i32 %195, %199
  %201 = trunc i32 %200 to i16
  %202 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 4
  store i16 %201, i16* %202, align 2
  %203 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 3
  store i16 %201, i16* %203, align 2
  %204 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 2
  store i16 %201, i16* %204, align 2
  %205 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 1
  store i16 %201, i16* %205, align 2
  br label %270

206:                                              ; preds = %159
  %207 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %208 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %207, i32 0, i32 62
  %209 = load i8, i8* %208, align 8
  %210 = zext i8 %209 to i32
  %211 = icmp sle i32 %210, 8
  br i1 %211, label %212, label %230

212:                                              ; preds = %206
  %213 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = icmp ne i32 %215, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 2
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %227, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 4
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %222, %217, %212
  %228 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %228, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28.313, i64 0, i64 0))
  br label %274

229:                                              ; preds = %222
  br label %230

230:                                              ; preds = %229, %206
  %231 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 0
  store i8 0, i8* %231, align 2
  %232 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = shl i32 %234, 8
  %236 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %237 = getelementptr inbounds i8, i8* %236, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = add i32 %235, %239
  %241 = trunc i32 %240 to i16
  %242 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 1
  store i16 %241, i16* %242, align 2
  %243 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %244 = getelementptr inbounds i8, i8* %243, i64 2
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl i32 %246, 8
  %248 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %249 = getelementptr inbounds i8, i8* %248, i64 2
  %250 = getelementptr inbounds i8, i8* %249, i64 1
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = add i32 %247, %252
  %254 = trunc i32 %253 to i16
  %255 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 2
  store i16 %254, i16* %255, align 2
  %256 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %257 = getelementptr inbounds i8, i8* %256, i64 4
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = shl i32 %259, 8
  %261 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  %262 = getelementptr inbounds i8, i8* %261, i64 4
  %263 = getelementptr inbounds i8, i8* %262, i64 1
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = add i32 %260, %265
  %267 = trunc i32 %266 to i16
  %268 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 3
  store i16 %267, i16* %268, align 2
  %269 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %9, i32 0, i32 4
  store i16 0, i16* %269, align 2
  br label %270

270:                                              ; preds = %230, %190
  br label %271

271:                                              ; preds = %270, %157
  %272 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %273 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_set_bKGD(%struct.png_struct_def* noundef %272, %struct.png_info_def* noundef %273, %struct.png_color_16_struct* noundef %9)
  br label %274

274:                                              ; preds = %271, %227, %187, %117, %89, %77, %49, %35
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_eXIf(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %15, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %3
  %17 = load i32, i32* %6, align 4
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %16
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = load i32, i32* %6, align 4
  %22 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %20, i32 noundef %21)
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %23, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.290, i64 0, i64 0))
  br label %133

24:                                               ; preds = %16
  %25 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %26 = icmp eq %struct.png_info_def* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 65536
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %27, %24
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %35 = load i32, i32* %6, align 4
  %36 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %34, i32 noundef %35)
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %37, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %133

38:                                               ; preds = %27
  br label %39

39:                                               ; preds = %38
  %40 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %40, i32 0, i32 45
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 32768
  store i32 %43, i32* %41, align 4
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %45 = load i32, i32* %6, align 4
  %46 = zext i32 %45 to i64
  %47 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %44, i64 noundef %46)
  %48 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %49 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %48, i32 0, i32 36
  store i8* %47, i8** %49, align 8
  %50 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %51 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %50, i32 0, i32 36
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %59

54:                                               ; preds = %39
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %56 = load i32, i32* %6, align 4
  %57 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %55, i32 noundef %56)
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %58, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %133

59:                                               ; preds = %39
  store i32 0, i32* %7, align 4
  br label %60

60:                                               ; preds = %112, %59
  %61 = load i32, i32* %7, align 4
  %62 = load i32, i32* %6, align 4
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %64, label %115

64:                                               ; preds = %60
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %66 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %65, i8* noundef %66, i32 noundef 1)
  %67 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %70 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %69, i32 0, i32 36
  %71 = load i8*, i8** %70, align 8
  %72 = load i32, i32* %7, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  store i8 %68, i8* %74, align 1
  %75 = load i32, i32* %7, align 4
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %111

77:                                               ; preds = %64
  %78 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = icmp ne i32 %80, 77
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp ne i32 %85, 73
  br i1 %86, label %98, label %87

87:                                               ; preds = %82, %77
  %88 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %89 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %88, i32 0, i32 36
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 0
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp ne i32 %93, %96
  br i1 %97, label %98, label %110

98:                                               ; preds = %87, %82
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %100 = load i32, i32* %6, align 4
  %101 = sub i32 %100, 2
  %102 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %99, i32 noundef %101)
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %103, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.316, i64 0, i64 0))
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %105 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %106 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %105, i32 0, i32 36
  %107 = load i8*, i8** %106, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %104, i8* noundef %107)
  %108 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %109 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %108, i32 0, i32 36
  store i8* null, i8** %109, align 8
  br label %133

110:                                              ; preds = %87
  br label %111

111:                                              ; preds = %110, %64
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %7, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %7, align 4
  br label %60, !llvm.loop !242

115:                                              ; preds = %60
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %117 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %116, i32 noundef 0)
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %126

119:                                              ; preds = %115
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %121 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %122 = load i32, i32* %6, align 4
  %123 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %124 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %123, i32 0, i32 36
  %125 = load i8*, i8** %124, align 8
  call void @png_set_eXIf_1(%struct.png_struct_def* noundef %120, %struct.png_info_def* noundef %121, i32 noundef %122, i8* noundef %125)
  br label %126

126:                                              ; preds = %119, %115
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %128 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %129 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %128, i32 0, i32 36
  %130 = load i8*, i8** %129, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %127, i8* noundef %130)
  %131 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %132 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %131, i32 0, i32 36
  store i8* null, i8** %132, align 8
  br label %133

133:                                              ; preds = %126, %98, %54, %33, %19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_hIST(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [256 x i16], align 16
  %10 = alloca [2 x i8], align 1
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 15
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24, %18
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = load i32, i32* %6, align 4
  %33 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %31, i32 noundef %32)
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %34, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %106

35:                                               ; preds = %24
  %36 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %37 = icmp ne %struct.png_info_def* %36, null
  br i1 %37, label %38, label %49

38:                                               ; preds = %35
  %39 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 64
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %46 = load i32, i32* %6, align 4
  %47 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %45, i32 noundef %46)
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %48, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %106

49:                                               ; preds = %38, %35
  br label %50

50:                                               ; preds = %49
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %6, align 4
  %53 = udiv i32 %52, 2
  store i32 %53, i32* %7, align 4
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* %7, align 4
  %56 = mul i32 %55, 2
  %57 = icmp ne i32 %54, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %51
  %59 = load i32, i32* %7, align 4
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 53
  %62 = load i16, i16* %61, align 8
  %63 = zext i16 %62 to i32
  %64 = icmp ne i32 %59, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = load i32, i32* %7, align 4
  %67 = icmp ugt i32 %66, 256
  br i1 %67, label %68, label %73

68:                                               ; preds = %65, %58, %51
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %70 = load i32, i32* %6, align 4
  %71 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %69, i32 noundef %70)
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %72, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %106

73:                                               ; preds = %65
  store i32 0, i32* %8, align 4
  br label %74

74:                                               ; preds = %94, %73
  %75 = load i32, i32* %8, align 4
  %76 = load i32, i32* %7, align 4
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %78, label %97

78:                                               ; preds = %74
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %80 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %79, i8* noundef %80, i32 noundef 2)
  %81 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl i32 %83, 8
  %85 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 0
  %86 = getelementptr inbounds i8, i8* %85, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add i32 %84, %88
  %90 = trunc i32 %89 to i16
  %91 = load i32, i32* %8, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [256 x i16], [256 x i16]* %9, i64 0, i64 %92
  store i16 %90, i16* %93, align 2
  br label %94

94:                                               ; preds = %78
  %95 = load i32, i32* %8, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %8, align 4
  br label %74, !llvm.loop !243

97:                                               ; preds = %74
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %99 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %98, i32 noundef 0)
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  br label %106

102:                                              ; preds = %97
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %104 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %105 = getelementptr inbounds [256 x i16], [256 x i16]* %9, i64 0, i64 0
  call void @png_set_hIST(%struct.png_struct_def* noundef %103, %struct.png_info_def* noundef %104, i16* noundef %105)
  br label %106

106:                                              ; preds = %102, %101, %68, %44, %30
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_pHYs(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [9 x i8], align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %25, i32 noundef %26)
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %28, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %115

29:                                               ; preds = %18
  %30 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %31 = icmp ne %struct.png_info_def* %30, null
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 128
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %32
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = load i32, i32* %6, align 4
  %41 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %39, i32 noundef %40)
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %42, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %115

43:                                               ; preds = %32, %29
  br label %44

44:                                               ; preds = %43
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %6, align 4
  %47 = icmp ne i32 %46, 9
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %50 = load i32, i32* %6, align 4
  %51 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %49, i32 noundef %50)
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %52, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %115

53:                                               ; preds = %45
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %54, i8* noundef %55, i32 noundef 9)
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %56, i32 noundef 0)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  br label %115

60:                                               ; preds = %53
  %61 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl i32 %63, 24
  %65 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl i32 %68, 16
  %70 = add i32 %64, %69
  %71 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %72 = getelementptr inbounds i8, i8* %71, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 8
  %76 = add i32 %70, %75
  %77 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %78 = getelementptr inbounds i8, i8* %77, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = add i32 %76, %80
  store i32 %81, i32* %8, align 4
  %82 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = shl i32 %85, 24
  %87 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  %89 = getelementptr inbounds i8, i8* %88, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl i32 %91, 16
  %93 = add i32 %86, %92
  %94 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %95 = getelementptr inbounds i8, i8* %94, i64 4
  %96 = getelementptr inbounds i8, i8* %95, i64 2
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl i32 %98, 8
  %100 = add i32 %93, %99
  %101 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %102 = getelementptr inbounds i8, i8* %101, i64 4
  %103 = getelementptr inbounds i8, i8* %102, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = add i32 %100, %105
  store i32 %106, i32* %9, align 4
  %107 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 8
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  store i32 %109, i32* %10, align 4
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %111 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %112 = load i32, i32* %8, align 4
  %113 = load i32, i32* %9, align 4
  %114 = load i32, i32* %10, align 4
  call void @png_set_pHYs(%struct.png_struct_def* noundef %110, %struct.png_info_def* noundef %111, i32 noundef %112, i32 noundef %113, i32 noundef %114)
  br label %115

115:                                              ; preds = %60, %59, %48, %38, %24
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_oFFs(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [9 x i8], align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %25, i32 noundef %26)
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %28, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %188

29:                                               ; preds = %18
  %30 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %31 = icmp ne %struct.png_info_def* %30, null
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 256
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %32
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = load i32, i32* %6, align 4
  %41 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %39, i32 noundef %40)
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %42, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %188

43:                                               ; preds = %32, %29
  br label %44

44:                                               ; preds = %43
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %6, align 4
  %47 = icmp ne i32 %46, 9
  br i1 %47, label %48, label %53

48:                                               ; preds = %45
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %50 = load i32, i32* %6, align 4
  %51 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %49, i32 noundef %50)
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %52, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %188

53:                                               ; preds = %45
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %54, i8* noundef %55, i32 noundef 9)
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %56, i32 noundef 0)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  br label %188

60:                                               ; preds = %53
  %61 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = and i32 %63, 128
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %92

66:                                               ; preds = %60
  %67 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl i32 %69, 24
  %71 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 16
  %76 = add i32 %70, %75
  %77 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %78 = getelementptr inbounds i8, i8* %77, i64 2
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl i32 %80, 8
  %82 = add i32 %76, %81
  %83 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %84 = getelementptr inbounds i8, i8* %83, i64 3
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = add i32 %82, %86
  %88 = xor i32 %87, -1
  %89 = add i32 %88, 1
  %90 = and i32 %89, 2147483647
  %91 = sub nsw i32 0, %90
  br label %114

92:                                               ; preds = %60
  %93 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, 24
  %97 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl i32 %100, 16
  %102 = add i32 %96, %101
  %103 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %104 = getelementptr inbounds i8, i8* %103, i64 2
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl i32 %106, 8
  %108 = add i32 %102, %107
  %109 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %110 = getelementptr inbounds i8, i8* %109, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = add i32 %108, %112
  br label %114

114:                                              ; preds = %92, %66
  %115 = phi i32 [ %91, %66 ], [ %113, %92 ]
  store i32 %115, i32* %8, align 4
  %116 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %117 = getelementptr inbounds i8, i8* %116, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = and i32 %119, 128
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %152

122:                                              ; preds = %114
  %123 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %124 = getelementptr inbounds i8, i8* %123, i64 4
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl i32 %126, 24
  %128 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %129 = getelementptr inbounds i8, i8* %128, i64 4
  %130 = getelementptr inbounds i8, i8* %129, i64 1
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = shl i32 %132, 16
  %134 = add i32 %127, %133
  %135 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %136 = getelementptr inbounds i8, i8* %135, i64 4
  %137 = getelementptr inbounds i8, i8* %136, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl i32 %139, 8
  %141 = add i32 %134, %140
  %142 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %143 = getelementptr inbounds i8, i8* %142, i64 4
  %144 = getelementptr inbounds i8, i8* %143, i64 3
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = add i32 %141, %146
  %148 = xor i32 %147, -1
  %149 = add i32 %148, 1
  %150 = and i32 %149, 2147483647
  %151 = sub nsw i32 0, %150
  br label %178

152:                                              ; preds = %114
  %153 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %154 = getelementptr inbounds i8, i8* %153, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = shl i32 %156, 24
  %158 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %159 = getelementptr inbounds i8, i8* %158, i64 4
  %160 = getelementptr inbounds i8, i8* %159, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = shl i32 %162, 16
  %164 = add i32 %157, %163
  %165 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %166 = getelementptr inbounds i8, i8* %165, i64 4
  %167 = getelementptr inbounds i8, i8* %166, i64 2
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = shl i32 %169, 8
  %171 = add i32 %164, %170
  %172 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  %173 = getelementptr inbounds i8, i8* %172, i64 4
  %174 = getelementptr inbounds i8, i8* %173, i64 3
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = add i32 %171, %176
  br label %178

178:                                              ; preds = %152, %122
  %179 = phi i32 [ %151, %122 ], [ %177, %152 ]
  store i32 %179, i32* %9, align 4
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 8
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  store i32 %182, i32* %10, align 4
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %184 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %185 = load i32, i32* %8, align 4
  %186 = load i32, i32* %9, align 4
  %187 = load i32, i32* %10, align 4
  call void @png_set_oFFs(%struct.png_struct_def* noundef %183, %struct.png_info_def* noundef %184, i32 noundef %185, i32 noundef %186, i32 noundef %187)
  br label %188

188:                                              ; preds = %178, %59, %48, %38, %24
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_pCAL(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8**, align 8
  %16 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 15
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %3
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %23, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %3
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 15
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = load i32, i32* %6, align 4
  %33 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %31, i32 noundef %32)
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %34, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %354

35:                                               ; preds = %24
  %36 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %37 = icmp ne %struct.png_info_def* %36, null
  br i1 %37, label %38, label %49

38:                                               ; preds = %35
  %39 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 1024
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %46 = load i32, i32* %6, align 4
  %47 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %45, i32 noundef %46)
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %48, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %354

49:                                               ; preds = %38, %35
  br label %50

50:                                               ; preds = %49
  br label %51

51:                                               ; preds = %50
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %53 = load i32, i32* %6, align 4
  %54 = add i32 %53, 1
  %55 = zext i32 %54 to i64
  %56 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %52, i64 noundef %55, i32 noundef 2)
  store i8* %56, i8** %11, align 8
  %57 = load i8*, i8** %11, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %64

59:                                               ; preds = %51
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %61 = load i32, i32* %6, align 4
  %62 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %60, i32 noundef %61)
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %63, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %354

64:                                               ; preds = %51
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %66 = load i8*, i8** %11, align 8
  %67 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %65, i8* noundef %66, i32 noundef %67)
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %68, i32 noundef 0)
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %64
  br label %354

72:                                               ; preds = %64
  %73 = load i8*, i8** %11, align 8
  %74 = load i32, i32* %6, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  store i8 0, i8* %76, align 1
  %77 = load i8*, i8** %11, align 8
  store i8* %77, i8** %12, align 8
  br label %78

78:                                               ; preds = %83, %72
  %79 = load i8*, i8** %12, align 8
  %80 = load i8, i8* %79, align 1
  %81 = icmp ne i8 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  br label %83

83:                                               ; preds = %82
  %84 = load i8*, i8** %12, align 8
  %85 = getelementptr inbounds i8, i8* %84, i32 1
  store i8* %85, i8** %12, align 8
  br label %78, !llvm.loop !244

86:                                               ; preds = %78
  %87 = load i8*, i8** %11, align 8
  %88 = load i32, i32* %6, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  store i8* %90, i8** %14, align 8
  %91 = load i8*, i8** %14, align 8
  %92 = load i8*, i8** %12, align 8
  %93 = ptrtoint i8* %91 to i64
  %94 = ptrtoint i8* %92 to i64
  %95 = sub i64 %93, %94
  %96 = icmp sle i64 %95, 12
  br i1 %96, label %97, label %99

97:                                               ; preds = %86
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %98, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %354

99:                                               ; preds = %86
  %100 = load i8*, i8** %12, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = and i32 %103, 128
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %136

106:                                              ; preds = %99
  %107 = load i8*, i8** %12, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl i32 %110, 24
  %112 = load i8*, i8** %12, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = shl i32 %116, 16
  %118 = add i32 %111, %117
  %119 = load i8*, i8** %12, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = getelementptr inbounds i8, i8* %120, i64 2
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = shl i32 %123, 8
  %125 = add i32 %118, %124
  %126 = load i8*, i8** %12, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 1
  %128 = getelementptr inbounds i8, i8* %127, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %125, %130
  %132 = xor i32 %131, -1
  %133 = add i32 %132, 1
  %134 = and i32 %133, 2147483647
  %135 = sub nsw i32 0, %134
  br label %162

136:                                              ; preds = %99
  %137 = load i8*, i8** %12, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = shl i32 %140, 24
  %142 = load i8*, i8** %12, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  %144 = getelementptr inbounds i8, i8* %143, i64 1
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = shl i32 %146, 16
  %148 = add i32 %141, %147
  %149 = load i8*, i8** %12, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 1
  %151 = getelementptr inbounds i8, i8* %150, i64 2
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = shl i32 %153, 8
  %155 = add i32 %148, %154
  %156 = load i8*, i8** %12, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 1
  %158 = getelementptr inbounds i8, i8* %157, i64 3
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = add i32 %155, %160
  br label %162

162:                                              ; preds = %136, %106
  %163 = phi i32 [ %135, %106 ], [ %161, %136 ]
  store i32 %163, i32* %7, align 4
  %164 = load i8*, i8** %12, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 5
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = and i32 %167, 128
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %200

170:                                              ; preds = %162
  %171 = load i8*, i8** %12, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 5
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = shl i32 %174, 24
  %176 = load i8*, i8** %12, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 5
  %178 = getelementptr inbounds i8, i8* %177, i64 1
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = shl i32 %180, 16
  %182 = add i32 %175, %181
  %183 = load i8*, i8** %12, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 5
  %185 = getelementptr inbounds i8, i8* %184, i64 2
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = shl i32 %187, 8
  %189 = add i32 %182, %188
  %190 = load i8*, i8** %12, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 5
  %192 = getelementptr inbounds i8, i8* %191, i64 3
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = add i32 %189, %194
  %196 = xor i32 %195, -1
  %197 = add i32 %196, 1
  %198 = and i32 %197, 2147483647
  %199 = sub nsw i32 0, %198
  br label %226

200:                                              ; preds = %162
  %201 = load i8*, i8** %12, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = shl i32 %204, 24
  %206 = load i8*, i8** %12, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 5
  %208 = getelementptr inbounds i8, i8* %207, i64 1
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = shl i32 %210, 16
  %212 = add i32 %205, %211
  %213 = load i8*, i8** %12, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 5
  %215 = getelementptr inbounds i8, i8* %214, i64 2
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = shl i32 %217, 8
  %219 = add i32 %212, %218
  %220 = load i8*, i8** %12, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 5
  %222 = getelementptr inbounds i8, i8* %221, i64 3
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = add i32 %219, %224
  br label %226

226:                                              ; preds = %200, %170
  %227 = phi i32 [ %199, %170 ], [ %225, %200 ]
  store i32 %227, i32* %8, align 4
  %228 = load i8*, i8** %12, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 9
  %230 = load i8, i8* %229, align 1
  store i8 %230, i8* %9, align 1
  %231 = load i8*, i8** %12, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 10
  %233 = load i8, i8* %232, align 1
  store i8 %233, i8* %10, align 1
  %234 = load i8*, i8** %12, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 11
  store i8* %235, i8** %13, align 8
  %236 = load i8, i8* %9, align 1
  %237 = zext i8 %236 to i32
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %243

239:                                              ; preds = %226
  %240 = load i8, i8* %10, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp ne i32 %241, 2
  br i1 %242, label %267, label %243

243:                                              ; preds = %239, %226
  %244 = load i8, i8* %9, align 1
  %245 = zext i8 %244 to i32
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %251

247:                                              ; preds = %243
  %248 = load i8, i8* %10, align 1
  %249 = zext i8 %248 to i32
  %250 = icmp ne i32 %249, 3
  br i1 %250, label %267, label %251

251:                                              ; preds = %247, %243
  %252 = load i8, i8* %9, align 1
  %253 = zext i8 %252 to i32
  %254 = icmp eq i32 %253, 2
  br i1 %254, label %255, label %259

255:                                              ; preds = %251
  %256 = load i8, i8* %10, align 1
  %257 = zext i8 %256 to i32
  %258 = icmp ne i32 %257, 3
  br i1 %258, label %267, label %259

259:                                              ; preds = %255, %251
  %260 = load i8, i8* %9, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 3
  br i1 %262, label %263, label %269

263:                                              ; preds = %259
  %264 = load i8, i8* %10, align 1
  %265 = zext i8 %264 to i32
  %266 = icmp ne i32 %265, 4
  br i1 %266, label %267, label %269

267:                                              ; preds = %263, %255, %247, %239
  %268 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %268, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30.325, i64 0, i64 0))
  br label %354

269:                                              ; preds = %263, %259
  %270 = load i8, i8* %9, align 1
  %271 = zext i8 %270 to i32
  %272 = icmp sge i32 %271, 4
  br i1 %272, label %273, label %275

273:                                              ; preds = %269
  %274 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %274, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31.326, i64 0, i64 0))
  br label %275

275:                                              ; preds = %273, %269
  br label %276

276:                                              ; preds = %275
  %277 = load i8*, i8** %13, align 8
  store i8* %277, i8** %12, align 8
  br label %278

278:                                              ; preds = %283, %276
  %279 = load i8*, i8** %12, align 8
  %280 = load i8, i8* %279, align 1
  %281 = icmp ne i8 %280, 0
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  br label %283

283:                                              ; preds = %282
  %284 = load i8*, i8** %12, align 8
  %285 = getelementptr inbounds i8, i8* %284, i32 1
  store i8* %285, i8** %12, align 8
  br label %278, !llvm.loop !245

286:                                              ; preds = %278
  %287 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %288 = load i8, i8* %10, align 1
  %289 = zext i8 %288 to i64
  %290 = mul i64 %289, 8
  %291 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %287, i64 noundef %290)
  %292 = bitcast i8* %291 to i8**
  store i8** %292, i8*** %15, align 8
  %293 = load i8**, i8*** %15, align 8
  %294 = icmp eq i8** %293, null
  br i1 %294, label %295, label %297

295:                                              ; preds = %286
  %296 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %296, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %354

297:                                              ; preds = %286
  store i32 0, i32* %16, align 4
  br label %298

298:                                              ; preds = %336, %297
  %299 = load i32, i32* %16, align 4
  %300 = load i8, i8* %10, align 1
  %301 = zext i8 %300 to i32
  %302 = icmp slt i32 %299, %301
  br i1 %302, label %303, label %339

303:                                              ; preds = %298
  %304 = load i8*, i8** %12, align 8
  %305 = getelementptr inbounds i8, i8* %304, i32 1
  store i8* %305, i8** %12, align 8
  %306 = load i8*, i8** %12, align 8
  %307 = load i8**, i8*** %15, align 8
  %308 = load i32, i32* %16, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8*, i8** %307, i64 %309
  store i8* %306, i8** %310, align 8
  br label %311

311:                                              ; preds = %323, %303
  %312 = load i8*, i8** %12, align 8
  %313 = load i8*, i8** %14, align 8
  %314 = icmp ule i8* %312, %313
  br i1 %314, label %315, label %320

315:                                              ; preds = %311
  %316 = load i8*, i8** %12, align 8
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp ne i32 %318, 0
  br label %320

320:                                              ; preds = %315, %311
  %321 = phi i1 [ false, %311 ], [ %319, %315 ]
  br i1 %321, label %322, label %326

322:                                              ; preds = %320
  br label %323

323:                                              ; preds = %322
  %324 = load i8*, i8** %12, align 8
  %325 = getelementptr inbounds i8, i8* %324, i32 1
  store i8* %325, i8** %12, align 8
  br label %311, !llvm.loop !246

326:                                              ; preds = %320
  %327 = load i8*, i8** %12, align 8
  %328 = load i8*, i8** %14, align 8
  %329 = icmp ugt i8* %327, %328
  br i1 %329, label %330, label %335

330:                                              ; preds = %326
  %331 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %332 = load i8**, i8*** %15, align 8
  %333 = bitcast i8** %332 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %331, i8* noundef %333)
  %334 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %334, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32.327, i64 0, i64 0))
  br label %354

335:                                              ; preds = %326
  br label %336

336:                                              ; preds = %335
  %337 = load i32, i32* %16, align 4
  %338 = add nsw i32 %337, 1
  store i32 %338, i32* %16, align 4
  br label %298, !llvm.loop !247

339:                                              ; preds = %298
  %340 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %341 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %342 = load i8*, i8** %11, align 8
  %343 = load i32, i32* %7, align 4
  %344 = load i32, i32* %8, align 4
  %345 = load i8, i8* %9, align 1
  %346 = zext i8 %345 to i32
  %347 = load i8, i8* %10, align 1
  %348 = zext i8 %347 to i32
  %349 = load i8*, i8** %13, align 8
  %350 = load i8**, i8*** %15, align 8
  call void @png_set_pCAL(%struct.png_struct_def* noundef %340, %struct.png_info_def* noundef %341, i8* noundef %342, i32 noundef %343, i32 noundef %344, i32 noundef %346, i32 noundef %348, i8* noundef %349, i8** noundef %350)
  %351 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %352 = load i8**, i8*** %15, align 8
  %353 = bitcast i8** %352 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %351, i8* noundef %353)
  br label %354

354:                                              ; preds = %339, %330, %295, %267, %97, %71, %59, %44, %30
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_sCAL(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %25, i32 noundef %26)
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %28, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.265, i64 0, i64 0))
  br label %159

29:                                               ; preds = %18
  %30 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %31 = icmp ne %struct.png_info_def* %30, null
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 16384
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %32
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %40 = load i32, i32* %6, align 4
  %41 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %39, i32 noundef %40)
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %42, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %159

43:                                               ; preds = %32, %29
  %44 = load i32, i32* %6, align 4
  %45 = icmp ult i32 %44, 4
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %48 = load i32, i32* %6, align 4
  %49 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %47, i32 noundef %48)
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %50, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %159

51:                                               ; preds = %43
  br label %52

52:                                               ; preds = %51
  br label %53

53:                                               ; preds = %52
  br label %54

54:                                               ; preds = %53
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %56 = load i32, i32* %6, align 4
  %57 = add i32 %56, 1
  %58 = zext i32 %57 to i64
  %59 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %55, i64 noundef %58, i32 noundef 2)
  store i8* %59, i8** %7, align 8
  %60 = load i8*, i8** %7, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %63, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %65 = load i32, i32* %6, align 4
  %66 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %64, i32 noundef %65)
  br label %159

67:                                               ; preds = %54
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = load i8*, i8** %7, align 8
  %70 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %68, i8* noundef %69, i32 noundef %70)
  %71 = load i8*, i8** %7, align 8
  %72 = load i32, i32* %6, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  store i8 0, i8* %74, align 1
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %76 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %75, i32 noundef 0)
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %67
  br label %159

79:                                               ; preds = %67
  %80 = load i8*, i8** %7, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = icmp ne i32 %83, 1
  br i1 %84, label %85, label %93

85:                                               ; preds = %79
  %86 = load i8*, i8** %7, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 0
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = icmp ne i32 %89, 2
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %92, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33.330, i64 0, i64 0))
  br label %159

93:                                               ; preds = %85, %79
  store i64 1, i64* %8, align 8
  store i32 0, i32* %9, align 4
  %94 = load i8*, i8** %7, align 8
  %95 = load i32, i32* %6, align 4
  %96 = zext i32 %95 to i64
  %97 = call i32 @png_check_fp_number(i8* noundef %94, i64 noundef %96, i32* noundef %9, i64* noundef %8)
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = load i64, i64* %8, align 8
  %101 = load i32, i32* %6, align 4
  %102 = zext i32 %101 to i64
  %103 = icmp uge i64 %100, %102
  br i1 %103, label %112, label %104

104:                                              ; preds = %99
  %105 = load i8*, i8** %7, align 8
  %106 = load i64, i64* %8, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %8, align 8
  %108 = getelementptr inbounds i8, i8* %105, i64 %106
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %104, %99, %93
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %113, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34.331, i64 0, i64 0))
  br label %159

114:                                              ; preds = %104
  %115 = load i32, i32* %9, align 4
  %116 = and i32 %115, 392
  %117 = icmp eq i32 %116, 264
  %118 = zext i1 %117 to i32
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %114
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %121, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35.332, i64 0, i64 0))
  br label %158

122:                                              ; preds = %114
  %123 = load i64, i64* %8, align 8
  store i64 %123, i64* %10, align 8
  store i32 0, i32* %9, align 4
  %124 = load i8*, i8** %7, align 8
  %125 = load i32, i32* %6, align 4
  %126 = zext i32 %125 to i64
  %127 = call i32 @png_check_fp_number(i8* noundef %124, i64 noundef %126, i32* noundef %9, i64* noundef %8)
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %122
  %130 = load i64, i64* %8, align 8
  %131 = load i32, i32* %6, align 4
  %132 = zext i32 %131 to i64
  %133 = icmp ne i64 %130, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %129, %122
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %135, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.333, i64 0, i64 0))
  br label %157

136:                                              ; preds = %129
  %137 = load i32, i32* %9, align 4
  %138 = and i32 %137, 392
  %139 = icmp eq i32 %138, 264
  %140 = zext i1 %139 to i32
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %143, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37.334, i64 0, i64 0))
  br label %156

144:                                              ; preds = %136
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %146 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %147 = load i8*, i8** %7, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 0
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = load i8*, i8** %7, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8*, i8** %7, align 8
  %154 = load i64, i64* %10, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 %154
  call void @png_set_sCAL_s(%struct.png_struct_def* noundef %145, %struct.png_info_def* noundef %146, i32 noundef %150, i8* noundef %152, i8* noundef %155)
  br label %156

156:                                              ; preds = %144, %142
  br label %157

157:                                              ; preds = %156, %134
  br label %158

158:                                              ; preds = %157, %120
  br label %159

159:                                              ; preds = %24, %38, %46, %62, %78, %91, %158, %112
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_tIME(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [7 x i8], align 1
  %8 = alloca %struct.png_time_struct, align 2
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %15, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %3
  %17 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %18 = icmp ne %struct.png_info_def* %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %16
  %20 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %21 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 512
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %27 = load i32, i32* %6, align 4
  %28 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %26, i32 noundef %27)
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %29, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.270, i64 0, i64 0))
  br label %86

30:                                               ; preds = %19, %16
  br label %31

31:                                               ; preds = %30
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 15
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 15
  %40 = load i32, i32* %39, align 4
  %41 = or i32 %40, 8
  store i32 %41, i32* %39, align 4
  br label %42

42:                                               ; preds = %37, %31
  %43 = load i32, i32* %6, align 4
  %44 = icmp ne i32 %43, 7
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %46, i32 noundef %47)
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %49, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.266, i64 0, i64 0))
  br label %86

50:                                               ; preds = %42
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @png_crc_read(%struct.png_struct_def* noundef %51, i8* noundef %52, i32 noundef 7)
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %54 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %53, i32 noundef 0)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  br label %86

57:                                               ; preds = %50
  %58 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 6
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %8, i32 0, i32 5
  store i8 %59, i8* %60, align 2
  %61 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 5
  %62 = load i8, i8* %61, align 1
  %63 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %8, i32 0, i32 4
  store i8 %62, i8* %63, align 1
  %64 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 4
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %8, i32 0, i32 3
  store i8 %65, i8* %66, align 2
  %67 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 3
  %68 = load i8, i8* %67, align 1
  %69 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %8, i32 0, i32 2
  store i8 %68, i8* %69, align 1
  %70 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %8, i32 0, i32 1
  store i8 %71, i8* %72, align 2
  %73 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl i32 %75, 8
  %77 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = add i32 %76, %80
  %82 = trunc i32 %81 to i16
  %83 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %8, i32 0, i32 0
  store i16 %82, i16* %83, align 2
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %85 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_set_tIME(%struct.png_struct_def* noundef %84, %struct.png_info_def* noundef %85, %struct.png_time_struct* noundef %8)
  br label %86

86:                                               ; preds = %57, %56, %45, %25
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_tEXt(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_text_struct, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %11, align 4
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 135
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 135
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = load i32, i32* %6, align 4
  %24 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %22, i32 noundef %23)
  br label %118

25:                                               ; preds = %16
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 135
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %32, i32 noundef %33)
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38.339, i64 0, i64 0))
  br label %118

36:                                               ; preds = %25
  br label %37

37:                                               ; preds = %36, %3
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 15
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 15
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %45
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 15
  %54 = load i32, i32* %53, align 4
  %55 = or i32 %54, 8
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %51, %45
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %58 = load i32, i32* %6, align 4
  %59 = add i32 %58, 1
  %60 = zext i32 %59 to i64
  %61 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %57, i64 noundef %60, i32 noundef 1)
  store i8* %61, i8** %8, align 8
  %62 = load i8*, i8** %8, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %56
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %65, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %118

66:                                               ; preds = %56
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %68 = load i8*, i8** %8, align 8
  %69 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %67, i8* noundef %68, i32 noundef %69)
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %71 = load i32, i32* %11, align 4
  %72 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %70, i32 noundef %71)
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  br label %118

75:                                               ; preds = %66
  %76 = load i8*, i8** %8, align 8
  store i8* %76, i8** %9, align 8
  %77 = load i8*, i8** %9, align 8
  %78 = load i32, i32* %6, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  store i8 0, i8* %80, align 1
  %81 = load i8*, i8** %9, align 8
  store i8* %81, i8** %10, align 8
  br label %82

82:                                               ; preds = %87, %75
  %83 = load i8*, i8** %10, align 8
  %84 = load i8, i8* %83, align 1
  %85 = icmp ne i8 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  br label %87

87:                                               ; preds = %86
  %88 = load i8*, i8** %10, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %89, i8** %10, align 8
  br label %82, !llvm.loop !248

90:                                               ; preds = %82
  %91 = load i8*, i8** %10, align 8
  %92 = load i8*, i8** %9, align 8
  %93 = load i32, i32* %6, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = icmp ne i8* %91, %95
  br i1 %96, label %97, label %100

97:                                               ; preds = %90
  %98 = load i8*, i8** %10, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %10, align 8
  br label %100

100:                                              ; preds = %97, %90
  %101 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 0
  store i32 -1, i32* %101, align 8
  %102 = load i8*, i8** %9, align 8
  %103 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 1
  store i8* %102, i8** %103, align 8
  %104 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 5
  store i8* null, i8** %104, align 8
  %105 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 6
  store i8* null, i8** %105, align 8
  %106 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 4
  store i64 0, i64* %106, align 8
  %107 = load i8*, i8** %10, align 8
  %108 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 2
  store i8* %107, i8** %108, align 8
  %109 = load i8*, i8** %10, align 8
  %110 = call i64 @strlen(i8* noundef %109) #14
  %111 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %7, i32 0, i32 3
  store i64 %110, i64* %111, align 8
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %113 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %114 = call i32 @png_set_text_2(%struct.png_struct_def* noundef %112, %struct.png_info_def* noundef %113, %struct.png_text_struct* noundef %7, i32 noundef 1)
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %100
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %117, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39.340, i64 0, i64 0))
  br label %118

118:                                              ; preds = %21, %31, %64, %74, %116, %100
  ret void
}

; Function Attrs: nounwind readonly willreturn
declare i64 @strlen(i8* noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_zTXt(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %struct.png_text_struct, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  store i8* null, i8** %7, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 135
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 135
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = load i32, i32* %6, align 4
  %24 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %22, i32 noundef %23)
  br label %177

25:                                               ; preds = %16
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 135
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %32, i32 noundef %33)
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %35, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38.339, i64 0, i64 0))
  br label %177

36:                                               ; preds = %25
  br label %37

37:                                               ; preds = %36, %3
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 15
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 15
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %45
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 15
  %54 = load i32, i32* %53, align 4
  %55 = or i32 %54, 8
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %51, %45
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %58 = load i32, i32* %6, align 4
  %59 = zext i32 %58 to i64
  %60 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %57, i64 noundef %59, i32 noundef 2)
  store i8* %60, i8** %8, align 8
  %61 = load i8*, i8** %8, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %68

63:                                               ; preds = %56
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %65 = load i32, i32* %6, align 4
  %66 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %64, i32 noundef %65)
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %67, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %177

68:                                               ; preds = %56
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %70 = load i8*, i8** %8, align 8
  %71 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %69, i8* noundef %70, i32 noundef %71)
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %73 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %72, i32 noundef 0)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %68
  br label %177

76:                                               ; preds = %68
  store i32 0, i32* %9, align 4
  br label %77

77:                                               ; preds = %92, %76
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %6, align 4
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = load i8*, i8** %8, align 8
  %83 = load i32, i32* %9, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = icmp ne i32 %87, 0
  br label %89

89:                                               ; preds = %81, %77
  %90 = phi i1 [ false, %77 ], [ %88, %81 ]
  br i1 %90, label %91, label %95

91:                                               ; preds = %89
  br label %92

92:                                               ; preds = %91
  %93 = load i32, i32* %9, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %9, align 4
  br label %77, !llvm.loop !249

95:                                               ; preds = %89
  %96 = load i32, i32* %9, align 4
  %97 = icmp ugt i32 %96, 79
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = load i32, i32* %9, align 4
  %100 = icmp ult i32 %99, 1
  br i1 %100, label %101, label %102

101:                                              ; preds = %98, %95
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.294, i64 0, i64 0), i8** %7, align 8
  br label %171

102:                                              ; preds = %98
  %103 = load i32, i32* %9, align 4
  %104 = add i32 %103, 3
  %105 = load i32, i32* %6, align 4
  %106 = icmp ugt i32 %104, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %102
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40.343, i64 0, i64 0), i8** %7, align 8
  br label %170

108:                                              ; preds = %102
  %109 = load i8*, i8** %8, align 8
  %110 = load i32, i32* %9, align 4
  %111 = add i32 %110, 1
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %109, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %108
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41.344, i64 0, i64 0), i8** %7, align 8
  br label %169

118:                                              ; preds = %108
  store i64 -1, i64* %10, align 8
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %120 = load i32, i32* %6, align 4
  %121 = load i32, i32* %9, align 4
  %122 = add i32 %121, 2
  %123 = call i32 @png_decompress_chunk(%struct.png_struct_def* noundef %119, i32 noundef %120, i32 noundef %122, i64* noundef %10, i32 noundef 1)
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %163

125:                                              ; preds = %118
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %127 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %126, i32 0, i32 139
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42.345, i64 0, i64 0), i8** %7, align 8
  br label %162

131:                                              ; preds = %125
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 139
  %134 = load i8*, i8** %133, align 8
  store i8* %134, i8** %8, align 8
  %135 = load i8*, i8** %8, align 8
  %136 = load i64, i64* %10, align 8
  %137 = load i32, i32* %9, align 4
  %138 = add i32 %137, 2
  %139 = zext i32 %138 to i64
  %140 = add i64 %136, %139
  %141 = getelementptr inbounds i8, i8* %135, i64 %140
  store i8 0, i8* %141, align 1
  %142 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 0
  store i32 0, i32* %142, align 8
  %143 = load i8*, i8** %8, align 8
  %144 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 1
  store i8* %143, i8** %144, align 8
  %145 = load i8*, i8** %8, align 8
  %146 = load i32, i32* %9, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %145, i64 %147
  %149 = getelementptr inbounds i8, i8* %148, i64 2
  %150 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 2
  store i8* %149, i8** %150, align 8
  %151 = load i64, i64* %10, align 8
  %152 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 3
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 4
  store i64 0, i64* %153, align 8
  %154 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 5
  store i8* null, i8** %154, align 8
  %155 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %11, i32 0, i32 6
  store i8* null, i8** %155, align 8
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %157 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %158 = call i32 @png_set_text_2(%struct.png_struct_def* noundef %156, %struct.png_info_def* noundef %157, %struct.png_text_struct* noundef %11, i32 noundef 1)
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %131
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43.346, i64 0, i64 0), i8** %7, align 8
  br label %161

161:                                              ; preds = %160, %131
  br label %162

162:                                              ; preds = %161, %130
  br label %168

163:                                              ; preds = %118
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %165 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %164, i32 0, i32 19
  %166 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %165, i32 0, i32 6
  %167 = load i8*, i8** %166, align 8
  store i8* %167, i8** %7, align 8
  br label %168

168:                                              ; preds = %163, %162
  br label %169

169:                                              ; preds = %168, %117
  br label %170

170:                                              ; preds = %169, %107
  br label %171

171:                                              ; preds = %170, %101
  %172 = load i8*, i8** %7, align 8
  %173 = icmp ne i8* %172, null
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %176 = load i8*, i8** %7, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %175, i8* noundef %176)
  br label %177

177:                                              ; preds = %21, %31, %63, %75, %174, %171
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_decompress_chunk(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, i64* noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i64* %3, i64** %10, align 8
  store i32 %4, i32* %11, align 4
  store i64 -1, i64* %12, align 8
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 136
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %5
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 136
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %12, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 136
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %12, align 8
  br label %33

33:                                               ; preds = %29, %23, %5
  %34 = load i64, i64* %12, align 8
  %35 = load i32, i32* %9, align 4
  %36 = load i32, i32* %11, align 4
  %37 = icmp ne i32 %36, 0
  %38 = zext i1 %37 to i32
  %39 = add i32 %35, %38
  %40 = zext i32 %39 to i64
  %41 = icmp uge i64 %34, %40
  br i1 %41, label %42, label %207

42:                                               ; preds = %33
  %43 = load i32, i32* %9, align 4
  %44 = load i32, i32* %11, align 4
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i32
  %47 = add i32 %43, %46
  %48 = zext i32 %47 to i64
  %49 = load i64, i64* %12, align 8
  %50 = sub i64 %49, %48
  store i64 %50, i64* %12, align 8
  %51 = load i64, i64* %12, align 8
  %52 = load i64*, i64** %10, align 8
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %42
  %56 = load i64, i64* %12, align 8
  %57 = load i64*, i64** %10, align 8
  store i64 %56, i64* %57, align 8
  br label %58

58:                                               ; preds = %55, %42
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 44
  %62 = load i32, i32* %61, align 8
  %63 = call i32 @png_inflate_claim(%struct.png_struct_def* noundef %59, i32 noundef %62)
  store i32 %63, i32* %13, align 4
  %64 = load i32, i32* %13, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %200

66:                                               ; preds = %58
  %67 = load i32, i32* %8, align 4
  %68 = load i32, i32* %9, align 4
  %69 = sub i32 %67, %68
  store i32 %69, i32* %14, align 4
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 44
  %73 = load i32, i32* %72, align 8
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 139
  %76 = load i8*, i8** %75, align 8
  %77 = load i32, i32* %9, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i64*, i64** %10, align 8
  %81 = call i32 @png_inflate(%struct.png_struct_def* noundef %70, i32 noundef %73, i32 noundef 1, i8* noundef %79, i32* noundef %14, i8* noundef null, i64* noundef %80)
  store i32 %81, i32* %13, align 4
  %82 = load i32, i32* %13, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %192

84:                                               ; preds = %66
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 19
  %87 = call i32 @inflateReset(%struct.z_stream_s* noundef %86)
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %188

89:                                               ; preds = %84
  %90 = load i64*, i64** %10, align 8
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %15, align 8
  %92 = load i32, i32* %9, align 4
  %93 = zext i32 %92 to i64
  %94 = load i64, i64* %15, align 8
  %95 = add i64 %93, %94
  %96 = load i32, i32* %11, align 4
  %97 = icmp ne i32 %96, 0
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = add i64 %95, %99
  store i64 %100, i64* %16, align 8
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %102 = load i64, i64* %16, align 8
  %103 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %101, i64 noundef %102)
  store i8* %103, i8** %17, align 8
  %104 = load i8*, i8** %17, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %106, label %185

106:                                              ; preds = %89
  %107 = load i8*, i8** %17, align 8
  %108 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %107, i8 0, i64 %108, i1 false)
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 44
  %112 = load i32, i32* %111, align 8
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 139
  %115 = load i8*, i8** %114, align 8
  %116 = load i32, i32* %9, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = load i8*, i8** %17, align 8
  %120 = load i32, i32* %9, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %119, i64 %121
  %123 = load i64*, i64** %10, align 8
  %124 = call i32 @png_inflate(%struct.png_struct_def* noundef %109, i32 noundef %112, i32 noundef 1, i8* noundef %118, i32* noundef %14, i8* noundef %122, i64* noundef %123)
  store i32 %124, i32* %13, align 4
  %125 = load i32, i32* %13, align 4
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %166

127:                                              ; preds = %106
  %128 = load i64, i64* %15, align 8
  %129 = load i64*, i64** %10, align 8
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %128, %130
  br i1 %131, label %132, label %164

132:                                              ; preds = %127
  %133 = load i32, i32* %11, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %143

135:                                              ; preds = %132
  %136 = load i8*, i8** %17, align 8
  %137 = load i32, i32* %9, align 4
  %138 = zext i32 %137 to i64
  %139 = load i64*, i64** %10, align 8
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %138, %140
  %142 = getelementptr inbounds i8, i8* %136, i64 %141
  store i8 0, i8* %142, align 1
  br label %143

143:                                              ; preds = %135, %132
  %144 = load i32, i32* %9, align 4
  %145 = icmp ugt i32 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %143
  %147 = load i8*, i8** %17, align 8
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %149 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %148, i32 0, i32 139
  %150 = load i8*, i8** %149, align 8
  %151 = load i32, i32* %9, align 4
  %152 = zext i32 %151 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 1 %150, i64 %152, i1 false)
  br label %153

153:                                              ; preds = %146, %143
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %155 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 139
  %156 = load i8*, i8** %155, align 8
  store i8* %156, i8** %18, align 8
  %157 = load i8*, i8** %17, align 8
  %158 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %158, i32 0, i32 139
  store i8* %157, i8** %159, align 8
  %160 = load i64, i64* %16, align 8
  %161 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %162 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %161, i32 0, i32 140
  store i64 %160, i64* %162, align 8
  %163 = load i8*, i8** %18, align 8
  store i8* %163, i8** %17, align 8
  br label %165

164:                                              ; preds = %127
  store i32 -7, i32* %13, align 4
  br label %165

165:                                              ; preds = %164, %153
  br label %171

166:                                              ; preds = %106
  %167 = load i32, i32* %13, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  store i32 -7, i32* %13, align 4
  br label %170

170:                                              ; preds = %169, %166
  br label %171

171:                                              ; preds = %170, %165
  %172 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %173 = load i8*, i8** %17, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %172, i8* noundef %173)
  %174 = load i32, i32* %13, align 4
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %184

176:                                              ; preds = %171
  %177 = load i32, i32* %8, align 4
  %178 = load i32, i32* %9, align 4
  %179 = sub i32 %177, %178
  %180 = load i32, i32* %14, align 4
  %181 = icmp ne i32 %179, %180
  br i1 %181, label %182, label %184

182:                                              ; preds = %176
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %183, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.291, i64 0, i64 0))
  br label %184

184:                                              ; preds = %182, %176, %171
  br label %187

185:                                              ; preds = %89
  store i32 -4, i32* %13, align 4
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_zstream_error(%struct.png_struct_def* noundef %186, i32 noundef -4)
  br label %187

187:                                              ; preds = %185, %184
  br label %191

188:                                              ; preds = %84
  %189 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %190 = load i32, i32* %13, align 4
  call void @png_zstream_error(%struct.png_struct_def* noundef %189, i32 noundef %190)
  store i32 -7, i32* %13, align 4
  br label %191

191:                                              ; preds = %188, %187
  br label %197

192:                                              ; preds = %66
  %193 = load i32, i32* %13, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  store i32 -7, i32* %13, align 4
  br label %196

196:                                              ; preds = %195, %192
  br label %197

197:                                              ; preds = %196, %191
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %198, i32 0, i32 18
  store i32 0, i32* %199, align 8
  br label %205

200:                                              ; preds = %58
  %201 = load i32, i32* %13, align 4
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  store i32 -7, i32* %13, align 4
  br label %204

204:                                              ; preds = %203, %200
  br label %205

205:                                              ; preds = %204, %197
  %206 = load i32, i32* %13, align 4
  store i32 %206, i32* %6, align 4
  br label %209

207:                                              ; preds = %33
  %208 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_zstream_error(%struct.png_struct_def* noundef %208, i32 noundef -4)
  store i32 -4, i32* %6, align 4
  br label %209

209:                                              ; preds = %207, %205
  %210 = load i32, i32* %6, align 4
  ret i32 %210
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_inflate(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, i32* noundef %4, i8* noundef %5, i64* noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.png_struct_def*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [1024 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i8* %3, i8** %12, align 8
  store i32* %4, i32** %13, align 8
  store i8* %5, i8** %14, align 8
  store i64* %6, i64** %15, align 8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 18
  %23 = load i32, i32* %22, align 8
  %24 = load i32, i32* %10, align 4
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %160

26:                                               ; preds = %7
  %27 = load i64*, i64** %15, align 8
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %17, align 8
  %29 = load i32*, i32** %13, align 8
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %18, align 4
  %31 = load i8*, i8** %12, align 8
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 19
  %34 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %33, i32 0, i32 0
  store i8* %31, i8** %34, align 8
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 19
  %37 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %36, i32 0, i32 1
  store i32 0, i32* %37, align 8
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 19
  %40 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %39, i32 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = load i8*, i8** %14, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %48

43:                                               ; preds = %26
  %44 = load i8*, i8** %14, align 8
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 19
  %47 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %46, i32 0, i32 3
  store i8* %44, i8** %47, align 8
  br label %48

48:                                               ; preds = %43, %26
  br label %49

49:                                               ; preds = %117, %48
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 19
  %52 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = load i32, i32* %18, align 4
  %55 = add i32 %54, %53
  store i32 %55, i32* %18, align 4
  store i32 -1, i32* %19, align 4
  %56 = load i32, i32* %18, align 4
  %57 = load i32, i32* %19, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %49
  %60 = load i32, i32* %18, align 4
  store i32 %60, i32* %19, align 4
  br label %61

61:                                               ; preds = %59, %49
  %62 = load i32, i32* %19, align 4
  %63 = load i32, i32* %18, align 4
  %64 = sub i32 %63, %62
  store i32 %64, i32* %18, align 4
  %65 = load i32, i32* %19, align 4
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 19
  %68 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %67, i32 0, i32 1
  store i32 %65, i32* %68, align 8
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 19
  %71 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %70, i32 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %72 to i64
  %74 = load i64, i64* %17, align 8
  %75 = add i64 %74, %73
  store i64 %75, i64* %17, align 8
  store i32 -1, i32* %19, align 4
  %76 = load i8*, i8** %14, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %88

78:                                               ; preds = %61
  %79 = getelementptr inbounds [1024 x i8], [1024 x i8]* %20, i64 0, i64 0
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 19
  %82 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %81, i32 0, i32 3
  store i8* %79, i8** %82, align 8
  %83 = load i32, i32* %19, align 4
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 1024, %84
  br i1 %85, label %86, label %87

86:                                               ; preds = %78
  store i32 1024, i32* %19, align 4
  br label %87

87:                                               ; preds = %86, %78
  br label %88

88:                                               ; preds = %87, %61
  %89 = load i64, i64* %17, align 8
  %90 = load i32, i32* %19, align 4
  %91 = zext i32 %90 to i64
  %92 = icmp ult i64 %89, %91
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = load i64, i64* %17, align 8
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %19, align 4
  br label %96

96:                                               ; preds = %93, %88
  %97 = load i32, i32* %19, align 4
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %99 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %98, i32 0, i32 19
  %100 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %99, i32 0, i32 4
  store i32 %97, i32* %100, align 8
  %101 = load i32, i32* %19, align 4
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %17, align 8
  %104 = sub i64 %103, %102
  store i64 %104, i64* %17, align 8
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %106 = load i64, i64* %17, align 8
  %107 = icmp ugt i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %96
  br label %114

109:                                              ; preds = %96
  %110 = load i32, i32* %11, align 4
  %111 = icmp ne i32 %110, 0
  %112 = zext i1 %111 to i64
  %113 = select i1 %111, i32 4, i32 2
  br label %114

114:                                              ; preds = %109, %108
  %115 = phi i32 [ 0, %108 ], [ %113, %109 ]
  %116 = call i32 @png_zlib_inflate(%struct.png_struct_def* noundef %105, i32 noundef %115)
  store i32 %116, i32* %16, align 4
  br label %117

117:                                              ; preds = %114
  %118 = load i32, i32* %16, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %49, label %120, !llvm.loop !250

120:                                              ; preds = %117
  %121 = load i8*, i8** %14, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %127

123:                                              ; preds = %120
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 19
  %126 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %125, i32 0, i32 3
  store i8* null, i8** %126, align 8
  br label %127

127:                                              ; preds = %123, %120
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 19
  %130 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %129, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = load i32, i32* %18, align 4
  %133 = add i32 %132, %131
  store i32 %133, i32* %18, align 4
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 19
  %136 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %135, i32 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = load i64, i64* %17, align 8
  %140 = add i64 %139, %138
  store i64 %140, i64* %17, align 8
  %141 = load i64, i64* %17, align 8
  %142 = icmp ugt i64 %141, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %127
  %144 = load i64, i64* %17, align 8
  %145 = load i64*, i64** %15, align 8
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %146, %144
  store i64 %147, i64* %145, align 8
  br label %148

148:                                              ; preds = %143, %127
  %149 = load i32, i32* %18, align 4
  %150 = icmp ugt i32 %149, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %148
  %152 = load i32, i32* %18, align 4
  %153 = load i32*, i32** %13, align 8
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %154, %152
  store i32 %155, i32* %153, align 4
  br label %156

156:                                              ; preds = %151, %148
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %158 = load i32, i32* %16, align 4
  call void @png_zstream_error(%struct.png_struct_def* noundef %157, i32 noundef %158)
  %159 = load i32, i32* %16, align 4
  store i32 %159, i32* %8, align 4
  br label %164

160:                                              ; preds = %7
  %161 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %162 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %161, i32 0, i32 19
  %163 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %162, i32 0, i32 6
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62.296, i64 0, i64 0), i8** %163, align 8
  store i32 -2, i32* %8, align 4
  br label %164

164:                                              ; preds = %160, %156
  %165 = load i32, i32* %8, align 4
  ret i32 %165
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_iTXt(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca %struct.png_text_struct, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  store i8* null, i8** %7, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 135
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %40

19:                                               ; preds = %3
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 135
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %25, i32 noundef %26)
  br label %283

28:                                               ; preds = %19
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 135
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %36 = load i32, i32* %6, align 4
  %37 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %35, i32 noundef %36)
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %38, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38.339, i64 0, i64 0))
  br label %283

39:                                               ; preds = %28
  br label %40

40:                                               ; preds = %39, %3
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 15
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %47, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.269, i64 0, i64 0)) #13
  unreachable

48:                                               ; preds = %40
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 15
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %48
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 15
  %57 = load i32, i32* %56, align 4
  %58 = or i32 %57, 8
  store i32 %58, i32* %56, align 4
  br label %59

59:                                               ; preds = %54, %48
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %61 = load i32, i32* %6, align 4
  %62 = add i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %60, i64 noundef %63, i32 noundef 1)
  store i8* %64, i8** %8, align 8
  %65 = load i8*, i8** %8, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %69 = load i32, i32* %6, align 4
  %70 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %68, i32 noundef %69)
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %71, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.292, i64 0, i64 0))
  br label %283

72:                                               ; preds = %59
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %74 = load i8*, i8** %8, align 8
  %75 = load i32, i32* %6, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %73, i8* noundef %74, i32 noundef %75)
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %77 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %76, i32 noundef 0)
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  br label %283

80:                                               ; preds = %72
  store i32 0, i32* %9, align 4
  br label %81

81:                                               ; preds = %96, %80
  %82 = load i32, i32* %9, align 4
  %83 = load i32, i32* %6, align 4
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = load i8*, i8** %8, align 8
  %87 = load i32, i32* %9, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = icmp ne i32 %91, 0
  br label %93

93:                                               ; preds = %85, %81
  %94 = phi i1 [ false, %81 ], [ %92, %85 ]
  br i1 %94, label %95, label %99

95:                                               ; preds = %93
  br label %96

96:                                               ; preds = %95
  %97 = load i32, i32* %9, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %9, align 4
  br label %81, !llvm.loop !251

99:                                               ; preds = %93
  %100 = load i32, i32* %9, align 4
  %101 = icmp ugt i32 %100, 79
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = load i32, i32* %9, align 4
  %104 = icmp ult i32 %103, 1
  br i1 %104, label %105, label %106

105:                                              ; preds = %102, %99
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.294, i64 0, i64 0), i8** %7, align 8
  br label %277

106:                                              ; preds = %102
  %107 = load i32, i32* %9, align 4
  %108 = add i32 %107, 5
  %109 = load i32, i32* %6, align 4
  %110 = icmp ugt i32 %108, %109
  br i1 %110, label %111, label %112

111:                                              ; preds = %106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40.343, i64 0, i64 0), i8** %7, align 8
  br label %276

112:                                              ; preds = %106
  %113 = load i8*, i8** %8, align 8
  %114 = load i32, i32* %9, align 4
  %115 = add i32 %114, 1
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %113, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %139, label %121

121:                                              ; preds = %112
  %122 = load i8*, i8** %8, align 8
  %123 = load i32, i32* %9, align 4
  %124 = add i32 %123, 1
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %122, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %274

130:                                              ; preds = %121
  %131 = load i8*, i8** %8, align 8
  %132 = load i32, i32* %9, align 4
  %133 = add i32 %132, 2
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %131, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %274

139:                                              ; preds = %130, %112
  %140 = load i8*, i8** %8, align 8
  %141 = load i32, i32* %9, align 4
  %142 = add i32 %141, 1
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i8, i8* %140, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = icmp ne i32 %146, 0
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %10, align 4
  store i64 0, i64* %13, align 8
  %149 = load i32, i32* %9, align 4
  %150 = add i32 %149, 3
  store i32 %150, i32* %9, align 4
  %151 = load i32, i32* %9, align 4
  store i32 %151, i32* %11, align 4
  br label %152

152:                                              ; preds = %167, %139
  %153 = load i32, i32* %9, align 4
  %154 = load i32, i32* %6, align 4
  %155 = icmp ult i32 %153, %154
  br i1 %155, label %156, label %164

156:                                              ; preds = %152
  %157 = load i8*, i8** %8, align 8
  %158 = load i32, i32* %9, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %157, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp ne i32 %162, 0
  br label %164

164:                                              ; preds = %156, %152
  %165 = phi i1 [ false, %152 ], [ %163, %156 ]
  br i1 %165, label %166, label %170

166:                                              ; preds = %164
  br label %167

167:                                              ; preds = %166
  %168 = load i32, i32* %9, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %9, align 4
  br label %152, !llvm.loop !252

170:                                              ; preds = %164
  %171 = load i32, i32* %9, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %9, align 4
  store i32 %172, i32* %12, align 4
  br label %173

173:                                              ; preds = %188, %170
  %174 = load i32, i32* %9, align 4
  %175 = load i32, i32* %6, align 4
  %176 = icmp ult i32 %174, %175
  br i1 %176, label %177, label %185

177:                                              ; preds = %173
  %178 = load i8*, i8** %8, align 8
  %179 = load i32, i32* %9, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %178, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp ne i32 %183, 0
  br label %185

185:                                              ; preds = %177, %173
  %186 = phi i1 [ false, %173 ], [ %184, %177 ]
  br i1 %186, label %187, label %191

187:                                              ; preds = %185
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %9, align 4
  %190 = add i32 %189, 1
  store i32 %190, i32* %9, align 4
  br label %173, !llvm.loop !253

191:                                              ; preds = %185
  %192 = load i32, i32* %9, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %9, align 4
  %194 = load i32, i32* %10, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %205

196:                                              ; preds = %191
  %197 = load i32, i32* %9, align 4
  %198 = load i32, i32* %6, align 4
  %199 = icmp ule i32 %197, %198
  br i1 %199, label %200, label %205

200:                                              ; preds = %196
  %201 = load i32, i32* %6, align 4
  %202 = load i32, i32* %9, align 4
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  store i64 %204, i64* %13, align 8
  br label %230

205:                                              ; preds = %196, %191
  %206 = load i32, i32* %10, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %228

208:                                              ; preds = %205
  %209 = load i32, i32* %9, align 4
  %210 = load i32, i32* %6, align 4
  %211 = icmp ult i32 %209, %210
  br i1 %211, label %212, label %228

212:                                              ; preds = %208
  store i64 -1, i64* %13, align 8
  %213 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %214 = load i32, i32* %6, align 4
  %215 = load i32, i32* %9, align 4
  %216 = call i32 @png_decompress_chunk(%struct.png_struct_def* noundef %213, i32 noundef %214, i32 noundef %215, i64* noundef %13, i32 noundef 1)
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %222

218:                                              ; preds = %212
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %219, i32 0, i32 139
  %221 = load i8*, i8** %220, align 8
  store i8* %221, i8** %8, align 8
  br label %227

222:                                              ; preds = %212
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %223, i32 0, i32 19
  %225 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %224, i32 0, i32 6
  %226 = load i8*, i8** %225, align 8
  store i8* %226, i8** %7, align 8
  br label %227

227:                                              ; preds = %222, %218
  br label %229

228:                                              ; preds = %208, %205
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40.343, i64 0, i64 0), i8** %7, align 8
  br label %229

229:                                              ; preds = %228, %227
  br label %230

230:                                              ; preds = %229, %200
  %231 = load i8*, i8** %7, align 8
  %232 = icmp eq i8* %231, null
  br i1 %232, label %233, label %273

233:                                              ; preds = %230
  %234 = load i8*, i8** %8, align 8
  %235 = load i64, i64* %13, align 8
  %236 = load i32, i32* %9, align 4
  %237 = zext i32 %236 to i64
  %238 = add i64 %235, %237
  %239 = getelementptr inbounds i8, i8* %234, i64 %238
  store i8 0, i8* %239, align 1
  %240 = load i32, i32* %10, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %233
  %243 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 0
  store i32 1, i32* %243, align 8
  br label %246

244:                                              ; preds = %233
  %245 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 0
  store i32 2, i32* %245, align 8
  br label %246

246:                                              ; preds = %244, %242
  %247 = load i8*, i8** %8, align 8
  %248 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 1
  store i8* %247, i8** %248, align 8
  %249 = load i8*, i8** %8, align 8
  %250 = load i32, i32* %11, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds i8, i8* %249, i64 %251
  %253 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 5
  store i8* %252, i8** %253, align 8
  %254 = load i8*, i8** %8, align 8
  %255 = load i32, i32* %12, align 4
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* %254, i64 %256
  %258 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 6
  store i8* %257, i8** %258, align 8
  %259 = load i8*, i8** %8, align 8
  %260 = load i32, i32* %9, align 4
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds i8, i8* %259, i64 %261
  %263 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 2
  store i8* %262, i8** %263, align 8
  %264 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 3
  store i64 0, i64* %264, align 8
  %265 = load i64, i64* %13, align 8
  %266 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %14, i32 0, i32 4
  store i64 %265, i64* %266, align 8
  %267 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %268 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %269 = call i32 @png_set_text_2(%struct.png_struct_def* noundef %267, %struct.png_info_def* noundef %268, %struct.png_text_struct* noundef %14, i32 noundef 1)
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %246
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43.346, i64 0, i64 0), i8** %7, align 8
  br label %272

272:                                              ; preds = %271, %246
  br label %273

273:                                              ; preds = %272, %230
  br label %275

274:                                              ; preds = %130, %121
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44.349, i64 0, i64 0), i8** %7, align 8
  br label %275

275:                                              ; preds = %274, %273
  br label %276

276:                                              ; preds = %275, %111
  br label %277

277:                                              ; preds = %276, %105
  %278 = load i8*, i8** %7, align 8
  %279 = icmp ne i8* %278, null
  br i1 %279, label %280, label %283

280:                                              ; preds = %277
  %281 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %282 = load i8*, i8** %7, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %281, i8* noundef %282)
  br label %283

283:                                              ; preds = %24, %34, %67, %79, %280, %277
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_handle_unknown(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 114
  %13 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %12, align 8
  %14 = icmp ne i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %13, null
  br i1 %14, label %15, label %53

15:                                               ; preds = %4
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %17 = load i32, i32* %7, align 4
  %18 = call i32 @png_cache_unknown_chunk(%struct.png_struct_def* noundef %16, i32 noundef %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %51

20:                                               ; preds = %15
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 114
  %23 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %22, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 137
  %27 = call i32 %23(%struct.png_struct_def* noundef %24, %struct.png_unknown_chunk_t* noundef %26)
  store i32 %27, i32* %10, align 4
  %28 = load i32, i32* %10, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %31, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45.352, i64 0, i64 0)) #13
  unreachable

32:                                               ; preds = %20
  %33 = load i32, i32* %10, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %32
  %36 = load i32, i32* %8, align 4
  %37 = icmp slt i32 %36, 2
  br i1 %37, label %38, label %47

38:                                               ; preds = %35
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 115
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, 2
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_warning(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46.353, i64 0, i64 0))
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %45, i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.47.354, i64 0, i64 0))
  br label %46

46:                                               ; preds = %43, %38
  store i32 2, i32* %8, align 4
  br label %47

47:                                               ; preds = %46, %35
  br label %49

48:                                               ; preds = %32
  store i32 1, i32* %9, align 4
  store i32 1, i32* %8, align 4
  br label %49

49:                                               ; preds = %48, %47
  br label %50

50:                                               ; preds = %49
  br label %52

51:                                               ; preds = %15
  store i32 1, i32* %8, align 4
  br label %52

52:                                               ; preds = %51, %50
  br label %85

53:                                               ; preds = %4
  %54 = load i32, i32* %8, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 115
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %8, align 4
  br label %60

60:                                               ; preds = %56, %53
  %61 = load i32, i32* %8, align 4
  %62 = icmp eq i32 %61, 3
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = load i32, i32* %8, align 4
  %65 = icmp eq i32 %64, 2
  br i1 %65, label %66, label %80

66:                                               ; preds = %63
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 44
  %69 = load i32, i32* %68, align 8
  %70 = lshr i32 %69, 29
  %71 = and i32 1, %70
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %66, %60
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %75 = load i32, i32* %7, align 4
  %76 = call i32 @png_cache_unknown_chunk(%struct.png_struct_def* noundef %74, i32 noundef %75)
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  store i32 1, i32* %8, align 4
  br label %79

79:                                               ; preds = %78, %73
  br label %84

80:                                               ; preds = %66, %63
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %82 = load i32, i32* %7, align 4
  %83 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %81, i32 noundef %82)
  br label %84

84:                                               ; preds = %80, %79
  br label %85

85:                                               ; preds = %84, %52
  %86 = load i32, i32* %8, align 4
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %98, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %8, align 4
  %90 = icmp eq i32 %89, 2
  br i1 %90, label %91, label %118

91:                                               ; preds = %88
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 44
  %94 = load i32, i32* %93, align 8
  %95 = lshr i32 %94, 29
  %96 = and i32 1, %95
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %118

98:                                               ; preds = %91, %85
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 135
  %101 = load i32, i32* %100, align 4
  switch i32 %101, label %107 [
    i32 2, label %102
    i32 1, label %106
    i32 0, label %112
  ]

102:                                              ; preds = %98
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %104 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 135
  store i32 1, i32* %104, align 4
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %105, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38.339, i64 0, i64 0))
  br label %106

106:                                              ; preds = %98, %102
  br label %117

107:                                              ; preds = %98
  %108 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %109 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %108, i32 0, i32 135
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, -1
  store i32 %111, i32* %109, align 4
  br label %112

112:                                              ; preds = %98, %107
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %114 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 137
  call void @png_set_unknown_chunks(%struct.png_struct_def* noundef %113, %struct.png_info_def* noundef %114, %struct.png_unknown_chunk_t* noundef %116, i32 noundef 1)
  store i32 1, i32* %9, align 4
  br label %117

117:                                              ; preds = %112, %106
  br label %118

118:                                              ; preds = %117, %91, %88
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %120 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 137
  %121 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %120, i32 0, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = icmp ne i8* %122, null
  br i1 %123, label %124, label %130

124:                                              ; preds = %118
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %127 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %126, i32 0, i32 137
  %128 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %127, i32 0, i32 1
  %129 = load i8*, i8** %128, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %125, i8* noundef %129)
  br label %130

130:                                              ; preds = %124, %118
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 137
  %133 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %132, i32 0, i32 1
  store i8* null, i8** %133, align 8
  %134 = load i32, i32* %9, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %145

136:                                              ; preds = %130
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %138 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %137, i32 0, i32 44
  %139 = load i32, i32* %138, align 8
  %140 = lshr i32 %139, 29
  %141 = and i32 1, %140
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %136
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %144, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48.355, i64 0, i64 0)) #13
  unreachable

145:                                              ; preds = %136, %130
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_cache_unknown_chunk(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 -1, i64* %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 137
  %9 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %8, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 137
  %16 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %15, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %13, i8* noundef %17)
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 137
  %20 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %19, i32 0, i32 1
  store i8* null, i8** %20, align 8
  br label %21

21:                                               ; preds = %12, %2
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 136
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 136
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %6, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 136
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %6, align 8
  br label %36

36:                                               ; preds = %32, %26, %21
  %37 = load i32, i32* %5, align 4
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %6, align 8
  %40 = icmp ule i64 %38, %39
  br i1 %40, label %41, label %117

41:                                               ; preds = %36
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 44
  %44 = load i32, i32* %43, align 8
  %45 = lshr i32 %44, 24
  %46 = and i32 %45, 255
  %47 = trunc i32 %46 to i8
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 137
  %50 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %49, i32 0, i32 0
  %51 = getelementptr inbounds [5 x i8], [5 x i8]* %50, i64 0, i64 0
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  store i8 %47, i8* %52, align 8
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 44
  %55 = load i32, i32* %54, align 8
  %56 = lshr i32 %55, 16
  %57 = and i32 %56, 255
  %58 = trunc i32 %57 to i8
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 137
  %61 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %60, i32 0, i32 0
  %62 = getelementptr inbounds [5 x i8], [5 x i8]* %61, i64 0, i64 0
  %63 = getelementptr inbounds i8, i8* %62, i64 1
  store i8 %58, i8* %63, align 1
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 44
  %66 = load i32, i32* %65, align 8
  %67 = lshr i32 %66, 8
  %68 = and i32 %67, 255
  %69 = trunc i32 %68 to i8
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 137
  %72 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %71, i32 0, i32 0
  %73 = getelementptr inbounds [5 x i8], [5 x i8]* %72, i64 0, i64 0
  %74 = getelementptr inbounds i8, i8* %73, i64 2
  store i8 %69, i8* %74, align 2
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 44
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 255
  %79 = trunc i32 %78 to i8
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 137
  %82 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %81, i32 0, i32 0
  %83 = getelementptr inbounds [5 x i8], [5 x i8]* %82, i64 0, i64 0
  %84 = getelementptr inbounds i8, i8* %83, i64 3
  store i8 %79, i8* %84, align 1
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 137
  %87 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %86, i32 0, i32 0
  %88 = getelementptr inbounds [5 x i8], [5 x i8]* %87, i64 0, i64 0
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  store i8 0, i8* %89, align 4
  %90 = load i32, i32* %5, align 4
  %91 = zext i32 %90 to i64
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 137
  %94 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %93, i32 0, i32 2
  store i64 %91, i64* %94, align 8
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 15
  %97 = load i32, i32* %96, align 4
  %98 = trunc i32 %97 to i8
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 137
  %101 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %100, i32 0, i32 3
  store i8 %98, i8* %101, align 8
  %102 = load i32, i32* %5, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %41
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 137
  %107 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %106, i32 0, i32 1
  store i8* null, i8** %107, align 8
  br label %116

108:                                              ; preds = %41
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %110 = load i32, i32* %5, align 4
  %111 = zext i32 %110 to i64
  %112 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %109, i64 noundef %111)
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 137
  %115 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %114, i32 0, i32 1
  store i8* %112, i8** %115, align 8
  br label %116

116:                                              ; preds = %108, %104
  br label %117

117:                                              ; preds = %116, %36
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 137
  %120 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %119, i32 0, i32 1
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %131

123:                                              ; preds = %117
  %124 = load i32, i32* %5, align 4
  %125 = icmp ugt i32 %124, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %123
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %128 = load i32, i32* %5, align 4
  %129 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %127, i32 noundef %128)
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %130, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.64.356, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %144

131:                                              ; preds = %123, %117
  %132 = load i32, i32* %5, align 4
  %133 = icmp ugt i32 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %131
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 137
  %138 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %137, i32 0, i32 1
  %139 = load i8*, i8** %138, align 8
  %140 = load i32, i32* %5, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %135, i8* noundef %139, i32 noundef %140)
  br label %141

141:                                              ; preds = %134, %131
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %143 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %142, i32 noundef 0)
  store i32 1, i32* %3, align 4
  br label %144

144:                                              ; preds = %141, %126
  %145 = load i32, i32* %3, align 4
  ret i32 %145
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_combine_row(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i16*, align 8
  %25 = alloca i16*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 69
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  store i32 %31, i32* %7, align 4
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 46
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %35, i8** %8, align 8
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 37
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %9, align 8
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 59
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %10, align 4
  store i8* null, i8** %11, align 8
  store i8 0, i8* %12, align 1
  %44 = load i32, i32* %7, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %3
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %47, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51.359, i64 0, i64 0)) #13
  unreachable

48:                                               ; preds = %3
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 49
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  br i1 %52, label %53, label %77

53:                                               ; preds = %48
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 49
  %56 = load i64, i64* %55, align 8
  %57 = load i32, i32* %7, align 4
  %58 = icmp uge i32 %57, 8
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = load i64, i64* %9, align 8
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = lshr i64 %62, 3
  %64 = mul i64 %60, %63
  br label %72

65:                                               ; preds = %53
  %66 = load i64, i64* %9, align 8
  %67 = load i32, i32* %7, align 4
  %68 = zext i32 %67 to i64
  %69 = mul i64 %66, %68
  %70 = add i64 %69, 7
  %71 = lshr i64 %70, 3
  br label %72

72:                                               ; preds = %65, %59
  %73 = phi i64 [ %64, %59 ], [ %71, %65 ]
  %74 = icmp ne i64 %56, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %76, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52.360, i64 0, i64 0)) #13
  unreachable

77:                                               ; preds = %72, %48
  %78 = load i64, i64* %9, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %81, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53.361, i64 0, i64 0)) #13
  unreachable

82:                                               ; preds = %77
  %83 = load i32, i32* %7, align 4
  %84 = zext i32 %83 to i64
  %85 = load i64, i64* %9, align 8
  %86 = mul i64 %84, %85
  %87 = and i64 %86, 7
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %13, align 4
  %89 = load i32, i32* %13, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %126

91:                                               ; preds = %82
  %92 = load i8*, i8** %5, align 8
  %93 = load i32, i32* %7, align 4
  %94 = icmp uge i32 %93, 8
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = load i64, i64* %9, align 8
  %97 = load i32, i32* %7, align 4
  %98 = zext i32 %97 to i64
  %99 = lshr i64 %98, 3
  %100 = mul i64 %96, %99
  br label %108

101:                                              ; preds = %91
  %102 = load i64, i64* %9, align 8
  %103 = load i32, i32* %7, align 4
  %104 = zext i32 %103 to i64
  %105 = mul i64 %102, %104
  %106 = add i64 %105, 7
  %107 = lshr i64 %106, 3
  br label %108

108:                                              ; preds = %101, %95
  %109 = phi i64 [ %100, %95 ], [ %107, %101 ]
  %110 = getelementptr inbounds i8, i8* %92, i64 %109
  %111 = getelementptr inbounds i8, i8* %110, i64 -1
  store i8* %111, i8** %11, align 8
  %112 = load i8*, i8** %11, align 8
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %12, align 1
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %115 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %114, i32 0, i32 17
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 65536
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %108
  %120 = load i32, i32* %13, align 4
  %121 = shl i32 255, %120
  store i32 %121, i32* %13, align 4
  br label %125

122:                                              ; preds = %108
  %123 = load i32, i32* %13, align 4
  %124 = ashr i32 255, %123
  store i32 %124, i32* %13, align 4
  br label %125

125:                                              ; preds = %122, %119
  br label %126

126:                                              ; preds = %125, %82
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 58
  %129 = load i8, i8* %128, align 4
  %130 = zext i8 %129 to i32
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %669

132:                                              ; preds = %126
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %134 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %133, i32 0, i32 17
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 2
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %669

138:                                              ; preds = %132
  %139 = load i32, i32* %10, align 4
  %140 = icmp ult i32 %139, 6
  br i1 %140, label %141, label %669

141:                                              ; preds = %138
  %142 = load i32, i32* %6, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %151, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %6, align 4
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %669

147:                                              ; preds = %144
  %148 = load i32, i32* %10, align 4
  %149 = and i32 %148, 1
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %669

151:                                              ; preds = %147, %141
  %152 = load i64, i64* %9, align 8
  %153 = load i32, i32* %10, align 4
  %154 = and i32 1, %153
  %155 = load i32, i32* %10, align 4
  %156 = add i32 %155, 1
  %157 = lshr i32 %156, 1
  %158 = sub i32 3, %157
  %159 = shl i32 %154, %158
  %160 = and i32 %159, 7
  %161 = zext i32 %160 to i64
  %162 = icmp ule i64 %152, %161
  br i1 %162, label %163, label %164

163:                                              ; preds = %151
  br label %706

164:                                              ; preds = %151
  %165 = load i32, i32* %7, align 4
  %166 = icmp ult i32 %165, 8
  br i1 %166, label %167, label %306

167:                                              ; preds = %164
  %168 = load i32, i32* %7, align 4
  %169 = udiv i32 8, %168
  store i32 %169, i32* %14, align 4
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %170, i32 0, i32 17
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 65536
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %215

175:                                              ; preds = %167
  %176 = load i32, i32* %6, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %196

178:                                              ; preds = %175
  %179 = load i32, i32* %7, align 4
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  br label %187

182:                                              ; preds = %178
  %183 = load i32, i32* %7, align 4
  %184 = icmp eq i32 %183, 2
  %185 = zext i1 %184 to i64
  %186 = select i1 %184, i32 1, i32 2
  br label %187

187:                                              ; preds = %182, %181
  %188 = phi i32 [ 0, %181 ], [ %186, %182 ]
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* getelementptr inbounds ([2 x [3 x [3 x i32]]], [2 x [3 x [3 x i32]]]* @png_combine_row.display_mask, i64 0, i64 0), i64 0, i64 %189
  %191 = load i32, i32* %10, align 4
  %192 = lshr i32 %191, 1
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds [3 x i32], [3 x i32]* %190, i64 0, i64 %193
  %195 = load i32, i32* %194, align 4
  br label %213

196:                                              ; preds = %175
  %197 = load i32, i32* %7, align 4
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  br label %205

200:                                              ; preds = %196
  %201 = load i32, i32* %7, align 4
  %202 = icmp eq i32 %201, 2
  %203 = zext i1 %202 to i64
  %204 = select i1 %202, i32 1, i32 2
  br label %205

205:                                              ; preds = %200, %199
  %206 = phi i32 [ 0, %199 ], [ %204, %200 ]
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [3 x [6 x i32]], [3 x [6 x i32]]* getelementptr inbounds ([2 x [3 x [6 x i32]]], [2 x [3 x [6 x i32]]]* @png_combine_row.row_mask, i64 0, i64 0), i64 0, i64 %207
  %209 = load i32, i32* %10, align 4
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds [6 x i32], [6 x i32]* %208, i64 0, i64 %210
  %212 = load i32, i32* %211, align 4
  br label %213

213:                                              ; preds = %205, %187
  %214 = phi i32 [ %195, %187 ], [ %212, %205 ]
  store i32 %214, i32* %15, align 4
  br label %255

215:                                              ; preds = %167
  %216 = load i32, i32* %6, align 4
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %236

218:                                              ; preds = %215
  %219 = load i32, i32* %7, align 4
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  br label %227

222:                                              ; preds = %218
  %223 = load i32, i32* %7, align 4
  %224 = icmp eq i32 %223, 2
  %225 = zext i1 %224 to i64
  %226 = select i1 %224, i32 1, i32 2
  br label %227

227:                                              ; preds = %222, %221
  %228 = phi i32 [ 0, %221 ], [ %226, %222 ]
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* getelementptr inbounds ([2 x [3 x [3 x i32]]], [2 x [3 x [3 x i32]]]* @png_combine_row.display_mask, i64 0, i64 1), i64 0, i64 %229
  %231 = load i32, i32* %10, align 4
  %232 = lshr i32 %231, 1
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds [3 x i32], [3 x i32]* %230, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  br label %253

236:                                              ; preds = %215
  %237 = load i32, i32* %7, align 4
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  br label %245

240:                                              ; preds = %236
  %241 = load i32, i32* %7, align 4
  %242 = icmp eq i32 %241, 2
  %243 = zext i1 %242 to i64
  %244 = select i1 %242, i32 1, i32 2
  br label %245

245:                                              ; preds = %240, %239
  %246 = phi i32 [ 0, %239 ], [ %244, %240 ]
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [3 x [6 x i32]], [3 x [6 x i32]]* getelementptr inbounds ([2 x [3 x [6 x i32]]], [2 x [3 x [6 x i32]]]* @png_combine_row.row_mask, i64 0, i64 1), i64 0, i64 %247
  %249 = load i32, i32* %10, align 4
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [6 x i32], [6 x i32]* %248, i64 0, i64 %250
  %252 = load i32, i32* %251, align 4
  br label %253

253:                                              ; preds = %245, %227
  %254 = phi i32 [ %235, %227 ], [ %252, %245 ]
  store i32 %254, i32* %15, align 4
  br label %255

255:                                              ; preds = %253, %213
  br label %256

256:                                              ; preds = %296, %255
  %257 = load i32, i32* %15, align 4
  store i32 %257, i32* %16, align 4
  %258 = load i32, i32* %16, align 4
  %259 = lshr i32 %258, 8
  %260 = load i32, i32* %16, align 4
  %261 = shl i32 %260, 24
  %262 = or i32 %259, %261
  store i32 %262, i32* %15, align 4
  %263 = load i32, i32* %16, align 4
  %264 = and i32 %263, 255
  store i32 %264, i32* %16, align 4
  %265 = load i32, i32* %16, align 4
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %267, label %290

267:                                              ; preds = %256
  %268 = load i32, i32* %16, align 4
  %269 = icmp ne i32 %268, 255
  br i1 %269, label %270, label %285

270:                                              ; preds = %267
  %271 = load i8*, i8** %5, align 8
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = load i32, i32* %16, align 4
  %275 = xor i32 %274, -1
  %276 = and i32 %273, %275
  %277 = load i8*, i8** %8, align 8
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = load i32, i32* %16, align 4
  %281 = and i32 %279, %280
  %282 = or i32 %276, %281
  %283 = trunc i32 %282 to i8
  %284 = load i8*, i8** %5, align 8
  store i8 %283, i8* %284, align 1
  br label %289

285:                                              ; preds = %267
  %286 = load i8*, i8** %8, align 8
  %287 = load i8, i8* %286, align 1
  %288 = load i8*, i8** %5, align 8
  store i8 %287, i8* %288, align 1
  br label %289

289:                                              ; preds = %285, %270
  br label %290

290:                                              ; preds = %289, %256
  %291 = load i64, i64* %9, align 8
  %292 = load i32, i32* %14, align 4
  %293 = zext i32 %292 to i64
  %294 = icmp ule i64 %291, %293
  br i1 %294, label %295, label %296

295:                                              ; preds = %290
  br label %305

296:                                              ; preds = %290
  %297 = load i32, i32* %14, align 4
  %298 = zext i32 %297 to i64
  %299 = load i64, i64* %9, align 8
  %300 = sub i64 %299, %298
  store i64 %300, i64* %9, align 8
  %301 = load i8*, i8** %5, align 8
  %302 = getelementptr inbounds i8, i8* %301, i32 1
  store i8* %302, i8** %5, align 8
  %303 = load i8*, i8** %8, align 8
  %304 = getelementptr inbounds i8, i8* %303, i32 1
  store i8* %304, i8** %8, align 8
  br label %256

305:                                              ; preds = %295
  br label %668

306:                                              ; preds = %164
  %307 = load i32, i32* %7, align 4
  %308 = and i32 %307, 7
  %309 = icmp ne i32 %308, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %306
  %311 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %311, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54.362, i64 0, i64 0)) #13
  unreachable

312:                                              ; preds = %306
  %313 = load i32, i32* %7, align 4
  %314 = lshr i32 %313, 3
  store i32 %314, i32* %7, align 4
  %315 = load i32, i32* %7, align 4
  %316 = zext i32 %315 to i64
  %317 = load i64, i64* %9, align 8
  %318 = mul i64 %317, %316
  store i64 %318, i64* %9, align 8
  %319 = load i32, i32* %10, align 4
  %320 = and i32 1, %319
  %321 = load i32, i32* %10, align 4
  %322 = add i32 %321, 1
  %323 = lshr i32 %322, 1
  %324 = sub i32 3, %323
  %325 = shl i32 %320, %324
  %326 = and i32 %325, 7
  %327 = load i32, i32* %7, align 4
  %328 = mul i32 %326, %327
  store i32 %328, i32* %19, align 4
  %329 = load i32, i32* %19, align 4
  %330 = zext i32 %329 to i64
  %331 = load i64, i64* %9, align 8
  %332 = sub i64 %331, %330
  store i64 %332, i64* %9, align 8
  %333 = load i32, i32* %19, align 4
  %334 = load i8*, i8** %5, align 8
  %335 = zext i32 %333 to i64
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  store i8* %336, i8** %5, align 8
  %337 = load i32, i32* %19, align 4
  %338 = load i8*, i8** %8, align 8
  %339 = zext i32 %337 to i64
  %340 = getelementptr inbounds i8, i8* %338, i64 %339
  store i8* %340, i8** %8, align 8
  %341 = load i32, i32* %6, align 4
  %342 = icmp ne i32 %341, 0
  br i1 %342, label %343, label %358

343:                                              ; preds = %312
  %344 = load i32, i32* %10, align 4
  %345 = sub i32 6, %344
  %346 = lshr i32 %345, 1
  %347 = shl i32 1, %346
  %348 = load i32, i32* %7, align 4
  %349 = mul i32 %347, %348
  store i32 %349, i32* %17, align 4
  %350 = load i32, i32* %17, align 4
  %351 = zext i32 %350 to i64
  %352 = load i64, i64* %9, align 8
  %353 = icmp ugt i64 %351, %352
  br i1 %353, label %354, label %357

354:                                              ; preds = %343
  %355 = load i64, i64* %9, align 8
  %356 = trunc i64 %355 to i32
  store i32 %356, i32* %17, align 4
  br label %357

357:                                              ; preds = %354, %343
  br label %360

358:                                              ; preds = %312
  %359 = load i32, i32* %7, align 4
  store i32 %359, i32* %17, align 4
  br label %360

360:                                              ; preds = %358, %357
  %361 = load i32, i32* %10, align 4
  %362 = sub i32 7, %361
  %363 = lshr i32 %362, 1
  %364 = shl i32 1, %363
  %365 = load i32, i32* %7, align 4
  %366 = mul i32 %364, %365
  store i32 %366, i32* %18, align 4
  %367 = load i32, i32* %17, align 4
  switch i32 %367, label %463 [
    i32 1, label %368
    i32 2, label %391
    i32 3, label %428
  ]

368:                                              ; preds = %360
  br label %369

369:                                              ; preds = %378, %368
  %370 = load i8*, i8** %8, align 8
  %371 = load i8, i8* %370, align 1
  %372 = load i8*, i8** %5, align 8
  store i8 %371, i8* %372, align 1
  %373 = load i64, i64* %9, align 8
  %374 = load i32, i32* %18, align 4
  %375 = zext i32 %374 to i64
  %376 = icmp ule i64 %373, %375
  br i1 %376, label %377, label %378

377:                                              ; preds = %369
  br label %706

378:                                              ; preds = %369
  %379 = load i32, i32* %18, align 4
  %380 = load i8*, i8** %5, align 8
  %381 = zext i32 %379 to i64
  %382 = getelementptr inbounds i8, i8* %380, i64 %381
  store i8* %382, i8** %5, align 8
  %383 = load i32, i32* %18, align 4
  %384 = load i8*, i8** %8, align 8
  %385 = zext i32 %383 to i64
  %386 = getelementptr inbounds i8, i8* %384, i64 %385
  store i8* %386, i8** %8, align 8
  %387 = load i32, i32* %18, align 4
  %388 = zext i32 %387 to i64
  %389 = load i64, i64* %9, align 8
  %390 = sub i64 %389, %388
  store i64 %390, i64* %9, align 8
  br label %369

391:                                              ; preds = %360
  br label %392

392:                                              ; preds = %421, %391
  %393 = load i8*, i8** %8, align 8
  %394 = getelementptr inbounds i8, i8* %393, i64 0
  %395 = load i8, i8* %394, align 1
  %396 = load i8*, i8** %5, align 8
  %397 = getelementptr inbounds i8, i8* %396, i64 0
  store i8 %395, i8* %397, align 1
  %398 = load i8*, i8** %8, align 8
  %399 = getelementptr inbounds i8, i8* %398, i64 1
  %400 = load i8, i8* %399, align 1
  %401 = load i8*, i8** %5, align 8
  %402 = getelementptr inbounds i8, i8* %401, i64 1
  store i8 %400, i8* %402, align 1
  %403 = load i64, i64* %9, align 8
  %404 = load i32, i32* %18, align 4
  %405 = zext i32 %404 to i64
  %406 = icmp ule i64 %403, %405
  br i1 %406, label %407, label %408

407:                                              ; preds = %392
  br label %706

408:                                              ; preds = %392
  %409 = load i32, i32* %18, align 4
  %410 = load i8*, i8** %8, align 8
  %411 = zext i32 %409 to i64
  %412 = getelementptr inbounds i8, i8* %410, i64 %411
  store i8* %412, i8** %8, align 8
  %413 = load i32, i32* %18, align 4
  %414 = load i8*, i8** %5, align 8
  %415 = zext i32 %413 to i64
  %416 = getelementptr inbounds i8, i8* %414, i64 %415
  store i8* %416, i8** %5, align 8
  %417 = load i32, i32* %18, align 4
  %418 = zext i32 %417 to i64
  %419 = load i64, i64* %9, align 8
  %420 = sub i64 %419, %418
  store i64 %420, i64* %9, align 8
  br label %421

421:                                              ; preds = %408
  %422 = load i64, i64* %9, align 8
  %423 = icmp ugt i64 %422, 1
  br i1 %423, label %392, label %424, !llvm.loop !254

424:                                              ; preds = %421
  %425 = load i8*, i8** %8, align 8
  %426 = load i8, i8* %425, align 1
  %427 = load i8*, i8** %5, align 8
  store i8 %426, i8* %427, align 1
  br label %706

428:                                              ; preds = %360
  br label %429

429:                                              ; preds = %450, %428
  %430 = load i8*, i8** %8, align 8
  %431 = getelementptr inbounds i8, i8* %430, i64 0
  %432 = load i8, i8* %431, align 1
  %433 = load i8*, i8** %5, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 0
  store i8 %432, i8* %434, align 1
  %435 = load i8*, i8** %8, align 8
  %436 = getelementptr inbounds i8, i8* %435, i64 1
  %437 = load i8, i8* %436, align 1
  %438 = load i8*, i8** %5, align 8
  %439 = getelementptr inbounds i8, i8* %438, i64 1
  store i8 %437, i8* %439, align 1
  %440 = load i8*, i8** %8, align 8
  %441 = getelementptr inbounds i8, i8* %440, i64 2
  %442 = load i8, i8* %441, align 1
  %443 = load i8*, i8** %5, align 8
  %444 = getelementptr inbounds i8, i8* %443, i64 2
  store i8 %442, i8* %444, align 1
  %445 = load i64, i64* %9, align 8
  %446 = load i32, i32* %18, align 4
  %447 = zext i32 %446 to i64
  %448 = icmp ule i64 %445, %447
  br i1 %448, label %449, label %450

449:                                              ; preds = %429
  br label %706

450:                                              ; preds = %429
  %451 = load i32, i32* %18, align 4
  %452 = load i8*, i8** %8, align 8
  %453 = zext i32 %451 to i64
  %454 = getelementptr inbounds i8, i8* %452, i64 %453
  store i8* %454, i8** %8, align 8
  %455 = load i32, i32* %18, align 4
  %456 = load i8*, i8** %5, align 8
  %457 = zext i32 %455 to i64
  %458 = getelementptr inbounds i8, i8* %456, i64 %457
  store i8* %458, i8** %5, align 8
  %459 = load i32, i32* %18, align 4
  %460 = zext i32 %459 to i64
  %461 = load i64, i64* %9, align 8
  %462 = sub i64 %461, %460
  store i64 %462, i64* %9, align 8
  br label %429

463:                                              ; preds = %360
  %464 = load i32, i32* %17, align 4
  %465 = icmp ult i32 %464, 16
  br i1 %465, label %466, label %636

466:                                              ; preds = %463
  %467 = load i8*, i8** %5, align 8
  %468 = ptrtoint i8* %467 to i64
  %469 = trunc i64 %468 to i16
  %470 = zext i16 %469 to i32
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %636

473:                                              ; preds = %466
  %474 = load i8*, i8** %8, align 8
  %475 = ptrtoint i8* %474 to i64
  %476 = trunc i64 %475 to i16
  %477 = zext i16 %476 to i32
  %478 = and i32 %477, 1
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %636

480:                                              ; preds = %473
  %481 = load i32, i32* %17, align 4
  %482 = zext i32 %481 to i64
  %483 = urem i64 %482, 2
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %636

485:                                              ; preds = %480
  %486 = load i32, i32* %18, align 4
  %487 = zext i32 %486 to i64
  %488 = urem i64 %487, 2
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %490, label %636

490:                                              ; preds = %485
  %491 = load i8*, i8** %5, align 8
  %492 = ptrtoint i8* %491 to i64
  %493 = trunc i64 %492 to i32
  %494 = and i32 %493, 3
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %574

496:                                              ; preds = %490
  %497 = load i8*, i8** %8, align 8
  %498 = ptrtoint i8* %497 to i64
  %499 = trunc i64 %498 to i32
  %500 = and i32 %499, 3
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %574

502:                                              ; preds = %496
  %503 = load i32, i32* %17, align 4
  %504 = zext i32 %503 to i64
  %505 = urem i64 %504, 4
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %574

507:                                              ; preds = %502
  %508 = load i32, i32* %18, align 4
  %509 = zext i32 %508 to i64
  %510 = urem i64 %509, 4
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %574

512:                                              ; preds = %507
  %513 = load i8*, i8** %5, align 8
  %514 = bitcast i8* %513 to i32*
  store i32* %514, i32** %20, align 8
  %515 = load i8*, i8** %8, align 8
  %516 = bitcast i8* %515 to i32*
  store i32* %516, i32** %21, align 8
  %517 = load i32, i32* %18, align 4
  %518 = load i32, i32* %17, align 4
  %519 = sub i32 %517, %518
  %520 = zext i32 %519 to i64
  %521 = udiv i64 %520, 4
  store i64 %521, i64* %22, align 8
  br label %522

522:                                              ; preds = %553, %512
  %523 = load i32, i32* %17, align 4
  %524 = zext i32 %523 to i64
  store i64 %524, i64* %23, align 8
  br label %525

525:                                              ; preds = %533, %522
  %526 = load i32*, i32** %21, align 8
  %527 = getelementptr inbounds i32, i32* %526, i32 1
  store i32* %527, i32** %21, align 8
  %528 = load i32, i32* %526, align 4
  %529 = load i32*, i32** %20, align 8
  %530 = getelementptr inbounds i32, i32* %529, i32 1
  store i32* %530, i32** %20, align 8
  store i32 %528, i32* %529, align 4
  %531 = load i64, i64* %23, align 8
  %532 = sub i64 %531, 4
  store i64 %532, i64* %23, align 8
  br label %533

533:                                              ; preds = %525
  %534 = load i64, i64* %23, align 8
  %535 = icmp ugt i64 %534, 0
  br i1 %535, label %525, label %536, !llvm.loop !255

536:                                              ; preds = %533
  %537 = load i64, i64* %9, align 8
  %538 = load i32, i32* %18, align 4
  %539 = zext i32 %538 to i64
  %540 = icmp ule i64 %537, %539
  br i1 %540, label %541, label %542

541:                                              ; preds = %536
  br label %706

542:                                              ; preds = %536
  %543 = load i64, i64* %22, align 8
  %544 = load i32*, i32** %20, align 8
  %545 = getelementptr inbounds i32, i32* %544, i64 %543
  store i32* %545, i32** %20, align 8
  %546 = load i64, i64* %22, align 8
  %547 = load i32*, i32** %21, align 8
  %548 = getelementptr inbounds i32, i32* %547, i64 %546
  store i32* %548, i32** %21, align 8
  %549 = load i32, i32* %18, align 4
  %550 = zext i32 %549 to i64
  %551 = load i64, i64* %9, align 8
  %552 = sub i64 %551, %550
  store i64 %552, i64* %9, align 8
  br label %553

553:                                              ; preds = %542
  %554 = load i32, i32* %17, align 4
  %555 = zext i32 %554 to i64
  %556 = load i64, i64* %9, align 8
  %557 = icmp ule i64 %555, %556
  br i1 %557, label %522, label %558, !llvm.loop !256

558:                                              ; preds = %553
  %559 = load i32*, i32** %20, align 8
  %560 = bitcast i32* %559 to i8*
  store i8* %560, i8** %5, align 8
  %561 = load i32*, i32** %21, align 8
  %562 = bitcast i32* %561 to i8*
  store i8* %562, i8** %8, align 8
  br label %563

563:                                              ; preds = %569, %558
  %564 = load i8*, i8** %8, align 8
  %565 = getelementptr inbounds i8, i8* %564, i32 1
  store i8* %565, i8** %8, align 8
  %566 = load i8, i8* %564, align 1
  %567 = load i8*, i8** %5, align 8
  %568 = getelementptr inbounds i8, i8* %567, i32 1
  store i8* %568, i8** %5, align 8
  store i8 %566, i8* %567, align 1
  br label %569

569:                                              ; preds = %563
  %570 = load i64, i64* %9, align 8
  %571 = add i64 %570, -1
  store i64 %571, i64* %9, align 8
  %572 = icmp ugt i64 %571, 0
  br i1 %572, label %563, label %573, !llvm.loop !257

573:                                              ; preds = %569
  br label %706

574:                                              ; preds = %507, %502, %496, %490
  %575 = load i8*, i8** %5, align 8
  %576 = bitcast i8* %575 to i16*
  store i16* %576, i16** %24, align 8
  %577 = load i8*, i8** %8, align 8
  %578 = bitcast i8* %577 to i16*
  store i16* %578, i16** %25, align 8
  %579 = load i32, i32* %18, align 4
  %580 = load i32, i32* %17, align 4
  %581 = sub i32 %579, %580
  %582 = zext i32 %581 to i64
  %583 = udiv i64 %582, 2
  store i64 %583, i64* %26, align 8
  br label %584

584:                                              ; preds = %615, %574
  %585 = load i32, i32* %17, align 4
  %586 = zext i32 %585 to i64
  store i64 %586, i64* %27, align 8
  br label %587

587:                                              ; preds = %595, %584
  %588 = load i16*, i16** %25, align 8
  %589 = getelementptr inbounds i16, i16* %588, i32 1
  store i16* %589, i16** %25, align 8
  %590 = load i16, i16* %588, align 2
  %591 = load i16*, i16** %24, align 8
  %592 = getelementptr inbounds i16, i16* %591, i32 1
  store i16* %592, i16** %24, align 8
  store i16 %590, i16* %591, align 2
  %593 = load i64, i64* %27, align 8
  %594 = sub i64 %593, 2
  store i64 %594, i64* %27, align 8
  br label %595

595:                                              ; preds = %587
  %596 = load i64, i64* %27, align 8
  %597 = icmp ugt i64 %596, 0
  br i1 %597, label %587, label %598, !llvm.loop !258

598:                                              ; preds = %595
  %599 = load i64, i64* %9, align 8
  %600 = load i32, i32* %18, align 4
  %601 = zext i32 %600 to i64
  %602 = icmp ule i64 %599, %601
  br i1 %602, label %603, label %604

603:                                              ; preds = %598
  br label %706

604:                                              ; preds = %598
  %605 = load i64, i64* %26, align 8
  %606 = load i16*, i16** %24, align 8
  %607 = getelementptr inbounds i16, i16* %606, i64 %605
  store i16* %607, i16** %24, align 8
  %608 = load i64, i64* %26, align 8
  %609 = load i16*, i16** %25, align 8
  %610 = getelementptr inbounds i16, i16* %609, i64 %608
  store i16* %610, i16** %25, align 8
  %611 = load i32, i32* %18, align 4
  %612 = zext i32 %611 to i64
  %613 = load i64, i64* %9, align 8
  %614 = sub i64 %613, %612
  store i64 %614, i64* %9, align 8
  br label %615

615:                                              ; preds = %604
  %616 = load i32, i32* %17, align 4
  %617 = zext i32 %616 to i64
  %618 = load i64, i64* %9, align 8
  %619 = icmp ule i64 %617, %618
  br i1 %619, label %584, label %620, !llvm.loop !259

620:                                              ; preds = %615
  %621 = load i16*, i16** %24, align 8
  %622 = bitcast i16* %621 to i8*
  store i8* %622, i8** %5, align 8
  %623 = load i16*, i16** %25, align 8
  %624 = bitcast i16* %623 to i8*
  store i8* %624, i8** %8, align 8
  br label %625

625:                                              ; preds = %631, %620
  %626 = load i8*, i8** %8, align 8
  %627 = getelementptr inbounds i8, i8* %626, i32 1
  store i8* %627, i8** %8, align 8
  %628 = load i8, i8* %626, align 1
  %629 = load i8*, i8** %5, align 8
  %630 = getelementptr inbounds i8, i8* %629, i32 1
  store i8* %630, i8** %5, align 8
  store i8 %628, i8* %629, align 1
  br label %631

631:                                              ; preds = %625
  %632 = load i64, i64* %9, align 8
  %633 = add i64 %632, -1
  store i64 %633, i64* %9, align 8
  %634 = icmp ugt i64 %633, 0
  br i1 %634, label %625, label %635, !llvm.loop !260

635:                                              ; preds = %631
  br label %706

636:                                              ; preds = %485, %480, %473, %466, %463
  br label %637

637:                                              ; preds = %667, %636
  %638 = load i8*, i8** %5, align 8
  %639 = load i8*, i8** %8, align 8
  %640 = load i32, i32* %17, align 4
  %641 = zext i32 %640 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %638, i8* align 1 %639, i64 %641, i1 false)
  %642 = load i64, i64* %9, align 8
  %643 = load i32, i32* %18, align 4
  %644 = zext i32 %643 to i64
  %645 = icmp ule i64 %642, %644
  br i1 %645, label %646, label %647

646:                                              ; preds = %637
  br label %706

647:                                              ; preds = %637
  %648 = load i32, i32* %18, align 4
  %649 = load i8*, i8** %8, align 8
  %650 = zext i32 %648 to i64
  %651 = getelementptr inbounds i8, i8* %649, i64 %650
  store i8* %651, i8** %8, align 8
  %652 = load i32, i32* %18, align 4
  %653 = load i8*, i8** %5, align 8
  %654 = zext i32 %652 to i64
  %655 = getelementptr inbounds i8, i8* %653, i64 %654
  store i8* %655, i8** %5, align 8
  %656 = load i32, i32* %18, align 4
  %657 = zext i32 %656 to i64
  %658 = load i64, i64* %9, align 8
  %659 = sub i64 %658, %657
  store i64 %659, i64* %9, align 8
  %660 = load i32, i32* %17, align 4
  %661 = zext i32 %660 to i64
  %662 = load i64, i64* %9, align 8
  %663 = icmp ugt i64 %661, %662
  br i1 %663, label %664, label %667

664:                                              ; preds = %647
  %665 = load i64, i64* %9, align 8
  %666 = trunc i64 %665 to i32
  store i32 %666, i32* %17, align 4
  br label %667

667:                                              ; preds = %664, %647
  br label %637

668:                                              ; preds = %305
  br label %689

669:                                              ; preds = %147, %144, %138, %132, %126
  %670 = load i8*, i8** %5, align 8
  %671 = load i8*, i8** %8, align 8
  %672 = load i32, i32* %7, align 4
  %673 = icmp uge i32 %672, 8
  br i1 %673, label %674, label %680

674:                                              ; preds = %669
  %675 = load i64, i64* %9, align 8
  %676 = load i32, i32* %7, align 4
  %677 = zext i32 %676 to i64
  %678 = lshr i64 %677, 3
  %679 = mul i64 %675, %678
  br label %687

680:                                              ; preds = %669
  %681 = load i64, i64* %9, align 8
  %682 = load i32, i32* %7, align 4
  %683 = zext i32 %682 to i64
  %684 = mul i64 %681, %683
  %685 = add i64 %684, 7
  %686 = lshr i64 %685, 3
  br label %687

687:                                              ; preds = %680, %674
  %688 = phi i64 [ %679, %674 ], [ %686, %680 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %670, i8* align 1 %671, i64 %688, i1 false)
  br label %689

689:                                              ; preds = %687, %668
  %690 = load i8*, i8** %11, align 8
  %691 = icmp ne i8* %690, null
  br i1 %691, label %692, label %706

692:                                              ; preds = %689
  %693 = load i8, i8* %12, align 1
  %694 = zext i8 %693 to i32
  %695 = load i32, i32* %13, align 4
  %696 = and i32 %694, %695
  %697 = load i8*, i8** %11, align 8
  %698 = load i8, i8* %697, align 1
  %699 = zext i8 %698 to i32
  %700 = load i32, i32* %13, align 4
  %701 = xor i32 %700, -1
  %702 = and i32 %699, %701
  %703 = or i32 %696, %702
  %704 = trunc i32 %703 to i8
  %705 = load i8*, i8** %11, align 8
  store i8 %704, i8* %705, align 1
  br label %706

706:                                              ; preds = %163, %377, %407, %424, %449, %541, %573, %603, %635, %646, %692, %689
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_read_interlace(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_row_info_struct*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i8, align 1
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i8, align 1
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i64, align 8
  %47 = alloca i8*, align 8
  %48 = alloca i8*, align 8
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca [8 x i8], align 1
  %52 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %53 = load i8*, i8** %6, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %505

55:                                               ; preds = %4
  %56 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %57 = icmp ne %struct.png_row_info_struct* %56, null
  br i1 %57, label %58, label %505

58:                                               ; preds = %55
  %59 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %60 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* %7, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %61, %65
  store i32 %66, i32* %9, align 4
  %67 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %68 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %67, i32 0, i32 5
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  switch i32 %70, label %412 [
    i32 1, label %71
    i32 2, label %182
    i32 4, label %297
  ]

71:                                               ; preds = %58
  %72 = load i8*, i8** %6, align 8
  %73 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %74 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %73, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = sub i32 %75, 1
  %77 = lshr i32 %76, 3
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %72, i64 %78
  store i8* %79, i8** %10, align 8
  %80 = load i8*, i8** %6, align 8
  %81 = load i32, i32* %9, align 4
  %82 = sub i32 %81, 1
  %83 = lshr i32 %82, 3
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 %84
  store i8* %85, i8** %11, align 8
  %86 = load i32, i32* %7, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %17, align 4
  %90 = load i32, i32* %8, align 4
  %91 = and i32 %90, 65536
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %102

93:                                               ; preds = %71
  %94 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %95 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %94, i32 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 7
  %98 = and i32 %97, 7
  store i32 %98, i32* %12, align 4
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 7
  %101 = and i32 %100, 7
  store i32 %101, i32* %13, align 4
  store i32 7, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 -1, i32* %16, align 4
  br label %113

102:                                              ; preds = %71
  %103 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %104 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, 7
  %107 = and i32 %106, 7
  %108 = sub i32 7, %107
  store i32 %108, i32* %12, align 4
  %109 = load i32, i32* %9, align 4
  %110 = add i32 %109, 7
  %111 = and i32 %110, 7
  %112 = sub i32 7, %111
  store i32 %112, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 7, i32* %15, align 4
  store i32 1, i32* %16, align 4
  br label %113

113:                                              ; preds = %102, %93
  store i32 0, i32* %19, align 4
  br label %114

114:                                              ; preds = %178, %113
  %115 = load i32, i32* %19, align 4
  %116 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %117 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp ult i32 %115, %118
  br i1 %119, label %120, label %181

120:                                              ; preds = %114
  %121 = load i8*, i8** %10, align 8
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = load i32, i32* %12, align 4
  %125 = ashr i32 %123, %124
  %126 = and i32 %125, 1
  %127 = trunc i32 %126 to i8
  store i8 %127, i8* %18, align 1
  store i32 0, i32* %20, align 4
  br label %128

128:                                              ; preds = %162, %120
  %129 = load i32, i32* %20, align 4
  %130 = load i32, i32* %17, align 4
  %131 = icmp slt i32 %129, %130
  br i1 %131, label %132, label %165

132:                                              ; preds = %128
  %133 = load i8*, i8** %11, align 8
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = load i32, i32* %13, align 4
  %137 = sub i32 7, %136
  %138 = ashr i32 32639, %137
  %139 = and i32 %135, %138
  store i32 %139, i32* %21, align 4
  %140 = load i8, i8* %18, align 1
  %141 = zext i8 %140 to i32
  %142 = load i32, i32* %13, align 4
  %143 = shl i32 %141, %142
  %144 = load i32, i32* %21, align 4
  %145 = or i32 %144, %143
  store i32 %145, i32* %21, align 4
  %146 = load i32, i32* %21, align 4
  %147 = and i32 %146, 255
  %148 = trunc i32 %147 to i8
  %149 = load i8*, i8** %11, align 8
  store i8 %148, i8* %149, align 1
  %150 = load i32, i32* %13, align 4
  %151 = load i32, i32* %15, align 4
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %153, label %157

153:                                              ; preds = %132
  %154 = load i32, i32* %14, align 4
  store i32 %154, i32* %13, align 4
  %155 = load i8*, i8** %11, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 -1
  store i8* %156, i8** %11, align 8
  br label %161

157:                                              ; preds = %132
  %158 = load i32, i32* %13, align 4
  %159 = load i32, i32* %16, align 4
  %160 = add nsw i32 %158, %159
  store i32 %160, i32* %13, align 4
  br label %161

161:                                              ; preds = %157, %153
  br label %162

162:                                              ; preds = %161
  %163 = load i32, i32* %20, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %20, align 4
  br label %128, !llvm.loop !261

165:                                              ; preds = %128
  %166 = load i32, i32* %12, align 4
  %167 = load i32, i32* %15, align 4
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %169, label %173

169:                                              ; preds = %165
  %170 = load i32, i32* %14, align 4
  store i32 %170, i32* %12, align 4
  %171 = load i8*, i8** %10, align 8
  %172 = getelementptr inbounds i8, i8* %171, i32 -1
  store i8* %172, i8** %10, align 8
  br label %177

173:                                              ; preds = %165
  %174 = load i32, i32* %12, align 4
  %175 = load i32, i32* %16, align 4
  %176 = add nsw i32 %174, %175
  store i32 %176, i32* %12, align 4
  br label %177

177:                                              ; preds = %173, %169
  br label %178

178:                                              ; preds = %177
  %179 = load i32, i32* %19, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %19, align 4
  br label %114, !llvm.loop !262

181:                                              ; preds = %114
  br label %473

182:                                              ; preds = %58
  %183 = load i8*, i8** %6, align 8
  %184 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %185 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %184, i32 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = sub i32 %186, 1
  %188 = lshr i32 %187, 2
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %183, i64 %189
  store i8* %190, i8** %22, align 8
  %191 = load i8*, i8** %6, align 8
  %192 = load i32, i32* %9, align 4
  %193 = sub i32 %192, 1
  %194 = lshr i32 %193, 2
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %191, i64 %195
  store i8* %196, i8** %23, align 8
  %197 = load i32, i32* %7, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %29, align 4
  %201 = load i32, i32* %8, align 4
  %202 = and i32 %201, 65536
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %215

204:                                              ; preds = %182
  %205 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %206 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %205, i32 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = add i32 %207, 3
  %209 = and i32 %208, 3
  %210 = shl i32 %209, 1
  store i32 %210, i32* %24, align 4
  %211 = load i32, i32* %9, align 4
  %212 = add i32 %211, 3
  %213 = and i32 %212, 3
  %214 = shl i32 %213, 1
  store i32 %214, i32* %25, align 4
  store i32 6, i32* %26, align 4
  store i32 0, i32* %27, align 4
  store i32 -2, i32* %28, align 4
  br label %228

215:                                              ; preds = %182
  %216 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %217 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %216, i32 0, i32 0
  %218 = load i32, i32* %217, align 8
  %219 = add i32 %218, 3
  %220 = and i32 %219, 3
  %221 = sub i32 3, %220
  %222 = shl i32 %221, 1
  store i32 %222, i32* %24, align 4
  %223 = load i32, i32* %9, align 4
  %224 = add i32 %223, 3
  %225 = and i32 %224, 3
  %226 = sub i32 3, %225
  %227 = shl i32 %226, 1
  store i32 %227, i32* %25, align 4
  store i32 0, i32* %26, align 4
  store i32 6, i32* %27, align 4
  store i32 2, i32* %28, align 4
  br label %228

228:                                              ; preds = %215, %204
  store i32 0, i32* %30, align 4
  br label %229

229:                                              ; preds = %293, %228
  %230 = load i32, i32* %30, align 4
  %231 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %232 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %231, i32 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp ult i32 %230, %233
  br i1 %234, label %235, label %296

235:                                              ; preds = %229
  %236 = load i8*, i8** %22, align 8
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = load i32, i32* %24, align 4
  %240 = ashr i32 %238, %239
  %241 = and i32 %240, 3
  %242 = trunc i32 %241 to i8
  store i8 %242, i8* %31, align 1
  store i32 0, i32* %32, align 4
  br label %243

243:                                              ; preds = %277, %235
  %244 = load i32, i32* %32, align 4
  %245 = load i32, i32* %29, align 4
  %246 = icmp slt i32 %244, %245
  br i1 %246, label %247, label %280

247:                                              ; preds = %243
  %248 = load i8*, i8** %23, align 8
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = load i32, i32* %25, align 4
  %252 = sub i32 6, %251
  %253 = ashr i32 16191, %252
  %254 = and i32 %250, %253
  store i32 %254, i32* %33, align 4
  %255 = load i8, i8* %31, align 1
  %256 = zext i8 %255 to i32
  %257 = load i32, i32* %25, align 4
  %258 = shl i32 %256, %257
  %259 = load i32, i32* %33, align 4
  %260 = or i32 %259, %258
  store i32 %260, i32* %33, align 4
  %261 = load i32, i32* %33, align 4
  %262 = and i32 %261, 255
  %263 = trunc i32 %262 to i8
  %264 = load i8*, i8** %23, align 8
  store i8 %263, i8* %264, align 1
  %265 = load i32, i32* %25, align 4
  %266 = load i32, i32* %27, align 4
  %267 = icmp eq i32 %265, %266
  br i1 %267, label %268, label %272

268:                                              ; preds = %247
  %269 = load i32, i32* %26, align 4
  store i32 %269, i32* %25, align 4
  %270 = load i8*, i8** %23, align 8
  %271 = getelementptr inbounds i8, i8* %270, i32 -1
  store i8* %271, i8** %23, align 8
  br label %276

272:                                              ; preds = %247
  %273 = load i32, i32* %25, align 4
  %274 = load i32, i32* %28, align 4
  %275 = add nsw i32 %273, %274
  store i32 %275, i32* %25, align 4
  br label %276

276:                                              ; preds = %272, %268
  br label %277

277:                                              ; preds = %276
  %278 = load i32, i32* %32, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, i32* %32, align 4
  br label %243, !llvm.loop !263

280:                                              ; preds = %243
  %281 = load i32, i32* %24, align 4
  %282 = load i32, i32* %27, align 4
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %284, label %288

284:                                              ; preds = %280
  %285 = load i32, i32* %26, align 4
  store i32 %285, i32* %24, align 4
  %286 = load i8*, i8** %22, align 8
  %287 = getelementptr inbounds i8, i8* %286, i32 -1
  store i8* %287, i8** %22, align 8
  br label %292

288:                                              ; preds = %280
  %289 = load i32, i32* %24, align 4
  %290 = load i32, i32* %28, align 4
  %291 = add nsw i32 %289, %290
  store i32 %291, i32* %24, align 4
  br label %292

292:                                              ; preds = %288, %284
  br label %293

293:                                              ; preds = %292
  %294 = load i32, i32* %30, align 4
  %295 = add i32 %294, 1
  store i32 %295, i32* %30, align 4
  br label %229, !llvm.loop !264

296:                                              ; preds = %229
  br label %473

297:                                              ; preds = %58
  %298 = load i8*, i8** %6, align 8
  %299 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %300 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %299, i32 0, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = sub i32 %301, 1
  %303 = lshr i32 %302, 1
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds i8, i8* %298, i64 %304
  store i8* %305, i8** %34, align 8
  %306 = load i8*, i8** %6, align 8
  %307 = load i32, i32* %9, align 4
  %308 = sub i32 %307, 1
  %309 = lshr i32 %308, 1
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %306, i64 %310
  store i8* %311, i8** %35, align 8
  %312 = load i32, i32* %7, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %313
  %315 = load i32, i32* %314, align 4
  store i32 %315, i32* %42, align 4
  %316 = load i32, i32* %8, align 4
  %317 = and i32 %316, 65536
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %330

319:                                              ; preds = %297
  %320 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %321 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %320, i32 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = add i32 %322, 1
  %324 = and i32 %323, 1
  %325 = shl i32 %324, 2
  store i32 %325, i32* %36, align 4
  %326 = load i32, i32* %9, align 4
  %327 = add i32 %326, 1
  %328 = and i32 %327, 1
  %329 = shl i32 %328, 2
  store i32 %329, i32* %37, align 4
  store i32 4, i32* %38, align 4
  store i32 0, i32* %39, align 4
  store i32 -4, i32* %40, align 4
  br label %343

330:                                              ; preds = %297
  %331 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %332 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %331, i32 0, i32 0
  %333 = load i32, i32* %332, align 8
  %334 = add i32 %333, 1
  %335 = and i32 %334, 1
  %336 = sub i32 1, %335
  %337 = shl i32 %336, 2
  store i32 %337, i32* %36, align 4
  %338 = load i32, i32* %9, align 4
  %339 = add i32 %338, 1
  %340 = and i32 %339, 1
  %341 = sub i32 1, %340
  %342 = shl i32 %341, 2
  store i32 %342, i32* %37, align 4
  store i32 0, i32* %38, align 4
  store i32 4, i32* %39, align 4
  store i32 4, i32* %40, align 4
  br label %343

343:                                              ; preds = %330, %319
  store i32 0, i32* %41, align 4
  br label %344

344:                                              ; preds = %408, %343
  %345 = load i32, i32* %41, align 4
  %346 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %347 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %346, i32 0, i32 0
  %348 = load i32, i32* %347, align 8
  %349 = icmp ult i32 %345, %348
  br i1 %349, label %350, label %411

350:                                              ; preds = %344
  %351 = load i8*, i8** %34, align 8
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = load i32, i32* %36, align 4
  %355 = ashr i32 %353, %354
  %356 = and i32 %355, 15
  %357 = trunc i32 %356 to i8
  store i8 %357, i8* %43, align 1
  store i32 0, i32* %44, align 4
  br label %358

358:                                              ; preds = %392, %350
  %359 = load i32, i32* %44, align 4
  %360 = load i32, i32* %42, align 4
  %361 = icmp slt i32 %359, %360
  br i1 %361, label %362, label %395

362:                                              ; preds = %358
  %363 = load i8*, i8** %35, align 8
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = load i32, i32* %37, align 4
  %367 = sub i32 4, %366
  %368 = ashr i32 3855, %367
  %369 = and i32 %365, %368
  store i32 %369, i32* %45, align 4
  %370 = load i8, i8* %43, align 1
  %371 = zext i8 %370 to i32
  %372 = load i32, i32* %37, align 4
  %373 = shl i32 %371, %372
  %374 = load i32, i32* %45, align 4
  %375 = or i32 %374, %373
  store i32 %375, i32* %45, align 4
  %376 = load i32, i32* %45, align 4
  %377 = and i32 %376, 255
  %378 = trunc i32 %377 to i8
  %379 = load i8*, i8** %35, align 8
  store i8 %378, i8* %379, align 1
  %380 = load i32, i32* %37, align 4
  %381 = load i32, i32* %39, align 4
  %382 = icmp eq i32 %380, %381
  br i1 %382, label %383, label %387

383:                                              ; preds = %362
  %384 = load i32, i32* %38, align 4
  store i32 %384, i32* %37, align 4
  %385 = load i8*, i8** %35, align 8
  %386 = getelementptr inbounds i8, i8* %385, i32 -1
  store i8* %386, i8** %35, align 8
  br label %391

387:                                              ; preds = %362
  %388 = load i32, i32* %37, align 4
  %389 = load i32, i32* %40, align 4
  %390 = add nsw i32 %388, %389
  store i32 %390, i32* %37, align 4
  br label %391

391:                                              ; preds = %387, %383
  br label %392

392:                                              ; preds = %391
  %393 = load i32, i32* %44, align 4
  %394 = add nsw i32 %393, 1
  store i32 %394, i32* %44, align 4
  br label %358, !llvm.loop !265

395:                                              ; preds = %358
  %396 = load i32, i32* %36, align 4
  %397 = load i32, i32* %39, align 4
  %398 = icmp eq i32 %396, %397
  br i1 %398, label %399, label %403

399:                                              ; preds = %395
  %400 = load i32, i32* %38, align 4
  store i32 %400, i32* %36, align 4
  %401 = load i8*, i8** %34, align 8
  %402 = getelementptr inbounds i8, i8* %401, i32 -1
  store i8* %402, i8** %34, align 8
  br label %407

403:                                              ; preds = %395
  %404 = load i32, i32* %36, align 4
  %405 = load i32, i32* %40, align 4
  %406 = add nsw i32 %404, %405
  store i32 %406, i32* %36, align 4
  br label %407

407:                                              ; preds = %403, %399
  br label %408

408:                                              ; preds = %407
  %409 = load i32, i32* %41, align 4
  %410 = add i32 %409, 1
  store i32 %410, i32* %41, align 4
  br label %344, !llvm.loop !266

411:                                              ; preds = %344
  br label %473

412:                                              ; preds = %58
  %413 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %414 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %413, i32 0, i32 5
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = ashr i32 %416, 3
  %418 = sext i32 %417 to i64
  store i64 %418, i64* %46, align 8
  %419 = load i8*, i8** %6, align 8
  %420 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %421 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %420, i32 0, i32 0
  %422 = load i32, i32* %421, align 8
  %423 = sub i32 %422, 1
  %424 = zext i32 %423 to i64
  %425 = load i64, i64* %46, align 8
  %426 = mul i64 %424, %425
  %427 = getelementptr inbounds i8, i8* %419, i64 %426
  store i8* %427, i8** %47, align 8
  %428 = load i8*, i8** %6, align 8
  %429 = load i32, i32* %9, align 4
  %430 = sub i32 %429, 1
  %431 = zext i32 %430 to i64
  %432 = load i64, i64* %46, align 8
  %433 = mul i64 %431, %432
  %434 = getelementptr inbounds i8, i8* %428, i64 %433
  store i8* %434, i8** %48, align 8
  %435 = load i32, i32* %7, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %436
  %438 = load i32, i32* %437, align 4
  store i32 %438, i32* %49, align 4
  store i32 0, i32* %50, align 4
  br label %439

439:                                              ; preds = %469, %412
  %440 = load i32, i32* %50, align 4
  %441 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %442 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %441, i32 0, i32 0
  %443 = load i32, i32* %442, align 8
  %444 = icmp ult i32 %440, %443
  br i1 %444, label %445, label %472

445:                                              ; preds = %439
  %446 = getelementptr inbounds [8 x i8], [8 x i8]* %51, i64 0, i64 0
  %447 = load i8*, i8** %47, align 8
  %448 = load i64, i64* %46, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %446, i8* align 1 %447, i64 %448, i1 false)
  store i32 0, i32* %52, align 4
  br label %449

449:                                              ; preds = %461, %445
  %450 = load i32, i32* %52, align 4
  %451 = load i32, i32* %49, align 4
  %452 = icmp slt i32 %450, %451
  br i1 %452, label %453, label %464

453:                                              ; preds = %449
  %454 = load i8*, i8** %48, align 8
  %455 = getelementptr inbounds [8 x i8], [8 x i8]* %51, i64 0, i64 0
  %456 = load i64, i64* %46, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %454, i8* align 1 %455, i64 %456, i1 false)
  %457 = load i64, i64* %46, align 8
  %458 = load i8*, i8** %48, align 8
  %459 = sub i64 0, %457
  %460 = getelementptr inbounds i8, i8* %458, i64 %459
  store i8* %460, i8** %48, align 8
  br label %461

461:                                              ; preds = %453
  %462 = load i32, i32* %52, align 4
  %463 = add nsw i32 %462, 1
  store i32 %463, i32* %52, align 4
  br label %449, !llvm.loop !267

464:                                              ; preds = %449
  %465 = load i64, i64* %46, align 8
  %466 = load i8*, i8** %47, align 8
  %467 = sub i64 0, %465
  %468 = getelementptr inbounds i8, i8* %466, i64 %467
  store i8* %468, i8** %47, align 8
  br label %469

469:                                              ; preds = %464
  %470 = load i32, i32* %50, align 4
  %471 = add i32 %470, 1
  store i32 %471, i32* %50, align 4
  br label %439, !llvm.loop !268

472:                                              ; preds = %439
  br label %473

473:                                              ; preds = %472, %411, %296, %181
  %474 = load i32, i32* %9, align 4
  %475 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %476 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %475, i32 0, i32 0
  store i32 %474, i32* %476, align 8
  %477 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %478 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %477, i32 0, i32 5
  %479 = load i8, i8* %478, align 1
  %480 = zext i8 %479 to i32
  %481 = icmp sge i32 %480, 8
  br i1 %481, label %482, label %491

482:                                              ; preds = %473
  %483 = load i32, i32* %9, align 4
  %484 = zext i32 %483 to i64
  %485 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %486 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %485, i32 0, i32 5
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i64
  %489 = lshr i64 %488, 3
  %490 = mul i64 %484, %489
  br label %501

491:                                              ; preds = %473
  %492 = load i32, i32* %9, align 4
  %493 = zext i32 %492 to i64
  %494 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %495 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %494, i32 0, i32 5
  %496 = load i8, i8* %495, align 1
  %497 = zext i8 %496 to i64
  %498 = mul i64 %493, %497
  %499 = add i64 %498, 7
  %500 = lshr i64 %499, 3
  br label %501

501:                                              ; preds = %491, %482
  %502 = phi i64 [ %490, %482 ], [ %500, %491 ]
  %503 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %5, align 8
  %504 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %503, i32 0, i32 1
  store i64 %502, i64* %504, align 8
  br label %505

505:                                              ; preds = %501, %55, %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row(%struct.png_struct_def* noalias noundef %0, %struct.png_row_info_struct* noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_row_info_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %5
  %14 = load i32, i32* %10, align 4
  %15 = icmp slt i32 %14, 5
  br i1 %15, label %16, label %35

16:                                               ; preds = %13
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 144
  %19 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %18, i64 0, i64 0
  %20 = load void (%struct.png_row_info_struct*, i8*, i8*)*, void (%struct.png_row_info_struct*, i8*, i8*)** %19, align 8
  %21 = icmp eq void (%struct.png_row_info_struct*, i8*, i8*)* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_init_filter_functions(%struct.png_struct_def* noundef %23)
  br label %24

24:                                               ; preds = %22, %16
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 144
  %27 = load i32, i32* %10, align 4
  %28 = sub nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %26, i64 0, i64 %29
  %31 = load void (%struct.png_row_info_struct*, i8*, i8*)*, void (%struct.png_row_info_struct*, i8*, i8*)** %30, align 8
  %32 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %7, align 8
  %33 = load i8*, i8** %8, align 8
  %34 = load i8*, i8** %9, align 8
  call void %31(%struct.png_row_info_struct* noundef %32, i8* noundef %33, i8* noundef %34)
  br label %35

35:                                               ; preds = %24, %13, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_init_filter_functions(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 64
  %6 = load i8, i8* %5, align 2
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, 7
  %9 = ashr i32 %8, 3
  store i32 %9, i32* %3, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 144
  %12 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %11, i64 0, i64 0
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_sub, void (%struct.png_row_info_struct*, i8*, i8*)** %12, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 144
  %15 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %14, i64 0, i64 1
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_up, void (%struct.png_row_info_struct*, i8*, i8*)** %15, align 8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 144
  %18 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %17, i64 0, i64 2
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_avg, void (%struct.png_row_info_struct*, i8*, i8*)** %18, align 8
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %1
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 144
  %24 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %23, i64 0, i64 3
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_paeth_1byte_pixel, void (%struct.png_row_info_struct*, i8*, i8*)** %24, align 8
  br label %29

25:                                               ; preds = %1
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 144
  %28 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %27, i64 0, i64 3
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_paeth_multibyte_pixel, void (%struct.png_row_info_struct*, i8*, i8*)** %28, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %31 = load i32, i32* %3, align 4
  call void @png_init_filter_functions_sse2(%struct.png_struct_def* noundef %30, i32 noundef %31)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_read_filter_row_sub(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %12 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %11, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %8, align 8
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 5
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = add nsw i32 %17, 7
  %19 = ashr i32 %18, 3
  store i32 %19, i32* %9, align 4
  %20 = load i8*, i8** %5, align 8
  %21 = load i32, i32* %9, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %20, i64 %22
  store i8* %23, i8** %10, align 8
  %24 = load i8*, i8** %6, align 8
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %7, align 8
  br label %27

27:                                               ; preds = %48, %3
  %28 = load i64, i64* %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %51

31:                                               ; preds = %27
  %32 = load i8*, i8** %10, align 8
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = load i8*, i8** %10, align 8
  %36 = load i32, i32* %9, align 4
  %37 = zext i32 %36 to i64
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = add nsw i32 %34, %41
  %43 = and i32 %42, 255
  %44 = trunc i32 %43 to i8
  %45 = load i8*, i8** %10, align 8
  store i8 %44, i8* %45, align 1
  %46 = load i8*, i8** %10, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %10, align 8
  br label %48

48:                                               ; preds = %31
  %49 = load i64, i64* %7, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %7, align 8
  br label %27, !llvm.loop !269

51:                                               ; preds = %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_read_filter_row_up(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %12 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %11, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %8, align 8
  %14 = load i8*, i8** %5, align 8
  store i8* %14, i8** %9, align 8
  %15 = load i8*, i8** %6, align 8
  store i8* %15, i8** %10, align 8
  store i64 0, i64* %7, align 8
  br label %16

16:                                               ; preds = %34, %3
  %17 = load i64, i64* %7, align 8
  %18 = load i64, i64* %8, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %20, label %37

20:                                               ; preds = %16
  %21 = load i8*, i8** %9, align 8
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8*, i8** %10, align 8
  %25 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %25, i8** %10, align 8
  %26 = load i8, i8* %24, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %23, %27
  %29 = and i32 %28, 255
  %30 = trunc i32 %29 to i8
  %31 = load i8*, i8** %9, align 8
  store i8 %30, i8* %31, align 1
  %32 = load i8*, i8** %9, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %9, align 8
  br label %34

34:                                               ; preds = %20
  %35 = load i64, i64* %7, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %7, align 8
  br label %16, !llvm.loop !270

37:                                               ; preds = %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_read_filter_row_avg(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %12 = load i8*, i8** %5, align 8
  store i8* %12, i8** %8, align 8
  %13 = load i8*, i8** %6, align 8
  store i8* %13, i8** %9, align 8
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 5
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = add nsw i32 %17, 7
  %19 = ashr i32 %18, 3
  store i32 %19, i32* %10, align 4
  %20 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %21 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %20, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %10, align 4
  %24 = zext i32 %23 to i64
  %25 = sub i64 %22, %24
  store i64 %25, i64* %11, align 8
  store i64 0, i64* %7, align 8
  br label %26

26:                                               ; preds = %46, %3
  %27 = load i64, i64* %7, align 8
  %28 = load i32, i32* %10, align 4
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %31, label %49

31:                                               ; preds = %26
  %32 = load i8*, i8** %8, align 8
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = load i8*, i8** %9, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %9, align 8
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = sdiv i32 %38, 2
  %40 = add nsw i32 %34, %39
  %41 = and i32 %40, 255
  %42 = trunc i32 %41 to i8
  %43 = load i8*, i8** %8, align 8
  store i8 %42, i8* %43, align 1
  %44 = load i8*, i8** %8, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %8, align 8
  br label %46

46:                                               ; preds = %31
  %47 = load i64, i64* %7, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %7, align 8
  br label %26, !llvm.loop !271

49:                                               ; preds = %26
  store i64 0, i64* %7, align 8
  br label %50

50:                                               ; preds = %77, %49
  %51 = load i64, i64* %7, align 8
  %52 = load i64, i64* %11, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %54, label %80

54:                                               ; preds = %50
  %55 = load i8*, i8** %8, align 8
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = load i8*, i8** %9, align 8
  %59 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %59, i8** %9, align 8
  %60 = load i8, i8* %58, align 1
  %61 = zext i8 %60 to i32
  %62 = load i8*, i8** %8, align 8
  %63 = load i32, i32* %10, align 4
  %64 = zext i32 %63 to i64
  %65 = sub i64 0, %64
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = add nsw i32 %61, %68
  %70 = sdiv i32 %69, 2
  %71 = add nsw i32 %57, %70
  %72 = and i32 %71, 255
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %8, align 8
  store i8 %73, i8* %74, align 1
  %75 = load i8*, i8** %8, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %8, align 8
  br label %77

77:                                               ; preds = %54
  %78 = load i64, i64* %7, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %7, align 8
  br label %50, !llvm.loop !272

80:                                               ; preds = %50
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_read_filter_row_paeth_1byte_pixel(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  store i8* %19, i8** %7, align 8
  %20 = load i8*, i8** %6, align 8
  %21 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %21, i8** %6, align 8
  %22 = load i8, i8* %20, align 1
  %23 = zext i8 %22 to i32
  store i32 %23, i32* %9, align 4
  %24 = load i8*, i8** %5, align 8
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* %9, align 4
  %28 = add nsw i32 %26, %27
  store i32 %28, i32* %8, align 4
  %29 = load i32, i32* %8, align 4
  %30 = trunc i32 %29 to i8
  %31 = load i8*, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** %5, align 8
  store i8 %30, i8* %31, align 1
  br label %33

33:                                               ; preds = %95, %3
  %34 = load i8*, i8** %5, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = icmp ult i8* %34, %35
  br i1 %36, label %37, label %106

37:                                               ; preds = %33
  %38 = load i32, i32* %8, align 4
  %39 = and i32 %38, 255
  store i32 %39, i32* %8, align 4
  %40 = load i8*, i8** %6, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %6, align 8
  %42 = load i8, i8* %40, align 1
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %10, align 4
  %44 = load i32, i32* %10, align 4
  %45 = load i32, i32* %9, align 4
  %46 = sub nsw i32 %44, %45
  store i32 %46, i32* %14, align 4
  %47 = load i32, i32* %8, align 4
  %48 = load i32, i32* %9, align 4
  %49 = sub nsw i32 %47, %48
  store i32 %49, i32* %13, align 4
  %50 = load i32, i32* %14, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %37
  %53 = load i32, i32* %14, align 4
  %54 = sub nsw i32 0, %53
  br label %57

55:                                               ; preds = %37
  %56 = load i32, i32* %14, align 4
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi i32 [ %54, %52 ], [ %56, %55 ]
  store i32 %58, i32* %11, align 4
  %59 = load i32, i32* %13, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = load i32, i32* %13, align 4
  %63 = sub nsw i32 0, %62
  br label %66

64:                                               ; preds = %57
  %65 = load i32, i32* %13, align 4
  br label %66

66:                                               ; preds = %64, %61
  %67 = phi i32 [ %63, %61 ], [ %65, %64 ]
  store i32 %67, i32* %12, align 4
  %68 = load i32, i32* %14, align 4
  %69 = load i32, i32* %13, align 4
  %70 = add nsw i32 %68, %69
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %66
  %73 = load i32, i32* %14, align 4
  %74 = load i32, i32* %13, align 4
  %75 = add nsw i32 %73, %74
  %76 = sub nsw i32 0, %75
  br label %81

77:                                               ; preds = %66
  %78 = load i32, i32* %14, align 4
  %79 = load i32, i32* %13, align 4
  %80 = add nsw i32 %78, %79
  br label %81

81:                                               ; preds = %77, %72
  %82 = phi i32 [ %76, %72 ], [ %80, %77 ]
  store i32 %82, i32* %13, align 4
  %83 = load i32, i32* %12, align 4
  %84 = load i32, i32* %11, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = load i32, i32* %12, align 4
  store i32 %87, i32* %11, align 4
  %88 = load i32, i32* %10, align 4
  store i32 %88, i32* %8, align 4
  br label %89

89:                                               ; preds = %86, %81
  %90 = load i32, i32* %13, align 4
  %91 = load i32, i32* %11, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = load i32, i32* %9, align 4
  store i32 %94, i32* %8, align 4
  br label %95

95:                                               ; preds = %93, %89
  %96 = load i32, i32* %10, align 4
  store i32 %96, i32* %9, align 4
  %97 = load i8*, i8** %5, align 8
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = load i32, i32* %8, align 4
  %101 = add nsw i32 %100, %99
  store i32 %101, i32* %8, align 4
  %102 = load i32, i32* %8, align 4
  %103 = trunc i32 %102 to i8
  %104 = load i8*, i8** %5, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %5, align 8
  store i8 %103, i8* %104, align 1
  br label %33, !llvm.loop !273

106:                                              ; preds = %33
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_read_filter_row_paeth_multibyte_pixel(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %18 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 5
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = add nsw i32 %20, 7
  %22 = ashr i32 %21, 3
  store i32 %22, i32* %7, align 4
  %23 = load i8*, i8** %5, align 8
  %24 = load i32, i32* %7, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  store i8* %26, i8** %8, align 8
  br label %27

27:                                               ; preds = %31, %3
  %28 = load i8*, i8** %5, align 8
  %29 = load i8*, i8** %8, align 8
  %30 = icmp ult i8* %28, %29
  br i1 %30, label %31, label %44

31:                                               ; preds = %27
  %32 = load i8*, i8** %5, align 8
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = load i8*, i8** %6, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %6, align 8
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = add nsw i32 %34, %38
  store i32 %39, i32* %9, align 4
  %40 = load i32, i32* %9, align 4
  %41 = trunc i32 %40 to i8
  %42 = load i8*, i8** %5, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %5, align 8
  store i8 %41, i8* %42, align 1
  br label %27, !llvm.loop !274

44:                                               ; preds = %27
  %45 = load i8*, i8** %8, align 8
  %46 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %47 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %46, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = sub i64 %48, %50
  %52 = getelementptr inbounds i8, i8* %45, i64 %51
  store i8* %52, i8** %8, align 8
  br label %53

53:                                               ; preds = %127, %44
  %54 = load i8*, i8** %5, align 8
  %55 = load i8*, i8** %8, align 8
  %56 = icmp ult i8* %54, %55
  br i1 %56, label %57, label %137

57:                                               ; preds = %53
  %58 = load i8*, i8** %6, align 8
  %59 = load i32, i32* %7, align 4
  %60 = zext i32 %59 to i64
  %61 = sub i64 0, %60
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  store i32 %64, i32* %12, align 4
  %65 = load i8*, i8** %5, align 8
  %66 = load i32, i32* %7, align 4
  %67 = zext i32 %66 to i64
  %68 = sub i64 0, %67
  %69 = getelementptr inbounds i8, i8* %65, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  store i32 %71, i32* %10, align 4
  %72 = load i8*, i8** %6, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %6, align 8
  %74 = load i8, i8* %72, align 1
  %75 = zext i8 %74 to i32
  store i32 %75, i32* %11, align 4
  %76 = load i32, i32* %11, align 4
  %77 = load i32, i32* %12, align 4
  %78 = sub nsw i32 %76, %77
  store i32 %78, i32* %16, align 4
  %79 = load i32, i32* %10, align 4
  %80 = load i32, i32* %12, align 4
  %81 = sub nsw i32 %79, %80
  store i32 %81, i32* %15, align 4
  %82 = load i32, i32* %16, align 4
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %57
  %85 = load i32, i32* %16, align 4
  %86 = sub nsw i32 0, %85
  br label %89

87:                                               ; preds = %57
  %88 = load i32, i32* %16, align 4
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi i32 [ %86, %84 ], [ %88, %87 ]
  store i32 %90, i32* %13, align 4
  %91 = load i32, i32* %15, align 4
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = load i32, i32* %15, align 4
  %95 = sub nsw i32 0, %94
  br label %98

96:                                               ; preds = %89
  %97 = load i32, i32* %15, align 4
  br label %98

98:                                               ; preds = %96, %93
  %99 = phi i32 [ %95, %93 ], [ %97, %96 ]
  store i32 %99, i32* %14, align 4
  %100 = load i32, i32* %16, align 4
  %101 = load i32, i32* %15, align 4
  %102 = add nsw i32 %100, %101
  %103 = icmp slt i32 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %98
  %105 = load i32, i32* %16, align 4
  %106 = load i32, i32* %15, align 4
  %107 = add nsw i32 %105, %106
  %108 = sub nsw i32 0, %107
  br label %113

109:                                              ; preds = %98
  %110 = load i32, i32* %16, align 4
  %111 = load i32, i32* %15, align 4
  %112 = add nsw i32 %110, %111
  br label %113

113:                                              ; preds = %109, %104
  %114 = phi i32 [ %108, %104 ], [ %112, %109 ]
  store i32 %114, i32* %15, align 4
  %115 = load i32, i32* %14, align 4
  %116 = load i32, i32* %13, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %118, label %121

118:                                              ; preds = %113
  %119 = load i32, i32* %14, align 4
  store i32 %119, i32* %13, align 4
  %120 = load i32, i32* %11, align 4
  store i32 %120, i32* %10, align 4
  br label %121

121:                                              ; preds = %118, %113
  %122 = load i32, i32* %15, align 4
  %123 = load i32, i32* %13, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = load i32, i32* %12, align 4
  store i32 %126, i32* %10, align 4
  br label %127

127:                                              ; preds = %125, %121
  %128 = load i8*, i8** %5, align 8
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = load i32, i32* %10, align 4
  %132 = add nsw i32 %131, %130
  store i32 %132, i32* %10, align 4
  %133 = load i32, i32* %10, align 4
  %134 = trunc i32 %133 to i8
  %135 = load i8*, i8** %5, align 8
  %136 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %136, i8** %5, align 8
  store i8 %134, i8* %135, align 1
  br label %53, !llvm.loop !275

137:                                              ; preds = %53
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_IDAT_data(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 19
  %15 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %14, i32 0, i32 3
  store i8* %12, i8** %15, align 8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 19
  %18 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %17, i32 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = load i8*, i8** %5, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %3
  store i64 0, i64* %6, align 8
  br label %22

22:                                               ; preds = %21, %3
  br label %23

23:                                               ; preds = %185, %22
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 19
  %26 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %83

29:                                               ; preds = %23
  br label %30

30:                                               ; preds = %48, %29
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 50
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %30
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %37 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %36, i32 noundef 0)
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %39 = call i32 @png_read_chunk_header(%struct.png_struct_def* noundef %38)
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 50
  store i32 %39, i32* %41, align 8
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 44
  %44 = load i32, i32* %43, align 8
  %45 = icmp ne i32 %44, 1229209940
  br i1 %45, label %46, label %48

46:                                               ; preds = %35
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %47, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55.369, i64 0, i64 0)) #13
  unreachable

48:                                               ; preds = %35
  br label %30, !llvm.loop !276

49:                                               ; preds = %30
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 141
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %9, align 4
  %53 = load i32, i32* %9, align 4
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 50
  %56 = load i32, i32* %55, align 8
  %57 = icmp ugt i32 %53, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %49
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 50
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %9, align 4
  br label %62

62:                                               ; preds = %58, %49
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %64 = load i32, i32* %9, align 4
  %65 = zext i32 %64 to i64
  %66 = call i8* @png_read_buffer(%struct.png_struct_def* noundef %63, i64 noundef %65, i32 noundef 0)
  store i8* %66, i8** %10, align 8
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %68 = load i8*, i8** %10, align 8
  %69 = load i32, i32* %9, align 4
  call void @png_crc_read(%struct.png_struct_def* noundef %67, i8* noundef %68, i32 noundef %69)
  %70 = load i32, i32* %9, align 4
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 50
  %73 = load i32, i32* %72, align 8
  %74 = sub i32 %73, %70
  store i32 %74, i32* %72, align 8
  %75 = load i8*, i8** %10, align 8
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 19
  %78 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %77, i32 0, i32 0
  store i8* %75, i8** %78, align 8
  %79 = load i32, i32* %9, align 4
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 19
  %82 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %81, i32 0, i32 1
  store i32 %79, i32* %82, align 8
  br label %83

83:                                               ; preds = %62, %23
  %84 = load i8*, i8** %5, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %86, label %103

86:                                               ; preds = %83
  store i32 -1, i32* %11, align 4
  %87 = load i32, i32* %11, align 4
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* %6, align 8
  %90 = icmp ugt i64 %88, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = load i64, i64* %6, align 8
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %11, align 4
  br label %94

94:                                               ; preds = %91, %86
  %95 = load i32, i32* %11, align 4
  %96 = zext i32 %95 to i64
  %97 = load i64, i64* %6, align 8
  %98 = sub i64 %97, %96
  store i64 %98, i64* %6, align 8
  %99 = load i32, i32* %11, align 4
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %100, i32 0, i32 19
  %102 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %101, i32 0, i32 4
  store i32 %99, i32* %102, align 8
  br label %111

103:                                              ; preds = %83
  %104 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 19
  %107 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %106, i32 0, i32 3
  store i8* %104, i8** %107, align 8
  %108 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %109 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %108, i32 0, i32 19
  %110 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %109, i32 0, i32 4
  store i32 1024, i32* %110, align 8
  br label %111

111:                                              ; preds = %103, %94
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %113 = call i32 @png_zlib_inflate(%struct.png_struct_def* noundef %112, i32 noundef 0)
  store i32 %113, i32* %7, align 4
  %114 = load i8*, i8** %5, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %116, label %124

116:                                              ; preds = %111
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 19
  %119 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %118, i32 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = zext i32 %120 to i64
  %122 = load i64, i64* %6, align 8
  %123 = add i64 %122, %121
  store i64 %123, i64* %6, align 8
  br label %133

124:                                              ; preds = %111
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %125, i32 0, i32 19
  %127 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %126, i32 0, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = zext i32 %128 to i64
  %130 = sub i64 1024, %129
  %131 = load i64, i64* %6, align 8
  %132 = add i64 %131, %130
  store i64 %132, i64* %6, align 8
  br label %133

133:                                              ; preds = %124, %116
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 19
  %136 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %135, i32 0, i32 4
  store i32 0, i32* %136, align 8
  %137 = load i32, i32* %7, align 4
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %164

139:                                              ; preds = %133
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 19
  %142 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %141, i32 0, i32 3
  store i8* null, i8** %142, align 8
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %144 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %143, i32 0, i32 15
  %145 = load i32, i32* %144, align 4
  %146 = or i32 %145, 8
  store i32 %146, i32* %144, align 4
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %148 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 16
  %149 = load i32, i32* %148, align 8
  %150 = or i32 %149, 8
  store i32 %150, i32* %148, align 8
  %151 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %151, i32 0, i32 19
  %153 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = icmp ugt i32 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %139
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %157, i32 0, i32 50
  %159 = load i32, i32* %158, align 8
  %160 = icmp ugt i32 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %156, %139
  %162 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %162, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.56.370, i64 0, i64 0))
  br label %163

163:                                              ; preds = %161, %156
  br label %188

164:                                              ; preds = %133
  %165 = load i32, i32* %7, align 4
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %167, label %184

167:                                              ; preds = %164
  %168 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %169 = load i32, i32* %7, align 4
  call void @png_zstream_error(%struct.png_struct_def* noundef %168, i32 noundef %169)
  %170 = load i8*, i8** %5, align 8
  %171 = icmp ne i8* %170, null
  br i1 %171, label %172, label %178

172:                                              ; preds = %167
  %173 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %175 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %174, i32 0, i32 19
  %176 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %175, i32 0, i32 6
  %177 = load i8*, i8** %176, align 8
  call void @png_chunk_error(%struct.png_struct_def* noundef %173, i8* noundef %177) #13
  unreachable

178:                                              ; preds = %167
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %181 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %180, i32 0, i32 19
  %182 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %181, i32 0, i32 6
  %183 = load i8*, i8** %182, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %179, i8* noundef %183)
  br label %199

184:                                              ; preds = %164
  br label %185

185:                                              ; preds = %184
  %186 = load i64, i64* %6, align 8
  %187 = icmp ugt i64 %186, 0
  br i1 %187, label %23, label %188, !llvm.loop !277

188:                                              ; preds = %185, %163
  %189 = load i64, i64* %6, align 8
  %190 = icmp ugt i64 %189, 0
  br i1 %190, label %191, label %199

191:                                              ; preds = %188
  %192 = load i8*, i8** %5, align 8
  %193 = icmp ne i8* %192, null
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %195, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55.369, i64 0, i64 0)) #13
  unreachable

196:                                              ; preds = %191
  %197 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_chunk_benign_error(%struct.png_struct_def* noundef %197, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57.371, i64 0, i64 0))
  br label %198

198:                                              ; preds = %196
  br label %199

199:                                              ; preds = %178, %198, %188
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_finish_IDAT(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %28

8:                                                ; preds = %1
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_IDAT_data(%struct.png_struct_def* noundef %9, i8* noundef null, i64 noundef 0)
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %11, i32 0, i32 3
  store i8* null, i8** %12, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 16
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %8
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %21, 8
  store i32 %22, i32* %20, align 4
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 16
  %25 = load i32, i32* %24, align 8
  %26 = or i32 %25, 8
  store i32 %26, i32* %24, align 8
  br label %27

27:                                               ; preds = %18, %8
  br label %28

28:                                               ; preds = %27, %1
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 18
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1229209940
  br i1 %32, label %33, label %47

33:                                               ; preds = %28
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 19
  %36 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %35, i32 0, i32 0
  store i8* null, i8** %36, align 8
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 19
  %39 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %38, i32 0, i32 1
  store i32 0, i32* %39, align 8
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 18
  store i32 0, i32* %41, align 8
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 50
  %45 = load i32, i32* %44, align 8
  %46 = call i32 @png_crc_finish(%struct.png_struct_def* noundef %42, i32 noundef %45)
  br label %47

47:                                               ; preds = %33, %28
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_finish_row(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 43
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 43
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 39
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  br label %133

15:                                               ; preds = %1
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 58
  %18 = load i8, i8* %17, align 4
  %19 = zext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %131

21:                                               ; preds = %15
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 43
  store i32 0, i32* %23, align 4
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 45
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 41
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %121, %21
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 59
  %34 = load i8, i8* %33, align 1
  %35 = add i8 %34, 1
  store i8 %35, i8* %33, align 1
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 59
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp sge i32 %39, 7
  br i1 %40, label %41, label %42

41:                                               ; preds = %31
  br label %123

42:                                               ; preds = %31
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 37
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 59
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_inc, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = add i32 %45, %52
  %54 = sub i32 %53, 1
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 59
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_start, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = sub i32 %54, %61
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 59
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_inc, i64 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = udiv i32 %62, %69
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 42
  store i32 %70, i32* %72, align 8
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 17
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %109

78:                                               ; preds = %42
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %79, i32 0, i32 38
  %81 = load i32, i32* %80, align 4
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 59
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_yinc, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add i32 %81, %88
  %90 = sub i32 %89, 1
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %91, i32 0, i32 59
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i64
  %95 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_ystart, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = sub i32 %90, %97
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 59
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_yinc, i64 0, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = udiv i32 %98, %105
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %107, i32 0, i32 39
  store i32 %106, i32* %108, align 8
  br label %110

109:                                              ; preds = %42
  br label %123

110:                                              ; preds = %78
  br label %111

111:                                              ; preds = %110
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 39
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %111
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 42
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br label %121

121:                                              ; preds = %116, %111
  %122 = phi i1 [ true, %111 ], [ %120, %116 ]
  br i1 %122, label %31, label %123, !llvm.loop !278

123:                                              ; preds = %121, %109, %41
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 59
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp slt i32 %127, 7
  br i1 %128, label %129, label %130

129:                                              ; preds = %123
  br label %133

130:                                              ; preds = %123
  br label %131

131:                                              ; preds = %130, %15
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_read_finish_IDAT(%struct.png_struct_def* noundef %132)
  br label %133

133:                                              ; preds = %131, %129, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_start_row(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_init_read_transformations(%struct.png_struct_def* noundef %9)
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 58
  %12 = load i8, i8* %11, align 4
  %13 = zext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %74

15:                                               ; preds = %1
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 17
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %15
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 38
  %24 = load i32, i32* %23, align 4
  %25 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_read_start_row.png_pass_yinc, i64 0, i64 0), align 1
  %26 = zext i8 %25 to i32
  %27 = add i32 %24, %26
  %28 = sub i32 %27, 1
  %29 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_read_start_row.png_pass_ystart, i64 0, i64 0), align 1
  %30 = zext i8 %29 to i32
  %31 = sub i32 %28, %30
  %32 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_read_start_row.png_pass_yinc, i64 0, i64 0), align 1
  %33 = zext i8 %32 to i32
  %34 = udiv i32 %31, %33
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 39
  store i32 %34, i32* %36, align 8
  br label %43

37:                                               ; preds = %15
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 38
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 39
  store i32 %40, i32* %42, align 8
  br label %43

43:                                               ; preds = %37, %21
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 37
  %46 = load i32, i32* %45, align 8
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 59
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_start_row.png_pass_inc, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = add i32 %46, %53
  %55 = sub i32 %54, 1
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 59
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_start_row.png_pass_start, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = sub i32 %55, %62
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 59
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_start_row.png_pass_inc, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = udiv i32 %63, %70
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %73 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 42
  store i32 %71, i32* %73, align 8
  br label %85

74:                                               ; preds = %1
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 38
  %77 = load i32, i32* %76, align 4
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 39
  store i32 %77, i32* %79, align 8
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 37
  %82 = load i32, i32* %81, align 8
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %84 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %83, i32 0, i32 42
  store i32 %82, i32* %84, align 8
  br label %85

85:                                               ; preds = %74, %43
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 64
  %88 = load i8, i8* %87, align 2
  %89 = zext i8 %88 to i32
  store i32 %89, i32* %3, align 4
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 17
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %85
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 62
  %98 = load i8, i8* %97, align 8
  %99 = zext i8 %98 to i32
  %100 = icmp slt i32 %99, 8
  br i1 %100, label %101, label %102

101:                                              ; preds = %95
  store i32 8, i32* %3, align 4
  br label %102

102:                                              ; preds = %101, %95, %85
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %104 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 17
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 4096
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %164

108:                                              ; preds = %102
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 61
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 3
  br i1 %113, label %114, label %123

114:                                              ; preds = %108
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 55
  %117 = load i16, i16* %116, align 8
  %118 = zext i16 %117 to i32
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %114
  store i32 32, i32* %3, align 4
  br label %122

121:                                              ; preds = %114
  store i32 24, i32* %3, align 4
  br label %122

122:                                              ; preds = %121, %120
  br label %163

123:                                              ; preds = %108
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 61
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %143

129:                                              ; preds = %123
  %130 = load i32, i32* %3, align 4
  %131 = icmp ult i32 %130, 8
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  store i32 8, i32* %3, align 4
  br label %133

133:                                              ; preds = %132, %129
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 55
  %136 = load i16, i16* %135, align 8
  %137 = zext i16 %136 to i32
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = load i32, i32* %3, align 4
  %141 = mul i32 %140, 2
  store i32 %141, i32* %3, align 4
  br label %142

142:                                              ; preds = %139, %133
  br label %162

143:                                              ; preds = %123
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %144, i32 0, i32 61
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp eq i32 %147, 2
  br i1 %148, label %149, label %161

149:                                              ; preds = %143
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %151 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %150, i32 0, i32 55
  %152 = load i16, i16* %151, align 8
  %153 = zext i16 %152 to i32
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %149
  %156 = load i32, i32* %3, align 4
  %157 = mul i32 %156, 4
  store i32 %157, i32* %3, align 4
  %158 = load i32, i32* %3, align 4
  %159 = udiv i32 %158, 3
  store i32 %159, i32* %3, align 4
  br label %160

160:                                              ; preds = %155, %149
  br label %161

161:                                              ; preds = %160, %143
  br label %162

162:                                              ; preds = %161, %142
  br label %163

163:                                              ; preds = %162, %122
  br label %164

164:                                              ; preds = %163, %102
  %165 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %165, i32 0, i32 17
  %167 = load i32, i32* %166, align 4
  %168 = and i32 %167, 512
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %192

170:                                              ; preds = %164
  %171 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %172 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %171, i32 0, i32 17
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 4096
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %186

176:                                              ; preds = %170
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %178 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %177, i32 0, i32 62
  %179 = load i8, i8* %178, align 8
  %180 = zext i8 %179 to i32
  %181 = icmp slt i32 %180, 16
  br i1 %181, label %182, label %185

182:                                              ; preds = %176
  %183 = load i32, i32* %3, align 4
  %184 = mul i32 %183, 2
  store i32 %184, i32* %3, align 4
  br label %185

185:                                              ; preds = %182, %176
  br label %191

186:                                              ; preds = %170
  %187 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %187, i32 0, i32 17
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, -513
  store i32 %190, i32* %188, align 4
  br label %191

191:                                              ; preds = %186, %185
  br label %192

192:                                              ; preds = %191, %164
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %194 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 17
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 32768
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %230

198:                                              ; preds = %192
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %200 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %199, i32 0, i32 61
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %210

204:                                              ; preds = %198
  %205 = load i32, i32* %3, align 4
  %206 = icmp ule i32 %205, 8
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  store i32 16, i32* %3, align 4
  br label %209

208:                                              ; preds = %204
  store i32 32, i32* %3, align 4
  br label %209

209:                                              ; preds = %208, %207
  br label %229

210:                                              ; preds = %198
  %211 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %212 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %211, i32 0, i32 61
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = icmp eq i32 %214, 2
  br i1 %215, label %222, label %216

216:                                              ; preds = %210
  %217 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %218 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %217, i32 0, i32 61
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = icmp eq i32 %220, 3
  br i1 %221, label %222, label %228

222:                                              ; preds = %216, %210
  %223 = load i32, i32* %3, align 4
  %224 = icmp ule i32 %223, 32
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  store i32 32, i32* %3, align 4
  br label %227

226:                                              ; preds = %222
  store i32 64, i32* %3, align 4
  br label %227

227:                                              ; preds = %226, %225
  br label %228

228:                                              ; preds = %227, %216
  br label %229

229:                                              ; preds = %228, %209
  br label %230

230:                                              ; preds = %229, %192
  %231 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %232 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %231, i32 0, i32 17
  %233 = load i32, i32* %232, align 4
  %234 = and i32 %233, 16384
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %289

236:                                              ; preds = %230
  %237 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %238 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %237, i32 0, i32 55
  %239 = load i16, i16* %238, align 8
  %240 = zext i16 %239 to i32
  %241 = icmp ne i32 %240, 0
  br i1 %241, label %242, label %248

242:                                              ; preds = %236
  %243 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %244 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %243, i32 0, i32 17
  %245 = load i32, i32* %244, align 4
  %246 = and i32 %245, 4096
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %260, label %248

248:                                              ; preds = %242, %236
  %249 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %250 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %249, i32 0, i32 17
  %251 = load i32, i32* %250, align 4
  %252 = and i32 %251, 32768
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %260, label %254

254:                                              ; preds = %248
  %255 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %256 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %255, i32 0, i32 61
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %266

260:                                              ; preds = %254, %248, %242
  %261 = load i32, i32* %3, align 4
  %262 = icmp ule i32 %261, 16
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  store i32 32, i32* %3, align 4
  br label %265

264:                                              ; preds = %260
  store i32 64, i32* %3, align 4
  br label %265

265:                                              ; preds = %264, %263
  br label %288

266:                                              ; preds = %254
  %267 = load i32, i32* %3, align 4
  %268 = icmp ule i32 %267, 8
  br i1 %268, label %269, label %278

269:                                              ; preds = %266
  %270 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %271 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %270, i32 0, i32 61
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = icmp eq i32 %273, 6
  br i1 %274, label %275, label %276

275:                                              ; preds = %269
  store i32 32, i32* %3, align 4
  br label %277

276:                                              ; preds = %269
  store i32 24, i32* %3, align 4
  br label %277

277:                                              ; preds = %276, %275
  br label %287

278:                                              ; preds = %266
  %279 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %280 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %279, i32 0, i32 61
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = icmp eq i32 %282, 6
  br i1 %283, label %284, label %285

284:                                              ; preds = %278
  store i32 64, i32* %3, align 4
  br label %286

285:                                              ; preds = %278
  store i32 48, i32* %3, align 4
  br label %286

286:                                              ; preds = %285, %284
  br label %287

287:                                              ; preds = %286, %277
  br label %288

288:                                              ; preds = %287, %265
  br label %289

289:                                              ; preds = %288, %230
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %291 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %290, i32 0, i32 17
  %292 = load i32, i32* %291, align 4
  %293 = and i32 %292, 1048576
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %311

295:                                              ; preds = %289
  %296 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %297 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %296, i32 0, i32 13
  %298 = load i8, i8* %297, align 8
  %299 = zext i8 %298 to i32
  %300 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %301 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %300, i32 0, i32 14
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = mul nsw i32 %299, %303
  store i32 %304, i32* %5, align 4
  %305 = load i32, i32* %5, align 4
  %306 = load i32, i32* %3, align 4
  %307 = icmp ugt i32 %305, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %295
  %309 = load i32, i32* %5, align 4
  store i32 %309, i32* %3, align 4
  br label %310

310:                                              ; preds = %308, %295
  br label %311

311:                                              ; preds = %310, %289
  %312 = load i32, i32* %3, align 4
  %313 = trunc i32 %312 to i8
  %314 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %315 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %314, i32 0, i32 68
  store i8 %313, i8* %315, align 2
  %316 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %317 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %316, i32 0, i32 69
  store i8 0, i8* %317, align 1
  %318 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %319 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %318, i32 0, i32 37
  %320 = load i32, i32* %319, align 8
  %321 = add i32 %320, 7
  %322 = and i32 %321, -8
  %323 = zext i32 %322 to i64
  store i64 %323, i64* %4, align 8
  %324 = load i32, i32* %3, align 4
  %325 = icmp uge i32 %324, 8
  br i1 %325, label %326, label %332

326:                                              ; preds = %311
  %327 = load i64, i64* %4, align 8
  %328 = load i32, i32* %3, align 4
  %329 = zext i32 %328 to i64
  %330 = lshr i64 %329, 3
  %331 = mul i64 %327, %330
  br label %339

332:                                              ; preds = %311
  %333 = load i64, i64* %4, align 8
  %334 = load i32, i32* %3, align 4
  %335 = zext i32 %334 to i64
  %336 = mul i64 %333, %335
  %337 = add i64 %336, 7
  %338 = lshr i64 %337, 3
  br label %339

339:                                              ; preds = %332, %326
  %340 = phi i64 [ %331, %326 ], [ %338, %332 ]
  %341 = add i64 %340, 1
  %342 = load i32, i32* %3, align 4
  %343 = add i32 %342, 7
  %344 = lshr i32 %343, 3
  %345 = zext i32 %344 to i64
  %346 = add i64 %341, %345
  store i64 %346, i64* %4, align 8
  %347 = load i64, i64* %4, align 8
  %348 = add i64 %347, 48
  %349 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %350 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %349, i32 0, i32 138
  %351 = load i64, i64* %350, align 8
  %352 = icmp ugt i64 %348, %351
  br i1 %352, label %353, label %420

353:                                              ; preds = %339
  %354 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %355 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %356 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %355, i32 0, i32 128
  %357 = load i8*, i8** %356, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %354, i8* noundef %357)
  %358 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %359 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %360 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %359, i32 0, i32 143
  %361 = load i8*, i8** %360, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %358, i8* noundef %361)
  %362 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %363 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %362, i32 0, i32 58
  %364 = load i8, i8* %363, align 4
  %365 = zext i8 %364 to i32
  %366 = icmp ne i32 %365, 0
  br i1 %366, label %367, label %374

367:                                              ; preds = %353
  %368 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %369 = load i64, i64* %4, align 8
  %370 = add i64 %369, 48
  %371 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_calloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %368, i64 noundef %370)
  %372 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %373 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %372, i32 0, i32 128
  store i8* %371, i8** %373, align 8
  br label %381

374:                                              ; preds = %353
  %375 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %376 = load i64, i64* %4, align 8
  %377 = add i64 %376, 48
  %378 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %375, i64 noundef %377)
  %379 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %380 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %379, i32 0, i32 128
  store i8* %378, i8** %380, align 8
  br label %381

381:                                              ; preds = %374, %367
  %382 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %383 = load i64, i64* %4, align 8
  %384 = add i64 %383, 48
  %385 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %382, i64 noundef %384)
  %386 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %387 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %386, i32 0, i32 143
  store i8* %385, i8** %387, align 8
  %388 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %389 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %388, i32 0, i32 128
  %390 = load i8*, i8** %389, align 8
  %391 = getelementptr inbounds i8, i8* %390, i64 32
  store i8* %391, i8** %6, align 8
  %392 = load i8*, i8** %6, align 8
  %393 = ptrtoint i8* %392 to i64
  %394 = and i64 %393, 15
  store i64 %394, i64* %7, align 8
  %395 = load i8*, i8** %6, align 8
  %396 = load i64, i64* %7, align 8
  %397 = sub i64 0, %396
  %398 = getelementptr inbounds i8, i8* %395, i64 %397
  %399 = getelementptr inbounds i8, i8* %398, i64 -1
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %401 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %400, i32 0, i32 46
  store i8* %399, i8** %401, align 8
  %402 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %403 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %402, i32 0, i32 143
  %404 = load i8*, i8** %403, align 8
  %405 = getelementptr inbounds i8, i8* %404, i64 32
  store i8* %405, i8** %6, align 8
  %406 = load i8*, i8** %6, align 8
  %407 = ptrtoint i8* %406 to i64
  %408 = and i64 %407, 15
  store i64 %408, i64* %7, align 8
  %409 = load i8*, i8** %6, align 8
  %410 = load i64, i64* %7, align 8
  %411 = sub i64 0, %410
  %412 = getelementptr inbounds i8, i8* %409, i64 %411
  %413 = getelementptr inbounds i8, i8* %412, i64 -1
  %414 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %415 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %414, i32 0, i32 45
  store i8* %413, i8** %415, align 8
  %416 = load i64, i64* %4, align 8
  %417 = add i64 %416, 48
  %418 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %419 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %418, i32 0, i32 138
  store i64 %417, i64* %419, align 8
  br label %420

420:                                              ; preds = %381, %339
  %421 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %422 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %421, i32 0, i32 41
  %423 = load i64, i64* %422, align 8
  %424 = icmp ugt i64 %423, -2
  br i1 %424, label %425, label %427

425:                                              ; preds = %420
  %426 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_error(%struct.png_struct_def* noundef %426, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58.378, i64 0, i64 0)) #13
  unreachable

427:                                              ; preds = %420
  %428 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %429 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %428, i32 0, i32 45
  %430 = load i8*, i8** %429, align 8
  %431 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %432 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %431, i32 0, i32 41
  %433 = load i64, i64* %432, align 8
  %434 = add i64 %433, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %430, i8 0, i64 %434, i1 false)
  %435 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %436 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %435, i32 0, i32 139
  %437 = load i8*, i8** %436, align 8
  %438 = icmp ne i8* %437, null
  br i1 %438, label %439, label %449

439:                                              ; preds = %427
  %440 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %441 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %440, i32 0, i32 139
  %442 = load i8*, i8** %441, align 8
  store i8* %442, i8** %8, align 8
  %443 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %444 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %443, i32 0, i32 140
  store i64 0, i64* %444, align 8
  %445 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %446 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %445, i32 0, i32 139
  store i8* null, i8** %446, align 8
  %447 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %448 = load i8*, i8** %8, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %447, i8* noundef %448)
  br label %449

449:                                              ; preds = %439, %427
  %450 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %451 = call i32 @png_inflate_claim(%struct.png_struct_def* noundef %450, i32 noundef 1229209940)
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %459

453:                                              ; preds = %449
  %454 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %455 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %456 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %455, i32 0, i32 19
  %457 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %456, i32 0, i32 6
  %458 = load i8*, i8** %457, align 8
  call void @png_error(%struct.png_struct_def* noundef %454, i8* noundef %458) #13
  unreachable

459:                                              ; preds = %449
  %460 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %461 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %460, i32 0, i32 16
  %462 = load i32, i32* %461, align 8
  %463 = or i32 %462, 64
  store i32 %463, i32* %461, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_bKGD(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_color_16_struct* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca %struct.png_color_16_struct*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store %struct.png_color_16_struct* %2, %struct.png_color_16_struct** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %14 = icmp eq %struct.png_color_16_struct* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12, %9, %3
  br label %26

16:                                               ; preds = %12
  %17 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %17, i32 0, i32 27
  %19 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %6, align 8
  %20 = bitcast %struct.png_color_16_struct* %18 to i8*
  %21 = bitcast %struct.png_color_16_struct* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %20, i8* align 2 %21, i64 10, i1 false)
  %22 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %22, i32 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = or i32 %24, 32
  store i32 %25, i32* %23, align 8
  br label %26

26:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_cHRM_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) #0 {
  %11 = alloca %struct.png_struct_def*, align 8
  %12 = alloca %struct.png_info_def*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.png_xy, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %11, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %12, align 8
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i32 %6, i32* %17, align 4
  store i32 %7, i32* %18, align 4
  store i32 %8, i32* %19, align 4
  store i32 %9, i32* %20, align 4
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %23 = icmp eq %struct.png_struct_def* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %10
  %25 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %26 = icmp eq %struct.png_info_def* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %10
  br label %61

28:                                               ; preds = %24
  %29 = load i32, i32* %15, align 4
  %30 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 0
  store i32 %29, i32* %30, align 4
  %31 = load i32, i32* %16, align 4
  %32 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 1
  store i32 %31, i32* %32, align 4
  %33 = load i32, i32* %17, align 4
  %34 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 2
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* %18, align 4
  %36 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 3
  store i32 %35, i32* %36, align 4
  %37 = load i32, i32* %19, align 4
  %38 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 4
  store i32 %37, i32* %38, align 4
  %39 = load i32, i32* %20, align 4
  %40 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 5
  store i32 %39, i32* %40, align 4
  %41 = load i32, i32* %13, align 4
  %42 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 6
  store i32 %41, i32* %42, align 4
  %43 = load i32, i32* %14, align 4
  %44 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %21, i32 0, i32 7
  store i32 %43, i32* %44, align 4
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %46 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 16
  %48 = call i32 @png_colorspace_set_chromaticities(%struct.png_struct_def* noundef %45, %struct.png_colorspace* noundef %47, %struct.png_xy* noundef %21, i32 noundef 2)
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %58

50:                                               ; preds = %28
  %51 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 16
  %53 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %52, i32 0, i32 4
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = or i32 %55, 16
  %57 = trunc i32 %56 to i16
  store i16 %57, i16* %53, align 2
  br label %58

58:                                               ; preds = %50, %28
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %60 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %59, %struct.png_info_def* noundef %60)
  br label %61

61:                                               ; preds = %58, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_cHRM_XYZ_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) #0 {
  %12 = alloca %struct.png_struct_def*, align 8
  %13 = alloca %struct.png_info_def*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.png_XYZ, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %12, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %13, align 8
  store i32 %2, i32* %14, align 4
  store i32 %3, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  store i32 %5, i32* %17, align 4
  store i32 %6, i32* %18, align 4
  store i32 %7, i32* %19, align 4
  store i32 %8, i32* %20, align 4
  store i32 %9, i32* %21, align 4
  store i32 %10, i32* %22, align 4
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %25 = icmp eq %struct.png_struct_def* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %11
  %27 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %28 = icmp eq %struct.png_info_def* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %11
  br label %65

30:                                               ; preds = %26
  %31 = load i32, i32* %14, align 4
  %32 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 0
  store i32 %31, i32* %32, align 4
  %33 = load i32, i32* %15, align 4
  %34 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 1
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* %16, align 4
  %36 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 2
  store i32 %35, i32* %36, align 4
  %37 = load i32, i32* %17, align 4
  %38 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 3
  store i32 %37, i32* %38, align 4
  %39 = load i32, i32* %18, align 4
  %40 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 4
  store i32 %39, i32* %40, align 4
  %41 = load i32, i32* %19, align 4
  %42 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 5
  store i32 %41, i32* %42, align 4
  %43 = load i32, i32* %20, align 4
  %44 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 6
  store i32 %43, i32* %44, align 4
  %45 = load i32, i32* %21, align 4
  %46 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 7
  store i32 %45, i32* %46, align 4
  %47 = load i32, i32* %22, align 4
  %48 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %23, i32 0, i32 8
  store i32 %47, i32* %48, align 4
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %50 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %51 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %50, i32 0, i32 16
  %52 = call i32 @png_colorspace_set_endpoints(%struct.png_struct_def* noundef %49, %struct.png_colorspace* noundef %51, %struct.png_XYZ* noundef %23, i32 noundef 2)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %30
  %55 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %56 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %55, i32 0, i32 16
  %57 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %56, i32 0, i32 4
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = or i32 %59, 16
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %57, align 2
  br label %62

62:                                               ; preds = %54, %30
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %64 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %63, %struct.png_info_def* noundef %64)
  br label %65

65:                                               ; preds = %62, %29
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_cHRM(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, double noundef %2, double noundef %3, double noundef %4, double noundef %5, double noundef %6, double noundef %7, double noundef %8, double noundef %9) #0 {
  %11 = alloca %struct.png_struct_def*, align 8
  %12 = alloca %struct.png_info_def*, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %11, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %12, align 8
  store double %2, double* %13, align 8
  store double %3, double* %14, align 8
  store double %4, double* %15, align 8
  store double %5, double* %16, align 8
  store double %6, double* %17, align 8
  store double %7, double* %18, align 8
  store double %8, double* %19, align 8
  store double %9, double* %20, align 8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %22 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %24 = load double, double* %13, align 8
  %25 = call i32 @png_fixed(%struct.png_struct_def* noundef %23, double noundef %24, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.381, i64 0, i64 0))
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %27 = load double, double* %14, align 8
  %28 = call i32 @png_fixed(%struct.png_struct_def* noundef %26, double noundef %27, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.382, i64 0, i64 0))
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %30 = load double, double* %15, align 8
  %31 = call i32 @png_fixed(%struct.png_struct_def* noundef %29, double noundef %30, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.383, i64 0, i64 0))
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %33 = load double, double* %16, align 8
  %34 = call i32 @png_fixed(%struct.png_struct_def* noundef %32, double noundef %33, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.384, i64 0, i64 0))
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %36 = load double, double* %17, align 8
  %37 = call i32 @png_fixed(%struct.png_struct_def* noundef %35, double noundef %36, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.385, i64 0, i64 0))
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %39 = load double, double* %18, align 8
  %40 = call i32 @png_fixed(%struct.png_struct_def* noundef %38, double noundef %39, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.386, i64 0, i64 0))
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %42 = load double, double* %19, align 8
  %43 = call i32 @png_fixed(%struct.png_struct_def* noundef %41, double noundef %42, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.387, i64 0, i64 0))
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %45 = load double, double* %20, align 8
  %46 = call i32 @png_fixed(%struct.png_struct_def* noundef %44, double noundef %45, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.388, i64 0, i64 0))
  call void @png_set_cHRM_fixed(%struct.png_struct_def* noundef %21, %struct.png_info_def* noundef %22, i32 noundef %25, i32 noundef %28, i32 noundef %31, i32 noundef %34, i32 noundef %37, i32 noundef %40, i32 noundef %43, i32 noundef %46)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_cHRM_XYZ(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, double noundef %2, double noundef %3, double noundef %4, double noundef %5, double noundef %6, double noundef %7, double noundef %8, double noundef %9, double noundef %10) #0 {
  %12 = alloca %struct.png_struct_def*, align 8
  %13 = alloca %struct.png_info_def*, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %12, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %13, align 8
  store double %2, double* %14, align 8
  store double %3, double* %15, align 8
  store double %4, double* %16, align 8
  store double %5, double* %17, align 8
  store double %6, double* %18, align 8
  store double %7, double* %19, align 8
  store double %8, double* %20, align 8
  store double %9, double* %21, align 8
  store double %10, double* %22, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %24 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %26 = load double, double* %14, align 8
  %27 = call i32 @png_fixed(%struct.png_struct_def* noundef %25, double noundef %26, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.383, i64 0, i64 0))
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %29 = load double, double* %15, align 8
  %30 = call i32 @png_fixed(%struct.png_struct_def* noundef %28, double noundef %29, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.384, i64 0, i64 0))
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %32 = load double, double* %16, align 8
  %33 = call i32 @png_fixed(%struct.png_struct_def* noundef %31, double noundef %32, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8.389, i64 0, i64 0))
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %35 = load double, double* %17, align 8
  %36 = call i32 @png_fixed(%struct.png_struct_def* noundef %34, double noundef %35, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.385, i64 0, i64 0))
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %38 = load double, double* %18, align 8
  %39 = call i32 @png_fixed(%struct.png_struct_def* noundef %37, double noundef %38, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.386, i64 0, i64 0))
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %41 = load double, double* %19, align 8
  %42 = call i32 @png_fixed(%struct.png_struct_def* noundef %40, double noundef %41, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9.390, i64 0, i64 0))
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %44 = load double, double* %20, align 8
  %45 = call i32 @png_fixed(%struct.png_struct_def* noundef %43, double noundef %44, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.387, i64 0, i64 0))
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %47 = load double, double* %21, align 8
  %48 = call i32 @png_fixed(%struct.png_struct_def* noundef %46, double noundef %47, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.388, i64 0, i64 0))
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %12, align 8
  %50 = load double, double* %22, align 8
  %51 = call i32 @png_fixed(%struct.png_struct_def* noundef %49, double noundef %50, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.391, i64 0, i64 0))
  call void @png_set_cHRM_XYZ_fixed(%struct.png_struct_def* noundef %23, %struct.png_info_def* noundef %24, i32 noundef %27, i32 noundef %30, i32 noundef %33, i32 noundef %36, i32 noundef %39, i32 noundef %42, i32 noundef %45, i32 noundef %48, i32 noundef %51)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_eXIf(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %7, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11.392, i64 0, i64 0))
  %8 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %9 = load i8*, i8** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_eXIf_1(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %14 = icmp eq %struct.png_info_def* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 15
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16384
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15, %12, %4
  br label %52

22:                                               ; preds = %15
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %24 = load i32, i32* %7, align 4
  %25 = zext i32 %24 to i64
  %26 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %23, i64 noundef %25)
  store i8* %26, i8** %9, align 8
  %27 = load i8*, i8** %9, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_warning(%struct.png_struct_def* noundef %30, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12.395, i64 0, i64 0))
  br label %52

31:                                               ; preds = %22
  %32 = load i8*, i8** %9, align 8
  %33 = load i8*, i8** %8, align 8
  %34 = load i32, i32* %7, align 4
  %35 = zext i32 %34 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %33, i64 %35, i1 false)
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %37 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %36, %struct.png_info_def* noundef %37, i32 noundef 32768, i32 noundef 0)
  %38 = load i32, i32* %7, align 4
  %39 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 34
  store i32 %38, i32* %40, align 4
  %41 = load i8*, i8** %9, align 8
  %42 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %43 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %42, i32 0, i32 35
  store i8* %41, i8** %43, align 8
  %44 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %44, i32 0, i32 45
  %46 = load i32, i32* %45, align 4
  %47 = or i32 %46, 32768
  store i32 %47, i32* %45, align 4
  %48 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %49 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = or i32 %50, 65536
  store i32 %51, i32* %49, align 8
  br label %52

52:                                               ; preds = %31, %29, %21
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_gAMA_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %3
  br label %20

13:                                               ; preds = %9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %15, i32 0, i32 16
  %17 = load i32, i32* %6, align 4
  call void @png_colorspace_set_gamma(%struct.png_struct_def* noundef %14, %struct.png_colorspace* noundef %16, i32 noundef %17)
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %18, %struct.png_info_def* noundef %19)
  br label %20

20:                                               ; preds = %13, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_gAMA(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, double noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca double, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store double %2, double* %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = load double, double* %6, align 8
  %11 = call i32 @png_fixed(%struct.png_struct_def* noundef %9, double noundef %10, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.396, i64 0, i64 0))
  call void @png_set_gAMA_fixed(%struct.png_struct_def* noundef %7, %struct.png_info_def* noundef %8, i32 noundef %11)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_hIST(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i16* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i16* %2, i16** %6, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %12 = icmp eq %struct.png_info_def* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %3
  br label %74

14:                                               ; preds = %10
  %15 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %15, i32 0, i32 5
  %17 = load i16, i16* %16, align 8
  %18 = zext i16 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %22 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %21, i32 0, i32 5
  %23 = load i16, i16* %22, align 8
  %24 = zext i16 %23 to i32
  %25 = icmp sgt i32 %24, 256
  br i1 %25, label %26, label %28

26:                                               ; preds = %20, %14
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14.399, i64 0, i64 0))
  br label %74

28:                                               ; preds = %20
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %29, %struct.png_info_def* noundef %30, i32 noundef 8, i32 noundef 0)
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %31, i64 noundef 512)
  %33 = bitcast i8* %32 to i16*
  %34 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 37
  store i16* %33, i16** %35, align 8
  %36 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %36, i32 0, i32 37
  %38 = load i16*, i16** %37, align 8
  %39 = icmp eq i16* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %41, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15.400, i64 0, i64 0))
  br label %74

42:                                               ; preds = %28
  store i32 0, i32* %7, align 4
  br label %43

43:                                               ; preds = %62, %42
  %44 = load i32, i32* %7, align 4
  %45 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %46 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %45, i32 0, i32 5
  %47 = load i16, i16* %46, align 8
  %48 = zext i16 %47 to i32
  %49 = icmp slt i32 %44, %48
  br i1 %49, label %50, label %65

50:                                               ; preds = %43
  %51 = load i16*, i16** %6, align 8
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i16, i16* %51, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %56, i32 0, i32 37
  %58 = load i16*, i16** %57, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %58, i64 %60
  store i16 %55, i16* %61, align 2
  br label %62

62:                                               ; preds = %50
  %63 = load i32, i32* %7, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %7, align 4
  br label %43, !llvm.loop !279

65:                                               ; preds = %43
  %66 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %67 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %66, i32 0, i32 45
  %68 = load i32, i32* %67, align 4
  %69 = or i32 %68, 8
  store i32 %69, i32* %67, align 4
  %70 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %70, i32 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = or i32 %72, 64
  store i32 %73, i32* %71, align 8
  br label %74

74:                                               ; preds = %65, %40, %26, %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_IHDR(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8) #0 {
  %10 = alloca %struct.png_struct_def*, align 8
  %11 = alloca %struct.png_info_def*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %10, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %11, align 8
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store i32 %6, i32* %16, align 4
  store i32 %7, i32* %17, align 4
  store i32 %8, i32* %18, align 4
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %20 = icmp eq %struct.png_struct_def* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %9
  %22 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %23 = icmp eq %struct.png_info_def* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21, %9
  br label %154

25:                                               ; preds = %21
  %26 = load i32, i32* %12, align 4
  %27 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 0
  store i32 %26, i32* %28, align 8
  %29 = load i32, i32* %13, align 4
  %30 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %30, i32 0, i32 1
  store i32 %29, i32* %31, align 4
  %32 = load i32, i32* %14, align 4
  %33 = trunc i32 %32 to i8
  %34 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 7
  store i8 %33, i8* %35, align 4
  %36 = load i32, i32* %15, align 4
  %37 = trunc i32 %36 to i8
  %38 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 8
  store i8 %37, i8* %39, align 1
  %40 = load i32, i32* %17, align 4
  %41 = trunc i32 %40 to i8
  %42 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %43 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %42, i32 0, i32 9
  store i8 %41, i8* %43, align 2
  %44 = load i32, i32* %18, align 4
  %45 = trunc i32 %44 to i8
  %46 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 10
  store i8 %45, i8* %47, align 1
  %48 = load i32, i32* %16, align 4
  %49 = trunc i32 %48 to i8
  %50 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %51 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %50, i32 0, i32 11
  store i8 %49, i8* %51, align 8
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %53 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %60 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %59, i32 0, i32 7
  %61 = load i8, i8* %60, align 4
  %62 = zext i8 %61 to i32
  %63 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %64 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %63, i32 0, i32 8
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %68 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %67, i32 0, i32 11
  %69 = load i8, i8* %68, align 8
  %70 = zext i8 %69 to i32
  %71 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %72 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %71, i32 0, i32 9
  %73 = load i8, i8* %72, align 2
  %74 = zext i8 %73 to i32
  %75 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %76 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %75, i32 0, i32 10
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  call void @png_check_IHDR(%struct.png_struct_def* noundef %52, i32 noundef %55, i32 noundef %58, i32 noundef %62, i32 noundef %66, i32 noundef %70, i32 noundef %74, i32 noundef %78)
  %79 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %80 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %79, i32 0, i32 8
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = icmp eq i32 %82, 3
  br i1 %83, label %84, label %87

84:                                               ; preds = %25
  %85 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %86 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %85, i32 0, i32 12
  store i8 1, i8* %86, align 1
  br label %101

87:                                               ; preds = %25
  %88 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %89 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %88, i32 0, i32 8
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = and i32 %91, 2
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %87
  %95 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %96 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %95, i32 0, i32 12
  store i8 3, i8* %96, align 1
  br label %100

97:                                               ; preds = %87
  %98 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %99 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %98, i32 0, i32 12
  store i8 1, i8* %99, align 1
  br label %100

100:                                              ; preds = %97, %94
  br label %101

101:                                              ; preds = %100, %84
  %102 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %103 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %102, i32 0, i32 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = and i32 %105, 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %101
  %109 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %110 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %109, i32 0, i32 12
  %111 = load i8, i8* %110, align 1
  %112 = add i8 %111, 1
  store i8 %112, i8* %110, align 1
  br label %113

113:                                              ; preds = %108, %101
  %114 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %115 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %114, i32 0, i32 12
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %119 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %118, i32 0, i32 7
  %120 = load i8, i8* %119, align 4
  %121 = zext i8 %120 to i32
  %122 = mul nsw i32 %117, %121
  %123 = trunc i32 %122 to i8
  %124 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %125 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %124, i32 0, i32 13
  store i8 %123, i8* %125, align 2
  %126 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %127 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %126, i32 0, i32 13
  %128 = load i8, i8* %127, align 2
  %129 = zext i8 %128 to i32
  %130 = icmp sge i32 %129, 8
  br i1 %130, label %131, label %140

131:                                              ; preds = %113
  %132 = load i32, i32* %12, align 4
  %133 = zext i32 %132 to i64
  %134 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %135 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %134, i32 0, i32 13
  %136 = load i8, i8* %135, align 2
  %137 = zext i8 %136 to i64
  %138 = lshr i64 %137, 3
  %139 = mul i64 %133, %138
  br label %150

140:                                              ; preds = %113
  %141 = load i32, i32* %12, align 4
  %142 = zext i32 %141 to i64
  %143 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %144 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %143, i32 0, i32 13
  %145 = load i8, i8* %144, align 2
  %146 = zext i8 %145 to i64
  %147 = mul i64 %142, %146
  %148 = add i64 %147, 7
  %149 = lshr i64 %148, 3
  br label %150

150:                                              ; preds = %140, %131
  %151 = phi i64 [ %139, %131 ], [ %149, %140 ]
  %152 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %153 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %152, i32 0, i32 3
  store i64 %151, i64* %153, align 8
  br label %154

154:                                              ; preds = %150, %24
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_oFFs(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = icmp eq %struct.png_struct_def* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %15 = icmp eq %struct.png_info_def* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13, %5
  br label %32

17:                                               ; preds = %13
  %18 = load i32, i32* %8, align 4
  %19 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 28
  store i32 %18, i32* %20, align 4
  %21 = load i32, i32* %9, align 4
  %22 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %22, i32 0, i32 29
  store i32 %21, i32* %23, align 8
  %24 = load i32, i32* %10, align 4
  %25 = trunc i32 %24 to i8
  %26 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %27 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %26, i32 0, i32 30
  store i8 %25, i8* %27, align 4
  %28 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, 256
  store i32 %31, i32* %29, align 8
  br label %32

32:                                               ; preds = %17, %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_pCAL(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i8* noundef %7, i8** noundef %8) #0 {
  %10 = alloca %struct.png_struct_def*, align 8
  %11 = alloca %struct.png_info_def*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8**, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %10, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %11, align 8
  store i8* %2, i8** %12, align 8
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store i32 %6, i32* %16, align 4
  store i8* %7, i8** %17, align 8
  store i8** %8, i8*** %18, align 8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %22 = icmp eq %struct.png_struct_def* %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %9
  %24 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %25 = icmp eq %struct.png_info_def* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = load i8*, i8** %12, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %26
  %30 = load i8*, i8** %17, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = load i32, i32* %16, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = load i8**, i8*** %18, align 8
  %37 = icmp eq i8** %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %29, %26, %23, %9
  br label %223

39:                                               ; preds = %35, %32
  %40 = load i8*, i8** %12, align 8
  %41 = call i64 @strlen(i8* noundef %40) #14
  %42 = add i64 %41, 1
  store i64 %42, i64* %19, align 8
  %43 = load i32, i32* %15, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = load i32, i32* %15, align 4
  %47 = icmp sgt i32 %46, 3
  br i1 %47, label %48, label %50

48:                                               ; preds = %45, %39
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %49, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16.407, i64 0, i64 0), i32 noundef 1)
  br label %223

50:                                               ; preds = %45
  %51 = load i32, i32* %16, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = load i32, i32* %16, align 4
  %55 = icmp sgt i32 %54, 255
  br i1 %55, label %56, label %58

56:                                               ; preds = %53, %50
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %57, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17.408, i64 0, i64 0), i32 noundef 1)
  br label %223

58:                                               ; preds = %53
  store i32 0, i32* %20, align 4
  br label %59

59:                                               ; preds = %87, %58
  %60 = load i32, i32* %20, align 4
  %61 = load i32, i32* %16, align 4
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %90

63:                                               ; preds = %59
  %64 = load i8**, i8*** %18, align 8
  %65 = load i32, i32* %20, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %84, label %70

70:                                               ; preds = %63
  %71 = load i8**, i8*** %18, align 8
  %72 = load i32, i32* %20, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8*, i8** %71, i64 %73
  %75 = load i8*, i8** %74, align 8
  %76 = load i8**, i8*** %18, align 8
  %77 = load i32, i32* %20, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8*, i8** %76, i64 %78
  %80 = load i8*, i8** %79, align 8
  %81 = call i64 @strlen(i8* noundef %80) #14
  %82 = call i32 @png_check_fp_string(i8* noundef %75, i64 noundef %81)
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %70, %63
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %85, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18.409, i64 0, i64 0), i32 noundef 1)
  br label %223

86:                                               ; preds = %70
  br label %87

87:                                               ; preds = %86
  %88 = load i32, i32* %20, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %20, align 4
  br label %59, !llvm.loop !280

90:                                               ; preds = %59
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %92 = load i64, i64* %19, align 8
  %93 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %91, i64 noundef %92)
  %94 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %95 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %94, i32 0, i32 38
  store i8* %93, i8** %95, align 8
  %96 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %97 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %96, i32 0, i32 38
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %90
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %101, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.410, i64 0, i64 0), i32 noundef 1)
  br label %223

102:                                              ; preds = %90
  %103 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 38
  %105 = load i8*, i8** %104, align 8
  %106 = load i8*, i8** %12, align 8
  %107 = load i64, i64* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %105, i8* align 1 %106, i64 %107, i1 false)
  %108 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %109 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %108, i32 0, i32 45
  %110 = load i32, i32* %109, align 4
  %111 = or i32 %110, 128
  store i32 %111, i32* %109, align 4
  %112 = load i32, i32* %13, align 4
  %113 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %114 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %113, i32 0, i32 39
  store i32 %112, i32* %114, align 8
  %115 = load i32, i32* %14, align 4
  %116 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %117 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %116, i32 0, i32 40
  store i32 %115, i32* %117, align 4
  %118 = load i32, i32* %15, align 4
  %119 = trunc i32 %118 to i8
  %120 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %121 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %120, i32 0, i32 43
  store i8 %119, i8* %121, align 8
  %122 = load i32, i32* %16, align 4
  %123 = trunc i32 %122 to i8
  %124 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %125 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %124, i32 0, i32 44
  store i8 %123, i8* %125, align 1
  %126 = load i8*, i8** %17, align 8
  %127 = call i64 @strlen(i8* noundef %126) #14
  %128 = add i64 %127, 1
  store i64 %128, i64* %19, align 8
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %130 = load i64, i64* %19, align 8
  %131 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %129, i64 noundef %130)
  %132 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %133 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %132, i32 0, i32 41
  store i8* %131, i8** %133, align 8
  %134 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %135 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %134, i32 0, i32 41
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %102
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_warning(%struct.png_struct_def* noundef %139, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20.411, i64 0, i64 0))
  br label %223

140:                                              ; preds = %102
  %141 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %142 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %141, i32 0, i32 41
  %143 = load i8*, i8** %142, align 8
  %144 = load i8*, i8** %17, align 8
  %145 = load i64, i64* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %143, i8* align 1 %144, i64 %145, i1 false)
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %147 = load i32, i32* %16, align 4
  %148 = add i32 %147, 1
  %149 = zext i32 %148 to i64
  %150 = mul i64 %149, 8
  %151 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %146, i64 noundef %150)
  %152 = bitcast i8* %151 to i8**
  %153 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %154 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %153, i32 0, i32 42
  store i8** %152, i8*** %154, align 8
  %155 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %156 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %155, i32 0, i32 42
  %157 = load i8**, i8*** %156, align 8
  %158 = icmp eq i8** %157, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %140
  %160 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_warning(%struct.png_struct_def* noundef %160, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.412, i64 0, i64 0))
  br label %223

161:                                              ; preds = %140
  %162 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %163 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %162, i32 0, i32 42
  %164 = load i8**, i8*** %163, align 8
  %165 = bitcast i8** %164 to i8*
  %166 = load i32, i32* %16, align 4
  %167 = add i32 %166, 1
  %168 = zext i32 %167 to i64
  %169 = mul i64 %168, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 %169, i1 false)
  store i32 0, i32* %20, align 4
  br label %170

170:                                              ; preds = %215, %161
  %171 = load i32, i32* %20, align 4
  %172 = load i32, i32* %16, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %174, label %218

174:                                              ; preds = %170
  %175 = load i8**, i8*** %18, align 8
  %176 = load i32, i32* %20, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8*, i8** %175, i64 %177
  %179 = load i8*, i8** %178, align 8
  %180 = call i64 @strlen(i8* noundef %179) #14
  %181 = add i64 %180, 1
  store i64 %181, i64* %19, align 8
  %182 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  %183 = load i64, i64* %19, align 8
  %184 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %182, i64 noundef %183)
  %185 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %186 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %185, i32 0, i32 42
  %187 = load i8**, i8*** %186, align 8
  %188 = load i32, i32* %20, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8*, i8** %187, i64 %189
  store i8* %184, i8** %190, align 8
  %191 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %192 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %191, i32 0, i32 42
  %193 = load i8**, i8*** %192, align 8
  %194 = load i32, i32* %20, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8*, i8** %193, i64 %195
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %174
  %200 = load %struct.png_struct_def*, %struct.png_struct_def** %10, align 8
  call void @png_warning(%struct.png_struct_def* noundef %200, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22.413, i64 0, i64 0))
  br label %223

201:                                              ; preds = %174
  %202 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %203 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %202, i32 0, i32 42
  %204 = load i8**, i8*** %203, align 8
  %205 = load i32, i32* %20, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8*, i8** %204, i64 %206
  %208 = load i8*, i8** %207, align 8
  %209 = load i8**, i8*** %18, align 8
  %210 = load i32, i32* %20, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8*, i8** %209, i64 %211
  %213 = load i8*, i8** %212, align 8
  %214 = load i64, i64* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* align 1 %213, i64 %214, i1 false)
  br label %215

215:                                              ; preds = %201
  %216 = load i32, i32* %20, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %20, align 4
  br label %170, !llvm.loop !281

218:                                              ; preds = %170
  %219 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %220 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %219, i32 0, i32 2
  %221 = load i32, i32* %220, align 8
  %222 = or i32 %221, 1024
  store i32 %222, i32* %220, align 8
  br label %223

223:                                              ; preds = %218, %199, %159, %138, %100, %84, %56, %48, %38
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sCAL_s(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i8* noundef %3, i8* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i8* %4, i8** %10, align 8
  store i64 0, i64* %11, align 8
  store i64 0, i64* %12, align 8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %14 = icmp eq %struct.png_struct_def* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %17 = icmp eq %struct.png_info_def* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15, %5
  br label %124

19:                                               ; preds = %15
  %20 = load i32, i32* %8, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = load i32, i32* %8, align 4
  %24 = icmp ne i32 %23, 2
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %26, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23.416, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %22, %19
  %28 = load i8*, i8** %9, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %45, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %9, align 8
  %32 = call i64 @strlen(i8* noundef %31) #14
  store i64 %32, i64* %11, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %30
  %35 = load i8*, i8** %9, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp eq i32 %38, 45
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = load i8*, i8** %9, align 8
  %42 = load i64, i64* %11, align 8
  %43 = call i32 @png_check_fp_string(i8* noundef %41, i64 noundef %42)
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %34, %30, %27
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %46, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24.417, i64 0, i64 0)) #13
  unreachable

47:                                               ; preds = %40
  %48 = load i8*, i8** %10, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %65, label %50

50:                                               ; preds = %47
  %51 = load i8*, i8** %10, align 8
  %52 = call i64 @strlen(i8* noundef %51) #14
  store i64 %52, i64* %12, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = load i8*, i8** %10, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 %58, 45
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = load i8*, i8** %10, align 8
  %62 = load i64, i64* %12, align 8
  %63 = call i32 @png_check_fp_string(i8* noundef %61, i64 noundef %62)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %60, %54, %50, %47
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %66, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25.418, i64 0, i64 0)) #13
  unreachable

67:                                               ; preds = %60
  %68 = load i32, i32* %8, align 4
  %69 = trunc i32 %68 to i8
  %70 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %70, i32 0, i32 50
  store i8 %69, i8* %71, align 4
  %72 = load i64, i64* %11, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %11, align 8
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %75 = load i64, i64* %11, align 8
  %76 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %74, i64 noundef %75)
  %77 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %78 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %77, i32 0, i32 51
  store i8* %76, i8** %78, align 8
  %79 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %80 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %79, i32 0, i32 51
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %67
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %84, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26.419, i64 0, i64 0))
  br label %124

85:                                               ; preds = %67
  %86 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %87 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %86, i32 0, i32 51
  %88 = load i8*, i8** %87, align 8
  %89 = load i8*, i8** %9, align 8
  %90 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %89, i64 %90, i1 false)
  %91 = load i64, i64* %12, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %12, align 8
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %94 = load i64, i64* %12, align 8
  %95 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %93, i64 noundef %94)
  %96 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %97 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %96, i32 0, i32 52
  store i8* %95, i8** %97, align 8
  %98 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %99 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %98, i32 0, i32 52
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %85
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %104 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %105 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %104, i32 0, i32 51
  %106 = load i8*, i8** %105, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %103, i8* noundef %106)
  %107 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %108 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %107, i32 0, i32 51
  store i8* null, i8** %108, align 8
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %109, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26.419, i64 0, i64 0))
  br label %124

110:                                              ; preds = %85
  %111 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %112 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %111, i32 0, i32 52
  %113 = load i8*, i8** %112, align 8
  %114 = load i8*, i8** %10, align 8
  %115 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %113, i8* align 1 %114, i64 %115, i1 false)
  %116 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %117 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %116, i32 0, i32 45
  %118 = load i32, i32* %117, align 4
  %119 = or i32 %118, 256
  store i32 %119, i32* %117, align 4
  %120 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %121 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %120, i32 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = or i32 %122, 16384
  store i32 %123, i32* %121, align 8
  br label %124

124:                                              ; preds = %110, %102, %83, %18
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sCAL(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, double noundef %3, double noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca [18 x i8], align 16
  %12 = alloca [18 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32 %2, i32* %8, align 4
  store double %3, double* %9, align 8
  store double %4, double* %10, align 8
  %13 = load double, double* %9, align 8
  %14 = fcmp ole double %13, 0.000000e+00
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27.420, i64 0, i64 0))
  br label %35

17:                                               ; preds = %5
  %18 = load double, double* %10, align 8
  %19 = fcmp ole double %18, 0.000000e+00
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %21, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28.421, i64 0, i64 0))
  br label %34

22:                                               ; preds = %17
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %24 = getelementptr inbounds [18 x i8], [18 x i8]* %11, i64 0, i64 0
  %25 = load double, double* %9, align 8
  call void @png_ascii_from_fp(%struct.png_struct_def* noundef %23, i8* noundef %24, i64 noundef 18, double noundef %25, i32 noundef 5)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %27 = getelementptr inbounds [18 x i8], [18 x i8]* %12, i64 0, i64 0
  %28 = load double, double* %10, align 8
  call void @png_ascii_from_fp(%struct.png_struct_def* noundef %26, i8* noundef %27, i64 noundef 18, double noundef %28, i32 noundef 5)
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %30 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %31 = load i32, i32* %8, align 4
  %32 = getelementptr inbounds [18 x i8], [18 x i8]* %11, i64 0, i64 0
  %33 = getelementptr inbounds [18 x i8], [18 x i8]* %12, i64 0, i64 0
  call void @png_set_sCAL_s(%struct.png_struct_def* noundef %29, %struct.png_info_def* noundef %30, i32 noundef %31, i8* noundef %32, i8* noundef %33)
  br label %34

34:                                               ; preds = %22, %20
  br label %35

35:                                               ; preds = %34, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sCAL_fixed(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [18 x i8], align 16
  %12 = alloca [18 x i8], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = icmp sle i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27.420, i64 0, i64 0))
  br label %35

17:                                               ; preds = %5
  %18 = load i32, i32* %10, align 4
  %19 = icmp sle i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %21, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28.421, i64 0, i64 0))
  br label %34

22:                                               ; preds = %17
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %24 = getelementptr inbounds [18 x i8], [18 x i8]* %11, i64 0, i64 0
  %25 = load i32, i32* %9, align 4
  call void @png_ascii_from_fixed(%struct.png_struct_def* noundef %23, i8* noundef %24, i64 noundef 18, i32 noundef %25)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %27 = getelementptr inbounds [18 x i8], [18 x i8]* %12, i64 0, i64 0
  %28 = load i32, i32* %10, align 4
  call void @png_ascii_from_fixed(%struct.png_struct_def* noundef %26, i8* noundef %27, i64 noundef 18, i32 noundef %28)
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %30 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %31 = load i32, i32* %8, align 4
  %32 = getelementptr inbounds [18 x i8], [18 x i8]* %11, i64 0, i64 0
  %33 = getelementptr inbounds [18 x i8], [18 x i8]* %12, i64 0, i64 0
  call void @png_set_sCAL_s(%struct.png_struct_def* noundef %29, %struct.png_info_def* noundef %30, i32 noundef %31, i8* noundef %32, i8* noundef %33)
  br label %34

34:                                               ; preds = %22, %20
  br label %35

35:                                               ; preds = %34, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_pHYs(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = icmp eq %struct.png_struct_def* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %15 = icmp eq %struct.png_info_def* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13, %5
  br label %32

17:                                               ; preds = %13
  %18 = load i32, i32* %8, align 4
  %19 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 31
  store i32 %18, i32* %20, align 8
  %21 = load i32, i32* %9, align 4
  %22 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %22, i32 0, i32 32
  store i32 %21, i32* %23, align 4
  %24 = load i32, i32* %10, align 4
  %25 = trunc i32 %24 to i8
  %26 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %27 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %26, i32 0, i32 33
  store i8 %25, i8* %27, align 8
  %28 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, 128
  store i32 %31, i32* %29, align 8
  br label %32

32:                                               ; preds = %17, %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_PLTE(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_color_struct* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_color_struct*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_color_struct* %2, %struct.png_color_struct** %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %14 = icmp eq %struct.png_info_def* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12, %4
  br label %104

16:                                               ; preds = %12
  %17 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %17, i32 0, i32 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %24 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %23, i32 0, i32 7
  %25 = load i8, i8* %24, align 4
  %26 = zext i8 %25 to i32
  %27 = shl i32 1, %26
  br label %29

28:                                               ; preds = %16
  br label %29

29:                                               ; preds = %28, %22
  %30 = phi i32 [ %27, %22 ], [ 256, %28 ]
  store i32 %30, i32* %9, align 4
  %31 = load i32, i32* %8, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = load i32, i32* %8, align 4
  %35 = load i32, i32* %9, align 4
  %36 = icmp sgt i32 %34, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %29
  %38 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 8
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29.426, i64 0, i64 0)) #13
  unreachable

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_warning(%struct.png_struct_def* noundef %46, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29.426, i64 0, i64 0))
  br label %104

47:                                               ; preds = %33
  %48 = load i32, i32* %8, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = load %struct.png_color_struct*, %struct.png_color_struct** %7, align 8
  %52 = icmp eq %struct.png_color_struct* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %50, %47
  %54 = load i32, i32* %8, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %53
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 123
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %56, %50
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %63, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30.427, i64 0, i64 0)) #13
  unreachable

64:                                               ; preds = %56, %53
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %66 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %65, %struct.png_info_def* noundef %66, i32 noundef 4096, i32 noundef 0)
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %68 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_calloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %67, i64 noundef 768)
  %69 = bitcast i8* %68 to %struct.png_color_struct*
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 52
  store %struct.png_color_struct* %69, %struct.png_color_struct** %71, align 8
  %72 = load i32, i32* %8, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %64
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 52
  %77 = load %struct.png_color_struct*, %struct.png_color_struct** %76, align 8
  %78 = bitcast %struct.png_color_struct* %77 to i8*
  %79 = load %struct.png_color_struct*, %struct.png_color_struct** %7, align 8
  %80 = bitcast %struct.png_color_struct* %79 to i8*
  %81 = load i32, i32* %8, align 4
  %82 = zext i32 %81 to i64
  %83 = mul i64 %82, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %80, i64 %83, i1 false)
  br label %84

84:                                               ; preds = %74, %64
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 52
  %87 = load %struct.png_color_struct*, %struct.png_color_struct** %86, align 8
  %88 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %89 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %88, i32 0, i32 4
  store %struct.png_color_struct* %87, %struct.png_color_struct** %89, align 8
  %90 = load i32, i32* %8, align 4
  %91 = trunc i32 %90 to i16
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 53
  store i16 %91, i16* %93, align 8
  %94 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %95 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %94, i32 0, i32 5
  store i16 %91, i16* %95, align 8
  %96 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %97 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %96, i32 0, i32 45
  %98 = load i32, i32* %97, align 4
  %99 = or i32 %98, 4096
  store i32 %99, i32* %97, align 4
  %100 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %101 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %100, i32 0, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = or i32 %102, 8
  store i32 %103, i32* %101, align 8
  br label %104

104:                                              ; preds = %84, %45, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sBIT(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_color_8_struct* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca %struct.png_color_8_struct*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store %struct.png_color_8_struct* %2, %struct.png_color_8_struct** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %14 = icmp eq %struct.png_color_8_struct* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12, %9, %3
  br label %26

16:                                               ; preds = %12
  %17 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %17, i32 0, i32 24
  %19 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %20 = bitcast %struct.png_color_8_struct* %18 to i8*
  %21 = bitcast %struct.png_color_8_struct* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 1 %21, i64 5, i1 false)
  %22 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %22, i32 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = or i32 %24, 2
  store i32 %25, i32* %23, align 8
  br label %26

26:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sRGB(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %3
  br label %21

13:                                               ; preds = %9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %15, i32 0, i32 16
  %17 = load i32, i32* %6, align 4
  %18 = call i32 @png_colorspace_set_sRGB(%struct.png_struct_def* noundef %14, %struct.png_colorspace* noundef %16, i32 noundef %17)
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %19, %struct.png_info_def* noundef %20)
  br label %21

21:                                               ; preds = %13, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sRGB_gAMA_and_cHRM(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %3
  br label %31

13:                                               ; preds = %9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %15, i32 0, i32 16
  %17 = load i32, i32* %6, align 4
  %18 = call i32 @png_colorspace_set_sRGB(%struct.png_struct_def* noundef %14, %struct.png_colorspace* noundef %16, i32 noundef %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %13
  %21 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %22 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %21, i32 0, i32 16
  %23 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %22, i32 0, i32 4
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = or i32 %25, 24
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %23, align 2
  br label %28

28:                                               ; preds = %20, %13
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %30 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %29, %struct.png_info_def* noundef %30)
  br label %31

31:                                               ; preds = %28, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_iCCP(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8* noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.png_struct_def*, align 8
  %8 = alloca %struct.png_info_def*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %7, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i8* %4, i8** %11, align 8
  store i32 %5, i32* %12, align 4
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %18 = icmp eq %struct.png_struct_def* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %6
  %20 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %21 = icmp eq %struct.png_info_def* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = load i8*, i8** %9, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = load i8*, i8** %11, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %25, %22, %19, %6
  br label %107

29:                                               ; preds = %25
  %30 = load i32, i32* %10, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %33, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31.430, i64 0, i64 0))
  br label %34

34:                                               ; preds = %32, %29
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %36 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %36, i32 0, i32 16
  %38 = load i8*, i8** %9, align 8
  %39 = load i32, i32* %12, align 4
  %40 = load i8*, i8** %11, align 8
  %41 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 8
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = call i32 @png_colorspace_set_ICC(%struct.png_struct_def* noundef %35, %struct.png_colorspace* noundef %37, i8* noundef %38, i32 noundef %39, i8* noundef %40, i32 noundef %44)
  store i32 %45, i32* %16, align 4
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %47 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  call void @png_colorspace_sync_info(%struct.png_struct_def* noundef %46, %struct.png_info_def* noundef %47)
  %48 = load i32, i32* %16, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %34
  br label %107

51:                                               ; preds = %34
  %52 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %53 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %52, i32 0, i32 16
  %54 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %53, i32 0, i32 4
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = or i32 %56, 24
  %58 = trunc i32 %57 to i16
  store i16 %58, i16* %54, align 2
  %59 = load i8*, i8** %9, align 8
  %60 = call i64 @strlen(i8* noundef %59) #14
  %61 = add i64 %60, 1
  store i64 %61, i64* %15, align 8
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %63 = load i64, i64* %15, align 8
  %64 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %62, i64 noundef %63)
  store i8* %64, i8** %13, align 8
  %65 = load i8*, i8** %13, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %51
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %68, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.431, i64 0, i64 0))
  br label %107

69:                                               ; preds = %51
  %70 = load i8*, i8** %13, align 8
  %71 = load i8*, i8** %9, align 8
  %72 = load i64, i64* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %71, i64 %72, i1 false)
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %74 = load i32, i32* %12, align 4
  %75 = zext i32 %74 to i64
  %76 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %73, i64 noundef %75)
  store i8* %76, i8** %14, align 8
  %77 = load i8*, i8** %14, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %69
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %81 = load i8*, i8** %13, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %80, i8* noundef %81)
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %82, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33.432, i64 0, i64 0))
  br label %107

83:                                               ; preds = %69
  %84 = load i8*, i8** %14, align 8
  %85 = load i8*, i8** %11, align 8
  %86 = load i32, i32* %12, align 4
  %87 = zext i32 %86 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %87, i1 false)
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %89 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %88, %struct.png_info_def* noundef %89, i32 noundef 16, i32 noundef 0)
  %90 = load i32, i32* %12, align 4
  %91 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %92 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %91, i32 0, i32 19
  store i32 %90, i32* %92, align 8
  %93 = load i8*, i8** %13, align 8
  %94 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %95 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %94, i32 0, i32 17
  store i8* %93, i8** %95, align 8
  %96 = load i8*, i8** %14, align 8
  %97 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %98 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %97, i32 0, i32 18
  store i8* %96, i8** %98, align 8
  %99 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %100 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %99, i32 0, i32 45
  %101 = load i32, i32* %100, align 4
  %102 = or i32 %101, 16
  store i32 %102, i32* %100, align 4
  %103 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = or i32 %105, 4096
  store i32 %106, i32* %104, align 8
  br label %107

107:                                              ; preds = %83, %79, %67, %50, %28
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_text(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_text_struct* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_text_struct*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_text_struct* %2, %struct.png_text_struct** %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %11 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %12 = load %struct.png_text_struct*, %struct.png_text_struct** %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = call i32 @png_set_text_2(%struct.png_struct_def* noundef %10, %struct.png_info_def* noundef %11, %struct.png_text_struct* noundef %12, i32 noundef %13)
  store i32 %14, i32* %9, align 4
  %15 = load i32, i32* %9, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %18, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34.435, i64 0, i64 0)) #13
  unreachable

19:                                               ; preds = %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_set_text_2(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_text_struct* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca %struct.png_text_struct*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.png_text_struct*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.png_text_struct*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store %struct.png_text_struct* %2, %struct.png_text_struct** %8, align 8
  store i32 %3, i32* %9, align 4
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %20 = icmp eq %struct.png_struct_def* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  %22 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %23 = icmp eq %struct.png_info_def* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %9, align 4
  %26 = icmp sle i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %29 = icmp eq %struct.png_text_struct* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %24, %21, %4
  store i32 0, i32* %5, align 4
  br label %390

31:                                               ; preds = %27
  %32 = load i32, i32* %9, align 4
  %33 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 21
  %35 = load i32, i32* %34, align 8
  %36 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %36, i32 0, i32 20
  %38 = load i32, i32* %37, align 4
  %39 = sub nsw i32 %35, %38
  %40 = icmp sgt i32 %32, %39
  br i1 %40, label %41, label %94

41:                                               ; preds = %31
  %42 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %43 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %42, i32 0, i32 20
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %11, align 4
  store %struct.png_text_struct* null, %struct.png_text_struct** %13, align 8
  %45 = load i32, i32* %11, align 4
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* %9, align 4
  %47 = load i32, i32* %12, align 4
  %48 = sub nsw i32 2147483647, %47
  %49 = icmp sle i32 %46, %48
  br i1 %49, label %50, label %73

50:                                               ; preds = %41
  %51 = load i32, i32* %9, align 4
  %52 = load i32, i32* %12, align 4
  %53 = add nsw i32 %52, %51
  store i32 %53, i32* %12, align 4
  %54 = load i32, i32* %12, align 4
  %55 = icmp slt i32 %54, 2147483639
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  %57 = load i32, i32* %12, align 4
  %58 = add nsw i32 %57, 8
  %59 = and i32 %58, -8
  store i32 %59, i32* %12, align 4
  br label %61

60:                                               ; preds = %50
  store i32 2147483647, i32* %12, align 4
  br label %61

61:                                               ; preds = %60, %56
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %63 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %64 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %63, i32 0, i32 22
  %65 = load %struct.png_text_struct*, %struct.png_text_struct** %64, align 8
  %66 = bitcast %struct.png_text_struct* %65 to i8*
  %67 = load i32, i32* %11, align 4
  %68 = load i32, i32* %12, align 4
  %69 = load i32, i32* %11, align 4
  %70 = sub nsw i32 %68, %69
  %71 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i8*, i32, i32, i64)* @png_realloc_array to i8* (%struct.png_struct_def*, i8*, i32, i32, i64)*)(%struct.png_struct_def* noundef %62, i8* noundef %66, i32 noundef %67, i32 noundef %70, i64 noundef 56)
  %72 = bitcast i8* %71 to %struct.png_text_struct*
  store %struct.png_text_struct* %72, %struct.png_text_struct** %13, align 8
  br label %73

73:                                               ; preds = %61, %41
  %74 = load %struct.png_text_struct*, %struct.png_text_struct** %13, align 8
  %75 = icmp eq %struct.png_text_struct* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %77, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35.436, i64 0, i64 0), i32 noundef 1)
  store i32 1, i32* %5, align 4
  br label %390

78:                                               ; preds = %73
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %80 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %81 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %80, i32 0, i32 22
  %82 = load %struct.png_text_struct*, %struct.png_text_struct** %81, align 8
  %83 = bitcast %struct.png_text_struct* %82 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %79, i8* noundef %83)
  %84 = load %struct.png_text_struct*, %struct.png_text_struct** %13, align 8
  %85 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %86 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %85, i32 0, i32 22
  store %struct.png_text_struct* %84, %struct.png_text_struct** %86, align 8
  %87 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %88 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %87, i32 0, i32 45
  %89 = load i32, i32* %88, align 4
  %90 = or i32 %89, 16384
  store i32 %90, i32* %88, align 4
  %91 = load i32, i32* %12, align 4
  %92 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %93 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %92, i32 0, i32 21
  store i32 %91, i32* %93, align 8
  br label %94

94:                                               ; preds = %78, %31
  store i32 0, i32* %10, align 4
  br label %95

95:                                               ; preds = %386, %94
  %96 = load i32, i32* %10, align 4
  %97 = load i32, i32* %9, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %99, label %389

99:                                               ; preds = %95
  %100 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %101 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %100, i32 0, i32 22
  %102 = load %struct.png_text_struct*, %struct.png_text_struct** %101, align 8
  %103 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 20
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %102, i64 %106
  store %struct.png_text_struct* %107, %struct.png_text_struct** %18, align 8
  %108 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %109 = load i32, i32* %10, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %108, i64 %110
  %112 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %111, i32 0, i32 1
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %115, label %116

115:                                              ; preds = %99
  br label %386

116:                                              ; preds = %99
  %117 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %118 = load i32, i32* %10, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %117, i64 %119
  %121 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %120, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp slt i32 %122, -1
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %126 = load i32, i32* %10, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %125, i64 %127
  %129 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %128, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp sge i32 %130, 3
  br i1 %131, label %132, label %134

132:                                              ; preds = %124, %116
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %133, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.36.437, i64 0, i64 0), i32 noundef 1)
  br label %386

134:                                              ; preds = %124
  %135 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %136 = load i32, i32* %10, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %135, i64 %137
  %139 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %138, i32 0, i32 1
  %140 = load i8*, i8** %139, align 8
  %141 = call i64 @strlen(i8* noundef %140) #14
  store i64 %141, i64* %15, align 8
  %142 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %143 = load i32, i32* %10, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %142, i64 %144
  %146 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %145, i32 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp sle i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %134
  store i64 0, i64* %16, align 8
  store i64 0, i64* %17, align 8
  br label %185

150:                                              ; preds = %134
  %151 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %152 = load i32, i32* %10, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %151, i64 %153
  %155 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %154, i32 0, i32 5
  %156 = load i8*, i8** %155, align 8
  %157 = icmp ne i8* %156, null
  br i1 %157, label %158, label %166

158:                                              ; preds = %150
  %159 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %160 = load i32, i32* %10, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %159, i64 %161
  %163 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %162, i32 0, i32 5
  %164 = load i8*, i8** %163, align 8
  %165 = call i64 @strlen(i8* noundef %164) #14
  store i64 %165, i64* %16, align 8
  br label %167

166:                                              ; preds = %150
  store i64 0, i64* %16, align 8
  br label %167

167:                                              ; preds = %166, %158
  %168 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %169 = load i32, i32* %10, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %168, i64 %170
  %172 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %171, i32 0, i32 6
  %173 = load i8*, i8** %172, align 8
  %174 = icmp ne i8* %173, null
  br i1 %174, label %175, label %183

175:                                              ; preds = %167
  %176 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %177 = load i32, i32* %10, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %176, i64 %178
  %180 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %179, i32 0, i32 6
  %181 = load i8*, i8** %180, align 8
  %182 = call i64 @strlen(i8* noundef %181) #14
  store i64 %182, i64* %17, align 8
  br label %184

183:                                              ; preds = %167
  store i64 0, i64* %17, align 8
  br label %184

184:                                              ; preds = %183, %175
  br label %185

185:                                              ; preds = %184, %149
  %186 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %187 = load i32, i32* %10, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %186, i64 %188
  %190 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %189, i32 0, i32 2
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %204, label %193

193:                                              ; preds = %185
  %194 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %195 = load i32, i32* %10, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %194, i64 %196
  %198 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %197, i32 0, i32 2
  %199 = load i8*, i8** %198, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 0
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %219

204:                                              ; preds = %193, %185
  store i64 0, i64* %14, align 8
  %205 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %206 = load i32, i32* %10, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %205, i64 %207
  %209 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %208, i32 0, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = icmp sgt i32 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %204
  %213 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %214 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %213, i32 0, i32 0
  store i32 1, i32* %214, align 8
  br label %218

215:                                              ; preds = %204
  %216 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %217 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %216, i32 0, i32 0
  store i32 -1, i32* %217, align 8
  br label %218

218:                                              ; preds = %215, %212
  br label %235

219:                                              ; preds = %193
  %220 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %221 = load i32, i32* %10, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %220, i64 %222
  %224 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %223, i32 0, i32 2
  %225 = load i8*, i8** %224, align 8
  %226 = call i64 @strlen(i8* noundef %225) #14
  store i64 %226, i64* %14, align 8
  %227 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %228 = load i32, i32* %10, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %227, i64 %229
  %231 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %230, i32 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %234 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %233, i32 0, i32 0
  store i32 %232, i32* %234, align 8
  br label %235

235:                                              ; preds = %219, %218
  %236 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %237 = load i64, i64* %15, align 8
  %238 = load i64, i64* %14, align 8
  %239 = add i64 %237, %238
  %240 = load i64, i64* %16, align 8
  %241 = add i64 %239, %240
  %242 = load i64, i64* %17, align 8
  %243 = add i64 %241, %242
  %244 = add i64 %243, 4
  %245 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %236, i64 noundef %244)
  %246 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %247 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %246, i32 0, i32 1
  store i8* %245, i8** %247, align 8
  %248 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %249 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %248, i32 0, i32 1
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %252, label %254

252:                                              ; preds = %235
  %253 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %253, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37.438, i64 0, i64 0), i32 noundef 1)
  store i32 1, i32* %5, align 4
  br label %390

254:                                              ; preds = %235
  %255 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %256 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %255, i32 0, i32 1
  %257 = load i8*, i8** %256, align 8
  %258 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %259 = load i32, i32* %10, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %258, i64 %260
  %262 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %261, i32 0, i32 1
  %263 = load i8*, i8** %262, align 8
  %264 = load i64, i64* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %257, i8* align 1 %263, i64 %264, i1 false)
  %265 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %266 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %265, i32 0, i32 1
  %267 = load i8*, i8** %266, align 8
  %268 = load i64, i64* %15, align 8
  %269 = getelementptr inbounds i8, i8* %267, i64 %268
  store i8 0, i8* %269, align 1
  %270 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %271 = load i32, i32* %10, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %270, i64 %272
  %274 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %273, i32 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp sgt i32 %275, 0
  br i1 %276, label %277, label %332

277:                                              ; preds = %254
  %278 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %279 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %278, i32 0, i32 1
  %280 = load i8*, i8** %279, align 8
  %281 = load i64, i64* %15, align 8
  %282 = getelementptr inbounds i8, i8* %280, i64 %281
  %283 = getelementptr inbounds i8, i8* %282, i64 1
  %284 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %285 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %284, i32 0, i32 5
  store i8* %283, i8** %285, align 8
  %286 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %287 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %286, i32 0, i32 5
  %288 = load i8*, i8** %287, align 8
  %289 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %290 = load i32, i32* %10, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %289, i64 %291
  %293 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %292, i32 0, i32 5
  %294 = load i8*, i8** %293, align 8
  %295 = load i64, i64* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %288, i8* align 1 %294, i64 %295, i1 false)
  %296 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %297 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %296, i32 0, i32 5
  %298 = load i8*, i8** %297, align 8
  %299 = load i64, i64* %16, align 8
  %300 = getelementptr inbounds i8, i8* %298, i64 %299
  store i8 0, i8* %300, align 1
  %301 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %302 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %301, i32 0, i32 5
  %303 = load i8*, i8** %302, align 8
  %304 = load i64, i64* %16, align 8
  %305 = getelementptr inbounds i8, i8* %303, i64 %304
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  %307 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %308 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %307, i32 0, i32 6
  store i8* %306, i8** %308, align 8
  %309 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %310 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %309, i32 0, i32 6
  %311 = load i8*, i8** %310, align 8
  %312 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %313 = load i32, i32* %10, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %312, i64 %314
  %316 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %315, i32 0, i32 6
  %317 = load i8*, i8** %316, align 8
  %318 = load i64, i64* %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %311, i8* align 1 %317, i64 %318, i1 false)
  %319 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %320 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %319, i32 0, i32 6
  %321 = load i8*, i8** %320, align 8
  %322 = load i64, i64* %17, align 8
  %323 = getelementptr inbounds i8, i8* %321, i64 %322
  store i8 0, i8* %323, align 1
  %324 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %325 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %324, i32 0, i32 6
  %326 = load i8*, i8** %325, align 8
  %327 = load i64, i64* %17, align 8
  %328 = getelementptr inbounds i8, i8* %326, i64 %327
  %329 = getelementptr inbounds i8, i8* %328, i64 1
  %330 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %331 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %330, i32 0, i32 2
  store i8* %329, i8** %331, align 8
  br label %345

332:                                              ; preds = %254
  %333 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %334 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %333, i32 0, i32 5
  store i8* null, i8** %334, align 8
  %335 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %336 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %335, i32 0, i32 6
  store i8* null, i8** %336, align 8
  %337 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %338 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %337, i32 0, i32 1
  %339 = load i8*, i8** %338, align 8
  %340 = load i64, i64* %15, align 8
  %341 = getelementptr inbounds i8, i8* %339, i64 %340
  %342 = getelementptr inbounds i8, i8* %341, i64 1
  %343 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %344 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %343, i32 0, i32 2
  store i8* %342, i8** %344, align 8
  br label %345

345:                                              ; preds = %332, %277
  %346 = load i64, i64* %14, align 8
  %347 = icmp ne i64 %346, 0
  br i1 %347, label %348, label %359

348:                                              ; preds = %345
  %349 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %350 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %349, i32 0, i32 2
  %351 = load i8*, i8** %350, align 8
  %352 = load %struct.png_text_struct*, %struct.png_text_struct** %8, align 8
  %353 = load i32, i32* %10, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %352, i64 %354
  %356 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %355, i32 0, i32 2
  %357 = load i8*, i8** %356, align 8
  %358 = load i64, i64* %14, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %351, i8* align 1 %357, i64 %358, i1 false)
  br label %359

359:                                              ; preds = %348, %345
  %360 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %361 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %360, i32 0, i32 2
  %362 = load i8*, i8** %361, align 8
  %363 = load i64, i64* %14, align 8
  %364 = getelementptr inbounds i8, i8* %362, i64 %363
  store i8 0, i8* %364, align 1
  %365 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %366 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %365, i32 0, i32 0
  %367 = load i32, i32* %366, align 8
  %368 = icmp sgt i32 %367, 0
  br i1 %368, label %369, label %375

369:                                              ; preds = %359
  %370 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %371 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %370, i32 0, i32 3
  store i64 0, i64* %371, align 8
  %372 = load i64, i64* %14, align 8
  %373 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %374 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %373, i32 0, i32 4
  store i64 %372, i64* %374, align 8
  br label %381

375:                                              ; preds = %359
  %376 = load i64, i64* %14, align 8
  %377 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %378 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %377, i32 0, i32 3
  store i64 %376, i64* %378, align 8
  %379 = load %struct.png_text_struct*, %struct.png_text_struct** %18, align 8
  %380 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %379, i32 0, i32 4
  store i64 0, i64* %380, align 8
  br label %381

381:                                              ; preds = %375, %369
  %382 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %383 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %382, i32 0, i32 20
  %384 = load i32, i32* %383, align 4
  %385 = add nsw i32 %384, 1
  store i32 %385, i32* %383, align 4
  br label %386

386:                                              ; preds = %381, %132, %115
  %387 = load i32, i32* %10, align 4
  %388 = add nsw i32 %387, 1
  store i32 %388, i32* %10, align 4
  br label %95, !llvm.loop !282

389:                                              ; preds = %95
  store i32 0, i32* %5, align 4
  br label %390

390:                                              ; preds = %389, %252, %76, %30
  %391 = load i32, i32* %5, align 4
  ret i32 %391
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_tIME(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_time_struct* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca %struct.png_time_struct*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store %struct.png_time_struct* %2, %struct.png_time_struct** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %9
  %13 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %14 = icmp eq %struct.png_time_struct* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 15
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 512
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15, %12, %9, %3
  br label %76

22:                                               ; preds = %15
  %23 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %24 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %64, label %28

28:                                               ; preds = %22
  %29 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %30 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 2
  %32 = zext i8 %31 to i32
  %33 = icmp sgt i32 %32, 12
  br i1 %33, label %64, label %34

34:                                               ; preds = %28
  %35 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %36 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %35, i32 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %64, label %40

40:                                               ; preds = %34
  %41 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %42 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %41, i32 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp sgt i32 %44, 31
  br i1 %45, label %64, label %46

46:                                               ; preds = %40
  %47 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %48 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %47, i32 0, i32 3
  %49 = load i8, i8* %48, align 2
  %50 = zext i8 %49 to i32
  %51 = icmp sgt i32 %50, 23
  br i1 %51, label %64, label %52

52:                                               ; preds = %46
  %53 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %54 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %53, i32 0, i32 4
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp sgt i32 %56, 59
  br i1 %57, label %64, label %58

58:                                               ; preds = %52
  %59 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %60 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %59, i32 0, i32 5
  %61 = load i8, i8* %60, align 2
  %62 = zext i8 %61 to i32
  %63 = icmp sgt i32 %62, 60
  br i1 %63, label %64, label %66

64:                                               ; preds = %58, %52, %46, %40, %34, %28, %22
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %65, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38.441, i64 0, i64 0))
  br label %76

66:                                               ; preds = %58
  %67 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %68 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %67, i32 0, i32 23
  %69 = load %struct.png_time_struct*, %struct.png_time_struct** %6, align 8
  %70 = bitcast %struct.png_time_struct* %68 to i8*
  %71 = bitcast %struct.png_time_struct* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 2 %71, i64 8, i1 false)
  %72 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %73 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %72, i32 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = or i32 %74, 512
  store i32 %75, i32* %73, align 8
  br label %76

76:                                               ; preds = %66, %64, %21
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_tRNS(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8* noundef %2, i32 noundef %3, %struct.png_color_16_struct* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.png_color_16_struct*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store %struct.png_color_16_struct* %4, %struct.png_color_16_struct** %10, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %13 = icmp eq %struct.png_struct_def* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %16 = icmp eq %struct.png_info_def* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %14, %5
  br label %138

18:                                               ; preds = %14
  %19 = load i8*, i8** %8, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %21, label %54

21:                                               ; preds = %18
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %23 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %22, %struct.png_info_def* noundef %23, i32 noundef 8192, i32 noundef 0)
  %24 = load i32, i32* %9, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %21
  %27 = load i32, i32* %9, align 4
  %28 = icmp sle i32 %27, 256
  br i1 %28, label %29, label %48

29:                                               ; preds = %26
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %31 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %30, i64 noundef 256)
  %32 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %32, i32 0, i32 25
  store i8* %31, i8** %33, align 8
  %34 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 25
  %36 = load i8*, i8** %35, align 8
  %37 = load i8*, i8** %8, align 8
  %38 = load i32, i32* %9, align 4
  %39 = sext i32 %38 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64 %39, i1 false)
  %40 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %40, i32 0, i32 45
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 8192
  store i32 %43, i32* %41, align 4
  %44 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = or i32 %46, 16
  store i32 %47, i32* %45, align 8
  br label %48

48:                                               ; preds = %29, %26, %21
  %49 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 25
  %51 = load i8*, i8** %50, align 8
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 89
  store i8* %51, i8** %53, align 8
  br label %54

54:                                               ; preds = %48, %18
  %55 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %10, align 8
  %56 = icmp ne %struct.png_color_16_struct* %55, null
  br i1 %56, label %57, label %122

57:                                               ; preds = %54
  %58 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %59 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %58, i32 0, i32 7
  %60 = load i8, i8* %59, align 4
  %61 = zext i8 %60 to i32
  %62 = icmp slt i32 %61, 16
  br i1 %62, label %63, label %112

63:                                               ; preds = %57
  %64 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %65 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %64, i32 0, i32 7
  %66 = load i8, i8* %65, align 4
  %67 = zext i8 %66 to i32
  %68 = shl i32 1, %67
  %69 = sub nsw i32 %68, 1
  store i32 %69, i32* %11, align 4
  %70 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %70, i32 0, i32 8
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %63
  %76 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %10, align 8
  %77 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %76, i32 0, i32 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = load i32, i32* %11, align 4
  %81 = icmp sgt i32 %79, %80
  br i1 %81, label %109, label %82

82:                                               ; preds = %75, %63
  %83 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %84 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %83, i32 0, i32 8
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %88, label %111

88:                                               ; preds = %82
  %89 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %10, align 8
  %90 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %89, i32 0, i32 1
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = load i32, i32* %11, align 4
  %94 = icmp sgt i32 %92, %93
  br i1 %94, label %109, label %95

95:                                               ; preds = %88
  %96 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %10, align 8
  %97 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %96, i32 0, i32 2
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = load i32, i32* %11, align 4
  %101 = icmp sgt i32 %99, %100
  br i1 %101, label %109, label %102

102:                                              ; preds = %95
  %103 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %10, align 8
  %104 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %103, i32 0, i32 3
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = load i32, i32* %11, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %102, %95, %88, %75
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_warning(%struct.png_struct_def* noundef %110, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.39.444, i64 0, i64 0))
  br label %111

111:                                              ; preds = %109, %102, %82
  br label %112

112:                                              ; preds = %111, %57
  %113 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %114 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %113, i32 0, i32 26
  %115 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %10, align 8
  %116 = bitcast %struct.png_color_16_struct* %114 to i8*
  %117 = bitcast %struct.png_color_16_struct* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 2 %117, i64 10, i1 false)
  %118 = load i32, i32* %9, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %112
  store i32 1, i32* %9, align 4
  br label %121

121:                                              ; preds = %120, %112
  br label %122

122:                                              ; preds = %121, %54
  %123 = load i32, i32* %9, align 4
  %124 = trunc i32 %123 to i16
  %125 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %126 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %125, i32 0, i32 6
  store i16 %124, i16* %126, align 2
  %127 = load i32, i32* %9, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %138

129:                                              ; preds = %122
  %130 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %131 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %130, i32 0, i32 45
  %132 = load i32, i32* %131, align 4
  %133 = or i32 %132, 8192
  store i32 %133, i32* %131, align 4
  %134 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %135 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %134, i32 0, i32 2
  %136 = load i32, i32* %135, align 8
  %137 = or i32 %136, 16
  store i32 %137, i32* %135, align 8
  br label %138

138:                                              ; preds = %17, %129, %122
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_sPLT(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_sPLT_struct* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_sPLT_struct*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.png_sPLT_struct*, align 8
  %10 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_sPLT_struct* %2, %struct.png_sPLT_struct** %7, align 8
  store i32 %3, i32* %8, align 4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %12 = icmp eq %struct.png_struct_def* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %4
  %14 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %15 = icmp eq %struct.png_info_def* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %13
  %17 = load i32, i32* %8, align 4
  %18 = icmp sle i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %21 = icmp eq %struct.png_sPLT_struct* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %19, %16, %13, %4
  br label %158

23:                                               ; preds = %19
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %25 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %25, i32 0, i32 48
  %27 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %26, align 8
  %28 = bitcast %struct.png_sPLT_struct* %27 to i8*
  %29 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 49
  %31 = load i32, i32* %30, align 8
  %32 = load i32, i32* %8, align 4
  %33 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i8*, i32, i32, i64)* @png_realloc_array to i8* (%struct.png_struct_def*, i8*, i32, i32, i64)*)(%struct.png_struct_def* noundef %24, i8* noundef %28, i32 noundef %31, i32 noundef %32, i64 noundef 32)
  %34 = bitcast i8* %33 to %struct.png_sPLT_struct*
  store %struct.png_sPLT_struct* %34, %struct.png_sPLT_struct** %9, align 8
  %35 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %36 = icmp eq %struct.png_sPLT_struct* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %38, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40.447, i64 0, i64 0), i32 noundef 1)
  br label %158

39:                                               ; preds = %23
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %41 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 48
  %43 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %42, align 8
  %44 = bitcast %struct.png_sPLT_struct* %43 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %40, i8* noundef %44)
  %45 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %46 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 48
  store %struct.png_sPLT_struct* %45, %struct.png_sPLT_struct** %47, align 8
  %48 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %49 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %48, i32 0, i32 45
  %50 = load i32, i32* %49, align 4
  %51 = or i32 %50, 32
  store i32 %51, i32* %49, align 4
  %52 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %53 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %52, i32 0, i32 49
  %54 = load i32, i32* %53, align 8
  %55 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %55, i64 %56
  store %struct.png_sPLT_struct* %57, %struct.png_sPLT_struct** %9, align 8
  br label %58

58:                                               ; preds = %149, %39
  %59 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %60 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %59, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %65 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %64, i32 0, i32 2
  %66 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %65, align 8
  %67 = icmp eq %struct.png_sPLT_entry_struct* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %63, %58
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %69, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41.448, i64 0, i64 0))
  br label %149

70:                                               ; preds = %63
  %71 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %72 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %71, i32 0, i32 1
  %73 = load i8, i8* %72, align 8
  %74 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %75 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %74, i32 0, i32 1
  store i8 %73, i8* %75, align 8
  %76 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %77 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %76, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = call i64 @strlen(i8* noundef %78) #14
  %80 = add i64 %79, 1
  store i64 %80, i64* %10, align 8
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %82 = load i64, i64* %10, align 8
  %83 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %81, i64 noundef %82)
  %84 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %85 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %84, i32 0, i32 0
  store i8* %83, i8** %85, align 8
  %86 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %87 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %86, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %91

90:                                               ; preds = %70
  br label %153

91:                                               ; preds = %70
  %92 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %93 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %96 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 %97, i64 %98, i1 false)
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %100 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %101 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %100, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i32, i64)* @png_malloc_array to i8* (%struct.png_struct_def*, i32, i64)*)(%struct.png_struct_def* noundef %99, i32 noundef %102, i64 noundef 10)
  %104 = bitcast i8* %103 to %struct.png_sPLT_entry_struct*
  %105 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %106 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %105, i32 0, i32 2
  store %struct.png_sPLT_entry_struct* %104, %struct.png_sPLT_entry_struct** %106, align 8
  %107 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %108 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %107, i32 0, i32 2
  %109 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %108, align 8
  %110 = icmp eq %struct.png_sPLT_entry_struct* %109, null
  br i1 %110, label %111, label %118

111:                                              ; preds = %91
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %113 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %114 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %113, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %112, i8* noundef %115)
  %116 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %117 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %116, i32 0, i32 0
  store i8* null, i8** %117, align 8
  br label %153

118:                                              ; preds = %91
  %119 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %120 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %119, i32 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %123 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %122, i32 0, i32 3
  store i32 %121, i32* %123, align 8
  %124 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %125 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %124, i32 0, i32 2
  %126 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %125, align 8
  %127 = bitcast %struct.png_sPLT_entry_struct* %126 to i8*
  %128 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %129 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %128, i32 0, i32 2
  %130 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %129, align 8
  %131 = bitcast %struct.png_sPLT_entry_struct* %130 to i8*
  %132 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %133 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %132, i32 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = zext i32 %134 to i64
  %136 = mul i64 %135, 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %127, i8* align 2 %131, i64 %136, i1 false)
  %137 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %138 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %137, i32 0, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = or i32 %139, 8192
  store i32 %140, i32* %138, align 8
  %141 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %142 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %141, i32 0, i32 49
  %143 = load i32, i32* %142, align 8
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 8
  %145 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %9, align 8
  %146 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %145, i32 1
  store %struct.png_sPLT_struct* %146, %struct.png_sPLT_struct** %9, align 8
  %147 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %7, align 8
  %148 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %147, i32 1
  store %struct.png_sPLT_struct* %148, %struct.png_sPLT_struct** %7, align 8
  br label %149

149:                                              ; preds = %118, %68
  %150 = load i32, i32* %8, align 4
  %151 = add nsw i32 %150, -1
  store i32 %151, i32* %8, align 4
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %58, label %153, !llvm.loop !283

153:                                              ; preds = %149, %111, %90
  %154 = load i32, i32* %8, align 4
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %157, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42.449, i64 0, i64 0), i32 noundef 1)
  br label %158

158:                                              ; preds = %22, %37, %156, %153
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_unknown_chunks(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, %struct.png_unknown_chunk_t* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca %struct.png_unknown_chunk_t*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.png_unknown_chunk_t*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store %struct.png_unknown_chunk_t* %2, %struct.png_unknown_chunk_t** %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %4
  %13 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %14 = icmp eq %struct.png_info_def* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* %8, align 4
  %17 = icmp sle i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %20 = icmp eq %struct.png_unknown_chunk_t* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %18, %15, %12, %4
  br label %128

22:                                               ; preds = %18
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %24 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 46
  %26 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %25, align 8
  %27 = bitcast %struct.png_unknown_chunk_t* %26 to i8*
  %28 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 47
  %30 = load i32, i32* %29, align 8
  %31 = load i32, i32* %8, align 4
  %32 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i8*, i32, i32, i64)* @png_realloc_array to i8* (%struct.png_struct_def*, i8*, i32, i32, i64)*)(%struct.png_struct_def* noundef %23, i8* noundef %27, i32 noundef %30, i32 noundef %31, i64 noundef 32)
  %33 = bitcast i8* %32 to %struct.png_unknown_chunk_t*
  store %struct.png_unknown_chunk_t* %33, %struct.png_unknown_chunk_t** %9, align 8
  %34 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %35 = icmp eq %struct.png_unknown_chunk_t* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %22
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %37, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43.452, i64 0, i64 0), i32 noundef 1)
  br label %128

38:                                               ; preds = %22
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %40 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %40, i32 0, i32 46
  %42 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %41, align 8
  %43 = bitcast %struct.png_unknown_chunk_t* %42 to i8*
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %39, i8* noundef %43)
  %44 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %45 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %46 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %45, i32 0, i32 46
  store %struct.png_unknown_chunk_t* %44, %struct.png_unknown_chunk_t** %46, align 8
  %47 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %48 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %47, i32 0, i32 45
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, 512
  store i32 %50, i32* %48, align 4
  %51 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 47
  %53 = load i32, i32* %52, align 8
  %54 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %55 = sext i32 %53 to i64
  %56 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %54, i64 %55
  store %struct.png_unknown_chunk_t* %56, %struct.png_unknown_chunk_t** %9, align 8
  br label %57

57:                                               ; preds = %123, %38
  %58 = load i32, i32* %8, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %128

60:                                               ; preds = %57
  %61 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %62 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %61, i32 0, i32 0
  %63 = getelementptr inbounds [5 x i8], [5 x i8]* %62, i64 0, i64 0
  %64 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %65 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %64, i32 0, i32 0
  %66 = getelementptr inbounds [5 x i8], [5 x i8]* %65, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %66, i64 5, i1 false)
  %67 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %68 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %67, i32 0, i32 0
  %69 = getelementptr inbounds [5 x i8], [5 x i8]* %68, i64 0, i64 4
  store i8 0, i8* %69, align 4
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %71 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %72 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %71, i32 0, i32 3
  %73 = load i8, i8* %72, align 8
  %74 = zext i8 %73 to i32
  %75 = call zeroext i8 @check_location(%struct.png_struct_def* noundef %70, i32 noundef %74)
  %76 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %77 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %76, i32 0, i32 3
  store i8 %75, i8* %77, align 8
  %78 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %79 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %78, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %60
  %83 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %84 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %83, i32 0, i32 1
  store i8* null, i8** %84, align 8
  %85 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %86 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %85, i32 0, i32 2
  store i64 0, i64* %86, align 8
  br label %116

87:                                               ; preds = %60
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %89 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %90 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %89, i32 0, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_base to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %88, i64 noundef %91)
  %93 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %94 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %93, i32 0, i32 1
  store i8* %92, i8** %94, align 8
  %95 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %96 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %95, i32 0, i32 1
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %87
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_chunk_report(%struct.png_struct_def* noundef %100, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.453, i64 0, i64 0), i32 noundef 1)
  br label %123

101:                                              ; preds = %87
  %102 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %103 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %102, i32 0, i32 1
  %104 = load i8*, i8** %103, align 8
  %105 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %106 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %105, i32 0, i32 1
  %107 = load i8*, i8** %106, align 8
  %108 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %109 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %108, i32 0, i32 2
  %110 = load i64, i64* %109, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %107, i64 %110, i1 false)
  %111 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %112 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %111, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %115 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %114, i32 0, i32 2
  store i64 %113, i64* %115, align 8
  br label %116

116:                                              ; preds = %101, %82
  %117 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %9, align 8
  %118 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %117, i32 1
  store %struct.png_unknown_chunk_t* %118, %struct.png_unknown_chunk_t** %9, align 8
  %119 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %120 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %119, i32 0, i32 47
  %121 = load i32, i32* %120, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %120, align 8
  br label %123

123:                                              ; preds = %116, %99
  %124 = load i32, i32* %8, align 4
  %125 = add nsw i32 %124, -1
  store i32 %125, i32* %8, align 4
  %126 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %127 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %126, i32 1
  store %struct.png_unknown_chunk_t* %127, %struct.png_unknown_chunk_t** %7, align 8
  br label %57, !llvm.loop !284

128:                                              ; preds = %21, %36, %57
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @check_location(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 11
  store i32 %6, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 15
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 32768
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %9
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.55.454, i64 0, i64 0))
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 15
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 11
  %21 = trunc i32 %20 to i8
  %22 = zext i8 %21 to i32
  store i32 %22, i32* %4, align 4
  br label %23

23:                                               ; preds = %15, %9, %2
  %24 = load i32, i32* %4, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.56.455, i64 0, i64 0)) #13
  unreachable

28:                                               ; preds = %23
  br label %29

29:                                               ; preds = %36, %28
  %30 = load i32, i32* %4, align 4
  %31 = load i32, i32* %4, align 4
  %32 = load i32, i32* %4, align 4
  %33 = sub nsw i32 0, %32
  %34 = and i32 %31, %33
  %35 = icmp ne i32 %30, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %29
  %37 = load i32, i32* %4, align 4
  %38 = load i32, i32* %4, align 4
  %39 = sub nsw i32 0, %38
  %40 = and i32 %37, %39
  %41 = xor i32 %40, -1
  %42 = load i32, i32* %4, align 4
  %43 = and i32 %42, %41
  store i32 %43, i32* %4, align 4
  br label %29, !llvm.loop !285

44:                                               ; preds = %29
  %45 = load i32, i32* %4, align 4
  %46 = trunc i32 %45 to i8
  ret i8 %46
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_unknown_chunk_location(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp ne %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %46

11:                                               ; preds = %4
  %12 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %13 = icmp ne %struct.png_info_def* %12, null
  br i1 %13, label %14, label %46

14:                                               ; preds = %11
  %15 = load i32, i32* %7, align 4
  %16 = icmp sge i32 %15, 0
  br i1 %16, label %17, label %46

17:                                               ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 47
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %23, label %46

23:                                               ; preds = %17
  %24 = load i32, i32* %8, align 4
  %25 = and i32 %24, 11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %28, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.456, i64 0, i64 0))
  %29 = load i32, i32* %8, align 4
  %30 = and i32 %29, 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  store i32 8, i32* %8, align 4
  br label %34

33:                                               ; preds = %27
  store i32 1, i32* %8, align 4
  br label %34

34:                                               ; preds = %33, %32
  br label %35

35:                                               ; preds = %34, %23
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %37 = load i32, i32* %8, align 4
  %38 = call zeroext i8 @check_location(%struct.png_struct_def* noundef %36, i32 noundef %37)
  %39 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 46
  %41 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %40, align 8
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %41, i64 %43
  %45 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %44, i32 0, i32 3
  store i8 %38, i8* %45, align 8
  br label %46

46:                                               ; preds = %35, %17, %14, %11, %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_permit_mng_features(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  store i32 0, i32* %3, align 4
  br label %17

9:                                                ; preds = %2
  %10 = load i32, i32* %5, align 4
  %11 = and i32 %10, 5
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 123
  store i32 %11, i32* %13, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 123
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %3, align 4
  br label %17

17:                                               ; preds = %9, %8
  %18 = load i32, i32* %3, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_keep_unknown_chunks(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %16 = icmp eq %struct.png_struct_def* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  br label %183

18:                                               ; preds = %4
  %19 = load i32, i32* %6, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %6, align 4
  %23 = icmp sge i32 %22, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %21, %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %25, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46.459, i64 0, i64 0))
  br label %183

26:                                               ; preds = %21
  %27 = load i32, i32* %8, align 4
  %28 = icmp sle i32 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load i32, i32* %6, align 4
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 115
  store i32 %30, i32* %32, align 8
  %33 = load i32, i32* %8, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  br label %183

36:                                               ; preds = %29
  br label %37

37:                                               ; preds = %36, %26
  %38 = load i32, i32* %8, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i8* getelementptr inbounds ([90 x i8], [90 x i8]* @png_set_keep_unknown_chunks.chunks_to_ignore, i64 0, i64 0), i8** %7, align 8
  store i32 18, i32* %10, align 4
  br label %48

41:                                               ; preds = %37
  %42 = load i8*, i8** %7, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %45, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.47.460, i64 0, i64 0))
  br label %183

46:                                               ; preds = %41
  %47 = load i32, i32* %8, align 4
  store i32 %47, i32* %10, align 4
  br label %48

48:                                               ; preds = %46, %40
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 116
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %11, align 4
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 117
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %48
  store i32 0, i32* %11, align 4
  br label %57

57:                                               ; preds = %56, %48
  %58 = load i32, i32* %10, align 4
  %59 = load i32, i32* %11, align 4
  %60 = add i32 %58, %59
  %61 = icmp ugt i32 %60, 858993459
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %63, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.48.461, i64 0, i64 0))
  br label %183

64:                                               ; preds = %57
  %65 = load i32, i32* %6, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %86

67:                                               ; preds = %64
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %69 = load i32, i32* %10, align 4
  %70 = load i32, i32* %11, align 4
  %71 = add i32 %69, %70
  %72 = mul i32 5, %71
  %73 = zext i32 %72 to i64
  %74 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %68, i64 noundef %73)
  store i8* %74, i8** %9, align 8
  %75 = load i32, i32* %11, align 4
  %76 = icmp ugt i32 %75, 0
  br i1 %76, label %77, label %85

77:                                               ; preds = %67
  %78 = load i8*, i8** %9, align 8
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %79, i32 0, i32 117
  %81 = load i8*, i8** %80, align 8
  %82 = load i32, i32* %11, align 4
  %83 = mul i32 5, %82
  %84 = zext i32 %83 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %81, i64 %84, i1 false)
  br label %85

85:                                               ; preds = %77, %67
  br label %95

86:                                               ; preds = %64
  %87 = load i32, i32* %11, align 4
  %88 = icmp ugt i32 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 117
  %92 = load i8*, i8** %91, align 8
  store i8* %92, i8** %9, align 8
  br label %94

93:                                               ; preds = %86
  store i8* null, i8** %9, align 8
  br label %94

94:                                               ; preds = %93, %89
  br label %95

95:                                               ; preds = %94, %85
  %96 = load i8*, i8** %9, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %98, label %159

98:                                               ; preds = %95
  store i32 0, i32* %14, align 4
  br label %99

99:                                               ; preds = %113, %98
  %100 = load i32, i32* %14, align 4
  %101 = load i32, i32* %10, align 4
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %103, label %116

103:                                              ; preds = %99
  %104 = load i8*, i8** %9, align 8
  %105 = load i32, i32* %11, align 4
  %106 = load i8*, i8** %7, align 8
  %107 = load i32, i32* %14, align 4
  %108 = mul i32 5, %107
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %106, i64 %109
  %111 = load i32, i32* %6, align 4
  %112 = call i32 @add_one_chunk(i8* noundef %104, i32 noundef %105, i8* noundef %110, i32 noundef %111)
  store i32 %112, i32* %11, align 4
  br label %113

113:                                              ; preds = %103
  %114 = load i32, i32* %14, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %14, align 4
  br label %99, !llvm.loop !286

116:                                              ; preds = %99
  store i32 0, i32* %10, align 4
  store i32 0, i32* %14, align 4
  %117 = load i8*, i8** %9, align 8
  store i8* %117, i8** %13, align 8
  store i8* %117, i8** %12, align 8
  br label %118

118:                                              ; preds = %140, %116
  %119 = load i32, i32* %14, align 4
  %120 = load i32, i32* %11, align 4
  %121 = icmp ult i32 %119, %120
  br i1 %121, label %122, label %145

122:                                              ; preds = %118
  %123 = load i8*, i8** %12, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 4
  %125 = load i8, i8* %124, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = load i8*, i8** %13, align 8
  %129 = load i8*, i8** %12, align 8
  %130 = icmp ne i8* %128, %129
  br i1 %130, label %131, label %134

131:                                              ; preds = %127
  %132 = load i8*, i8** %13, align 8
  %133 = load i8*, i8** %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 %133, i64 5, i1 false)
  br label %134

134:                                              ; preds = %131, %127
  %135 = load i8*, i8** %13, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 5
  store i8* %136, i8** %13, align 8
  %137 = load i32, i32* %10, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %10, align 4
  br label %139

139:                                              ; preds = %134, %122
  br label %140

140:                                              ; preds = %139
  %141 = load i32, i32* %14, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %14, align 4
  %143 = load i8*, i8** %12, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 5
  store i8* %144, i8** %12, align 8
  br label %118, !llvm.loop !287

145:                                              ; preds = %118
  %146 = load i32, i32* %10, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %158

148:                                              ; preds = %145
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 117
  %151 = load i8*, i8** %150, align 8
  %152 = load i8*, i8** %9, align 8
  %153 = icmp ne i8* %151, %152
  br i1 %153, label %154, label %157

154:                                              ; preds = %148
  %155 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %156 = load i8*, i8** %9, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %155, i8* noundef %156)
  br label %157

157:                                              ; preds = %154, %148
  store i8* null, i8** %9, align 8
  br label %158

158:                                              ; preds = %157, %145
  br label %160

159:                                              ; preds = %95
  store i32 0, i32* %10, align 4
  br label %160

160:                                              ; preds = %159, %158
  %161 = load i32, i32* %10, align 4
  %162 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %163 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %162, i32 0, i32 116
  store i32 %161, i32* %163, align 4
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %165 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %164, i32 0, i32 117
  %166 = load i8*, i8** %165, align 8
  %167 = load i8*, i8** %9, align 8
  %168 = icmp ne i8* %166, %167
  br i1 %168, label %169, label %183

169:                                              ; preds = %160
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %170, i32 0, i32 117
  %172 = load i8*, i8** %171, align 8
  %173 = icmp ne i8* %172, null
  br i1 %173, label %174, label %179

174:                                              ; preds = %169
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %176 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %176, i32 0, i32 117
  %178 = load i8*, i8** %177, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %175, i8* noundef %178)
  br label %179

179:                                              ; preds = %174, %169
  %180 = load i8*, i8** %9, align 8
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %182 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %181, i32 0, i32 117
  store i8* %180, i8** %182, align 8
  br label %183

183:                                              ; preds = %17, %24, %35, %44, %62, %179, %160
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @add_one_chunk(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %27, %4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %15, label %32

15:                                               ; preds = %11
  %16 = load i8*, i8** %6, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = call i32 @memcmp(i8* noundef %16, i8* noundef %17, i64 noundef 4) #14
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = load i32, i32* %9, align 4
  %22 = trunc i32 %21 to i8
  %23 = load i8*, i8** %6, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  store i8 %22, i8* %24, align 1
  %25 = load i32, i32* %7, align 4
  store i32 %25, i32* %5, align 4
  br label %46

26:                                               ; preds = %15
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %10, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %10, align 4
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 5
  store i8* %31, i8** %6, align 8
  br label %11, !llvm.loop !288

32:                                               ; preds = %11
  %33 = load i32, i32* %9, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %44

35:                                               ; preds = %32
  %36 = load i32, i32* %7, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %7, align 4
  %38 = load i8*, i8** %6, align 8
  %39 = load i8*, i8** %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %39, i64 4, i1 false)
  %40 = load i32, i32* %9, align 4
  %41 = trunc i32 %40 to i8
  %42 = load i8*, i8** %6, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 4
  store i8 %41, i8* %43, align 1
  br label %44

44:                                               ; preds = %35, %32
  %45 = load i32, i32* %7, align 4
  store i32 %45, i32* %5, align 4
  br label %46

46:                                               ; preds = %44, %20
  %47 = load i32, i32* %5, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_read_user_chunk_fn(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %2, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %17

10:                                               ; preds = %3
  %11 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %6, align 8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 114
  store i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %11, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %13, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 113
  store i8* %14, i8** %16, align 8
  br label %17

17:                                               ; preds = %10, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_rows(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i8** noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i8** %2, i8*** %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp eq %struct.png_info_def* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %3
  br label %38

13:                                               ; preds = %9
  %14 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 53
  %16 = load i8**, i8*** %15, align 8
  %17 = icmp ne i8** %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %13
  %19 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 53
  %21 = load i8**, i8*** %20, align 8
  %22 = load i8**, i8*** %6, align 8
  %23 = icmp ne i8** %21, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %26 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  call void @png_free_data(%struct.png_struct_def* noundef %25, %struct.png_info_def* noundef %26, i32 noundef 64, i32 noundef 0)
  br label %27

27:                                               ; preds = %24, %18, %13
  %28 = load i8**, i8*** %6, align 8
  %29 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 53
  store i8** %28, i8*** %30, align 8
  %31 = load i8**, i8*** %6, align 8
  %32 = icmp ne i8** %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %35 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %34, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = or i32 %36, 32768
  store i32 %37, i32* %35, align 8
  br label %38

38:                                               ; preds = %12, %33, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_compression_buffer_size(%struct.png_struct_def* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %66

8:                                                ; preds = %2
  %9 = load i64, i64* %4, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ugt i64 %12, 2147483647
  br i1 %13, label %14, label %16

14:                                               ; preds = %11, %8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %15, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.49.462, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %11
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 15
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 32768
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = load i64, i64* %4, align 8
  %24 = trunc i64 %23 to i32
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 141
  store i32 %24, i32* %26, align 8
  br label %66

27:                                               ; preds = %16
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 15
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 32768
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %66

33:                                               ; preds = %27
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 18
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %39, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.50.463, i64 0, i64 0))
  br label %66

40:                                               ; preds = %33
  %41 = load i64, i64* %4, align 8
  %42 = icmp ugt i64 %41, 4294967295
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %44, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.51.464, i64 0, i64 0))
  store i64 4294967295, i64* %4, align 8
  br label %45

45:                                               ; preds = %43, %40
  %46 = load i64, i64* %4, align 8
  %47 = icmp ult i64 %46, 6
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %49, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.52.465, i64 0, i64 0))
  br label %66

50:                                               ; preds = %45
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 21
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = load i64, i64* %4, align 8
  %56 = icmp ne i64 %54, %55
  br i1 %56, label %57, label %65

57:                                               ; preds = %50
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 20
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_compression_buffer**)* @png_free_buffer_list to void (%struct.png_struct_def*, %struct.png_compression_buffer**)*)(%struct.png_struct_def* noundef %58, %struct.png_compression_buffer** noundef %60)
  %61 = load i64, i64* %4, align 8
  %62 = trunc i64 %61 to i32
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 21
  store i32 %62, i32* %64, align 8
  br label %65

65:                                               ; preds = %57, %50
  br label %66

66:                                               ; preds = %7, %22, %38, %48, %65, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_invalid(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp ne %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %11 = icmp ne %struct.png_info_def* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = load i32, i32* %6, align 4
  %14 = xor i32 %13, -1
  %15 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, %14
  store i32 %18, i32* %16, align 8
  br label %19

19:                                               ; preds = %12, %9, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_user_limits(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %17

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 133
  store i32 %11, i32* %13, align 4
  %14 = load i32, i32* %6, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 134
  store i32 %14, i32* %16, align 8
  br label %17

17:                                               ; preds = %10, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_chunk_cache_max(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp ne %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 135
  store i32 %8, i32* %10, align 4
  br label %11

11:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_chunk_malloc_max(%struct.png_struct_def* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp ne %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = load i64, i64* %4, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 136
  store i64 %8, i64* %10, align 8
  br label %11

11:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_benign_errors(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 16
  %10 = load i32, i32* %9, align 8
  %11 = or i32 %10, 7340032
  store i32 %11, i32* %9, align 8
  br label %17

12:                                               ; preds = %2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 16
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -7340033
  store i32 %16, i32* %14, align 8
  br label %17

17:                                               ; preds = %12, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_check_for_invalid_index(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 54
  store i32 0, i32* %9, align 4
  br label %13

10:                                               ; preds = %2
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 54
  store i32 -1, i32* %12, align 4
  br label %13

13:                                               ; preds = %10, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_check_keyword(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca [8 x [32 x i8]], align 16
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 1, i32* %11, align 4
  %15 = load i8*, i8** %6, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = load i8*, i8** %7, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %4, align 4
  br label %115

19:                                               ; preds = %3
  br label %20

20:                                               ; preds = %74, %19
  %21 = load i8*, i8** %6, align 8
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = load i32, i32* %9, align 4
  %27 = icmp ult i32 %26, 79
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i1 [ false, %20 ], [ %27, %25 ]
  br i1 %29, label %30, label %75

30:                                               ; preds = %28
  %31 = load i8*, i8** %6, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** %6, align 8
  %33 = load i8, i8* %31, align 1
  store i8 %33, i8* %12, align 1
  %34 = load i8, i8* %12, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp sgt i32 %35, 32
  br i1 %36, label %37, label %41

37:                                               ; preds = %30
  %38 = load i8, i8* %12, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp sle i32 %39, 126
  br i1 %40, label %45, label %41

41:                                               ; preds = %37, %30
  %42 = load i8, i8* %12, align 1
  %43 = zext i8 %42 to i32
  %44 = icmp sge i32 %43, 161
  br i1 %44, label %45, label %51

45:                                               ; preds = %41, %37
  %46 = load i8, i8* %12, align 1
  %47 = load i8*, i8** %7, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %7, align 8
  store i8 %46, i8* %47, align 1
  %49 = load i32, i32* %9, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %9, align 4
  store i32 0, i32* %11, align 4
  br label %74

51:                                               ; preds = %41
  %52 = load i32, i32* %11, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %51
  %55 = load i8*, i8** %7, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %7, align 8
  store i8 32, i8* %55, align 1
  %57 = load i32, i32* %9, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %9, align 4
  store i32 1, i32* %11, align 4
  %59 = load i8, i8* %12, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp ne i32 %60, 32
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  %63 = load i8, i8* %12, align 1
  %64 = zext i8 %63 to i32
  store i32 %64, i32* %10, align 4
  br label %65

65:                                               ; preds = %62, %54
  br label %73

66:                                               ; preds = %51
  %67 = load i32, i32* %10, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load i8, i8* %12, align 1
  %71 = zext i8 %70 to i32
  store i32 %71, i32* %10, align 4
  br label %72

72:                                               ; preds = %69, %66
  br label %73

73:                                               ; preds = %72, %65
  br label %74

74:                                               ; preds = %73, %45
  br label %20, !llvm.loop !289

75:                                               ; preds = %28
  %76 = load i32, i32* %9, align 4
  %77 = icmp ugt i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %75
  %79 = load i32, i32* %11, align 4
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %90

81:                                               ; preds = %78
  %82 = load i32, i32* %9, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %9, align 4
  %84 = load i8*, i8** %7, align 8
  %85 = getelementptr inbounds i8, i8* %84, i32 -1
  store i8* %85, i8** %7, align 8
  %86 = load i32, i32* %10, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  store i32 32, i32* %10, align 4
  br label %89

89:                                               ; preds = %88, %81
  br label %90

90:                                               ; preds = %89, %78, %75
  %91 = load i8*, i8** %7, align 8
  store i8 0, i8* %91, align 1
  %92 = load i32, i32* %9, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  store i32 0, i32* %4, align 4
  br label %115

95:                                               ; preds = %90
  %96 = load i8*, i8** %6, align 8
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_warning(%struct.png_struct_def* noundef %101, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53.468, i64 0, i64 0))
  br label %113

102:                                              ; preds = %95
  %103 = load i32, i32* %10, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %112

105:                                              ; preds = %102
  %106 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %13, i64 0, i64 0
  %107 = load i8*, i8** %8, align 8
  call void @png_warning_parameter([32 x i8]* noundef %106, i32 noundef 1, i8* noundef %107)
  %108 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %13, i64 0, i64 0
  %109 = load i32, i32* %10, align 4
  call void @png_warning_parameter_signed([32 x i8]* noundef %108, i32 noundef 2, i32 noundef 4, i32 noundef %109)
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %111 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %13, i64 0, i64 0
  call void @png_formatted_warning(%struct.png_struct_def* noundef %110, [32 x i8]* noundef %111, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54.469, i64 0, i64 0))
  br label %112

112:                                              ; preds = %105, %102
  br label %113

113:                                              ; preds = %112, %100
  %114 = load i32, i32* %9, align 4
  store i32 %114, i32* %4, align 4
  br label %115

115:                                              ; preds = %113, %94, %17
  %116 = load i32, i32* %4, align 4
  ret i32 %116
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_bgr(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %11

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 1
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %6, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_swap(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %17

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 62
  %9 = load i8, i8* %8, align 8
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 16
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %13, i32 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 16
  store i32 %16, i32* %14, align 4
  br label %17

17:                                               ; preds = %5, %12, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_packing(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %19

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 62
  %9 = load i8, i8* %8, align 8
  %10 = zext i8 %9 to i32
  %11 = icmp slt i32 %10, 8
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %13, i32 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 4
  store i32 %16, i32* %14, align 4
  %17 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %18 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %17, i32 0, i32 63
  store i8 8, i8* %18, align 1
  br label %19

19:                                               ; preds = %5, %12, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_packswap(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %17

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 62
  %9 = load i8, i8* %8, align 8
  %10 = zext i8 %9 to i32
  %11 = icmp slt i32 %10, 8
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %13, i32 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 65536
  store i32 %16, i32* %14, align 4
  br label %17

17:                                               ; preds = %5, %12, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_shift(%struct.png_struct_def.205* noalias noundef %0, %struct.png_color_8_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.205*, align 8
  %4 = alloca %struct.png_color_8_struct*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %3, align 8
  store %struct.png_color_8_struct* %1, %struct.png_color_8_struct** %4, align 8
  %5 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %6 = icmp eq %struct.png_struct_def.205* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %18

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %9, i32 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = or i32 %11, 8
  store i32 %12, i32* %10, align 4
  %13 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %13, i32 0, i32 88
  %15 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %4, align 8
  %16 = bitcast %struct.png_color_8_struct* %14 to i8*
  %17 = bitcast %struct.png_color_8_struct* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 5, i1 false)
  br label %18

18:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_set_interlace_handling(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %3, align 8
  %4 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %5 = icmp ne %struct.png_struct_def.205* %4, null
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 58
  %9 = load i8, i8* %8, align 4
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %13, i32 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 2
  store i32 %16, i32* %14, align 4
  store i32 7, i32* %2, align 4
  br label %18

17:                                               ; preds = %6, %1
  store i32 1, i32* %2, align 4
  br label %18

18:                                               ; preds = %17, %12
  %19 = load i32, i32* %2, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_filler(%struct.png_struct_def.205* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.205*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %8 = icmp eq %struct.png_struct_def.205* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %60

10:                                               ; preds = %3
  %11 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %11, i32 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 32768
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = load i32, i32* %5, align 4
  %18 = trunc i32 %17 to i16
  %19 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %19, i32 0, i32 71
  store i16 %18, i16* %20, align 2
  br label %43

21:                                               ; preds = %10
  %22 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %22, i32 0, i32 61
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  switch i32 %25, label %40 [
    i32 2, label %26
    i32 0, label %29
  ]

26:                                               ; preds = %21
  %27 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %28 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %27, i32 0, i32 66
  store i8 4, i8* %28, align 4
  br label %42

29:                                               ; preds = %21
  %30 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %31 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %30, i32 0, i32 62
  %32 = load i8, i8* %31, align 8
  %33 = zext i8 %32 to i32
  %34 = icmp sge i32 %33, 8
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %37 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %36, i32 0, i32 66
  store i8 2, i8* %37, align 4
  br label %42

38:                                               ; preds = %29
  %39 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_error to void (%struct.png_struct_def.205*, i8*)*)(%struct.png_struct_def.205* noundef %39, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.482, i64 0, i64 0))
  br label %60

40:                                               ; preds = %21
  %41 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_error to void (%struct.png_struct_def.205*, i8*)*)(%struct.png_struct_def.205* noundef %41, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.483, i64 0, i64 0))
  br label %60

42:                                               ; preds = %35, %26
  br label %43

43:                                               ; preds = %42, %16
  %44 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %45 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %44, i32 0, i32 17
  %46 = load i32, i32* %45, align 4
  %47 = or i32 %46, 32768
  store i32 %47, i32* %45, align 4
  %48 = load i32, i32* %6, align 4
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %55

50:                                               ; preds = %43
  %51 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %52 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %51, i32 0, i32 16
  %53 = load i32, i32* %52, align 8
  %54 = or i32 %53, 128
  store i32 %54, i32* %52, align 8
  br label %60

55:                                               ; preds = %43
  %56 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %57 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %56, i32 0, i32 16
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, -129
  store i32 %59, i32* %57, align 8
  br label %60

60:                                               ; preds = %9, %38, %40, %55, %50
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_add_alpha(%struct.png_struct_def.205* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.205*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %8 = icmp eq %struct.png_struct_def.205* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %24

10:                                               ; preds = %3
  %11 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %6, align 4
  call void @png_set_filler(%struct.png_struct_def.205* noundef %11, i32 noundef %12, i32 noundef %13)
  %14 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %14, i32 0, i32 17
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 32768
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %10
  %20 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %20, i32 0, i32 17
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %22, 16777216
  store i32 %23, i32* %21, align 4
  br label %24

24:                                               ; preds = %9, %19, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_swap_alpha(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %11

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 131072
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %6, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_invert_alpha(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %11

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 524288
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %6, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_invert_mono(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %2, align 8
  %3 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %4 = icmp eq %struct.png_struct_def.205* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %11

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = or i32 %9, 32
  store i32 %10, i32* %8, align 4
  br label %11

11:                                               ; preds = %6, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_invert(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 2
  %16 = load i8, i8* %15, align 8
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %41

19:                                               ; preds = %2
  %20 = load i8*, i8** %4, align 8
  store i8* %20, i8** %5, align 8
  %21 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %7, align 8
  store i64 0, i64* %6, align 8
  br label %24

24:                                               ; preds = %37, %19
  %25 = load i64, i64* %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = load i8*, i8** %5, align 8
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = xor i32 %31, -1
  %33 = trunc i32 %32 to i8
  %34 = load i8*, i8** %5, align 8
  store i8 %33, i8* %34, align 1
  %35 = load i8*, i8** %5, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %5, align 8
  br label %37

37:                                               ; preds = %28
  %38 = load i64, i64* %6, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %6, align 8
  br label %24, !llvm.loop !290

40:                                               ; preds = %24
  br label %119

41:                                               ; preds = %2
  %42 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %43 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %42, i32 0, i32 2
  %44 = load i8, i8* %43, align 8
  %45 = zext i8 %44 to i32
  %46 = icmp eq i32 %45, 4
  br i1 %46, label %47, label %75

47:                                               ; preds = %41
  %48 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %49 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %48, i32 0, i32 3
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, 8
  br i1 %52, label %53, label %75

53:                                               ; preds = %47
  %54 = load i8*, i8** %4, align 8
  store i8* %54, i8** %8, align 8
  %55 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %56 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %10, align 8
  store i64 0, i64* %9, align 8
  br label %58

58:                                               ; preds = %71, %53
  %59 = load i64, i64* %9, align 8
  %60 = load i64, i64* %10, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %74

62:                                               ; preds = %58
  %63 = load i8*, i8** %8, align 8
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = xor i32 %65, -1
  %67 = trunc i32 %66 to i8
  %68 = load i8*, i8** %8, align 8
  store i8 %67, i8* %68, align 1
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 2
  store i8* %70, i8** %8, align 8
  br label %71

71:                                               ; preds = %62
  %72 = load i64, i64* %9, align 8
  %73 = add i64 %72, 2
  store i64 %73, i64* %9, align 8
  br label %58, !llvm.loop !291

74:                                               ; preds = %58
  br label %118

75:                                               ; preds = %47, %41
  %76 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %77 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %76, i32 0, i32 2
  %78 = load i8, i8* %77, align 8
  %79 = zext i8 %78 to i32
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %81, label %117

81:                                               ; preds = %75
  %82 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %83 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %82, i32 0, i32 3
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 16
  br i1 %86, label %87, label %117

87:                                               ; preds = %81
  %88 = load i8*, i8** %4, align 8
  store i8* %88, i8** %11, align 8
  %89 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %90 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %89, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %13, align 8
  store i64 0, i64* %12, align 8
  br label %92

92:                                               ; preds = %113, %87
  %93 = load i64, i64* %12, align 8
  %94 = load i64, i64* %13, align 8
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %96, label %116

96:                                               ; preds = %92
  %97 = load i8*, i8** %11, align 8
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = xor i32 %99, -1
  %101 = trunc i32 %100 to i8
  %102 = load i8*, i8** %11, align 8
  store i8 %101, i8* %102, align 1
  %103 = load i8*, i8** %11, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = xor i32 %106, -1
  %108 = trunc i32 %107 to i8
  %109 = load i8*, i8** %11, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  store i8 %108, i8* %110, align 1
  %111 = load i8*, i8** %11, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 4
  store i8* %112, i8** %11, align 8
  br label %113

113:                                              ; preds = %96
  %114 = load i64, i64* %12, align 8
  %115 = add i64 %114, 4
  store i64 %115, i64* %12, align 8
  br label %92, !llvm.loop !292

116:                                              ; preds = %92
  br label %117

117:                                              ; preds = %116, %81, %75
  br label %118

118:                                              ; preds = %117, %74
  br label %119

119:                                              ; preds = %118, %40
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_swap(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %10 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %9, i32 0, i32 3
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 16
  br i1 %13, label %14, label %44

14:                                               ; preds = %2
  %15 = load i8*, i8** %4, align 8
  store i8* %15, i8** %5, align 8
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %20 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = zext i8 %21 to i32
  %23 = mul i32 %18, %22
  store i32 %23, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %24

24:                                               ; preds = %38, %14
  %25 = load i32, i32* %6, align 4
  %26 = load i32, i32* %7, align 4
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %28, label %43

28:                                               ; preds = %24
  %29 = load i8*, i8** %5, align 8
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %8, align 1
  %31 = load i8*, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = load i8*, i8** %5, align 8
  store i8 %33, i8* %34, align 1
  %35 = load i8, i8* %8, align 1
  %36 = load i8*, i8** %5, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %35, i8* %37, align 1
  br label %38

38:                                               ; preds = %28
  %39 = load i32, i32* %6, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %6, align 4
  %41 = load i8*, i8** %5, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 2
  store i8* %42, i8** %5, align 8
  br label %24, !llvm.loop !293

43:                                               ; preds = %24
  br label %44

44:                                               ; preds = %43, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_packswap(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %8, i32 0, i32 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp slt i32 %11, 8
  br i1 %12, label %13, label %60

13:                                               ; preds = %2
  %14 = load i8*, i8** %4, align 8
  %15 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %16 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  store i8* %18, i8** %6, align 8
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %20 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 3
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @onebppswaptable, i64 0, i64 0), i8** %7, align 8
  br label %42

25:                                               ; preds = %13
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %27 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @twobppswaptable, i64 0, i64 0), i8** %7, align 8
  br label %41

32:                                               ; preds = %25
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %38, label %39

38:                                               ; preds = %32
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @fourbppswaptable, i64 0, i64 0), i8** %7, align 8
  br label %40

39:                                               ; preds = %32
  br label %60

40:                                               ; preds = %38
  br label %41

41:                                               ; preds = %40, %31
  br label %42

42:                                               ; preds = %41, %24
  %43 = load i8*, i8** %4, align 8
  store i8* %43, i8** %5, align 8
  br label %44

44:                                               ; preds = %56, %42
  %45 = load i8*, i8** %5, align 8
  %46 = load i8*, i8** %6, align 8
  %47 = icmp ult i8* %45, %46
  br i1 %47, label %48, label %59

48:                                               ; preds = %44
  %49 = load i8*, i8** %7, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = load i8*, i8** %5, align 8
  store i8 %54, i8* %55, align 1
  br label %56

56:                                               ; preds = %48
  %57 = load i8*, i8** %5, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %5, align 8
  br label %44, !llvm.loop !294

59:                                               ; preds = %44
  br label %60

60:                                               ; preds = %39, %59, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_strip_channel(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load i8*, i8** %5, align 8
  store i8* %10, i8** %7, align 8
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %8, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %14 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 %15
  store i8* %16, i8** %9, align 8
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %18 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 4
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %105

22:                                               ; preds = %3
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %24 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %54

28:                                               ; preds = %22
  %29 = load i32, i32* %6, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = load i8*, i8** %7, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %7, align 8
  br label %39

34:                                               ; preds = %28
  %35 = load i8*, i8** %7, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 2
  store i8* %36, i8** %7, align 8
  %37 = load i8*, i8** %8, align 8
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %8, align 8
  br label %39

39:                                               ; preds = %34, %31
  br label %40

40:                                               ; preds = %44, %39
  %41 = load i8*, i8** %7, align 8
  %42 = load i8*, i8** %9, align 8
  %43 = icmp ult i8* %41, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %40
  %45 = load i8*, i8** %7, align 8
  %46 = load i8, i8* %45, align 1
  %47 = load i8*, i8** %8, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %8, align 8
  store i8 %46, i8* %47, align 1
  %49 = load i8*, i8** %7, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 2
  store i8* %50, i8** %7, align 8
  br label %40, !llvm.loop !295

51:                                               ; preds = %40
  %52 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %53 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %52, i32 0, i32 5
  store i8 8, i8* %53, align 1
  br label %93

54:                                               ; preds = %22
  %55 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %56 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %55, i32 0, i32 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %58, 16
  br i1 %59, label %60, label %91

60:                                               ; preds = %54
  %61 = load i32, i32* %6, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = load i8*, i8** %7, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 2
  store i8* %65, i8** %7, align 8
  br label %71

66:                                               ; preds = %60
  %67 = load i8*, i8** %7, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 4
  store i8* %68, i8** %7, align 8
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 2
  store i8* %70, i8** %8, align 8
  br label %71

71:                                               ; preds = %66, %63
  br label %72

72:                                               ; preds = %76, %71
  %73 = load i8*, i8** %7, align 8
  %74 = load i8*, i8** %9, align 8
  %75 = icmp ult i8* %73, %74
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = load i8*, i8** %7, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %7, align 8
  %79 = load i8, i8* %77, align 1
  %80 = load i8*, i8** %8, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %8, align 8
  store i8 %79, i8* %80, align 1
  %82 = load i8*, i8** %7, align 8
  %83 = load i8, i8* %82, align 1
  %84 = load i8*, i8** %8, align 8
  %85 = getelementptr inbounds i8, i8* %84, i32 1
  store i8* %85, i8** %8, align 8
  store i8 %83, i8* %84, align 1
  %86 = load i8*, i8** %7, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 3
  store i8* %87, i8** %7, align 8
  br label %72, !llvm.loop !296

88:                                               ; preds = %72
  %89 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %90 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %89, i32 0, i32 5
  store i8 16, i8* %90, align 1
  br label %92

91:                                               ; preds = %54
  br label %234

92:                                               ; preds = %88
  br label %93

93:                                               ; preds = %92, %51
  %94 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %95 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %94, i32 0, i32 4
  store i8 1, i8* %95, align 2
  %96 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %97 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %96, i32 0, i32 2
  %98 = load i8, i8* %97, align 8
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %101, label %104

101:                                              ; preds = %93
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %103 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 2
  store i8 0, i8* %103, align 8
  br label %104

104:                                              ; preds = %101, %93
  br label %226

105:                                              ; preds = %3
  %106 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %107 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %106, i32 0, i32 4
  %108 = load i8, i8* %107, align 2
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %224

111:                                              ; preds = %105
  %112 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %113 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %112, i32 0, i32 3
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 8
  br i1 %116, label %117, label %153

117:                                              ; preds = %111
  %118 = load i32, i32* %6, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = load i8*, i8** %7, align 8
  %122 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %122, i8** %7, align 8
  br label %128

123:                                              ; preds = %117
  %124 = load i8*, i8** %7, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 4
  store i8* %125, i8** %7, align 8
  %126 = load i8*, i8** %8, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 3
  store i8* %127, i8** %8, align 8
  br label %128

128:                                              ; preds = %123, %120
  br label %129

129:                                              ; preds = %133, %128
  %130 = load i8*, i8** %7, align 8
  %131 = load i8*, i8** %9, align 8
  %132 = icmp ult i8* %130, %131
  br i1 %132, label %133, label %150

133:                                              ; preds = %129
  %134 = load i8*, i8** %7, align 8
  %135 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %135, i8** %7, align 8
  %136 = load i8, i8* %134, align 1
  %137 = load i8*, i8** %8, align 8
  %138 = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %138, i8** %8, align 8
  store i8 %136, i8* %137, align 1
  %139 = load i8*, i8** %7, align 8
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %7, align 8
  %141 = load i8, i8* %139, align 1
  %142 = load i8*, i8** %8, align 8
  %143 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %143, i8** %8, align 8
  store i8 %141, i8* %142, align 1
  %144 = load i8*, i8** %7, align 8
  %145 = load i8, i8* %144, align 1
  %146 = load i8*, i8** %8, align 8
  %147 = getelementptr inbounds i8, i8* %146, i32 1
  store i8* %147, i8** %8, align 8
  store i8 %145, i8* %146, align 1
  %148 = load i8*, i8** %7, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 2
  store i8* %149, i8** %7, align 8
  br label %129, !llvm.loop !297

150:                                              ; preds = %129
  %151 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %152 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %151, i32 0, i32 5
  store i8 24, i8* %152, align 1
  br label %212

153:                                              ; preds = %111
  %154 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %155 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %154, i32 0, i32 3
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = icmp eq i32 %157, 16
  br i1 %158, label %159, label %210

159:                                              ; preds = %153
  %160 = load i32, i32* %6, align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %159
  %163 = load i8*, i8** %7, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 2
  store i8* %164, i8** %7, align 8
  br label %170

165:                                              ; preds = %159
  %166 = load i8*, i8** %7, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 8
  store i8* %167, i8** %7, align 8
  %168 = load i8*, i8** %8, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 6
  store i8* %169, i8** %8, align 8
  br label %170

170:                                              ; preds = %165, %162
  br label %171

171:                                              ; preds = %175, %170
  %172 = load i8*, i8** %7, align 8
  %173 = load i8*, i8** %9, align 8
  %174 = icmp ult i8* %172, %173
  br i1 %174, label %175, label %207

175:                                              ; preds = %171
  %176 = load i8*, i8** %7, align 8
  %177 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %177, i8** %7, align 8
  %178 = load i8, i8* %176, align 1
  %179 = load i8*, i8** %8, align 8
  %180 = getelementptr inbounds i8, i8* %179, i32 1
  store i8* %180, i8** %8, align 8
  store i8 %178, i8* %179, align 1
  %181 = load i8*, i8** %7, align 8
  %182 = getelementptr inbounds i8, i8* %181, i32 1
  store i8* %182, i8** %7, align 8
  %183 = load i8, i8* %181, align 1
  %184 = load i8*, i8** %8, align 8
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %8, align 8
  store i8 %183, i8* %184, align 1
  %186 = load i8*, i8** %7, align 8
  %187 = getelementptr inbounds i8, i8* %186, i32 1
  store i8* %187, i8** %7, align 8
  %188 = load i8, i8* %186, align 1
  %189 = load i8*, i8** %8, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %8, align 8
  store i8 %188, i8* %189, align 1
  %191 = load i8*, i8** %7, align 8
  %192 = getelementptr inbounds i8, i8* %191, i32 1
  store i8* %192, i8** %7, align 8
  %193 = load i8, i8* %191, align 1
  %194 = load i8*, i8** %8, align 8
  %195 = getelementptr inbounds i8, i8* %194, i32 1
  store i8* %195, i8** %8, align 8
  store i8 %193, i8* %194, align 1
  %196 = load i8*, i8** %7, align 8
  %197 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %197, i8** %7, align 8
  %198 = load i8, i8* %196, align 1
  %199 = load i8*, i8** %8, align 8
  %200 = getelementptr inbounds i8, i8* %199, i32 1
  store i8* %200, i8** %8, align 8
  store i8 %198, i8* %199, align 1
  %201 = load i8*, i8** %7, align 8
  %202 = load i8, i8* %201, align 1
  %203 = load i8*, i8** %8, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 1
  store i8* %204, i8** %8, align 8
  store i8 %202, i8* %203, align 1
  %205 = load i8*, i8** %7, align 8
  %206 = getelementptr inbounds i8, i8* %205, i64 3
  store i8* %206, i8** %7, align 8
  br label %171, !llvm.loop !298

207:                                              ; preds = %171
  %208 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %209 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %208, i32 0, i32 5
  store i8 48, i8* %209, align 1
  br label %211

210:                                              ; preds = %153
  br label %234

211:                                              ; preds = %207
  br label %212

212:                                              ; preds = %211, %150
  %213 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %214 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %213, i32 0, i32 4
  store i8 3, i8* %214, align 2
  %215 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %216 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %215, i32 0, i32 2
  %217 = load i8, i8* %216, align 8
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, 6
  br i1 %219, label %220, label %223

220:                                              ; preds = %212
  %221 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %222 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %221, i32 0, i32 2
  store i8 2, i8* %222, align 8
  br label %223

223:                                              ; preds = %220, %212
  br label %225

224:                                              ; preds = %105
  br label %234

225:                                              ; preds = %223
  br label %226

226:                                              ; preds = %225, %104
  %227 = load i8*, i8** %8, align 8
  %228 = load i8*, i8** %5, align 8
  %229 = ptrtoint i8* %227 to i64
  %230 = ptrtoint i8* %228 to i64
  %231 = sub i64 %229, %230
  %232 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %233 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %232, i32 0, i32 1
  store i64 %231, i64* %233, align 8
  br label %234

234:                                              ; preds = %226, %224, %210, %91
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_bgr(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %18 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %19 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %18, i32 0, i32 2
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = and i32 %21, 2
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %179

24:                                               ; preds = %2
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %5, align 4
  %28 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %29 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %28, i32 0, i32 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = icmp eq i32 %31, 8
  br i1 %32, label %33, label %91

33:                                               ; preds = %24
  %34 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %35 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %34, i32 0, i32 2
  %36 = load i8, i8* %35, align 8
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %61

39:                                               ; preds = %33
  store i32 0, i32* %7, align 4
  %40 = load i8*, i8** %4, align 8
  store i8* %40, i8** %6, align 8
  br label %41

41:                                               ; preds = %55, %39
  %42 = load i32, i32* %7, align 4
  %43 = load i32, i32* %5, align 4
  %44 = icmp ult i32 %42, %43
  br i1 %44, label %45, label %60

45:                                               ; preds = %41
  %46 = load i8*, i8** %6, align 8
  %47 = load i8, i8* %46, align 1
  store i8 %47, i8* %8, align 1
  %48 = load i8*, i8** %6, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = load i8*, i8** %6, align 8
  store i8 %50, i8* %51, align 1
  %52 = load i8, i8* %8, align 1
  %53 = load i8*, i8** %6, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %52, i8* %54, align 1
  br label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %7, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %7, align 4
  %58 = load i8*, i8** %6, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 3
  store i8* %59, i8** %6, align 8
  br label %41, !llvm.loop !299

60:                                               ; preds = %41
  br label %90

61:                                               ; preds = %33
  %62 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %63 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %62, i32 0, i32 2
  %64 = load i8, i8* %63, align 8
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 6
  br i1 %66, label %67, label %89

67:                                               ; preds = %61
  store i32 0, i32* %10, align 4
  %68 = load i8*, i8** %4, align 8
  store i8* %68, i8** %9, align 8
  br label %69

69:                                               ; preds = %83, %67
  %70 = load i32, i32* %10, align 4
  %71 = load i32, i32* %5, align 4
  %72 = icmp ult i32 %70, %71
  br i1 %72, label %73, label %88

73:                                               ; preds = %69
  %74 = load i8*, i8** %9, align 8
  %75 = load i8, i8* %74, align 1
  store i8 %75, i8* %11, align 1
  %76 = load i8*, i8** %9, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 2
  %78 = load i8, i8* %77, align 1
  %79 = load i8*, i8** %9, align 8
  store i8 %78, i8* %79, align 1
  %80 = load i8, i8* %11, align 1
  %81 = load i8*, i8** %9, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 2
  store i8 %80, i8* %82, align 1
  br label %83

83:                                               ; preds = %73
  %84 = load i32, i32* %10, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %10, align 4
  %86 = load i8*, i8** %9, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 4
  store i8* %87, i8** %9, align 8
  br label %69, !llvm.loop !300

88:                                               ; preds = %69
  br label %89

89:                                               ; preds = %88, %61
  br label %90

90:                                               ; preds = %89, %60
  br label %178

91:                                               ; preds = %24
  %92 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %93 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %92, i32 0, i32 3
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %95, 16
  br i1 %96, label %97, label %177

97:                                               ; preds = %91
  %98 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %99 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %98, i32 0, i32 2
  %100 = load i8, i8* %99, align 8
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 2
  br i1 %102, label %103, label %136

103:                                              ; preds = %97
  store i32 0, i32* %13, align 4
  %104 = load i8*, i8** %4, align 8
  store i8* %104, i8** %12, align 8
  br label %105

105:                                              ; preds = %130, %103
  %106 = load i32, i32* %13, align 4
  %107 = load i32, i32* %5, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %109, label %135

109:                                              ; preds = %105
  %110 = load i8*, i8** %12, align 8
  %111 = load i8, i8* %110, align 1
  store i8 %111, i8* %14, align 1
  %112 = load i8*, i8** %12, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 4
  %114 = load i8, i8* %113, align 1
  %115 = load i8*, i8** %12, align 8
  store i8 %114, i8* %115, align 1
  %116 = load i8, i8* %14, align 1
  %117 = load i8*, i8** %12, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 4
  store i8 %116, i8* %118, align 1
  %119 = load i8*, i8** %12, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = load i8, i8* %120, align 1
  store i8 %121, i8* %14, align 1
  %122 = load i8*, i8** %12, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 5
  %124 = load i8, i8* %123, align 1
  %125 = load i8*, i8** %12, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  store i8 %124, i8* %126, align 1
  %127 = load i8, i8* %14, align 1
  %128 = load i8*, i8** %12, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 5
  store i8 %127, i8* %129, align 1
  br label %130

130:                                              ; preds = %109
  %131 = load i32, i32* %13, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %13, align 4
  %133 = load i8*, i8** %12, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 6
  store i8* %134, i8** %12, align 8
  br label %105, !llvm.loop !301

135:                                              ; preds = %105
  br label %176

136:                                              ; preds = %97
  %137 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %138 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %137, i32 0, i32 2
  %139 = load i8, i8* %138, align 8
  %140 = zext i8 %139 to i32
  %141 = icmp eq i32 %140, 6
  br i1 %141, label %142, label %175

142:                                              ; preds = %136
  store i32 0, i32* %16, align 4
  %143 = load i8*, i8** %4, align 8
  store i8* %143, i8** %15, align 8
  br label %144

144:                                              ; preds = %169, %142
  %145 = load i32, i32* %16, align 4
  %146 = load i32, i32* %5, align 4
  %147 = icmp ult i32 %145, %146
  br i1 %147, label %148, label %174

148:                                              ; preds = %144
  %149 = load i8*, i8** %15, align 8
  %150 = load i8, i8* %149, align 1
  store i8 %150, i8* %17, align 1
  %151 = load i8*, i8** %15, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 4
  %153 = load i8, i8* %152, align 1
  %154 = load i8*, i8** %15, align 8
  store i8 %153, i8* %154, align 1
  %155 = load i8, i8* %17, align 1
  %156 = load i8*, i8** %15, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 4
  store i8 %155, i8* %157, align 1
  %158 = load i8*, i8** %15, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  store i8 %160, i8* %17, align 1
  %161 = load i8*, i8** %15, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 5
  %163 = load i8, i8* %162, align 1
  %164 = load i8*, i8** %15, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 1
  store i8 %163, i8* %165, align 1
  %166 = load i8, i8* %17, align 1
  %167 = load i8*, i8** %15, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 5
  store i8 %166, i8* %168, align 1
  br label %169

169:                                              ; preds = %148
  %170 = load i32, i32* %16, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %16, align 4
  %172 = load i8*, i8** %15, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 8
  store i8* %173, i8** %15, align 8
  br label %144, !llvm.loop !302

174:                                              ; preds = %144
  br label %175

175:                                              ; preds = %174, %136
  br label %176

176:                                              ; preds = %175, %135
  br label %177

177:                                              ; preds = %176, %91
  br label %178

178:                                              ; preds = %177, %90
  br label %179

179:                                              ; preds = %178, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_check_palette_indexes(%struct.png_struct_def.205* noalias noundef %0, %struct.png_row_info_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.205*, align 8
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %3, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %4, align 8
  %9 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %9, i32 0, i32 53
  %11 = load i16, i16* %10, align 8
  %12 = zext i16 %11 to i32
  %13 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %14 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %13, i32 0, i32 3
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl i32 1, %16
  %18 = icmp slt i32 %12, %17
  br i1 %18, label %19, label %224

19:                                               ; preds = %2
  %20 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %20, i32 0, i32 53
  %22 = load i16, i16* %21, align 8
  %23 = zext i16 %22 to i32
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %224

25:                                               ; preds = %19
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %27 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %31 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = urem i32 %32, 8
  %34 = mul i32 %29, %33
  %35 = urem i32 %34, 8
  %36 = sub i32 8, %35
  %37 = urem i32 %36, 8
  store i32 %37, i32* %5, align 4
  %38 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %39 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %38, i32 0, i32 46
  %40 = load i8*, i8** %39, align 8
  %41 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %42 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %41, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  %45 = getelementptr inbounds i8, i8* %44, i64 -1
  store i8* %45, i8** %6, align 8
  %46 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %47 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %46, i32 0, i32 3
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  switch i32 %49, label %222 [
    i32 1, label %50
    i32 2, label %72
    i32 4, label %151
    i32 8, label %196
  ]

50:                                               ; preds = %25
  br label %51

51:                                               ; preds = %68, %50
  %52 = load i8*, i8** %6, align 8
  %53 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %54 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %53, i32 0, i32 46
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ugt i8* %52, %55
  br i1 %56, label %57, label %71

57:                                               ; preds = %51
  %58 = load i8*, i8** %6, align 8
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = load i32, i32* %5, align 4
  %62 = ashr i32 %60, %61
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %57
  %65 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %66 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %65, i32 0, i32 54
  store i32 1, i32* %66, align 4
  br label %67

67:                                               ; preds = %64, %57
  store i32 0, i32* %5, align 4
  br label %68

68:                                               ; preds = %67
  %69 = load i8*, i8** %6, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 -1
  store i8* %70, i8** %6, align 8
  br label %51, !llvm.loop !303

71:                                               ; preds = %51
  br label %223

72:                                               ; preds = %25
  br label %73

73:                                               ; preds = %147, %72
  %74 = load i8*, i8** %6, align 8
  %75 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %76 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %75, i32 0, i32 46
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ugt i8* %74, %77
  br i1 %78, label %79, label %150

79:                                               ; preds = %73
  %80 = load i8*, i8** %6, align 8
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = load i32, i32* %5, align 4
  %84 = ashr i32 %82, %83
  %85 = and i32 %84, 3
  store i32 %85, i32* %7, align 4
  %86 = load i32, i32* %7, align 4
  %87 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %88 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %87, i32 0, i32 54
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %86, %89
  br i1 %90, label %91, label %95

91:                                               ; preds = %79
  %92 = load i32, i32* %7, align 4
  %93 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %94 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %93, i32 0, i32 54
  store i32 %92, i32* %94, align 4
  br label %95

95:                                               ; preds = %91, %79
  %96 = load i8*, i8** %6, align 8
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = load i32, i32* %5, align 4
  %100 = ashr i32 %98, %99
  %101 = ashr i32 %100, 2
  %102 = and i32 %101, 3
  store i32 %102, i32* %7, align 4
  %103 = load i32, i32* %7, align 4
  %104 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %105 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %104, i32 0, i32 54
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %103, %106
  br i1 %107, label %108, label %112

108:                                              ; preds = %95
  %109 = load i32, i32* %7, align 4
  %110 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %111 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %110, i32 0, i32 54
  store i32 %109, i32* %111, align 4
  br label %112

112:                                              ; preds = %108, %95
  %113 = load i8*, i8** %6, align 8
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = load i32, i32* %5, align 4
  %117 = ashr i32 %115, %116
  %118 = ashr i32 %117, 4
  %119 = and i32 %118, 3
  store i32 %119, i32* %7, align 4
  %120 = load i32, i32* %7, align 4
  %121 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %122 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %121, i32 0, i32 54
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %120, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %112
  %126 = load i32, i32* %7, align 4
  %127 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %128 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %127, i32 0, i32 54
  store i32 %126, i32* %128, align 4
  br label %129

129:                                              ; preds = %125, %112
  %130 = load i8*, i8** %6, align 8
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = load i32, i32* %5, align 4
  %134 = ashr i32 %132, %133
  %135 = ashr i32 %134, 6
  %136 = and i32 %135, 3
  store i32 %136, i32* %7, align 4
  %137 = load i32, i32* %7, align 4
  %138 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %139 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %138, i32 0, i32 54
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %137, %140
  br i1 %141, label %142, label %146

142:                                              ; preds = %129
  %143 = load i32, i32* %7, align 4
  %144 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %145 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %144, i32 0, i32 54
  store i32 %143, i32* %145, align 4
  br label %146

146:                                              ; preds = %142, %129
  store i32 0, i32* %5, align 4
  br label %147

147:                                              ; preds = %146
  %148 = load i8*, i8** %6, align 8
  %149 = getelementptr inbounds i8, i8* %148, i32 -1
  store i8* %149, i8** %6, align 8
  br label %73, !llvm.loop !304

150:                                              ; preds = %73
  br label %223

151:                                              ; preds = %25
  br label %152

152:                                              ; preds = %192, %151
  %153 = load i8*, i8** %6, align 8
  %154 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %155 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %154, i32 0, i32 46
  %156 = load i8*, i8** %155, align 8
  %157 = icmp ugt i8* %153, %156
  br i1 %157, label %158, label %195

158:                                              ; preds = %152
  %159 = load i8*, i8** %6, align 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = load i32, i32* %5, align 4
  %163 = ashr i32 %161, %162
  %164 = and i32 %163, 15
  store i32 %164, i32* %8, align 4
  %165 = load i32, i32* %8, align 4
  %166 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %167 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %166, i32 0, i32 54
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %165, %168
  br i1 %169, label %170, label %174

170:                                              ; preds = %158
  %171 = load i32, i32* %8, align 4
  %172 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %173 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %172, i32 0, i32 54
  store i32 %171, i32* %173, align 4
  br label %174

174:                                              ; preds = %170, %158
  %175 = load i8*, i8** %6, align 8
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = load i32, i32* %5, align 4
  %179 = ashr i32 %177, %178
  %180 = ashr i32 %179, 4
  %181 = and i32 %180, 15
  store i32 %181, i32* %8, align 4
  %182 = load i32, i32* %8, align 4
  %183 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %184 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %183, i32 0, i32 54
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %182, %185
  br i1 %186, label %187, label %191

187:                                              ; preds = %174
  %188 = load i32, i32* %8, align 4
  %189 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %190 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %189, i32 0, i32 54
  store i32 %188, i32* %190, align 4
  br label %191

191:                                              ; preds = %187, %174
  store i32 0, i32* %5, align 4
  br label %192

192:                                              ; preds = %191
  %193 = load i8*, i8** %6, align 8
  %194 = getelementptr inbounds i8, i8* %193, i32 -1
  store i8* %194, i8** %6, align 8
  br label %152, !llvm.loop !305

195:                                              ; preds = %152
  br label %223

196:                                              ; preds = %25
  br label %197

197:                                              ; preds = %218, %196
  %198 = load i8*, i8** %6, align 8
  %199 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %200 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %199, i32 0, i32 46
  %201 = load i8*, i8** %200, align 8
  %202 = icmp ugt i8* %198, %201
  br i1 %202, label %203, label %221

203:                                              ; preds = %197
  %204 = load i8*, i8** %6, align 8
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %208 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %207, i32 0, i32 54
  %209 = load i32, i32* %208, align 4
  %210 = icmp sgt i32 %206, %209
  br i1 %210, label %211, label %217

211:                                              ; preds = %203
  %212 = load i8*, i8** %6, align 8
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %216 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %215, i32 0, i32 54
  store i32 %214, i32* %216, align 4
  br label %217

217:                                              ; preds = %211, %203
  br label %218

218:                                              ; preds = %217
  %219 = load i8*, i8** %6, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 -1
  store i8* %220, i8** %6, align 8
  br label %197, !llvm.loop !306

221:                                              ; preds = %197
  br label %223

222:                                              ; preds = %25
  br label %223

223:                                              ; preds = %222, %221, %195, %150, %71
  br label %224

224:                                              ; preds = %223, %19, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_user_transform_info(%struct.png_struct_def.205* noalias noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.205*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  %10 = icmp eq %struct.png_struct_def.205* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  br label %38

12:                                               ; preds = %4
  %13 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %13, i32 0, i32 15
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 32768
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %19, i32 0, i32 16
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 64
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_error to void (%struct.png_struct_def.205*, i8*)*)(%struct.png_struct_def.205* noundef %25, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2.504, i64 0, i64 0))
  br label %38

26:                                               ; preds = %18, %12
  %27 = load i8*, i8** %6, align 8
  %28 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  %29 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %28, i32 0, i32 12
  store i8* %27, i8** %29, align 8
  %30 = load i32, i32* %7, align 4
  %31 = trunc i32 %30 to i8
  %32 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  %33 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %32, i32 0, i32 13
  store i8 %31, i8* %33, align 8
  %34 = load i32, i32* %8, align 4
  %35 = trunc i32 %34 to i8
  %36 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %5, align 8
  %37 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %36, i32 0, i32 14
  store i8 %35, i8* %37, align 1
  br label %38

38:                                               ; preds = %26, %24, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @png_get_user_transform_ptr(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %3, align 8
  %4 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %5 = icmp eq %struct.png_struct_def.205* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %8, i32 0, i32 12
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_get_current_row_number(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %3, align 8
  %4 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %5 = icmp ne %struct.png_struct_def.205* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 43
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %2, align 4
  br label %11

10:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = load i32, i32* %2, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define zeroext i8 @png_get_current_pass_number(%struct.png_struct_def.205* noalias noundef %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct.png_struct_def.205*, align 8
  store %struct.png_struct_def.205* %0, %struct.png_struct_def.205** %3, align 8
  %4 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %5 = icmp ne %struct.png_struct_def.205* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def.205*, %struct.png_struct_def.205** %3, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.205, %struct.png_struct_def.205* %7, i32 0, i32 59
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %2, align 1
  br label %11

10:                                               ; preds = %1
  store i8 8, i8* %2, align 1
  br label %11

11:                                               ; preds = %10, %6
  %12 = load i8, i8* %2, align 1
  ret i8 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_data(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 7
  %9 = load void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)** %8, align 8
  %10 = icmp ne void (%struct.png_struct_def*, i8*, i64)* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %3
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 7
  %14 = load void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)** %13, align 8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = load i64, i64* %6, align 8
  call void %14(%struct.png_struct_def* noundef %15, i8* noundef %16, i64 noundef %17)
  br label %20

18:                                               ; preds = %3
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %19, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.505, i64 0, i64 0)) #13
  unreachable

20:                                               ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_default_write_data(%struct.png_struct_def* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  br label %24

11:                                               ; preds = %3
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 9
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %struct._IO_FILE*
  %18 = call i64 @fwrite(i8* noundef %12, i64 noundef 1, i64 noundef %13, %struct._IO_FILE* noundef %17)
  store i64 %18, i64* %7, align 8
  %19 = load i64, i64* %7, align 8
  %20 = load i64, i64* %6, align 8
  %21 = icmp ne i64 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %23, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.506, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %10, %11
  ret void
}

declare i64 @fwrite(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_flush(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 76
  %5 = load void (%struct.png_struct_def*)*, void (%struct.png_struct_def*)** %4, align 8
  %6 = icmp ne void (%struct.png_struct_def*)* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 76
  %10 = load void (%struct.png_struct_def*)*, void (%struct.png_struct_def*)** %9, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void %10(%struct.png_struct_def* noundef %11)
  br label %12

12:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_default_flush(%struct.png_struct_def* noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %14

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 9
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i8* %10 to %struct._IO_FILE*
  store %struct._IO_FILE* %11, %struct._IO_FILE** %3, align 8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %13 = call i32 @fflush(%struct._IO_FILE* noundef %12)
  br label %14

14:                                               ; preds = %7, %6
  ret void
}

declare i32 @fflush(%struct._IO_FILE* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_write_fn(%struct.png_struct_def* noalias noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*, i64)* noundef %2, void (%struct.png_struct_def*)* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca void (%struct.png_struct_def*, i8*, i64)*, align 8
  %8 = alloca void (%struct.png_struct_def*)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store i8* %1, i8** %6, align 8
  store void (%struct.png_struct_def*, i8*, i64)* %2, void (%struct.png_struct_def*, i8*, i64)** %7, align 8
  store void (%struct.png_struct_def*)* %3, void (%struct.png_struct_def*)** %8, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  br label %44

12:                                               ; preds = %4
  %13 = load i8*, i8** %6, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 9
  store i8* %13, i8** %15, align 8
  %16 = load void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)** %7, align 8
  %17 = icmp ne void (%struct.png_struct_def*, i8*, i64)* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = load void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)** %7, align 8
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 7
  store void (%struct.png_struct_def*, i8*, i64)* %19, void (%struct.png_struct_def*, i8*, i64)** %21, align 8
  br label %25

22:                                               ; preds = %12
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 7
  store void (%struct.png_struct_def*, i8*, i64)* @png_default_write_data, void (%struct.png_struct_def*, i8*, i64)** %24, align 8
  br label %25

25:                                               ; preds = %22, %18
  %26 = load void (%struct.png_struct_def*)*, void (%struct.png_struct_def*)** %8, align 8
  %27 = icmp ne void (%struct.png_struct_def*)* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = load void (%struct.png_struct_def*)*, void (%struct.png_struct_def*)** %8, align 8
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 76
  store void (%struct.png_struct_def*)* %29, void (%struct.png_struct_def*)** %31, align 8
  br label %35

32:                                               ; preds = %25
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 76
  store void (%struct.png_struct_def*)* @png_default_flush, void (%struct.png_struct_def*)** %34, align 8
  br label %35

35:                                               ; preds = %32, %28
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 8
  %38 = load void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)** %37, align 8
  %39 = icmp ne void (%struct.png_struct_def*, i8*, i64)* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 8
  store void (%struct.png_struct_def*, i8*, i64)* null, void (%struct.png_struct_def*, i8*, i64)** %42, align 8
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_warning(%struct.png_struct_def* noundef %43, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.2.507, i64 0, i64 0))
  br label %44

44:                                               ; preds = %11, %40, %35
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_info_before_PLTE(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %9 = icmp eq %struct.png_info_def* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7, %2
  br label %188

11:                                               ; preds = %7
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 15
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1024
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %188

17:                                               ; preds = %11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_sig to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %18)
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 4096
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %17
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 123
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %30, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.508, i64 0, i64 0))
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 123
  store i32 0, i32* %32, align 8
  br label %33

33:                                               ; preds = %29, %24, %17
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %35 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %36 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 7
  %43 = load i8, i8* %42, align 4
  %44 = zext i8 %43 to i32
  %45 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %46 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %45, i32 0, i32 8
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 9
  %51 = load i8, i8* %50, align 2
  %52 = zext i8 %51 to i32
  %53 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 10
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %58 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %57, i32 0, i32 11
  %59 = load i8, i8* %58, align 8
  %60 = zext i8 %59 to i32
  call void bitcast (void (%struct.png_struct_def.62*, i32, i32, i32, i32, i32, i32, i32)* @png_write_IHDR to void (%struct.png_struct_def*, i32, i32, i32, i32, i32, i32, i32)*)(%struct.png_struct_def* noundef %34, i32 noundef %37, i32 noundef %40, i32 noundef %44, i32 noundef %48, i32 noundef %52, i32 noundef %56, i32 noundef %60)
  %61 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %62 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %61, i32 0, i32 16
  %63 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %62, i32 0, i32 4
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = and i32 %65, 32768
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %88

68:                                               ; preds = %33
  %69 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %70 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %69, i32 0, i32 16
  %71 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %70, i32 0, i32 4
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = and i32 %73, 8
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %68
  %77 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %78 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 1
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %76
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %84 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %85 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %84, i32 0, i32 16
  %86 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  call void bitcast (void (%struct.png_struct_def.62*, i32)* @png_write_gAMA_fixed to void (%struct.png_struct_def*, i32)*)(%struct.png_struct_def* noundef %83, i32 noundef %87)
  br label %88

88:                                               ; preds = %82, %76, %68, %33
  %89 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %90 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %89, i32 0, i32 16
  %91 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %90, i32 0, i32 4
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i32
  %94 = and i32 %93, 32768
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %118

96:                                               ; preds = %88
  %97 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %98 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %97, i32 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 4096
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %96
  %103 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 2048
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %109, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1.509, i64 0, i64 0))
  br label %110

110:                                              ; preds = %108, %102
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %112 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %113 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %112, i32 0, i32 17
  %114 = load i8*, i8** %113, align 8
  %115 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %116 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %115, i32 0, i32 18
  %117 = load i8*, i8** %116, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8*)* @png_write_iCCP to void (%struct.png_struct_def*, i8*, i8*)*)(%struct.png_struct_def* noundef %111, i8* noundef %114, i8* noundef %117)
  br label %140

118:                                              ; preds = %96, %88
  %119 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %120 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %119, i32 0, i32 16
  %121 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %120, i32 0, i32 4
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = and i32 %123, 32768
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %139

126:                                              ; preds = %118
  %127 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %128 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %127, i32 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 2048
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %139

132:                                              ; preds = %126
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %134 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %135 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %134, i32 0, i32 16
  %136 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %135, i32 0, i32 3
  %137 = load i16, i16* %136, align 4
  %138 = zext i16 %137 to i32
  call void bitcast (void (%struct.png_struct_def.62*, i32)* @png_write_sRGB to void (%struct.png_struct_def*, i32)*)(%struct.png_struct_def* noundef %133, i32 noundef %138)
  br label %139

139:                                              ; preds = %132, %126, %118
  br label %140

140:                                              ; preds = %139, %110
  %141 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %142 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %141, i32 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 2
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %154

146:                                              ; preds = %140
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %148 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %149 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %148, i32 0, i32 24
  %150 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %151 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %150, i32 0, i32 8
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_color_8_struct*, i32)* @png_write_sBIT to void (%struct.png_struct_def*, %struct.png_color_8_struct*, i32)*)(%struct.png_struct_def* noundef %147, %struct.png_color_8_struct* noundef %149, i32 noundef %153)
  br label %154

154:                                              ; preds = %146, %140
  %155 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %156 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %155, i32 0, i32 16
  %157 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %156, i32 0, i32 4
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = and i32 %159, 32768
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %154
  %163 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %164 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %163, i32 0, i32 16
  %165 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %164, i32 0, i32 4
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  %168 = and i32 %167, 16
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %181

170:                                              ; preds = %162
  %171 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %172 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %171, i32 0, i32 2
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 4
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %181

176:                                              ; preds = %170
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %178 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %179 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %178, i32 0, i32 16
  %180 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %179, i32 0, i32 1
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_xy*)* @png_write_cHRM_fixed to void (%struct.png_struct_def*, %struct.png_xy*)*)(%struct.png_struct_def* noundef %177, %struct.png_xy* noundef %180)
  br label %181

181:                                              ; preds = %176, %170, %162, %154
  %182 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %183 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @write_unknown_chunks(%struct.png_struct_def* noundef %182, %struct.png_info_def* noundef %183, i32 noundef 1)
  %184 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %185 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %184, i32 0, i32 15
  %186 = load i32, i32* %185, align 4
  %187 = or i32 %186, 1024
  store i32 %187, i32* %185, align 4
  br label %188

188:                                              ; preds = %10, %181, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_unknown_chunks(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_unknown_chunk_t*, align 8
  %8 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %10 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 47
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 46
  %16 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %15, align 8
  store %struct.png_unknown_chunk_t* %16, %struct.png_unknown_chunk_t** %7, align 8
  br label %17

17:                                               ; preds = %83, %13
  %18 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %19 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 46
  %21 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %20, align 8
  %22 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %22, i32 0, i32 47
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %21, i64 %25
  %27 = icmp ult %struct.png_unknown_chunk_t* %18, %26
  br i1 %27, label %28, label %86

28:                                               ; preds = %17
  %29 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %30 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %29, i32 0, i32 3
  %31 = load i8, i8* %30, align 8
  %32 = zext i8 %31 to i32
  %33 = load i32, i32* %6, align 4
  %34 = and i32 %32, %33
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %82

36:                                               ; preds = %28
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %38 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %39 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %38, i32 0, i32 0
  %40 = getelementptr inbounds [5 x i8], [5 x i8]* %39, i64 0, i64 0
  %41 = call i32 @png_handle_as_unknown(%struct.png_struct_def* noundef %37, i8* noundef %40)
  store i32 %41, i32* %8, align 4
  %42 = load i32, i32* %8, align 4
  %43 = icmp ne i32 %42, 1
  br i1 %43, label %44, label %81

44:                                               ; preds = %36
  %45 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %46 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %45, i32 0, i32 0
  %47 = getelementptr inbounds [5 x i8], [5 x i8]* %46, i64 0, i64 3
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = and i32 %49, 32
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %44
  %53 = load i32, i32* %8, align 4
  %54 = icmp eq i32 %53, 3
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* %8, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %81

58:                                               ; preds = %55
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 115
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 3
  br i1 %62, label %63, label %81

63:                                               ; preds = %58, %52, %44
  %64 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %65 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %64, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_warning(%struct.png_struct_def* noundef %69, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22.510, i64 0, i64 0))
  br label %70

70:                                               ; preds = %68, %63
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %72 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %73 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %72, i32 0, i32 0
  %74 = getelementptr inbounds [5 x i8], [5 x i8]* %73, i64 0, i64 0
  %75 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %76 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %75, i32 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %79 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %78, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8*, i64)* @png_write_chunk to void (%struct.png_struct_def*, i8*, i8*, i64)*)(%struct.png_struct_def* noundef %71, i8* noundef %74, i8* noundef %77, i64 noundef %80)
  br label %81

81:                                               ; preds = %70, %58, %55, %36
  br label %82

82:                                               ; preds = %81, %28
  br label %83

83:                                               ; preds = %82
  %84 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %7, align 8
  %85 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %84, i32 1
  store %struct.png_unknown_chunk_t* %85, %struct.png_unknown_chunk_t** %7, align 8
  br label %17, !llvm.loop !307

86:                                               ; preds = %17
  br label %87

87:                                               ; preds = %86, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_info(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %12 = icmp eq %struct.png_info_def* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %2
  br label %450

14:                                               ; preds = %10
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @png_write_info_before_PLTE(%struct.png_struct_def* noundef %15, %struct.png_info_def* noundef %16)
  %17 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 8
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %14
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %24 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %24, i32 0, i32 4
  %26 = load %struct.png_color_struct*, %struct.png_color_struct** %25, align 8
  %27 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 5
  %29 = load i16, i16* %28, align 8
  %30 = zext i16 %29 to i32
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_color_struct*, i32)* @png_write_PLTE to void (%struct.png_struct_def*, %struct.png_color_struct*, i32)*)(%struct.png_struct_def* noundef %23, %struct.png_color_struct* noundef %26, i32 noundef %30)
  br label %40

31:                                               ; preds = %14
  %32 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %32, i32 0, i32 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 3
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %38, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.511, i64 0, i64 0)) #13
  unreachable

39:                                               ; preds = %31
  br label %40

40:                                               ; preds = %39, %22
  %41 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 16
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %107

46:                                               ; preds = %40
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 17
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 524288
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %92

52:                                               ; preds = %46
  %53 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %54 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %58, label %92

58:                                               ; preds = %52
  %59 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %60 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %59, i32 0, i32 6
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  store i32 %62, i32* %7, align 4
  %63 = load i32, i32* %7, align 4
  %64 = icmp sgt i32 %63, 256
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  store i32 256, i32* %7, align 4
  br label %66

66:                                               ; preds = %65, %58
  store i32 0, i32* %6, align 4
  br label %67

67:                                               ; preds = %88, %66
  %68 = load i32, i32* %6, align 4
  %69 = load i32, i32* %7, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %91

71:                                               ; preds = %67
  %72 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %73 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %72, i32 0, i32 25
  %74 = load i8*, i8** %73, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = sub nsw i32 255, %79
  %81 = trunc i32 %80 to i8
  %82 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %83 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %82, i32 0, i32 25
  %84 = load i8*, i8** %83, align 8
  %85 = load i32, i32* %6, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  store i8 %81, i8* %87, align 1
  br label %88

88:                                               ; preds = %71
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %6, align 4
  br label %67, !llvm.loop !308

91:                                               ; preds = %67
  br label %92

92:                                               ; preds = %91, %52, %46
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %94 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %95 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %94, i32 0, i32 25
  %96 = load i8*, i8** %95, align 8
  %97 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %98 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %97, i32 0, i32 26
  %99 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %100 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %99, i32 0, i32 6
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %103, i32 0, i32 8
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  call void bitcast (void (%struct.png_struct_def.62*, i8*, %struct.png_color_16_struct*, i32, i32)* @png_write_tRNS to void (%struct.png_struct_def*, i8*, %struct.png_color_16_struct*, i32, i32)*)(%struct.png_struct_def* noundef %93, i8* noundef %96, %struct.png_color_16_struct* noundef %98, i32 noundef %102, i32 noundef %106)
  br label %107

107:                                              ; preds = %92, %40
  %108 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %109 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %108, i32 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 32
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %121

113:                                              ; preds = %107
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %115 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %116 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %115, i32 0, i32 27
  %117 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %118 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %117, i32 0, i32 8
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_color_16_struct*, i32)* @png_write_bKGD to void (%struct.png_struct_def*, %struct.png_color_16_struct*, i32)*)(%struct.png_struct_def* noundef %114, %struct.png_color_16_struct* noundef %116, i32 noundef %120)
  br label %121

121:                                              ; preds = %113, %107
  %122 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %123 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %122, i32 0, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 65536
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %121
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %129 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %130 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %129, i32 0, i32 35
  %131 = load i8*, i8** %130, align 8
  %132 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %133 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %132, i32 0, i32 34
  %134 = load i32, i32* %133, align 4
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i32)* @png_write_eXIf to void (%struct.png_struct_def*, i8*, i32)*)(%struct.png_struct_def* noundef %128, i8* noundef %131, i32 noundef %134)
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %135, i32 0, i32 15
  %137 = load i32, i32* %136, align 4
  %138 = or i32 %137, 16384
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %127, %121
  %140 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %141 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %140, i32 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = and i32 %142, 64
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %154

145:                                              ; preds = %139
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %147 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %148 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %147, i32 0, i32 37
  %149 = load i16*, i16** %148, align 8
  %150 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %151 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %150, i32 0, i32 5
  %152 = load i16, i16* %151, align 8
  %153 = zext i16 %152 to i32
  call void bitcast (void (%struct.png_struct_def.62*, i16*, i32)* @png_write_hIST to void (%struct.png_struct_def*, i16*, i32)*)(%struct.png_struct_def* noundef %146, i16* noundef %149, i32 noundef %153)
  br label %154

154:                                              ; preds = %145, %139
  %155 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %156 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %155, i32 0, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = and i32 %157, 256
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %154
  %161 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %162 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %163 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %162, i32 0, i32 28
  %164 = load i32, i32* %163, align 4
  %165 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %166 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %165, i32 0, i32 29
  %167 = load i32, i32* %166, align 8
  %168 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %169 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %168, i32 0, i32 30
  %170 = load i8, i8* %169, align 4
  %171 = zext i8 %170 to i32
  call void bitcast (void (%struct.png_struct_def.62*, i32, i32, i32)* @png_write_oFFs to void (%struct.png_struct_def*, i32, i32, i32)*)(%struct.png_struct_def* noundef %161, i32 noundef %164, i32 noundef %167, i32 noundef %171)
  br label %172

172:                                              ; preds = %160, %154
  %173 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %174 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %173, i32 0, i32 2
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 1024
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %203

178:                                              ; preds = %172
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %180 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %181 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %180, i32 0, i32 38
  %182 = load i8*, i8** %181, align 8
  %183 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %184 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %183, i32 0, i32 39
  %185 = load i32, i32* %184, align 8
  %186 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %187 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %186, i32 0, i32 40
  %188 = load i32, i32* %187, align 4
  %189 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %190 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %189, i32 0, i32 43
  %191 = load i8, i8* %190, align 8
  %192 = zext i8 %191 to i32
  %193 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %194 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %193, i32 0, i32 44
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %198 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %197, i32 0, i32 41
  %199 = load i8*, i8** %198, align 8
  %200 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %201 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %200, i32 0, i32 42
  %202 = load i8**, i8*** %201, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i32, i32, i32, i32, i8*, i8**)* @png_write_pCAL to void (%struct.png_struct_def*, i8*, i32, i32, i32, i32, i8*, i8**)*)(%struct.png_struct_def* noundef %179, i8* noundef %182, i32 noundef %185, i32 noundef %188, i32 noundef %192, i32 noundef %196, i8* noundef %199, i8** noundef %202)
  br label %203

203:                                              ; preds = %178, %172
  %204 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %205 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %204, i32 0, i32 2
  %206 = load i32, i32* %205, align 8
  %207 = and i32 %206, 16384
  %208 = icmp ne i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %203
  %210 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %211 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %212 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %211, i32 0, i32 50
  %213 = load i8, i8* %212, align 4
  %214 = zext i8 %213 to i32
  %215 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %216 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %215, i32 0, i32 51
  %217 = load i8*, i8** %216, align 8
  %218 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %219 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %218, i32 0, i32 52
  %220 = load i8*, i8** %219, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i32, i8*, i8*)* @png_write_sCAL_s to void (%struct.png_struct_def*, i32, i8*, i8*)*)(%struct.png_struct_def* noundef %210, i32 noundef %214, i8* noundef %217, i8* noundef %220)
  br label %221

221:                                              ; preds = %209, %203
  %222 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %223 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %222, i32 0, i32 2
  %224 = load i32, i32* %223, align 8
  %225 = and i32 %224, 128
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %239

227:                                              ; preds = %221
  %228 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %229 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %230 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %229, i32 0, i32 31
  %231 = load i32, i32* %230, align 8
  %232 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %233 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %232, i32 0, i32 32
  %234 = load i32, i32* %233, align 4
  %235 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %236 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %235, i32 0, i32 33
  %237 = load i8, i8* %236, align 8
  %238 = zext i8 %237 to i32
  call void bitcast (void (%struct.png_struct_def.62*, i32, i32, i32)* @png_write_pHYs to void (%struct.png_struct_def*, i32, i32, i32)*)(%struct.png_struct_def* noundef %228, i32 noundef %231, i32 noundef %234, i32 noundef %238)
  br label %239

239:                                              ; preds = %227, %221
  %240 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %241 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %240, i32 0, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 512
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %245, label %253

245:                                              ; preds = %239
  %246 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %247 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %248 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %247, i32 0, i32 23
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_time_struct*)* @png_write_tIME to void (%struct.png_struct_def*, %struct.png_time_struct*)*)(%struct.png_struct_def* noundef %246, %struct.png_time_struct* noundef %248)
  %249 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %250 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %249, i32 0, i32 15
  %251 = load i32, i32* %250, align 4
  %252 = or i32 %251, 512
  store i32 %252, i32* %250, align 4
  br label %253

253:                                              ; preds = %245, %239
  %254 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %255 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %254, i32 0, i32 2
  %256 = load i32, i32* %255, align 8
  %257 = and i32 %256, 8192
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %278

259:                                              ; preds = %253
  store i32 0, i32* %5, align 4
  br label %260

260:                                              ; preds = %274, %259
  %261 = load i32, i32* %5, align 4
  %262 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %263 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %262, i32 0, i32 49
  %264 = load i32, i32* %263, align 8
  %265 = icmp slt i32 %261, %264
  br i1 %265, label %266, label %277

266:                                              ; preds = %260
  %267 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %268 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %269 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %268, i32 0, i32 48
  %270 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %269, align 8
  %271 = load i32, i32* %5, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %270, i64 %272
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_sPLT_struct*)* @png_write_sPLT to void (%struct.png_struct_def*, %struct.png_sPLT_struct*)*)(%struct.png_struct_def* noundef %267, %struct.png_sPLT_struct* noundef %273)
  br label %274

274:                                              ; preds = %266
  %275 = load i32, i32* %5, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %5, align 4
  br label %260, !llvm.loop !309

277:                                              ; preds = %260
  br label %278

278:                                              ; preds = %277, %253
  store i32 0, i32* %5, align 4
  br label %279

279:                                              ; preds = %444, %278
  %280 = load i32, i32* %5, align 4
  %281 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %282 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %281, i32 0, i32 20
  %283 = load i32, i32* %282, align 4
  %284 = icmp slt i32 %280, %283
  br i1 %284, label %285, label %447

285:                                              ; preds = %279
  %286 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %287 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %286, i32 0, i32 22
  %288 = load %struct.png_text_struct*, %struct.png_text_struct** %287, align 8
  %289 = load i32, i32* %5, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %288, i64 %290
  %292 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %291, i32 0, i32 0
  %293 = load i32, i32* %292, align 8
  %294 = icmp sgt i32 %293, 0
  br i1 %294, label %295, label %363

295:                                              ; preds = %285
  %296 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %297 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %298 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %297, i32 0, i32 22
  %299 = load %struct.png_text_struct*, %struct.png_text_struct** %298, align 8
  %300 = load i32, i32* %5, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %299, i64 %301
  %303 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %302, i32 0, i32 0
  %304 = load i32, i32* %303, align 8
  %305 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %306 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %305, i32 0, i32 22
  %307 = load %struct.png_text_struct*, %struct.png_text_struct** %306, align 8
  %308 = load i32, i32* %5, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %307, i64 %309
  %311 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %310, i32 0, i32 1
  %312 = load i8*, i8** %311, align 8
  %313 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %314 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %313, i32 0, i32 22
  %315 = load %struct.png_text_struct*, %struct.png_text_struct** %314, align 8
  %316 = load i32, i32* %5, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %315, i64 %317
  %319 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %318, i32 0, i32 5
  %320 = load i8*, i8** %319, align 8
  %321 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %322 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %321, i32 0, i32 22
  %323 = load %struct.png_text_struct*, %struct.png_text_struct** %322, align 8
  %324 = load i32, i32* %5, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %323, i64 %325
  %327 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %326, i32 0, i32 6
  %328 = load i8*, i8** %327, align 8
  %329 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %330 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %329, i32 0, i32 22
  %331 = load %struct.png_text_struct*, %struct.png_text_struct** %330, align 8
  %332 = load i32, i32* %5, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %331, i64 %333
  %335 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %334, i32 0, i32 2
  %336 = load i8*, i8** %335, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i32, i8*, i8*, i8*, i8*)* @png_write_iTXt to void (%struct.png_struct_def*, i32, i8*, i8*, i8*, i8*)*)(%struct.png_struct_def* noundef %296, i32 noundef %304, i8* noundef %312, i8* noundef %320, i8* noundef %328, i8* noundef %336)
  %337 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %338 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %337, i32 0, i32 22
  %339 = load %struct.png_text_struct*, %struct.png_text_struct** %338, align 8
  %340 = load i32, i32* %5, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %339, i64 %341
  %343 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %342, i32 0, i32 0
  %344 = load i32, i32* %343, align 8
  %345 = icmp eq i32 %344, -1
  br i1 %345, label %346, label %354

346:                                              ; preds = %295
  %347 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %348 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %347, i32 0, i32 22
  %349 = load %struct.png_text_struct*, %struct.png_text_struct** %348, align 8
  %350 = load i32, i32* %5, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %349, i64 %351
  %353 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %352, i32 0, i32 0
  store i32 -3, i32* %353, align 8
  br label %362

354:                                              ; preds = %295
  %355 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %356 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %355, i32 0, i32 22
  %357 = load %struct.png_text_struct*, %struct.png_text_struct** %356, align 8
  %358 = load i32, i32* %5, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %357, i64 %359
  %361 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %360, i32 0, i32 0
  store i32 -2, i32* %361, align 8
  br label %362

362:                                              ; preds = %354, %346
  br label %443

363:                                              ; preds = %285
  %364 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %365 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %364, i32 0, i32 22
  %366 = load %struct.png_text_struct*, %struct.png_text_struct** %365, align 8
  %367 = load i32, i32* %5, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %366, i64 %368
  %370 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %369, i32 0, i32 0
  %371 = load i32, i32* %370, align 8
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %406

373:                                              ; preds = %363
  %374 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %375 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %376 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %375, i32 0, i32 22
  %377 = load %struct.png_text_struct*, %struct.png_text_struct** %376, align 8
  %378 = load i32, i32* %5, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %377, i64 %379
  %381 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %380, i32 0, i32 1
  %382 = load i8*, i8** %381, align 8
  %383 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %384 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %383, i32 0, i32 22
  %385 = load %struct.png_text_struct*, %struct.png_text_struct** %384, align 8
  %386 = load i32, i32* %5, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %385, i64 %387
  %389 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %388, i32 0, i32 2
  %390 = load i8*, i8** %389, align 8
  %391 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %392 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %391, i32 0, i32 22
  %393 = load %struct.png_text_struct*, %struct.png_text_struct** %392, align 8
  %394 = load i32, i32* %5, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %393, i64 %395
  %397 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %396, i32 0, i32 0
  %398 = load i32, i32* %397, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8*, i32)* @png_write_zTXt to void (%struct.png_struct_def*, i8*, i8*, i32)*)(%struct.png_struct_def* noundef %374, i8* noundef %382, i8* noundef %390, i32 noundef %398)
  %399 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %400 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %399, i32 0, i32 22
  %401 = load %struct.png_text_struct*, %struct.png_text_struct** %400, align 8
  %402 = load i32, i32* %5, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %401, i64 %403
  %405 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %404, i32 0, i32 0
  store i32 -2, i32* %405, align 8
  br label %442

406:                                              ; preds = %363
  %407 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %408 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %407, i32 0, i32 22
  %409 = load %struct.png_text_struct*, %struct.png_text_struct** %408, align 8
  %410 = load i32, i32* %5, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %409, i64 %411
  %413 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %412, i32 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = icmp eq i32 %414, -1
  br i1 %415, label %416, label %441

416:                                              ; preds = %406
  %417 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %418 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %419 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %418, i32 0, i32 22
  %420 = load %struct.png_text_struct*, %struct.png_text_struct** %419, align 8
  %421 = load i32, i32* %5, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %420, i64 %422
  %424 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %423, i32 0, i32 1
  %425 = load i8*, i8** %424, align 8
  %426 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %427 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %426, i32 0, i32 22
  %428 = load %struct.png_text_struct*, %struct.png_text_struct** %427, align 8
  %429 = load i32, i32* %5, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %428, i64 %430
  %432 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %431, i32 0, i32 2
  %433 = load i8*, i8** %432, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8*, i64)* @png_write_tEXt to void (%struct.png_struct_def*, i8*, i8*, i64)*)(%struct.png_struct_def* noundef %417, i8* noundef %425, i8* noundef %433, i64 noundef 0)
  %434 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %435 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %434, i32 0, i32 22
  %436 = load %struct.png_text_struct*, %struct.png_text_struct** %435, align 8
  %437 = load i32, i32* %5, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %436, i64 %438
  %440 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %439, i32 0, i32 0
  store i32 -3, i32* %440, align 8
  br label %441

441:                                              ; preds = %416, %406
  br label %442

442:                                              ; preds = %441, %373
  br label %443

443:                                              ; preds = %442, %362
  br label %444

444:                                              ; preds = %443
  %445 = load i32, i32* %5, align 4
  %446 = add nsw i32 %445, 1
  store i32 %446, i32* %5, align 4
  br label %279, !llvm.loop !310

447:                                              ; preds = %279
  %448 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %449 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @write_unknown_chunks(%struct.png_struct_def* noundef %448, %struct.png_info_def* noundef %449, i32 noundef 2)
  br label %450

450:                                              ; preds = %447, %13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_end(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_info_def*, align 8
  %5 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %4, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  br label %245

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 15
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %16, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3.512, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %9
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 54
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 53
  %23 = load i16, i16* %22, align 8
  %24 = zext i16 %23 to i32
  %25 = icmp sgt i32 %20, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_benign_error(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.513, i64 0, i64 0))
  br label %28

28:                                               ; preds = %26, %17
  %29 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %30 = icmp ne %struct.png_info_def* %29, null
  br i1 %30, label %31, label %239

31:                                               ; preds = %28
  %32 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %32, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 512
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %31
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 15
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 512
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %45 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %46 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %45, i32 0, i32 23
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_time_struct*)* @png_write_tIME to void (%struct.png_struct_def*, %struct.png_time_struct*)*)(%struct.png_struct_def* noundef %44, %struct.png_time_struct* noundef %46)
  br label %47

47:                                               ; preds = %43, %37, %31
  store i32 0, i32* %5, align 4
  br label %48

48:                                               ; preds = %213, %47
  %49 = load i32, i32* %5, align 4
  %50 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %51 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %50, i32 0, i32 20
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %49, %52
  br i1 %53, label %54, label %216

54:                                               ; preds = %48
  %55 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %56 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %55, i32 0, i32 22
  %57 = load %struct.png_text_struct*, %struct.png_text_struct** %56, align 8
  %58 = load i32, i32* %5, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %57, i64 %59
  %61 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %132

64:                                               ; preds = %54
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %66 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %67 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %66, i32 0, i32 22
  %68 = load %struct.png_text_struct*, %struct.png_text_struct** %67, align 8
  %69 = load i32, i32* %5, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %68, i64 %70
  %72 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %75 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %74, i32 0, i32 22
  %76 = load %struct.png_text_struct*, %struct.png_text_struct** %75, align 8
  %77 = load i32, i32* %5, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %76, i64 %78
  %80 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %79, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  %82 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %83 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %82, i32 0, i32 22
  %84 = load %struct.png_text_struct*, %struct.png_text_struct** %83, align 8
  %85 = load i32, i32* %5, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %84, i64 %86
  %88 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %87, i32 0, i32 5
  %89 = load i8*, i8** %88, align 8
  %90 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %91 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %90, i32 0, i32 22
  %92 = load %struct.png_text_struct*, %struct.png_text_struct** %91, align 8
  %93 = load i32, i32* %5, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %92, i64 %94
  %96 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %95, i32 0, i32 6
  %97 = load i8*, i8** %96, align 8
  %98 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %99 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %98, i32 0, i32 22
  %100 = load %struct.png_text_struct*, %struct.png_text_struct** %99, align 8
  %101 = load i32, i32* %5, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %100, i64 %102
  %104 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %103, i32 0, i32 2
  %105 = load i8*, i8** %104, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i32, i8*, i8*, i8*, i8*)* @png_write_iTXt to void (%struct.png_struct_def*, i32, i8*, i8*, i8*, i8*)*)(%struct.png_struct_def* noundef %65, i32 noundef %73, i8* noundef %81, i8* noundef %89, i8* noundef %97, i8* noundef %105)
  %106 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %107 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %106, i32 0, i32 22
  %108 = load %struct.png_text_struct*, %struct.png_text_struct** %107, align 8
  %109 = load i32, i32* %5, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %108, i64 %110
  %112 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %111, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %123

115:                                              ; preds = %64
  %116 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %117 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %116, i32 0, i32 22
  %118 = load %struct.png_text_struct*, %struct.png_text_struct** %117, align 8
  %119 = load i32, i32* %5, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %118, i64 %120
  %122 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %121, i32 0, i32 0
  store i32 -3, i32* %122, align 8
  br label %131

123:                                              ; preds = %64
  %124 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %125 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %124, i32 0, i32 22
  %126 = load %struct.png_text_struct*, %struct.png_text_struct** %125, align 8
  %127 = load i32, i32* %5, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %126, i64 %128
  %130 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %129, i32 0, i32 0
  store i32 -2, i32* %130, align 8
  br label %131

131:                                              ; preds = %123, %115
  br label %212

132:                                              ; preds = %54
  %133 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %134 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %133, i32 0, i32 22
  %135 = load %struct.png_text_struct*, %struct.png_text_struct** %134, align 8
  %136 = load i32, i32* %5, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %135, i64 %137
  %139 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp sge i32 %140, 0
  br i1 %141, label %142, label %175

142:                                              ; preds = %132
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %144 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %145 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %144, i32 0, i32 22
  %146 = load %struct.png_text_struct*, %struct.png_text_struct** %145, align 8
  %147 = load i32, i32* %5, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %146, i64 %148
  %150 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %149, i32 0, i32 1
  %151 = load i8*, i8** %150, align 8
  %152 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %153 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %152, i32 0, i32 22
  %154 = load %struct.png_text_struct*, %struct.png_text_struct** %153, align 8
  %155 = load i32, i32* %5, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %154, i64 %156
  %158 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %157, i32 0, i32 2
  %159 = load i8*, i8** %158, align 8
  %160 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %161 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %160, i32 0, i32 22
  %162 = load %struct.png_text_struct*, %struct.png_text_struct** %161, align 8
  %163 = load i32, i32* %5, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %162, i64 %164
  %166 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %165, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8*, i32)* @png_write_zTXt to void (%struct.png_struct_def*, i8*, i8*, i32)*)(%struct.png_struct_def* noundef %143, i8* noundef %151, i8* noundef %159, i32 noundef %167)
  %168 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %169 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %168, i32 0, i32 22
  %170 = load %struct.png_text_struct*, %struct.png_text_struct** %169, align 8
  %171 = load i32, i32* %5, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %170, i64 %172
  %174 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %173, i32 0, i32 0
  store i32 -2, i32* %174, align 8
  br label %211

175:                                              ; preds = %132
  %176 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %177 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %176, i32 0, i32 22
  %178 = load %struct.png_text_struct*, %struct.png_text_struct** %177, align 8
  %179 = load i32, i32* %5, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %178, i64 %180
  %182 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %181, i32 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = icmp eq i32 %183, -1
  br i1 %184, label %185, label %210

185:                                              ; preds = %175
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %187 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %188 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %187, i32 0, i32 22
  %189 = load %struct.png_text_struct*, %struct.png_text_struct** %188, align 8
  %190 = load i32, i32* %5, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %189, i64 %191
  %193 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %192, i32 0, i32 1
  %194 = load i8*, i8** %193, align 8
  %195 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %196 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %195, i32 0, i32 22
  %197 = load %struct.png_text_struct*, %struct.png_text_struct** %196, align 8
  %198 = load i32, i32* %5, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %197, i64 %199
  %201 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %200, i32 0, i32 2
  %202 = load i8*, i8** %201, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i8*, i64)* @png_write_tEXt to void (%struct.png_struct_def*, i8*, i8*, i64)*)(%struct.png_struct_def* noundef %186, i8* noundef %194, i8* noundef %202, i64 noundef 0)
  %203 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %204 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %203, i32 0, i32 22
  %205 = load %struct.png_text_struct*, %struct.png_text_struct** %204, align 8
  %206 = load i32, i32* %5, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %205, i64 %207
  %209 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %208, i32 0, i32 0
  store i32 -3, i32* %209, align 8
  br label %210

210:                                              ; preds = %185, %175
  br label %211

211:                                              ; preds = %210, %142
  br label %212

212:                                              ; preds = %211, %131
  br label %213

213:                                              ; preds = %212
  %214 = load i32, i32* %5, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %5, align 4
  br label %48, !llvm.loop !311

216:                                              ; preds = %48
  %217 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %218 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %217, i32 0, i32 2
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 65536
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %236

222:                                              ; preds = %216
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %223, i32 0, i32 15
  %225 = load i32, i32* %224, align 4
  %226 = and i32 %225, 16384
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %236

228:                                              ; preds = %222
  %229 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %230 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %231 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %230, i32 0, i32 35
  %232 = load i8*, i8** %231, align 8
  %233 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  %234 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %233, i32 0, i32 34
  %235 = load i32, i32* %234, align 4
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i32)* @png_write_eXIf to void (%struct.png_struct_def*, i8*, i32)*)(%struct.png_struct_def* noundef %229, i8* noundef %232, i32 noundef %235)
  br label %236

236:                                              ; preds = %228, %222, %216
  %237 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %238 = load %struct.png_info_def*, %struct.png_info_def** %4, align 8
  call void @write_unknown_chunks(%struct.png_struct_def* noundef %237, %struct.png_info_def* noundef %238, i32 noundef 8)
  br label %239

239:                                              ; preds = %236, %28
  %240 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %241 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %240, i32 0, i32 15
  %242 = load i32, i32* %241, align 4
  %243 = or i32 %242, 8
  store i32 %243, i32* %241, align 4
  %244 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_IEND to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %244)
  br label %245

245:                                              ; preds = %239, %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_convert_from_struct_tm(%struct.png_time_struct* noundef %0, %struct.tm* noundef %1) #0 {
  %3 = alloca %struct.png_time_struct*, align 8
  %4 = alloca %struct.tm*, align 8
  store %struct.png_time_struct* %0, %struct.png_time_struct** %3, align 8
  store %struct.tm* %1, %struct.tm** %4, align 8
  %5 = load %struct.tm*, %struct.tm** %4, align 8
  %6 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 1900, %7
  %9 = trunc i32 %8 to i16
  %10 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %11 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %10, i32 0, i32 0
  store i16 %9, i16* %11, align 2
  %12 = load %struct.tm*, %struct.tm** %4, align 8
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  %16 = trunc i32 %15 to i8
  %17 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %18 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %17, i32 0, i32 1
  store i8 %16, i8* %18, align 2
  %19 = load %struct.tm*, %struct.tm** %4, align 8
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = trunc i32 %21 to i8
  %23 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %24 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %23, i32 0, i32 2
  store i8 %22, i8* %24, align 1
  %25 = load %struct.tm*, %struct.tm** %4, align 8
  %26 = getelementptr inbounds %struct.tm, %struct.tm* %25, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i8
  %29 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %30 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %29, i32 0, i32 3
  store i8 %28, i8* %30, align 2
  %31 = load %struct.tm*, %struct.tm** %4, align 8
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = trunc i32 %33 to i8
  %35 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %36 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %35, i32 0, i32 4
  store i8 %34, i8* %36, align 1
  %37 = load %struct.tm*, %struct.tm** %4, align 8
  %38 = getelementptr inbounds %struct.tm, %struct.tm* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = trunc i32 %39 to i8
  %41 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %42 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %41, i32 0, i32 5
  store i8 %40, i8* %42, align 2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_convert_from_time_t(%struct.png_time_struct* noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.png_time_struct*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm*, align 8
  store %struct.png_time_struct* %0, %struct.png_time_struct** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = call %struct.tm* @gmtime(i64* noundef %4) #16
  store %struct.tm* %6, %struct.tm** %5, align 8
  %7 = load %struct.tm*, %struct.tm** %5, align 8
  %8 = icmp eq %struct.tm* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %11 = bitcast %struct.png_time_struct* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %11, i8 0, i64 8, i1 false)
  br label %15

12:                                               ; preds = %2
  %13 = load %struct.png_time_struct*, %struct.png_time_struct** %3, align 8
  %14 = load %struct.tm*, %struct.tm** %5, align 8
  call void @png_convert_from_struct_tm(%struct.png_time_struct* noundef %13, %struct.tm* noundef %14)
  br label %15

15:                                               ; preds = %12, %9
  ret void
}

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64* noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define noalias %struct.png_struct_def* @png_create_write_struct(i8* noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*)* noundef %2, void (%struct.png_struct_def*, i8*)* noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %8 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %7, align 8
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %7, align 8
  %12 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %8, align 8
  %13 = call noalias %struct.png_struct_def* @png_create_write_struct_2(i8* noundef %9, i8* noundef %10, void (%struct.png_struct_def*, i8*)* noundef %11, void (%struct.png_struct_def*, i8*)* noundef %12, i8* noundef null, i8* (%struct.png_struct_def*, i64)* noundef null, void (%struct.png_struct_def*, i8*)* noundef null)
  ret %struct.png_struct_def* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define noalias %struct.png_struct_def* @png_create_write_struct_2(i8* noundef %0, i8* noundef %1, void (%struct.png_struct_def*, i8*)* noundef %2, void (%struct.png_struct_def*, i8*)* noundef %3, i8* noundef %4, i8* (%struct.png_struct_def*, i64)* noundef %5, void (%struct.png_struct_def*, i8*)* noundef %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %11 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8* (%struct.png_struct_def*, i64)*, align 8
  %14 = alloca void (%struct.png_struct_def*, i8*)*, align 8
  %15 = alloca %struct.png_struct_def*, align 8
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %10, align 8
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %11, align 8
  store i8* %4, i8** %12, align 8
  store i8* (%struct.png_struct_def*, i64)* %5, i8* (%struct.png_struct_def*, i64)** %13, align 8
  store void (%struct.png_struct_def*, i8*)* %6, void (%struct.png_struct_def*, i8*)** %14, align 8
  %16 = load i8*, i8** %8, align 8
  %17 = load i8*, i8** %9, align 8
  %18 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %10, align 8
  %19 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %11, align 8
  %20 = load i8*, i8** %12, align 8
  %21 = load i8* (%struct.png_struct_def*, i64)*, i8* (%struct.png_struct_def*, i64)** %13, align 8
  %22 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %14, align 8
  %23 = call noalias %struct.png_struct_def* @png_create_png_struct(i8* noundef %16, i8* noundef %17, void (%struct.png_struct_def*, i8*)* noundef %18, void (%struct.png_struct_def*, i8*)* noundef %19, i8* noundef %20, i8* (%struct.png_struct_def*, i64)* noundef %21, void (%struct.png_struct_def*, i8*)* noundef %22)
  store %struct.png_struct_def* %23, %struct.png_struct_def** %15, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %25 = icmp ne %struct.png_struct_def* %24, null
  br i1 %25, label %26, label %54

26:                                               ; preds = %7
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 21
  store i32 8192, i32* %28, align 8
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 26
  store i32 1, i32* %30, align 4
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 22
  store i32 -1, i32* %32, align 4
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 25
  store i32 8, i32* %34, align 8
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 24
  store i32 15, i32* %36, align 4
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 23
  store i32 8, i32* %38, align 8
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 31
  store i32 0, i32* %40, align 8
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 27
  store i32 -1, i32* %42, align 8
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 30
  store i32 8, i32* %44, align 4
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 29
  store i32 15, i32* %46, align 8
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 28
  store i32 8, i32* %48, align 4
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 16
  %51 = load i32, i32* %50, align 8
  %52 = or i32 %51, 2097152
  store i32 %52, i32* %50, align 8
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  call void @png_set_write_fn(%struct.png_struct_def* noundef %53, i8* noundef null, void (%struct.png_struct_def*, i8*, i64)* noundef null, void (%struct.png_struct_def*)* noundef null)
  br label %54

54:                                               ; preds = %26, %7
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %15, align 8
  ret %struct.png_struct_def* %55
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_rows(%struct.png_struct_def* noalias noundef %0, i8** noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %27

12:                                               ; preds = %3
  store i32 0, i32* %7, align 4
  %13 = load i8**, i8*** %5, align 8
  store i8** %13, i8*** %8, align 8
  br label %14

14:                                               ; preds = %22, %12
  %15 = load i32, i32* %7, align 4
  %16 = load i32, i32* %6, align 4
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %20 = load i8**, i8*** %8, align 8
  %21 = load i8*, i8** %20, align 8
  call void @png_write_row(%struct.png_struct_def* noundef %19, i8* noundef %21)
  br label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %7, align 4
  %25 = load i8**, i8*** %8, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i32 1
  store i8** %26, i8*** %8, align 8
  br label %14, !llvm.loop !312

27:                                               ; preds = %11, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_row(%struct.png_struct_def* noalias noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.png_row_info_struct, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  br label %292

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 43
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %9
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 59
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %14
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 15
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1024
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %27, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5.514, i64 0, i64 0)) #13
  unreachable

28:                                               ; preds = %20
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_start_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %29)
  br label %30

30:                                               ; preds = %28, %14, %9
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 58
  %33 = load i8, i8* %32, align 4
  %34 = zext i8 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %127

36:                                               ; preds = %30
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 17
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 2
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %127

42:                                               ; preds = %36
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 59
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  switch i32 %46, label %125 [
    i32 0, label %47
    i32 1, label %56
    i32 2, label %70
    i32 3, label %79
    i32 4, label %93
    i32 5, label %102
    i32 6, label %116
  ]

47:                                               ; preds = %42
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 43
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 7
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %54)
  br label %292

55:                                               ; preds = %47
  br label %126

56:                                               ; preds = %42
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 43
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 7
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 37
  %65 = load i32, i32* %64, align 8
  %66 = icmp ult i32 %65, 5
  br i1 %66, label %67, label %69

67:                                               ; preds = %62, %56
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %68)
  br label %292

69:                                               ; preds = %62
  br label %126

70:                                               ; preds = %42
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 43
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 7
  %75 = icmp ne i32 %74, 4
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %77)
  br label %292

78:                                               ; preds = %70
  br label %126

79:                                               ; preds = %42
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 43
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 3
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 37
  %88 = load i32, i32* %87, align 8
  %89 = icmp ult i32 %88, 3
  br i1 %89, label %90, label %92

90:                                               ; preds = %85, %79
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %91)
  br label %292

92:                                               ; preds = %85
  br label %126

93:                                               ; preds = %42
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 43
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 3
  %98 = icmp ne i32 %97, 2
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %100)
  br label %292

101:                                              ; preds = %93
  br label %126

102:                                              ; preds = %42
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %104 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 43
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 1
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 37
  %111 = load i32, i32* %110, align 8
  %112 = icmp ult i32 %111, 2
  br i1 %112, label %113, label %115

113:                                              ; preds = %108, %102
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %114)
  br label %292

115:                                              ; preds = %108
  br label %126

116:                                              ; preds = %42
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 43
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %123)
  br label %292

124:                                              ; preds = %116
  br label %126

125:                                              ; preds = %42
  br label %126

126:                                              ; preds = %125, %124, %115, %101, %92, %78, %69, %55
  br label %127

127:                                              ; preds = %126, %36, %30
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 61
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 2
  store i8 %130, i8* %131, align 8
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 40
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 0
  store i32 %134, i32* %135, align 8
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 66
  %138 = load i8, i8* %137, align 4
  %139 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 4
  store i8 %138, i8* %139, align 2
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 63
  %142 = load i8, i8* %141, align 1
  %143 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 3
  store i8 %142, i8* %143, align 1
  %144 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 3
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 4
  %148 = load i8, i8* %147, align 2
  %149 = zext i8 %148 to i32
  %150 = mul nsw i32 %146, %149
  %151 = trunc i32 %150 to i8
  %152 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 5
  store i8 %151, i8* %152, align 1
  %153 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 5
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp sge i32 %155, 8
  br i1 %156, label %157, label %166

157:                                              ; preds = %127
  %158 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 5
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i64
  %164 = lshr i64 %163, 3
  %165 = mul i64 %160, %164
  br label %176

166:                                              ; preds = %127
  %167 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 5
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = mul i64 %169, %172
  %174 = add i64 %173, 7
  %175 = lshr i64 %174, 3
  br label %176

176:                                              ; preds = %166, %157
  %177 = phi i64 [ %165, %157 ], [ %175, %166 ]
  %178 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 1
  store i64 %177, i64* %178, align 8
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %180 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %179, i32 0, i32 46
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 1
  %183 = load i8*, i8** %4, align 8
  %184 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* align 1 %183, i64 %185, i1 false)
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %187 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %186, i32 0, i32 58
  %188 = load i8, i8* %187, align 4
  %189 = zext i8 %188 to i32
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %191, label %218

191:                                              ; preds = %176
  %192 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %193 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %192, i32 0, i32 59
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp slt i32 %195, 6
  br i1 %196, label %197, label %218

197:                                              ; preds = %191
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %198, i32 0, i32 17
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 2
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %218

203:                                              ; preds = %197
  %204 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %205 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %204, i32 0, i32 46
  %206 = load i8*, i8** %205, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 1
  %208 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %208, i32 0, i32 59
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  call void @png_do_write_interlace(%struct.png_row_info_struct* noundef %5, i8* noundef %207, i32 noundef %211)
  %212 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 0
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %203
  %216 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_write_finish_row to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %216)
  br label %292

217:                                              ; preds = %203
  br label %218

218:                                              ; preds = %217, %197, %191, %176
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %219, i32 0, i32 17
  %221 = load i32, i32* %220, align 4
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %218
  %224 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_do_write_transformations(%struct.png_struct_def* noundef %224, %struct.png_row_info_struct* noundef %5)
  br label %225

225:                                              ; preds = %223, %218
  %226 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 5
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %230 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %229, i32 0, i32 64
  %231 = load i8, i8* %230, align 2
  %232 = zext i8 %231 to i32
  %233 = icmp ne i32 %228, %232
  br i1 %233, label %243, label %234

234:                                              ; preds = %225
  %235 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 5
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %239 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %238, i32 0, i32 69
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp ne i32 %237, %241
  br i1 %242, label %243, label %245

243:                                              ; preds = %234, %225
  %244 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_error(%struct.png_struct_def* noundef %244, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.515, i64 0, i64 0)) #13
  unreachable

245:                                              ; preds = %234
  %246 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %247 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %246, i32 0, i32 123
  %248 = load i32, i32* %247, align 8
  %249 = and i32 %248, 4
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %251, label %262

251:                                              ; preds = %245
  %252 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %253 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %252, i32 0, i32 124
  %254 = load i8, i8* %253, align 4
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 64
  br i1 %256, label %257, label %262

257:                                              ; preds = %251
  %258 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %259 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %258, i32 0, i32 46
  %260 = load i8*, i8** %259, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 1
  call void @png_do_write_intrapixel(%struct.png_row_info_struct* noundef %5, i8* noundef %261)
  br label %262

262:                                              ; preds = %257, %251, %245
  %263 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 2
  %264 = load i8, i8* %263, align 8
  %265 = zext i8 %264 to i32
  %266 = icmp eq i32 %265, 3
  br i1 %266, label %267, label %274

267:                                              ; preds = %262
  %268 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %269 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %268, i32 0, i32 54
  %270 = load i32, i32* %269, align 4
  %271 = icmp sge i32 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %267
  %273 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.205*, %struct.png_row_info_struct*)* @png_do_check_palette_indexes to void (%struct.png_struct_def*, %struct.png_row_info_struct*)*)(%struct.png_struct_def* noundef %273, %struct.png_row_info_struct* noundef %5)
  br label %274

274:                                              ; preds = %272, %267, %262
  %275 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_row_info_struct*)* @png_write_find_filter to void (%struct.png_struct_def*, %struct.png_row_info_struct*)*)(%struct.png_struct_def* noundef %275, %struct.png_row_info_struct* noundef %5)
  %276 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %277 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %276, i32 0, i32 92
  %278 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %277, align 8
  %279 = icmp ne void (%struct.png_struct_def*, i32, i32)* %278, null
  br i1 %279, label %280, label %292

280:                                              ; preds = %274
  %281 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %282 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %281, i32 0, i32 92
  %283 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %282, align 8
  %284 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %285 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %286 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %285, i32 0, i32 43
  %287 = load i32, i32* %286, align 4
  %288 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %289 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %288, i32 0, i32 59
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  call void %283(%struct.png_struct_def* noundef %284, i32 noundef %287, i32 noundef %291)
  br label %292

292:                                              ; preds = %8, %53, %67, %76, %90, %99, %113, %122, %215, %280, %274
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_write_intrapixel(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 2
  %18 = load i8, i8* %17, align 8
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 2
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %181

22:                                               ; preds = %2
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %24 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %6, align 4
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %27 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 8
  br i1 %30, label %31, label %84

31:                                               ; preds = %22
  %32 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %33 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %32, i32 0, i32 2
  %34 = load i8, i8* %33, align 8
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  store i32 3, i32* %5, align 4
  br label %47

38:                                               ; preds = %31
  %39 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %40 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %39, i32 0, i32 2
  %41 = load i8, i8* %40, align 8
  %42 = zext i8 %41 to i32
  %43 = icmp eq i32 %42, 6
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 4, i32* %5, align 4
  br label %46

45:                                               ; preds = %38
  br label %181

46:                                               ; preds = %44
  br label %47

47:                                               ; preds = %46, %37
  store i32 0, i32* %8, align 4
  %48 = load i8*, i8** %4, align 8
  store i8* %48, i8** %7, align 8
  br label %49

49:                                               ; preds = %76, %47
  %50 = load i32, i32* %8, align 4
  %51 = load i32, i32* %6, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %83

53:                                               ; preds = %49
  %54 = load i8*, i8** %7, align 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = load i8*, i8** %7, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = sub nsw i32 %56, %60
  %62 = trunc i32 %61 to i8
  %63 = load i8*, i8** %7, align 8
  store i8 %62, i8* %63, align 1
  %64 = load i8*, i8** %7, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 2
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = load i8*, i8** %7, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 %67, %71
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %7, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 2
  store i8 %73, i8* %75, align 1
  br label %76

76:                                               ; preds = %53
  %77 = load i32, i32* %8, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %8, align 4
  %79 = load i32, i32* %5, align 4
  %80 = load i8*, i8** %7, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  store i8* %82, i8** %7, align 8
  br label %49, !llvm.loop !313

83:                                               ; preds = %49
  br label %180

84:                                               ; preds = %22
  %85 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %86 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %85, i32 0, i32 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp eq i32 %88, 16
  br i1 %89, label %90, label %179

90:                                               ; preds = %84
  %91 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %92 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %91, i32 0, i32 2
  %93 = load i8, i8* %92, align 8
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 2
  br i1 %95, label %96, label %97

96:                                               ; preds = %90
  store i32 6, i32* %5, align 4
  br label %106

97:                                               ; preds = %90
  %98 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %99 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %98, i32 0, i32 2
  %100 = load i8, i8* %99, align 8
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 6
  br i1 %102, label %103, label %104

103:                                              ; preds = %97
  store i32 8, i32* %5, align 4
  br label %105

104:                                              ; preds = %97
  br label %181

105:                                              ; preds = %103
  br label %106

106:                                              ; preds = %105, %96
  store i32 0, i32* %10, align 4
  %107 = load i8*, i8** %4, align 8
  store i8* %107, i8** %9, align 8
  br label %108

108:                                              ; preds = %171, %106
  %109 = load i32, i32* %10, align 4
  %110 = load i32, i32* %6, align 4
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %112, label %178

112:                                              ; preds = %108
  %113 = load i8*, i8** %9, align 8
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl i32 %115, 8
  %117 = load i8*, i8** %9, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %116, %120
  store i32 %121, i32* %11, align 4
  %122 = load i8*, i8** %9, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 2
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl i32 %125, 8
  %127 = load i8*, i8** %9, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = or i32 %126, %130
  store i32 %131, i32* %12, align 4
  %132 = load i8*, i8** %9, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 4
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = shl i32 %135, 8
  %137 = load i8*, i8** %9, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 5
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = or i32 %136, %140
  store i32 %141, i32* %13, align 4
  %142 = load i32, i32* %11, align 4
  %143 = load i32, i32* %12, align 4
  %144 = sub i32 %142, %143
  %145 = zext i32 %144 to i64
  %146 = and i64 %145, 65535
  %147 = trunc i64 %146 to i32
  store i32 %147, i32* %14, align 4
  %148 = load i32, i32* %13, align 4
  %149 = load i32, i32* %12, align 4
  %150 = sub i32 %148, %149
  %151 = zext i32 %150 to i64
  %152 = and i64 %151, 65535
  %153 = trunc i64 %152 to i32
  store i32 %153, i32* %15, align 4
  %154 = load i32, i32* %14, align 4
  %155 = lshr i32 %154, 8
  %156 = trunc i32 %155 to i8
  %157 = load i8*, i8** %9, align 8
  store i8 %156, i8* %157, align 1
  %158 = load i32, i32* %14, align 4
  %159 = trunc i32 %158 to i8
  %160 = load i8*, i8** %9, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  store i8 %159, i8* %161, align 1
  %162 = load i32, i32* %15, align 4
  %163 = lshr i32 %162, 8
  %164 = trunc i32 %163 to i8
  %165 = load i8*, i8** %9, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 4
  store i8 %164, i8* %166, align 1
  %167 = load i32, i32* %15, align 4
  %168 = trunc i32 %167 to i8
  %169 = load i8*, i8** %9, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 5
  store i8 %168, i8* %170, align 1
  br label %171

171:                                              ; preds = %112
  %172 = load i32, i32* %10, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %10, align 4
  %174 = load i32, i32* %5, align 4
  %175 = load i8*, i8** %9, align 8
  %176 = sext i32 %174 to i64
  %177 = getelementptr inbounds i8, i8* %175, i64 %176
  store i8* %177, i8** %9, align 8
  br label %108, !llvm.loop !314

178:                                              ; preds = %108
  br label %179

179:                                              ; preds = %178, %84
  br label %180

180:                                              ; preds = %179, %83
  br label %181

181:                                              ; preds = %45, %104, %180, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_image(%struct.png_struct_def* noalias noundef %0, i8** noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i8** %1, i8*** %4, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  br label %40

12:                                               ; preds = %2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %14 = call i32 bitcast (i32 (%struct.png_struct_def.205*)* @png_set_interlace_handling to i32 (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %13)
  store i32 %14, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %15

15:                                               ; preds = %37, %12
  %16 = load i32, i32* %6, align 4
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %40

19:                                               ; preds = %15
  store i32 0, i32* %5, align 4
  %20 = load i8**, i8*** %4, align 8
  store i8** %20, i8*** %8, align 8
  br label %21

21:                                               ; preds = %31, %19
  %22 = load i32, i32* %5, align 4
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 38
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %22, %25
  br i1 %26, label %27, label %36

27:                                               ; preds = %21
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %29 = load i8**, i8*** %8, align 8
  %30 = load i8*, i8** %29, align 8
  call void @png_write_row(%struct.png_struct_def* noundef %28, i8* noundef %30)
  br label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %5, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %5, align 4
  %34 = load i8**, i8*** %8, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i32 1
  store i8** %35, i8*** %8, align 8
  br label %21, !llvm.loop !315

36:                                               ; preds = %21
  br label %37

37:                                               ; preds = %36
  %38 = load i32, i32* %6, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %6, align 4
  br label %15, !llvm.loop !316

40:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_flush(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %18

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  br label %14

12:                                               ; preds = %8
  %13 = load i32, i32* %4, align 4
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 0, %11 ], [ %13, %12 ]
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 77
  store i32 %15, i32* %17, align 8
  br label %18

18:                                               ; preds = %14, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_flush(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = icmp eq %struct.png_struct_def* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %20

6:                                                ; preds = %1
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 43
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 39
  %12 = load i32, i32* %11, align 8
  %13 = icmp uge i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  br label %20

15:                                               ; preds = %6
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*, i64, i32)* @png_compress_IDAT to void (%struct.png_struct_def*, i8*, i64, i32)*)(%struct.png_struct_def* noundef %16, i8* noundef null, i64 noundef 0, i32 noundef 2)
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 78
  store i32 0, i32* %18, align 4
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  call void @png_flush(%struct.png_struct_def* noundef %19)
  br label %20

20:                                               ; preds = %15, %14, %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_destroy_write_struct(%struct.png_struct_def** noundef %0, %struct.png_info_def** noundef %1) #0 {
  %3 = alloca %struct.png_struct_def**, align 8
  %4 = alloca %struct.png_info_def**, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def** %0, %struct.png_struct_def*** %3, align 8
  store %struct.png_info_def** %1, %struct.png_info_def*** %4, align 8
  %6 = load %struct.png_struct_def**, %struct.png_struct_def*** %3, align 8
  %7 = icmp ne %struct.png_struct_def** %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def**, %struct.png_struct_def*** %3, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  store %struct.png_struct_def* %10, %struct.png_struct_def** %5, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %12 = icmp ne %struct.png_struct_def* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %15 = load %struct.png_info_def**, %struct.png_info_def*** %4, align 8
  call void @png_destroy_info_struct(%struct.png_struct_def* noundef %14, %struct.png_info_def** noundef %15)
  %16 = load %struct.png_struct_def**, %struct.png_struct_def*** %3, align 8
  store %struct.png_struct_def* null, %struct.png_struct_def** %16, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_write_destroy(%struct.png_struct_def* noundef %17)
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.62*)* @png_destroy_png_struct to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %18)
  br label %19

19:                                               ; preds = %13, %8
  br label %20

20:                                               ; preds = %19, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_write_destroy(%struct.png_struct_def* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 19
  %11 = call i32 @deflateEnd(%struct.z_stream_s* noundef %10)
  br label %12

12:                                               ; preds = %8, %1
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 20
  call void bitcast (void (%struct.png_struct_def.62*, %struct.png_compression_buffer**)* @png_free_buffer_list to void (%struct.png_struct_def*, %struct.png_compression_buffer**)*)(%struct.png_struct_def* noundef %13, %struct.png_compression_buffer** noundef %15)
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 46
  %19 = load i8*, i8** %18, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %16, i8* noundef %19)
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 46
  store i8* null, i8** %21, align 8
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 45
  %25 = load i8*, i8** %24, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %22, i8* noundef %25)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 47
  %29 = load i8*, i8** %28, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %26, i8* noundef %29)
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 48
  %33 = load i8*, i8** %32, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %30, i8* noundef %33)
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 45
  store i8* null, i8** %35, align 8
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 47
  store i8* null, i8** %37, align 8
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 48
  store i8* null, i8** %39, align 8
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 117
  %43 = load i8*, i8** %42, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %40, i8* noundef %43)
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 117
  store i8* null, i8** %45, align 8
  ret void
}

declare i32 @deflateEnd(%struct.z_stream_s* noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_filter(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %194

12:                                               ; preds = %3
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 123
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = load i32, i32* %5, align 4
  %20 = icmp eq i32 %19, 64
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store i32 0, i32* %5, align 4
  br label %22

22:                                               ; preds = %21, %18, %12
  %23 = load i32, i32* %5, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %192

25:                                               ; preds = %22
  %26 = load i32, i32* %6, align 4
  %27 = and i32 %26, 255
  switch i32 %27, label %45 [
    i32 5, label %28
    i32 6, label %28
    i32 7, label %28
    i32 0, label %30
    i32 1, label %33
    i32 2, label %36
    i32 3, label %39
    i32 4, label %42
  ]

28:                                               ; preds = %25, %25, %25
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %29, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.518, i64 0, i64 0))
  br label %30

30:                                               ; preds = %25, %28
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 60
  store i8 8, i8* %32, align 2
  br label %50

33:                                               ; preds = %25
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 60
  store i8 16, i8* %35, align 2
  br label %50

36:                                               ; preds = %25
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 60
  store i8 32, i8* %38, align 2
  br label %50

39:                                               ; preds = %25
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 60
  store i8 64, i8* %41, align 2
  br label %50

42:                                               ; preds = %25
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 60
  store i8 -128, i8* %44, align 2
  br label %50

45:                                               ; preds = %25
  %46 = load i32, i32* %6, align 4
  %47 = trunc i32 %46 to i8
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 60
  store i8 %47, i8* %49, align 2
  br label %50

50:                                               ; preds = %45, %42, %39, %36, %33, %30
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 46
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %187

55:                                               ; preds = %50
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 38
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = load i32, i32* %6, align 4
  %62 = and i32 %61, -225
  store i32 %62, i32* %6, align 4
  br label %63

63:                                               ; preds = %60, %55
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 37
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = load i32, i32* %6, align 4
  %70 = and i32 %69, -209
  store i32 %70, i32* %6, align 4
  br label %71

71:                                               ; preds = %68, %63
  %72 = load i32, i32* %6, align 4
  %73 = and i32 %72, 224
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %84

75:                                               ; preds = %71
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 45
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_app_warning(%struct.png_struct_def* noundef %81, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8.519, i64 0, i64 0))
  %82 = load i32, i32* %6, align 4
  %83 = and i32 %82, -225
  store i32 %83, i32* %6, align 4
  br label %84

84:                                               ; preds = %80, %75, %71
  store i32 0, i32* %7, align 4
  %85 = load i32, i32* %6, align 4
  %86 = and i32 %85, 16
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = load i32, i32* %7, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %7, align 4
  br label %91

91:                                               ; preds = %88, %84
  %92 = load i32, i32* %6, align 4
  %93 = and i32 %92, 32
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %91
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  br label %98

98:                                               ; preds = %95, %91
  %99 = load i32, i32* %6, align 4
  %100 = and i32 %99, 64
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %98
  %103 = load i32, i32* %7, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %7, align 4
  br label %105

105:                                              ; preds = %102, %98
  %106 = load i32, i32* %6, align 4
  %107 = and i32 %106, 128
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  %110 = load i32, i32* %7, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %7, align 4
  br label %112

112:                                              ; preds = %109, %105
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 66
  %115 = load i8, i8* %114, align 4
  %116 = zext i8 %115 to i32
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 63
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = mul nsw i32 %116, %120
  %122 = icmp sge i32 %121, 8
  br i1 %122, label %123, label %140

123:                                              ; preds = %112
  %124 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %124, i32 0, i32 37
  %126 = load i32, i32* %125, align 8
  %127 = zext i32 %126 to i64
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 66
  %130 = load i8, i8* %129, align 4
  %131 = zext i8 %130 to i32
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 63
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = mul nsw i32 %131, %135
  %137 = sext i32 %136 to i64
  %138 = lshr i64 %137, 3
  %139 = mul i64 %127, %138
  br label %158

140:                                              ; preds = %112
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 37
  %143 = load i32, i32* %142, align 8
  %144 = zext i32 %143 to i64
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %146 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 66
  %147 = load i8, i8* %146, align 4
  %148 = zext i8 %147 to i32
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 63
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = mul nsw i32 %148, %152
  %154 = sext i32 %153 to i64
  %155 = mul i64 %144, %154
  %156 = add i64 %155, 7
  %157 = lshr i64 %156, 3
  br label %158

158:                                              ; preds = %140, %123
  %159 = phi i64 [ %139, %123 ], [ %157, %140 ]
  %160 = add i64 %159, 1
  store i64 %160, i64* %8, align 8
  %161 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %162 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %161, i32 0, i32 47
  %163 = load i8*, i8** %162, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %171

165:                                              ; preds = %158
  %166 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %167 = load i64, i64* %8, align 8
  %168 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %166, i64 noundef %167)
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %169, i32 0, i32 47
  store i8* %168, i8** %170, align 8
  br label %171

171:                                              ; preds = %165, %158
  %172 = load i32, i32* %7, align 4
  %173 = icmp sgt i32 %172, 1
  br i1 %173, label %174, label %186

174:                                              ; preds = %171
  %175 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %175, i32 0, i32 48
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %179, label %185

179:                                              ; preds = %174
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %181 = load i64, i64* %8, align 8
  %182 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %180, i64 noundef %181)
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %184 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %183, i32 0, i32 48
  store i8* %182, i8** %184, align 8
  br label %185

185:                                              ; preds = %179, %174
  br label %186

186:                                              ; preds = %185, %171
  br label %187

187:                                              ; preds = %186, %50
  %188 = load i32, i32* %6, align 4
  %189 = trunc i32 %188 to i8
  %190 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %191 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %190, i32 0, i32 60
  store i8 %189, i8* %191, align 2
  br label %194

192:                                              ; preds = %22
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %193, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.520, i64 0, i64 0)) #13
  unreachable

194:                                              ; preds = %11, %187
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_filter_heuristics(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, double* noundef %3, double* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store double* %3, double** %9, align 8
  store double* %4, double** %10, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load i32, i32* %8, align 4
  %14 = load double*, double** %9, align 8
  %15 = load double*, double** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_filter_heuristics_fixed(%struct.png_struct_def* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32* noundef %4) #0 {
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load i32, i32* %8, align 4
  %14 = load i32*, i32** %9, align 8
  %15 = load i32*, i32** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_compression_level(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 22
  store i32 %9, i32* %11, align 4
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_compression_mem_level(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 25
  store i32 %9, i32* %11, align 8
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_compression_strategy(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %16

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 16
  %11 = load i32, i32* %10, align 8
  %12 = or i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = load i32, i32* %4, align 4
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 26
  store i32 %13, i32* %15, align 4
  br label %16

16:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_compression_window_bits(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %23

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 15
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %12, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.10.521, i64 0, i64 0))
  store i32 15, i32* %4, align 4
  br label %19

13:                                               ; preds = %8
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 8
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.522, i64 0, i64 0))
  store i32 8, i32* %4, align 4
  br label %18

18:                                               ; preds = %16, %13
  br label %19

19:                                               ; preds = %18, %11
  %20 = load i32, i32* %4, align 4
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 24
  store i32 %20, i32* %22, align 4
  br label %23

23:                                               ; preds = %19, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_compression_method(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %17

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp ne i32 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %12, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12.523, i64 0, i64 0))
  br label %13

13:                                               ; preds = %11, %8
  %14 = load i32, i32* %4, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 23
  store i32 %14, i32* %16, align 8
  br label %17

17:                                               ; preds = %13, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_text_compression_level(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 27
  store i32 %9, i32* %11, align 8
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_text_compression_mem_level(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 30
  store i32 %9, i32* %11, align 4
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_text_compression_strategy(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 31
  store i32 %9, i32* %11, align 8
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_text_compression_window_bits(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %23

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 15
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %12, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.10.521, i64 0, i64 0))
  store i32 15, i32* %4, align 4
  br label %19

13:                                               ; preds = %8
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 8
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %17, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.522, i64 0, i64 0))
  store i32 8, i32* %4, align 4
  br label %18

18:                                               ; preds = %16, %13
  br label %19

19:                                               ; preds = %18, %11
  %20 = load i32, i32* %4, align 4
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 29
  store i32 %20, i32* %22, align 8
  br label %23

23:                                               ; preds = %19, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_text_compression_method(%struct.png_struct_def* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %17

8:                                                ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp ne i32 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @png_warning(%struct.png_struct_def* noundef %12, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12.523, i64 0, i64 0))
  br label %13

13:                                               ; preds = %11, %8
  %14 = load i32, i32* %4, align 4
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 28
  store i32 %14, i32* %16, align 4
  br label %17

17:                                               ; preds = %13, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_write_status_fn(%struct.png_struct_def* noalias noundef %0, void (%struct.png_struct_def*, i32, i32)* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca void (%struct.png_struct_def*, i32, i32)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store void (%struct.png_struct_def*, i32, i32)* %1, void (%struct.png_struct_def*, i32, i32)** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  %9 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %4, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 92
  store void (%struct.png_struct_def*, i32, i32)* %9, void (%struct.png_struct_def*, i32, i32)** %11, align 8
  br label %12

12:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_set_write_user_transform_fn(%struct.png_struct_def* noalias noundef %0, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %1, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %16

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = or i32 %11, 1048576
  store i32 %12, i32* %10, align 4
  %13 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %4, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 11
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %13, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %15, align 8
  br label %16

16:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_png(%struct.png_struct_def* noalias noundef %0, %struct.png_info_def* noalias noundef %1, i32 noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca %struct.png_info_def*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %5, align 8
  store %struct.png_info_def* %1, %struct.png_info_def** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %10 = icmp eq %struct.png_struct_def* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %13 = icmp eq %struct.png_info_def* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11, %4
  br label %114

15:                                               ; preds = %11
  %16 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 32768
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %22, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.524, i64 0, i64 0))
  br label %114

23:                                               ; preds = %15
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %25 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_write_info(%struct.png_struct_def* noundef %24, %struct.png_info_def* noundef %25)
  %26 = load i32, i32* %7, align 4
  %27 = and i32 %26, 32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_invert_mono to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %30)
  br label %31

31:                                               ; preds = %29, %23
  %32 = load i32, i32* %7, align 4
  %33 = and i32 %32, 64
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %46

35:                                               ; preds = %31
  %36 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %43 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %44 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %43, i32 0, i32 24
  call void bitcast (void (%struct.png_struct_def.205*, %struct.png_color_8_struct*)* @png_set_shift to void (%struct.png_struct_def*, %struct.png_color_8_struct*)*)(%struct.png_struct_def* noundef %42, %struct.png_color_8_struct* noundef %44)
  br label %45

45:                                               ; preds = %41, %35
  br label %46

46:                                               ; preds = %45, %31
  %47 = load i32, i32* %7, align 4
  %48 = and i32 %47, 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packing to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %51)
  br label %52

52:                                               ; preds = %50, %46
  %53 = load i32, i32* %7, align 4
  %54 = and i32 %53, 256
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap_alpha to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %57)
  br label %58

58:                                               ; preds = %56, %52
  %59 = load i32, i32* %7, align 4
  %60 = and i32 %59, 6144
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %82

62:                                               ; preds = %58
  %63 = load i32, i32* %7, align 4
  %64 = and i32 %63, 4096
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = load i32, i32* %7, align 4
  %68 = and i32 %67, 2048
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_app_error(%struct.png_struct_def* noundef %71, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14.525, i64 0, i64 0))
  br label %72

72:                                               ; preds = %70, %66
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*, i32, i32)* @png_set_filler to void (%struct.png_struct_def*, i32, i32)*)(%struct.png_struct_def* noundef %73, i32 noundef 0, i32 noundef 1)
  br label %81

74:                                               ; preds = %62
  %75 = load i32, i32* %7, align 4
  %76 = and i32 %75, 2048
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*, i32, i32)* @png_set_filler to void (%struct.png_struct_def*, i32, i32)*)(%struct.png_struct_def* noundef %79, i32 noundef 0, i32 noundef 0)
  br label %80

80:                                               ; preds = %78, %74
  br label %81

81:                                               ; preds = %80, %72
  br label %82

82:                                               ; preds = %81, %58
  %83 = load i32, i32* %7, align 4
  %84 = and i32 %83, 128
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_bgr to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %87)
  br label %88

88:                                               ; preds = %86, %82
  %89 = load i32, i32* %7, align 4
  %90 = and i32 %89, 512
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %93)
  br label %94

94:                                               ; preds = %92, %88
  %95 = load i32, i32* %7, align 4
  %96 = and i32 %95, 8
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packswap to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %99)
  br label %100

100:                                              ; preds = %98, %94
  %101 = load i32, i32* %7, align 4
  %102 = and i32 %101, 1024
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_invert_alpha to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %105)
  br label %106

106:                                              ; preds = %104, %100
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %108 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  %109 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %108, i32 0, i32 53
  %110 = load i8**, i8*** %109, align 8
  call void @png_write_image(%struct.png_struct_def* noundef %107, i8** noundef %110)
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %112 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  call void @png_write_end(%struct.png_struct_def* noundef %111, %struct.png_info_def* noundef %112)
  %113 = load i8*, i8** %8, align 8
  br label %114

114:                                              ; preds = %106, %21, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_write_to_memory(%struct.png_image* noundef %0, i8* noundef %1, i64* noalias noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.png_image*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca %struct.png_image_write_control, align 8
  %17 = alloca i32, align 4
  store %struct.png_image* %0, %struct.png_image** %9, align 8
  store i8* %1, i8** %10, align 8
  store i64* %2, i64** %11, align 8
  store i32 %3, i32* %12, align 4
  store i8* %4, i8** %13, align 8
  store i32 %5, i32* %14, align 4
  store i8* %6, i8** %15, align 8
  %18 = load %struct.png_image*, %struct.png_image** %9, align 8
  %19 = icmp ne %struct.png_image* %18, null
  br i1 %19, label %20, label %84

20:                                               ; preds = %7
  %21 = load %struct.png_image*, %struct.png_image** %9, align 8
  %22 = getelementptr inbounds %struct.png_image, %struct.png_image* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %84

25:                                               ; preds = %20
  %26 = load i64*, i64** %11, align 8
  %27 = icmp ne i64* %26, null
  br i1 %27, label %28, label %81

28:                                               ; preds = %25
  %29 = load i8*, i8** %13, align 8
  %30 = icmp ne i8* %29, null
  br i1 %30, label %31, label %81

31:                                               ; preds = %28
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i64*, i64** %11, align 8
  store i64 0, i64* %35, align 8
  br label %36

36:                                               ; preds = %34, %31
  %37 = load %struct.png_image*, %struct.png_image** %9, align 8
  %38 = call i32 @png_image_write_init(%struct.png_image* noundef %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %80

40:                                               ; preds = %36
  %41 = bitcast %struct.png_image_write_control* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 88, i1 false)
  %42 = load %struct.png_image*, %struct.png_image** %9, align 8
  %43 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 0
  store %struct.png_image* %42, %struct.png_image** %43, align 8
  %44 = load i8*, i8** %13, align 8
  %45 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 1
  store i8* %44, i8** %45, align 8
  %46 = load i32, i32* %14, align 4
  %47 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 2
  store i32 %46, i32* %47, align 8
  %48 = load i8*, i8** %15, align 8
  %49 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 3
  store i8* %48, i8** %49, align 8
  %50 = load i32, i32* %12, align 4
  %51 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 4
  store i32 %50, i32* %51, align 8
  %52 = load i8*, i8** %10, align 8
  %53 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 8
  store i8* %52, i8** %53, align 8
  %54 = load i64*, i64** %11, align 8
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 9
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 10
  store i64 0, i64* %57, align 8
  %58 = load %struct.png_image*, %struct.png_image** %9, align 8
  %59 = bitcast %struct.png_image_write_control* %16 to i8*
  %60 = call i32 @png_safe_execute(%struct.png_image* noundef %58, i32 (i8*)* noundef @png_image_write_memory, i8* noundef %59)
  store i32 %60, i32* %17, align 4
  %61 = load %struct.png_image*, %struct.png_image** %9, align 8
  call void @png_image_free(%struct.png_image* noundef %61)
  %62 = load i32, i32* %17, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %40
  %65 = load i8*, i8** %10, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 10
  %69 = load i64, i64* %68, align 8
  %70 = load i64*, i64** %11, align 8
  %71 = load i64, i64* %70, align 8
  %72 = icmp ugt i64 %69, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %67
  store i32 0, i32* %17, align 4
  br label %74

74:                                               ; preds = %73, %67, %64
  %75 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %16, i32 0, i32 10
  %76 = load i64, i64* %75, align 8
  %77 = load i64*, i64** %11, align 8
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %74, %40
  %79 = load i32, i32* %17, align 4
  store i32 %79, i32* %8, align 4
  br label %91

80:                                               ; preds = %36
  store i32 0, i32* %8, align 4
  br label %91

81:                                               ; preds = %28, %25
  %82 = load %struct.png_image*, %struct.png_image** %9, align 8
  %83 = call i32 @png_image_error(%struct.png_image* noundef %82, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15.526, i64 0, i64 0))
  store i32 %83, i32* %8, align 4
  br label %91

84:                                               ; preds = %20, %7
  %85 = load %struct.png_image*, %struct.png_image** %9, align 8
  %86 = icmp ne %struct.png_image* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load %struct.png_image*, %struct.png_image** %9, align 8
  %89 = call i32 @png_image_error(%struct.png_image* noundef %88, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16.527, i64 0, i64 0))
  store i32 %89, i32* %8, align 4
  br label %91

90:                                               ; preds = %84
  store i32 0, i32* %8, align 4
  br label %91

91:                                               ; preds = %90, %87, %81, %80, %78
  %92 = load i32, i32* %8, align 4
  ret i32 %92
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_write_init(%struct.png_image* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_image*, align 8
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca %struct.png_info_def*, align 8
  %6 = alloca %struct.png_control*, align 8
  store %struct.png_image* %0, %struct.png_image** %3, align 8
  %7 = load %struct.png_image*, %struct.png_image** %3, align 8
  %8 = bitcast %struct.png_image* %7 to i8*
  %9 = call noalias %struct.png_struct_def* @png_create_write_struct(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.535, i64 0, i64 0), i8* noundef %8, void (%struct.png_struct_def*, i8*)* noundef @png_safe_error, void (%struct.png_struct_def*, i8*)* noundef @png_safe_warning)
  store %struct.png_struct_def* %9, %struct.png_struct_def** %4, align 8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %11 = icmp ne %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %43

12:                                               ; preds = %1
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %14 = call noalias %struct.png_info_def* @png_create_info_struct(%struct.png_struct_def* noundef %13)
  store %struct.png_info_def* %14, %struct.png_info_def** %5, align 8
  %15 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %16 = icmp ne %struct.png_info_def* %15, null
  br i1 %16, label %17, label %42

17:                                               ; preds = %12
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %19 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc_warn to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %18, i64 noundef 48)
  %20 = bitcast i8* %19 to %struct.png_control*
  store %struct.png_control* %20, %struct.png_control** %6, align 8
  %21 = load %struct.png_control*, %struct.png_control** %6, align 8
  %22 = icmp ne %struct.png_control* %21, null
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = load %struct.png_control*, %struct.png_control** %6, align 8
  %25 = bitcast %struct.png_control* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false)
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %27 = load %struct.png_control*, %struct.png_control** %6, align 8
  %28 = getelementptr inbounds %struct.png_control, %struct.png_control* %27, i32 0, i32 0
  store %struct.png_struct_def* %26, %struct.png_struct_def** %28, align 8
  %29 = load %struct.png_info_def*, %struct.png_info_def** %5, align 8
  %30 = load %struct.png_control*, %struct.png_control** %6, align 8
  %31 = getelementptr inbounds %struct.png_control, %struct.png_control* %30, i32 0, i32 1
  store %struct.png_info_def* %29, %struct.png_info_def** %31, align 8
  %32 = load %struct.png_control*, %struct.png_control** %6, align 8
  %33 = getelementptr inbounds %struct.png_control, %struct.png_control* %32, i32 0, i32 5
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, -2
  %36 = or i8 %35, 1
  store i8 %36, i8* %33, align 8
  %37 = load %struct.png_control*, %struct.png_control** %6, align 8
  %38 = load %struct.png_image*, %struct.png_image** %3, align 8
  %39 = getelementptr inbounds %struct.png_image, %struct.png_image* %38, i32 0, i32 0
  store %struct.png_control* %37, %struct.png_control** %39, align 8
  store i32 1, i32* %2, align 4
  br label %46

40:                                               ; preds = %17
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_destroy_info_struct(%struct.png_struct_def* noundef %41, %struct.png_info_def** noundef %5)
  br label %42

42:                                               ; preds = %40, %12
  call void @png_destroy_write_struct(%struct.png_struct_def** noundef %4, %struct.png_info_def** noundef null)
  br label %43

43:                                               ; preds = %42, %1
  %44 = load %struct.png_image*, %struct.png_image** %3, align 8
  %45 = call i32 @png_image_error(%struct.png_image* noundef %44, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24.536, i64 0, i64 0))
  store i32 %45, i32* %2, align 4
  br label %46

46:                                               ; preds = %43, %23
  %47 = load i32, i32* %2, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_write_memory(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_write_control*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.png_image_write_control*
  store %struct.png_image_write_control* %5, %struct.png_image_write_control** %3, align 8
  %6 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %7 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %6, i32 0, i32 0
  %8 = load %struct.png_image*, %struct.png_image** %7, align 8
  %9 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i32 0, i32 0
  %10 = load %struct.png_control*, %struct.png_control** %9, align 8
  %11 = getelementptr inbounds %struct.png_control, %struct.png_control* %10, i32 0, i32 0
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %13 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %14 = bitcast %struct.png_image_write_control* %13 to i8*
  call void @png_set_write_fn(%struct.png_struct_def* noundef %12, i8* noundef %14, void (%struct.png_struct_def*, i8*, i64)* noundef @image_memory_write, void (%struct.png_struct_def*)* noundef @image_memory_flush)
  %15 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %16 = bitcast %struct.png_image_write_control* %15 to i8*
  %17 = call i32 @png_image_write_main(i8* noundef %16)
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @image_memory_write(%struct.png_struct_def* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.png_image_write_control*, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 9
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.png_image_write_control*
  store %struct.png_image_write_control* %12, %struct.png_image_write_control** %7, align 8
  %13 = load %struct.png_image_write_control*, %struct.png_image_write_control** %7, align 8
  %14 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %13, i32 0, i32 10
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %8, align 8
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %8, align 8
  %18 = sub i64 -1, %17
  %19 = icmp ule i64 %16, %18
  br i1 %19, label %20, label %46

20:                                               ; preds = %3
  %21 = load i64, i64* %6, align 8
  %22 = icmp ugt i64 %21, 0
  br i1 %22, label %23, label %45

23:                                               ; preds = %20
  %24 = load %struct.png_image_write_control*, %struct.png_image_write_control** %7, align 8
  %25 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %24, i32 0, i32 9
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %8, align 8
  %28 = load i64, i64* %6, align 8
  %29 = add i64 %27, %28
  %30 = icmp uge i64 %26, %29
  br i1 %30, label %31, label %39

31:                                               ; preds = %23
  %32 = load %struct.png_image_write_control*, %struct.png_image_write_control** %7, align 8
  %33 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %32, i32 0, i32 8
  %34 = load i8*, i8** %33, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = load i8*, i8** %5, align 8
  %38 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64 %38, i1 false)
  br label %39

39:                                               ; preds = %31, %23
  %40 = load i64, i64* %8, align 8
  %41 = load i64, i64* %6, align 8
  %42 = add i64 %40, %41
  %43 = load %struct.png_image_write_control*, %struct.png_image_write_control** %7, align 8
  %44 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %43, i32 0, i32 10
  store i64 %42, i64* %44, align 8
  br label %45

45:                                               ; preds = %39, %20
  br label %48

46:                                               ; preds = %3
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  call void @png_error(%struct.png_struct_def* noundef %47, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25.534, i64 0, i64 0)) #13
  unreachable

48:                                               ; preds = %45
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @image_memory_flush(%struct.png_struct_def* noundef %0) #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %2, align 8
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_image_write_main(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.png_image_write_control*, align 8
  %5 = alloca %struct.png_image*, align 8
  %6 = alloca %struct.png_struct_def*, align 8
  %7 = alloca %struct.png_info_def*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %25 = load i8*, i8** %3, align 8
  %26 = bitcast i8* %25 to %struct.png_image_write_control*
  store %struct.png_image_write_control* %26, %struct.png_image_write_control** %4, align 8
  %27 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %28 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %27, i32 0, i32 0
  %29 = load %struct.png_image*, %struct.png_image** %28, align 8
  store %struct.png_image* %29, %struct.png_image** %5, align 8
  %30 = load %struct.png_image*, %struct.png_image** %5, align 8
  %31 = getelementptr inbounds %struct.png_image, %struct.png_image* %30, i32 0, i32 0
  %32 = load %struct.png_control*, %struct.png_control** %31, align 8
  %33 = getelementptr inbounds %struct.png_control, %struct.png_control* %32, i32 0, i32 0
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %33, align 8
  store %struct.png_struct_def* %34, %struct.png_struct_def** %6, align 8
  %35 = load %struct.png_image*, %struct.png_image** %5, align 8
  %36 = getelementptr inbounds %struct.png_image, %struct.png_image* %35, i32 0, i32 0
  %37 = load %struct.png_control*, %struct.png_control** %36, align 8
  %38 = getelementptr inbounds %struct.png_control, %struct.png_control* %37, i32 0, i32 1
  %39 = load %struct.png_info_def*, %struct.png_info_def** %38, align 8
  store %struct.png_info_def* %39, %struct.png_info_def** %7, align 8
  %40 = load %struct.png_image*, %struct.png_image** %5, align 8
  %41 = getelementptr inbounds %struct.png_image, %struct.png_image* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %8, align 4
  %43 = load i32, i32* %8, align 4
  %44 = and i32 %43, 8
  store i32 %44, i32* %9, align 4
  %45 = load i32, i32* %9, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %1
  %48 = load i32, i32* %8, align 4
  %49 = and i32 %48, 4
  %50 = icmp ne i32 %49, 0
  br label %51

51:                                               ; preds = %47, %1
  %52 = phi i1 [ false, %1 ], [ %50, %47 ]
  %53 = zext i1 %52 to i32
  store i32 %53, i32* %10, align 4
  %54 = load i32, i32* %9, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = load i32, i32* %8, align 4
  %58 = and i32 %57, 1
  %59 = icmp ne i32 %58, 0
  br label %60

60:                                               ; preds = %56, %51
  %61 = phi i1 [ false, %51 ], [ %59, %56 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %11, align 4
  %63 = load i32, i32* %10, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %67 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %66, i32 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br label %70

70:                                               ; preds = %65, %60
  %71 = phi i1 [ false, %60 ], [ %69, %65 ]
  %72 = zext i1 %71 to i32
  store i32 %72, i32* %12, align 4
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_benign_errors(%struct.png_struct_def* noundef %73, i32 noundef 0)
  %74 = load %struct.png_image*, %struct.png_image** %5, align 8
  %75 = getelementptr inbounds %struct.png_image, %struct.png_image* %74, i32 0, i32 4
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %70
  br label %86

80:                                               ; preds = %70
  %81 = load %struct.png_image*, %struct.png_image** %5, align 8
  %82 = getelementptr inbounds %struct.png_image, %struct.png_image* %81, i32 0, i32 4
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 3
  %85 = add i32 %84, 1
  br label %86

86:                                               ; preds = %80, %79
  %87 = phi i32 [ 1, %79 ], [ %85, %80 ]
  store i32 %87, i32* %13, align 4
  %88 = load %struct.png_image*, %struct.png_image** %5, align 8
  %89 = getelementptr inbounds %struct.png_image, %struct.png_image* %88, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %13, align 4
  %92 = udiv i32 2147483647, %91
  %93 = icmp ule i32 %90, %92
  br i1 %93, label %94, label %147

94:                                               ; preds = %86
  %95 = load %struct.png_image*, %struct.png_image** %5, align 8
  %96 = getelementptr inbounds %struct.png_image, %struct.png_image* %95, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %13, align 4
  %99 = mul i32 %97, %98
  store i32 %99, i32* %15, align 4
  %100 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %101 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %100, i32 0, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %94
  %105 = load i32, i32* %15, align 4
  %106 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %107 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %106, i32 0, i32 2
  store i32 %105, i32* %107, align 8
  br label %108

108:                                              ; preds = %104, %94
  %109 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %110 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %109, i32 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %113, label %118

113:                                              ; preds = %108
  %114 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %115 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %114, i32 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = sub nsw i32 0, %116
  store i32 %117, i32* %14, align 4
  br label %122

118:                                              ; preds = %108
  %119 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %120 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %119, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %14, align 4
  br label %122

122:                                              ; preds = %118, %113
  %123 = load i32, i32* %14, align 4
  %124 = load i32, i32* %15, align 4
  %125 = icmp uge i32 %123, %124
  br i1 %125, label %126, label %140

126:                                              ; preds = %122
  %127 = load %struct.png_image*, %struct.png_image** %5, align 8
  %128 = getelementptr inbounds %struct.png_image, %struct.png_image* %127, i32 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = load i32, i32* %15, align 4
  %131 = udiv i32 -1, %130
  %132 = icmp ugt i32 %129, %131
  br i1 %132, label %133, label %139

133:                                              ; preds = %126
  %134 = load %struct.png_image*, %struct.png_image** %5, align 8
  %135 = getelementptr inbounds %struct.png_image, %struct.png_image* %134, i32 0, i32 0
  %136 = load %struct.png_control*, %struct.png_control** %135, align 8
  %137 = getelementptr inbounds %struct.png_control, %struct.png_control* %136, i32 0, i32 0
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %137, align 8
  call void @png_error(%struct.png_struct_def* noundef %138, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26.528, i64 0, i64 0)) #13
  unreachable

139:                                              ; preds = %126
  br label %146

140:                                              ; preds = %122
  %141 = load %struct.png_image*, %struct.png_image** %5, align 8
  %142 = getelementptr inbounds %struct.png_image, %struct.png_image* %141, i32 0, i32 0
  %143 = load %struct.png_control*, %struct.png_control** %142, align 8
  %144 = getelementptr inbounds %struct.png_control, %struct.png_control* %143, i32 0, i32 0
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %144, align 8
  call void @png_error(%struct.png_struct_def* noundef %145, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27.529, i64 0, i64 0)) #13
  unreachable

146:                                              ; preds = %139
  br label %153

147:                                              ; preds = %86
  %148 = load %struct.png_image*, %struct.png_image** %5, align 8
  %149 = getelementptr inbounds %struct.png_image, %struct.png_image* %148, i32 0, i32 0
  %150 = load %struct.png_control*, %struct.png_control** %149, align 8
  %151 = getelementptr inbounds %struct.png_control, %struct.png_control* %150, i32 0, i32 0
  %152 = load %struct.png_struct_def*, %struct.png_struct_def** %151, align 8
  call void @png_error(%struct.png_struct_def* noundef %152, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28.530, i64 0, i64 0)) #13
  unreachable

153:                                              ; preds = %146
  %154 = load i32, i32* %8, align 4
  %155 = and i32 %154, 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %203

157:                                              ; preds = %153
  %158 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %159 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %158, i32 0, i32 3
  %160 = load i8*, i8** %159, align 8
  %161 = icmp ne i8* %160, null
  br i1 %161, label %162, label %196

162:                                              ; preds = %157
  %163 = load %struct.png_image*, %struct.png_image** %5, align 8
  %164 = getelementptr inbounds %struct.png_image, %struct.png_image* %163, i32 0, i32 6
  %165 = load i32, i32* %164, align 4
  %166 = icmp ugt i32 %165, 0
  br i1 %166, label %167, label %196

167:                                              ; preds = %162
  %168 = load %struct.png_image*, %struct.png_image** %5, align 8
  %169 = getelementptr inbounds %struct.png_image, %struct.png_image* %168, i32 0, i32 6
  %170 = load i32, i32* %169, align 4
  store i32 %170, i32* %16, align 4
  %171 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %172 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %173 = load %struct.png_image*, %struct.png_image** %5, align 8
  %174 = getelementptr inbounds %struct.png_image, %struct.png_image* %173, i32 0, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = load %struct.png_image*, %struct.png_image** %5, align 8
  %177 = getelementptr inbounds %struct.png_image, %struct.png_image* %176, i32 0, i32 3
  %178 = load i32, i32* %177, align 8
  %179 = load i32, i32* %16, align 4
  %180 = icmp ugt i32 %179, 16
  br i1 %180, label %181, label %182

181:                                              ; preds = %167
  br label %193

182:                                              ; preds = %167
  %183 = load i32, i32* %16, align 4
  %184 = icmp ugt i32 %183, 4
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  br label %191

186:                                              ; preds = %182
  %187 = load i32, i32* %16, align 4
  %188 = icmp ugt i32 %187, 2
  %189 = zext i1 %188 to i64
  %190 = select i1 %188, i32 2, i32 1
  br label %191

191:                                              ; preds = %186, %185
  %192 = phi i32 [ 4, %185 ], [ %190, %186 ]
  br label %193

193:                                              ; preds = %191, %181
  %194 = phi i32 [ 8, %181 ], [ %192, %191 ]
  call void @png_set_IHDR(%struct.png_struct_def* noundef %171, %struct.png_info_def* noundef %172, i32 noundef %175, i32 noundef %178, i32 noundef %194, i32 noundef 3, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %195 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  call void @png_image_set_PLTE(%struct.png_image_write_control* noundef %195)
  br label %202

196:                                              ; preds = %162, %157
  %197 = load %struct.png_image*, %struct.png_image** %5, align 8
  %198 = getelementptr inbounds %struct.png_image, %struct.png_image* %197, i32 0, i32 0
  %199 = load %struct.png_control*, %struct.png_control** %198, align 8
  %200 = getelementptr inbounds %struct.png_control, %struct.png_control* %199, i32 0, i32 0
  %201 = load %struct.png_struct_def*, %struct.png_struct_def** %200, align 8
  call void @png_error(%struct.png_struct_def* noundef %201, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29.531, i64 0, i64 0)) #13
  unreachable

202:                                              ; preds = %193
  br label %227

203:                                              ; preds = %153
  %204 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %205 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %206 = load %struct.png_image*, %struct.png_image** %5, align 8
  %207 = getelementptr inbounds %struct.png_image, %struct.png_image* %206, i32 0, i32 2
  %208 = load i32, i32* %207, align 4
  %209 = load %struct.png_image*, %struct.png_image** %5, align 8
  %210 = getelementptr inbounds %struct.png_image, %struct.png_image* %209, i32 0, i32 3
  %211 = load i32, i32* %210, align 8
  %212 = load i32, i32* %12, align 4
  %213 = icmp ne i32 %212, 0
  %214 = zext i1 %213 to i64
  %215 = select i1 %213, i32 16, i32 8
  %216 = load i32, i32* %8, align 4
  %217 = and i32 %216, 2
  %218 = icmp ne i32 %217, 0
  %219 = zext i1 %218 to i64
  %220 = select i1 %218, i32 2, i32 0
  %221 = load i32, i32* %8, align 4
  %222 = and i32 %221, 1
  %223 = icmp ne i32 %222, 0
  %224 = zext i1 %223 to i64
  %225 = select i1 %223, i32 4, i32 0
  %226 = add nsw i32 %220, %225
  call void @png_set_IHDR(%struct.png_struct_def* noundef %204, %struct.png_info_def* noundef %205, i32 noundef %208, i32 noundef %211, i32 noundef %215, i32 noundef %226, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  br label %227

227:                                              ; preds = %203, %202
  %228 = load i32, i32* %12, align 4
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %227
  %231 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %232 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_set_gAMA_fixed(%struct.png_struct_def* noundef %231, %struct.png_info_def* noundef %232, i32 noundef 100000)
  %233 = load %struct.png_image*, %struct.png_image** %5, align 8
  %234 = getelementptr inbounds %struct.png_image, %struct.png_image* %233, i32 0, i32 5
  %235 = load i32, i32* %234, align 8
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %230
  %239 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %240 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_set_cHRM_fixed(%struct.png_struct_def* noundef %239, %struct.png_info_def* noundef %240, i32 noundef 31270, i32 noundef 32900, i32 noundef 64000, i32 noundef 33000, i32 noundef 30000, i32 noundef 60000, i32 noundef 15000, i32 noundef 6000)
  br label %241

241:                                              ; preds = %238, %230
  br label %255

242:                                              ; preds = %227
  %243 = load %struct.png_image*, %struct.png_image** %5, align 8
  %244 = getelementptr inbounds %struct.png_image, %struct.png_image* %243, i32 0, i32 5
  %245 = load i32, i32* %244, align 8
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %251

248:                                              ; preds = %242
  %249 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %250 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_set_sRGB(%struct.png_struct_def* noundef %249, %struct.png_info_def* noundef %250, i32 noundef 0)
  br label %254

251:                                              ; preds = %242
  %252 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %253 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_set_gAMA_fixed(%struct.png_struct_def* noundef %252, %struct.png_info_def* noundef %253, i32 noundef 45455)
  br label %254

254:                                              ; preds = %251, %248
  br label %255

255:                                              ; preds = %254, %241
  %256 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %257 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_write_info(%struct.png_struct_def* noundef %256, %struct.png_info_def* noundef %257)
  %258 = load i32, i32* %12, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %268

260:                                              ; preds = %255
  store i16 1, i16* %17, align 2
  %261 = bitcast i16* %17 to i8*
  %262 = load i8, i8* %261, align 2
  %263 = zext i8 %262 to i32
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %260
  %266 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %266)
  br label %267

267:                                              ; preds = %265, %260
  br label %268

268:                                              ; preds = %267, %255
  %269 = load i32, i32* %8, align 4
  %270 = and i32 %269, 16
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %284

272:                                              ; preds = %268
  %273 = load i32, i32* %9, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %281

275:                                              ; preds = %272
  %276 = load i32, i32* %8, align 4
  %277 = and i32 %276, 2
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %275
  %280 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_bgr to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %280)
  br label %281

281:                                              ; preds = %279, %275, %272
  %282 = load i32, i32* %8, align 4
  %283 = and i32 %282, -17
  store i32 %283, i32* %8, align 4
  br label %284

284:                                              ; preds = %281, %268
  %285 = load i32, i32* %8, align 4
  %286 = and i32 %285, 32
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %300

288:                                              ; preds = %284
  %289 = load i32, i32* %9, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %297

291:                                              ; preds = %288
  %292 = load i32, i32* %8, align 4
  %293 = and i32 %292, 1
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_swap_alpha to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %296)
  br label %297

297:                                              ; preds = %295, %291, %288
  %298 = load i32, i32* %8, align 4
  %299 = and i32 %298, -33
  store i32 %299, i32* %8, align 4
  br label %300

300:                                              ; preds = %297, %284
  %301 = load i32, i32* %9, align 4
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %303, label %310

303:                                              ; preds = %300
  %304 = load %struct.png_image*, %struct.png_image** %5, align 8
  %305 = getelementptr inbounds %struct.png_image, %struct.png_image* %304, i32 0, i32 6
  %306 = load i32, i32* %305, align 4
  %307 = icmp ule i32 %306, 16
  br i1 %307, label %308, label %310

308:                                              ; preds = %303
  %309 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void bitcast (void (%struct.png_struct_def.205*)* @png_set_packing to void (%struct.png_struct_def*)*)(%struct.png_struct_def* noundef %309)
  br label %310

310:                                              ; preds = %308, %303, %300
  %311 = load i32, i32* %8, align 4
  %312 = and i32 %311, -16
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %310
  %315 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_error(%struct.png_struct_def* noundef %315, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.532, i64 0, i64 0)) #13
  unreachable

316:                                              ; preds = %310
  %317 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %318 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %317, i32 0, i32 1
  %319 = load i8*, i8** %318, align 8
  store i8* %319, i8** %18, align 8
  %320 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %321 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %320, i32 0, i32 2
  %322 = load i32, i32* %321, align 8
  %323 = sext i32 %322 to i64
  store i64 %323, i64* %19, align 8
  %324 = load i32, i32* %10, align 4
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %316
  %327 = load i64, i64* %19, align 8
  %328 = mul i64 %327, 2
  store i64 %328, i64* %19, align 8
  br label %329

329:                                              ; preds = %326, %316
  %330 = load i64, i64* %19, align 8
  %331 = icmp slt i64 %330, 0
  br i1 %331, label %332, label %343

332:                                              ; preds = %329
  %333 = load %struct.png_image*, %struct.png_image** %5, align 8
  %334 = getelementptr inbounds %struct.png_image, %struct.png_image* %333, i32 0, i32 3
  %335 = load i32, i32* %334, align 8
  %336 = sub i32 %335, 1
  %337 = zext i32 %336 to i64
  %338 = load i64, i64* %19, align 8
  %339 = sub nsw i64 0, %338
  %340 = mul nsw i64 %337, %339
  %341 = load i8*, i8** %18, align 8
  %342 = getelementptr inbounds i8, i8* %341, i64 %340
  store i8* %342, i8** %18, align 8
  br label %343

343:                                              ; preds = %332, %329
  %344 = load i8*, i8** %18, align 8
  %345 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %346 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %345, i32 0, i32 5
  store i8* %344, i8** %346, align 8
  %347 = load i64, i64* %19, align 8
  %348 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %349 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %348, i32 0, i32 6
  store i64 %347, i64* %349, align 8
  %350 = load %struct.png_image*, %struct.png_image** %5, align 8
  %351 = getelementptr inbounds %struct.png_image, %struct.png_image* %350, i32 0, i32 5
  %352 = load i32, i32* %351, align 8
  %353 = and i32 %352, 2
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %355, label %358

355:                                              ; preds = %343
  %356 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_filter(%struct.png_struct_def* noundef %356, i32 noundef 0, i32 noundef 0)
  %357 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  call void @png_set_compression_level(%struct.png_struct_def* noundef %357, i32 noundef 3)
  br label %358

358:                                              ; preds = %355, %343
  %359 = load i32, i32* %10, align 4
  %360 = icmp ne i32 %359, 0
  br i1 %360, label %361, label %364

361:                                              ; preds = %358
  %362 = load i32, i32* %11, align 4
  %363 = icmp ne i32 %362, 0
  br i1 %363, label %372, label %364

364:                                              ; preds = %361, %358
  %365 = load i32, i32* %9, align 4
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %402

367:                                              ; preds = %364
  %368 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %369 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %368, i32 0, i32 4
  %370 = load i32, i32* %369, align 8
  %371 = icmp ne i32 %370, 0
  br i1 %371, label %372, label %402

372:                                              ; preds = %367, %361
  %373 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %374 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %375 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  %376 = call i64 @png_get_rowbytes(%struct.png_struct_def* noundef %374, %struct.png_info_def* noundef %375)
  %377 = call noalias i8* bitcast (i8* (%struct.png_struct_def.62*, i64)* @png_malloc to i8* (%struct.png_struct_def*, i64)*)(%struct.png_struct_def* noundef %373, i64 noundef %376)
  store i8* %377, i8** %20, align 8
  %378 = load i8*, i8** %20, align 8
  %379 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %380 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %379, i32 0, i32 7
  store i8* %378, i8** %380, align 8
  %381 = load i32, i32* %12, align 4
  %382 = icmp ne i32 %381, 0
  br i1 %382, label %383, label %388

383:                                              ; preds = %372
  %384 = load %struct.png_image*, %struct.png_image** %5, align 8
  %385 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %386 = bitcast %struct.png_image_write_control* %385 to i8*
  %387 = call i32 @png_safe_execute(%struct.png_image* noundef %384, i32 (i8*)* noundef @png_write_image_16bit, i8* noundef %386)
  store i32 %387, i32* %21, align 4
  br label %393

388:                                              ; preds = %372
  %389 = load %struct.png_image*, %struct.png_image** %5, align 8
  %390 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %391 = bitcast %struct.png_image_write_control* %390 to i8*
  %392 = call i32 @png_safe_execute(%struct.png_image* noundef %389, i32 (i8*)* noundef @png_write_image_8bit, i8* noundef %391)
  store i32 %392, i32* %21, align 4
  br label %393

393:                                              ; preds = %388, %383
  %394 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %395 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %394, i32 0, i32 7
  store i8* null, i8** %395, align 8
  %396 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %397 = load i8*, i8** %20, align 8
  call void bitcast (void (%struct.png_struct_def.62*, i8*)* @png_free to void (%struct.png_struct_def*, i8*)*)(%struct.png_struct_def* noundef %396, i8* noundef %397)
  %398 = load i32, i32* %21, align 4
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %393
  store i32 0, i32* %2, align 4
  br label %428

401:                                              ; preds = %393
  br label %425

402:                                              ; preds = %367, %364
  %403 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %404 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %403, i32 0, i32 5
  %405 = load i8*, i8** %404, align 8
  store i8* %405, i8** %22, align 8
  %406 = load %struct.png_image_write_control*, %struct.png_image_write_control** %4, align 8
  %407 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %406, i32 0, i32 6
  %408 = load i64, i64* %407, align 8
  store i64 %408, i64* %23, align 8
  %409 = load %struct.png_image*, %struct.png_image** %5, align 8
  %410 = getelementptr inbounds %struct.png_image, %struct.png_image* %409, i32 0, i32 3
  %411 = load i32, i32* %410, align 8
  store i32 %411, i32* %24, align 4
  br label %412

412:                                              ; preds = %421, %402
  %413 = load i32, i32* %24, align 4
  %414 = icmp ugt i32 %413, 0
  br i1 %414, label %415, label %424

415:                                              ; preds = %412
  %416 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %417 = load i8*, i8** %22, align 8
  call void @png_write_row(%struct.png_struct_def* noundef %416, i8* noundef %417)
  %418 = load i64, i64* %23, align 8
  %419 = load i8*, i8** %22, align 8
  %420 = getelementptr inbounds i8, i8* %419, i64 %418
  store i8* %420, i8** %22, align 8
  br label %421

421:                                              ; preds = %415
  %422 = load i32, i32* %24, align 4
  %423 = add i32 %422, -1
  store i32 %423, i32* %24, align 4
  br label %412, !llvm.loop !317

424:                                              ; preds = %412
  br label %425

425:                                              ; preds = %424, %401
  %426 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %427 = load %struct.png_info_def*, %struct.png_info_def** %7, align 8
  call void @png_write_end(%struct.png_struct_def* noundef %426, %struct.png_info_def* noundef %427)
  store i32 1, i32* %2, align 4
  br label %428

428:                                              ; preds = %425, %400
  %429 = load i32, i32* %2, align 4
  ret i32 %429
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_image_set_PLTE(%struct.png_image_write_control* noundef %0) #0 {
  %2 = alloca %struct.png_image_write_control*, align 8
  %3 = alloca %struct.png_image*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [256 x %struct.png_color_struct], align 16
  %13 = alloca [256 x i8], align 16
  %14 = alloca i16*, align 8
  %15 = alloca i16, align 2
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  store %struct.png_image_write_control* %0, %struct.png_image_write_control** %2, align 8
  %19 = load %struct.png_image_write_control*, %struct.png_image_write_control** %2, align 8
  %20 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %19, i32 0, i32 0
  %21 = load %struct.png_image*, %struct.png_image** %20, align 8
  store %struct.png_image* %21, %struct.png_image** %3, align 8
  %22 = load %struct.png_image_write_control*, %struct.png_image_write_control** %2, align 8
  %23 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %22, i32 0, i32 3
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %4, align 8
  %25 = load %struct.png_image*, %struct.png_image** %3, align 8
  %26 = getelementptr inbounds %struct.png_image, %struct.png_image* %25, i32 0, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, 256
  br i1 %28, label %29, label %30

29:                                               ; preds = %1
  br label %34

30:                                               ; preds = %1
  %31 = load %struct.png_image*, %struct.png_image** %3, align 8
  %32 = getelementptr inbounds %struct.png_image, %struct.png_image* %31, i32 0, i32 6
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %30, %29
  %35 = phi i32 [ 256, %29 ], [ %33, %30 ]
  store i32 %35, i32* %5, align 4
  %36 = load %struct.png_image*, %struct.png_image** %3, align 8
  %37 = getelementptr inbounds %struct.png_image, %struct.png_image* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %6, align 4
  %39 = load i32, i32* %6, align 4
  %40 = and i32 %39, 3
  %41 = add i32 %40, 1
  store i32 %41, i32* %7, align 4
  %42 = load i32, i32* %6, align 4
  %43 = and i32 %42, 32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %34
  %46 = load i32, i32* %6, align 4
  %47 = and i32 %46, 1
  %48 = icmp ne i32 %47, 0
  br label %49

49:                                               ; preds = %45, %34
  %50 = phi i1 [ false, %34 ], [ %48, %45 ]
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %8, align 4
  %52 = load i32, i32* %6, align 4
  %53 = and i32 %52, 16
  %54 = icmp ne i32 %53, 0
  %55 = zext i1 %54 to i64
  %56 = select i1 %54, i32 2, i32 0
  store i32 %56, i32* %9, align 4
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 -1, i64 256, i1 false)
  %58 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 0
  %59 = bitcast %struct.png_color_struct* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %59, i8 0, i64 768, i1 false)
  store i32 0, i32* %11, align 4
  store i32 0, i32* %10, align 4
  br label %60

60:                                               ; preds = %478, %49
  %61 = load i32, i32* %10, align 4
  %62 = load i32, i32* %5, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %481

64:                                               ; preds = %60
  %65 = load i32, i32* %6, align 4
  %66 = and i32 %65, 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %372

68:                                               ; preds = %64
  %69 = load i8*, i8** %4, align 8
  %70 = bitcast i8* %69 to i16*
  store i16* %70, i16** %14, align 8
  %71 = load i32, i32* %10, align 4
  %72 = load i32, i32* %7, align 4
  %73 = mul i32 %71, %72
  %74 = load i16*, i16** %14, align 8
  %75 = zext i32 %73 to i64
  %76 = getelementptr inbounds i16, i16* %74, i64 %75
  store i16* %76, i16** %14, align 8
  %77 = load i32, i32* %7, align 4
  %78 = and i32 %77, 1
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %250

80:                                               ; preds = %68
  %81 = load i32, i32* %7, align 4
  %82 = icmp uge i32 %81, 3
  br i1 %82, label %83, label %207

83:                                               ; preds = %80
  %84 = load i16*, i16** %14, align 8
  %85 = load i32, i32* %9, align 4
  %86 = xor i32 2, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i16, i16* %84, i64 %87
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = mul nsw i32 255, %90
  %92 = ashr i32 %91, 15
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %93
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16*, i16** %14, align 8
  %98 = load i32, i32* %9, align 4
  %99 = xor i32 2, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %97, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = mul nsw i32 255, %103
  %105 = and i32 %104, 32767
  %106 = load i16*, i16** %14, align 8
  %107 = load i32, i32* %9, align 4
  %108 = xor i32 2, %107
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i16, i16* %106, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = mul nsw i32 255, %112
  %114 = ashr i32 %113, 15
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = mul nsw i32 %105, %118
  %120 = ashr i32 %119, 12
  %121 = add nsw i32 %96, %120
  %122 = ashr i32 %121, 8
  %123 = and i32 255, %122
  %124 = trunc i32 %123 to i8
  %125 = load i32, i32* %10, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %126
  %128 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %127, i32 0, i32 2
  store i8 %124, i8* %128, align 1
  %129 = load i16*, i16** %14, align 8
  %130 = getelementptr inbounds i16, i16* %129, i64 1
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = mul nsw i32 255, %132
  %134 = ashr i32 %133, 15
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = load i16*, i16** %14, align 8
  %140 = getelementptr inbounds i16, i16* %139, i64 1
  %141 = load i16, i16* %140, align 2
  %142 = zext i16 %141 to i32
  %143 = mul nsw i32 255, %142
  %144 = and i32 %143, 32767
  %145 = load i16*, i16** %14, align 8
  %146 = getelementptr inbounds i16, i16* %145, i64 1
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = mul nsw i32 255, %148
  %150 = ashr i32 %149, 15
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = mul nsw i32 %144, %154
  %156 = ashr i32 %155, 12
  %157 = add nsw i32 %138, %156
  %158 = ashr i32 %157, 8
  %159 = and i32 255, %158
  %160 = trunc i32 %159 to i8
  %161 = load i32, i32* %10, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %162
  %164 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %163, i32 0, i32 1
  store i8 %160, i8* %164, align 1
  %165 = load i16*, i16** %14, align 8
  %166 = load i32, i32* %9, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i16, i16* %165, i64 %167
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = mul nsw i32 255, %170
  %172 = ashr i32 %171, 15
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %173
  %175 = load i16, i16* %174, align 2
  %176 = zext i16 %175 to i32
  %177 = load i16*, i16** %14, align 8
  %178 = load i32, i32* %9, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i16, i16* %177, i64 %179
  %181 = load i16, i16* %180, align 2
  %182 = zext i16 %181 to i32
  %183 = mul nsw i32 255, %182
  %184 = and i32 %183, 32767
  %185 = load i16*, i16** %14, align 8
  %186 = load i32, i32* %9, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i16, i16* %185, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = zext i16 %189 to i32
  %191 = mul nsw i32 255, %190
  %192 = ashr i32 %191, 15
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = mul nsw i32 %184, %196
  %198 = ashr i32 %197, 12
  %199 = add nsw i32 %176, %198
  %200 = ashr i32 %199, 8
  %201 = and i32 255, %200
  %202 = trunc i32 %201 to i8
  %203 = load i32, i32* %10, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %204
  %206 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %205, i32 0, i32 0
  store i8 %202, i8* %206, align 1
  br label %249

207:                                              ; preds = %80
  %208 = load i16*, i16** %14, align 8
  %209 = load i16, i16* %208, align 2
  %210 = zext i16 %209 to i32
  %211 = mul nsw i32 255, %210
  %212 = ashr i32 %211, 15
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %213
  %215 = load i16, i16* %214, align 2
  %216 = zext i16 %215 to i32
  %217 = load i16*, i16** %14, align 8
  %218 = load i16, i16* %217, align 2
  %219 = zext i16 %218 to i32
  %220 = mul nsw i32 255, %219
  %221 = and i32 %220, 32767
  %222 = load i16*, i16** %14, align 8
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  %225 = mul nsw i32 255, %224
  %226 = ashr i32 %225, 15
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = mul nsw i32 %221, %230
  %232 = ashr i32 %231, 12
  %233 = add nsw i32 %216, %232
  %234 = ashr i32 %233, 8
  %235 = and i32 255, %234
  %236 = trunc i32 %235 to i8
  %237 = load i32, i32* %10, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %238
  %240 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %239, i32 0, i32 1
  store i8 %236, i8* %240, align 1
  %241 = load i32, i32* %10, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %242
  %244 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %243, i32 0, i32 0
  store i8 %236, i8* %244, align 1
  %245 = load i32, i32* %10, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %246
  %248 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %247, i32 0, i32 2
  store i8 %236, i8* %248, align 1
  br label %249

249:                                              ; preds = %207, %83
  br label %371

250:                                              ; preds = %68
  %251 = load i16*, i16** %14, align 8
  %252 = load i32, i32* %8, align 4
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %250
  br label %258

255:                                              ; preds = %250
  %256 = load i32, i32* %7, align 4
  %257 = sub i32 %256, 1
  br label %258

258:                                              ; preds = %255, %254
  %259 = phi i32 [ 0, %254 ], [ %257, %255 ]
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds i16, i16* %251, i64 %260
  %262 = load i16, i16* %261, align 2
  store i16 %262, i16* %15, align 2
  %263 = load i16, i16* %15, align 2
  %264 = zext i16 %263 to i32
  %265 = mul i32 %264, 255
  %266 = add i32 %265, 32895
  %267 = lshr i32 %266, 16
  %268 = trunc i32 %267 to i8
  store i8 %268, i8* %16, align 1
  store i32 0, i32* %17, align 4
  %269 = load i8, i8* %16, align 1
  %270 = zext i8 %269 to i32
  %271 = icmp sgt i32 %270, 0
  br i1 %271, label %272, label %284

272:                                              ; preds = %258
  %273 = load i8, i8* %16, align 1
  %274 = zext i8 %273 to i32
  %275 = icmp slt i32 %274, 255
  br i1 %275, label %276, label %284

276:                                              ; preds = %272
  %277 = load i16, i16* %15, align 2
  %278 = zext i16 %277 to i32
  %279 = ashr i32 %278, 1
  %280 = add nsw i32 2139062400, %279
  %281 = load i16, i16* %15, align 2
  %282 = zext i16 %281 to i32
  %283 = sdiv i32 %280, %282
  store i32 %283, i32* %17, align 4
  br label %284

284:                                              ; preds = %276, %272, %258
  %285 = load i8, i8* %16, align 1
  %286 = load i32, i32* %10, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 %287
  store i8 %285, i8* %288, align 1
  %289 = load i8, i8* %16, align 1
  %290 = zext i8 %289 to i32
  %291 = icmp slt i32 %290, 255
  br i1 %291, label %292, label %295

292:                                              ; preds = %284
  %293 = load i32, i32* %10, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %11, align 4
  br label %295

295:                                              ; preds = %292, %284
  %296 = load i32, i32* %7, align 4
  %297 = icmp uge i32 %296, 3
  br i1 %297, label %298, label %347

298:                                              ; preds = %295
  %299 = load i16*, i16** %14, align 8
  %300 = load i32, i32* %8, align 4
  %301 = load i32, i32* %9, align 4
  %302 = xor i32 2, %301
  %303 = add nsw i32 %300, %302
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i16, i16* %299, i64 %304
  %306 = load i16, i16* %305, align 2
  %307 = zext i16 %306 to i32
  %308 = load i16, i16* %15, align 2
  %309 = zext i16 %308 to i32
  %310 = load i32, i32* %17, align 4
  %311 = call zeroext i8 @png_unpremultiply(i32 noundef %307, i32 noundef %309, i32 noundef %310)
  %312 = load i32, i32* %10, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %313
  %315 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %314, i32 0, i32 2
  store i8 %311, i8* %315, align 1
  %316 = load i16*, i16** %14, align 8
  %317 = load i32, i32* %8, align 4
  %318 = add nsw i32 %317, 1
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i16, i16* %316, i64 %319
  %321 = load i16, i16* %320, align 2
  %322 = zext i16 %321 to i32
  %323 = load i16, i16* %15, align 2
  %324 = zext i16 %323 to i32
  %325 = load i32, i32* %17, align 4
  %326 = call zeroext i8 @png_unpremultiply(i32 noundef %322, i32 noundef %324, i32 noundef %325)
  %327 = load i32, i32* %10, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %328
  %330 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %329, i32 0, i32 1
  store i8 %326, i8* %330, align 1
  %331 = load i16*, i16** %14, align 8
  %332 = load i32, i32* %8, align 4
  %333 = load i32, i32* %9, align 4
  %334 = add nsw i32 %332, %333
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i16, i16* %331, i64 %335
  %337 = load i16, i16* %336, align 2
  %338 = zext i16 %337 to i32
  %339 = load i16, i16* %15, align 2
  %340 = zext i16 %339 to i32
  %341 = load i32, i32* %17, align 4
  %342 = call zeroext i8 @png_unpremultiply(i32 noundef %338, i32 noundef %340, i32 noundef %341)
  %343 = load i32, i32* %10, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %344
  %346 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %345, i32 0, i32 0
  store i8 %342, i8* %346, align 1
  br label %370

347:                                              ; preds = %295
  %348 = load i16*, i16** %14, align 8
  %349 = load i32, i32* %8, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds i16, i16* %348, i64 %350
  %352 = load i16, i16* %351, align 2
  %353 = zext i16 %352 to i32
  %354 = load i16, i16* %15, align 2
  %355 = zext i16 %354 to i32
  %356 = load i32, i32* %17, align 4
  %357 = call zeroext i8 @png_unpremultiply(i32 noundef %353, i32 noundef %355, i32 noundef %356)
  %358 = load i32, i32* %10, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %359
  %361 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %360, i32 0, i32 1
  store i8 %357, i8* %361, align 1
  %362 = load i32, i32* %10, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %363
  %365 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %364, i32 0, i32 0
  store i8 %357, i8* %365, align 1
  %366 = load i32, i32* %10, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %367
  %369 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %368, i32 0, i32 2
  store i8 %357, i8* %369, align 1
  br label %370

370:                                              ; preds = %347, %298
  br label %371

371:                                              ; preds = %370, %249
  br label %477

372:                                              ; preds = %64
  %373 = load i8*, i8** %4, align 8
  store i8* %373, i8** %18, align 8
  %374 = load i32, i32* %10, align 4
  %375 = load i32, i32* %7, align 4
  %376 = mul i32 %374, %375
  %377 = load i8*, i8** %18, align 8
  %378 = zext i32 %376 to i64
  %379 = getelementptr inbounds i8, i8* %377, i64 %378
  store i8* %379, i8** %18, align 8
  %380 = load i32, i32* %7, align 4
  switch i32 %380, label %475 [
    i32 4, label %381
    i32 3, label %403
    i32 2, label %437
    i32 1, label %457
  ]

381:                                              ; preds = %372
  %382 = load i8*, i8** %18, align 8
  %383 = load i32, i32* %8, align 4
  %384 = icmp ne i32 %383, 0
  %385 = zext i1 %384 to i64
  %386 = select i1 %384, i32 0, i32 3
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i8, i8* %382, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = load i32, i32* %10, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 %391
  store i8 %389, i8* %392, align 1
  %393 = load i32, i32* %10, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  %398 = icmp slt i32 %397, 255
  br i1 %398, label %399, label %402

399:                                              ; preds = %381
  %400 = load i32, i32* %10, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %11, align 4
  br label %402

402:                                              ; preds = %399, %381
  br label %403

403:                                              ; preds = %372, %402
  %404 = load i8*, i8** %18, align 8
  %405 = load i32, i32* %8, align 4
  %406 = load i32, i32* %9, align 4
  %407 = xor i32 2, %406
  %408 = add nsw i32 %405, %407
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8, i8* %404, i64 %409
  %411 = load i8, i8* %410, align 1
  %412 = load i32, i32* %10, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %413
  %415 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %414, i32 0, i32 2
  store i8 %411, i8* %415, align 1
  %416 = load i8*, i8** %18, align 8
  %417 = load i32, i32* %8, align 4
  %418 = add nsw i32 %417, 1
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %416, i64 %419
  %421 = load i8, i8* %420, align 1
  %422 = load i32, i32* %10, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %423
  %425 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %424, i32 0, i32 1
  store i8 %421, i8* %425, align 1
  %426 = load i8*, i8** %18, align 8
  %427 = load i32, i32* %8, align 4
  %428 = load i32, i32* %9, align 4
  %429 = add nsw i32 %427, %428
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i8, i8* %426, i64 %430
  %432 = load i8, i8* %431, align 1
  %433 = load i32, i32* %10, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %434
  %436 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %435, i32 0, i32 0
  store i8 %432, i8* %436, align 1
  br label %476

437:                                              ; preds = %372
  %438 = load i8*, i8** %18, align 8
  %439 = load i32, i32* %8, align 4
  %440 = xor i32 1, %439
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i8, i8* %438, i64 %441
  %443 = load i8, i8* %442, align 1
  %444 = load i32, i32* %10, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 %445
  store i8 %443, i8* %446, align 1
  %447 = load i32, i32* %10, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 %448
  %450 = load i8, i8* %449, align 1
  %451 = zext i8 %450 to i32
  %452 = icmp slt i32 %451, 255
  br i1 %452, label %453, label %456

453:                                              ; preds = %437
  %454 = load i32, i32* %10, align 4
  %455 = add nsw i32 %454, 1
  store i32 %455, i32* %11, align 4
  br label %456

456:                                              ; preds = %453, %437
  br label %457

457:                                              ; preds = %372, %456
  %458 = load i8*, i8** %18, align 8
  %459 = load i32, i32* %8, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i8, i8* %458, i64 %460
  %462 = load i8, i8* %461, align 1
  %463 = load i32, i32* %10, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %464
  %466 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %465, i32 0, i32 1
  store i8 %462, i8* %466, align 1
  %467 = load i32, i32* %10, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %468
  %470 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %469, i32 0, i32 0
  store i8 %462, i8* %470, align 1
  %471 = load i32, i32* %10, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 %472
  %474 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %473, i32 0, i32 2
  store i8 %462, i8* %474, align 1
  br label %476

475:                                              ; preds = %372
  br label %476

476:                                              ; preds = %475, %457, %403
  br label %477

477:                                              ; preds = %476, %371
  br label %478

478:                                              ; preds = %477
  %479 = load i32, i32* %10, align 4
  %480 = add nsw i32 %479, 1
  store i32 %480, i32* %10, align 4
  br label %60, !llvm.loop !318

481:                                              ; preds = %60
  %482 = load %struct.png_image*, %struct.png_image** %3, align 8
  %483 = getelementptr inbounds %struct.png_image, %struct.png_image* %482, i32 0, i32 0
  %484 = load %struct.png_control*, %struct.png_control** %483, align 8
  %485 = getelementptr inbounds %struct.png_control, %struct.png_control* %484, i32 0, i32 0
  %486 = load %struct.png_struct_def*, %struct.png_struct_def** %485, align 8
  %487 = load %struct.png_image*, %struct.png_image** %3, align 8
  %488 = getelementptr inbounds %struct.png_image, %struct.png_image* %487, i32 0, i32 0
  %489 = load %struct.png_control*, %struct.png_control** %488, align 8
  %490 = getelementptr inbounds %struct.png_control, %struct.png_control* %489, i32 0, i32 1
  %491 = load %struct.png_info_def*, %struct.png_info_def** %490, align 8
  %492 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %12, i64 0, i64 0
  %493 = load i32, i32* %5, align 4
  call void @png_set_PLTE(%struct.png_struct_def* noundef %486, %struct.png_info_def* noundef %491, %struct.png_color_struct* noundef %492, i32 noundef %493)
  %494 = load i32, i32* %11, align 4
  %495 = icmp sgt i32 %494, 0
  br i1 %495, label %496, label %509

496:                                              ; preds = %481
  %497 = load %struct.png_image*, %struct.png_image** %3, align 8
  %498 = getelementptr inbounds %struct.png_image, %struct.png_image* %497, i32 0, i32 0
  %499 = load %struct.png_control*, %struct.png_control** %498, align 8
  %500 = getelementptr inbounds %struct.png_control, %struct.png_control* %499, i32 0, i32 0
  %501 = load %struct.png_struct_def*, %struct.png_struct_def** %500, align 8
  %502 = load %struct.png_image*, %struct.png_image** %3, align 8
  %503 = getelementptr inbounds %struct.png_image, %struct.png_image* %502, i32 0, i32 0
  %504 = load %struct.png_control*, %struct.png_control** %503, align 8
  %505 = getelementptr inbounds %struct.png_control, %struct.png_control* %504, i32 0, i32 1
  %506 = load %struct.png_info_def*, %struct.png_info_def** %505, align 8
  %507 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %508 = load i32, i32* %11, align 4
  call void @png_set_tRNS(%struct.png_struct_def* noundef %501, %struct.png_info_def* noundef %506, i8* noundef %507, i32 noundef %508, %struct.png_color_16_struct* noundef null)
  br label %509

509:                                              ; preds = %496, %481
  %510 = load i32, i32* %5, align 4
  %511 = load %struct.png_image*, %struct.png_image** %3, align 8
  %512 = getelementptr inbounds %struct.png_image, %struct.png_image* %511, i32 0, i32 6
  store i32 %510, i32* %512, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_write_image_16bit(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_write_control*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %19 = load i8*, i8** %2, align 8
  %20 = bitcast i8* %19 to %struct.png_image_write_control*
  store %struct.png_image_write_control* %20, %struct.png_image_write_control** %3, align 8
  %21 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %22 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %21, i32 0, i32 0
  %23 = load %struct.png_image*, %struct.png_image** %22, align 8
  store %struct.png_image* %23, %struct.png_image** %4, align 8
  %24 = load %struct.png_image*, %struct.png_image** %4, align 8
  %25 = getelementptr inbounds %struct.png_image, %struct.png_image* %24, i32 0, i32 0
  %26 = load %struct.png_control*, %struct.png_control** %25, align 8
  %27 = getelementptr inbounds %struct.png_control, %struct.png_control* %26, i32 0, i32 0
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %27, align 8
  store %struct.png_struct_def* %28, %struct.png_struct_def** %5, align 8
  %29 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %30 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %29, i32 0, i32 5
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast i8* %31 to i16*
  store i16* %32, i16** %6, align 8
  %33 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %34 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %33, i32 0, i32 7
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to i16*
  store i16* %36, i16** %7, align 8
  %37 = load %struct.png_image*, %struct.png_image** %4, align 8
  %38 = getelementptr inbounds %struct.png_image, %struct.png_image* %37, i32 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 2
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  %43 = select i1 %41, i32 3, i32 1
  store i32 %43, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %44 = load %struct.png_image*, %struct.png_image** %4, align 8
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %11, align 4
  %47 = load %struct.png_image*, %struct.png_image** %4, align 8
  %48 = getelementptr inbounds %struct.png_image, %struct.png_image* %47, i32 0, i32 4
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 1
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %1
  %53 = load %struct.png_image*, %struct.png_image** %4, align 8
  %54 = getelementptr inbounds %struct.png_image, %struct.png_image* %53, i32 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 32
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  store i32 -1, i32* %10, align 4
  %59 = load i16*, i16** %6, align 8
  %60 = getelementptr inbounds i16, i16* %59, i32 1
  store i16* %60, i16** %6, align 8
  %61 = load i16*, i16** %7, align 8
  %62 = getelementptr inbounds i16, i16* %61, i32 1
  store i16* %62, i16** %7, align 8
  br label %65

63:                                               ; preds = %52
  %64 = load i32, i32* %9, align 4
  store i32 %64, i32* %10, align 4
  br label %65

65:                                               ; preds = %63, %58
  br label %68

66:                                               ; preds = %1
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  call void @png_error(%struct.png_struct_def* noundef %67, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31.533, i64 0, i64 0)) #13
  unreachable

68:                                               ; preds = %65
  %69 = load i16*, i16** %7, align 8
  %70 = load %struct.png_image*, %struct.png_image** %4, align 8
  %71 = getelementptr inbounds %struct.png_image, %struct.png_image* %70, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %9, align 4
  %74 = add i32 %73, 1
  %75 = mul i32 %72, %74
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i16, i16* %69, i64 %76
  store i16* %77, i16** %8, align 8
  br label %78

78:                                               ; preds = %171, %68
  %79 = load i32, i32* %11, align 4
  %80 = icmp ugt i32 %79, 0
  br i1 %80, label %81, label %174

81:                                               ; preds = %78
  %82 = load i16*, i16** %6, align 8
  store i16* %82, i16** %12, align 8
  %83 = load i16*, i16** %7, align 8
  store i16* %83, i16** %13, align 8
  br label %84

84:                                               ; preds = %153, %81
  %85 = load i16*, i16** %13, align 8
  %86 = load i16*, i16** %8, align 8
  %87 = icmp ult i16* %85, %86
  br i1 %87, label %88, label %158

88:                                               ; preds = %84
  %89 = load i16*, i16** %12, align 8
  %90 = load i32, i32* %10, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i16, i16* %89, i64 %91
  %93 = load i16, i16* %92, align 2
  store i16 %93, i16* %14, align 2
  store i32 0, i32* %15, align 4
  %94 = load i16, i16* %14, align 2
  %95 = load i16*, i16** %13, align 8
  %96 = load i32, i32* %10, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %95, i64 %97
  store i16 %94, i16* %98, align 2
  %99 = load i16, i16* %14, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %102, label %114

102:                                              ; preds = %88
  %103 = load i16, i16* %14, align 2
  %104 = zext i16 %103 to i32
  %105 = icmp slt i32 %104, 65535
  br i1 %105, label %106, label %114

106:                                              ; preds = %102
  %107 = load i16, i16* %14, align 2
  %108 = zext i16 %107 to i32
  %109 = ashr i32 %108, 1
  %110 = add nsw i32 2147450880, %109
  %111 = load i16, i16* %14, align 2
  %112 = zext i16 %111 to i32
  %113 = sdiv i32 %110, %112
  store i32 %113, i32* %15, align 4
  br label %114

114:                                              ; preds = %106, %102, %88
  %115 = load i32, i32* %9, align 4
  store i32 %115, i32* %16, align 4
  br label %116

116:                                              ; preds = %149, %114
  %117 = load i16*, i16** %12, align 8
  %118 = getelementptr inbounds i16, i16* %117, i32 1
  store i16* %118, i16** %12, align 8
  %119 = load i16, i16* %117, align 2
  store i16 %119, i16* %17, align 2
  %120 = load i16, i16* %17, align 2
  %121 = zext i16 %120 to i32
  %122 = load i16, i16* %14, align 2
  %123 = zext i16 %122 to i32
  %124 = icmp sge i32 %121, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %116
  store i16 -1, i16* %17, align 2
  br label %145

126:                                              ; preds = %116
  %127 = load i16, i16* %17, align 2
  %128 = zext i16 %127 to i32
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %144

130:                                              ; preds = %126
  %131 = load i16, i16* %14, align 2
  %132 = zext i16 %131 to i32
  %133 = icmp slt i32 %132, 65535
  br i1 %133, label %134, label %144

134:                                              ; preds = %130
  %135 = load i16, i16* %17, align 2
  %136 = zext i16 %135 to i32
  %137 = load i32, i32* %15, align 4
  %138 = mul i32 %136, %137
  store i32 %138, i32* %18, align 4
  %139 = load i32, i32* %18, align 4
  %140 = add i32 %139, 16384
  store i32 %140, i32* %18, align 4
  %141 = load i32, i32* %18, align 4
  %142 = lshr i32 %141, 15
  %143 = trunc i32 %142 to i16
  store i16 %143, i16* %17, align 2
  br label %144

144:                                              ; preds = %134, %130, %126
  br label %145

145:                                              ; preds = %144, %125
  %146 = load i16, i16* %17, align 2
  %147 = load i16*, i16** %13, align 8
  %148 = getelementptr inbounds i16, i16* %147, i32 1
  store i16* %148, i16** %13, align 8
  store i16 %146, i16* %147, align 2
  br label %149

149:                                              ; preds = %145
  %150 = load i32, i32* %16, align 4
  %151 = add nsw i32 %150, -1
  store i32 %151, i32* %16, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %116, label %153, !llvm.loop !319

153:                                              ; preds = %149
  %154 = load i16*, i16** %12, align 8
  %155 = getelementptr inbounds i16, i16* %154, i32 1
  store i16* %155, i16** %12, align 8
  %156 = load i16*, i16** %13, align 8
  %157 = getelementptr inbounds i16, i16* %156, i32 1
  store i16* %157, i16** %13, align 8
  br label %84, !llvm.loop !320

158:                                              ; preds = %84
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %160 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %161 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %160, i32 0, i32 7
  %162 = load i8*, i8** %161, align 8
  call void @png_write_row(%struct.png_struct_def* noundef %159, i8* noundef %162)
  %163 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %164 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %163, i32 0, i32 6
  %165 = load i64, i64* %164, align 8
  %166 = trunc i64 %165 to i16
  %167 = zext i16 %166 to i64
  %168 = udiv i64 %167, 2
  %169 = load i16*, i16** %6, align 8
  %170 = getelementptr inbounds i16, i16* %169, i64 %168
  store i16* %170, i16** %6, align 8
  br label %171

171:                                              ; preds = %158
  %172 = load i32, i32* %11, align 4
  %173 = add i32 %172, -1
  store i32 %173, i32* %11, align 4
  br label %78, !llvm.loop !321

174:                                              ; preds = %78
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_write_image_8bit(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.png_image_write_control*, align 8
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca %struct.png_struct_def*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i16*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i16, align 2
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i16*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %22 = load i8*, i8** %2, align 8
  %23 = bitcast i8* %22 to %struct.png_image_write_control*
  store %struct.png_image_write_control* %23, %struct.png_image_write_control** %3, align 8
  %24 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %25 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %24, i32 0, i32 0
  %26 = load %struct.png_image*, %struct.png_image** %25, align 8
  store %struct.png_image* %26, %struct.png_image** %4, align 8
  %27 = load %struct.png_image*, %struct.png_image** %4, align 8
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %27, i32 0, i32 0
  %29 = load %struct.png_control*, %struct.png_control** %28, align 8
  %30 = getelementptr inbounds %struct.png_control, %struct.png_control* %29, i32 0, i32 0
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %30, align 8
  store %struct.png_struct_def* %31, %struct.png_struct_def** %5, align 8
  %32 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %33 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %32, i32 0, i32 5
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast i8* %34 to i16*
  store i16* %35, i16** %6, align 8
  %36 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %37 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %36, i32 0, i32 7
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %7, align 8
  %39 = load %struct.png_image*, %struct.png_image** %4, align 8
  %40 = getelementptr inbounds %struct.png_image, %struct.png_image* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %8, align 4
  %42 = load %struct.png_image*, %struct.png_image** %4, align 8
  %43 = getelementptr inbounds %struct.png_image, %struct.png_image* %42, i32 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 2
  %46 = icmp ne i32 %45, 0
  %47 = zext i1 %46 to i64
  %48 = select i1 %46, i32 3, i32 1
  store i32 %48, i32* %9, align 4
  %49 = load %struct.png_image*, %struct.png_image** %4, align 8
  %50 = getelementptr inbounds %struct.png_image, %struct.png_image* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 1
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %158

54:                                               ; preds = %1
  %55 = load %struct.png_image*, %struct.png_image** %4, align 8
  %56 = getelementptr inbounds %struct.png_image, %struct.png_image* %55, i32 0, i32 4
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 32
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %54
  store i32 -1, i32* %11, align 4
  %61 = load i16*, i16** %6, align 8
  %62 = getelementptr inbounds i16, i16* %61, i32 1
  store i16* %62, i16** %6, align 8
  %63 = load i8*, i8** %7, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %7, align 8
  br label %67

65:                                               ; preds = %54
  %66 = load i32, i32* %9, align 4
  store i32 %66, i32* %11, align 4
  br label %67

67:                                               ; preds = %65, %60
  %68 = load i8*, i8** %7, align 8
  %69 = load %struct.png_image*, %struct.png_image** %4, align 8
  %70 = getelementptr inbounds %struct.png_image, %struct.png_image* %69, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* %9, align 4
  %73 = add i32 %72, 1
  %74 = mul i32 %71, %73
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %68, i64 %75
  store i8* %76, i8** %10, align 8
  br label %77

77:                                               ; preds = %154, %67
  %78 = load i32, i32* %8, align 4
  %79 = icmp ugt i32 %78, 0
  br i1 %79, label %80, label %157

80:                                               ; preds = %77
  %81 = load i16*, i16** %6, align 8
  store i16* %81, i16** %12, align 8
  %82 = load i8*, i8** %7, align 8
  store i8* %82, i8** %13, align 8
  br label %83

83:                                               ; preds = %136, %80
  %84 = load i8*, i8** %13, align 8
  %85 = load i8*, i8** %10, align 8
  %86 = icmp ult i8* %84, %85
  br i1 %86, label %87, label %141

87:                                               ; preds = %83
  %88 = load i16*, i16** %12, align 8
  %89 = load i32, i32* %11, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %88, i64 %90
  %92 = load i16, i16* %91, align 2
  store i16 %92, i16* %14, align 2
  %93 = load i16, i16* %14, align 2
  %94 = zext i16 %93 to i32
  %95 = mul i32 %94, 255
  %96 = add i32 %95, 32895
  %97 = lshr i32 %96, 16
  %98 = trunc i32 %97 to i8
  store i8 %98, i8* %15, align 1
  store i32 0, i32* %16, align 4
  %99 = load i8, i8* %15, align 1
  %100 = load i8*, i8** %13, align 8
  %101 = load i32, i32* %11, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  store i8 %99, i8* %103, align 1
  %104 = load i8, i8* %15, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %87
  %108 = load i8, i8* %15, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp slt i32 %109, 255
  br i1 %110, label %111, label %119

111:                                              ; preds = %107
  %112 = load i16, i16* %14, align 2
  %113 = zext i16 %112 to i32
  %114 = ashr i32 %113, 1
  %115 = add nsw i32 2139062400, %114
  %116 = load i16, i16* %14, align 2
  %117 = zext i16 %116 to i32
  %118 = sdiv i32 %115, %117
  store i32 %118, i32* %16, align 4
  br label %119

119:                                              ; preds = %111, %107, %87
  %120 = load i32, i32* %9, align 4
  store i32 %120, i32* %17, align 4
  br label %121

121:                                              ; preds = %132, %119
  %122 = load i16*, i16** %12, align 8
  %123 = getelementptr inbounds i16, i16* %122, i32 1
  store i16* %123, i16** %12, align 8
  %124 = load i16, i16* %122, align 2
  %125 = zext i16 %124 to i32
  %126 = load i16, i16* %14, align 2
  %127 = zext i16 %126 to i32
  %128 = load i32, i32* %16, align 4
  %129 = call zeroext i8 @png_unpremultiply(i32 noundef %125, i32 noundef %127, i32 noundef %128)
  %130 = load i8*, i8** %13, align 8
  %131 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %131, i8** %13, align 8
  store i8 %129, i8* %130, align 1
  br label %132

132:                                              ; preds = %121
  %133 = load i32, i32* %17, align 4
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %17, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %121, label %136, !llvm.loop !322

136:                                              ; preds = %132
  %137 = load i16*, i16** %12, align 8
  %138 = getelementptr inbounds i16, i16* %137, i32 1
  store i16* %138, i16** %12, align 8
  %139 = load i8*, i8** %13, align 8
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %13, align 8
  br label %83, !llvm.loop !323

141:                                              ; preds = %83
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %143 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %144 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %143, i32 0, i32 7
  %145 = load i8*, i8** %144, align 8
  call void @png_write_row(%struct.png_struct_def* noundef %142, i8* noundef %145)
  %146 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %147 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %146, i32 0, i32 6
  %148 = load i64, i64* %147, align 8
  %149 = trunc i64 %148 to i16
  %150 = zext i16 %149 to i64
  %151 = udiv i64 %150, 2
  %152 = load i16*, i16** %6, align 8
  %153 = getelementptr inbounds i16, i16* %152, i64 %151
  store i16* %153, i16** %6, align 8
  br label %154

154:                                              ; preds = %141
  %155 = load i32, i32* %8, align 4
  %156 = add i32 %155, -1
  store i32 %156, i32* %8, align 4
  br label %77, !llvm.loop !324

157:                                              ; preds = %77
  br label %221

158:                                              ; preds = %1
  %159 = load i8*, i8** %7, align 8
  %160 = load %struct.png_image*, %struct.png_image** %4, align 8
  %161 = getelementptr inbounds %struct.png_image, %struct.png_image* %160, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = load i32, i32* %9, align 4
  %164 = mul i32 %162, %163
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %159, i64 %165
  store i8* %166, i8** %18, align 8
  br label %167

167:                                              ; preds = %217, %158
  %168 = load i32, i32* %8, align 4
  %169 = icmp ugt i32 %168, 0
  br i1 %169, label %170, label %220

170:                                              ; preds = %167
  %171 = load i16*, i16** %6, align 8
  store i16* %171, i16** %19, align 8
  %172 = load i8*, i8** %7, align 8
  store i8* %172, i8** %20, align 8
  br label %173

173:                                              ; preds = %177, %170
  %174 = load i8*, i8** %20, align 8
  %175 = load i8*, i8** %18, align 8
  %176 = icmp ult i8* %174, %175
  br i1 %176, label %177, label %206

177:                                              ; preds = %173
  %178 = load i16*, i16** %19, align 8
  %179 = getelementptr inbounds i16, i16* %178, i32 1
  store i16* %179, i16** %19, align 8
  %180 = load i16, i16* %178, align 2
  %181 = zext i16 %180 to i32
  store i32 %181, i32* %21, align 4
  %182 = load i32, i32* %21, align 4
  %183 = mul i32 %182, 255
  store i32 %183, i32* %21, align 4
  %184 = load i32, i32* %21, align 4
  %185 = lshr i32 %184, 15
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = zext i16 %188 to i32
  %190 = load i32, i32* %21, align 4
  %191 = and i32 %190, 32767
  %192 = load i32, i32* %21, align 4
  %193 = lshr i32 %192, 15
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = mul i32 %191, %197
  %199 = lshr i32 %198, 12
  %200 = add i32 %189, %199
  %201 = lshr i32 %200, 8
  %202 = and i32 255, %201
  %203 = trunc i32 %202 to i8
  %204 = load i8*, i8** %20, align 8
  %205 = getelementptr inbounds i8, i8* %204, i32 1
  store i8* %205, i8** %20, align 8
  store i8 %203, i8* %204, align 1
  br label %173, !llvm.loop !325

206:                                              ; preds = %173
  %207 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %208 = load i8*, i8** %7, align 8
  call void @png_write_row(%struct.png_struct_def* noundef %207, i8* noundef %208)
  %209 = load %struct.png_image_write_control*, %struct.png_image_write_control** %3, align 8
  %210 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %209, i32 0, i32 6
  %211 = load i64, i64* %210, align 8
  %212 = trunc i64 %211 to i16
  %213 = zext i16 %212 to i64
  %214 = udiv i64 %213, 2
  %215 = load i16*, i16** %6, align 8
  %216 = getelementptr inbounds i16, i16* %215, i64 %214
  store i16* %216, i16** %6, align 8
  br label %217

217:                                              ; preds = %206
  %218 = load i32, i32* %8, align 4
  %219 = add i32 %218, -1
  store i32 %219, i32* %8, align 4
  br label %167, !llvm.loop !326

220:                                              ; preds = %167
  br label %221

221:                                              ; preds = %220, %157
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @png_unpremultiply(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %8 = load i32, i32* %5, align 4
  %9 = load i32, i32* %6, align 4
  %10 = icmp uge i32 %8, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = load i32, i32* %6, align 4
  %13 = icmp ult i32 %12, 128
  br i1 %13, label %14, label %15

14:                                               ; preds = %11, %3
  store i8 -1, i8* %4, align 1
  br label %54

15:                                               ; preds = %11
  %16 = load i32, i32* %5, align 4
  %17 = icmp ugt i32 %16, 0
  br i1 %17, label %18, label %53

18:                                               ; preds = %15
  %19 = load i32, i32* %6, align 4
  %20 = icmp ult i32 %19, 65407
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %5, align 4
  %24 = mul i32 %23, %22
  store i32 %24, i32* %5, align 4
  %25 = load i32, i32* %5, align 4
  %26 = add i32 %25, 64
  store i32 %26, i32* %5, align 4
  %27 = load i32, i32* %5, align 4
  %28 = lshr i32 %27, 7
  store i32 %28, i32* %5, align 4
  br label %32

29:                                               ; preds = %18
  %30 = load i32, i32* %5, align 4
  %31 = mul i32 %30, 255
  store i32 %31, i32* %5, align 4
  br label %32

32:                                               ; preds = %29, %21
  %33 = load i32, i32* %5, align 4
  %34 = lshr i32 %33, 15
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [512 x i16], [512 x i16]* @png_sRGB_base, i64 0, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = load i32, i32* %5, align 4
  %40 = and i32 %39, 32767
  %41 = load i32, i32* %5, align 4
  %42 = lshr i32 %41, 15
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [512 x i8], [512 x i8]* @png_sRGB_delta, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = mul i32 %40, %46
  %48 = lshr i32 %47, 12
  %49 = add i32 %38, %48
  %50 = lshr i32 %49, 8
  %51 = and i32 255, %50
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* %4, align 1
  br label %54

53:                                               ; preds = %15
  store i8 0, i8* %4, align 1
  br label %54

54:                                               ; preds = %53, %32, %14
  %55 = load i8, i8* %4, align 1
  ret i8 %55
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_write_to_stdio(%struct.png_image* noundef %0, %struct._IO_FILE* noundef %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i8* noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.png_image*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca %struct.png_image_write_control, align 8
  %15 = alloca i32, align 4
  store %struct.png_image* %0, %struct.png_image** %8, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %9, align 8
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  %16 = load %struct.png_image*, %struct.png_image** %8, align 8
  %17 = icmp ne %struct.png_image* %16, null
  br i1 %17, label %18, label %62

18:                                               ; preds = %6
  %19 = load %struct.png_image*, %struct.png_image** %8, align 8
  %20 = getelementptr inbounds %struct.png_image, %struct.png_image* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %62

23:                                               ; preds = %18
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %25 = icmp ne %struct._IO_FILE* %24, null
  br i1 %25, label %26, label %59

26:                                               ; preds = %23
  %27 = load i8*, i8** %11, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %59

29:                                               ; preds = %26
  %30 = load %struct.png_image*, %struct.png_image** %8, align 8
  %31 = call i32 @png_image_write_init(%struct.png_image* noundef %30)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %58

33:                                               ; preds = %29
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %35 = bitcast %struct._IO_FILE* %34 to i8*
  %36 = load %struct.png_image*, %struct.png_image** %8, align 8
  %37 = getelementptr inbounds %struct.png_image, %struct.png_image* %36, i32 0, i32 0
  %38 = load %struct.png_control*, %struct.png_control** %37, align 8
  %39 = getelementptr inbounds %struct.png_control, %struct.png_control* %38, i32 0, i32 0
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %39, align 8
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 9
  store i8* %35, i8** %41, align 8
  %42 = bitcast %struct.png_image_write_control* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 88, i1 false)
  %43 = load %struct.png_image*, %struct.png_image** %8, align 8
  %44 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %14, i32 0, i32 0
  store %struct.png_image* %43, %struct.png_image** %44, align 8
  %45 = load i8*, i8** %11, align 8
  %46 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %14, i32 0, i32 1
  store i8* %45, i8** %46, align 8
  %47 = load i32, i32* %12, align 4
  %48 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %14, i32 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = load i8*, i8** %13, align 8
  %50 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %14, i32 0, i32 3
  store i8* %49, i8** %50, align 8
  %51 = load i32, i32* %10, align 4
  %52 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %14, i32 0, i32 4
  store i32 %51, i32* %52, align 8
  %53 = load %struct.png_image*, %struct.png_image** %8, align 8
  %54 = bitcast %struct.png_image_write_control* %14 to i8*
  %55 = call i32 @png_safe_execute(%struct.png_image* noundef %53, i32 (i8*)* noundef @png_image_write_main, i8* noundef %54)
  store i32 %55, i32* %15, align 4
  %56 = load %struct.png_image*, %struct.png_image** %8, align 8
  call void @png_image_free(%struct.png_image* noundef %56)
  %57 = load i32, i32* %15, align 4
  store i32 %57, i32* %7, align 4
  br label %69

58:                                               ; preds = %29
  store i32 0, i32* %7, align 4
  br label %69

59:                                               ; preds = %26, %23
  %60 = load %struct.png_image*, %struct.png_image** %8, align 8
  %61 = call i32 @png_image_error(%struct.png_image* noundef %60, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.537, i64 0, i64 0))
  store i32 %61, i32* %7, align 4
  br label %69

62:                                               ; preds = %18, %6
  %63 = load %struct.png_image*, %struct.png_image** %8, align 8
  %64 = icmp ne %struct.png_image* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load %struct.png_image*, %struct.png_image** %8, align 8
  %67 = call i32 @png_image_error(%struct.png_image* noundef %66, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18.538, i64 0, i64 0))
  store i32 %67, i32* %7, align 4
  br label %69

68:                                               ; preds = %62
  store i32 0, i32* %7, align 4
  br label %69

69:                                               ; preds = %68, %65, %59, %58, %33
  %70 = load i32, i32* %7, align 4
  ret i32 %70
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @png_image_write_to_file(%struct.png_image* noundef %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, i8* noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.png_image*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i32, align 4
  store %struct.png_image* %0, %struct.png_image** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  %16 = load %struct.png_image*, %struct.png_image** %8, align 8
  %17 = icmp ne %struct.png_image* %16, null
  br i1 %17, label %18, label %85

18:                                               ; preds = %6
  %19 = load %struct.png_image*, %struct.png_image** %8, align 8
  %20 = getelementptr inbounds %struct.png_image, %struct.png_image* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %85

23:                                               ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %82

26:                                               ; preds = %23
  %27 = load i8*, i8** %11, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %82

29:                                               ; preds = %26
  %30 = load i8*, i8** %9, align 8
  %31 = call noalias %struct._IO_FILE* @fopen(i8* noundef %30, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.539, i64 0, i64 0))
  store %struct._IO_FILE* %31, %struct._IO_FILE** %14, align 8
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %33 = icmp ne %struct._IO_FILE* %32, null
  br i1 %33, label %34, label %76

34:                                               ; preds = %29
  %35 = load %struct.png_image*, %struct.png_image** %8, align 8
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %37 = load i32, i32* %10, align 4
  %38 = load i8*, i8** %11, align 8
  %39 = load i32, i32* %12, align 4
  %40 = load i8*, i8** %13, align 8
  %41 = call i32 @png_image_write_to_stdio(%struct.png_image* noundef %35, %struct._IO_FILE* noundef %36, i32 noundef %37, i8* noundef %38, i32 noundef %39, i8* noundef %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %71

43:                                               ; preds = %34
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %45 = call i32 @fflush(%struct._IO_FILE* noundef %44)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %43
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %49 = call i32 @ferror(%struct._IO_FILE* noundef %48) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %53 = call i32 @fclose(%struct._IO_FILE* noundef %52)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  store i32 1, i32* %7, align 4
  br label %92

56:                                               ; preds = %51
  %57 = call i32* @__errno_location() #18
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %15, align 4
  br label %64

59:                                               ; preds = %47, %43
  %60 = call i32* @__errno_location() #18
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %15, align 4
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %63 = call i32 @fclose(%struct._IO_FILE* noundef %62)
  br label %64

64:                                               ; preds = %59, %56
  %65 = load i8*, i8** %9, align 8
  %66 = call i32 @remove(i8* noundef %65) #16
  %67 = load %struct.png_image*, %struct.png_image** %8, align 8
  %68 = load i32, i32* %15, align 4
  %69 = call i8* @strerror(i32 noundef %68) #16
  %70 = call i32 @png_image_error(%struct.png_image* noundef %67, i8* noundef %69)
  store i32 %70, i32* %7, align 4
  br label %92

71:                                               ; preds = %34
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %73 = call i32 @fclose(%struct._IO_FILE* noundef %72)
  %74 = load i8*, i8** %9, align 8
  %75 = call i32 @remove(i8* noundef %74) #16
  store i32 0, i32* %7, align 4
  br label %92

76:                                               ; preds = %29
  %77 = load %struct.png_image*, %struct.png_image** %8, align 8
  %78 = call i32* @__errno_location() #18
  %79 = load i32, i32* %78, align 4
  %80 = call i8* @strerror(i32 noundef %79) #16
  %81 = call i32 @png_image_error(%struct.png_image* noundef %77, i8* noundef %80)
  store i32 %81, i32* %7, align 4
  br label %92

82:                                               ; preds = %26, %23
  %83 = load %struct.png_image*, %struct.png_image** %8, align 8
  %84 = call i32 @png_image_error(%struct.png_image* noundef %83, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20.540, i64 0, i64 0))
  store i32 %84, i32* %7, align 4
  br label %92

85:                                               ; preds = %18, %6
  %86 = load %struct.png_image*, %struct.png_image** %8, align 8
  %87 = icmp ne %struct.png_image* %86, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %85
  %89 = load %struct.png_image*, %struct.png_image** %8, align 8
  %90 = call i32 @png_image_error(%struct.png_image* noundef %89, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21.541, i64 0, i64 0))
  store i32 %90, i32* %7, align 4
  br label %92

91:                                               ; preds = %85
  store i32 0, i32* %7, align 4
  br label %92

92:                                               ; preds = %91, %88, %82, %76, %71, %64, %55
  %93 = load i32, i32* %7, align 4
  ret i32 %93
}

; Function Attrs: nounwind
declare i32 @ferror(%struct._IO_FILE* noundef) #7

; Function Attrs: nounwind
declare i32 @remove(i8* noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_write_transformations(%struct.png_struct_def* noalias noundef %0, %struct.png_row_info_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca %struct.png_row_info_struct*, align 8
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %4, align 8
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  br label %151

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1048576
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %8
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 11
  %17 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %16, align 8
  %18 = icmp ne void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %17, null
  br i1 %18, label %19, label %29

19:                                               ; preds = %14
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 11
  %22 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %21, align 8
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %24 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 46
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  call void %22(%struct.png_struct_def* noundef %23, %struct.png_row_info_struct* noundef %24, i8* noundef %28)
  br label %29

29:                                               ; preds = %19, %14
  br label %30

30:                                               ; preds = %29, %8
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 17
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 32768
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %30
  %37 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 46
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 16
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 128
  %46 = icmp ne i32 %45, 0
  %47 = xor i1 %46, true
  %48 = zext i1 %47 to i32
  call void @png_do_strip_channel(%struct.png_row_info_struct* noundef %37, i8* noundef %41, i32 noundef %48)
  br label %49

49:                                               ; preds = %36, %30
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 17
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 65536
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 46
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  call void @png_do_packswap(%struct.png_row_info_struct* noundef %56, i8* noundef %60)
  br label %61

61:                                               ; preds = %55, %49
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 17
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %61
  %68 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 46
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %74 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 62
  %75 = load i8, i8* %74, align 8
  %76 = zext i8 %75 to i32
  call void @png_do_pack(%struct.png_row_info_struct* noundef %68, i8* noundef %72, i32 noundef %76)
  br label %77

77:                                               ; preds = %67, %61
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 17
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 16
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %89

83:                                               ; preds = %77
  %84 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 46
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  call void @png_do_swap(%struct.png_row_info_struct* noundef %84, i8* noundef %88)
  br label %89

89:                                               ; preds = %83, %77
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 17
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 8
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %103

95:                                               ; preds = %89
  %96 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %97, i32 0, i32 46
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 88
  call void @png_do_shift(%struct.png_row_info_struct* noundef %96, i8* noundef %100, %struct.png_color_8_struct* noundef %102)
  br label %103

103:                                              ; preds = %95, %89
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %105 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %104, i32 0, i32 17
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 131072
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %103
  %110 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 46
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  call void @png_do_write_swap_alpha(%struct.png_row_info_struct* noundef %110, i8* noundef %114)
  br label %115

115:                                              ; preds = %109, %103
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 17
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 524288
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %115
  %122 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %124 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %123, i32 0, i32 46
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  call void @png_do_write_invert_alpha(%struct.png_row_info_struct* noundef %122, i8* noundef %126)
  br label %127

127:                                              ; preds = %121, %115
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 17
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 1
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %127
  %134 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %135, i32 0, i32 46
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  call void @png_do_bgr(%struct.png_row_info_struct* noundef %134, i8* noundef %138)
  br label %139

139:                                              ; preds = %133, %127
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 17
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 32
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %148 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 46
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 1
  call void @png_do_invert(%struct.png_row_info_struct* noundef %146, i8* noundef %150)
  br label %151

151:                                              ; preds = %7, %145, %139
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_pack(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8, align 1
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i8, align 1
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %27 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %28 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %27, i32 0, i32 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %226

32:                                               ; preds = %3
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 4
  %35 = load i8, i8* %34, align 2
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %226

38:                                               ; preds = %32
  %39 = load i32, i32* %6, align 4
  switch i32 %39, label %179 [
    i32 1, label %40
    i32 2, label %85
    i32 4, label %132
  ]

40:                                               ; preds = %38
  %41 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %42 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %12, align 4
  %44 = load i8*, i8** %5, align 8
  store i8* %44, i8** %7, align 8
  %45 = load i8*, i8** %5, align 8
  store i8* %45, i8** %8, align 8
  store i32 128, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %46

46:                                               ; preds = %74, %40
  %47 = load i32, i32* %11, align 4
  %48 = load i32, i32* %12, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %77

50:                                               ; preds = %46
  %51 = load i8*, i8** %7, align 8
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %10, align 4
  %58 = or i32 %57, %56
  store i32 %58, i32* %10, align 4
  br label %59

59:                                               ; preds = %55, %50
  %60 = load i8*, i8** %7, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %7, align 8
  %62 = load i32, i32* %9, align 4
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = load i32, i32* %9, align 4
  %66 = ashr i32 %65, 1
  store i32 %66, i32* %9, align 4
  br label %73

67:                                               ; preds = %59
  store i32 128, i32* %9, align 4
  %68 = load i32, i32* %10, align 4
  %69 = trunc i32 %68 to i8
  %70 = load i8*, i8** %8, align 8
  store i8 %69, i8* %70, align 1
  %71 = load i8*, i8** %8, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %8, align 8
  store i32 0, i32* %10, align 4
  br label %73

73:                                               ; preds = %67, %64
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %11, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %11, align 4
  br label %46, !llvm.loop !327

77:                                               ; preds = %46
  %78 = load i32, i32* %9, align 4
  %79 = icmp ne i32 %78, 128
  br i1 %79, label %80, label %84

80:                                               ; preds = %77
  %81 = load i32, i32* %10, align 4
  %82 = trunc i32 %81 to i8
  %83 = load i8*, i8** %8, align 8
  store i8 %82, i8* %83, align 1
  br label %84

84:                                               ; preds = %80, %77
  br label %180

85:                                               ; preds = %38
  %86 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %87 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %18, align 4
  %89 = load i8*, i8** %5, align 8
  store i8* %89, i8** %13, align 8
  %90 = load i8*, i8** %5, align 8
  store i8* %90, i8** %14, align 8
  store i32 6, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  br label %91

91:                                               ; preds = %121, %85
  %92 = load i32, i32* %17, align 4
  %93 = load i32, i32* %18, align 4
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %95, label %124

95:                                               ; preds = %91
  %96 = load i8*, i8** %13, align 8
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = and i32 %98, 3
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %19, align 1
  %101 = load i8, i8* %19, align 1
  %102 = zext i8 %101 to i32
  %103 = load i32, i32* %15, align 4
  %104 = shl i32 %102, %103
  %105 = load i32, i32* %16, align 4
  %106 = or i32 %105, %104
  store i32 %106, i32* %16, align 4
  %107 = load i32, i32* %15, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %95
  store i32 6, i32* %15, align 4
  %110 = load i32, i32* %16, align 4
  %111 = trunc i32 %110 to i8
  %112 = load i8*, i8** %14, align 8
  store i8 %111, i8* %112, align 1
  %113 = load i8*, i8** %14, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %14, align 8
  store i32 0, i32* %16, align 4
  br label %118

115:                                              ; preds = %95
  %116 = load i32, i32* %15, align 4
  %117 = sub i32 %116, 2
  store i32 %117, i32* %15, align 4
  br label %118

118:                                              ; preds = %115, %109
  %119 = load i8*, i8** %13, align 8
  %120 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %120, i8** %13, align 8
  br label %121

121:                                              ; preds = %118
  %122 = load i32, i32* %17, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %17, align 4
  br label %91, !llvm.loop !328

124:                                              ; preds = %91
  %125 = load i32, i32* %15, align 4
  %126 = icmp ne i32 %125, 6
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = load i32, i32* %16, align 4
  %129 = trunc i32 %128 to i8
  %130 = load i8*, i8** %14, align 8
  store i8 %129, i8* %130, align 1
  br label %131

131:                                              ; preds = %127, %124
  br label %180

132:                                              ; preds = %38
  %133 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %134 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  store i32 %135, i32* %25, align 4
  %136 = load i8*, i8** %5, align 8
  store i8* %136, i8** %20, align 8
  %137 = load i8*, i8** %5, align 8
  store i8* %137, i8** %21, align 8
  store i32 4, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %24, align 4
  br label %138

138:                                              ; preds = %168, %132
  %139 = load i32, i32* %24, align 4
  %140 = load i32, i32* %25, align 4
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %142, label %171

142:                                              ; preds = %138
  %143 = load i8*, i8** %20, align 8
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = and i32 %145, 15
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %26, align 1
  %148 = load i8, i8* %26, align 1
  %149 = zext i8 %148 to i32
  %150 = load i32, i32* %22, align 4
  %151 = shl i32 %149, %150
  %152 = load i32, i32* %23, align 4
  %153 = or i32 %152, %151
  store i32 %153, i32* %23, align 4
  %154 = load i32, i32* %22, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %142
  store i32 4, i32* %22, align 4
  %157 = load i32, i32* %23, align 4
  %158 = trunc i32 %157 to i8
  %159 = load i8*, i8** %21, align 8
  store i8 %158, i8* %159, align 1
  %160 = load i8*, i8** %21, align 8
  %161 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %161, i8** %21, align 8
  store i32 0, i32* %23, align 4
  br label %165

162:                                              ; preds = %142
  %163 = load i32, i32* %22, align 4
  %164 = sub i32 %163, 4
  store i32 %164, i32* %22, align 4
  br label %165

165:                                              ; preds = %162, %156
  %166 = load i8*, i8** %20, align 8
  %167 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %167, i8** %20, align 8
  br label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %24, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %24, align 4
  br label %138, !llvm.loop !329

171:                                              ; preds = %138
  %172 = load i32, i32* %22, align 4
  %173 = icmp ne i32 %172, 4
  br i1 %173, label %174, label %178

174:                                              ; preds = %171
  %175 = load i32, i32* %23, align 4
  %176 = trunc i32 %175 to i8
  %177 = load i8*, i8** %21, align 8
  store i8 %176, i8* %177, align 1
  br label %178

178:                                              ; preds = %174, %171
  br label %180

179:                                              ; preds = %38
  br label %180

180:                                              ; preds = %179, %178, %131, %84
  %181 = load i32, i32* %6, align 4
  %182 = trunc i32 %181 to i8
  %183 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %184 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %183, i32 0, i32 3
  store i8 %182, i8* %184, align 1
  %185 = load i32, i32* %6, align 4
  %186 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %187 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %186, i32 0, i32 4
  %188 = load i8, i8* %187, align 2
  %189 = zext i8 %188 to i32
  %190 = mul i32 %185, %189
  %191 = trunc i32 %190 to i8
  %192 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %193 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %192, i32 0, i32 5
  store i8 %191, i8* %193, align 1
  %194 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %195 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %194, i32 0, i32 5
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = icmp sge i32 %197, 8
  br i1 %198, label %199, label %210

199:                                              ; preds = %180
  %200 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %201 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %200, i32 0, i32 0
  %202 = load i32, i32* %201, align 8
  %203 = zext i32 %202 to i64
  %204 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %205 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %204, i32 0, i32 5
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i64
  %208 = lshr i64 %207, 3
  %209 = mul i64 %203, %208
  br label %222

210:                                              ; preds = %180
  %211 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %212 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %211, i32 0, i32 0
  %213 = load i32, i32* %212, align 8
  %214 = zext i32 %213 to i64
  %215 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %216 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %215, i32 0, i32 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = mul i64 %214, %218
  %220 = add i64 %219, 7
  %221 = lshr i64 %220, 3
  br label %222

222:                                              ; preds = %210, %199
  %223 = phi i64 [ %209, %199 ], [ %221, %210 ]
  %224 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %225 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %224, i32 0, i32 1
  store i64 %223, i64* %225, align 8
  br label %226

226:                                              ; preds = %222, %32, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_shift(%struct.png_row_info_struct* noundef %0, i8* noundef %1, %struct.png_color_8_struct* noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.png_color_8_struct*, align 8
  %7 = alloca [4 x i32], align 16
  %8 = alloca [4 x i32], align 16
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.png_color_8_struct* %2, %struct.png_color_8_struct** %6, align 8
  %31 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %32 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %31, i32 0, i32 2
  %33 = load i8, i8* %32, align 8
  %34 = zext i8 %33 to i32
  %35 = icmp ne i32 %34, 3
  br i1 %35, label %36, label %399

36:                                               ; preds = %3
  store i32 0, i32* %9, align 4
  %37 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %38 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %37, i32 0, i32 2
  %39 = load i8, i8* %38, align 8
  %40 = zext i8 %39 to i32
  %41 = and i32 %40, 2
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %107

43:                                               ; preds = %36
  %44 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %44, i32 0, i32 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %49 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %48, i32 0, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = sub nsw i32 %47, %51
  %53 = load i32, i32* %9, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %54
  store i32 %52, i32* %55, align 4
  %56 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %57 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %56, i32 0, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = load i32, i32* %9, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %61
  store i32 %59, i32* %62, align 4
  %63 = load i32, i32* %9, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %9, align 4
  %65 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %66 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %65, i32 0, i32 3
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %70 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %69, i32 0, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = sub nsw i32 %68, %72
  %74 = load i32, i32* %9, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %75
  store i32 %73, i32* %76, align 4
  %77 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %78 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %77, i32 0, i32 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = load i32, i32* %9, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %82
  store i32 %80, i32* %83, align 4
  %84 = load i32, i32* %9, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %9, align 4
  %86 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %87 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %86, i32 0, i32 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %91 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %90, i32 0, i32 2
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = sub nsw i32 %89, %93
  %95 = load i32, i32* %9, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %96
  store i32 %94, i32* %97, align 4
  %98 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %99 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %98, i32 0, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = load i32, i32* %9, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %103
  store i32 %101, i32* %104, align 4
  %105 = load i32, i32* %9, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %9, align 4
  br label %129

107:                                              ; preds = %36
  %108 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %109 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %108, i32 0, i32 3
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %113 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %112, i32 0, i32 3
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = sub nsw i32 %111, %115
  %117 = load i32, i32* %9, align 4
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %118
  store i32 %116, i32* %119, align 4
  %120 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %121 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %120, i32 0, i32 3
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = load i32, i32* %9, align 4
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %125
  store i32 %123, i32* %126, align 4
  %127 = load i32, i32* %9, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %9, align 4
  br label %129

129:                                              ; preds = %107, %43
  %130 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %131 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %130, i32 0, i32 2
  %132 = load i8, i8* %131, align 8
  %133 = zext i8 %132 to i32
  %134 = and i32 %133, 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %158

136:                                              ; preds = %129
  %137 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %138 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %137, i32 0, i32 3
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %142 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %141, i32 0, i32 4
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = sub nsw i32 %140, %144
  %146 = load i32, i32* %9, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %147
  store i32 %145, i32* %148, align 4
  %149 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %150 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %149, i32 0, i32 4
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = load i32, i32* %9, align 4
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %154
  store i32 %152, i32* %155, align 4
  %156 = load i32, i32* %9, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %9, align 4
  br label %158

158:                                              ; preds = %136, %129
  %159 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %160 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %159, i32 0, i32 3
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp slt i32 %162, 8
  br i1 %163, label %164, label %248

164:                                              ; preds = %158
  %165 = load i8*, i8** %5, align 8
  store i8* %165, i8** %10, align 8
  %166 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %167 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %166, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %13, align 8
  %169 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %170 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %169, i32 0, i32 3
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %181

174:                                              ; preds = %164
  %175 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %176 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %175, i32 0, i32 3
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = icmp eq i32 %178, 2
  br i1 %179, label %180, label %181

180:                                              ; preds = %174
  store i32 85, i32* %12, align 4
  br label %196

181:                                              ; preds = %174, %164
  %182 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %183 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %182, i32 0, i32 3
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 4
  br i1 %186, label %187, label %194

187:                                              ; preds = %181
  %188 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %6, align 8
  %189 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %188, i32 0, i32 3
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 3
  br i1 %192, label %193, label %194

193:                                              ; preds = %187
  store i32 17, i32* %12, align 4
  br label %195

194:                                              ; preds = %187, %181
  store i32 255, i32* %12, align 4
  br label %195

195:                                              ; preds = %194, %193
  br label %196

196:                                              ; preds = %195, %180
  store i64 0, i64* %11, align 8
  br label %197

197:                                              ; preds = %242, %196
  %198 = load i64, i64* %11, align 8
  %199 = load i64, i64* %13, align 8
  %200 = icmp ult i64 %198, %199
  br i1 %200, label %201, label %247

201:                                              ; preds = %197
  %202 = load i8*, i8** %10, align 8
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  store i32 %204, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %205 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %206 = load i32, i32* %205, align 16
  store i32 %206, i32* %14, align 4
  br label %207

207:                                              ; preds = %232, %201
  %208 = load i32, i32* %14, align 4
  %209 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %210 = load i32, i32* %209, align 16
  %211 = sub nsw i32 0, %210
  %212 = icmp sgt i32 %208, %211
  br i1 %212, label %213, label %237

213:                                              ; preds = %207
  %214 = load i32, i32* %14, align 4
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %216, label %222

216:                                              ; preds = %213
  %217 = load i32, i32* %15, align 4
  %218 = load i32, i32* %14, align 4
  %219 = shl i32 %217, %218
  %220 = load i32, i32* %16, align 4
  %221 = or i32 %220, %219
  store i32 %221, i32* %16, align 4
  br label %231

222:                                              ; preds = %213
  %223 = load i32, i32* %15, align 4
  %224 = load i32, i32* %14, align 4
  %225 = sub nsw i32 0, %224
  %226 = lshr i32 %223, %225
  %227 = load i32, i32* %12, align 4
  %228 = and i32 %226, %227
  %229 = load i32, i32* %16, align 4
  %230 = or i32 %229, %228
  store i32 %230, i32* %16, align 4
  br label %231

231:                                              ; preds = %222, %216
  br label %232

232:                                              ; preds = %231
  %233 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %234 = load i32, i32* %233, align 16
  %235 = load i32, i32* %14, align 4
  %236 = sub nsw i32 %235, %234
  store i32 %236, i32* %14, align 4
  br label %207, !llvm.loop !330

237:                                              ; preds = %207
  %238 = load i32, i32* %16, align 4
  %239 = and i32 %238, 255
  %240 = trunc i32 %239 to i8
  %241 = load i8*, i8** %10, align 8
  store i8 %240, i8* %241, align 1
  br label %242

242:                                              ; preds = %237
  %243 = load i64, i64* %11, align 8
  %244 = add i64 %243, 1
  store i64 %244, i64* %11, align 8
  %245 = load i8*, i8** %10, align 8
  %246 = getelementptr inbounds i8, i8* %245, i32 1
  store i8* %246, i8** %10, align 8
  br label %197, !llvm.loop !331

247:                                              ; preds = %197
  br label %398

248:                                              ; preds = %158
  %249 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %250 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %249, i32 0, i32 3
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = icmp eq i32 %252, 8
  br i1 %253, label %254, label %319

254:                                              ; preds = %248
  %255 = load i8*, i8** %5, align 8
  store i8* %255, i8** %17, align 8
  %256 = load i32, i32* %9, align 4
  %257 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %258 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %257, i32 0, i32 0
  %259 = load i32, i32* %258, align 8
  %260 = mul i32 %256, %259
  store i32 %260, i32* %19, align 4
  store i32 0, i32* %18, align 4
  br label %261

261:                                              ; preds = %313, %254
  %262 = load i32, i32* %18, align 4
  %263 = load i32, i32* %19, align 4
  %264 = icmp ult i32 %262, %263
  br i1 %264, label %265, label %318

265:                                              ; preds = %261
  %266 = load i32, i32* %18, align 4
  %267 = load i32, i32* %9, align 4
  %268 = urem i32 %266, %267
  store i32 %268, i32* %20, align 4
  %269 = load i8*, i8** %17, align 8
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  store i32 %271, i32* %22, align 4
  store i32 0, i32* %23, align 4
  %272 = load i32, i32* %20, align 4
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %273
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %21, align 4
  br label %276

276:                                              ; preds = %301, %265
  %277 = load i32, i32* %21, align 4
  %278 = load i32, i32* %20, align 4
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = sub nsw i32 0, %281
  %283 = icmp sgt i32 %277, %282
  br i1 %283, label %284, label %308

284:                                              ; preds = %276
  %285 = load i32, i32* %21, align 4
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %287, label %293

287:                                              ; preds = %284
  %288 = load i32, i32* %22, align 4
  %289 = load i32, i32* %21, align 4
  %290 = shl i32 %288, %289
  %291 = load i32, i32* %23, align 4
  %292 = or i32 %291, %290
  store i32 %292, i32* %23, align 4
  br label %300

293:                                              ; preds = %284
  %294 = load i32, i32* %22, align 4
  %295 = load i32, i32* %21, align 4
  %296 = sub nsw i32 0, %295
  %297 = lshr i32 %294, %296
  %298 = load i32, i32* %23, align 4
  %299 = or i32 %298, %297
  store i32 %299, i32* %23, align 4
  br label %300

300:                                              ; preds = %293, %287
  br label %301

301:                                              ; preds = %300
  %302 = load i32, i32* %20, align 4
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = load i32, i32* %21, align 4
  %307 = sub nsw i32 %306, %305
  store i32 %307, i32* %21, align 4
  br label %276, !llvm.loop !332

308:                                              ; preds = %276
  %309 = load i32, i32* %23, align 4
  %310 = and i32 %309, 255
  %311 = trunc i32 %310 to i8
  %312 = load i8*, i8** %17, align 8
  store i8 %311, i8* %312, align 1
  br label %313

313:                                              ; preds = %308
  %314 = load i32, i32* %18, align 4
  %315 = add i32 %314, 1
  store i32 %315, i32* %18, align 4
  %316 = load i8*, i8** %17, align 8
  %317 = getelementptr inbounds i8, i8* %316, i32 1
  store i8* %317, i8** %17, align 8
  br label %261, !llvm.loop !333

318:                                              ; preds = %261
  br label %397

319:                                              ; preds = %248
  %320 = load i32, i32* %9, align 4
  %321 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %322 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %321, i32 0, i32 0
  %323 = load i32, i32* %322, align 8
  %324 = mul i32 %320, %323
  store i32 %324, i32* %26, align 4
  %325 = load i8*, i8** %5, align 8
  store i8* %325, i8** %24, align 8
  store i32 0, i32* %25, align 4
  br label %326

326:                                              ; preds = %393, %319
  %327 = load i32, i32* %25, align 4
  %328 = load i32, i32* %26, align 4
  %329 = icmp ult i32 %327, %328
  br i1 %329, label %330, label %396

330:                                              ; preds = %326
  %331 = load i32, i32* %25, align 4
  %332 = load i32, i32* %9, align 4
  %333 = urem i32 %331, %332
  store i32 %333, i32* %27, align 4
  %334 = load i8*, i8** %24, align 8
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = shl i32 %336, 8
  %338 = load i8*, i8** %24, align 8
  %339 = getelementptr inbounds i8, i8* %338, i64 1
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  %342 = add i32 %337, %341
  %343 = trunc i32 %342 to i16
  %344 = zext i16 %343 to i32
  store i32 %344, i32* %30, align 4
  store i32 0, i32* %29, align 4
  %345 = load i32, i32* %27, align 4
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  store i32 %348, i32* %28, align 4
  br label %349

349:                                              ; preds = %374, %330
  %350 = load i32, i32* %28, align 4
  %351 = load i32, i32* %27, align 4
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = sub nsw i32 0, %354
  %356 = icmp sgt i32 %350, %355
  br i1 %356, label %357, label %381

357:                                              ; preds = %349
  %358 = load i32, i32* %28, align 4
  %359 = icmp sgt i32 %358, 0
  br i1 %359, label %360, label %366

360:                                              ; preds = %357
  %361 = load i32, i32* %30, align 4
  %362 = load i32, i32* %28, align 4
  %363 = shl i32 %361, %362
  %364 = load i32, i32* %29, align 4
  %365 = or i32 %364, %363
  store i32 %365, i32* %29, align 4
  br label %373

366:                                              ; preds = %357
  %367 = load i32, i32* %30, align 4
  %368 = load i32, i32* %28, align 4
  %369 = sub nsw i32 0, %368
  %370 = lshr i32 %367, %369
  %371 = load i32, i32* %29, align 4
  %372 = or i32 %371, %370
  store i32 %372, i32* %29, align 4
  br label %373

373:                                              ; preds = %366, %360
  br label %374

374:                                              ; preds = %373
  %375 = load i32, i32* %27, align 4
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = load i32, i32* %28, align 4
  %380 = sub nsw i32 %379, %378
  store i32 %380, i32* %28, align 4
  br label %349, !llvm.loop !334

381:                                              ; preds = %349
  %382 = load i32, i32* %29, align 4
  %383 = lshr i32 %382, 8
  %384 = and i32 %383, 255
  %385 = trunc i32 %384 to i8
  %386 = load i8*, i8** %24, align 8
  %387 = getelementptr inbounds i8, i8* %386, i32 1
  store i8* %387, i8** %24, align 8
  store i8 %385, i8* %386, align 1
  %388 = load i32, i32* %29, align 4
  %389 = and i32 %388, 255
  %390 = trunc i32 %389 to i8
  %391 = load i8*, i8** %24, align 8
  %392 = getelementptr inbounds i8, i8* %391, i32 1
  store i8* %392, i8** %24, align 8
  store i8 %390, i8* %391, align 1
  br label %393

393:                                              ; preds = %381
  %394 = load i32, i32* %25, align 4
  %395 = add i32 %394, 1
  store i32 %395, i32* %25, align 4
  br label %326, !llvm.loop !335

396:                                              ; preds = %326
  br label %397

397:                                              ; preds = %396, %318
  br label %398

398:                                              ; preds = %397, %247
  br label %399

399:                                              ; preds = %398, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_write_swap_alpha(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [2 x i8], align 1
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8, align 1
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca [2 x i8], align 1
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 2
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %132

30:                                               ; preds = %2
  %31 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %32 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %31, i32 0, i32 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 8
  br i1 %35, label %36, label %71

36:                                               ; preds = %30
  %37 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %38 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %8, align 4
  store i32 0, i32* %7, align 4
  %40 = load i8*, i8** %4, align 8
  store i8* %40, i8** %6, align 8
  store i8* %40, i8** %5, align 8
  br label %41

41:                                               ; preds = %67, %36
  %42 = load i32, i32* %7, align 4
  %43 = load i32, i32* %8, align 4
  %44 = icmp ult i32 %42, %43
  br i1 %44, label %45, label %70

45:                                               ; preds = %41
  %46 = load i8*, i8** %5, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %5, align 8
  %48 = load i8, i8* %46, align 1
  store i8 %48, i8* %9, align 1
  %49 = load i8*, i8** %5, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %5, align 8
  %51 = load i8, i8* %49, align 1
  %52 = load i8*, i8** %6, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %6, align 8
  store i8 %51, i8* %52, align 1
  %54 = load i8*, i8** %5, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %5, align 8
  %56 = load i8, i8* %54, align 1
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %6, align 8
  store i8 %56, i8* %57, align 1
  %59 = load i8*, i8** %5, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %5, align 8
  %61 = load i8, i8* %59, align 1
  %62 = load i8*, i8** %6, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %6, align 8
  store i8 %61, i8* %62, align 1
  %64 = load i8, i8* %9, align 1
  %65 = load i8*, i8** %6, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %6, align 8
  store i8 %64, i8* %65, align 1
  br label %67

67:                                               ; preds = %45
  %68 = load i32, i32* %7, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %7, align 4
  br label %41, !llvm.loop !336

70:                                               ; preds = %41
  br label %131

71:                                               ; preds = %30
  %72 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %73 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %13, align 4
  store i32 0, i32* %12, align 4
  %75 = load i8*, i8** %4, align 8
  store i8* %75, i8** %11, align 8
  store i8* %75, i8** %10, align 8
  br label %76

76:                                               ; preds = %127, %71
  %77 = load i32, i32* %12, align 4
  %78 = load i32, i32* %13, align 4
  %79 = icmp ult i32 %77, %78
  br i1 %79, label %80, label %130

80:                                               ; preds = %76
  %81 = load i8*, i8** %10, align 8
  %82 = getelementptr inbounds i8, i8* %81, i32 1
  store i8* %82, i8** %10, align 8
  %83 = load i8, i8* %81, align 1
  %84 = getelementptr inbounds [2 x i8], [2 x i8]* %14, i64 0, i64 0
  store i8 %83, i8* %84, align 1
  %85 = load i8*, i8** %10, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %10, align 8
  %87 = load i8, i8* %85, align 1
  %88 = getelementptr inbounds [2 x i8], [2 x i8]* %14, i64 0, i64 1
  store i8 %87, i8* %88, align 1
  %89 = load i8*, i8** %10, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %10, align 8
  %91 = load i8, i8* %89, align 1
  %92 = load i8*, i8** %11, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %11, align 8
  store i8 %91, i8* %92, align 1
  %94 = load i8*, i8** %10, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %95, i8** %10, align 8
  %96 = load i8, i8* %94, align 1
  %97 = load i8*, i8** %11, align 8
  %98 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %98, i8** %11, align 8
  store i8 %96, i8* %97, align 1
  %99 = load i8*, i8** %10, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %10, align 8
  %101 = load i8, i8* %99, align 1
  %102 = load i8*, i8** %11, align 8
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %11, align 8
  store i8 %101, i8* %102, align 1
  %104 = load i8*, i8** %10, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %10, align 8
  %106 = load i8, i8* %104, align 1
  %107 = load i8*, i8** %11, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %11, align 8
  store i8 %106, i8* %107, align 1
  %109 = load i8*, i8** %10, align 8
  %110 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %110, i8** %10, align 8
  %111 = load i8, i8* %109, align 1
  %112 = load i8*, i8** %11, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %113, i8** %11, align 8
  store i8 %111, i8* %112, align 1
  %114 = load i8*, i8** %10, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %10, align 8
  %116 = load i8, i8* %114, align 1
  %117 = load i8*, i8** %11, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %118, i8** %11, align 8
  store i8 %116, i8* %117, align 1
  %119 = getelementptr inbounds [2 x i8], [2 x i8]* %14, i64 0, i64 0
  %120 = load i8, i8* %119, align 1
  %121 = load i8*, i8** %11, align 8
  %122 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %122, i8** %11, align 8
  store i8 %120, i8* %121, align 1
  %123 = getelementptr inbounds [2 x i8], [2 x i8]* %14, i64 0, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = load i8*, i8** %11, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %126, i8** %11, align 8
  store i8 %124, i8* %125, align 1
  br label %127

127:                                              ; preds = %80
  %128 = load i32, i32* %12, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %12, align 4
  br label %76, !llvm.loop !337

130:                                              ; preds = %76
  br label %131

131:                                              ; preds = %130, %70
  br label %211

132:                                              ; preds = %2
  %133 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %134 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %133, i32 0, i32 2
  %135 = load i8, i8* %134, align 8
  %136 = zext i8 %135 to i32
  %137 = icmp eq i32 %136, 4
  br i1 %137, label %138, label %210

138:                                              ; preds = %132
  %139 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %140 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %139, i32 0, i32 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = icmp eq i32 %142, 8
  br i1 %143, label %144, label %169

144:                                              ; preds = %138
  %145 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %146 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %145, i32 0, i32 0
  %147 = load i32, i32* %146, align 8
  store i32 %147, i32* %18, align 4
  store i32 0, i32* %17, align 4
  %148 = load i8*, i8** %4, align 8
  store i8* %148, i8** %16, align 8
  store i8* %148, i8** %15, align 8
  br label %149

149:                                              ; preds = %165, %144
  %150 = load i32, i32* %17, align 4
  %151 = load i32, i32* %18, align 4
  %152 = icmp ult i32 %150, %151
  br i1 %152, label %153, label %168

153:                                              ; preds = %149
  %154 = load i8*, i8** %15, align 8
  %155 = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %155, i8** %15, align 8
  %156 = load i8, i8* %154, align 1
  store i8 %156, i8* %19, align 1
  %157 = load i8*, i8** %15, align 8
  %158 = getelementptr inbounds i8, i8* %157, i32 1
  store i8* %158, i8** %15, align 8
  %159 = load i8, i8* %157, align 1
  %160 = load i8*, i8** %16, align 8
  %161 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %161, i8** %16, align 8
  store i8 %159, i8* %160, align 1
  %162 = load i8, i8* %19, align 1
  %163 = load i8*, i8** %16, align 8
  %164 = getelementptr inbounds i8, i8* %163, i32 1
  store i8* %164, i8** %16, align 8
  store i8 %162, i8* %163, align 1
  br label %165

165:                                              ; preds = %153
  %166 = load i32, i32* %17, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %17, align 4
  br label %149, !llvm.loop !338

168:                                              ; preds = %149
  br label %209

169:                                              ; preds = %138
  %170 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %171 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %170, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  store i32 %172, i32* %23, align 4
  store i32 0, i32* %22, align 4
  %173 = load i8*, i8** %4, align 8
  store i8* %173, i8** %21, align 8
  store i8* %173, i8** %20, align 8
  br label %174

174:                                              ; preds = %205, %169
  %175 = load i32, i32* %22, align 4
  %176 = load i32, i32* %23, align 4
  %177 = icmp ult i32 %175, %176
  br i1 %177, label %178, label %208

178:                                              ; preds = %174
  %179 = load i8*, i8** %20, align 8
  %180 = getelementptr inbounds i8, i8* %179, i32 1
  store i8* %180, i8** %20, align 8
  %181 = load i8, i8* %179, align 1
  %182 = getelementptr inbounds [2 x i8], [2 x i8]* %24, i64 0, i64 0
  store i8 %181, i8* %182, align 1
  %183 = load i8*, i8** %20, align 8
  %184 = getelementptr inbounds i8, i8* %183, i32 1
  store i8* %184, i8** %20, align 8
  %185 = load i8, i8* %183, align 1
  %186 = getelementptr inbounds [2 x i8], [2 x i8]* %24, i64 0, i64 1
  store i8 %185, i8* %186, align 1
  %187 = load i8*, i8** %20, align 8
  %188 = getelementptr inbounds i8, i8* %187, i32 1
  store i8* %188, i8** %20, align 8
  %189 = load i8, i8* %187, align 1
  %190 = load i8*, i8** %21, align 8
  %191 = getelementptr inbounds i8, i8* %190, i32 1
  store i8* %191, i8** %21, align 8
  store i8 %189, i8* %190, align 1
  %192 = load i8*, i8** %20, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %20, align 8
  %194 = load i8, i8* %192, align 1
  %195 = load i8*, i8** %21, align 8
  %196 = getelementptr inbounds i8, i8* %195, i32 1
  store i8* %196, i8** %21, align 8
  store i8 %194, i8* %195, align 1
  %197 = getelementptr inbounds [2 x i8], [2 x i8]* %24, i64 0, i64 0
  %198 = load i8, i8* %197, align 1
  %199 = load i8*, i8** %21, align 8
  %200 = getelementptr inbounds i8, i8* %199, i32 1
  store i8* %200, i8** %21, align 8
  store i8 %198, i8* %199, align 1
  %201 = getelementptr inbounds [2 x i8], [2 x i8]* %24, i64 0, i64 1
  %202 = load i8, i8* %201, align 1
  %203 = load i8*, i8** %21, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 1
  store i8* %204, i8** %21, align 8
  store i8 %202, i8* %203, align 1
  br label %205

205:                                              ; preds = %178
  %206 = load i32, i32* %22, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %22, align 4
  br label %174, !llvm.loop !339

208:                                              ; preds = %174
  br label %209

209:                                              ; preds = %208, %168
  br label %210

210:                                              ; preds = %209, %132
  br label %211

211:                                              ; preds = %210, %131
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_do_write_invert_alpha(%struct.png_row_info_struct* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.png_row_info_struct*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %3, align 8
  store i8* %1, i8** %4, align 8
  %21 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %21, i32 0, i32 2
  %23 = load i8, i8* %22, align 8
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %89

26:                                               ; preds = %2
  %27 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %28 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %27, i32 0, i32 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %56

32:                                               ; preds = %26
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %8, align 4
  store i32 0, i32* %7, align 4
  %36 = load i8*, i8** %4, align 8
  store i8* %36, i8** %6, align 8
  store i8* %36, i8** %5, align 8
  br label %37

37:                                               ; preds = %52, %32
  %38 = load i32, i32* %7, align 4
  %39 = load i32, i32* %8, align 4
  %40 = icmp ult i32 %38, %39
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = load i8*, i8** %5, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 3
  store i8* %43, i8** %5, align 8
  %44 = load i8*, i8** %5, align 8
  store i8* %44, i8** %6, align 8
  %45 = load i8*, i8** %5, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %5, align 8
  %47 = load i8, i8* %45, align 1
  %48 = zext i8 %47 to i32
  %49 = sub nsw i32 255, %48
  %50 = trunc i32 %49 to i8
  %51 = load i8*, i8** %6, align 8
  store i8 %50, i8* %51, align 1
  br label %52

52:                                               ; preds = %41
  %53 = load i32, i32* %7, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %37, !llvm.loop !340

55:                                               ; preds = %37
  br label %88

56:                                               ; preds = %26
  %57 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %58 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %12, align 4
  store i32 0, i32* %11, align 4
  %60 = load i8*, i8** %4, align 8
  store i8* %60, i8** %10, align 8
  store i8* %60, i8** %9, align 8
  br label %61

61:                                               ; preds = %84, %56
  %62 = load i32, i32* %11, align 4
  %63 = load i32, i32* %12, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %87

65:                                               ; preds = %61
  %66 = load i8*, i8** %9, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 6
  store i8* %67, i8** %9, align 8
  %68 = load i8*, i8** %9, align 8
  store i8* %68, i8** %10, align 8
  %69 = load i8*, i8** %9, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %70, i8** %9, align 8
  %71 = load i8, i8* %69, align 1
  %72 = zext i8 %71 to i32
  %73 = sub nsw i32 255, %72
  %74 = trunc i32 %73 to i8
  %75 = load i8*, i8** %10, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %10, align 8
  store i8 %74, i8* %75, align 1
  %77 = load i8*, i8** %9, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %9, align 8
  %79 = load i8, i8* %77, align 1
  %80 = zext i8 %79 to i32
  %81 = sub nsw i32 255, %80
  %82 = trunc i32 %81 to i8
  %83 = load i8*, i8** %10, align 8
  store i8 %82, i8* %83, align 1
  br label %84

84:                                               ; preds = %65
  %85 = load i32, i32* %11, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %11, align 4
  br label %61, !llvm.loop !341

87:                                               ; preds = %61
  br label %88

88:                                               ; preds = %87, %55
  br label %162

89:                                               ; preds = %2
  %90 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %91 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %90, i32 0, i32 2
  %92 = load i8, i8* %91, align 8
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 4
  br i1 %94, label %95, label %161

95:                                               ; preds = %89
  %96 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %97 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %96, i32 0, i32 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 8
  br i1 %100, label %101, label %128

101:                                              ; preds = %95
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %103 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %16, align 4
  store i32 0, i32* %15, align 4
  %105 = load i8*, i8** %4, align 8
  store i8* %105, i8** %14, align 8
  store i8* %105, i8** %13, align 8
  br label %106

106:                                              ; preds = %124, %101
  %107 = load i32, i32* %15, align 4
  %108 = load i32, i32* %16, align 4
  %109 = icmp ult i32 %107, %108
  br i1 %109, label %110, label %127

110:                                              ; preds = %106
  %111 = load i8*, i8** %13, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %13, align 8
  %113 = load i8, i8* %111, align 1
  %114 = load i8*, i8** %14, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %14, align 8
  store i8 %113, i8* %114, align 1
  %116 = load i8*, i8** %13, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %117, i8** %13, align 8
  %118 = load i8, i8* %116, align 1
  %119 = zext i8 %118 to i32
  %120 = sub nsw i32 255, %119
  %121 = trunc i32 %120 to i8
  %122 = load i8*, i8** %14, align 8
  %123 = getelementptr inbounds i8, i8* %122, i32 1
  store i8* %123, i8** %14, align 8
  store i8 %121, i8* %122, align 1
  br label %124

124:                                              ; preds = %110
  %125 = load i32, i32* %15, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %15, align 4
  br label %106, !llvm.loop !342

127:                                              ; preds = %106
  br label %160

128:                                              ; preds = %95
  %129 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %3, align 8
  %130 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  store i32 %131, i32* %20, align 4
  store i32 0, i32* %19, align 4
  %132 = load i8*, i8** %4, align 8
  store i8* %132, i8** %18, align 8
  store i8* %132, i8** %17, align 8
  br label %133

133:                                              ; preds = %156, %128
  %134 = load i32, i32* %19, align 4
  %135 = load i32, i32* %20, align 4
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %137, label %159

137:                                              ; preds = %133
  %138 = load i8*, i8** %17, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 2
  store i8* %139, i8** %17, align 8
  %140 = load i8*, i8** %17, align 8
  store i8* %140, i8** %18, align 8
  %141 = load i8*, i8** %17, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %142, i8** %17, align 8
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %143 to i32
  %145 = sub nsw i32 255, %144
  %146 = trunc i32 %145 to i8
  %147 = load i8*, i8** %18, align 8
  %148 = getelementptr inbounds i8, i8* %147, i32 1
  store i8* %148, i8** %18, align 8
  store i8 %146, i8* %147, align 1
  %149 = load i8*, i8** %17, align 8
  %150 = getelementptr inbounds i8, i8* %149, i32 1
  store i8* %150, i8** %17, align 8
  %151 = load i8, i8* %149, align 1
  %152 = zext i8 %151 to i32
  %153 = sub nsw i32 255, %152
  %154 = trunc i32 %153 to i8
  %155 = load i8*, i8** %18, align 8
  store i8 %154, i8* %155, align 1
  br label %156

156:                                              ; preds = %137
  %157 = load i32, i32* %19, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %19, align 4
  br label %133, !llvm.loop !343

159:                                              ; preds = %133
  br label %160

160:                                              ; preds = %159, %127
  br label %161

161:                                              ; preds = %160, %89
  br label %162

162:                                              ; preds = %161, %88
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_save_uint_32(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = lshr i32 %5, 24
  %7 = and i32 %6, 255
  %8 = trunc i32 %7 to i8
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  store i8 %8, i8* %10, align 1
  %11 = load i32, i32* %4, align 4
  %12 = lshr i32 %11, 16
  %13 = and i32 %12, 255
  %14 = trunc i32 %13 to i8
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8 %14, i8* %16, align 1
  %17 = load i32, i32* %4, align 4
  %18 = lshr i32 %17, 8
  %19 = and i32 %18, 255
  %20 = trunc i32 %19 to i8
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 2
  store i8 %20, i8* %22, align 1
  %23 = load i32, i32* %4, align 4
  %24 = and i32 %23, 255
  %25 = trunc i32 %24 to i8
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 3
  store i8 %25, i8* %27, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_save_uint_16(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = lshr i32 %5, 8
  %7 = and i32 %6, 255
  %8 = trunc i32 %7 to i8
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  store i8 %8, i8* %10, align 1
  %11 = load i32, i32* %4, align 4
  %12 = and i32 %11, 255
  %13 = trunc i32 %12 to i8
  %14 = load i8*, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %13, i8* %15, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_sig(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.62*, align 8
  %3 = alloca [8 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %2, align 8
  %4 = bitcast [8 x i8]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @__const.png_write_sig.png_signature, i32 0, i32 0), i64 8, i1 false)
  %5 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %6 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %5, i32 0, i32 142
  store i32 18, i32* %6, align 4
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %8 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %8, i32 0, i32 67
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 %11
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %13, i32 0, i32 67
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = sub nsw i32 8, %16
  %18 = sext i32 %17 to i64
  call void bitcast (void (%struct.png_struct_def*, i8*, i64)* @png_write_data to void (%struct.png_struct_def.62*, i8*, i64)*)(%struct.png_struct_def.62* noundef %7, i8* noundef %12, i64 noundef %18)
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 67
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp slt i32 %22, 3
  br i1 %23, label %24, label %29

24:                                               ; preds = %1
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %26 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %25, i32 0, i32 15
  %27 = load i32, i32* %26, align 4
  %28 = or i32 %27, 4096
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %24, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_chunk_start(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = and i32 255, %11
  %13 = shl i32 %12, 24
  %14 = load i8*, i8** %5, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = and i32 255, %17
  %19 = shl i32 %18, 16
  %20 = or i32 %13, %19
  %21 = load i8*, i8** %5, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = and i32 255, %24
  %26 = shl i32 %25, 8
  %27 = or i32 %20, %26
  %28 = load i8*, i8** %5, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = and i32 255, %31
  %33 = shl i32 %32, 0
  %34 = or i32 %27, %33
  %35 = load i32, i32* %6, align 4
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %7, i32 noundef %34, i32 noundef %35)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_write_chunk_header(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [8 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %9 = icmp eq %struct.png_struct_def.62* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  br label %30

11:                                               ; preds = %3
  %12 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %12, i32 0, i32 142
  store i32 34, i32* %13, align 4
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0
  %15 = load i32, i32* %6, align 4
  call void @png_save_uint_32(i8* noundef %14, i32 noundef %15)
  %16 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0
  %17 = getelementptr inbounds i8, i8* %16, i64 4
  %18 = load i32, i32* %5, align 4
  call void @png_save_uint_32(i8* noundef %17, i32 noundef %18)
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0
  call void bitcast (void (%struct.png_struct_def*, i8*, i64)* @png_write_data to void (%struct.png_struct_def.62*, i8*, i64)*)(%struct.png_struct_def.62* noundef %19, i8* noundef %20, i64 noundef 8)
  %21 = load i32, i32* %5, align 4
  %22 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %22, i32 0, i32 44
  store i32 %21, i32* %23, align 8
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*)* @png_reset_crc to void (%struct.png_struct_def.62*)*)(%struct.png_struct_def.62* noundef %24)
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0
  %27 = getelementptr inbounds i8, i8* %26, i64 4
  call void bitcast (void (%struct.png_struct_def*, i8*, i64)* @png_calculate_crc to void (%struct.png_struct_def.62*, i8*, i64)*)(%struct.png_struct_def.62* noundef %25, i8* noundef %27, i64 noundef 4)
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %28, i32 0, i32 142
  store i32 66, i32* %29, align 4
  br label %30

30:                                               ; preds = %11, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_chunk_data(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %8 = icmp eq %struct.png_struct_def.62* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  br label %23

10:                                               ; preds = %3
  %11 = load i8*, i8** %5, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %23

13:                                               ; preds = %10
  %14 = load i64, i64* %6, align 8
  %15 = icmp ugt i64 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i64, i64* %6, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*, i64)* @png_write_data to void (%struct.png_struct_def.62*, i8*, i64)*)(%struct.png_struct_def.62* noundef %17, i8* noundef %18, i64 noundef %19)
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*, i64)* @png_calculate_crc to void (%struct.png_struct_def.62*, i8*, i64)*)(%struct.png_struct_def.62* noundef %20, i8* noundef %21, i64 noundef %22)
  br label %23

23:                                               ; preds = %9, %16, %13, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_chunk_end(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.62*, align 8
  %3 = alloca [4 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %2, align 8
  %4 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %5 = icmp eq %struct.png_struct_def.62* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %16

7:                                                ; preds = %1
  %8 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %9 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %8, i32 0, i32 142
  store i32 130, i32* %9, align 4
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %11, i32 0, i32 51
  %13 = load i32, i32* %12, align 4
  call void @png_save_uint_32(i8* noundef %10, i32 noundef %13)
  %14 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  call void bitcast (void (%struct.png_struct_def*, i8*, i64)* @png_write_data to void (%struct.png_struct_def.62*, i8*, i64)*)(%struct.png_struct_def.62* noundef %14, i8* noundef %15, i64 noundef 4)
  br label %16

16:                                               ; preds = %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_chunk(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = and i32 255, %13
  %15 = shl i32 %14, 24
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = and i32 255, %19
  %21 = shl i32 %20, 16
  %22 = or i32 %15, %21
  %23 = load i8*, i8** %6, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 255, %26
  %28 = shl i32 %27, 8
  %29 = or i32 %22, %28
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 3
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 255, %33
  %35 = shl i32 %34, 0
  %36 = or i32 %29, %35
  %37 = load i8*, i8** %7, align 8
  %38 = load i64, i64* %8, align 8
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %9, i32 noundef %36, i8* noundef %37, i64 noundef %38)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_write_complete_chunk(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %10 = icmp eq %struct.png_struct_def.62* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  br label %26

12:                                               ; preds = %4
  %13 = load i64, i64* %8, align 8
  %14 = icmp ugt i64 %13, 2147483647
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %16, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42.550, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %12
  %18 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = load i64, i64* %8, align 8
  %21 = trunc i64 %20 to i32
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %18, i32 noundef %19, i32 noundef %21)
  %22 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %22, i8* noundef %23, i64 noundef %24)
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %25)
  br label %26

26:                                               ; preds = %17, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_free_buffer_list(%struct.png_struct_def.62* noalias noundef %0, %struct.png_compression_buffer** noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca %struct.png_compression_buffer**, align 8
  %5 = alloca %struct.png_compression_buffer*, align 8
  %6 = alloca %struct.png_compression_buffer*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store %struct.png_compression_buffer** %1, %struct.png_compression_buffer*** %4, align 8
  %7 = load %struct.png_compression_buffer**, %struct.png_compression_buffer*** %4, align 8
  %8 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %7, align 8
  store %struct.png_compression_buffer* %8, %struct.png_compression_buffer** %5, align 8
  %9 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %5, align 8
  %10 = icmp ne %struct.png_compression_buffer* %9, null
  br i1 %10, label %11, label %25

11:                                               ; preds = %2
  %12 = load %struct.png_compression_buffer**, %struct.png_compression_buffer*** %4, align 8
  store %struct.png_compression_buffer* null, %struct.png_compression_buffer** %12, align 8
  br label %13

13:                                               ; preds = %21, %11
  %14 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %5, align 8
  %15 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %14, i32 0, i32 0
  %16 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  store %struct.png_compression_buffer* %16, %struct.png_compression_buffer** %6, align 8
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %18 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %5, align 8
  %19 = bitcast %struct.png_compression_buffer* %18 to i8*
  call void @png_free(%struct.png_struct_def.62* noundef %17, i8* noundef %19)
  %20 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %6, align 8
  store %struct.png_compression_buffer* %20, %struct.png_compression_buffer** %5, align 8
  br label %21

21:                                               ; preds = %13
  %22 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %5, align 8
  %23 = icmp ne %struct.png_compression_buffer* %22, null
  br i1 %23, label %13, label %24, !llvm.loop !344

24:                                               ; preds = %21
  br label %25

25:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_IHDR(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) #0 {
  %9 = alloca %struct.png_struct_def.62*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca [13 x i8], align 1
  %18 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 %7, i32* %16, align 4
  %19 = load i32, i32* %13, align 4
  switch i32 %19, label %93 [
    i32 0, label %20
    i32 2, label %28
    i32 3, label %47
    i32 4, label %55
    i32 6, label %74
  ]

20:                                               ; preds = %8
  %21 = load i32, i32* %12, align 4
  switch i32 %21, label %25 [
    i32 1, label %22
    i32 2, label %22
    i32 4, label %22
    i32 8, label %22
    i32 16, label %22
  ]

22:                                               ; preds = %20, %20, %20, %20, %20
  %23 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %24 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %23, i32 0, i32 65
  store i8 1, i8* %24, align 1
  br label %27

25:                                               ; preds = %20
  %26 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %26, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.555, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %22
  br label %95

28:                                               ; preds = %8
  %29 = load i32, i32* %12, align 4
  %30 = icmp ne i32 %29, 8
  %31 = zext i1 %30 to i32
  store i32 %31, i32* %18, align 4
  %32 = load i32, i32* %18, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = load i32, i32* %12, align 4
  %36 = icmp ne i32 %35, 16
  br label %37

37:                                               ; preds = %34, %28
  %38 = phi i1 [ false, %28 ], [ %36, %34 ]
  %39 = zext i1 %38 to i32
  store i32 %39, i32* %18, align 4
  %40 = load i32, i32* %18, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %43, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.556, i64 0, i64 0)) #13
  unreachable

44:                                               ; preds = %37
  %45 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %46 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %45, i32 0, i32 65
  store i8 3, i8* %46, align 1
  br label %95

47:                                               ; preds = %8
  %48 = load i32, i32* %12, align 4
  switch i32 %48, label %52 [
    i32 1, label %49
    i32 2, label %49
    i32 4, label %49
    i32 8, label %49
  ]

49:                                               ; preds = %47, %47, %47, %47
  %50 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %51 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %50, i32 0, i32 65
  store i8 1, i8* %51, align 1
  br label %54

52:                                               ; preds = %47
  %53 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %53, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.557, i64 0, i64 0)) #13
  unreachable

54:                                               ; preds = %49
  br label %95

55:                                               ; preds = %8
  %56 = load i32, i32* %12, align 4
  %57 = icmp ne i32 %56, 8
  %58 = zext i1 %57 to i32
  store i32 %58, i32* %18, align 4
  %59 = load i32, i32* %18, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = load i32, i32* %12, align 4
  %63 = icmp ne i32 %62, 16
  br label %64

64:                                               ; preds = %61, %55
  %65 = phi i1 [ false, %55 ], [ %63, %61 ]
  %66 = zext i1 %65 to i32
  store i32 %66, i32* %18, align 4
  %67 = load i32, i32* %18, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %70, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.558, i64 0, i64 0)) #13
  unreachable

71:                                               ; preds = %64
  %72 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %73 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %72, i32 0, i32 65
  store i8 2, i8* %73, align 1
  br label %95

74:                                               ; preds = %8
  %75 = load i32, i32* %12, align 4
  %76 = icmp ne i32 %75, 8
  %77 = zext i1 %76 to i32
  store i32 %77, i32* %18, align 4
  %78 = load i32, i32* %18, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = load i32, i32* %12, align 4
  %82 = icmp ne i32 %81, 16
  br label %83

83:                                               ; preds = %80, %74
  %84 = phi i1 [ false, %74 ], [ %82, %80 ]
  %85 = zext i1 %84 to i32
  store i32 %85, i32* %18, align 4
  %86 = load i32, i32* %18, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %89, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.559, i64 0, i64 0)) #13
  unreachable

90:                                               ; preds = %83
  %91 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %92 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %91, i32 0, i32 65
  store i8 4, i8* %92, align 1
  br label %95

93:                                               ; preds = %8
  %94 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %94, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5.560, i64 0, i64 0)) #13
  unreachable

95:                                               ; preds = %90, %71, %54, %44, %27
  %96 = load i32, i32* %14, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %99, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6.561, i64 0, i64 0))
  store i32 0, i32* %14, align 4
  br label %100

100:                                              ; preds = %98, %95
  %101 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %102 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %101, i32 0, i32 123
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %121

106:                                              ; preds = %100
  %107 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %108 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %107, i32 0, i32 15
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, 4096
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %121

112:                                              ; preds = %106
  %113 = load i32, i32* %13, align 4
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = load i32, i32* %13, align 4
  %117 = icmp eq i32 %116, 6
  br i1 %117, label %118, label %121

118:                                              ; preds = %115, %112
  %119 = load i32, i32* %15, align 4
  %120 = icmp eq i32 %119, 64
  br i1 %120, label %126, label %121

121:                                              ; preds = %118, %115, %106, %100
  %122 = load i32, i32* %15, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %125, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.562, i64 0, i64 0))
  store i32 0, i32* %15, align 4
  br label %126

126:                                              ; preds = %124, %121, %118
  %127 = load i32, i32* %16, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %134

129:                                              ; preds = %126
  %130 = load i32, i32* %16, align 4
  %131 = icmp ne i32 %130, 1
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %133, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.563, i64 0, i64 0))
  store i32 1, i32* %16, align 4
  br label %134

134:                                              ; preds = %132, %129, %126
  %135 = load i32, i32* %12, align 4
  %136 = trunc i32 %135 to i8
  %137 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %138 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %137, i32 0, i32 62
  store i8 %136, i8* %138, align 8
  %139 = load i32, i32* %13, align 4
  %140 = trunc i32 %139 to i8
  %141 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %142 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %141, i32 0, i32 61
  store i8 %140, i8* %142, align 1
  %143 = load i32, i32* %16, align 4
  %144 = trunc i32 %143 to i8
  %145 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %146 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %145, i32 0, i32 58
  store i8 %144, i8* %146, align 4
  %147 = load i32, i32* %15, align 4
  %148 = trunc i32 %147 to i8
  %149 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %150 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %149, i32 0, i32 124
  store i8 %148, i8* %150, align 4
  %151 = load i32, i32* %14, align 4
  %152 = trunc i32 %151 to i8
  %153 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %154 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %153, i32 0, i32 132
  store i8 %152, i8* %154, align 8
  %155 = load i32, i32* %10, align 4
  %156 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %157 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %156, i32 0, i32 37
  store i32 %155, i32* %157, align 8
  %158 = load i32, i32* %11, align 4
  %159 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %160 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %159, i32 0, i32 38
  store i32 %158, i32* %160, align 4
  %161 = load i32, i32* %12, align 4
  %162 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %163 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %162, i32 0, i32 65
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = mul nsw i32 %161, %165
  %167 = trunc i32 %166 to i8
  %168 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %169 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %168, i32 0, i32 64
  store i8 %167, i8* %169, align 2
  %170 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %171 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %170, i32 0, i32 64
  %172 = load i8, i8* %171, align 2
  %173 = zext i8 %172 to i32
  %174 = icmp sge i32 %173, 8
  br i1 %174, label %175, label %184

175:                                              ; preds = %134
  %176 = load i32, i32* %10, align 4
  %177 = zext i32 %176 to i64
  %178 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %179 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %178, i32 0, i32 64
  %180 = load i8, i8* %179, align 2
  %181 = zext i8 %180 to i64
  %182 = lshr i64 %181, 3
  %183 = mul i64 %177, %182
  br label %194

184:                                              ; preds = %134
  %185 = load i32, i32* %10, align 4
  %186 = zext i32 %185 to i64
  %187 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %188 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %187, i32 0, i32 64
  %189 = load i8, i8* %188, align 2
  %190 = zext i8 %189 to i64
  %191 = mul i64 %186, %190
  %192 = add i64 %191, 7
  %193 = lshr i64 %192, 3
  br label %194

194:                                              ; preds = %184, %175
  %195 = phi i64 [ %183, %175 ], [ %193, %184 ]
  %196 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %197 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %196, i32 0, i32 41
  store i64 %195, i64* %197, align 8
  %198 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %199 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %198, i32 0, i32 37
  %200 = load i32, i32* %199, align 8
  %201 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %202 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %201, i32 0, i32 40
  store i32 %200, i32* %202, align 4
  %203 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %204 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %203, i32 0, i32 62
  %205 = load i8, i8* %204, align 8
  %206 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %207 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %206, i32 0, i32 63
  store i8 %205, i8* %207, align 1
  %208 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %209 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %208, i32 0, i32 65
  %210 = load i8, i8* %209, align 1
  %211 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %212 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %211, i32 0, i32 66
  store i8 %210, i8* %212, align 4
  %213 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 0
  %214 = load i32, i32* %10, align 4
  call void @png_save_uint_32(i8* noundef %213, i32 noundef %214)
  %215 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 0
  %216 = getelementptr inbounds i8, i8* %215, i64 4
  %217 = load i32, i32* %11, align 4
  call void @png_save_uint_32(i8* noundef %216, i32 noundef %217)
  %218 = load i32, i32* %12, align 4
  %219 = trunc i32 %218 to i8
  %220 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 8
  store i8 %219, i8* %220, align 1
  %221 = load i32, i32* %13, align 4
  %222 = trunc i32 %221 to i8
  %223 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 9
  store i8 %222, i8* %223, align 1
  %224 = load i32, i32* %14, align 4
  %225 = trunc i32 %224 to i8
  %226 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 10
  store i8 %225, i8* %226, align 1
  %227 = load i32, i32* %15, align 4
  %228 = trunc i32 %227 to i8
  %229 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 11
  store i8 %228, i8* %229, align 1
  %230 = load i32, i32* %16, align 4
  %231 = trunc i32 %230 to i8
  %232 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 12
  store i8 %231, i8* %232, align 1
  %233 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %234 = getelementptr inbounds [13 x i8], [13 x i8]* %17, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %233, i32 noundef 1229472850, i8* noundef %234, i64 noundef 13)
  %235 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %236 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %235, i32 0, i32 60
  %237 = load i8, i8* %236, align 2
  %238 = zext i8 %237 to i32
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %259

240:                                              ; preds = %194
  %241 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %242 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %241, i32 0, i32 61
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = icmp eq i32 %244, 3
  br i1 %245, label %252, label %246

246:                                              ; preds = %240
  %247 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %248 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %247, i32 0, i32 62
  %249 = load i8, i8* %248, align 8
  %250 = zext i8 %249 to i32
  %251 = icmp slt i32 %250, 8
  br i1 %251, label %252, label %255

252:                                              ; preds = %246, %240
  %253 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %254 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %253, i32 0, i32 60
  store i8 8, i8* %254, align 2
  br label %258

255:                                              ; preds = %246
  %256 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %257 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %256, i32 0, i32 60
  store i8 -8, i8* %257, align 2
  br label %258

258:                                              ; preds = %255, %252
  br label %259

259:                                              ; preds = %258, %194
  %260 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %261 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %260, i32 0, i32 15
  store i32 1, i32* %261, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_PLTE(%struct.png_struct_def.62* noalias noundef %0, %struct.png_color_struct* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca %struct.png_color_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.png_color_struct*, align 8
  %10 = alloca [3 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store %struct.png_color_struct* %1, %struct.png_color_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %11, i32 0, i32 61
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %22

16:                                               ; preds = %3
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %17, i32 0, i32 62
  %19 = load i8, i8* %18, align 8
  %20 = zext i8 %19 to i32
  %21 = shl i32 1, %20
  br label %23

22:                                               ; preds = %3
  br label %23

23:                                               ; preds = %22, %16
  %24 = phi i32 [ %21, %16 ], [ 256, %22 ]
  store i32 %24, i32* %7, align 4
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %26 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %25, i32 0, i32 123
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = load i32, i32* %6, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30, %23
  %34 = load i32, i32* %6, align 4
  %35 = load i32, i32* %7, align 4
  %36 = icmp ugt i32 %34, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %30
  %38 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %39 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %38, i32 0, i32 61
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %44, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.566, i64 0, i64 0)) #13
  unreachable

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %46, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.566, i64 0, i64 0))
  br label %95

47:                                               ; preds = %33
  %48 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %49 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %48, i32 0, i32 61
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %55, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.567, i64 0, i64 0))
  br label %95

56:                                               ; preds = %47
  %57 = load i32, i32* %6, align 4
  %58 = trunc i32 %57 to i16
  %59 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %59, i32 0, i32 53
  store i16 %58, i16* %60, align 8
  %61 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %62 = load i32, i32* %6, align 4
  %63 = mul i32 %62, 3
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %61, i32 noundef 1347179589, i32 noundef %63)
  store i32 0, i32* %8, align 4
  %64 = load %struct.png_color_struct*, %struct.png_color_struct** %5, align 8
  store %struct.png_color_struct* %64, %struct.png_color_struct** %9, align 8
  br label %65

65:                                               ; preds = %84, %56
  %66 = load i32, i32* %8, align 4
  %67 = load i32, i32* %6, align 4
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %89

69:                                               ; preds = %65
  %70 = load %struct.png_color_struct*, %struct.png_color_struct** %9, align 8
  %71 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %70, i32 0, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 0
  store i8 %72, i8* %73, align 1
  %74 = load %struct.png_color_struct*, %struct.png_color_struct** %9, align 8
  %75 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %74, i32 0, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 1
  store i8 %76, i8* %77, align 1
  %78 = load %struct.png_color_struct*, %struct.png_color_struct** %9, align 8
  %79 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %78, i32 0, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 2
  store i8 %80, i8* %81, align 1
  %82 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %83 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 0
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %82, i8* noundef %83, i64 noundef 3)
  br label %84

84:                                               ; preds = %69
  %85 = load i32, i32* %8, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %8, align 4
  %87 = load %struct.png_color_struct*, %struct.png_color_struct** %9, align 8
  %88 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %87, i32 1
  store %struct.png_color_struct* %88, %struct.png_color_struct** %9, align 8
  br label %65, !llvm.loop !345

89:                                               ; preds = %65
  %90 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %90)
  %91 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %92 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %91, i32 0, i32 15
  %93 = load i32, i32* %92, align 4
  %94 = or i32 %93, 2
  store i32 %94, i32* %92, align 4
  br label %95

95:                                               ; preds = %89, %54, %45
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_compress_IDAT(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %16 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %15, i32 0, i32 18
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i32 %17, 1229209940
  br i1 %18, label %19, label %72

19:                                               ; preds = %4
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %20, i32 0, i32 20
  %22 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %21, align 8
  %23 = icmp eq %struct.png_compression_buffer* %22, null
  br i1 %23, label %24, label %39

24:                                               ; preds = %19
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %26 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %27 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %26, i32 0, i32 21
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = add i64 8, %29
  %31 = call noalias i8* @png_malloc(%struct.png_struct_def.62* noundef %25, i64 noundef %30)
  %32 = bitcast i8* %31 to %struct.png_compression_buffer*
  %33 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %34 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %33, i32 0, i32 20
  store %struct.png_compression_buffer* %32, %struct.png_compression_buffer** %34, align 8
  %35 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %36 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %35, i32 0, i32 20
  %37 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %36, align 8
  %38 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %37, i32 0, i32 0
  store %struct.png_compression_buffer* null, %struct.png_compression_buffer** %38, align 8
  br label %45

39:                                               ; preds = %19
  %40 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %41 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %42 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %41, i32 0, i32 20
  %43 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %42, align 8
  %44 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %43, i32 0, i32 0
  call void @png_free_buffer_list(%struct.png_struct_def.62* noundef %40, %struct.png_compression_buffer** noundef %44)
  br label %45

45:                                               ; preds = %39, %24
  %46 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %47 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %48 = call i64 @png_image_size(%struct.png_struct_def.62* noundef %47)
  %49 = call i32 @png_deflate_claim(%struct.png_struct_def.62* noundef %46, i32 noundef 1229209940, i64 noundef %48)
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %53 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %54 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %53, i32 0, i32 19
  %55 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %54, i32 0, i32 6
  %56 = load i8*, i8** %55, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %52, i8* noundef %56) #13
  unreachable

57:                                               ; preds = %45
  %58 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %59 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %58, i32 0, i32 20
  %60 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %59, align 8
  %61 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %60, i32 0, i32 1
  %62 = getelementptr inbounds [1 x i8], [1 x i8]* %61, i64 0, i64 0
  %63 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %64 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %63, i32 0, i32 19
  %65 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %64, i32 0, i32 3
  store i8* %62, i8** %65, align 8
  %66 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %67 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %66, i32 0, i32 21
  %68 = load i32, i32* %67, align 8
  %69 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %70 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %69, i32 0, i32 19
  %71 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %70, i32 0, i32 4
  store i32 %68, i32* %71, align 8
  br label %72

72:                                               ; preds = %57, %4
  %73 = load i8*, i8** %6, align 8
  %74 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %75 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %74, i32 0, i32 19
  %76 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %75, i32 0, i32 0
  store i8* %73, i8** %76, align 8
  %77 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %78 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %77, i32 0, i32 19
  %79 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %78, i32 0, i32 1
  store i32 0, i32* %79, align 8
  br label %80

80:                                               ; preds = %251, %172, %72
  store i32 -1, i32* %10, align 4
  %81 = load i32, i32* %10, align 4
  %82 = zext i32 %81 to i64
  %83 = load i64, i64* %7, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = load i64, i64* %7, align 8
  %87 = trunc i64 %86 to i32
  store i32 %87, i32* %10, align 4
  br label %88

88:                                               ; preds = %85, %80
  %89 = load i32, i32* %10, align 4
  %90 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %91 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %90, i32 0, i32 19
  %92 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %91, i32 0, i32 1
  store i32 %89, i32* %92, align 8
  %93 = load i32, i32* %10, align 4
  %94 = zext i32 %93 to i64
  %95 = load i64, i64* %7, align 8
  %96 = sub i64 %95, %94
  store i64 %96, i64* %7, align 8
  %97 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %98 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %97, i32 0, i32 19
  %99 = load i64, i64* %7, align 8
  %100 = icmp ugt i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %88
  br label %104

102:                                              ; preds = %88
  %103 = load i32, i32* %8, align 4
  br label %104

104:                                              ; preds = %102, %101
  %105 = phi i32 [ 0, %101 ], [ %103, %102 ]
  %106 = call i32 @deflate(%struct.z_stream_s* noundef %98, i32 noundef %105)
  store i32 %106, i32* %9, align 4
  %107 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %108 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %107, i32 0, i32 19
  %109 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %7, align 8
  %113 = add i64 %112, %111
  store i64 %113, i64* %7, align 8
  %114 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %115 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %115, i32 0, i32 1
  store i32 0, i32* %116, align 8
  %117 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %118 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %117, i32 0, i32 19
  %119 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %118, i32 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %174

122:                                              ; preds = %104
  %123 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %124 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %123, i32 0, i32 20
  %125 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %124, align 8
  %126 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %125, i32 0, i32 1
  %127 = getelementptr inbounds [1 x i8], [1 x i8]* %126, i64 0, i64 0
  store i8* %127, i8** %11, align 8
  %128 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %129 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %128, i32 0, i32 21
  %130 = load i32, i32* %129, align 8
  store i32 %130, i32* %12, align 4
  %131 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %132 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %131, i32 0, i32 15
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %122
  %137 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %138 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %137, i32 0, i32 132
  %139 = load i8, i8* %138, align 8
  %140 = zext i8 %139 to i32
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %136
  %143 = load i8*, i8** %11, align 8
  %144 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %145 = call i64 @png_image_size(%struct.png_struct_def.62* noundef %144)
  call void @optimize_cmf(i8* noundef %143, i64 noundef %145)
  br label %146

146:                                              ; preds = %142, %136, %122
  %147 = load i32, i32* %12, align 4
  %148 = icmp ugt i32 %147, 0
  br i1 %148, label %149, label %154

149:                                              ; preds = %146
  %150 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %151 = load i8*, i8** %11, align 8
  %152 = load i32, i32* %12, align 4
  %153 = zext i32 %152 to i64
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %150, i32 noundef 1229209940, i8* noundef %151, i64 noundef %153)
  br label %154

154:                                              ; preds = %149, %146
  %155 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %156 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %155, i32 0, i32 15
  %157 = load i32, i32* %156, align 4
  %158 = or i32 %157, 4
  store i32 %158, i32* %156, align 4
  %159 = load i8*, i8** %11, align 8
  %160 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %161 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %160, i32 0, i32 19
  %162 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %161, i32 0, i32 3
  store i8* %159, i8** %162, align 8
  %163 = load i32, i32* %12, align 4
  %164 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %165 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %164, i32 0, i32 19
  %166 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %165, i32 0, i32 4
  store i32 %163, i32* %166, align 8
  %167 = load i32, i32* %9, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %154
  %170 = load i32, i32* %8, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  br label %80

173:                                              ; preds = %169, %154
  br label %174

174:                                              ; preds = %173, %104
  %175 = load i32, i32* %9, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %187

177:                                              ; preds = %174
  %178 = load i64, i64* %7, align 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %177
  %181 = load i32, i32* %8, align 4
  %182 = icmp eq i32 %181, 4
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %184, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11.570, i64 0, i64 0)) #13
  unreachable

185:                                              ; preds = %180
  br label %252

186:                                              ; preds = %177
  br label %251

187:                                              ; preds = %174
  %188 = load i32, i32* %9, align 4
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %190, label %243

190:                                              ; preds = %187
  %191 = load i32, i32* %8, align 4
  %192 = icmp eq i32 %191, 4
  br i1 %192, label %193, label %243

193:                                              ; preds = %190
  %194 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %195 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %194, i32 0, i32 20
  %196 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %195, align 8
  %197 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %196, i32 0, i32 1
  %198 = getelementptr inbounds [1 x i8], [1 x i8]* %197, i64 0, i64 0
  store i8* %198, i8** %13, align 8
  %199 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %200 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %199, i32 0, i32 21
  %201 = load i32, i32* %200, align 8
  %202 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %203 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %202, i32 0, i32 19
  %204 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %203, i32 0, i32 4
  %205 = load i32, i32* %204, align 8
  %206 = sub i32 %201, %205
  store i32 %206, i32* %14, align 4
  %207 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %208 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %207, i32 0, i32 15
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %222

212:                                              ; preds = %193
  %213 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %214 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %213, i32 0, i32 132
  %215 = load i8, i8* %214, align 8
  %216 = zext i8 %215 to i32
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %222

218:                                              ; preds = %212
  %219 = load i8*, i8** %13, align 8
  %220 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %221 = call i64 @png_image_size(%struct.png_struct_def.62* noundef %220)
  call void @optimize_cmf(i8* noundef %219, i64 noundef %221)
  br label %222

222:                                              ; preds = %218, %212, %193
  %223 = load i32, i32* %14, align 4
  %224 = icmp ugt i32 %223, 0
  br i1 %224, label %225, label %230

225:                                              ; preds = %222
  %226 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %227 = load i8*, i8** %13, align 8
  %228 = load i32, i32* %14, align 4
  %229 = zext i32 %228 to i64
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %226, i32 noundef 1229209940, i8* noundef %227, i64 noundef %229)
  br label %230

230:                                              ; preds = %225, %222
  %231 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %232 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %231, i32 0, i32 19
  %233 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %232, i32 0, i32 4
  store i32 0, i32* %233, align 8
  %234 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %235 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %234, i32 0, i32 19
  %236 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %235, i32 0, i32 3
  store i8* null, i8** %236, align 8
  %237 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %238 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %237, i32 0, i32 15
  %239 = load i32, i32* %238, align 4
  %240 = or i32 %239, 12
  store i32 %240, i32* %238, align 4
  %241 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %242 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %241, i32 0, i32 18
  store i32 0, i32* %242, align 8
  br label %252

243:                                              ; preds = %190, %187
  %244 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %245 = load i32, i32* %9, align 4
  call void bitcast (void (%struct.png_struct_def*, i32)* @png_zstream_error to void (%struct.png_struct_def.62*, i32)*)(%struct.png_struct_def.62* noundef %244, i32 noundef %245)
  %246 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %247 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %248 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %247, i32 0, i32 19
  %249 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %248, i32 0, i32 6
  %250 = load i8*, i8** %249, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %246, i8* noundef %250) #13
  unreachable

251:                                              ; preds = %186
  br label %80

252:                                              ; preds = %230, %185
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @png_image_size(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  %10 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %11 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %10, i32 0, i32 38
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %4, align 4
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %13, i32 0, i32 41
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 32768
  br i1 %16, label %17, label %143

17:                                               ; preds = %1
  %18 = load i32, i32* %4, align 4
  %19 = icmp ult i32 %18, 32768
  br i1 %19, label %20, label %143

20:                                               ; preds = %17
  %21 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %21, i32 0, i32 58
  %23 = load i8, i8* %22, align 4
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %135

26:                                               ; preds = %20
  %27 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %28 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %27, i32 0, i32 37
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %5, align 4
  %30 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %31 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %30, i32 0, i32 64
  %32 = load i8, i8* %31, align 2
  %33 = zext i8 %32 to i32
  store i32 %33, i32* %6, align 4
  store i64 0, i64* %7, align 8
  store i32 0, i32* %8, align 4
  br label %34

34:                                               ; preds = %130, %26
  %35 = load i32, i32* %8, align 4
  %36 = icmp sle i32 %35, 6
  br i1 %36, label %37, label %133

37:                                               ; preds = %34
  %38 = load i32, i32* %5, align 4
  %39 = load i32, i32* %8, align 4
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = load i32, i32* %8, align 4
  %43 = sub nsw i32 7, %42
  %44 = ashr i32 %43, 1
  br label %46

45:                                               ; preds = %37
  br label %46

46:                                               ; preds = %45, %41
  %47 = phi i32 [ %44, %41 ], [ 3, %45 ]
  %48 = shl i32 1, %47
  %49 = sub nsw i32 %48, 1
  %50 = load i32, i32* %8, align 4
  %51 = and i32 1, %50
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, 1
  %54 = ashr i32 %53, 1
  %55 = sub nsw i32 3, %54
  %56 = shl i32 %51, %55
  %57 = and i32 %56, 7
  %58 = sub nsw i32 %49, %57
  %59 = add i32 %38, %58
  %60 = load i32, i32* %8, align 4
  %61 = icmp sgt i32 %60, 1
  br i1 %61, label %62, label %66

62:                                               ; preds = %46
  %63 = load i32, i32* %8, align 4
  %64 = sub nsw i32 7, %63
  %65 = ashr i32 %64, 1
  br label %67

66:                                               ; preds = %46
  br label %67

67:                                               ; preds = %66, %62
  %68 = phi i32 [ %65, %62 ], [ 3, %66 ]
  %69 = lshr i32 %59, %68
  store i32 %69, i32* %9, align 4
  %70 = load i32, i32* %9, align 4
  %71 = icmp ugt i32 %70, 0
  br i1 %71, label %72, label %129

72:                                               ; preds = %67
  %73 = load i32, i32* %6, align 4
  %74 = icmp uge i32 %73, 8
  br i1 %74, label %75, label %82

75:                                               ; preds = %72
  %76 = load i32, i32* %9, align 4
  %77 = zext i32 %76 to i64
  %78 = load i32, i32* %6, align 4
  %79 = zext i32 %78 to i64
  %80 = lshr i64 %79, 3
  %81 = mul i64 %77, %80
  br label %90

82:                                               ; preds = %72
  %83 = load i32, i32* %9, align 4
  %84 = zext i32 %83 to i64
  %85 = load i32, i32* %6, align 4
  %86 = zext i32 %85 to i64
  %87 = mul i64 %84, %86
  %88 = add i64 %87, 7
  %89 = lshr i64 %88, 3
  br label %90

90:                                               ; preds = %82, %75
  %91 = phi i64 [ %81, %75 ], [ %89, %82 ]
  %92 = add i64 %91, 1
  %93 = load i32, i32* %4, align 4
  %94 = load i32, i32* %8, align 4
  %95 = icmp sgt i32 %94, 2
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = load i32, i32* %8, align 4
  %98 = sub nsw i32 8, %97
  %99 = ashr i32 %98, 1
  br label %101

100:                                              ; preds = %90
  br label %101

101:                                              ; preds = %100, %96
  %102 = phi i32 [ %99, %96 ], [ 3, %100 ]
  %103 = shl i32 1, %102
  %104 = sub nsw i32 %103, 1
  %105 = load i32, i32* %8, align 4
  %106 = xor i32 %105, -1
  %107 = and i32 1, %106
  %108 = load i32, i32* %8, align 4
  %109 = ashr i32 %108, 1
  %110 = sub nsw i32 3, %109
  %111 = shl i32 %107, %110
  %112 = and i32 %111, 7
  %113 = sub nsw i32 %104, %112
  %114 = add i32 %93, %113
  %115 = load i32, i32* %8, align 4
  %116 = icmp sgt i32 %115, 2
  br i1 %116, label %117, label %121

117:                                              ; preds = %101
  %118 = load i32, i32* %8, align 4
  %119 = sub nsw i32 8, %118
  %120 = ashr i32 %119, 1
  br label %122

121:                                              ; preds = %101
  br label %122

122:                                              ; preds = %121, %117
  %123 = phi i32 [ %120, %117 ], [ 3, %121 ]
  %124 = lshr i32 %114, %123
  %125 = zext i32 %124 to i64
  %126 = mul i64 %92, %125
  %127 = load i64, i64* %7, align 8
  %128 = add i64 %127, %126
  store i64 %128, i64* %7, align 8
  br label %129

129:                                              ; preds = %122, %67
  br label %130

130:                                              ; preds = %129
  %131 = load i32, i32* %8, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %8, align 4
  br label %34, !llvm.loop !346

133:                                              ; preds = %34
  %134 = load i64, i64* %7, align 8
  store i64 %134, i64* %2, align 8
  br label %144

135:                                              ; preds = %20
  %136 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %137 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %136, i32 0, i32 41
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 1
  %140 = load i32, i32* %4, align 4
  %141 = zext i32 %140 to i64
  %142 = mul i64 %139, %141
  store i64 %142, i64* %2, align 8
  br label %144

143:                                              ; preds = %17, %1
  store i64 4294967295, i64* %2, align 8
  br label %144

144:                                              ; preds = %143, %135, %133
  %145 = load i64, i64* %2, align 8
  ret i64 %145
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_deflate_claim(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca [64 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %17 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %16, i32 0, i32 18
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %96

20:                                               ; preds = %3
  %21 = load i32, i32* %6, align 4
  %22 = lshr i32 %21, 24
  %23 = and i32 %22, 255
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  store i8 %24, i8* %26, align 16
  %27 = load i32, i32* %6, align 4
  %28 = lshr i32 %27, 16
  %29 = and i32 %28, 255
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 %30, i8* %32, align 1
  %33 = load i32, i32* %6, align 4
  %34 = lshr i32 %33, 8
  %35 = and i32 %34, 255
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %36, i8* %38, align 2
  %39 = load i32, i32* %6, align 4
  %40 = and i32 %39, 255
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %43 = getelementptr inbounds i8, i8* %42, i64 3
  store i8 %41, i8* %43, align 1
  %44 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 4
  store i8 58, i8* %44, align 4
  %45 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 5
  store i8 32, i8* %45, align 1
  %46 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %47 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %46, i32 0, i32 18
  %48 = load i32, i32* %47, align 8
  %49 = lshr i32 %48, 24
  %50 = and i32 %49, 255
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %53 = getelementptr inbounds i8, i8* %52, i64 6
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  store i8 %51, i8* %54, align 1
  %55 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %56 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %55, i32 0, i32 18
  %57 = load i32, i32* %56, align 8
  %58 = lshr i32 %57, 16
  %59 = and i32 %58, 255
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %62 = getelementptr inbounds i8, i8* %61, i64 6
  %63 = getelementptr inbounds i8, i8* %62, i64 1
  store i8 %60, i8* %63, align 1
  %64 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %65 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %64, i32 0, i32 18
  %66 = load i32, i32* %65, align 8
  %67 = lshr i32 %66, 8
  %68 = and i32 %67, 255
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %71 = getelementptr inbounds i8, i8* %70, i64 6
  %72 = getelementptr inbounds i8, i8* %71, i64 2
  store i8 %69, i8* %72, align 1
  %73 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %74 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %73, i32 0, i32 18
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 255
  %77 = trunc i32 %76 to i8
  %78 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %79 = getelementptr inbounds i8, i8* %78, i64 6
  %80 = getelementptr inbounds i8, i8* %79, i64 3
  store i8 %77, i8* %80, align 1
  %81 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %82 = call i64 @png_safecat(i8* noundef %81, i64 noundef 64, i64 noundef 10, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43.571, i64 0, i64 0))
  %83 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %84 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %83, i8* noundef %84)
  %85 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %86 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %85, i32 0, i32 18
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1229209940
  br i1 %88, label %89, label %93

89:                                               ; preds = %20
  %90 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %91 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %90, i32 0, i32 19
  %92 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %91, i32 0, i32 6
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44.572, i64 0, i64 0), i8** %92, align 8
  store i32 -2, i32* %4, align 4
  br label %265

93:                                               ; preds = %20
  %94 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %95 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %94, i32 0, i32 18
  store i32 0, i32* %95, align 8
  br label %96

96:                                               ; preds = %93, %3
  %97 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %98 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %97, i32 0, i32 22
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %9, align 4
  %100 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %101 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %100, i32 0, i32 23
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %10, align 4
  %103 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %104 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %103, i32 0, i32 24
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %11, align 4
  %106 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %107 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %106, i32 0, i32 25
  %108 = load i32, i32* %107, align 8
  store i32 %108, i32* %12, align 4
  %109 = load i32, i32* %6, align 4
  %110 = icmp eq i32 %109, 1229209940
  br i1 %110, label %111, label %131

111:                                              ; preds = %96
  %112 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %113 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %112, i32 0, i32 16
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 1
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %111
  %118 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %119 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %118, i32 0, i32 26
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %13, align 4
  br label %130

121:                                              ; preds = %111
  %122 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %123 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %122, i32 0, i32 60
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i32
  %126 = icmp ne i32 %125, 8
  br i1 %126, label %127, label %128

127:                                              ; preds = %121
  store i32 1, i32* %13, align 4
  br label %129

128:                                              ; preds = %121
  store i32 0, i32* %13, align 4
  br label %129

129:                                              ; preds = %128, %127
  br label %130

130:                                              ; preds = %129, %117
  br label %147

131:                                              ; preds = %96
  %132 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %133 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %132, i32 0, i32 27
  %134 = load i32, i32* %133, align 8
  store i32 %134, i32* %9, align 4
  %135 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %136 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %135, i32 0, i32 28
  %137 = load i32, i32* %136, align 4
  store i32 %137, i32* %10, align 4
  %138 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %139 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %138, i32 0, i32 29
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %11, align 4
  %141 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %142 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %141, i32 0, i32 30
  %143 = load i32, i32* %142, align 4
  store i32 %143, i32* %12, align 4
  %144 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %145 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %144, i32 0, i32 31
  %146 = load i32, i32* %145, align 8
  store i32 %146, i32* %13, align 4
  br label %147

147:                                              ; preds = %131, %130
  %148 = load i64, i64* %7, align 8
  %149 = icmp ule i64 %148, 16384
  br i1 %149, label %150, label %166

150:                                              ; preds = %147
  %151 = load i32, i32* %11, align 4
  %152 = sub nsw i32 %151, 1
  %153 = shl i32 1, %152
  store i32 %153, i32* %15, align 4
  br label %154

154:                                              ; preds = %160, %150
  %155 = load i64, i64* %7, align 8
  %156 = add i64 %155, 262
  %157 = load i32, i32* %15, align 4
  %158 = zext i32 %157 to i64
  %159 = icmp ule i64 %156, %158
  br i1 %159, label %160, label %165

160:                                              ; preds = %154
  %161 = load i32, i32* %15, align 4
  %162 = lshr i32 %161, 1
  store i32 %162, i32* %15, align 4
  %163 = load i32, i32* %11, align 4
  %164 = add nsw i32 %163, -1
  store i32 %164, i32* %11, align 4
  br label %154, !llvm.loop !347

165:                                              ; preds = %154
  br label %166

166:                                              ; preds = %165, %147
  %167 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %168 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %167, i32 0, i32 16
  %169 = load i32, i32* %168, align 8
  %170 = and i32 %169, 2
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %214

172:                                              ; preds = %166
  %173 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %174 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %173, i32 0, i32 32
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %9, align 4
  %177 = icmp ne i32 %175, %176
  br i1 %177, label %202, label %178

178:                                              ; preds = %172
  %179 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %180 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %179, i32 0, i32 33
  %181 = load i32, i32* %180, align 8
  %182 = load i32, i32* %10, align 4
  %183 = icmp ne i32 %181, %182
  br i1 %183, label %202, label %184

184:                                              ; preds = %178
  %185 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %186 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %185, i32 0, i32 34
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %11, align 4
  %189 = icmp ne i32 %187, %188
  br i1 %189, label %202, label %190

190:                                              ; preds = %184
  %191 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %192 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %191, i32 0, i32 35
  %193 = load i32, i32* %192, align 8
  %194 = load i32, i32* %12, align 4
  %195 = icmp ne i32 %193, %194
  br i1 %195, label %202, label %196

196:                                              ; preds = %190
  %197 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %198 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %197, i32 0, i32 36
  %199 = load i32, i32* %198, align 4
  %200 = load i32, i32* %13, align 4
  %201 = icmp ne i32 %199, %200
  br i1 %201, label %202, label %214

202:                                              ; preds = %196, %190, %184, %178, %172
  %203 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %204 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %203, i32 0, i32 19
  %205 = call i32 @deflateEnd(%struct.z_stream_s* noundef %204)
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %202
  %208 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %208, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45.573, i64 0, i64 0))
  br label %209

209:                                              ; preds = %207, %202
  %210 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %211 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %210, i32 0, i32 16
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, -3
  store i32 %213, i32* %211, align 8
  br label %214

214:                                              ; preds = %209, %196, %166
  %215 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %216 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %215, i32 0, i32 19
  %217 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %216, i32 0, i32 0
  store i8* null, i8** %217, align 8
  %218 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %219 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %218, i32 0, i32 19
  %220 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %219, i32 0, i32 1
  store i32 0, i32* %220, align 8
  %221 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %222 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %221, i32 0, i32 19
  %223 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %222, i32 0, i32 3
  store i8* null, i8** %223, align 8
  %224 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %225 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %224, i32 0, i32 19
  %226 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %225, i32 0, i32 4
  store i32 0, i32* %226, align 8
  %227 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %228 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %227, i32 0, i32 16
  %229 = load i32, i32* %228, align 8
  %230 = and i32 %229, 2
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %214
  %233 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %234 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %233, i32 0, i32 19
  %235 = call i32 @deflateReset(%struct.z_stream_s* noundef %234)
  store i32 %235, i32* %14, align 4
  br label %253

236:                                              ; preds = %214
  %237 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %238 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %237, i32 0, i32 19
  %239 = load i32, i32* %9, align 4
  %240 = load i32, i32* %10, align 4
  %241 = load i32, i32* %11, align 4
  %242 = load i32, i32* %12, align 4
  %243 = load i32, i32* %13, align 4
  %244 = call i32 @deflateInit2_(%struct.z_stream_s* noundef %238, i32 noundef %239, i32 noundef %240, i32 noundef %241, i32 noundef %242, i32 noundef %243, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46.574, i64 0, i64 0), i32 noundef 112)
  store i32 %244, i32* %14, align 4
  %245 = load i32, i32* %14, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %252

247:                                              ; preds = %236
  %248 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %249 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %248, i32 0, i32 16
  %250 = load i32, i32* %249, align 8
  %251 = or i32 %250, 2
  store i32 %251, i32* %249, align 8
  br label %252

252:                                              ; preds = %247, %236
  br label %253

253:                                              ; preds = %252, %232
  %254 = load i32, i32* %14, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %260

256:                                              ; preds = %253
  %257 = load i32, i32* %6, align 4
  %258 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %259 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %258, i32 0, i32 18
  store i32 %257, i32* %259, align 8
  br label %263

260:                                              ; preds = %253
  %261 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %262 = load i32, i32* %14, align 4
  call void bitcast (void (%struct.png_struct_def*, i32)* @png_zstream_error to void (%struct.png_struct_def.62*, i32)*)(%struct.png_struct_def.62* noundef %261, i32 noundef %262)
  br label %263

263:                                              ; preds = %260, %256
  %264 = load i32, i32* %14, align 4
  store i32 %264, i32* %4, align 4
  br label %265

265:                                              ; preds = %263, %89
  %266 = load i32, i32* %4, align 4
  ret i32 %266
}

declare i32 @deflate(%struct.z_stream_s* noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @optimize_cmf(i8* noundef %0, i64 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load i64, i64* %4, align 8
  %10 = icmp ule i64 %9, 16384
  br i1 %10, label %11, label %78

11:                                               ; preds = %2
  %12 = load i8*, i8** %3, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %5, align 4
  %16 = load i32, i32* %5, align 4
  %17 = and i32 %16, 15
  %18 = icmp eq i32 %17, 8
  br i1 %18, label %19, label %77

19:                                               ; preds = %11
  %20 = load i32, i32* %5, align 4
  %21 = and i32 %20, 240
  %22 = icmp ule i32 %21, 112
  br i1 %22, label %23, label %77

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4
  %25 = lshr i32 %24, 4
  store i32 %25, i32* %6, align 4
  %26 = load i32, i32* %6, align 4
  %27 = add i32 %26, 7
  %28 = shl i32 1, %27
  store i32 %28, i32* %7, align 4
  %29 = load i64, i64* %4, align 8
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = icmp ule i64 %29, %31
  br i1 %32, label %33, label %76

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %47, %33
  %35 = load i32, i32* %7, align 4
  %36 = lshr i32 %35, 1
  store i32 %36, i32* %7, align 4
  %37 = load i32, i32* %6, align 4
  %38 = add i32 %37, -1
  store i32 %38, i32* %6, align 4
  br label %39

39:                                               ; preds = %34
  %40 = load i32, i32* %6, align 4
  %41 = icmp ugt i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = load i64, i64* %4, align 8
  %44 = load i32, i32* %7, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ule i64 %43, %45
  br label %47

47:                                               ; preds = %42, %39
  %48 = phi i1 [ false, %39 ], [ %46, %42 ]
  br i1 %48, label %34, label %49, !llvm.loop !348

49:                                               ; preds = %47
  %50 = load i32, i32* %5, align 4
  %51 = and i32 %50, 15
  %52 = load i32, i32* %6, align 4
  %53 = shl i32 %52, 4
  %54 = or i32 %51, %53
  store i32 %54, i32* %5, align 4
  %55 = load i32, i32* %5, align 4
  %56 = trunc i32 %55 to i8
  %57 = load i8*, i8** %3, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  store i8 %56, i8* %58, align 1
  %59 = load i8*, i8** %3, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = and i32 %62, 224
  store i32 %63, i32* %8, align 4
  %64 = load i32, i32* %5, align 4
  %65 = shl i32 %64, 8
  %66 = load i32, i32* %8, align 4
  %67 = add i32 %65, %66
  %68 = urem i32 %67, 31
  %69 = sub i32 31, %68
  %70 = load i32, i32* %8, align 4
  %71 = add i32 %70, %69
  store i32 %71, i32* %8, align 4
  %72 = load i32, i32* %8, align 4
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %3, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  store i8 %73, i8* %75, align 1
  br label %76

76:                                               ; preds = %49, %23
  br label %77

77:                                               ; preds = %76, %19, %11
  br label %78

78:                                               ; preds = %77, %2
  ret void
}

declare i32 @deflateReset(%struct.z_stream_s* noundef) #3

declare i32 @deflateInit2_(%struct.z_stream_s* noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i8* noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_IEND(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.62*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %2, align 8
  %3 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %3, i32 noundef 1229278788, i8* noundef null, i64 noundef 0)
  %4 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %5 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %4, i32 0, i32 15
  %6 = load i32, i32* %5, align 4
  %7 = or i32 %6, 16
  store i32 %7, i32* %5, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_gAMA_fixed(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [4 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0
  %7 = load i32, i32* %4, align 4
  call void @png_save_uint_32(i8* noundef %6, i32 noundef %7)
  %8 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %8, i32 noundef 1732332865, i8* noundef %9, i64 noundef 4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_sRGB(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [1 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp sge i32 %6, 4
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %9, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12.581, i64 0, i64 0))
  br label %10

10:                                               ; preds = %8, %2
  %11 = load i32, i32* %4, align 4
  %12 = trunc i32 %11 to i8
  %13 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i64 0
  store i8 %12, i8* %13, align 1
  %14 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %15 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %14, i32 noundef 1934772034, i8* noundef %15, i64 noundef 1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_iCCP(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [81 x i8], align 16
  %10 = alloca %struct.compression_state, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %16, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13.584, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %3
  %18 = load i8*, i8** %6, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl i32 %20, 24
  %22 = load i8*, i8** %6, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 %25, 16
  %27 = add i32 %21, %26
  %28 = load i8*, i8** %6, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl i32 %31, 8
  %33 = add i32 %27, %32
  %34 = load i8*, i8** %6, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = add i32 %33, %37
  store i32 %38, i32* %8, align 4
  %39 = load i32, i32* %8, align 4
  %40 = icmp ult i32 %39, 132
  br i1 %40, label %41, label %43

41:                                               ; preds = %17
  %42 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %42, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.585, i64 0, i64 0)) #13
  unreachable

43:                                               ; preds = %17
  %44 = load i8*, i8** %6, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  store i32 %47, i32* %11, align 4
  %48 = load i32, i32* %11, align 4
  %49 = icmp ugt i32 %48, 3
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = load i32, i32* %8, align 4
  %52 = and i32 %51, 3
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %55, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.586, i64 0, i64 0)) #13
  unreachable

56:                                               ; preds = %50, %43
  %57 = load i8*, i8** %6, align 8
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 24
  %61 = load i8*, i8** %6, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl i32 %64, 16
  %66 = add i32 %60, %65
  %67 = load i8*, i8** %6, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl i32 %70, 8
  %72 = add i32 %66, %71
  %73 = load i8*, i8** %6, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = add i32 %72, %76
  store i32 %77, i32* %12, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %12, align 4
  %80 = icmp ne i32 %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %56
  %82 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %82, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16.587, i64 0, i64 0)) #13
  unreachable

83:                                               ; preds = %56
  %84 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %85 = load i8*, i8** %5, align 8
  %86 = getelementptr inbounds [81 x i8], [81 x i8]* %9, i64 0, i64 0
  %87 = call i32 bitcast (i32 (%struct.png_struct_def*, i8*, i8*)* @png_check_keyword to i32 (%struct.png_struct_def.62*, i8*, i8*)*)(%struct.png_struct_def.62* noundef %84, i8* noundef %85, i8* noundef %86)
  store i32 %87, i32* %7, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %83
  %91 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %91, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.588, i64 0, i64 0)) #13
  unreachable

92:                                               ; preds = %83
  %93 = load i32, i32* %7, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %7, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [81 x i8], [81 x i8]* %9, i64 0, i64 %95
  store i8 0, i8* %96, align 1
  %97 = load i32, i32* %7, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %7, align 4
  %99 = load i8*, i8** %6, align 8
  %100 = load i32, i32* %8, align 4
  %101 = zext i32 %100 to i64
  call void @png_text_compress_init(%struct.compression_state* noundef %10, i8* noundef %99, i64 noundef %101)
  %102 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %103 = load i32, i32* %7, align 4
  %104 = call i32 @png_text_compress(%struct.png_struct_def.62* noundef %102, i32 noundef 1766015824, %struct.compression_state* noundef %10, i32 noundef %103)
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %92
  %107 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %108 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %109 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %108, i32 0, i32 19
  %110 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %109, i32 0, i32 6
  %111 = load i8*, i8** %110, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %107, i8* noundef %111) #13
  unreachable

112:                                              ; preds = %92
  %113 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %114 = load i32, i32* %7, align 4
  %115 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %10, i32 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = add i32 %114, %116
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %113, i32 noundef 1766015824, i32 noundef %117)
  %118 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %119 = getelementptr inbounds [81 x i8], [81 x i8]* %9, i64 0, i64 0
  %120 = load i32, i32* %7, align 4
  %121 = zext i32 %120 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %118, i8* noundef %119, i64 noundef %121)
  %122 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void @png_write_compressed_data_out(%struct.png_struct_def.62* noundef %122, %struct.compression_state* noundef %10)
  %123 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %123)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_text_compress_init(%struct.compression_state* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.compression_state*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.compression_state* %0, %struct.compression_state** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = load %struct.compression_state*, %struct.compression_state** %4, align 8
  %9 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %8, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %struct.compression_state*, %struct.compression_state** %4, align 8
  %12 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %11, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  %13 = load %struct.compression_state*, %struct.compression_state** %4, align 8
  %14 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %13, i32 0, i32 2
  store i32 0, i32* %14, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @png_text_compress(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, %struct.compression_state* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.png_struct_def.62*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.compression_state*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.png_compression_buffer**, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.png_compression_buffer*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %6, align 8
  store i32 %1, i32* %7, align 4
  store %struct.compression_state* %2, %struct.compression_state** %8, align 8
  store i32 %3, i32* %9, align 4
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %17 = load i32, i32* %7, align 4
  %18 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %19 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %18, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call i32 @png_deflate_claim(%struct.png_struct_def.62* noundef %16, i32 noundef %17, i64 noundef %20)
  store i32 %21, i32* %10, align 4
  %22 = load i32, i32* %10, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %4
  %25 = load i32, i32* %10, align 4
  store i32 %25, i32* %5, align 4
  br label %187

26:                                               ; preds = %4
  %27 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %28 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %27, i32 0, i32 20
  store %struct.png_compression_buffer** %28, %struct.png_compression_buffer*** %11, align 8
  %29 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %30 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %12, align 8
  %32 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %33 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %36 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %35, i32 0, i32 19
  %37 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %36, i32 0, i32 0
  store i8* %34, i8** %37, align 8
  %38 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %39 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %38, i32 0, i32 19
  %40 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %39, i32 0, i32 1
  store i32 0, i32* %40, align 8
  %41 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %42 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %41, i32 0, i32 3
  %43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %42, i64 0, i64 0
  %44 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %45 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %44, i32 0, i32 19
  %46 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %45, i32 0, i32 3
  store i8* %43, i8** %46, align 8
  %47 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %48 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %47, i32 0, i32 19
  %49 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %48, i32 0, i32 4
  store i32 1024, i32* %49, align 8
  %50 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %51 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %50, i32 0, i32 19
  %52 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %51, i32 0, i32 4
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %13, align 4
  br label %54

54:                                               ; preds = %143, %26
  store i32 -1, i32* %14, align 4
  %55 = load i32, i32* %14, align 4
  %56 = zext i32 %55 to i64
  %57 = load i64, i64* %12, align 8
  %58 = icmp ugt i64 %56, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = load i64, i64* %12, align 8
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %14, align 4
  br label %62

62:                                               ; preds = %59, %54
  %63 = load i32, i32* %14, align 4
  %64 = zext i32 %63 to i64
  %65 = load i64, i64* %12, align 8
  %66 = sub i64 %65, %64
  store i64 %66, i64* %12, align 8
  %67 = load i32, i32* %14, align 4
  %68 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %69 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %68, i32 0, i32 19
  %70 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %69, i32 0, i32 1
  store i32 %67, i32* %70, align 8
  %71 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %72 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %71, i32 0, i32 19
  %73 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %72, i32 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %125

76:                                               ; preds = %62
  %77 = load i32, i32* %13, align 4
  %78 = load i32, i32* %9, align 4
  %79 = add i32 %77, %78
  %80 = icmp ugt i32 %79, 2147483647
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  store i32 -4, i32* %10, align 4
  br label %146

82:                                               ; preds = %76
  %83 = load %struct.png_compression_buffer**, %struct.png_compression_buffer*** %11, align 8
  %84 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %83, align 8
  store %struct.png_compression_buffer* %84, %struct.png_compression_buffer** %15, align 8
  %85 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  %86 = icmp eq %struct.png_compression_buffer* %85, null
  br i1 %86, label %87, label %104

87:                                               ; preds = %82
  %88 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %89 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %90 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %89, i32 0, i32 21
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = add i64 8, %92
  %94 = call noalias i8* @png_malloc_base(%struct.png_struct_def.62* noundef %88, i64 noundef %93)
  %95 = bitcast i8* %94 to %struct.png_compression_buffer*
  store %struct.png_compression_buffer* %95, %struct.png_compression_buffer** %15, align 8
  %96 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  %97 = icmp eq %struct.png_compression_buffer* %96, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %87
  store i32 -4, i32* %10, align 4
  br label %146

99:                                               ; preds = %87
  %100 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  %101 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %100, i32 0, i32 0
  store %struct.png_compression_buffer* null, %struct.png_compression_buffer** %101, align 8
  %102 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  %103 = load %struct.png_compression_buffer**, %struct.png_compression_buffer*** %11, align 8
  store %struct.png_compression_buffer* %102, %struct.png_compression_buffer** %103, align 8
  br label %104

104:                                              ; preds = %99, %82
  %105 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  %106 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %105, i32 0, i32 1
  %107 = getelementptr inbounds [1 x i8], [1 x i8]* %106, i64 0, i64 0
  %108 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %109 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %108, i32 0, i32 19
  %110 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %109, i32 0, i32 3
  store i8* %107, i8** %110, align 8
  %111 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %112 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %111, i32 0, i32 21
  %113 = load i32, i32* %112, align 8
  %114 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %115 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %115, i32 0, i32 4
  store i32 %113, i32* %116, align 8
  %117 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %118 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %117, i32 0, i32 19
  %119 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %118, i32 0, i32 4
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %13, align 4
  %122 = add i32 %121, %120
  store i32 %122, i32* %13, align 4
  %123 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %15, align 8
  %124 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %123, i32 0, i32 0
  store %struct.png_compression_buffer** %124, %struct.png_compression_buffer*** %11, align 8
  br label %125

125:                                              ; preds = %104, %62
  %126 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %127 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %126, i32 0, i32 19
  %128 = load i64, i64* %12, align 8
  %129 = icmp ugt i64 %128, 0
  %130 = zext i1 %129 to i64
  %131 = select i1 %129, i32 0, i32 4
  %132 = call i32 @deflate(%struct.z_stream_s* noundef %127, i32 noundef %131)
  store i32 %132, i32* %10, align 4
  %133 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %134 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %133, i32 0, i32 19
  %135 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %134, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = zext i32 %136 to i64
  %138 = load i64, i64* %12, align 8
  %139 = add i64 %138, %137
  store i64 %139, i64* %12, align 8
  %140 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %141 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %140, i32 0, i32 19
  %142 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %141, i32 0, i32 1
  store i32 0, i32* %142, align 8
  br label %143

143:                                              ; preds = %125
  %144 = load i32, i32* %10, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %54, label %146, !llvm.loop !349

146:                                              ; preds = %143, %98, %81
  %147 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %148 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %147, i32 0, i32 19
  %149 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %148, i32 0, i32 4
  %150 = load i32, i32* %149, align 8
  %151 = load i32, i32* %13, align 4
  %152 = sub i32 %151, %150
  store i32 %152, i32* %13, align 4
  %153 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %154 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %153, i32 0, i32 19
  %155 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %154, i32 0, i32 4
  store i32 0, i32* %155, align 8
  %156 = load i32, i32* %13, align 4
  %157 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %158 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %157, i32 0, i32 2
  store i32 %156, i32* %158, align 8
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %9, align 4
  %161 = add i32 %159, %160
  %162 = icmp uge i32 %161, 2147483647
  br i1 %162, label %163, label %167

163:                                              ; preds = %146
  %164 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %165 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %164, i32 0, i32 19
  %166 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %165, i32 0, i32 6
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.590, i64 0, i64 0), i8** %166, align 8
  store i32 -4, i32* %10, align 4
  br label %170

167:                                              ; preds = %146
  %168 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %169 = load i32, i32* %10, align 4
  call void bitcast (void (%struct.png_struct_def*, i32)* @png_zstream_error to void (%struct.png_struct_def.62*, i32)*)(%struct.png_struct_def.62* noundef %168, i32 noundef %169)
  br label %170

170:                                              ; preds = %167, %163
  %171 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %172 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %171, i32 0, i32 18
  store i32 0, i32* %172, align 8
  %173 = load i32, i32* %10, align 4
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %185

175:                                              ; preds = %170
  %176 = load i64, i64* %12, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %185

178:                                              ; preds = %175
  %179 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %180 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %179, i32 0, i32 3
  %181 = getelementptr inbounds [1024 x i8], [1024 x i8]* %180, i64 0, i64 0
  %182 = load %struct.compression_state*, %struct.compression_state** %8, align 8
  %183 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %182, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  call void @optimize_cmf(i8* noundef %181, i64 noundef %184)
  store i32 0, i32* %5, align 4
  br label %187

185:                                              ; preds = %175, %170
  %186 = load i32, i32* %10, align 4
  store i32 %186, i32* %5, align 4
  br label %187

187:                                              ; preds = %185, %178, %24
  %188 = load i32, i32* %5, align 4
  ret i32 %188
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_write_compressed_data_out(%struct.png_struct_def.62* noalias noundef %0, %struct.compression_state* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca %struct.compression_state*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.png_compression_buffer*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store %struct.compression_state* %1, %struct.compression_state** %4, align 8
  %9 = load %struct.compression_state*, %struct.compression_state** %4, align 8
  %10 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %5, align 4
  %12 = load %struct.compression_state*, %struct.compression_state** %4, align 8
  %13 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  store i8* %14, i8** %6, align 8
  store i32 1024, i32* %7, align 4
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %16 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %15, i32 0, i32 20
  %17 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %16, align 8
  store %struct.png_compression_buffer* %17, %struct.png_compression_buffer** %8, align 8
  br label %18

18:                                               ; preds = %38, %2
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %5, align 4
  %21 = icmp ugt i32 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4
  store i32 %23, i32* %7, align 4
  br label %24

24:                                               ; preds = %22, %18
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %26 = load i8*, i8** %6, align 8
  %27 = load i32, i32* %7, align 4
  %28 = zext i32 %27 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %25, i8* noundef %26, i64 noundef %28)
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %5, align 4
  %31 = sub i32 %30, %29
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* %5, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %24
  %35 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %8, align 8
  %36 = icmp eq %struct.png_compression_buffer* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %24
  br label %48

38:                                               ; preds = %34
  %39 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %40 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %39, i32 0, i32 21
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %7, align 4
  %42 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %8, align 8
  %43 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %42, i32 0, i32 1
  %44 = getelementptr inbounds [1 x i8], [1 x i8]* %43, i64 0, i64 0
  store i8* %44, i8** %6, align 8
  %45 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %8, align 8
  %46 = getelementptr inbounds %struct.png_compression_buffer, %struct.png_compression_buffer* %45, i32 0, i32 0
  %47 = load %struct.png_compression_buffer*, %struct.png_compression_buffer** %46, align 8
  store %struct.png_compression_buffer* %47, %struct.png_compression_buffer** %8, align 8
  br label %18

48:                                               ; preds = %37
  %49 = load i32, i32* %5, align 4
  %50 = icmp ugt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %52, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.48.589, i64 0, i64 0)) #13
  unreachable

53:                                               ; preds = %48
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_sPLT(%struct.png_struct_def.62* noalias noundef %0, %struct.png_sPLT_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca %struct.png_sPLT_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [80 x i8], align 16
  %7 = alloca [10 x i8], align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.png_sPLT_entry_struct*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store %struct.png_sPLT_struct* %1, %struct.png_sPLT_struct** %4, align 8
  %11 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %12 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %11, i32 0, i32 1
  %13 = load i8, i8* %12, align 8
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 8
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i32 6, i32 10
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %8, align 8
  %19 = load i64, i64* %8, align 8
  %20 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %21 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = mul i64 %19, %23
  store i64 %24, i64* %9, align 8
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %26 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %27 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  %30 = call i32 bitcast (i32 (%struct.png_struct_def*, i8*, i8*)* @png_check_keyword to i32 (%struct.png_struct_def.62*, i8*, i8*)*)(%struct.png_struct_def.62* noundef %25, i8* noundef %28, i8* noundef %29)
  store i32 %30, i32* %5, align 4
  %31 = load i32, i32* %5, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %2
  %34 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %34, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.593, i64 0, i64 0)) #13
  unreachable

35:                                               ; preds = %2
  %36 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %37 = load i32, i32* %5, align 4
  %38 = add i32 %37, 2
  %39 = zext i32 %38 to i64
  %40 = load i64, i64* %9, align 8
  %41 = add i64 %39, %40
  %42 = trunc i64 %41 to i32
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %36, i32 noundef 1934642260, i32 noundef %42)
  %43 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %44 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  %45 = load i32, i32* %5, align 4
  %46 = add i32 %45, 1
  %47 = zext i32 %46 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %43, i8* noundef %44, i64 noundef %47)
  %48 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %49 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %50 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %49, i32 0, i32 1
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %48, i8* noundef %50, i64 noundef 1)
  %51 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %52 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %51, i32 0, i32 2
  %53 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %52, align 8
  store %struct.png_sPLT_entry_struct* %53, %struct.png_sPLT_entry_struct** %10, align 8
  br label %54

54:                                               ; preds = %133, %35
  %55 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %56 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %57 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %56, i32 0, i32 2
  %58 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %57, align 8
  %59 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %60 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %58, i64 %62
  %64 = icmp ult %struct.png_sPLT_entry_struct* %55, %63
  br i1 %64, label %65, label %136

65:                                               ; preds = %54
  %66 = load %struct.png_sPLT_struct*, %struct.png_sPLT_struct** %4, align 8
  %67 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %66, i32 0, i32 1
  %68 = load i8, i8* %67, align 8
  %69 = zext i8 %68 to i32
  %70 = icmp eq i32 %69, 8
  br i1 %70, label %71, label %98

71:                                               ; preds = %65
  %72 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %73 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %72, i32 0, i32 0
  %74 = load i16, i16* %73, align 2
  %75 = trunc i16 %74 to i8
  %76 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  store i8 %75, i8* %76, align 1
  %77 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %78 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %77, i32 0, i32 1
  %79 = load i16, i16* %78, align 2
  %80 = trunc i16 %79 to i8
  %81 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 1
  store i8 %80, i8* %81, align 1
  %82 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %83 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %82, i32 0, i32 2
  %84 = load i16, i16* %83, align 2
  %85 = trunc i16 %84 to i8
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 2
  store i8 %85, i8* %86, align 1
  %87 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %88 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %87, i32 0, i32 3
  %89 = load i16, i16* %88, align 2
  %90 = trunc i16 %89 to i8
  %91 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 3
  store i8 %90, i8* %91, align 1
  %92 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %93 = getelementptr inbounds i8, i8* %92, i64 4
  %94 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %95 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %94, i32 0, i32 4
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  call void @png_save_uint_16(i8* noundef %93, i32 noundef %97)
  br label %129

98:                                               ; preds = %65
  %99 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %100 = getelementptr inbounds i8, i8* %99, i64 0
  %101 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %102 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %101, i32 0, i32 0
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  call void @png_save_uint_16(i8* noundef %100, i32 noundef %104)
  %105 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %106 = getelementptr inbounds i8, i8* %105, i64 2
  %107 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %108 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %107, i32 0, i32 1
  %109 = load i16, i16* %108, align 2
  %110 = zext i16 %109 to i32
  call void @png_save_uint_16(i8* noundef %106, i32 noundef %110)
  %111 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %112 = getelementptr inbounds i8, i8* %111, i64 4
  %113 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %114 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %113, i32 0, i32 2
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  call void @png_save_uint_16(i8* noundef %112, i32 noundef %116)
  %117 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %118 = getelementptr inbounds i8, i8* %117, i64 6
  %119 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %120 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %119, i32 0, i32 3
  %121 = load i16, i16* %120, align 2
  %122 = zext i16 %121 to i32
  call void @png_save_uint_16(i8* noundef %118, i32 noundef %122)
  %123 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %124 = getelementptr inbounds i8, i8* %123, i64 8
  %125 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %126 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %125, i32 0, i32 4
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  call void @png_save_uint_16(i8* noundef %124, i32 noundef %128)
  br label %129

129:                                              ; preds = %98, %71
  %130 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %131 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i64 0, i64 0
  %132 = load i64, i64* %8, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %130, i8* noundef %131, i64 noundef %132)
  br label %133

133:                                              ; preds = %129
  %134 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %10, align 8
  %135 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %134, i32 1
  store %struct.png_sPLT_entry_struct* %135, %struct.png_sPLT_entry_struct** %10, align 8
  br label %54, !llvm.loop !350

136:                                              ; preds = %54
  %137 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %137)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_sBIT(%struct.png_struct_def.62* noalias noundef %0, %struct.png_color_8_struct* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca %struct.png_color_8_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [4 x i8], align 1
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store %struct.png_color_8_struct* %1, %struct.png_color_8_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = and i32 %10, 2
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %81

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  br label %22

17:                                               ; preds = %13
  %18 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %19 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %18, i32 0, i32 63
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  br label %22

22:                                               ; preds = %17, %16
  %23 = phi i32 [ 8, %16 ], [ %21, %17 ]
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %9, align 1
  %25 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %26 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %25, i32 0, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %66, label %30

30:                                               ; preds = %22
  %31 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %32 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %31, i32 0, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = load i8, i8* %9, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp sgt i32 %34, %36
  br i1 %37, label %66, label %38

38:                                               ; preds = %30
  %39 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %40 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %39, i32 0, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %66, label %44

44:                                               ; preds = %38
  %45 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %46 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %45, i32 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = load i8, i8* %9, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp sgt i32 %48, %50
  br i1 %51, label %66, label %52

52:                                               ; preds = %44
  %53 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %54 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %53, i32 0, i32 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %52
  %59 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %60 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %59, i32 0, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = load i8, i8* %9, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp sgt i32 %62, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %58, %52, %44, %38, %30, %22
  %67 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %67, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.596, i64 0, i64 0))
  br label %137

68:                                               ; preds = %58
  %69 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %70 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %69, i32 0, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  store i8 %71, i8* %72, align 1
  %73 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %74 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %73, i32 0, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 1
  store i8 %75, i8* %76, align 1
  %77 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %78 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %77, i32 0, i32 2
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 2
  store i8 %79, i8* %80, align 1
  store i64 3, i64* %8, align 8
  br label %104

81:                                               ; preds = %3
  %82 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %83 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %82, i32 0, i32 3
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  %88 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %89 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %88, i32 0, i32 3
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %93 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %92, i32 0, i32 63
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp sgt i32 %91, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %87, %81
  %98 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %98, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.596, i64 0, i64 0))
  br label %137

99:                                               ; preds = %87
  %100 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %101 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %100, i32 0, i32 3
  %102 = load i8, i8* %101, align 1
  %103 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  store i8 %102, i8* %103, align 1
  store i64 1, i64* %8, align 8
  br label %104

104:                                              ; preds = %99, %68
  %105 = load i32, i32* %6, align 4
  %106 = and i32 %105, 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %133

108:                                              ; preds = %104
  %109 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %110 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %109, i32 0, i32 4
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %124, label %114

114:                                              ; preds = %108
  %115 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %116 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %115, i32 0, i32 4
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %120 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %119, i32 0, i32 63
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp sgt i32 %118, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %114, %108
  %125 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %125, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.596, i64 0, i64 0))
  br label %137

126:                                              ; preds = %114
  %127 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %5, align 8
  %128 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %127, i32 0, i32 4
  %129 = load i8, i8* %128, align 1
  %130 = load i64, i64* %8, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %8, align 8
  %132 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 %130
  store i8 %129, i8* %132, align 1
  br label %133

133:                                              ; preds = %126, %104
  %134 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %135 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %136 = load i64, i64* %8, align 8
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %134, i32 noundef 1933723988, i8* noundef %135, i64 noundef %136)
  br label %137

137:                                              ; preds = %133, %124, %97, %66
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_cHRM_fixed(%struct.png_struct_def.62* noalias noundef %0, %struct.png_xy* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca %struct.png_xy*, align 8
  %5 = alloca [32 x i8], align 16
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store %struct.png_xy* %1, %struct.png_xy** %4, align 8
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %7 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %8 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %7, i32 0, i32 6
  %9 = load i32, i32* %8, align 4
  call void @png_save_int_32(i8* noundef %6, i32 noundef %9)
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %11 = getelementptr inbounds i8, i8* %10, i64 4
  %12 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %13 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %12, i32 0, i32 7
  %14 = load i32, i32* %13, align 4
  call void @png_save_int_32(i8* noundef %11, i32 noundef %14)
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %18 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  call void @png_save_int_32(i8* noundef %16, i32 noundef %19)
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %21 = getelementptr inbounds i8, i8* %20, i64 12
  %22 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %23 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  call void @png_save_int_32(i8* noundef %21, i32 noundef %24)
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %28 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  call void @png_save_int_32(i8* noundef %26, i32 noundef %29)
  %30 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %31 = getelementptr inbounds i8, i8* %30, i64 20
  %32 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %33 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  call void @png_save_int_32(i8* noundef %31, i32 noundef %34)
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %36 = getelementptr inbounds i8, i8* %35, i64 24
  %37 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %38 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %37, i32 0, i32 4
  %39 = load i32, i32* %38, align 4
  call void @png_save_int_32(i8* noundef %36, i32 noundef %39)
  %40 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %41 = getelementptr inbounds i8, i8* %40, i64 28
  %42 = load %struct.png_xy*, %struct.png_xy** %4, align 8
  %43 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %42, i32 0, i32 5
  %44 = load i32, i32* %43, align 4
  call void @png_save_int_32(i8* noundef %41, i32 noundef %44)
  %45 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %46 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %45, i32 noundef 1665684045, i8* noundef %46, i64 noundef 32)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_tRNS(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, %struct.png_color_16_struct* noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.png_struct_def.62*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.png_color_16_struct*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [6 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %6, align 8
  store i8* %1, i8** %7, align 8
  store %struct.png_color_16_struct* %2, %struct.png_color_16_struct** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %31

14:                                               ; preds = %5
  %15 = load i32, i32* %9, align 4
  %16 = icmp sle i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = load i32, i32* %9, align 4
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 53
  %21 = load i16, i16* %20, align 8
  %22 = zext i16 %21 to i32
  %23 = icmp sgt i32 %18, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %17, %14
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %25, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20.601, i64 0, i64 0))
  br label %103

26:                                               ; preds = %17
  %27 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = load i32, i32* %9, align 4
  %30 = sext i32 %29 to i64
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %27, i32 noundef 1951551059, i8* noundef %28, i64 noundef %30)
  br label %103

31:                                               ; preds = %5
  %32 = load i32, i32* %10, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %31
  %35 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %8, align 8
  %36 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 4
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %40 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %39, i32 0, i32 62
  %41 = load i8, i8* %40, align 8
  %42 = zext i8 %41 to i32
  %43 = shl i32 1, %42
  %44 = icmp sge i32 %38, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %34
  %46 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %46, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21.602, i64 0, i64 0))
  br label %103

47:                                               ; preds = %34
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  %49 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %8, align 8
  %50 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %49, i32 0, i32 4
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  call void @png_save_uint_16(i8* noundef %48, i32 noundef %52)
  %53 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %54 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %53, i32 noundef 1951551059, i8* noundef %54, i64 noundef 2)
  br label %102

55:                                               ; preds = %31
  %56 = load i32, i32* %10, align 4
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %99

58:                                               ; preds = %55
  %59 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  %60 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %8, align 8
  %61 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %60, i32 0, i32 1
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  call void @png_save_uint_16(i8* noundef %59, i32 noundef %63)
  %64 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  %65 = getelementptr inbounds i8, i8* %64, i64 2
  %66 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %8, align 8
  %67 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %66, i32 0, i32 2
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  call void @png_save_uint_16(i8* noundef %65, i32 noundef %69)
  %70 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  %72 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %8, align 8
  %73 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %72, i32 0, i32 3
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  call void @png_save_uint_16(i8* noundef %71, i32 noundef %75)
  %76 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %77 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %76, i32 0, i32 62
  %78 = load i8, i8* %77, align 8
  %79 = zext i8 %78 to i32
  %80 = icmp eq i32 %79, 8
  br i1 %80, label %81, label %96

81:                                               ; preds = %58
  %82 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 2
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = or i32 %84, %87
  %89 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 4
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = or i32 %88, %91
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %81
  %95 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %95, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.22.603, i64 0, i64 0))
  br label %103

96:                                               ; preds = %81, %58
  %97 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  %98 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %97, i32 noundef 1951551059, i8* noundef %98, i64 noundef 6)
  br label %101

99:                                               ; preds = %55
  %100 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %6, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_app_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %100, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23.604, i64 0, i64 0))
  br label %101

101:                                              ; preds = %99, %96
  br label %102

102:                                              ; preds = %101, %47
  br label %103

103:                                              ; preds = %24, %45, %94, %102, %26
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_bKGD(%struct.png_struct_def.62* noalias noundef %0, %struct.png_color_16_struct* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca %struct.png_color_16_struct*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [6 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store %struct.png_color_16_struct* %1, %struct.png_color_16_struct** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load i32, i32* %6, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %41

10:                                               ; preds = %3
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %11, i32 0, i32 53
  %13 = load i16, i16* %12, align 8
  %14 = zext i16 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %10
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %17, i32 0, i32 123
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %16, %10
  %23 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %24 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %23, i32 0, i32 0
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  %27 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %28 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %27, i32 0, i32 53
  %29 = load i16, i16* %28, align 8
  %30 = zext i16 %29 to i32
  %31 = icmp sge i32 %26, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %33, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24.607, i64 0, i64 0))
  br label %108

34:                                               ; preds = %22, %16
  %35 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %36 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %35, i32 0, i32 0
  %37 = load i8, i8* %36, align 2
  %38 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  store i8 %37, i8* %38, align 1
  %39 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %40 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %39, i32 noundef 1649100612, i8* noundef %40, i64 noundef 1)
  br label %108

41:                                               ; preds = %3
  %42 = load i32, i32* %6, align 4
  %43 = and i32 %42, 2
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %86

45:                                               ; preds = %41
  %46 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  %47 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %48 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %47, i32 0, i32 1
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  call void @png_save_uint_16(i8* noundef %46, i32 noundef %50)
  %51 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  %52 = getelementptr inbounds i8, i8* %51, i64 2
  %53 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %54 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %53, i32 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  call void @png_save_uint_16(i8* noundef %52, i32 noundef %56)
  %57 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  %58 = getelementptr inbounds i8, i8* %57, i64 4
  %59 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %60 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %59, i32 0, i32 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  call void @png_save_uint_16(i8* noundef %58, i32 noundef %62)
  %63 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %64 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %63, i32 0, i32 62
  %65 = load i8, i8* %64, align 8
  %66 = zext i8 %65 to i32
  %67 = icmp eq i32 %66, 8
  br i1 %67, label %68, label %83

68:                                               ; preds = %45
  %69 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = or i32 %71, %74
  %76 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 4
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %68
  %82 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %82, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.25.608, i64 0, i64 0))
  br label %108

83:                                               ; preds = %68, %45
  %84 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %85 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %84, i32 noundef 1649100612, i8* noundef %85, i64 noundef 6)
  br label %107

86:                                               ; preds = %41
  %87 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %88 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %87, i32 0, i32 4
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %92 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %91, i32 0, i32 62
  %93 = load i8, i8* %92, align 8
  %94 = zext i8 %93 to i32
  %95 = shl i32 1, %94
  %96 = icmp sge i32 %90, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %86
  %98 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %98, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.26.609, i64 0, i64 0))
  br label %108

99:                                               ; preds = %86
  %100 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  %101 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %5, align 8
  %102 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %101, i32 0, i32 4
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  call void @png_save_uint_16(i8* noundef %100, i32 noundef %104)
  %105 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %106 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %105, i32 noundef 1649100612, i8* noundef %106, i64 noundef 2)
  br label %107

107:                                              ; preds = %99, %83
  br label %108

108:                                              ; preds = %32, %81, %97, %107, %34
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_eXIf(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %10 = load i32, i32* %6, align 4
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %9, i32 noundef 1700284774, i32 noundef %10)
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %24, %3
  %12 = load i32, i32* %7, align 4
  %13 = load i32, i32* %6, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = load i8*, i8** %5, align 8
  %17 = load i32, i32* %7, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  store i8 %20, i8* %21, align 1
  %22 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %22, i8* noundef %23, i64 noundef 1)
  br label %24

24:                                               ; preds = %15
  %25 = load i32, i32* %7, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 4
  br label %11, !llvm.loop !351

27:                                               ; preds = %11
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %28)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_hIST(%struct.png_struct_def.62* noalias noundef %0, i16* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [3 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i16* %1, i16** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = load i32, i32* %6, align 4
  %10 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %11 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %10, i32 0, i32 53
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  %14 = icmp sgt i32 %9, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %16, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.27.614, i64 0, i64 0))
  br label %40

17:                                               ; preds = %3
  %18 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = mul nsw i32 %19, 2
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %18, i32 noundef 1749635924, i32 noundef %20)
  store i32 0, i32* %7, align 4
  br label %21

21:                                               ; preds = %35, %17
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %6, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %21
  %26 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 0
  %27 = load i16*, i16** %5, align 8
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i16, i16* %27, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  call void @png_save_uint_16(i8* noundef %26, i32 noundef %32)
  %33 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %34 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 0
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %33, i8* noundef %34, i64 noundef 2)
  br label %35

35:                                               ; preds = %25
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %21, !llvm.loop !352

38:                                               ; preds = %21
  %39 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %39)
  br label %40

40:                                               ; preds = %38, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_tEXt(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca [80 x i8], align 16
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = getelementptr inbounds [80 x i8], [80 x i8]* %10, i64 0, i64 0
  %14 = call i32 bitcast (i32 (%struct.png_struct_def*, i8*, i8*)* @png_check_keyword to i32 (%struct.png_struct_def.62*, i8*, i8*)*)(%struct.png_struct_def.62* noundef %11, i8* noundef %12, i8* noundef %13)
  store i32 %14, i32* %9, align 4
  %15 = load i32, i32* %9, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %18, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28.617, i64 0, i64 0)) #13
  unreachable

19:                                               ; preds = %4
  %20 = load i8*, i8** %7, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = load i8*, i8** %7, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %22, %19
  store i64 0, i64* %8, align 8
  br label %31

28:                                               ; preds = %22
  %29 = load i8*, i8** %7, align 8
  %30 = call i64 @strlen(i8* noundef %29) #14
  store i64 %30, i64* %8, align 8
  br label %31

31:                                               ; preds = %28, %27
  %32 = load i64, i64* %8, align 8
  %33 = load i32, i32* %9, align 4
  %34 = add i32 %33, 1
  %35 = sub i32 2147483647, %34
  %36 = zext i32 %35 to i64
  %37 = icmp ugt i64 %32, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %39, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29.618, i64 0, i64 0)) #13
  unreachable

40:                                               ; preds = %31
  %41 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %42 = load i32, i32* %9, align 4
  %43 = zext i32 %42 to i64
  %44 = load i64, i64* %8, align 8
  %45 = add i64 %43, %44
  %46 = add i64 %45, 1
  %47 = trunc i64 %46 to i32
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %41, i32 noundef 1950701684, i32 noundef %47)
  %48 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %49 = getelementptr inbounds [80 x i8], [80 x i8]* %10, i64 0, i64 0
  %50 = load i32, i32* %9, align 4
  %51 = add i32 %50, 1
  %52 = zext i32 %51 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %48, i8* noundef %49, i64 noundef %52)
  %53 = load i64, i64* %8, align 8
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %40
  %56 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %57 = load i8*, i8** %7, align 8
  %58 = load i64, i64* %8, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %56, i8* noundef %57, i64 noundef %58)
  br label %59

59:                                               ; preds = %55, %40
  %60 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %60)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_zTXt(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [81 x i8], align 16
  %11 = alloca %struct.compression_state, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = load i32, i32* %8, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = load i8*, i8** %7, align 8
  call void @png_write_tEXt(%struct.png_struct_def.62* noundef %15, i8* noundef %16, i8* noundef %17, i64 noundef 0)
  br label %70

18:                                               ; preds = %4
  %19 = load i32, i32* %8, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %22, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30.621, i64 0, i64 0)) #13
  unreachable

23:                                               ; preds = %18
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds [81 x i8], [81 x i8]* %10, i64 0, i64 0
  %27 = call i32 bitcast (i32 (%struct.png_struct_def*, i8*, i8*)* @png_check_keyword to i32 (%struct.png_struct_def.62*, i8*, i8*)*)(%struct.png_struct_def.62* noundef %24, i8* noundef %25, i8* noundef %26)
  store i32 %27, i32* %9, align 4
  %28 = load i32, i32* %9, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %31, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.622, i64 0, i64 0)) #13
  unreachable

32:                                               ; preds = %23
  %33 = load i32, i32* %9, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %9, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [81 x i8], [81 x i8]* %10, i64 0, i64 %35
  store i8 0, i8* %36, align 1
  %37 = load i32, i32* %9, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %9, align 4
  %39 = load i8*, i8** %7, align 8
  %40 = load i8*, i8** %7, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %32
  br label %46

43:                                               ; preds = %32
  %44 = load i8*, i8** %7, align 8
  %45 = call i64 @strlen(i8* noundef %44) #14
  br label %46

46:                                               ; preds = %43, %42
  %47 = phi i64 [ 0, %42 ], [ %45, %43 ]
  call void @png_text_compress_init(%struct.compression_state* noundef %11, i8* noundef %39, i64 noundef %47)
  %48 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %49 = load i32, i32* %9, align 4
  %50 = call i32 @png_text_compress(%struct.png_struct_def.62* noundef %48, i32 noundef 2052348020, %struct.compression_state* noundef %11, i32 noundef %49)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %54 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %55 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %54, i32 0, i32 19
  %56 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %55, i32 0, i32 6
  %57 = load i8*, i8** %56, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %53, i8* noundef %57) #13
  unreachable

58:                                               ; preds = %46
  %59 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %60 = load i32, i32* %9, align 4
  %61 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %11, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %60, %62
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %59, i32 noundef 2052348020, i32 noundef %63)
  %64 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %65 = getelementptr inbounds [81 x i8], [81 x i8]* %10, i64 0, i64 0
  %66 = load i32, i32* %9, align 4
  %67 = zext i32 %66 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %64, i8* noundef %65, i64 noundef %67)
  %68 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void @png_write_compressed_data_out(%struct.png_struct_def.62* noundef %68, %struct.compression_state* noundef %11)
  %69 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %69)
  br label %70

70:                                               ; preds = %58, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_iTXt(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i8* noundef %4, i8* noundef %5) #0 {
  %7 = alloca %struct.png_struct_def.62*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca [82 x i8], align 16
  %18 = alloca %struct.compression_state, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  store i8* %5, i8** %12, align 8
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %20 = load i8*, i8** %9, align 8
  %21 = getelementptr inbounds [82 x i8], [82 x i8]* %17, i64 0, i64 0
  %22 = call i32 bitcast (i32 (%struct.png_struct_def*, i8*, i8*)* @png_check_keyword to i32 (%struct.png_struct_def.62*, i8*, i8*)*)(%struct.png_struct_def.62* noundef %19, i8* noundef %20, i8* noundef %21)
  store i32 %22, i32* %13, align 4
  %23 = load i32, i32* %13, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %6
  %26 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %26, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32.625, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %6
  %28 = load i32, i32* %8, align 4
  switch i32 %28, label %39 [
    i32 1, label %29
    i32 -1, label %29
    i32 0, label %34
    i32 2, label %34
  ]

29:                                               ; preds = %27, %27
  %30 = load i32, i32* %13, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %13, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [82 x i8], [82 x i8]* %17, i64 0, i64 %32
  store i8 0, i8* %33, align 1
  store i32 0, i32* %8, align 4
  br label %41

34:                                               ; preds = %27, %27
  %35 = load i32, i32* %13, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %13, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [82 x i8], [82 x i8]* %17, i64 0, i64 %37
  store i8 1, i8* %38, align 1
  store i32 1, i32* %8, align 4
  br label %41

39:                                               ; preds = %27
  %40 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %40, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33.626, i64 0, i64 0)) #13
  unreachable

41:                                               ; preds = %34, %29
  %42 = load i32, i32* %13, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %13, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [82 x i8], [82 x i8]* %17, i64 0, i64 %44
  store i8 0, i8* %45, align 1
  %46 = load i32, i32* %13, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %13, align 4
  %48 = load i8*, i8** %10, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %41
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34.627, i64 0, i64 0), i8** %10, align 8
  br label %51

51:                                               ; preds = %50, %41
  %52 = load i8*, i8** %10, align 8
  %53 = call i64 @strlen(i8* noundef %52) #14
  %54 = add i64 %53, 1
  store i64 %54, i64* %15, align 8
  %55 = load i8*, i8** %11, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34.627, i64 0, i64 0), i8** %11, align 8
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i8*, i8** %11, align 8
  %60 = call i64 @strlen(i8* noundef %59) #14
  %61 = add i64 %60, 1
  store i64 %61, i64* %16, align 8
  %62 = load i8*, i8** %12, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34.627, i64 0, i64 0), i8** %12, align 8
  br label %65

65:                                               ; preds = %64, %58
  %66 = load i32, i32* %13, align 4
  store i32 %66, i32* %14, align 4
  %67 = load i64, i64* %15, align 8
  %68 = load i32, i32* %14, align 4
  %69 = sub i32 2147483647, %68
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %67, %70
  br i1 %71, label %72, label %73

72:                                               ; preds = %65
  store i32 2147483647, i32* %14, align 4
  br label %79

73:                                               ; preds = %65
  %74 = load i32, i32* %14, align 4
  %75 = zext i32 %74 to i64
  %76 = load i64, i64* %15, align 8
  %77 = add i64 %75, %76
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %14, align 4
  br label %79

79:                                               ; preds = %73, %72
  %80 = load i64, i64* %16, align 8
  %81 = load i32, i32* %14, align 4
  %82 = sub i32 2147483647, %81
  %83 = zext i32 %82 to i64
  %84 = icmp ugt i64 %80, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %79
  store i32 2147483647, i32* %14, align 4
  br label %92

86:                                               ; preds = %79
  %87 = load i32, i32* %14, align 4
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* %16, align 8
  %90 = add i64 %88, %89
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %14, align 4
  br label %92

92:                                               ; preds = %86, %85
  %93 = load i8*, i8** %12, align 8
  %94 = load i8*, i8** %12, align 8
  %95 = call i64 @strlen(i8* noundef %94) #14
  call void @png_text_compress_init(%struct.compression_state* noundef %18, i8* noundef %93, i64 noundef %95)
  %96 = load i32, i32* %8, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %92
  %99 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %100 = load i32, i32* %14, align 4
  %101 = call i32 @png_text_compress(%struct.png_struct_def.62* noundef %99, i32 noundef 1767135348, %struct.compression_state* noundef %18, i32 noundef %100)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %98
  %104 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %105 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %106 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %105, i32 0, i32 19
  %107 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %106, i32 0, i32 6
  %108 = load i8*, i8** %107, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %104, i8* noundef %108) #13
  unreachable

109:                                              ; preds = %98
  br label %124

110:                                              ; preds = %92
  %111 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %18, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = load i32, i32* %14, align 4
  %114 = sub i32 2147483647, %113
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %112, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %110
  %118 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %118, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35.628, i64 0, i64 0)) #13
  unreachable

119:                                              ; preds = %110
  %120 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %18, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %18, i32 0, i32 2
  store i32 %122, i32* %123, align 8
  br label %124

124:                                              ; preds = %119, %109
  %125 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %126 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %18, i32 0, i32 2
  %127 = load i32, i32* %126, align 8
  %128 = load i32, i32* %14, align 4
  %129 = add i32 %127, %128
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %125, i32 noundef 1767135348, i32 noundef %129)
  %130 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %131 = getelementptr inbounds [82 x i8], [82 x i8]* %17, i64 0, i64 0
  %132 = load i32, i32* %13, align 4
  %133 = zext i32 %132 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %130, i8* noundef %131, i64 noundef %133)
  %134 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %135 = load i8*, i8** %10, align 8
  %136 = load i64, i64* %15, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %134, i8* noundef %135, i64 noundef %136)
  %137 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %138 = load i8*, i8** %11, align 8
  %139 = load i64, i64* %16, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %137, i8* noundef %138, i64 noundef %139)
  %140 = load i32, i32* %8, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %124
  %143 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  call void @png_write_compressed_data_out(%struct.png_struct_def.62* noundef %143, %struct.compression_state* noundef %18)
  br label %150

144:                                              ; preds = %124
  %145 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  %146 = load i8*, i8** %12, align 8
  %147 = getelementptr inbounds %struct.compression_state, %struct.compression_state* %18, i32 0, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = zext i32 %148 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %145, i8* noundef %146, i64 noundef %149)
  br label %150

150:                                              ; preds = %144, %142
  %151 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %7, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %151)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_oFFs(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [9 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load i32, i32* %8, align 4
  %11 = icmp sge i32 %10, 2
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %13, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.36.631, i64 0, i64 0))
  br label %14

14:                                               ; preds = %12, %4
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 0
  %16 = load i32, i32* %6, align 4
  call void @png_save_int_32(i8* noundef %15, i32 noundef %16)
  %17 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 0
  %18 = getelementptr inbounds i8, i8* %17, i64 4
  %19 = load i32, i32* %7, align 4
  call void @png_save_int_32(i8* noundef %18, i32 noundef %19)
  %20 = load i32, i32* %8, align 4
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 8
  store i8 %21, i8* %22, align 1
  %23 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %24 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %23, i32 noundef 1866876531, i8* noundef %24, i64 noundef 9)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_pCAL(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i8* noundef %6, i8** noundef %7) #0 {
  %9 = alloca %struct.png_struct_def.62*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64*, align 8
  %21 = alloca [10 x i8], align 1
  %22 = alloca [80 x i8], align 16
  %23 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %9, align 8
  store i8* %1, i8** %10, align 8
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i8* %6, i8** %15, align 8
  store i8** %7, i8*** %16, align 8
  %24 = load i32, i32* %13, align 4
  %25 = icmp sge i32 %24, 4
  br i1 %25, label %26, label %28

26:                                               ; preds = %8
  %27 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %27, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37.634, i64 0, i64 0)) #13
  unreachable

28:                                               ; preds = %8
  %29 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %30 = load i8*, i8** %10, align 8
  %31 = getelementptr inbounds [80 x i8], [80 x i8]* %22, i64 0, i64 0
  %32 = call i32 bitcast (i32 (%struct.png_struct_def*, i8*, i8*)* @png_check_keyword to i32 (%struct.png_struct_def.62*, i8*, i8*)*)(%struct.png_struct_def.62* noundef %29, i8* noundef %30, i8* noundef %31)
  store i32 %32, i32* %17, align 4
  %33 = load i32, i32* %17, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_error to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %36, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.635, i64 0, i64 0)) #13
  unreachable

37:                                               ; preds = %28
  %38 = load i32, i32* %17, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %17, align 4
  %40 = load i8*, i8** %15, align 8
  %41 = call i64 @strlen(i8* noundef %40) #14
  %42 = load i32, i32* %14, align 4
  %43 = icmp eq i32 %42, 0
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i32 0, i32 1
  %46 = sext i32 %45 to i64
  %47 = add i64 %41, %46
  store i64 %47, i64* %18, align 8
  %48 = load i32, i32* %17, align 4
  %49 = zext i32 %48 to i64
  %50 = load i64, i64* %18, align 8
  %51 = add i64 %49, %50
  %52 = add i64 %51, 10
  store i64 %52, i64* %19, align 8
  %53 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %54 = load i32, i32* %14, align 4
  %55 = sext i32 %54 to i64
  %56 = mul i64 %55, 8
  %57 = call noalias i8* @png_malloc(%struct.png_struct_def.62* noundef %53, i64 noundef %56)
  %58 = bitcast i8* %57 to i64*
  store i64* %58, i64** %20, align 8
  store i32 0, i32* %23, align 4
  br label %59

59:                                               ; preds = %89, %37
  %60 = load i32, i32* %23, align 4
  %61 = load i32, i32* %14, align 4
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %92

63:                                               ; preds = %59
  %64 = load i8**, i8*** %16, align 8
  %65 = load i32, i32* %23, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = call i64 @strlen(i8* noundef %68) #14
  %70 = load i32, i32* %23, align 4
  %71 = load i32, i32* %14, align 4
  %72 = sub nsw i32 %71, 1
  %73 = icmp eq i32 %70, %72
  %74 = zext i1 %73 to i64
  %75 = select i1 %73, i32 0, i32 1
  %76 = sext i32 %75 to i64
  %77 = add i64 %69, %76
  %78 = load i64*, i64** %20, align 8
  %79 = load i32, i32* %23, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i64, i64* %78, i64 %80
  store i64 %77, i64* %81, align 8
  %82 = load i64*, i64** %20, align 8
  %83 = load i32, i32* %23, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i64, i64* %82, i64 %84
  %86 = load i64, i64* %85, align 8
  %87 = load i64, i64* %19, align 8
  %88 = add i64 %87, %86
  store i64 %88, i64* %19, align 8
  br label %89

89:                                               ; preds = %63
  %90 = load i32, i32* %23, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %23, align 4
  br label %59, !llvm.loop !353

92:                                               ; preds = %59
  %93 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %94 = load i64, i64* %19, align 8
  %95 = trunc i64 %94 to i32
  call void @png_write_chunk_header(%struct.png_struct_def.62* noundef %93, i32 noundef 1883455820, i32 noundef %95)
  %96 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %97 = getelementptr inbounds [80 x i8], [80 x i8]* %22, i64 0, i64 0
  %98 = load i32, i32* %17, align 4
  %99 = zext i32 %98 to i64
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %96, i8* noundef %97, i64 noundef %99)
  %100 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 0
  %101 = load i32, i32* %11, align 4
  call void @png_save_int_32(i8* noundef %100, i32 noundef %101)
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 0
  %103 = getelementptr inbounds i8, i8* %102, i64 4
  %104 = load i32, i32* %12, align 4
  call void @png_save_int_32(i8* noundef %103, i32 noundef %104)
  %105 = load i32, i32* %13, align 4
  %106 = trunc i32 %105 to i8
  %107 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 8
  store i8 %106, i8* %107, align 1
  %108 = load i32, i32* %14, align 4
  %109 = trunc i32 %108 to i8
  %110 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 9
  store i8 %109, i8* %110, align 1
  %111 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %112 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 0
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %111, i8* noundef %112, i64 noundef 10)
  %113 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %114 = load i8*, i8** %15, align 8
  %115 = load i64, i64* %18, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %113, i8* noundef %114, i64 noundef %115)
  store i32 0, i32* %23, align 4
  br label %116

116:                                              ; preds = %132, %92
  %117 = load i32, i32* %23, align 4
  %118 = load i32, i32* %14, align 4
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %120, label %135

120:                                              ; preds = %116
  %121 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %122 = load i8**, i8*** %16, align 8
  %123 = load i32, i32* %23, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8*, i8** %122, i64 %124
  %126 = load i8*, i8** %125, align 8
  %127 = load i64*, i64** %20, align 8
  %128 = load i32, i32* %23, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i64, i64* %127, i64 %129
  %131 = load i64, i64* %130, align 8
  call void @png_write_chunk_data(%struct.png_struct_def.62* noundef %121, i8* noundef %126, i64 noundef %131)
  br label %132

132:                                              ; preds = %120
  %133 = load i32, i32* %23, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %23, align 4
  br label %116, !llvm.loop !354

135:                                              ; preds = %116
  %136 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  %137 = load i64*, i64** %20, align 8
  %138 = bitcast i64* %137 to i8*
  call void @png_free(%struct.png_struct_def.62* noundef %136, i8* noundef %138)
  %139 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %9, align 8
  call void @png_write_chunk_end(%struct.png_struct_def.62* noundef %139)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_sCAL_s(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [64 x i8], align 16
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = call i64 @strlen(i8* noundef %13) #14
  store i64 %14, i64* %10, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = call i64 @strlen(i8* noundef %15) #14
  store i64 %16, i64* %11, align 8
  %17 = load i64, i64* %10, align 8
  %18 = load i64, i64* %11, align 8
  %19 = add i64 %17, %18
  %20 = add i64 %19, 2
  store i64 %20, i64* %12, align 8
  %21 = load i64, i64* %12, align 8
  %22 = icmp ugt i64 %21, 64
  br i1 %22, label %23, label %25

23:                                               ; preds = %4
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %24, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.39.638, i64 0, i64 0))
  br label %43

25:                                               ; preds = %4
  %26 = load i32, i32* %6, align 4
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  store i8 %27, i8* %28, align 16
  %29 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  %31 = load i8*, i8** %7, align 8
  %32 = load i64, i64* %10, align 8
  %33 = add i64 %32, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %33, i1 false)
  %34 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  %35 = load i64, i64* %10, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = getelementptr inbounds i8, i8* %36, i64 2
  %38 = load i8*, i8** %8, align 8
  %39 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 %39, i1 false)
  %40 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %41 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  %42 = load i64, i64* %12, align 8
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %40, i32 noundef 1933787468, i8* noundef %41, i64 noundef %42)
  br label %43

43:                                               ; preds = %25, %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_pHYs(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [9 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load i32, i32* %8, align 4
  %11 = icmp sge i32 %10, 2
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %13, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40.641, i64 0, i64 0))
  br label %14

14:                                               ; preds = %12, %4
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 0
  %16 = load i32, i32* %6, align 4
  call void @png_save_uint_32(i8* noundef %15, i32 noundef %16)
  %17 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 0
  %18 = getelementptr inbounds i8, i8* %17, i64 4
  %19 = load i32, i32* %7, align 4
  call void @png_save_uint_32(i8* noundef %18, i32 noundef %19)
  %20 = load i32, i32* %8, align 4
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 8
  store i8 %21, i8* %22, align 1
  %23 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %24 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %23, i32 noundef 1883789683, i8* noundef %24, i64 noundef 9)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_tIME(%struct.png_struct_def.62* noalias noundef %0, %struct.png_time_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca %struct.png_time_struct*, align 8
  %5 = alloca [7 x i8], align 1
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store %struct.png_time_struct* %1, %struct.png_time_struct** %4, align 8
  %6 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %7 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 2
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i32 %9, 12
  br i1 %10, label %41, label %11

11:                                               ; preds = %2
  %12 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %13 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %41, label %17

17:                                               ; preds = %11
  %18 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %19 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %18, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp sgt i32 %21, 31
  br i1 %22, label %41, label %23

23:                                               ; preds = %17
  %24 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %25 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %24, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %31 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %30, i32 0, i32 3
  %32 = load i8, i8* %31, align 2
  %33 = zext i8 %32 to i32
  %34 = icmp sgt i32 %33, 23
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %37 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %36, i32 0, i32 5
  %38 = load i8, i8* %37, align 2
  %39 = zext i8 %38 to i32
  %40 = icmp sgt i32 %39, 60
  br i1 %40, label %41, label %43

41:                                               ; preds = %35, %29, %23, %17, %11, %2
  %42 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  call void bitcast (void (%struct.png_struct_def*, i8*)* @png_warning to void (%struct.png_struct_def.62*, i8*)*)(%struct.png_struct_def.62* noundef %42, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41.644, i64 0, i64 0))
  br label %71

43:                                               ; preds = %35
  %44 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  %45 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %46 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %45, i32 0, i32 0
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  call void @png_save_uint_16(i8* noundef %44, i32 noundef %48)
  %49 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %50 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %49, i32 0, i32 1
  %51 = load i8, i8* %50, align 2
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 2
  store i8 %51, i8* %52, align 1
  %53 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %54 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %53, i32 0, i32 2
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 3
  store i8 %55, i8* %56, align 1
  %57 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %58 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %57, i32 0, i32 3
  %59 = load i8, i8* %58, align 2
  %60 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 4
  store i8 %59, i8* %60, align 1
  %61 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %62 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %61, i32 0, i32 4
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 5
  store i8 %63, i8* %64, align 1
  %65 = load %struct.png_time_struct*, %struct.png_time_struct** %4, align 8
  %66 = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %65, i32 0, i32 5
  %67 = load i8, i8* %66, align 2
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 6
  store i8 %67, i8* %68, align 1
  %69 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %70 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  call void @png_write_complete_chunk(%struct.png_struct_def.62* noundef %69, i32 noundef 1950960965, i8* noundef %70, i64 noundef 7)
  br label %71

71:                                               ; preds = %43, %41
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_start_row(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.62*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %2, align 8
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %7, i32 0, i32 66
  %9 = load i8, i8* %8, align 4
  %10 = zext i8 %9 to i32
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %11, i32 0, i32 63
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = mul nsw i32 %10, %14
  store i32 %15, i32* %4, align 4
  %16 = load i32, i32* %4, align 4
  %17 = icmp sge i32 %16, 8
  br i1 %17, label %18, label %27

18:                                               ; preds = %1
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 37
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = load i32, i32* %4, align 4
  %24 = sext i32 %23 to i64
  %25 = lshr i64 %24, 3
  %26 = mul i64 %22, %25
  br label %37

27:                                               ; preds = %1
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %29 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %28, i32 0, i32 37
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = load i32, i32* %4, align 4
  %33 = sext i32 %32 to i64
  %34 = mul i64 %31, %33
  %35 = add i64 %34, 7
  %36 = lshr i64 %35, 3
  br label %37

37:                                               ; preds = %27, %18
  %38 = phi i64 [ %26, %18 ], [ %36, %27 ]
  %39 = add i64 %38, 1
  store i64 %39, i64* %3, align 8
  %40 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %41 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %40, i32 0, i32 64
  %42 = load i8, i8* %41, align 2
  %43 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %44 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %43, i32 0, i32 69
  store i8 %42, i8* %44, align 1
  %45 = load i32, i32* %4, align 4
  %46 = trunc i32 %45 to i8
  %47 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %48 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %47, i32 0, i32 68
  store i8 %46, i8* %48, align 2
  %49 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %50 = load i64, i64* %3, align 8
  %51 = call noalias i8* @png_malloc(%struct.png_struct_def.62* noundef %49, i64 noundef %50)
  %52 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %53 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %52, i32 0, i32 46
  store i8* %51, i8** %53, align 8
  %54 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %55 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %54, i32 0, i32 46
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  store i8 0, i8* %57, align 1
  %58 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %59 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %58, i32 0, i32 60
  %60 = load i8, i8* %59, align 2
  store i8 %60, i8* %5, align 1
  %61 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %62 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %61, i32 0, i32 38
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %70

65:                                               ; preds = %37
  %66 = load i8, i8* %5, align 1
  %67 = zext i8 %66 to i32
  %68 = and i32 %67, 31
  %69 = trunc i32 %68 to i8
  store i8 %69, i8* %5, align 1
  br label %70

70:                                               ; preds = %65, %37
  %71 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %72 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %71, i32 0, i32 37
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = load i8, i8* %5, align 1
  %77 = zext i8 %76 to i32
  %78 = and i32 %77, 47
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %5, align 1
  br label %80

80:                                               ; preds = %75, %70
  %81 = load i8, i8* %5, align 1
  %82 = zext i8 %81 to i32
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  store i8 8, i8* %5, align 1
  br label %85

85:                                               ; preds = %84, %80
  %86 = load i8, i8* %5, align 1
  %87 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %88 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %87, i32 0, i32 60
  store i8 %86, i8* %88, align 2
  %89 = load i8, i8* %5, align 1
  %90 = zext i8 %89 to i32
  %91 = and i32 %90, 240
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %145

93:                                               ; preds = %85
  %94 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %95 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %94, i32 0, i32 47
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %98, label %145

98:                                               ; preds = %93
  store i32 0, i32* %6, align 4
  %99 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %100 = load i64, i64* %3, align 8
  %101 = call noalias i8* @png_malloc(%struct.png_struct_def.62* noundef %99, i64 noundef %100)
  %102 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %103 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %102, i32 0, i32 47
  store i8* %101, i8** %103, align 8
  %104 = load i8, i8* %5, align 1
  %105 = zext i8 %104 to i32
  %106 = and i32 %105, 16
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %98
  %109 = load i32, i32* %6, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %6, align 4
  br label %111

111:                                              ; preds = %108, %98
  %112 = load i8, i8* %5, align 1
  %113 = zext i8 %112 to i32
  %114 = and i32 %113, 32
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = load i32, i32* %6, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %6, align 4
  br label %119

119:                                              ; preds = %116, %111
  %120 = load i8, i8* %5, align 1
  %121 = zext i8 %120 to i32
  %122 = and i32 %121, 64
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = load i32, i32* %6, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %6, align 4
  br label %127

127:                                              ; preds = %124, %119
  %128 = load i8, i8* %5, align 1
  %129 = zext i8 %128 to i32
  %130 = and i32 %129, 128
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = load i32, i32* %6, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %6, align 4
  br label %135

135:                                              ; preds = %132, %127
  %136 = load i32, i32* %6, align 4
  %137 = icmp sgt i32 %136, 1
  br i1 %137, label %138, label %144

138:                                              ; preds = %135
  %139 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %140 = load i64, i64* %3, align 8
  %141 = call noalias i8* @png_malloc(%struct.png_struct_def.62* noundef %139, i64 noundef %140)
  %142 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %143 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %142, i32 0, i32 48
  store i8* %141, i8** %143, align 8
  br label %144

144:                                              ; preds = %138, %135
  br label %145

145:                                              ; preds = %144, %93, %85
  %146 = load i8, i8* %5, align 1
  %147 = zext i8 %146 to i32
  %148 = and i32 %147, 224
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %156

150:                                              ; preds = %145
  %151 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %152 = load i64, i64* %3, align 8
  %153 = call noalias i8* @png_calloc(%struct.png_struct_def.62* noundef %151, i64 noundef %152)
  %154 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %155 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %154, i32 0, i32 45
  store i8* %153, i8** %155, align 8
  br label %156

156:                                              ; preds = %150, %145
  %157 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %158 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %157, i32 0, i32 58
  %159 = load i8, i8* %158, align 4
  %160 = zext i8 %159 to i32
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %211

162:                                              ; preds = %156
  %163 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %164 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %163, i32 0, i32 17
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %199

168:                                              ; preds = %162
  %169 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %170 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %169, i32 0, i32 38
  %171 = load i32, i32* %170, align 4
  %172 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_write_start_row.png_pass_yinc, i64 0, i64 0), align 1
  %173 = zext i8 %172 to i32
  %174 = add i32 %171, %173
  %175 = sub i32 %174, 1
  %176 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_write_start_row.png_pass_ystart, i64 0, i64 0), align 1
  %177 = zext i8 %176 to i32
  %178 = sub i32 %175, %177
  %179 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_write_start_row.png_pass_yinc, i64 0, i64 0), align 1
  %180 = zext i8 %179 to i32
  %181 = udiv i32 %178, %180
  %182 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %183 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %182, i32 0, i32 39
  store i32 %181, i32* %183, align 8
  %184 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %185 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %184, i32 0, i32 37
  %186 = load i32, i32* %185, align 8
  %187 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_write_start_row.png_pass_inc, i64 0, i64 0), align 1
  %188 = zext i8 %187 to i32
  %189 = add i32 %186, %188
  %190 = sub i32 %189, 1
  %191 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_write_start_row.png_pass_start, i64 0, i64 0), align 1
  %192 = zext i8 %191 to i32
  %193 = sub i32 %190, %192
  %194 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_write_start_row.png_pass_inc, i64 0, i64 0), align 1
  %195 = zext i8 %194 to i32
  %196 = udiv i32 %193, %195
  %197 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %198 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %197, i32 0, i32 40
  store i32 %196, i32* %198, align 4
  br label %210

199:                                              ; preds = %162
  %200 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %201 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %200, i32 0, i32 38
  %202 = load i32, i32* %201, align 4
  %203 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %204 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %203, i32 0, i32 39
  store i32 %202, i32* %204, align 8
  %205 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %206 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %205, i32 0, i32 37
  %207 = load i32, i32* %206, align 8
  %208 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %209 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %208, i32 0, i32 40
  store i32 %207, i32* %209, align 4
  br label %210

210:                                              ; preds = %199, %168
  br label %222

211:                                              ; preds = %156
  %212 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %213 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %212, i32 0, i32 38
  %214 = load i32, i32* %213, align 4
  %215 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %216 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %215, i32 0, i32 39
  store i32 %214, i32* %216, align 8
  %217 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %218 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %217, i32 0, i32 37
  %219 = load i32, i32* %218, align 8
  %220 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %221 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %220, i32 0, i32 40
  store i32 %219, i32* %221, align 4
  br label %222

222:                                              ; preds = %211, %210
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_finish_row(%struct.png_struct_def.62* noalias noundef %0) #0 {
  %2 = alloca %struct.png_struct_def.62*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %2, align 8
  %3 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %4 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %3, i32 0, i32 43
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %8 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %7, i32 0, i32 43
  %9 = load i32, i32* %8, align 4
  %10 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %11 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %10, i32 0, i32 39
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  br label %194

15:                                               ; preds = %1
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %17 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %16, i32 0, i32 58
  %18 = load i8, i8* %17, align 4
  %19 = zext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %192

21:                                               ; preds = %15
  %22 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %23 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %22, i32 0, i32 43
  store i32 0, i32* %23, align 4
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %25 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %24, i32 0, i32 17
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 2
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %21
  %30 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %31 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %30, i32 0, i32 59
  %32 = load i8, i8* %31, align 1
  %33 = add i8 %32, 1
  store i8 %33, i8* %31, align 1
  br label %127

34:                                               ; preds = %21
  br label %35

35:                                               ; preds = %124, %34
  %36 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %37 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %36, i32 0, i32 59
  %38 = load i8, i8* %37, align 1
  %39 = add i8 %38, 1
  store i8 %39, i8* %37, align 1
  %40 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %41 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %40, i32 0, i32 59
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = icmp sge i32 %43, 7
  br i1 %44, label %45, label %46

45:                                               ; preds = %35
  br label %126

46:                                               ; preds = %35
  %47 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %48 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %47, i32 0, i32 37
  %49 = load i32, i32* %48, align 8
  %50 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %51 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %50, i32 0, i32 59
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [7 x i8], [7 x i8]* @png_write_finish_row.png_pass_inc, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = add i32 %49, %56
  %58 = sub i32 %57, 1
  %59 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %60 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %59, i32 0, i32 59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds [7 x i8], [7 x i8]* @png_write_finish_row.png_pass_start, i64 0, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = sub i32 %58, %65
  %67 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %68 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %67, i32 0, i32 59
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [7 x i8], [7 x i8]* @png_write_finish_row.png_pass_inc, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = udiv i32 %66, %73
  %75 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %76 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %75, i32 0, i32 40
  store i32 %74, i32* %76, align 4
  %77 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %78 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %77, i32 0, i32 38
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %81 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %80, i32 0, i32 59
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds [7 x i8], [7 x i8]* @png_write_finish_row.png_pass_yinc, i64 0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = add i32 %79, %86
  %88 = sub i32 %87, 1
  %89 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %90 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %89, i32 0, i32 59
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = getelementptr inbounds [7 x i8], [7 x i8]* @png_write_finish_row.png_pass_ystart, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = sub i32 %88, %95
  %97 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %98 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %97, i32 0, i32 59
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i64
  %101 = getelementptr inbounds [7 x i8], [7 x i8]* @png_write_finish_row.png_pass_yinc, i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = udiv i32 %96, %103
  %105 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %106 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %105, i32 0, i32 39
  store i32 %104, i32* %106, align 8
  %107 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %108 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %107, i32 0, i32 17
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, 2
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %46
  br label %126

113:                                              ; preds = %46
  br label %114

114:                                              ; preds = %113
  %115 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %116 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %115, i32 0, i32 40
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %121 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %120, i32 0, i32 39
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 0
  br label %124

124:                                              ; preds = %119, %114
  %125 = phi i1 [ true, %114 ], [ %123, %119 ]
  br i1 %125, label %35, label %126, !llvm.loop !355

126:                                              ; preds = %124, %112, %45
  br label %127

127:                                              ; preds = %126, %29
  %128 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %129 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %128, i32 0, i32 59
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = icmp slt i32 %131, 7
  br i1 %132, label %133, label %191

133:                                              ; preds = %127
  %134 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %135 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %134, i32 0, i32 45
  %136 = load i8*, i8** %135, align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %138, label %190

138:                                              ; preds = %133
  %139 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %140 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %139, i32 0, i32 45
  %141 = load i8*, i8** %140, align 8
  %142 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %143 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %142, i32 0, i32 66
  %144 = load i8, i8* %143, align 4
  %145 = zext i8 %144 to i32
  %146 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %147 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %146, i32 0, i32 63
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = mul nsw i32 %145, %149
  %151 = icmp sge i32 %150, 8
  br i1 %151, label %152, label %169

152:                                              ; preds = %138
  %153 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %154 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %153, i32 0, i32 37
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  %157 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %158 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %157, i32 0, i32 66
  %159 = load i8, i8* %158, align 4
  %160 = zext i8 %159 to i32
  %161 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %162 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %161, i32 0, i32 63
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = mul nsw i32 %160, %164
  %166 = sext i32 %165 to i64
  %167 = lshr i64 %166, 3
  %168 = mul i64 %156, %167
  br label %187

169:                                              ; preds = %138
  %170 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %171 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %170, i32 0, i32 37
  %172 = load i32, i32* %171, align 8
  %173 = zext i32 %172 to i64
  %174 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %175 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %174, i32 0, i32 66
  %176 = load i8, i8* %175, align 4
  %177 = zext i8 %176 to i32
  %178 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  %179 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %178, i32 0, i32 63
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = mul nsw i32 %177, %181
  %183 = sext i32 %182 to i64
  %184 = mul i64 %173, %183
  %185 = add i64 %184, 7
  %186 = lshr i64 %185, 3
  br label %187

187:                                              ; preds = %169, %152
  %188 = phi i64 [ %168, %152 ], [ %186, %169 ]
  %189 = add i64 %188, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %141, i8 0, i64 %189, i1 false)
  br label %190

190:                                              ; preds = %187, %133
  br label %194

191:                                              ; preds = %127
  br label %192

192:                                              ; preds = %191, %15
  %193 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %2, align 8
  call void @png_compress_IDAT(%struct.png_struct_def.62* noundef %193, i8* noundef null, i64 noundef 0, i32 noundef 4)
  br label %194

194:                                              ; preds = %192, %190, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_do_write_interlace(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i64, align 8
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %33 = load i32, i32* %6, align 4
  %34 = icmp slt i32 %33, 6
  br i1 %34, label %35, label %326

35:                                               ; preds = %3
  %36 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %37 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %36, i32 0, i32 5
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  switch i32 %39, label %222 [
    i32 1, label %40
    i32 2, label %100
    i32 4, label %161
  ]

40:                                               ; preds = %35
  %41 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %42 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %13, align 4
  %44 = load i8*, i8** %5, align 8
  store i8* %44, i8** %8, align 8
  store i32 0, i32* %10, align 4
  store i32 7, i32* %9, align 4
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_start, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  store i32 %49, i32* %12, align 4
  br label %50

50:                                               ; preds = %84, %40
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %13, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %54, label %92

54:                                               ; preds = %50
  %55 = load i8*, i8** %5, align 8
  %56 = load i32, i32* %12, align 4
  %57 = lshr i32 %56, 3
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  store i8* %59, i8** %7, align 8
  %60 = load i8*, i8** %7, align 8
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = load i32, i32* %12, align 4
  %64 = and i32 %63, 7
  %65 = sub nsw i32 7, %64
  %66 = ashr i32 %62, %65
  %67 = and i32 %66, 1
  store i32 %67, i32* %11, align 4
  %68 = load i32, i32* %11, align 4
  %69 = load i32, i32* %9, align 4
  %70 = shl i32 %68, %69
  %71 = load i32, i32* %10, align 4
  %72 = or i32 %71, %70
  store i32 %72, i32* %10, align 4
  %73 = load i32, i32* %9, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %54
  store i32 7, i32* %9, align 4
  %76 = load i32, i32* %10, align 4
  %77 = trunc i32 %76 to i8
  %78 = load i8*, i8** %8, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %8, align 8
  store i8 %77, i8* %78, align 1
  store i32 0, i32* %10, align 4
  br label %83

80:                                               ; preds = %54
  %81 = load i32, i32* %9, align 4
  %82 = add i32 %81, -1
  store i32 %82, i32* %9, align 4
  br label %83

83:                                               ; preds = %80, %75
  br label %84

84:                                               ; preds = %83
  %85 = load i32, i32* %6, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_inc, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i32, i32* %12, align 4
  %91 = add i32 %90, %89
  store i32 %91, i32* %12, align 4
  br label %50, !llvm.loop !356

92:                                               ; preds = %50
  %93 = load i32, i32* %9, align 4
  %94 = icmp ne i32 %93, 7
  br i1 %94, label %95, label %99

95:                                               ; preds = %92
  %96 = load i32, i32* %10, align 4
  %97 = trunc i32 %96 to i8
  %98 = load i8*, i8** %8, align 8
  store i8 %97, i8* %98, align 1
  br label %99

99:                                               ; preds = %95, %92
  br label %269

100:                                              ; preds = %35
  %101 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %102 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %101, i32 0, i32 0
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %20, align 4
  %104 = load i8*, i8** %5, align 8
  store i8* %104, i8** %15, align 8
  store i32 6, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %105 = load i32, i32* %6, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_start, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  store i32 %109, i32* %19, align 4
  br label %110

110:                                              ; preds = %145, %100
  %111 = load i32, i32* %19, align 4
  %112 = load i32, i32* %20, align 4
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %114, label %153

114:                                              ; preds = %110
  %115 = load i8*, i8** %5, align 8
  %116 = load i32, i32* %19, align 4
  %117 = lshr i32 %116, 2
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 %118
  store i8* %119, i8** %14, align 8
  %120 = load i8*, i8** %14, align 8
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load i32, i32* %19, align 4
  %124 = and i32 %123, 3
  %125 = sub nsw i32 3, %124
  %126 = shl i32 %125, 1
  %127 = ashr i32 %122, %126
  %128 = and i32 %127, 3
  store i32 %128, i32* %18, align 4
  %129 = load i32, i32* %18, align 4
  %130 = load i32, i32* %16, align 4
  %131 = shl i32 %129, %130
  %132 = load i32, i32* %17, align 4
  %133 = or i32 %132, %131
  store i32 %133, i32* %17, align 4
  %134 = load i32, i32* %16, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %141

136:                                              ; preds = %114
  store i32 6, i32* %16, align 4
  %137 = load i32, i32* %17, align 4
  %138 = trunc i32 %137 to i8
  %139 = load i8*, i8** %15, align 8
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %15, align 8
  store i8 %138, i8* %139, align 1
  store i32 0, i32* %17, align 4
  br label %144

141:                                              ; preds = %114
  %142 = load i32, i32* %16, align 4
  %143 = sub i32 %142, 2
  store i32 %143, i32* %16, align 4
  br label %144

144:                                              ; preds = %141, %136
  br label %145

145:                                              ; preds = %144
  %146 = load i32, i32* %6, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_inc, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = load i32, i32* %19, align 4
  %152 = add i32 %151, %150
  store i32 %152, i32* %19, align 4
  br label %110, !llvm.loop !357

153:                                              ; preds = %110
  %154 = load i32, i32* %16, align 4
  %155 = icmp ne i32 %154, 6
  br i1 %155, label %156, label %160

156:                                              ; preds = %153
  %157 = load i32, i32* %17, align 4
  %158 = trunc i32 %157 to i8
  %159 = load i8*, i8** %15, align 8
  store i8 %158, i8* %159, align 1
  br label %160

160:                                              ; preds = %156, %153
  br label %269

161:                                              ; preds = %35
  %162 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %163 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %162, i32 0, i32 0
  %164 = load i32, i32* %163, align 8
  store i32 %164, i32* %27, align 4
  %165 = load i8*, i8** %5, align 8
  store i8* %165, i8** %22, align 8
  store i32 4, i32* %23, align 4
  store i32 0, i32* %24, align 4
  %166 = load i32, i32* %6, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_start, i64 0, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  store i32 %170, i32* %26, align 4
  br label %171

171:                                              ; preds = %206, %161
  %172 = load i32, i32* %26, align 4
  %173 = load i32, i32* %27, align 4
  %174 = icmp ult i32 %172, %173
  br i1 %174, label %175, label %214

175:                                              ; preds = %171
  %176 = load i8*, i8** %5, align 8
  %177 = load i32, i32* %26, align 4
  %178 = lshr i32 %177, 1
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %176, i64 %179
  store i8* %180, i8** %21, align 8
  %181 = load i8*, i8** %21, align 8
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = load i32, i32* %26, align 4
  %185 = and i32 %184, 1
  %186 = sub nsw i32 1, %185
  %187 = shl i32 %186, 2
  %188 = ashr i32 %183, %187
  %189 = and i32 %188, 15
  store i32 %189, i32* %25, align 4
  %190 = load i32, i32* %25, align 4
  %191 = load i32, i32* %23, align 4
  %192 = shl i32 %190, %191
  %193 = load i32, i32* %24, align 4
  %194 = or i32 %193, %192
  store i32 %194, i32* %24, align 4
  %195 = load i32, i32* %23, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %202

197:                                              ; preds = %175
  store i32 4, i32* %23, align 4
  %198 = load i32, i32* %24, align 4
  %199 = trunc i32 %198 to i8
  %200 = load i8*, i8** %22, align 8
  %201 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %201, i8** %22, align 8
  store i8 %199, i8* %200, align 1
  store i32 0, i32* %24, align 4
  br label %205

202:                                              ; preds = %175
  %203 = load i32, i32* %23, align 4
  %204 = sub i32 %203, 4
  store i32 %204, i32* %23, align 4
  br label %205

205:                                              ; preds = %202, %197
  br label %206

206:                                              ; preds = %205
  %207 = load i32, i32* %6, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_inc, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = load i32, i32* %26, align 4
  %213 = add i32 %212, %211
  store i32 %213, i32* %26, align 4
  br label %171, !llvm.loop !358

214:                                              ; preds = %171
  %215 = load i32, i32* %23, align 4
  %216 = icmp ne i32 %215, 4
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = load i32, i32* %24, align 4
  %219 = trunc i32 %218 to i8
  %220 = load i8*, i8** %22, align 8
  store i8 %219, i8* %220, align 1
  br label %221

221:                                              ; preds = %217, %214
  br label %269

222:                                              ; preds = %35
  %223 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %224 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %223, i32 0, i32 0
  %225 = load i32, i32* %224, align 8
  store i32 %225, i32* %31, align 4
  %226 = load i8*, i8** %5, align 8
  store i8* %226, i8** %29, align 8
  %227 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %228 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %227, i32 0, i32 5
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = ashr i32 %230, 3
  %232 = sext i32 %231 to i64
  store i64 %232, i64* %32, align 8
  %233 = load i32, i32* %6, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_start, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  store i32 %237, i32* %30, align 4
  br label %238

238:                                              ; preds = %260, %222
  %239 = load i32, i32* %30, align 4
  %240 = load i32, i32* %31, align 4
  %241 = icmp ult i32 %239, %240
  br i1 %241, label %242, label %268

242:                                              ; preds = %238
  %243 = load i8*, i8** %5, align 8
  %244 = load i32, i32* %30, align 4
  %245 = zext i32 %244 to i64
  %246 = load i64, i64* %32, align 8
  %247 = mul i64 %245, %246
  %248 = getelementptr inbounds i8, i8* %243, i64 %247
  store i8* %248, i8** %28, align 8
  %249 = load i8*, i8** %29, align 8
  %250 = load i8*, i8** %28, align 8
  %251 = icmp ne i8* %249, %250
  br i1 %251, label %252, label %256

252:                                              ; preds = %242
  %253 = load i8*, i8** %29, align 8
  %254 = load i8*, i8** %28, align 8
  %255 = load i64, i64* %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %253, i8* align 1 %254, i64 %255, i1 false)
  br label %256

256:                                              ; preds = %252, %242
  %257 = load i64, i64* %32, align 8
  %258 = load i8*, i8** %29, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 %257
  store i8* %259, i8** %29, align 8
  br label %260

260:                                              ; preds = %256
  %261 = load i32, i32* %6, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_inc, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = load i32, i32* %30, align 4
  %267 = add i32 %266, %265
  store i32 %267, i32* %30, align 4
  br label %238, !llvm.loop !359

268:                                              ; preds = %238
  br label %269

269:                                              ; preds = %268, %221, %160, %99
  %270 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %271 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %270, i32 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = load i32, i32* %6, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_inc, i64 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = add i32 %272, %277
  %279 = sub i32 %278, 1
  %280 = load i32, i32* %6, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_start, i64 0, i64 %281
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = sub i32 %279, %284
  %286 = load i32, i32* %6, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [7 x i8], [7 x i8]* @png_do_write_interlace.png_pass_inc, i64 0, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = udiv i32 %285, %290
  %292 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %293 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %292, i32 0, i32 0
  store i32 %291, i32* %293, align 8
  %294 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %295 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %294, i32 0, i32 5
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i32
  %298 = icmp sge i32 %297, 8
  br i1 %298, label %299, label %310

299:                                              ; preds = %269
  %300 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %301 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %300, i32 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = zext i32 %302 to i64
  %304 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %305 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %304, i32 0, i32 5
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i64
  %308 = lshr i64 %307, 3
  %309 = mul i64 %303, %308
  br label %322

310:                                              ; preds = %269
  %311 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %312 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %311, i32 0, i32 0
  %313 = load i32, i32* %312, align 8
  %314 = zext i32 %313 to i64
  %315 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %316 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %315, i32 0, i32 5
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i64
  %319 = mul i64 %314, %318
  %320 = add i64 %319, 7
  %321 = lshr i64 %320, 3
  br label %322

322:                                              ; preds = %310, %299
  %323 = phi i64 [ %309, %299 ], [ %321, %310 ]
  %324 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %325 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %324, i32 0, i32 1
  store i64 %323, i64* %325, align 8
  br label %326

326:                                              ; preds = %322, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_write_find_filter(%struct.png_struct_def.62* noalias noundef %0, %struct.png_row_info_struct* noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca %struct.png_row_info_struct*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store %struct.png_row_info_struct* %1, %struct.png_row_info_struct** %4, align 8
  %23 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %24 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %23, i32 0, i32 60
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %5, align 4
  %27 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %28 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %27, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %10, align 8
  %30 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %31 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %30, i32 0, i32 5
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = add nsw i32 %33, 7
  %35 = ashr i32 %34, 3
  store i32 %35, i32* %8, align 4
  %36 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %37 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %36, i32 0, i32 46
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %6, align 8
  store i64 -257, i64* %9, align 8
  %39 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %40 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %39, i32 0, i32 46
  %41 = load i8*, i8** %40, align 8
  store i8* %41, i8** %7, align 8
  %42 = load i64, i64* %10, align 8
  %43 = icmp ule i64 144115188075855871, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %2
  %45 = load i32, i32* %5, align 4
  %46 = sub i32 0, %45
  %47 = load i32, i32* %5, align 4
  %48 = and i32 %47, %46
  store i32 %48, i32* %5, align 4
  br label %87

49:                                               ; preds = %2
  %50 = load i32, i32* %5, align 4
  %51 = and i32 %50, 8
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %86

53:                                               ; preds = %49
  %54 = load i32, i32* %5, align 4
  %55 = icmp ne i32 %54, 8
  br i1 %55, label %56, label %86

56:                                               ; preds = %53
  store i64 0, i64* %12, align 8
  store i64 0, i64* %13, align 8
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %11, align 8
  br label %59

59:                                               ; preds = %79, %56
  %60 = load i64, i64* %13, align 8
  %61 = load i64, i64* %10, align 8
  %62 = icmp ult i64 %60, %61
  br i1 %62, label %63, label %84

63:                                               ; preds = %59
  %64 = load i8*, i8** %11, align 8
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  store i32 %66, i32* %14, align 4
  %67 = load i32, i32* %14, align 4
  %68 = icmp ult i32 %67, 128
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = load i32, i32* %14, align 4
  br label %74

71:                                               ; preds = %63
  %72 = load i32, i32* %14, align 4
  %73 = sub i32 256, %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i32 [ %70, %69 ], [ %73, %71 ]
  %76 = zext i32 %75 to i64
  %77 = load i64, i64* %12, align 8
  %78 = add i64 %77, %76
  store i64 %78, i64* %12, align 8
  br label %79

79:                                               ; preds = %74
  %80 = load i64, i64* %13, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %13, align 8
  %82 = load i8*, i8** %11, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %11, align 8
  br label %59, !llvm.loop !360

84:                                               ; preds = %59
  %85 = load i64, i64* %12, align 8
  store i64 %85, i64* %9, align 8
  br label %86

86:                                               ; preds = %84, %53, %49
  br label %87

87:                                               ; preds = %86, %44
  %88 = load i32, i32* %5, align 4
  %89 = icmp eq i32 %88, 16
  br i1 %89, label %90, label %97

90:                                               ; preds = %87
  %91 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %92 = load i32, i32* %8, align 4
  %93 = load i64, i64* %10, align 8
  call void @png_setup_sub_row_only(%struct.png_struct_def.62* noundef %91, i32 noundef %92, i64 noundef %93)
  %94 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %95 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %94, i32 0, i32 47
  %96 = load i8*, i8** %95, align 8
  store i8* %96, i8** %7, align 8
  br label %132

97:                                               ; preds = %87
  %98 = load i32, i32* %5, align 4
  %99 = and i32 %98, 16
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %131

101:                                              ; preds = %97
  %102 = load i64, i64* %9, align 8
  store i64 %102, i64* %16, align 8
  %103 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %104 = load i32, i32* %8, align 4
  %105 = load i64, i64* %10, align 8
  %106 = load i64, i64* %16, align 8
  %107 = call i64 @png_setup_sub_row(%struct.png_struct_def.62* noundef %103, i32 noundef %104, i64 noundef %105, i64 noundef %106)
  store i64 %107, i64* %15, align 8
  %108 = load i64, i64* %15, align 8
  %109 = load i64, i64* %9, align 8
  %110 = icmp ult i64 %108, %109
  br i1 %110, label %111, label %130

111:                                              ; preds = %101
  %112 = load i64, i64* %15, align 8
  store i64 %112, i64* %9, align 8
  %113 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %114 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %113, i32 0, i32 47
  %115 = load i8*, i8** %114, align 8
  store i8* %115, i8** %7, align 8
  %116 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %117 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %116, i32 0, i32 48
  %118 = load i8*, i8** %117, align 8
  %119 = icmp ne i8* %118, null
  br i1 %119, label %120, label %129

120:                                              ; preds = %111
  %121 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %122 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %121, i32 0, i32 48
  %123 = load i8*, i8** %122, align 8
  %124 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %125 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %124, i32 0, i32 47
  store i8* %123, i8** %125, align 8
  %126 = load i8*, i8** %7, align 8
  %127 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %128 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %127, i32 0, i32 48
  store i8* %126, i8** %128, align 8
  br label %129

129:                                              ; preds = %120, %111
  br label %130

130:                                              ; preds = %129, %101
  br label %131

131:                                              ; preds = %130, %97
  br label %132

132:                                              ; preds = %131, %90
  %133 = load i32, i32* %5, align 4
  %134 = icmp eq i32 %133, 32
  br i1 %134, label %135, label %141

135:                                              ; preds = %132
  %136 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %137 = load i64, i64* %10, align 8
  call void @png_setup_up_row_only(%struct.png_struct_def.62* noundef %136, i64 noundef %137)
  %138 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %139 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %138, i32 0, i32 47
  %140 = load i8*, i8** %139, align 8
  store i8* %140, i8** %7, align 8
  br label %175

141:                                              ; preds = %132
  %142 = load i32, i32* %5, align 4
  %143 = and i32 %142, 32
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %174

145:                                              ; preds = %141
  %146 = load i64, i64* %9, align 8
  store i64 %146, i64* %18, align 8
  %147 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %148 = load i64, i64* %10, align 8
  %149 = load i64, i64* %18, align 8
  %150 = call i64 @png_setup_up_row(%struct.png_struct_def.62* noundef %147, i64 noundef %148, i64 noundef %149)
  store i64 %150, i64* %17, align 8
  %151 = load i64, i64* %17, align 8
  %152 = load i64, i64* %9, align 8
  %153 = icmp ult i64 %151, %152
  br i1 %153, label %154, label %173

154:                                              ; preds = %145
  %155 = load i64, i64* %17, align 8
  store i64 %155, i64* %9, align 8
  %156 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %157 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %156, i32 0, i32 47
  %158 = load i8*, i8** %157, align 8
  store i8* %158, i8** %7, align 8
  %159 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %160 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %159, i32 0, i32 48
  %161 = load i8*, i8** %160, align 8
  %162 = icmp ne i8* %161, null
  br i1 %162, label %163, label %172

163:                                              ; preds = %154
  %164 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %165 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %164, i32 0, i32 48
  %166 = load i8*, i8** %165, align 8
  %167 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %168 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %167, i32 0, i32 47
  store i8* %166, i8** %168, align 8
  %169 = load i8*, i8** %7, align 8
  %170 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %171 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %170, i32 0, i32 48
  store i8* %169, i8** %171, align 8
  br label %172

172:                                              ; preds = %163, %154
  br label %173

173:                                              ; preds = %172, %145
  br label %174

174:                                              ; preds = %173, %141
  br label %175

175:                                              ; preds = %174, %135
  %176 = load i32, i32* %5, align 4
  %177 = icmp eq i32 %176, 64
  br i1 %177, label %178, label %185

178:                                              ; preds = %175
  %179 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %180 = load i32, i32* %8, align 4
  %181 = load i64, i64* %10, align 8
  call void @png_setup_avg_row_only(%struct.png_struct_def.62* noundef %179, i32 noundef %180, i64 noundef %181)
  %182 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %183 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %182, i32 0, i32 47
  %184 = load i8*, i8** %183, align 8
  store i8* %184, i8** %7, align 8
  br label %220

185:                                              ; preds = %175
  %186 = load i32, i32* %5, align 4
  %187 = and i32 %186, 64
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %219

189:                                              ; preds = %185
  %190 = load i64, i64* %9, align 8
  store i64 %190, i64* %20, align 8
  %191 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %192 = load i32, i32* %8, align 4
  %193 = load i64, i64* %10, align 8
  %194 = load i64, i64* %20, align 8
  %195 = call i64 @png_setup_avg_row(%struct.png_struct_def.62* noundef %191, i32 noundef %192, i64 noundef %193, i64 noundef %194)
  store i64 %195, i64* %19, align 8
  %196 = load i64, i64* %19, align 8
  %197 = load i64, i64* %9, align 8
  %198 = icmp ult i64 %196, %197
  br i1 %198, label %199, label %218

199:                                              ; preds = %189
  %200 = load i64, i64* %19, align 8
  store i64 %200, i64* %9, align 8
  %201 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %202 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %201, i32 0, i32 47
  %203 = load i8*, i8** %202, align 8
  store i8* %203, i8** %7, align 8
  %204 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %205 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %204, i32 0, i32 48
  %206 = load i8*, i8** %205, align 8
  %207 = icmp ne i8* %206, null
  br i1 %207, label %208, label %217

208:                                              ; preds = %199
  %209 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %210 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %209, i32 0, i32 48
  %211 = load i8*, i8** %210, align 8
  %212 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %213 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %212, i32 0, i32 47
  store i8* %211, i8** %213, align 8
  %214 = load i8*, i8** %7, align 8
  %215 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %216 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %215, i32 0, i32 48
  store i8* %214, i8** %216, align 8
  br label %217

217:                                              ; preds = %208, %199
  br label %218

218:                                              ; preds = %217, %189
  br label %219

219:                                              ; preds = %218, %185
  br label %220

220:                                              ; preds = %219, %178
  %221 = load i32, i32* %5, align 4
  %222 = icmp eq i32 %221, 128
  br i1 %222, label %223, label %230

223:                                              ; preds = %220
  %224 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %225 = load i32, i32* %8, align 4
  %226 = load i64, i64* %10, align 8
  call void @png_setup_paeth_row_only(%struct.png_struct_def.62* noundef %224, i32 noundef %225, i64 noundef %226)
  %227 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %228 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %227, i32 0, i32 47
  %229 = load i8*, i8** %228, align 8
  store i8* %229, i8** %7, align 8
  br label %264

230:                                              ; preds = %220
  %231 = load i32, i32* %5, align 4
  %232 = and i32 %231, 128
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %263

234:                                              ; preds = %230
  %235 = load i64, i64* %9, align 8
  store i64 %235, i64* %22, align 8
  %236 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %237 = load i32, i32* %8, align 4
  %238 = load i64, i64* %10, align 8
  %239 = load i64, i64* %22, align 8
  %240 = call i64 @png_setup_paeth_row(%struct.png_struct_def.62* noundef %236, i32 noundef %237, i64 noundef %238, i64 noundef %239)
  store i64 %240, i64* %21, align 8
  %241 = load i64, i64* %21, align 8
  %242 = load i64, i64* %9, align 8
  %243 = icmp ult i64 %241, %242
  br i1 %243, label %244, label %262

244:                                              ; preds = %234
  %245 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %246 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %245, i32 0, i32 47
  %247 = load i8*, i8** %246, align 8
  store i8* %247, i8** %7, align 8
  %248 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %249 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %248, i32 0, i32 48
  %250 = load i8*, i8** %249, align 8
  %251 = icmp ne i8* %250, null
  br i1 %251, label %252, label %261

252:                                              ; preds = %244
  %253 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %254 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %253, i32 0, i32 48
  %255 = load i8*, i8** %254, align 8
  %256 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %257 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %256, i32 0, i32 47
  store i8* %255, i8** %257, align 8
  %258 = load i8*, i8** %7, align 8
  %259 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %260 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %259, i32 0, i32 48
  store i8* %258, i8** %260, align 8
  br label %261

261:                                              ; preds = %252, %244
  br label %262

262:                                              ; preds = %261, %234
  br label %263

263:                                              ; preds = %262, %230
  br label %264

264:                                              ; preds = %263, %223
  %265 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %266 = load i8*, i8** %7, align 8
  %267 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %4, align 8
  %268 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %267, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %269, 1
  call void @png_write_filtered_row(%struct.png_struct_def.62* noundef %265, i8* noundef %266, i64 noundef %270)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_setup_sub_row_only(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %11, i32 0, i32 47
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  store i8 1, i8* %14, align 1
  store i64 0, i64* %10, align 8
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %16 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %15, i32 0, i32 46
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  store i8* %18, i8** %7, align 8
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 47
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %8, align 8
  br label %23

23:                                               ; preds = %32, %3
  %24 = load i64, i64* %10, align 8
  %25 = load i32, i32* %5, align 4
  %26 = zext i32 %25 to i64
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %28, label %39

28:                                               ; preds = %23
  %29 = load i8*, i8** %7, align 8
  %30 = load i8, i8* %29, align 1
  %31 = load i8*, i8** %8, align 8
  store i8 %30, i8* %31, align 1
  br label %32

32:                                               ; preds = %28
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %10, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %7, align 8
  %37 = load i8*, i8** %8, align 8
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %8, align 8
  br label %23, !llvm.loop !361

39:                                               ; preds = %23
  %40 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %41 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %40, i32 0, i32 46
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  store i8* %43, i8** %9, align 8
  br label %44

44:                                               ; preds = %59, %39
  %45 = load i64, i64* %10, align 8
  %46 = load i64, i64* %6, align 8
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %48, label %68

48:                                               ; preds = %44
  %49 = load i8*, i8** %7, align 8
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = load i8*, i8** %9, align 8
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = sub nsw i32 %51, %54
  %56 = and i32 %55, 255
  %57 = trunc i32 %56 to i8
  %58 = load i8*, i8** %8, align 8
  store i8 %57, i8* %58, align 1
  br label %59

59:                                               ; preds = %48
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %10, align 8
  %62 = load i8*, i8** %7, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %7, align 8
  %64 = load i8*, i8** %9, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %9, align 8
  %66 = load i8*, i8** %8, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %8, align 8
  br label %44, !llvm.loop !362

68:                                               ; preds = %44
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @png_setup_sub_row(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  store i64 0, i64* %13, align 8
  %15 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %16 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %15, i32 0, i32 47
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  store i8 1, i8* %18, align 1
  store i64 0, i64* %12, align 8
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 46
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %9, align 8
  %23 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %24 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %23, i32 0, i32 47
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8* %26, i8** %10, align 8
  br label %27

27:                                               ; preds = %49, %4
  %28 = load i64, i64* %12, align 8
  %29 = load i32, i32* %6, align 4
  %30 = zext i32 %29 to i64
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %32, label %56

32:                                               ; preds = %27
  %33 = load i8*, i8** %9, align 8
  %34 = load i8, i8* %33, align 1
  %35 = load i8*, i8** %10, align 8
  store i8 %34, i8* %35, align 1
  %36 = zext i8 %34 to i32
  store i32 %36, i32* %14, align 4
  %37 = load i32, i32* %14, align 4
  %38 = icmp ult i32 %37, 128
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = load i32, i32* %14, align 4
  br label %44

41:                                               ; preds = %32
  %42 = load i32, i32* %14, align 4
  %43 = sub i32 256, %42
  br label %44

44:                                               ; preds = %41, %39
  %45 = phi i32 [ %40, %39 ], [ %43, %41 ]
  %46 = zext i32 %45 to i64
  %47 = load i64, i64* %13, align 8
  %48 = add i64 %47, %46
  store i64 %48, i64* %13, align 8
  br label %49

49:                                               ; preds = %44
  %50 = load i64, i64* %12, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %12, align 8
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %9, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %10, align 8
  br label %27, !llvm.loop !363

56:                                               ; preds = %27
  %57 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %58 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %57, i32 0, i32 46
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  store i8* %60, i8** %11, align 8
  br label %61

61:                                               ; preds = %94, %56
  %62 = load i64, i64* %12, align 8
  %63 = load i64, i64* %7, align 8
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %65, label %103

65:                                               ; preds = %61
  %66 = load i8*, i8** %9, align 8
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = load i8*, i8** %11, align 8
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 %68, %71
  %73 = and i32 %72, 255
  %74 = trunc i32 %73 to i8
  %75 = load i8*, i8** %10, align 8
  store i8 %74, i8* %75, align 1
  %76 = zext i8 %74 to i32
  store i32 %76, i32* %14, align 4
  %77 = load i32, i32* %14, align 4
  %78 = icmp ult i32 %77, 128
  br i1 %78, label %79, label %81

79:                                               ; preds = %65
  %80 = load i32, i32* %14, align 4
  br label %84

81:                                               ; preds = %65
  %82 = load i32, i32* %14, align 4
  %83 = sub i32 256, %82
  br label %84

84:                                               ; preds = %81, %79
  %85 = phi i32 [ %80, %79 ], [ %83, %81 ]
  %86 = zext i32 %85 to i64
  %87 = load i64, i64* %13, align 8
  %88 = add i64 %87, %86
  store i64 %88, i64* %13, align 8
  %89 = load i64, i64* %13, align 8
  %90 = load i64, i64* %8, align 8
  %91 = icmp ugt i64 %89, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %84
  br label %103

93:                                               ; preds = %84
  br label %94

94:                                               ; preds = %93
  %95 = load i64, i64* %12, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %12, align 8
  %97 = load i8*, i8** %9, align 8
  %98 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %98, i8** %9, align 8
  %99 = load i8*, i8** %11, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %11, align 8
  %101 = load i8*, i8** %10, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %102, i8** %10, align 8
  br label %61, !llvm.loop !364

103:                                              ; preds = %92, %61
  %104 = load i64, i64* %13, align 8
  ret i64 %104
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_setup_up_row_only(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def.62*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %10 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %9, i32 0, i32 47
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  store i8 2, i8* %12, align 1
  store i64 0, i64* %8, align 8
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %13, i32 0, i32 46
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %16, i8** %5, align 8
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %18 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %17, i32 0, i32 47
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %6, align 8
  %21 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %21, i32 0, i32 45
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %7, align 8
  br label %25

25:                                               ; preds = %40, %2
  %26 = load i64, i64* %8, align 8
  %27 = load i64, i64* %4, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %49

29:                                               ; preds = %25
  %30 = load i8*, i8** %5, align 8
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = load i8*, i8** %7, align 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = sub nsw i32 %32, %35
  %37 = and i32 %36, 255
  %38 = trunc i32 %37 to i8
  %39 = load i8*, i8** %6, align 8
  store i8 %38, i8* %39, align 1
  br label %40

40:                                               ; preds = %29
  %41 = load i64, i64* %8, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %8, align 8
  %43 = load i8*, i8** %5, align 8
  %44 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %44, i8** %5, align 8
  %45 = load i8*, i8** %7, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %7, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %6, align 8
  br label %25, !llvm.loop !365

49:                                               ; preds = %25
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @png_setup_up_row(%struct.png_struct_def.62* noalias noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  store i64 0, i64* %11, align 8
  %13 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %14 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %13, i32 0, i32 47
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  store i8 2, i8* %16, align 1
  store i64 0, i64* %10, align 8
  %17 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %18 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %17, i32 0, i32 46
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %7, align 8
  %21 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %22 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %21, i32 0, i32 47
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %8, align 8
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %26 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %25, i32 0, i32 45
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %28, i8** %9, align 8
  br label %29

29:                                               ; preds = %62, %3
  %30 = load i64, i64* %10, align 8
  %31 = load i64, i64* %5, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %71

33:                                               ; preds = %29
  %34 = load i8*, i8** %7, align 8
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = load i8*, i8** %9, align 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = sub nsw i32 %36, %39
  %41 = and i32 %40, 255
  %42 = trunc i32 %41 to i8
  %43 = load i8*, i8** %8, align 8
  store i8 %42, i8* %43, align 1
  %44 = zext i8 %42 to i32
  store i32 %44, i32* %12, align 4
  %45 = load i32, i32* %12, align 4
  %46 = icmp ult i32 %45, 128
  br i1 %46, label %47, label %49

47:                                               ; preds = %33
  %48 = load i32, i32* %12, align 4
  br label %52

49:                                               ; preds = %33
  %50 = load i32, i32* %12, align 4
  %51 = sub i32 256, %50
  br label %52

52:                                               ; preds = %49, %47
  %53 = phi i32 [ %48, %47 ], [ %51, %49 ]
  %54 = zext i32 %53 to i64
  %55 = load i64, i64* %11, align 8
  %56 = add i64 %55, %54
  store i64 %56, i64* %11, align 8
  %57 = load i64, i64* %11, align 8
  %58 = load i64, i64* %6, align 8
  %59 = icmp ugt i64 %57, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %52
  br label %71

61:                                               ; preds = %52
  br label %62

62:                                               ; preds = %61
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %10, align 8
  %65 = load i8*, i8** %7, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %7, align 8
  %67 = load i8*, i8** %9, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %9, align 8
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %70, i8** %8, align 8
  br label %29, !llvm.loop !366

71:                                               ; preds = %60, %29
  %72 = load i64, i64* %11, align 8
  ret i64 %72
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_setup_avg_row_only(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %12 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %13 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %12, i32 0, i32 47
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  store i8 3, i8* %15, align 1
  store i32 0, i32* %11, align 4
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %17 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %16, i32 0, i32 46
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 1
  store i8* %19, i8** %7, align 8
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %20, i32 0, i32 47
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  store i8* %23, i8** %8, align 8
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %25 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %24, i32 0, i32 45
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %9, align 8
  br label %28

28:                                               ; preds = %47, %3
  %29 = load i32, i32* %11, align 4
  %30 = load i32, i32* %5, align 4
  %31 = icmp ult i32 %29, %30
  br i1 %31, label %32, label %50

32:                                               ; preds = %28
  %33 = load i8*, i8** %7, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %7, align 8
  %35 = load i8, i8* %33, align 1
  %36 = zext i8 %35 to i32
  %37 = load i8*, i8** %9, align 8
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %9, align 8
  %39 = load i8, i8* %37, align 1
  %40 = zext i8 %39 to i32
  %41 = sdiv i32 %40, 2
  %42 = sub nsw i32 %36, %41
  %43 = and i32 %42, 255
  %44 = trunc i32 %43 to i8
  %45 = load i8*, i8** %8, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %8, align 8
  store i8 %44, i8* %45, align 1
  br label %47

47:                                               ; preds = %32
  %48 = load i32, i32* %11, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %11, align 4
  br label %28, !llvm.loop !367

50:                                               ; preds = %28
  %51 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %52 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %51, i32 0, i32 46
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  store i8* %54, i8** %10, align 8
  br label %55

55:                                               ; preds = %80, %50
  %56 = load i32, i32* %11, align 4
  %57 = zext i32 %56 to i64
  %58 = load i64, i64* %6, align 8
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %60, label %83

60:                                               ; preds = %55
  %61 = load i8*, i8** %7, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %7, align 8
  %63 = load i8, i8* %61, align 1
  %64 = zext i8 %63 to i32
  %65 = load i8*, i8** %9, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %9, align 8
  %67 = load i8, i8* %65, align 1
  %68 = zext i8 %67 to i32
  %69 = load i8*, i8** %10, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %70, i8** %10, align 8
  %71 = load i8, i8* %69, align 1
  %72 = zext i8 %71 to i32
  %73 = add nsw i32 %68, %72
  %74 = sdiv i32 %73, 2
  %75 = sub nsw i32 %64, %74
  %76 = and i32 %75, 255
  %77 = trunc i32 %76 to i8
  %78 = load i8*, i8** %8, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %8, align 8
  store i8 %77, i8* %78, align 1
  br label %80

80:                                               ; preds = %60
  %81 = load i32, i32* %11, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %11, align 4
  br label %55, !llvm.loop !368

83:                                               ; preds = %55
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @png_setup_avg_row(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  store i64 0, i64* %14, align 8
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %17 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %16, i32 0, i32 47
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  store i8 3, i8* %19, align 1
  store i32 0, i32* %13, align 4
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %20, i32 0, i32 46
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  store i8* %23, i8** %9, align 8
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %25 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %24, i32 0, i32 47
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %10, align 8
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %29 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %28, i32 0, i32 45
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %11, align 8
  br label %32

32:                                               ; preds = %64, %4
  %33 = load i32, i32* %13, align 4
  %34 = load i32, i32* %6, align 4
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %36, label %67

36:                                               ; preds = %32
  %37 = load i8*, i8** %9, align 8
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %9, align 8
  %39 = load i8, i8* %37, align 1
  %40 = zext i8 %39 to i32
  %41 = load i8*, i8** %11, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %11, align 8
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = sdiv i32 %44, 2
  %46 = sub nsw i32 %40, %45
  %47 = and i32 %46, 255
  %48 = trunc i32 %47 to i8
  %49 = load i8*, i8** %10, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %10, align 8
  store i8 %48, i8* %49, align 1
  %51 = zext i8 %48 to i32
  store i32 %51, i32* %15, align 4
  %52 = load i32, i32* %15, align 4
  %53 = icmp ult i32 %52, 128
  br i1 %53, label %54, label %56

54:                                               ; preds = %36
  %55 = load i32, i32* %15, align 4
  br label %59

56:                                               ; preds = %36
  %57 = load i32, i32* %15, align 4
  %58 = sub i32 256, %57
  br label %59

59:                                               ; preds = %56, %54
  %60 = phi i32 [ %55, %54 ], [ %58, %56 ]
  %61 = zext i32 %60 to i64
  %62 = load i64, i64* %14, align 8
  %63 = add i64 %62, %61
  store i64 %63, i64* %14, align 8
  br label %64

64:                                               ; preds = %59
  %65 = load i32, i32* %13, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %13, align 4
  br label %32, !llvm.loop !369

67:                                               ; preds = %32
  %68 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %69 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %68, i32 0, i32 46
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  store i8* %71, i8** %12, align 8
  br label %72

72:                                               ; preds = %115, %67
  %73 = load i32, i32* %13, align 4
  %74 = zext i32 %73 to i64
  %75 = load i64, i64* %7, align 8
  %76 = icmp ult i64 %74, %75
  br i1 %76, label %77, label %118

77:                                               ; preds = %72
  %78 = load i8*, i8** %9, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %9, align 8
  %80 = load i8, i8* %78, align 1
  %81 = zext i8 %80 to i32
  %82 = load i8*, i8** %11, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %11, align 8
  %84 = load i8, i8* %82, align 1
  %85 = zext i8 %84 to i32
  %86 = load i8*, i8** %12, align 8
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %12, align 8
  %88 = load i8, i8* %86, align 1
  %89 = zext i8 %88 to i32
  %90 = add nsw i32 %85, %89
  %91 = sdiv i32 %90, 2
  %92 = sub nsw i32 %81, %91
  %93 = and i32 %92, 255
  %94 = trunc i32 %93 to i8
  %95 = load i8*, i8** %10, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %10, align 8
  store i8 %94, i8* %95, align 1
  %97 = zext i8 %94 to i32
  store i32 %97, i32* %15, align 4
  %98 = load i32, i32* %15, align 4
  %99 = icmp ult i32 %98, 128
  br i1 %99, label %100, label %102

100:                                              ; preds = %77
  %101 = load i32, i32* %15, align 4
  br label %105

102:                                              ; preds = %77
  %103 = load i32, i32* %15, align 4
  %104 = sub i32 256, %103
  br label %105

105:                                              ; preds = %102, %100
  %106 = phi i32 [ %101, %100 ], [ %104, %102 ]
  %107 = zext i32 %106 to i64
  %108 = load i64, i64* %14, align 8
  %109 = add i64 %108, %107
  store i64 %109, i64* %14, align 8
  %110 = load i64, i64* %14, align 8
  %111 = load i64, i64* %8, align 8
  %112 = icmp ugt i64 %110, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %105
  br label %118

114:                                              ; preds = %105
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %13, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %13, align 4
  br label %72, !llvm.loop !370

118:                                              ; preds = %113, %72
  %119 = load i64, i64* %14, align 8
  ret i64 %119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_setup_paeth_row_only(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %20 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %21 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %20, i32 0, i32 47
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  store i8 4, i8* %23, align 1
  store i64 0, i64* %12, align 8
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %25 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %24, i32 0, i32 46
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %29 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %28, i32 0, i32 47
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %8, align 8
  %32 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %33 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %32, i32 0, i32 45
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %35, i8** %9, align 8
  br label %36

36:                                               ; preds = %55, %3
  %37 = load i64, i64* %12, align 8
  %38 = load i32, i32* %5, align 4
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %41, label %58

41:                                               ; preds = %36
  %42 = load i8*, i8** %7, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %7, align 8
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i32
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %9, align 8
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i32
  %50 = sub nsw i32 %45, %49
  %51 = and i32 %50, 255
  %52 = trunc i32 %51 to i8
  %53 = load i8*, i8** %8, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %8, align 8
  store i8 %52, i8* %53, align 1
  br label %55

55:                                               ; preds = %41
  %56 = load i64, i64* %12, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %12, align 8
  br label %36, !llvm.loop !371

58:                                               ; preds = %36
  %59 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %60 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %59, i32 0, i32 46
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  store i8* %62, i8** %11, align 8
  %63 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %64 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %63, i32 0, i32 45
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  store i8* %66, i8** %10, align 8
  br label %67

67:                                               ; preds = %154, %58
  %68 = load i64, i64* %12, align 8
  %69 = load i64, i64* %6, align 8
  %70 = icmp ult i64 %68, %69
  br i1 %70, label %71, label %157

71:                                               ; preds = %67
  %72 = load i8*, i8** %9, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %9, align 8
  %74 = load i8, i8* %72, align 1
  %75 = zext i8 %74 to i32
  store i32 %75, i32* %14, align 4
  %76 = load i8*, i8** %10, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %10, align 8
  %78 = load i8, i8* %76, align 1
  %79 = zext i8 %78 to i32
  store i32 %79, i32* %15, align 4
  %80 = load i8*, i8** %11, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %11, align 8
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i32
  store i32 %83, i32* %13, align 4
  %84 = load i32, i32* %14, align 4
  %85 = load i32, i32* %15, align 4
  %86 = sub nsw i32 %84, %85
  store i32 %86, i32* %19, align 4
  %87 = load i32, i32* %13, align 4
  %88 = load i32, i32* %15, align 4
  %89 = sub nsw i32 %87, %88
  store i32 %89, i32* %18, align 4
  %90 = load i32, i32* %19, align 4
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %71
  %93 = load i32, i32* %19, align 4
  %94 = sub nsw i32 0, %93
  br label %97

95:                                               ; preds = %71
  %96 = load i32, i32* %19, align 4
  br label %97

97:                                               ; preds = %95, %92
  %98 = phi i32 [ %94, %92 ], [ %96, %95 ]
  store i32 %98, i32* %16, align 4
  %99 = load i32, i32* %18, align 4
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = load i32, i32* %18, align 4
  %103 = sub nsw i32 0, %102
  br label %106

104:                                              ; preds = %97
  %105 = load i32, i32* %18, align 4
  br label %106

106:                                              ; preds = %104, %101
  %107 = phi i32 [ %103, %101 ], [ %105, %104 ]
  store i32 %107, i32* %17, align 4
  %108 = load i32, i32* %19, align 4
  %109 = load i32, i32* %18, align 4
  %110 = add nsw i32 %108, %109
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %112, label %117

112:                                              ; preds = %106
  %113 = load i32, i32* %19, align 4
  %114 = load i32, i32* %18, align 4
  %115 = add nsw i32 %113, %114
  %116 = sub nsw i32 0, %115
  br label %121

117:                                              ; preds = %106
  %118 = load i32, i32* %19, align 4
  %119 = load i32, i32* %18, align 4
  %120 = add nsw i32 %118, %119
  br label %121

121:                                              ; preds = %117, %112
  %122 = phi i32 [ %116, %112 ], [ %120, %117 ]
  store i32 %122, i32* %18, align 4
  %123 = load i32, i32* %16, align 4
  %124 = load i32, i32* %17, align 4
  %125 = icmp sle i32 %123, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %121
  %127 = load i32, i32* %16, align 4
  %128 = load i32, i32* %18, align 4
  %129 = icmp sle i32 %127, %128
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = load i32, i32* %13, align 4
  br label %142

132:                                              ; preds = %126, %121
  %133 = load i32, i32* %17, align 4
  %134 = load i32, i32* %18, align 4
  %135 = icmp sle i32 %133, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = load i32, i32* %14, align 4
  br label %140

138:                                              ; preds = %132
  %139 = load i32, i32* %15, align 4
  br label %140

140:                                              ; preds = %138, %136
  %141 = phi i32 [ %137, %136 ], [ %139, %138 ]
  br label %142

142:                                              ; preds = %140, %130
  %143 = phi i32 [ %131, %130 ], [ %141, %140 ]
  store i32 %143, i32* %19, align 4
  %144 = load i8*, i8** %7, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %7, align 8
  %146 = load i8, i8* %144, align 1
  %147 = zext i8 %146 to i32
  %148 = load i32, i32* %19, align 4
  %149 = sub nsw i32 %147, %148
  %150 = and i32 %149, 255
  %151 = trunc i32 %150 to i8
  %152 = load i8*, i8** %8, align 8
  %153 = getelementptr inbounds i8, i8* %152, i32 1
  store i8* %153, i8** %8, align 8
  store i8 %151, i8* %152, align 1
  br label %154

154:                                              ; preds = %142
  %155 = load i64, i64* %12, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %12, align 8
  br label %67, !llvm.loop !372

157:                                              ; preds = %67
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @png_setup_paeth_row(%struct.png_struct_def.62* noalias noundef %0, i32 noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.png_struct_def.62*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  store i64 0, i64* %15, align 8
  %24 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %25 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %24, i32 0, i32 47
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  store i8 4, i8* %27, align 1
  store i64 0, i64* %14, align 8
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %29 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %28, i32 0, i32 46
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %9, align 8
  %32 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %33 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %32, i32 0, i32 47
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %35, i8** %10, align 8
  %36 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %37 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %36, i32 0, i32 45
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  store i8* %39, i8** %11, align 8
  br label %40

40:                                               ; preds = %72, %4
  %41 = load i64, i64* %14, align 8
  %42 = load i32, i32* %6, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %45, label %75

45:                                               ; preds = %40
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %9, align 8
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i32
  %50 = load i8*, i8** %11, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %11, align 8
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i32
  %54 = sub nsw i32 %49, %53
  %55 = and i32 %54, 255
  %56 = trunc i32 %55 to i8
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %10, align 8
  store i8 %56, i8* %57, align 1
  %59 = zext i8 %56 to i32
  store i32 %59, i32* %16, align 4
  %60 = load i32, i32* %16, align 4
  %61 = icmp ult i32 %60, 128
  br i1 %61, label %62, label %64

62:                                               ; preds = %45
  %63 = load i32, i32* %16, align 4
  br label %67

64:                                               ; preds = %45
  %65 = load i32, i32* %16, align 4
  %66 = sub i32 256, %65
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i32 [ %63, %62 ], [ %66, %64 ]
  %69 = zext i32 %68 to i64
  %70 = load i64, i64* %15, align 8
  %71 = add i64 %70, %69
  store i64 %71, i64* %15, align 8
  br label %72

72:                                               ; preds = %67
  %73 = load i64, i64* %14, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %14, align 8
  br label %40, !llvm.loop !373

75:                                               ; preds = %40
  %76 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %77 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %76, i32 0, i32 46
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %79, i8** %13, align 8
  %80 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %5, align 8
  %81 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %80, i32 0, i32 45
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  store i8* %83, i8** %12, align 8
  br label %84

84:                                               ; preds = %189, %75
  %85 = load i64, i64* %14, align 8
  %86 = load i64, i64* %7, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %88, label %192

88:                                               ; preds = %84
  %89 = load i8*, i8** %11, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %11, align 8
  %91 = load i8, i8* %89, align 1
  %92 = zext i8 %91 to i32
  store i32 %92, i32* %18, align 4
  %93 = load i8*, i8** %12, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %94, i8** %12, align 8
  %95 = load i8, i8* %93, align 1
  %96 = zext i8 %95 to i32
  store i32 %96, i32* %19, align 4
  %97 = load i8*, i8** %13, align 8
  %98 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %98, i8** %13, align 8
  %99 = load i8, i8* %97, align 1
  %100 = zext i8 %99 to i32
  store i32 %100, i32* %17, align 4
  %101 = load i32, i32* %18, align 4
  %102 = load i32, i32* %19, align 4
  %103 = sub nsw i32 %101, %102
  store i32 %103, i32* %23, align 4
  %104 = load i32, i32* %17, align 4
  %105 = load i32, i32* %19, align 4
  %106 = sub nsw i32 %104, %105
  store i32 %106, i32* %22, align 4
  %107 = load i32, i32* %23, align 4
  %108 = icmp slt i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %88
  %110 = load i32, i32* %23, align 4
  %111 = sub nsw i32 0, %110
  br label %114

112:                                              ; preds = %88
  %113 = load i32, i32* %23, align 4
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi i32 [ %111, %109 ], [ %113, %112 ]
  store i32 %115, i32* %20, align 4
  %116 = load i32, i32* %22, align 4
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %114
  %119 = load i32, i32* %22, align 4
  %120 = sub nsw i32 0, %119
  br label %123

121:                                              ; preds = %114
  %122 = load i32, i32* %22, align 4
  br label %123

123:                                              ; preds = %121, %118
  %124 = phi i32 [ %120, %118 ], [ %122, %121 ]
  store i32 %124, i32* %21, align 4
  %125 = load i32, i32* %23, align 4
  %126 = load i32, i32* %22, align 4
  %127 = add nsw i32 %125, %126
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %129, label %134

129:                                              ; preds = %123
  %130 = load i32, i32* %23, align 4
  %131 = load i32, i32* %22, align 4
  %132 = add nsw i32 %130, %131
  %133 = sub nsw i32 0, %132
  br label %138

134:                                              ; preds = %123
  %135 = load i32, i32* %23, align 4
  %136 = load i32, i32* %22, align 4
  %137 = add nsw i32 %135, %136
  br label %138

138:                                              ; preds = %134, %129
  %139 = phi i32 [ %133, %129 ], [ %137, %134 ]
  store i32 %139, i32* %22, align 4
  %140 = load i32, i32* %20, align 4
  %141 = load i32, i32* %21, align 4
  %142 = icmp sle i32 %140, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = load i32, i32* %20, align 4
  %145 = load i32, i32* %22, align 4
  %146 = icmp sle i32 %144, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %143
  %148 = load i32, i32* %17, align 4
  br label %159

149:                                              ; preds = %143, %138
  %150 = load i32, i32* %21, align 4
  %151 = load i32, i32* %22, align 4
  %152 = icmp sle i32 %150, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = load i32, i32* %18, align 4
  br label %157

155:                                              ; preds = %149
  %156 = load i32, i32* %19, align 4
  br label %157

157:                                              ; preds = %155, %153
  %158 = phi i32 [ %154, %153 ], [ %156, %155 ]
  br label %159

159:                                              ; preds = %157, %147
  %160 = phi i32 [ %148, %147 ], [ %158, %157 ]
  store i32 %160, i32* %23, align 4
  %161 = load i8*, i8** %9, align 8
  %162 = getelementptr inbounds i8, i8* %161, i32 1
  store i8* %162, i8** %9, align 8
  %163 = load i8, i8* %161, align 1
  %164 = zext i8 %163 to i32
  %165 = load i32, i32* %23, align 4
  %166 = sub nsw i32 %164, %165
  %167 = and i32 %166, 255
  %168 = trunc i32 %167 to i8
  %169 = load i8*, i8** %10, align 8
  %170 = getelementptr inbounds i8, i8* %169, i32 1
  store i8* %170, i8** %10, align 8
  store i8 %168, i8* %169, align 1
  %171 = zext i8 %168 to i32
  store i32 %171, i32* %16, align 4
  %172 = load i32, i32* %16, align 4
  %173 = icmp ult i32 %172, 128
  br i1 %173, label %174, label %176

174:                                              ; preds = %159
  %175 = load i32, i32* %16, align 4
  br label %179

176:                                              ; preds = %159
  %177 = load i32, i32* %16, align 4
  %178 = sub i32 256, %177
  br label %179

179:                                              ; preds = %176, %174
  %180 = phi i32 [ %175, %174 ], [ %178, %176 ]
  %181 = zext i32 %180 to i64
  %182 = load i64, i64* %15, align 8
  %183 = add i64 %182, %181
  store i64 %183, i64* %15, align 8
  %184 = load i64, i64* %15, align 8
  %185 = load i64, i64* %8, align 8
  %186 = icmp ugt i64 %184, %185
  br i1 %186, label %187, label %188

187:                                              ; preds = %179
  br label %192

188:                                              ; preds = %179
  br label %189

189:                                              ; preds = %188
  %190 = load i64, i64* %14, align 8
  %191 = add i64 %190, 1
  store i64 %191, i64* %14, align 8
  br label %84, !llvm.loop !374

192:                                              ; preds = %187, %84
  %193 = load i64, i64* %15, align 8
  ret i64 %193
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @png_write_filtered_row(%struct.png_struct_def.62* noalias noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.png_struct_def.62*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store %struct.png_struct_def.62* %0, %struct.png_struct_def.62** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @png_compress_IDAT(%struct.png_struct_def.62* noundef %8, i8* noundef %9, i64 noundef %10, i32 noundef 0)
  %11 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %12 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %11, i32 0, i32 45
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %27

15:                                               ; preds = %3
  %16 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %17 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %16, i32 0, i32 45
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %7, align 8
  %19 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %20 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %19, i32 0, i32 46
  %21 = load i8*, i8** %20, align 8
  %22 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %23 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %22, i32 0, i32 45
  store i8* %21, i8** %23, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %26 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %25, i32 0, i32 46
  store i8* %24, i8** %26, align 8
  br label %27

27:                                               ; preds = %15, %3
  %28 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void @png_write_finish_row(%struct.png_struct_def.62* noundef %28)
  %29 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %30 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %29, i32 0, i32 78
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 4
  %33 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %34 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %33, i32 0, i32 77
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %27
  %38 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %39 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %38, i32 0, i32 78
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  %42 = getelementptr inbounds %struct.png_struct_def.62, %struct.png_struct_def.62* %41, i32 0, i32 77
  %43 = load i32, i32* %42, align 8
  %44 = icmp uge i32 %40, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load %struct.png_struct_def.62*, %struct.png_struct_def.62** %4, align 8
  call void bitcast (void (%struct.png_struct_def*)* @png_write_flush to void (%struct.png_struct_def.62*)*)(%struct.png_struct_def.62* noundef %46)
  br label %47

47:                                               ; preds = %45, %37, %27
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_init_filter_functions_sse2(%struct.png_struct_def* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.png_struct_def*, align 8
  %4 = alloca i32, align 4
  store %struct.png_struct_def* %0, %struct.png_struct_def** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 144
  %10 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %9, i64 0, i64 0
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_sub3_sse2, void (%struct.png_row_info_struct*, i8*, i8*)** %10, align 8
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 144
  %13 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %12, i64 0, i64 2
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_avg3_sse2, void (%struct.png_row_info_struct*, i8*, i8*)** %13, align 8
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 144
  %16 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %15, i64 0, i64 3
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_paeth3_sse2, void (%struct.png_row_info_struct*, i8*, i8*)** %16, align 8
  br label %31

17:                                               ; preds = %2
  %18 = load i32, i32* %4, align 4
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %30

20:                                               ; preds = %17
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 144
  %23 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %22, i64 0, i64 0
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_sub4_sse2, void (%struct.png_row_info_struct*, i8*, i8*)** %23, align 8
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 144
  %26 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %25, i64 0, i64 2
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_avg4_sse2, void (%struct.png_row_info_struct*, i8*, i8*)** %26, align 8
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 144
  %29 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %28, i64 0, i64 3
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_paeth4_sse2, void (%struct.png_row_info_struct*, i8*, i8*)** %29, align 8
  br label %30

30:                                               ; preds = %20, %17
  br label %31

31:                                               ; preds = %30, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row_sub3_sse2(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #11 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca %struct.png_row_info_struct*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca <2 x i64>, align 16
  %14 = alloca <2 x i64>, align 16
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %9, align 8
  store i8* %1, i8** %10, align 8
  store i8* %2, i8** %11, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %8, align 16
  %15 = load <2 x i64>, <2 x i64>* %8, align 16
  store <2 x i64> %15, <2 x i64>* %14, align 16
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %9, align 8
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %12, align 8
  br label %19

19:                                               ; preds = %22, %3
  %20 = load i64, i64* %12, align 8
  %21 = icmp uge i64 %20, 4
  br i1 %21, label %22, label %40

22:                                               ; preds = %19
  %23 = load <2 x i64>, <2 x i64>* %14, align 16
  store <2 x i64> %23, <2 x i64>* %13, align 16
  %24 = load i8*, i8** %10, align 8
  %25 = call <2 x i64> @load4(i8* noundef %24)
  store <2 x i64> %25, <2 x i64>* %14, align 16
  %26 = load <2 x i64>, <2 x i64>* %14, align 16
  %27 = load <2 x i64>, <2 x i64>* %13, align 16
  store <2 x i64> %26, <2 x i64>* %4, align 16
  store <2 x i64> %27, <2 x i64>* %5, align 16
  %28 = load <2 x i64>, <2 x i64>* %4, align 16
  %29 = bitcast <2 x i64> %28 to <16 x i8>
  %30 = load <2 x i64>, <2 x i64>* %5, align 16
  %31 = bitcast <2 x i64> %30 to <16 x i8>
  %32 = add <16 x i8> %29, %31
  %33 = bitcast <16 x i8> %32 to <2 x i64>
  store <2 x i64> %33, <2 x i64>* %14, align 16
  %34 = load i8*, i8** %10, align 8
  %35 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @store3(i8* noundef %34, <2 x i64> noundef %35)
  %36 = load i8*, i8** %10, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 3
  store i8* %37, i8** %10, align 8
  %38 = load i64, i64* %12, align 8
  %39 = sub i64 %38, 3
  store i64 %39, i64* %12, align 8
  br label %19, !llvm.loop !375

40:                                               ; preds = %19
  %41 = load i64, i64* %12, align 8
  %42 = icmp ugt i64 %41, 0
  br i1 %42, label %43, label %61

43:                                               ; preds = %40
  %44 = load <2 x i64>, <2 x i64>* %14, align 16
  store <2 x i64> %44, <2 x i64>* %13, align 16
  %45 = load i8*, i8** %10, align 8
  %46 = call <2 x i64> @load3(i8* noundef %45)
  store <2 x i64> %46, <2 x i64>* %14, align 16
  %47 = load <2 x i64>, <2 x i64>* %14, align 16
  %48 = load <2 x i64>, <2 x i64>* %13, align 16
  store <2 x i64> %47, <2 x i64>* %6, align 16
  store <2 x i64> %48, <2 x i64>* %7, align 16
  %49 = load <2 x i64>, <2 x i64>* %6, align 16
  %50 = bitcast <2 x i64> %49 to <16 x i8>
  %51 = load <2 x i64>, <2 x i64>* %7, align 16
  %52 = bitcast <2 x i64> %51 to <16 x i8>
  %53 = add <16 x i8> %50, %52
  %54 = bitcast <16 x i8> %53 to <2 x i64>
  store <2 x i64> %54, <2 x i64>* %14, align 16
  %55 = load i8*, i8** %10, align 8
  %56 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @store3(i8* noundef %55, <2 x i64> noundef %56)
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 3
  store i8* %58, i8** %10, align 8
  %59 = load i64, i64* %12, align 8
  %60 = sub i64 %59, 3
  store i64 %60, i64* %12, align 8
  br label %61

61:                                               ; preds = %43, %40
  %62 = load i8*, i8** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal <2 x i64> @load4(i8* noundef %0) #11 {
  %2 = alloca i32, align 4
  %3 = alloca <4 x i32>, align 16
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = load i8*, i8** %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 1 %7, i64 4, i1 false)
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %2, align 4
  %9 = load i32, i32* %2, align 4
  %10 = insertelement <4 x i32> undef, i32 %9, i32 0
  %11 = insertelement <4 x i32> %10, i32 0, i32 1
  %12 = insertelement <4 x i32> %11, i32 0, i32 2
  %13 = insertelement <4 x i32> %12, i32 0, i32 3
  store <4 x i32> %13, <4 x i32>* %3, align 16
  %14 = load <4 x i32>, <4 x i32>* %3, align 16
  %15 = bitcast <4 x i32> %14 to <2 x i64>
  ret <2 x i64> %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @store3(i8* noundef %0, <2 x i64> noundef %1) #11 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <4 x i32>, align 16
  %5 = alloca i8*, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store <2 x i64> %1, <2 x i64>* %6, align 16
  %8 = load <2 x i64>, <2 x i64>* %6, align 16
  store <2 x i64> %8, <2 x i64>* %3, align 16
  %9 = load <2 x i64>, <2 x i64>* %3, align 16
  %10 = bitcast <2 x i64> %9 to <4 x i32>
  store <4 x i32> %10, <4 x i32>* %4, align 16
  %11 = load <4 x i32>, <4 x i32>* %4, align 16
  %12 = extractelement <4 x i32> %11, i32 0
  store i32 %12, i32* %7, align 4
  %13 = load i8*, i8** %5, align 8
  %14 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 4 %14, i64 3, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal <2 x i64> @load3(i8* noundef %0) #11 {
  %2 = alloca i32, align 4
  %3 = alloca <4 x i32>, align 16
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 0, i32* %5, align 4
  %6 = bitcast i32* %5 to i8*
  %7 = load i8*, i8** %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 1 %7, i64 3, i1 false)
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %2, align 4
  %9 = load i32, i32* %2, align 4
  %10 = insertelement <4 x i32> undef, i32 %9, i32 0
  %11 = insertelement <4 x i32> %10, i32 0, i32 1
  %12 = insertelement <4 x i32> %11, i32 0, i32 2
  %13 = insertelement <4 x i32> %12, i32 0, i32 3
  store <4 x i32> %13, <4 x i32>* %3, align 16
  %14 = load <4 x i32>, <4 x i32>* %3, align 16
  %15 = bitcast <4 x i32> %14 to <2 x i64>
  ret <2 x i64> %15
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row_sub4_sse2(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #11 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca %struct.png_row_info_struct*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %6, align 16
  %13 = load <2 x i64>, <2 x i64>* %6, align 16
  store <2 x i64> %13, <2 x i64>* %12, align 16
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %7, align 8
  %15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 4
  store i64 %17, i64* %10, align 8
  br label %18

18:                                               ; preds = %21, %3
  %19 = load i64, i64* %10, align 8
  %20 = icmp ugt i64 %19, 4
  br i1 %20, label %21, label %39

21:                                               ; preds = %18
  %22 = load <2 x i64>, <2 x i64>* %12, align 16
  store <2 x i64> %22, <2 x i64>* %11, align 16
  %23 = load i8*, i8** %8, align 8
  %24 = call <2 x i64> @load4(i8* noundef %23)
  store <2 x i64> %24, <2 x i64>* %12, align 16
  %25 = load <2 x i64>, <2 x i64>* %12, align 16
  %26 = load <2 x i64>, <2 x i64>* %11, align 16
  store <2 x i64> %25, <2 x i64>* %4, align 16
  store <2 x i64> %26, <2 x i64>* %5, align 16
  %27 = load <2 x i64>, <2 x i64>* %4, align 16
  %28 = bitcast <2 x i64> %27 to <16 x i8>
  %29 = load <2 x i64>, <2 x i64>* %5, align 16
  %30 = bitcast <2 x i64> %29 to <16 x i8>
  %31 = add <16 x i8> %28, %30
  %32 = bitcast <16 x i8> %31 to <2 x i64>
  store <2 x i64> %32, <2 x i64>* %12, align 16
  %33 = load i8*, i8** %8, align 8
  %34 = load <2 x i64>, <2 x i64>* %12, align 16
  call void @store4(i8* noundef %33, <2 x i64> noundef %34)
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %36, i8** %8, align 8
  %37 = load i64, i64* %10, align 8
  %38 = sub i64 %37, 4
  store i64 %38, i64* %10, align 8
  br label %18, !llvm.loop !376

39:                                               ; preds = %18
  %40 = load i8*, i8** %9, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @store4(i8* noundef %0, <2 x i64> noundef %1) #11 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <4 x i32>, align 16
  %5 = alloca i8*, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store <2 x i64> %1, <2 x i64>* %6, align 16
  %8 = load <2 x i64>, <2 x i64>* %6, align 16
  store <2 x i64> %8, <2 x i64>* %3, align 16
  %9 = load <2 x i64>, <2 x i64>* %3, align 16
  %10 = bitcast <2 x i64> %9 to <4 x i32>
  store <4 x i32> %10, <4 x i32>* %4, align 16
  %11 = load <4 x i32>, <4 x i32>* %4, align 16
  %12 = extractelement <4 x i32> %11, i32 0
  store i32 %12, i32* %7, align 4
  %13 = load i8*, i8** %5, align 8
  %14 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 4 %14, i64 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row_avg3_sse2(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #11 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca <16 x i8>, align 16
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca <16 x i8>, align 16
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca <2 x i64>, align 16
  %41 = alloca <2 x i64>, align 16
  %42 = alloca <2 x i64>, align 16
  %43 = alloca <2 x i64>, align 16
  %44 = alloca <2 x i64>, align 16
  %45 = alloca <2 x i64>, align 16
  %46 = alloca <2 x i64>, align 16
  %47 = alloca <2 x i64>, align 16
  %48 = alloca <2 x i64>, align 16
  %49 = alloca <2 x i64>, align 16
  %50 = alloca <2 x i64>, align 16
  %51 = alloca <2 x i64>, align 16
  %52 = alloca <2 x i64>, align 16
  %53 = alloca <2 x i64>, align 16
  %54 = alloca <2 x i64>, align 16
  %55 = alloca <2 x i64>, align 16
  %56 = alloca <2 x i64>, align 16
  %57 = alloca <2 x i64>, align 16
  %58 = alloca <2 x i64>, align 16
  %59 = alloca <2 x i64>, align 16
  %60 = alloca <2 x i64>, align 16
  %61 = alloca %struct.png_row_info_struct*, align 8
  %62 = alloca i8*, align 8
  %63 = alloca i8*, align 8
  %64 = alloca i64, align 8
  %65 = alloca <2 x i64>, align 16
  %66 = alloca <2 x i64>, align 16
  %67 = alloca <2 x i64>, align 16
  %68 = alloca <2 x i64>, align 16
  %69 = alloca <2 x i64>, align 16
  %70 = alloca <2 x i64>, align 16
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %61, align 8
  store i8* %1, i8** %62, align 8
  store i8* %2, i8** %63, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %60, align 16
  %71 = load <2 x i64>, <2 x i64>* %60, align 16
  store <2 x i64> %71, <2 x i64>* %65, align 16
  %72 = load <2 x i64>, <2 x i64>* %65, align 16
  store <2 x i64> %72, <2 x i64>* %68, align 16
  %73 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %61, align 8
  %74 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %73, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %64, align 8
  br label %76

76:                                               ; preds = %79, %3
  %77 = load i64, i64* %64, align 8
  %78 = icmp uge i64 %77, 4
  br i1 %78, label %79, label %174

79:                                               ; preds = %76
  %80 = load i8*, i8** %63, align 8
  %81 = call <2 x i64> @load4(i8* noundef %80)
  store <2 x i64> %81, <2 x i64>* %66, align 16
  %82 = load <2 x i64>, <2 x i64>* %68, align 16
  store <2 x i64> %82, <2 x i64>* %67, align 16
  %83 = load i8*, i8** %62, align 8
  %84 = call <2 x i64> @load4(i8* noundef %83)
  store <2 x i64> %84, <2 x i64>* %68, align 16
  %85 = load <2 x i64>, <2 x i64>* %67, align 16
  %86 = load <2 x i64>, <2 x i64>* %66, align 16
  store <2 x i64> %85, <2 x i64>* %52, align 16
  store <2 x i64> %86, <2 x i64>* %53, align 16
  %87 = load <2 x i64>, <2 x i64>* %52, align 16
  %88 = bitcast <2 x i64> %87 to <16 x i8>
  %89 = load <2 x i64>, <2 x i64>* %53, align 16
  %90 = bitcast <2 x i64> %89 to <16 x i8>
  %91 = call <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8> %88, <16 x i8> %90) #16
  %92 = bitcast <16 x i8> %91 to <2 x i64>
  store <2 x i64> %92, <2 x i64>* %69, align 16
  %93 = load <2 x i64>, <2 x i64>* %69, align 16
  %94 = load <2 x i64>, <2 x i64>* %67, align 16
  %95 = load <2 x i64>, <2 x i64>* %66, align 16
  store <2 x i64> %94, <2 x i64>* %40, align 16
  store <2 x i64> %95, <2 x i64>* %41, align 16
  %96 = load <2 x i64>, <2 x i64>* %40, align 16
  %97 = load <2 x i64>, <2 x i64>* %41, align 16
  %98 = xor <2 x i64> %96, %97
  store i8 1, i8* %38, align 1
  %99 = load i8, i8* %38, align 1
  %100 = load i8, i8* %38, align 1
  %101 = load i8, i8* %38, align 1
  %102 = load i8, i8* %38, align 1
  %103 = load i8, i8* %38, align 1
  %104 = load i8, i8* %38, align 1
  %105 = load i8, i8* %38, align 1
  %106 = load i8, i8* %38, align 1
  %107 = load i8, i8* %38, align 1
  %108 = load i8, i8* %38, align 1
  %109 = load i8, i8* %38, align 1
  %110 = load i8, i8* %38, align 1
  %111 = load i8, i8* %38, align 1
  %112 = load i8, i8* %38, align 1
  %113 = load i8, i8* %38, align 1
  %114 = load i8, i8* %38, align 1
  store i8 %99, i8* %21, align 1
  store i8 %100, i8* %22, align 1
  store i8 %101, i8* %23, align 1
  store i8 %102, i8* %24, align 1
  store i8 %103, i8* %25, align 1
  store i8 %104, i8* %26, align 1
  store i8 %105, i8* %27, align 1
  store i8 %106, i8* %28, align 1
  store i8 %107, i8* %29, align 1
  store i8 %108, i8* %30, align 1
  store i8 %109, i8* %31, align 1
  store i8 %110, i8* %32, align 1
  store i8 %111, i8* %33, align 1
  store i8 %112, i8* %34, align 1
  store i8 %113, i8* %35, align 1
  store i8 %114, i8* %36, align 1
  %115 = load i8, i8* %36, align 1
  %116 = insertelement <16 x i8> undef, i8 %115, i32 0
  %117 = load i8, i8* %35, align 1
  %118 = insertelement <16 x i8> %116, i8 %117, i32 1
  %119 = load i8, i8* %34, align 1
  %120 = insertelement <16 x i8> %118, i8 %119, i32 2
  %121 = load i8, i8* %33, align 1
  %122 = insertelement <16 x i8> %120, i8 %121, i32 3
  %123 = load i8, i8* %32, align 1
  %124 = insertelement <16 x i8> %122, i8 %123, i32 4
  %125 = load i8, i8* %31, align 1
  %126 = insertelement <16 x i8> %124, i8 %125, i32 5
  %127 = load i8, i8* %30, align 1
  %128 = insertelement <16 x i8> %126, i8 %127, i32 6
  %129 = load i8, i8* %29, align 1
  %130 = insertelement <16 x i8> %128, i8 %129, i32 7
  %131 = load i8, i8* %28, align 1
  %132 = insertelement <16 x i8> %130, i8 %131, i32 8
  %133 = load i8, i8* %27, align 1
  %134 = insertelement <16 x i8> %132, i8 %133, i32 9
  %135 = load i8, i8* %26, align 1
  %136 = insertelement <16 x i8> %134, i8 %135, i32 10
  %137 = load i8, i8* %25, align 1
  %138 = insertelement <16 x i8> %136, i8 %137, i32 11
  %139 = load i8, i8* %24, align 1
  %140 = insertelement <16 x i8> %138, i8 %139, i32 12
  %141 = load i8, i8* %23, align 1
  %142 = insertelement <16 x i8> %140, i8 %141, i32 13
  %143 = load i8, i8* %22, align 1
  %144 = insertelement <16 x i8> %142, i8 %143, i32 14
  %145 = load i8, i8* %21, align 1
  %146 = insertelement <16 x i8> %144, i8 %145, i32 15
  store <16 x i8> %146, <16 x i8>* %37, align 16
  %147 = load <16 x i8>, <16 x i8>* %37, align 16
  %148 = bitcast <16 x i8> %147 to <2 x i64>
  store <2 x i64> %98, <2 x i64>* %44, align 16
  store <2 x i64> %148, <2 x i64>* %45, align 16
  %149 = load <2 x i64>, <2 x i64>* %44, align 16
  %150 = load <2 x i64>, <2 x i64>* %45, align 16
  %151 = and <2 x i64> %149, %150
  store <2 x i64> %93, <2 x i64>* %48, align 16
  store <2 x i64> %151, <2 x i64>* %49, align 16
  %152 = load <2 x i64>, <2 x i64>* %48, align 16
  %153 = bitcast <2 x i64> %152 to <16 x i8>
  %154 = load <2 x i64>, <2 x i64>* %49, align 16
  %155 = bitcast <2 x i64> %154 to <16 x i8>
  %156 = sub <16 x i8> %153, %155
  %157 = bitcast <16 x i8> %156 to <2 x i64>
  store <2 x i64> %157, <2 x i64>* %69, align 16
  %158 = load <2 x i64>, <2 x i64>* %68, align 16
  %159 = load <2 x i64>, <2 x i64>* %69, align 16
  store <2 x i64> %158, <2 x i64>* %56, align 16
  store <2 x i64> %159, <2 x i64>* %57, align 16
  %160 = load <2 x i64>, <2 x i64>* %56, align 16
  %161 = bitcast <2 x i64> %160 to <16 x i8>
  %162 = load <2 x i64>, <2 x i64>* %57, align 16
  %163 = bitcast <2 x i64> %162 to <16 x i8>
  %164 = add <16 x i8> %161, %163
  %165 = bitcast <16 x i8> %164 to <2 x i64>
  store <2 x i64> %165, <2 x i64>* %68, align 16
  %166 = load i8*, i8** %62, align 8
  %167 = load <2 x i64>, <2 x i64>* %68, align 16
  call void @store3(i8* noundef %166, <2 x i64> noundef %167)
  %168 = load i8*, i8** %63, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 3
  store i8* %169, i8** %63, align 8
  %170 = load i8*, i8** %62, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 3
  store i8* %171, i8** %62, align 8
  %172 = load i64, i64* %64, align 8
  %173 = sub i64 %172, 3
  store i64 %173, i64* %64, align 8
  br label %76, !llvm.loop !377

174:                                              ; preds = %76
  %175 = load i64, i64* %64, align 8
  %176 = icmp ugt i64 %175, 0
  br i1 %176, label %177, label %272

177:                                              ; preds = %174
  %178 = load i8*, i8** %63, align 8
  %179 = call <2 x i64> @load3(i8* noundef %178)
  store <2 x i64> %179, <2 x i64>* %66, align 16
  %180 = load <2 x i64>, <2 x i64>* %68, align 16
  store <2 x i64> %180, <2 x i64>* %67, align 16
  %181 = load i8*, i8** %62, align 8
  %182 = call <2 x i64> @load3(i8* noundef %181)
  store <2 x i64> %182, <2 x i64>* %68, align 16
  %183 = load <2 x i64>, <2 x i64>* %67, align 16
  %184 = load <2 x i64>, <2 x i64>* %66, align 16
  store <2 x i64> %183, <2 x i64>* %54, align 16
  store <2 x i64> %184, <2 x i64>* %55, align 16
  %185 = load <2 x i64>, <2 x i64>* %54, align 16
  %186 = bitcast <2 x i64> %185 to <16 x i8>
  %187 = load <2 x i64>, <2 x i64>* %55, align 16
  %188 = bitcast <2 x i64> %187 to <16 x i8>
  %189 = call <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8> %186, <16 x i8> %188) #16
  %190 = bitcast <16 x i8> %189 to <2 x i64>
  store <2 x i64> %190, <2 x i64>* %70, align 16
  %191 = load <2 x i64>, <2 x i64>* %70, align 16
  %192 = load <2 x i64>, <2 x i64>* %67, align 16
  %193 = load <2 x i64>, <2 x i64>* %66, align 16
  store <2 x i64> %192, <2 x i64>* %42, align 16
  store <2 x i64> %193, <2 x i64>* %43, align 16
  %194 = load <2 x i64>, <2 x i64>* %42, align 16
  %195 = load <2 x i64>, <2 x i64>* %43, align 16
  %196 = xor <2 x i64> %194, %195
  store i8 1, i8* %39, align 1
  %197 = load i8, i8* %39, align 1
  %198 = load i8, i8* %39, align 1
  %199 = load i8, i8* %39, align 1
  %200 = load i8, i8* %39, align 1
  %201 = load i8, i8* %39, align 1
  %202 = load i8, i8* %39, align 1
  %203 = load i8, i8* %39, align 1
  %204 = load i8, i8* %39, align 1
  %205 = load i8, i8* %39, align 1
  %206 = load i8, i8* %39, align 1
  %207 = load i8, i8* %39, align 1
  %208 = load i8, i8* %39, align 1
  %209 = load i8, i8* %39, align 1
  %210 = load i8, i8* %39, align 1
  %211 = load i8, i8* %39, align 1
  %212 = load i8, i8* %39, align 1
  store i8 %197, i8* %4, align 1
  store i8 %198, i8* %5, align 1
  store i8 %199, i8* %6, align 1
  store i8 %200, i8* %7, align 1
  store i8 %201, i8* %8, align 1
  store i8 %202, i8* %9, align 1
  store i8 %203, i8* %10, align 1
  store i8 %204, i8* %11, align 1
  store i8 %205, i8* %12, align 1
  store i8 %206, i8* %13, align 1
  store i8 %207, i8* %14, align 1
  store i8 %208, i8* %15, align 1
  store i8 %209, i8* %16, align 1
  store i8 %210, i8* %17, align 1
  store i8 %211, i8* %18, align 1
  store i8 %212, i8* %19, align 1
  %213 = load i8, i8* %19, align 1
  %214 = insertelement <16 x i8> undef, i8 %213, i32 0
  %215 = load i8, i8* %18, align 1
  %216 = insertelement <16 x i8> %214, i8 %215, i32 1
  %217 = load i8, i8* %17, align 1
  %218 = insertelement <16 x i8> %216, i8 %217, i32 2
  %219 = load i8, i8* %16, align 1
  %220 = insertelement <16 x i8> %218, i8 %219, i32 3
  %221 = load i8, i8* %15, align 1
  %222 = insertelement <16 x i8> %220, i8 %221, i32 4
  %223 = load i8, i8* %14, align 1
  %224 = insertelement <16 x i8> %222, i8 %223, i32 5
  %225 = load i8, i8* %13, align 1
  %226 = insertelement <16 x i8> %224, i8 %225, i32 6
  %227 = load i8, i8* %12, align 1
  %228 = insertelement <16 x i8> %226, i8 %227, i32 7
  %229 = load i8, i8* %11, align 1
  %230 = insertelement <16 x i8> %228, i8 %229, i32 8
  %231 = load i8, i8* %10, align 1
  %232 = insertelement <16 x i8> %230, i8 %231, i32 9
  %233 = load i8, i8* %9, align 1
  %234 = insertelement <16 x i8> %232, i8 %233, i32 10
  %235 = load i8, i8* %8, align 1
  %236 = insertelement <16 x i8> %234, i8 %235, i32 11
  %237 = load i8, i8* %7, align 1
  %238 = insertelement <16 x i8> %236, i8 %237, i32 12
  %239 = load i8, i8* %6, align 1
  %240 = insertelement <16 x i8> %238, i8 %239, i32 13
  %241 = load i8, i8* %5, align 1
  %242 = insertelement <16 x i8> %240, i8 %241, i32 14
  %243 = load i8, i8* %4, align 1
  %244 = insertelement <16 x i8> %242, i8 %243, i32 15
  store <16 x i8> %244, <16 x i8>* %20, align 16
  %245 = load <16 x i8>, <16 x i8>* %20, align 16
  %246 = bitcast <16 x i8> %245 to <2 x i64>
  store <2 x i64> %196, <2 x i64>* %46, align 16
  store <2 x i64> %246, <2 x i64>* %47, align 16
  %247 = load <2 x i64>, <2 x i64>* %46, align 16
  %248 = load <2 x i64>, <2 x i64>* %47, align 16
  %249 = and <2 x i64> %247, %248
  store <2 x i64> %191, <2 x i64>* %50, align 16
  store <2 x i64> %249, <2 x i64>* %51, align 16
  %250 = load <2 x i64>, <2 x i64>* %50, align 16
  %251 = bitcast <2 x i64> %250 to <16 x i8>
  %252 = load <2 x i64>, <2 x i64>* %51, align 16
  %253 = bitcast <2 x i64> %252 to <16 x i8>
  %254 = sub <16 x i8> %251, %253
  %255 = bitcast <16 x i8> %254 to <2 x i64>
  store <2 x i64> %255, <2 x i64>* %70, align 16
  %256 = load <2 x i64>, <2 x i64>* %68, align 16
  %257 = load <2 x i64>, <2 x i64>* %70, align 16
  store <2 x i64> %256, <2 x i64>* %58, align 16
  store <2 x i64> %257, <2 x i64>* %59, align 16
  %258 = load <2 x i64>, <2 x i64>* %58, align 16
  %259 = bitcast <2 x i64> %258 to <16 x i8>
  %260 = load <2 x i64>, <2 x i64>* %59, align 16
  %261 = bitcast <2 x i64> %260 to <16 x i8>
  %262 = add <16 x i8> %259, %261
  %263 = bitcast <16 x i8> %262 to <2 x i64>
  store <2 x i64> %263, <2 x i64>* %68, align 16
  %264 = load i8*, i8** %62, align 8
  %265 = load <2 x i64>, <2 x i64>* %68, align 16
  call void @store3(i8* noundef %264, <2 x i64> noundef %265)
  %266 = load i8*, i8** %63, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 3
  store i8* %267, i8** %63, align 8
  %268 = load i8*, i8** %62, align 8
  %269 = getelementptr inbounds i8, i8* %268, i64 3
  store i8* %269, i8** %62, align 8
  %270 = load i64, i64* %64, align 8
  %271 = sub i64 %270, 3
  store i64 %271, i64* %64, align 8
  br label %272

272:                                              ; preds = %177, %174
  ret void
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8>, <16 x i8>) #12

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row_avg4_sse2(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #11 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca <16 x i8>, align 16
  %21 = alloca i8, align 1
  %22 = alloca <2 x i64>, align 16
  %23 = alloca <2 x i64>, align 16
  %24 = alloca <2 x i64>, align 16
  %25 = alloca <2 x i64>, align 16
  %26 = alloca <2 x i64>, align 16
  %27 = alloca <2 x i64>, align 16
  %28 = alloca <2 x i64>, align 16
  %29 = alloca <2 x i64>, align 16
  %30 = alloca <2 x i64>, align 16
  %31 = alloca <2 x i64>, align 16
  %32 = alloca <2 x i64>, align 16
  %33 = alloca %struct.png_row_info_struct*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i64, align 8
  %37 = alloca <2 x i64>, align 16
  %38 = alloca <2 x i64>, align 16
  %39 = alloca <2 x i64>, align 16
  %40 = alloca <2 x i64>, align 16
  %41 = alloca <2 x i64>, align 16
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %33, align 8
  store i8* %1, i8** %34, align 8
  store i8* %2, i8** %35, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %32, align 16
  %42 = load <2 x i64>, <2 x i64>* %32, align 16
  store <2 x i64> %42, <2 x i64>* %37, align 16
  %43 = load <2 x i64>, <2 x i64>* %37, align 16
  store <2 x i64> %43, <2 x i64>* %40, align 16
  %44 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %33, align 8
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %44, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 4
  store i64 %47, i64* %36, align 8
  br label %48

48:                                               ; preds = %51, %3
  %49 = load i64, i64* %36, align 8
  %50 = icmp ugt i64 %49, 4
  br i1 %50, label %51, label %146

51:                                               ; preds = %48
  %52 = load i8*, i8** %35, align 8
  %53 = call <2 x i64> @load4(i8* noundef %52)
  store <2 x i64> %53, <2 x i64>* %38, align 16
  %54 = load <2 x i64>, <2 x i64>* %40, align 16
  store <2 x i64> %54, <2 x i64>* %39, align 16
  %55 = load i8*, i8** %34, align 8
  %56 = call <2 x i64> @load4(i8* noundef %55)
  store <2 x i64> %56, <2 x i64>* %40, align 16
  %57 = load <2 x i64>, <2 x i64>* %39, align 16
  %58 = load <2 x i64>, <2 x i64>* %38, align 16
  store <2 x i64> %57, <2 x i64>* %28, align 16
  store <2 x i64> %58, <2 x i64>* %29, align 16
  %59 = load <2 x i64>, <2 x i64>* %28, align 16
  %60 = bitcast <2 x i64> %59 to <16 x i8>
  %61 = load <2 x i64>, <2 x i64>* %29, align 16
  %62 = bitcast <2 x i64> %61 to <16 x i8>
  %63 = call <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8> %60, <16 x i8> %62) #16
  %64 = bitcast <16 x i8> %63 to <2 x i64>
  store <2 x i64> %64, <2 x i64>* %41, align 16
  %65 = load <2 x i64>, <2 x i64>* %41, align 16
  %66 = load <2 x i64>, <2 x i64>* %39, align 16
  %67 = load <2 x i64>, <2 x i64>* %38, align 16
  store <2 x i64> %66, <2 x i64>* %22, align 16
  store <2 x i64> %67, <2 x i64>* %23, align 16
  %68 = load <2 x i64>, <2 x i64>* %22, align 16
  %69 = load <2 x i64>, <2 x i64>* %23, align 16
  %70 = xor <2 x i64> %68, %69
  store i8 1, i8* %21, align 1
  %71 = load i8, i8* %21, align 1
  %72 = load i8, i8* %21, align 1
  %73 = load i8, i8* %21, align 1
  %74 = load i8, i8* %21, align 1
  %75 = load i8, i8* %21, align 1
  %76 = load i8, i8* %21, align 1
  %77 = load i8, i8* %21, align 1
  %78 = load i8, i8* %21, align 1
  %79 = load i8, i8* %21, align 1
  %80 = load i8, i8* %21, align 1
  %81 = load i8, i8* %21, align 1
  %82 = load i8, i8* %21, align 1
  %83 = load i8, i8* %21, align 1
  %84 = load i8, i8* %21, align 1
  %85 = load i8, i8* %21, align 1
  %86 = load i8, i8* %21, align 1
  store i8 %71, i8* %4, align 1
  store i8 %72, i8* %5, align 1
  store i8 %73, i8* %6, align 1
  store i8 %74, i8* %7, align 1
  store i8 %75, i8* %8, align 1
  store i8 %76, i8* %9, align 1
  store i8 %77, i8* %10, align 1
  store i8 %78, i8* %11, align 1
  store i8 %79, i8* %12, align 1
  store i8 %80, i8* %13, align 1
  store i8 %81, i8* %14, align 1
  store i8 %82, i8* %15, align 1
  store i8 %83, i8* %16, align 1
  store i8 %84, i8* %17, align 1
  store i8 %85, i8* %18, align 1
  store i8 %86, i8* %19, align 1
  %87 = load i8, i8* %19, align 1
  %88 = insertelement <16 x i8> undef, i8 %87, i32 0
  %89 = load i8, i8* %18, align 1
  %90 = insertelement <16 x i8> %88, i8 %89, i32 1
  %91 = load i8, i8* %17, align 1
  %92 = insertelement <16 x i8> %90, i8 %91, i32 2
  %93 = load i8, i8* %16, align 1
  %94 = insertelement <16 x i8> %92, i8 %93, i32 3
  %95 = load i8, i8* %15, align 1
  %96 = insertelement <16 x i8> %94, i8 %95, i32 4
  %97 = load i8, i8* %14, align 1
  %98 = insertelement <16 x i8> %96, i8 %97, i32 5
  %99 = load i8, i8* %13, align 1
  %100 = insertelement <16 x i8> %98, i8 %99, i32 6
  %101 = load i8, i8* %12, align 1
  %102 = insertelement <16 x i8> %100, i8 %101, i32 7
  %103 = load i8, i8* %11, align 1
  %104 = insertelement <16 x i8> %102, i8 %103, i32 8
  %105 = load i8, i8* %10, align 1
  %106 = insertelement <16 x i8> %104, i8 %105, i32 9
  %107 = load i8, i8* %9, align 1
  %108 = insertelement <16 x i8> %106, i8 %107, i32 10
  %109 = load i8, i8* %8, align 1
  %110 = insertelement <16 x i8> %108, i8 %109, i32 11
  %111 = load i8, i8* %7, align 1
  %112 = insertelement <16 x i8> %110, i8 %111, i32 12
  %113 = load i8, i8* %6, align 1
  %114 = insertelement <16 x i8> %112, i8 %113, i32 13
  %115 = load i8, i8* %5, align 1
  %116 = insertelement <16 x i8> %114, i8 %115, i32 14
  %117 = load i8, i8* %4, align 1
  %118 = insertelement <16 x i8> %116, i8 %117, i32 15
  store <16 x i8> %118, <16 x i8>* %20, align 16
  %119 = load <16 x i8>, <16 x i8>* %20, align 16
  %120 = bitcast <16 x i8> %119 to <2 x i64>
  store <2 x i64> %70, <2 x i64>* %24, align 16
  store <2 x i64> %120, <2 x i64>* %25, align 16
  %121 = load <2 x i64>, <2 x i64>* %24, align 16
  %122 = load <2 x i64>, <2 x i64>* %25, align 16
  %123 = and <2 x i64> %121, %122
  store <2 x i64> %65, <2 x i64>* %26, align 16
  store <2 x i64> %123, <2 x i64>* %27, align 16
  %124 = load <2 x i64>, <2 x i64>* %26, align 16
  %125 = bitcast <2 x i64> %124 to <16 x i8>
  %126 = load <2 x i64>, <2 x i64>* %27, align 16
  %127 = bitcast <2 x i64> %126 to <16 x i8>
  %128 = sub <16 x i8> %125, %127
  %129 = bitcast <16 x i8> %128 to <2 x i64>
  store <2 x i64> %129, <2 x i64>* %41, align 16
  %130 = load <2 x i64>, <2 x i64>* %40, align 16
  %131 = load <2 x i64>, <2 x i64>* %41, align 16
  store <2 x i64> %130, <2 x i64>* %30, align 16
  store <2 x i64> %131, <2 x i64>* %31, align 16
  %132 = load <2 x i64>, <2 x i64>* %30, align 16
  %133 = bitcast <2 x i64> %132 to <16 x i8>
  %134 = load <2 x i64>, <2 x i64>* %31, align 16
  %135 = bitcast <2 x i64> %134 to <16 x i8>
  %136 = add <16 x i8> %133, %135
  %137 = bitcast <16 x i8> %136 to <2 x i64>
  store <2 x i64> %137, <2 x i64>* %40, align 16
  %138 = load i8*, i8** %34, align 8
  %139 = load <2 x i64>, <2 x i64>* %40, align 16
  call void @store4(i8* noundef %138, <2 x i64> noundef %139)
  %140 = load i8*, i8** %35, align 8
  %141 = getelementptr inbounds i8, i8* %140, i64 4
  store i8* %141, i8** %35, align 8
  %142 = load i8*, i8** %34, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 4
  store i8* %143, i8** %34, align 8
  %144 = load i64, i64* %36, align 8
  %145 = sub i64 %144, 4
  store i64 %145, i64* %36, align 8
  br label %48, !llvm.loop !378

146:                                              ; preds = %48
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row_paeth3_sse2(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #11 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = alloca <2 x i64>, align 16
  %14 = alloca <2 x i64>, align 16
  %15 = alloca <2 x i64>, align 16
  %16 = alloca <2 x i64>, align 16
  %17 = alloca <2 x i64>, align 16
  %18 = alloca <2 x i64>, align 16
  %19 = alloca <2 x i64>, align 16
  %20 = alloca <2 x i64>, align 16
  %21 = alloca <2 x i64>, align 16
  %22 = alloca <2 x i64>, align 16
  %23 = alloca <2 x i64>, align 16
  %24 = alloca <2 x i64>, align 16
  %25 = alloca <2 x i64>, align 16
  %26 = alloca <2 x i64>, align 16
  %27 = alloca <2 x i64>, align 16
  %28 = alloca <2 x i64>, align 16
  %29 = alloca <2 x i64>, align 16
  %30 = alloca <2 x i64>, align 16
  %31 = alloca <2 x i64>, align 16
  %32 = alloca <2 x i64>, align 16
  %33 = alloca <2 x i64>, align 16
  %34 = alloca <2 x i64>, align 16
  %35 = alloca <2 x i64>, align 16
  %36 = alloca <2 x i64>, align 16
  %37 = alloca <2 x i64>, align 16
  %38 = alloca <2 x i64>, align 16
  %39 = alloca <2 x i64>, align 16
  %40 = alloca <2 x i64>, align 16
  %41 = alloca <2 x i64>, align 16
  %42 = alloca <2 x i64>, align 16
  %43 = alloca <2 x i64>, align 16
  %44 = alloca <2 x i64>, align 16
  %45 = alloca <2 x i64>, align 16
  %46 = alloca <2 x i64>, align 16
  %47 = alloca <2 x i64>, align 16
  %48 = alloca <2 x i64>, align 16
  %49 = alloca %struct.png_row_info_struct*, align 8
  %50 = alloca i8*, align 8
  %51 = alloca i8*, align 8
  %52 = alloca i64, align 8
  %53 = alloca <2 x i64>, align 16
  %54 = alloca <2 x i64>, align 16
  %55 = alloca <2 x i64>, align 16
  %56 = alloca <2 x i64>, align 16
  %57 = alloca <2 x i64>, align 16
  %58 = alloca <2 x i64>, align 16
  %59 = alloca <2 x i64>, align 16
  %60 = alloca <2 x i64>, align 16
  %61 = alloca <2 x i64>, align 16
  %62 = alloca <2 x i64>, align 16
  %63 = alloca <2 x i64>, align 16
  %64 = alloca <2 x i64>, align 16
  %65 = alloca <2 x i64>, align 16
  %66 = alloca <2 x i64>, align 16
  %67 = alloca <2 x i64>, align 16
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %49, align 8
  store i8* %1, i8** %50, align 8
  store i8* %2, i8** %51, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %48, align 16
  %68 = load <2 x i64>, <2 x i64>* %48, align 16
  store <2 x i64> %68, <2 x i64>* %53, align 16
  %69 = load <2 x i64>, <2 x i64>* %53, align 16
  store <2 x i64> %69, <2 x i64>* %55, align 16
  %70 = load <2 x i64>, <2 x i64>* %53, align 16
  store <2 x i64> %70, <2 x i64>* %57, align 16
  %71 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %49, align 8
  %72 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %71, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %52, align 8
  br label %74

74:                                               ; preds = %77, %3
  %75 = load i64, i64* %52, align 8
  %76 = icmp uge i64 %75, 4
  br i1 %76, label %77, label %189

77:                                               ; preds = %74
  %78 = load <2 x i64>, <2 x i64>* %55, align 16
  store <2 x i64> %78, <2 x i64>* %54, align 16
  %79 = load i8*, i8** %51, align 8
  %80 = call <2 x i64> @load4(i8* noundef %79)
  %81 = load <2 x i64>, <2 x i64>* %53, align 16
  store <2 x i64> %80, <2 x i64>* %36, align 16
  store <2 x i64> %81, <2 x i64>* %37, align 16
  %82 = load <2 x i64>, <2 x i64>* %36, align 16
  %83 = bitcast <2 x i64> %82 to <16 x i8>
  %84 = load <2 x i64>, <2 x i64>* %37, align 16
  %85 = bitcast <2 x i64> %84 to <16 x i8>
  %86 = shufflevector <16 x i8> %83, <16 x i8> %85, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %87 = bitcast <16 x i8> %86 to <2 x i64>
  store <2 x i64> %87, <2 x i64>* %55, align 16
  %88 = load <2 x i64>, <2 x i64>* %57, align 16
  store <2 x i64> %88, <2 x i64>* %56, align 16
  %89 = load i8*, i8** %50, align 8
  %90 = call <2 x i64> @load4(i8* noundef %89)
  %91 = load <2 x i64>, <2 x i64>* %53, align 16
  store <2 x i64> %90, <2 x i64>* %38, align 16
  store <2 x i64> %91, <2 x i64>* %39, align 16
  %92 = load <2 x i64>, <2 x i64>* %38, align 16
  %93 = bitcast <2 x i64> %92 to <16 x i8>
  %94 = load <2 x i64>, <2 x i64>* %39, align 16
  %95 = bitcast <2 x i64> %94 to <16 x i8>
  %96 = shufflevector <16 x i8> %93, <16 x i8> %95, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %97 = bitcast <16 x i8> %96 to <2 x i64>
  store <2 x i64> %97, <2 x i64>* %57, align 16
  %98 = load <2 x i64>, <2 x i64>* %55, align 16
  %99 = load <2 x i64>, <2 x i64>* %54, align 16
  store <2 x i64> %98, <2 x i64>* %28, align 16
  store <2 x i64> %99, <2 x i64>* %29, align 16
  %100 = load <2 x i64>, <2 x i64>* %28, align 16
  %101 = bitcast <2 x i64> %100 to <8 x i16>
  %102 = load <2 x i64>, <2 x i64>* %29, align 16
  %103 = bitcast <2 x i64> %102 to <8 x i16>
  %104 = sub <8 x i16> %101, %103
  %105 = bitcast <8 x i16> %104 to <2 x i64>
  store <2 x i64> %105, <2 x i64>* %58, align 16
  %106 = load <2 x i64>, <2 x i64>* %56, align 16
  %107 = load <2 x i64>, <2 x i64>* %54, align 16
  store <2 x i64> %106, <2 x i64>* %30, align 16
  store <2 x i64> %107, <2 x i64>* %31, align 16
  %108 = load <2 x i64>, <2 x i64>* %30, align 16
  %109 = bitcast <2 x i64> %108 to <8 x i16>
  %110 = load <2 x i64>, <2 x i64>* %31, align 16
  %111 = bitcast <2 x i64> %110 to <8 x i16>
  %112 = sub <8 x i16> %109, %111
  %113 = bitcast <8 x i16> %112 to <2 x i64>
  store <2 x i64> %113, <2 x i64>* %59, align 16
  %114 = load <2 x i64>, <2 x i64>* %58, align 16
  %115 = load <2 x i64>, <2 x i64>* %59, align 16
  store <2 x i64> %114, <2 x i64>* %24, align 16
  store <2 x i64> %115, <2 x i64>* %25, align 16
  %116 = load <2 x i64>, <2 x i64>* %24, align 16
  %117 = bitcast <2 x i64> %116 to <8 x i16>
  %118 = load <2 x i64>, <2 x i64>* %25, align 16
  %119 = bitcast <2 x i64> %118 to <8 x i16>
  %120 = add <8 x i16> %117, %119
  %121 = bitcast <8 x i16> %120 to <2 x i64>
  store <2 x i64> %121, <2 x i64>* %60, align 16
  %122 = load <2 x i64>, <2 x i64>* %58, align 16
  %123 = call <2 x i64> @abs_i16(<2 x i64> noundef %122)
  store <2 x i64> %123, <2 x i64>* %58, align 16
  %124 = load <2 x i64>, <2 x i64>* %59, align 16
  %125 = call <2 x i64> @abs_i16(<2 x i64> noundef %124)
  store <2 x i64> %125, <2 x i64>* %59, align 16
  %126 = load <2 x i64>, <2 x i64>* %60, align 16
  %127 = call <2 x i64> @abs_i16(<2 x i64> noundef %126)
  store <2 x i64> %127, <2 x i64>* %60, align 16
  %128 = load <2 x i64>, <2 x i64>* %60, align 16
  %129 = load <2 x i64>, <2 x i64>* %58, align 16
  %130 = load <2 x i64>, <2 x i64>* %59, align 16
  store <2 x i64> %129, <2 x i64>* %16, align 16
  store <2 x i64> %130, <2 x i64>* %17, align 16
  %131 = load <2 x i64>, <2 x i64>* %16, align 16
  %132 = bitcast <2 x i64> %131 to <8 x i16>
  %133 = load <2 x i64>, <2 x i64>* %17, align 16
  %134 = bitcast <2 x i64> %133 to <8 x i16>
  %135 = call <8 x i16> @llvm.smin.v8i16(<8 x i16> %132, <8 x i16> %134) #16
  %136 = bitcast <8 x i16> %135 to <2 x i64>
  store <2 x i64> %128, <2 x i64>* %18, align 16
  store <2 x i64> %136, <2 x i64>* %19, align 16
  %137 = load <2 x i64>, <2 x i64>* %18, align 16
  %138 = bitcast <2 x i64> %137 to <8 x i16>
  %139 = load <2 x i64>, <2 x i64>* %19, align 16
  %140 = bitcast <2 x i64> %139 to <8 x i16>
  %141 = call <8 x i16> @llvm.smin.v8i16(<8 x i16> %138, <8 x i16> %140) #16
  %142 = bitcast <8 x i16> %141 to <2 x i64>
  store <2 x i64> %142, <2 x i64>* %61, align 16
  %143 = load <2 x i64>, <2 x i64>* %61, align 16
  %144 = load <2 x i64>, <2 x i64>* %58, align 16
  store <2 x i64> %143, <2 x i64>* %8, align 16
  store <2 x i64> %144, <2 x i64>* %9, align 16
  %145 = load <2 x i64>, <2 x i64>* %8, align 16
  %146 = bitcast <2 x i64> %145 to <8 x i16>
  %147 = load <2 x i64>, <2 x i64>* %9, align 16
  %148 = bitcast <2 x i64> %147 to <8 x i16>
  %149 = icmp eq <8 x i16> %146, %148
  %150 = sext <8 x i1> %149 to <8 x i16>
  %151 = bitcast <8 x i16> %150 to <2 x i64>
  %152 = load <2 x i64>, <2 x i64>* %56, align 16
  %153 = load <2 x i64>, <2 x i64>* %61, align 16
  %154 = load <2 x i64>, <2 x i64>* %59, align 16
  store <2 x i64> %153, <2 x i64>* %10, align 16
  store <2 x i64> %154, <2 x i64>* %11, align 16
  %155 = load <2 x i64>, <2 x i64>* %10, align 16
  %156 = bitcast <2 x i64> %155 to <8 x i16>
  %157 = load <2 x i64>, <2 x i64>* %11, align 16
  %158 = bitcast <2 x i64> %157 to <8 x i16>
  %159 = icmp eq <8 x i16> %156, %158
  %160 = sext <8 x i1> %159 to <8 x i16>
  %161 = bitcast <8 x i16> %160 to <2 x i64>
  %162 = load <2 x i64>, <2 x i64>* %55, align 16
  %163 = load <2 x i64>, <2 x i64>* %54, align 16
  %164 = call <2 x i64> @if_then_else(<2 x i64> noundef %161, <2 x i64> noundef %162, <2 x i64> noundef %163)
  %165 = call <2 x i64> @if_then_else(<2 x i64> noundef %151, <2 x i64> noundef %152, <2 x i64> noundef %164)
  store <2 x i64> %165, <2 x i64>* %62, align 16
  %166 = load <2 x i64>, <2 x i64>* %57, align 16
  %167 = load <2 x i64>, <2 x i64>* %62, align 16
  store <2 x i64> %166, <2 x i64>* %44, align 16
  store <2 x i64> %167, <2 x i64>* %45, align 16
  %168 = load <2 x i64>, <2 x i64>* %44, align 16
  %169 = bitcast <2 x i64> %168 to <16 x i8>
  %170 = load <2 x i64>, <2 x i64>* %45, align 16
  %171 = bitcast <2 x i64> %170 to <16 x i8>
  %172 = add <16 x i8> %169, %171
  %173 = bitcast <16 x i8> %172 to <2 x i64>
  store <2 x i64> %173, <2 x i64>* %57, align 16
  %174 = load i8*, i8** %50, align 8
  %175 = load <2 x i64>, <2 x i64>* %57, align 16
  %176 = load <2 x i64>, <2 x i64>* %57, align 16
  store <2 x i64> %175, <2 x i64>* %4, align 16
  store <2 x i64> %176, <2 x i64>* %5, align 16
  %177 = load <2 x i64>, <2 x i64>* %4, align 16
  %178 = bitcast <2 x i64> %177 to <8 x i16>
  %179 = load <2 x i64>, <2 x i64>* %5, align 16
  %180 = bitcast <2 x i64> %179 to <8 x i16>
  %181 = call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %178, <8 x i16> %180) #16
  %182 = bitcast <16 x i8> %181 to <2 x i64>
  call void @store3(i8* noundef %174, <2 x i64> noundef %182)
  %183 = load i8*, i8** %51, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 3
  store i8* %184, i8** %51, align 8
  %185 = load i8*, i8** %50, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 3
  store i8* %186, i8** %50, align 8
  %187 = load i64, i64* %52, align 8
  %188 = sub i64 %187, 3
  store i64 %188, i64* %52, align 8
  br label %74, !llvm.loop !379

189:                                              ; preds = %74
  %190 = load i64, i64* %52, align 8
  %191 = icmp ugt i64 %190, 0
  br i1 %191, label %192, label %304

192:                                              ; preds = %189
  %193 = load <2 x i64>, <2 x i64>* %55, align 16
  store <2 x i64> %193, <2 x i64>* %54, align 16
  %194 = load i8*, i8** %51, align 8
  %195 = call <2 x i64> @load3(i8* noundef %194)
  %196 = load <2 x i64>, <2 x i64>* %53, align 16
  store <2 x i64> %195, <2 x i64>* %40, align 16
  store <2 x i64> %196, <2 x i64>* %41, align 16
  %197 = load <2 x i64>, <2 x i64>* %40, align 16
  %198 = bitcast <2 x i64> %197 to <16 x i8>
  %199 = load <2 x i64>, <2 x i64>* %41, align 16
  %200 = bitcast <2 x i64> %199 to <16 x i8>
  %201 = shufflevector <16 x i8> %198, <16 x i8> %200, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %202 = bitcast <16 x i8> %201 to <2 x i64>
  store <2 x i64> %202, <2 x i64>* %55, align 16
  %203 = load <2 x i64>, <2 x i64>* %57, align 16
  store <2 x i64> %203, <2 x i64>* %56, align 16
  %204 = load i8*, i8** %50, align 8
  %205 = call <2 x i64> @load3(i8* noundef %204)
  %206 = load <2 x i64>, <2 x i64>* %53, align 16
  store <2 x i64> %205, <2 x i64>* %42, align 16
  store <2 x i64> %206, <2 x i64>* %43, align 16
  %207 = load <2 x i64>, <2 x i64>* %42, align 16
  %208 = bitcast <2 x i64> %207 to <16 x i8>
  %209 = load <2 x i64>, <2 x i64>* %43, align 16
  %210 = bitcast <2 x i64> %209 to <16 x i8>
  %211 = shufflevector <16 x i8> %208, <16 x i8> %210, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %212 = bitcast <16 x i8> %211 to <2 x i64>
  store <2 x i64> %212, <2 x i64>* %57, align 16
  %213 = load <2 x i64>, <2 x i64>* %55, align 16
  %214 = load <2 x i64>, <2 x i64>* %54, align 16
  store <2 x i64> %213, <2 x i64>* %32, align 16
  store <2 x i64> %214, <2 x i64>* %33, align 16
  %215 = load <2 x i64>, <2 x i64>* %32, align 16
  %216 = bitcast <2 x i64> %215 to <8 x i16>
  %217 = load <2 x i64>, <2 x i64>* %33, align 16
  %218 = bitcast <2 x i64> %217 to <8 x i16>
  %219 = sub <8 x i16> %216, %218
  %220 = bitcast <8 x i16> %219 to <2 x i64>
  store <2 x i64> %220, <2 x i64>* %63, align 16
  %221 = load <2 x i64>, <2 x i64>* %56, align 16
  %222 = load <2 x i64>, <2 x i64>* %54, align 16
  store <2 x i64> %221, <2 x i64>* %34, align 16
  store <2 x i64> %222, <2 x i64>* %35, align 16
  %223 = load <2 x i64>, <2 x i64>* %34, align 16
  %224 = bitcast <2 x i64> %223 to <8 x i16>
  %225 = load <2 x i64>, <2 x i64>* %35, align 16
  %226 = bitcast <2 x i64> %225 to <8 x i16>
  %227 = sub <8 x i16> %224, %226
  %228 = bitcast <8 x i16> %227 to <2 x i64>
  store <2 x i64> %228, <2 x i64>* %64, align 16
  %229 = load <2 x i64>, <2 x i64>* %63, align 16
  %230 = load <2 x i64>, <2 x i64>* %64, align 16
  store <2 x i64> %229, <2 x i64>* %26, align 16
  store <2 x i64> %230, <2 x i64>* %27, align 16
  %231 = load <2 x i64>, <2 x i64>* %26, align 16
  %232 = bitcast <2 x i64> %231 to <8 x i16>
  %233 = load <2 x i64>, <2 x i64>* %27, align 16
  %234 = bitcast <2 x i64> %233 to <8 x i16>
  %235 = add <8 x i16> %232, %234
  %236 = bitcast <8 x i16> %235 to <2 x i64>
  store <2 x i64> %236, <2 x i64>* %65, align 16
  %237 = load <2 x i64>, <2 x i64>* %63, align 16
  %238 = call <2 x i64> @abs_i16(<2 x i64> noundef %237)
  store <2 x i64> %238, <2 x i64>* %63, align 16
  %239 = load <2 x i64>, <2 x i64>* %64, align 16
  %240 = call <2 x i64> @abs_i16(<2 x i64> noundef %239)
  store <2 x i64> %240, <2 x i64>* %64, align 16
  %241 = load <2 x i64>, <2 x i64>* %65, align 16
  %242 = call <2 x i64> @abs_i16(<2 x i64> noundef %241)
  store <2 x i64> %242, <2 x i64>* %65, align 16
  %243 = load <2 x i64>, <2 x i64>* %65, align 16
  %244 = load <2 x i64>, <2 x i64>* %63, align 16
  %245 = load <2 x i64>, <2 x i64>* %64, align 16
  store <2 x i64> %244, <2 x i64>* %20, align 16
  store <2 x i64> %245, <2 x i64>* %21, align 16
  %246 = load <2 x i64>, <2 x i64>* %20, align 16
  %247 = bitcast <2 x i64> %246 to <8 x i16>
  %248 = load <2 x i64>, <2 x i64>* %21, align 16
  %249 = bitcast <2 x i64> %248 to <8 x i16>
  %250 = call <8 x i16> @llvm.smin.v8i16(<8 x i16> %247, <8 x i16> %249) #16
  %251 = bitcast <8 x i16> %250 to <2 x i64>
  store <2 x i64> %243, <2 x i64>* %22, align 16
  store <2 x i64> %251, <2 x i64>* %23, align 16
  %252 = load <2 x i64>, <2 x i64>* %22, align 16
  %253 = bitcast <2 x i64> %252 to <8 x i16>
  %254 = load <2 x i64>, <2 x i64>* %23, align 16
  %255 = bitcast <2 x i64> %254 to <8 x i16>
  %256 = call <8 x i16> @llvm.smin.v8i16(<8 x i16> %253, <8 x i16> %255) #16
  %257 = bitcast <8 x i16> %256 to <2 x i64>
  store <2 x i64> %257, <2 x i64>* %66, align 16
  %258 = load <2 x i64>, <2 x i64>* %66, align 16
  %259 = load <2 x i64>, <2 x i64>* %63, align 16
  store <2 x i64> %258, <2 x i64>* %12, align 16
  store <2 x i64> %259, <2 x i64>* %13, align 16
  %260 = load <2 x i64>, <2 x i64>* %12, align 16
  %261 = bitcast <2 x i64> %260 to <8 x i16>
  %262 = load <2 x i64>, <2 x i64>* %13, align 16
  %263 = bitcast <2 x i64> %262 to <8 x i16>
  %264 = icmp eq <8 x i16> %261, %263
  %265 = sext <8 x i1> %264 to <8 x i16>
  %266 = bitcast <8 x i16> %265 to <2 x i64>
  %267 = load <2 x i64>, <2 x i64>* %56, align 16
  %268 = load <2 x i64>, <2 x i64>* %66, align 16
  %269 = load <2 x i64>, <2 x i64>* %64, align 16
  store <2 x i64> %268, <2 x i64>* %14, align 16
  store <2 x i64> %269, <2 x i64>* %15, align 16
  %270 = load <2 x i64>, <2 x i64>* %14, align 16
  %271 = bitcast <2 x i64> %270 to <8 x i16>
  %272 = load <2 x i64>, <2 x i64>* %15, align 16
  %273 = bitcast <2 x i64> %272 to <8 x i16>
  %274 = icmp eq <8 x i16> %271, %273
  %275 = sext <8 x i1> %274 to <8 x i16>
  %276 = bitcast <8 x i16> %275 to <2 x i64>
  %277 = load <2 x i64>, <2 x i64>* %55, align 16
  %278 = load <2 x i64>, <2 x i64>* %54, align 16
  %279 = call <2 x i64> @if_then_else(<2 x i64> noundef %276, <2 x i64> noundef %277, <2 x i64> noundef %278)
  %280 = call <2 x i64> @if_then_else(<2 x i64> noundef %266, <2 x i64> noundef %267, <2 x i64> noundef %279)
  store <2 x i64> %280, <2 x i64>* %67, align 16
  %281 = load <2 x i64>, <2 x i64>* %57, align 16
  %282 = load <2 x i64>, <2 x i64>* %67, align 16
  store <2 x i64> %281, <2 x i64>* %46, align 16
  store <2 x i64> %282, <2 x i64>* %47, align 16
  %283 = load <2 x i64>, <2 x i64>* %46, align 16
  %284 = bitcast <2 x i64> %283 to <16 x i8>
  %285 = load <2 x i64>, <2 x i64>* %47, align 16
  %286 = bitcast <2 x i64> %285 to <16 x i8>
  %287 = add <16 x i8> %284, %286
  %288 = bitcast <16 x i8> %287 to <2 x i64>
  store <2 x i64> %288, <2 x i64>* %57, align 16
  %289 = load i8*, i8** %50, align 8
  %290 = load <2 x i64>, <2 x i64>* %57, align 16
  %291 = load <2 x i64>, <2 x i64>* %57, align 16
  store <2 x i64> %290, <2 x i64>* %6, align 16
  store <2 x i64> %291, <2 x i64>* %7, align 16
  %292 = load <2 x i64>, <2 x i64>* %6, align 16
  %293 = bitcast <2 x i64> %292 to <8 x i16>
  %294 = load <2 x i64>, <2 x i64>* %7, align 16
  %295 = bitcast <2 x i64> %294 to <8 x i16>
  %296 = call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %293, <8 x i16> %295) #16
  %297 = bitcast <16 x i8> %296 to <2 x i64>
  call void @store3(i8* noundef %289, <2 x i64> noundef %297)
  %298 = load i8*, i8** %51, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 3
  store i8* %299, i8** %51, align 8
  %300 = load i8*, i8** %50, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 3
  store i8* %301, i8** %50, align 8
  %302 = load i64, i64* %52, align 8
  %303 = sub i64 %302, 3
  store i64 %303, i64* %52, align 8
  br label %304

304:                                              ; preds = %192, %189
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal <2 x i64> @abs_i16(<2 x i64> noundef %0) #11 {
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  store <2 x i64> %0, <2 x i64>* %11, align 16
  %13 = load <2 x i64>, <2 x i64>* %11, align 16
  store <2 x i64> zeroinitializer, <2 x i64>* %10, align 16
  %14 = load <2 x i64>, <2 x i64>* %10, align 16
  store <2 x i64> %13, <2 x i64>* %4, align 16
  store <2 x i64> %14, <2 x i64>* %5, align 16
  %15 = load <2 x i64>, <2 x i64>* %5, align 16
  %16 = load <2 x i64>, <2 x i64>* %4, align 16
  store <2 x i64> %15, <2 x i64>* %2, align 16
  store <2 x i64> %16, <2 x i64>* %3, align 16
  %17 = load <2 x i64>, <2 x i64>* %2, align 16
  %18 = bitcast <2 x i64> %17 to <8 x i16>
  %19 = load <2 x i64>, <2 x i64>* %3, align 16
  %20 = bitcast <2 x i64> %19 to <8 x i16>
  %21 = icmp sgt <8 x i16> %18, %20
  %22 = sext <8 x i1> %21 to <8 x i16>
  %23 = bitcast <8 x i16> %22 to <2 x i64>
  store <2 x i64> %23, <2 x i64>* %12, align 16
  %24 = load <2 x i64>, <2 x i64>* %11, align 16
  %25 = load <2 x i64>, <2 x i64>* %12, align 16
  store <2 x i64> %24, <2 x i64>* %8, align 16
  store <2 x i64> %25, <2 x i64>* %9, align 16
  %26 = load <2 x i64>, <2 x i64>* %8, align 16
  %27 = load <2 x i64>, <2 x i64>* %9, align 16
  %28 = xor <2 x i64> %26, %27
  store <2 x i64> %28, <2 x i64>* %11, align 16
  %29 = load <2 x i64>, <2 x i64>* %11, align 16
  %30 = load <2 x i64>, <2 x i64>* %12, align 16
  store <2 x i64> %29, <2 x i64>* %6, align 16
  store <2 x i64> %30, <2 x i64>* %7, align 16
  %31 = load <2 x i64>, <2 x i64>* %6, align 16
  %32 = bitcast <2 x i64> %31 to <8 x i16>
  %33 = load <2 x i64>, <2 x i64>* %7, align 16
  %34 = bitcast <2 x i64> %33 to <8 x i16>
  %35 = sub <8 x i16> %32, %34
  %36 = bitcast <8 x i16> %35 to <2 x i64>
  store <2 x i64> %36, <2 x i64>* %11, align 16
  %37 = load <2 x i64>, <2 x i64>* %11, align 16
  ret <2 x i64> %37
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i16> @llvm.smin.v8i16(<8 x i16>, <8 x i16>) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal <2 x i64> @if_then_else(<2 x i64> noundef %0, <2 x i64> noundef %1, <2 x i64> noundef %2) #11 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  store <2 x i64> %0, <2 x i64>* %10, align 16
  store <2 x i64> %1, <2 x i64>* %11, align 16
  store <2 x i64> %2, <2 x i64>* %12, align 16
  %13 = load <2 x i64>, <2 x i64>* %10, align 16
  %14 = load <2 x i64>, <2 x i64>* %11, align 16
  store <2 x i64> %13, <2 x i64>* %8, align 16
  store <2 x i64> %14, <2 x i64>* %9, align 16
  %15 = load <2 x i64>, <2 x i64>* %8, align 16
  %16 = load <2 x i64>, <2 x i64>* %9, align 16
  %17 = and <2 x i64> %15, %16
  %18 = load <2 x i64>, <2 x i64>* %10, align 16
  %19 = load <2 x i64>, <2 x i64>* %12, align 16
  store <2 x i64> %18, <2 x i64>* %4, align 16
  store <2 x i64> %19, <2 x i64>* %5, align 16
  %20 = load <2 x i64>, <2 x i64>* %4, align 16
  %21 = xor <2 x i64> %20, <i64 -1, i64 -1>
  %22 = load <2 x i64>, <2 x i64>* %5, align 16
  %23 = and <2 x i64> %21, %22
  store <2 x i64> %17, <2 x i64>* %6, align 16
  store <2 x i64> %23, <2 x i64>* %7, align 16
  %24 = load <2 x i64>, <2 x i64>* %6, align 16
  %25 = load <2 x i64>, <2 x i64>* %7, align 16
  %26 = or <2 x i64> %24, %25
  ret <2 x i64> %26
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #12

; Function Attrs: noinline nounwind optnone uwtable
define void @png_read_filter_row_paeth4_sse2(%struct.png_row_info_struct* noundef %0, i8* noundef %1, i8* noundef %2) #11 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = alloca <2 x i64>, align 16
  %14 = alloca <2 x i64>, align 16
  %15 = alloca <2 x i64>, align 16
  %16 = alloca <2 x i64>, align 16
  %17 = alloca <2 x i64>, align 16
  %18 = alloca <2 x i64>, align 16
  %19 = alloca <2 x i64>, align 16
  %20 = alloca <2 x i64>, align 16
  %21 = alloca <2 x i64>, align 16
  %22 = alloca <2 x i64>, align 16
  %23 = alloca <2 x i64>, align 16
  %24 = alloca <2 x i64>, align 16
  %25 = alloca <2 x i64>, align 16
  %26 = alloca <2 x i64>, align 16
  %27 = alloca %struct.png_row_info_struct*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i64, align 8
  %31 = alloca <2 x i64>, align 16
  %32 = alloca <2 x i64>, align 16
  %33 = alloca <2 x i64>, align 16
  %34 = alloca <2 x i64>, align 16
  %35 = alloca <2 x i64>, align 16
  %36 = alloca <2 x i64>, align 16
  %37 = alloca <2 x i64>, align 16
  %38 = alloca <2 x i64>, align 16
  %39 = alloca <2 x i64>, align 16
  %40 = alloca <2 x i64>, align 16
  store %struct.png_row_info_struct* %0, %struct.png_row_info_struct** %27, align 8
  store i8* %1, i8** %28, align 8
  store i8* %2, i8** %29, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %26, align 16
  %41 = load <2 x i64>, <2 x i64>* %26, align 16
  store <2 x i64> %41, <2 x i64>* %31, align 16
  %42 = load <2 x i64>, <2 x i64>* %31, align 16
  store <2 x i64> %42, <2 x i64>* %38, align 16
  %43 = load <2 x i64>, <2 x i64>* %31, align 16
  store <2 x i64> %43, <2 x i64>* %40, align 16
  %44 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %27, align 8
  %45 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %44, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 4
  store i64 %47, i64* %30, align 8
  br label %48

48:                                               ; preds = %51, %3
  %49 = load i64, i64* %30, align 8
  %50 = icmp ugt i64 %49, 4
  br i1 %50, label %51, label %163

51:                                               ; preds = %48
  %52 = load <2 x i64>, <2 x i64>* %38, align 16
  store <2 x i64> %52, <2 x i64>* %37, align 16
  %53 = load i8*, i8** %29, align 8
  %54 = call <2 x i64> @load4(i8* noundef %53)
  %55 = load <2 x i64>, <2 x i64>* %31, align 16
  store <2 x i64> %54, <2 x i64>* %20, align 16
  store <2 x i64> %55, <2 x i64>* %21, align 16
  %56 = load <2 x i64>, <2 x i64>* %20, align 16
  %57 = bitcast <2 x i64> %56 to <16 x i8>
  %58 = load <2 x i64>, <2 x i64>* %21, align 16
  %59 = bitcast <2 x i64> %58 to <16 x i8>
  %60 = shufflevector <16 x i8> %57, <16 x i8> %59, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %61 = bitcast <16 x i8> %60 to <2 x i64>
  store <2 x i64> %61, <2 x i64>* %38, align 16
  %62 = load <2 x i64>, <2 x i64>* %40, align 16
  store <2 x i64> %62, <2 x i64>* %39, align 16
  %63 = load i8*, i8** %28, align 8
  %64 = call <2 x i64> @load4(i8* noundef %63)
  %65 = load <2 x i64>, <2 x i64>* %31, align 16
  store <2 x i64> %64, <2 x i64>* %22, align 16
  store <2 x i64> %65, <2 x i64>* %23, align 16
  %66 = load <2 x i64>, <2 x i64>* %22, align 16
  %67 = bitcast <2 x i64> %66 to <16 x i8>
  %68 = load <2 x i64>, <2 x i64>* %23, align 16
  %69 = bitcast <2 x i64> %68 to <16 x i8>
  %70 = shufflevector <16 x i8> %67, <16 x i8> %69, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %71 = bitcast <16 x i8> %70 to <2 x i64>
  store <2 x i64> %71, <2 x i64>* %40, align 16
  %72 = load <2 x i64>, <2 x i64>* %38, align 16
  %73 = load <2 x i64>, <2 x i64>* %37, align 16
  store <2 x i64> %72, <2 x i64>* %16, align 16
  store <2 x i64> %73, <2 x i64>* %17, align 16
  %74 = load <2 x i64>, <2 x i64>* %16, align 16
  %75 = bitcast <2 x i64> %74 to <8 x i16>
  %76 = load <2 x i64>, <2 x i64>* %17, align 16
  %77 = bitcast <2 x i64> %76 to <8 x i16>
  %78 = sub <8 x i16> %75, %77
  %79 = bitcast <8 x i16> %78 to <2 x i64>
  store <2 x i64> %79, <2 x i64>* %32, align 16
  %80 = load <2 x i64>, <2 x i64>* %39, align 16
  %81 = load <2 x i64>, <2 x i64>* %37, align 16
  store <2 x i64> %80, <2 x i64>* %18, align 16
  store <2 x i64> %81, <2 x i64>* %19, align 16
  %82 = load <2 x i64>, <2 x i64>* %18, align 16
  %83 = bitcast <2 x i64> %82 to <8 x i16>
  %84 = load <2 x i64>, <2 x i64>* %19, align 16
  %85 = bitcast <2 x i64> %84 to <8 x i16>
  %86 = sub <8 x i16> %83, %85
  %87 = bitcast <8 x i16> %86 to <2 x i64>
  store <2 x i64> %87, <2 x i64>* %33, align 16
  %88 = load <2 x i64>, <2 x i64>* %32, align 16
  %89 = load <2 x i64>, <2 x i64>* %33, align 16
  store <2 x i64> %88, <2 x i64>* %14, align 16
  store <2 x i64> %89, <2 x i64>* %15, align 16
  %90 = load <2 x i64>, <2 x i64>* %14, align 16
  %91 = bitcast <2 x i64> %90 to <8 x i16>
  %92 = load <2 x i64>, <2 x i64>* %15, align 16
  %93 = bitcast <2 x i64> %92 to <8 x i16>
  %94 = add <8 x i16> %91, %93
  %95 = bitcast <8 x i16> %94 to <2 x i64>
  store <2 x i64> %95, <2 x i64>* %34, align 16
  %96 = load <2 x i64>, <2 x i64>* %32, align 16
  %97 = call <2 x i64> @abs_i16(<2 x i64> noundef %96)
  store <2 x i64> %97, <2 x i64>* %32, align 16
  %98 = load <2 x i64>, <2 x i64>* %33, align 16
  %99 = call <2 x i64> @abs_i16(<2 x i64> noundef %98)
  store <2 x i64> %99, <2 x i64>* %33, align 16
  %100 = load <2 x i64>, <2 x i64>* %34, align 16
  %101 = call <2 x i64> @abs_i16(<2 x i64> noundef %100)
  store <2 x i64> %101, <2 x i64>* %34, align 16
  %102 = load <2 x i64>, <2 x i64>* %34, align 16
  %103 = load <2 x i64>, <2 x i64>* %32, align 16
  %104 = load <2 x i64>, <2 x i64>* %33, align 16
  store <2 x i64> %103, <2 x i64>* %10, align 16
  store <2 x i64> %104, <2 x i64>* %11, align 16
  %105 = load <2 x i64>, <2 x i64>* %10, align 16
  %106 = bitcast <2 x i64> %105 to <8 x i16>
  %107 = load <2 x i64>, <2 x i64>* %11, align 16
  %108 = bitcast <2 x i64> %107 to <8 x i16>
  %109 = call <8 x i16> @llvm.smin.v8i16(<8 x i16> %106, <8 x i16> %108) #16
  %110 = bitcast <8 x i16> %109 to <2 x i64>
  store <2 x i64> %102, <2 x i64>* %12, align 16
  store <2 x i64> %110, <2 x i64>* %13, align 16
  %111 = load <2 x i64>, <2 x i64>* %12, align 16
  %112 = bitcast <2 x i64> %111 to <8 x i16>
  %113 = load <2 x i64>, <2 x i64>* %13, align 16
  %114 = bitcast <2 x i64> %113 to <8 x i16>
  %115 = call <8 x i16> @llvm.smin.v8i16(<8 x i16> %112, <8 x i16> %114) #16
  %116 = bitcast <8 x i16> %115 to <2 x i64>
  store <2 x i64> %116, <2 x i64>* %35, align 16
  %117 = load <2 x i64>, <2 x i64>* %35, align 16
  %118 = load <2 x i64>, <2 x i64>* %32, align 16
  store <2 x i64> %117, <2 x i64>* %6, align 16
  store <2 x i64> %118, <2 x i64>* %7, align 16
  %119 = load <2 x i64>, <2 x i64>* %6, align 16
  %120 = bitcast <2 x i64> %119 to <8 x i16>
  %121 = load <2 x i64>, <2 x i64>* %7, align 16
  %122 = bitcast <2 x i64> %121 to <8 x i16>
  %123 = icmp eq <8 x i16> %120, %122
  %124 = sext <8 x i1> %123 to <8 x i16>
  %125 = bitcast <8 x i16> %124 to <2 x i64>
  %126 = load <2 x i64>, <2 x i64>* %39, align 16
  %127 = load <2 x i64>, <2 x i64>* %35, align 16
  %128 = load <2 x i64>, <2 x i64>* %33, align 16
  store <2 x i64> %127, <2 x i64>* %8, align 16
  store <2 x i64> %128, <2 x i64>* %9, align 16
  %129 = load <2 x i64>, <2 x i64>* %8, align 16
  %130 = bitcast <2 x i64> %129 to <8 x i16>
  %131 = load <2 x i64>, <2 x i64>* %9, align 16
  %132 = bitcast <2 x i64> %131 to <8 x i16>
  %133 = icmp eq <8 x i16> %130, %132
  %134 = sext <8 x i1> %133 to <8 x i16>
  %135 = bitcast <8 x i16> %134 to <2 x i64>
  %136 = load <2 x i64>, <2 x i64>* %38, align 16
  %137 = load <2 x i64>, <2 x i64>* %37, align 16
  %138 = call <2 x i64> @if_then_else(<2 x i64> noundef %135, <2 x i64> noundef %136, <2 x i64> noundef %137)
  %139 = call <2 x i64> @if_then_else(<2 x i64> noundef %125, <2 x i64> noundef %126, <2 x i64> noundef %138)
  store <2 x i64> %139, <2 x i64>* %36, align 16
  %140 = load <2 x i64>, <2 x i64>* %40, align 16
  %141 = load <2 x i64>, <2 x i64>* %36, align 16
  store <2 x i64> %140, <2 x i64>* %24, align 16
  store <2 x i64> %141, <2 x i64>* %25, align 16
  %142 = load <2 x i64>, <2 x i64>* %24, align 16
  %143 = bitcast <2 x i64> %142 to <16 x i8>
  %144 = load <2 x i64>, <2 x i64>* %25, align 16
  %145 = bitcast <2 x i64> %144 to <16 x i8>
  %146 = add <16 x i8> %143, %145
  %147 = bitcast <16 x i8> %146 to <2 x i64>
  store <2 x i64> %147, <2 x i64>* %40, align 16
  %148 = load i8*, i8** %28, align 8
  %149 = load <2 x i64>, <2 x i64>* %40, align 16
  %150 = load <2 x i64>, <2 x i64>* %40, align 16
  store <2 x i64> %149, <2 x i64>* %4, align 16
  store <2 x i64> %150, <2 x i64>* %5, align 16
  %151 = load <2 x i64>, <2 x i64>* %4, align 16
  %152 = bitcast <2 x i64> %151 to <8 x i16>
  %153 = load <2 x i64>, <2 x i64>* %5, align 16
  %154 = bitcast <2 x i64> %153 to <8 x i16>
  %155 = call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %152, <8 x i16> %154) #16
  %156 = bitcast <16 x i8> %155 to <2 x i64>
  call void @store4(i8* noundef %148, <2 x i64> noundef %156)
  %157 = load i8*, i8** %29, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 4
  store i8* %158, i8** %29, align 8
  %159 = load i8*, i8** %28, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 4
  store i8* %160, i8** %28, align 8
  %161 = load i64, i64* %30, align 8
  %162 = sub i64 %161, 4
  store i64 %162, i64* %30, align 8
  br label %48, !llvm.loop !380

163:                                              ; preds = %48
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nofree nounwind willreturn }
attributes #2 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { nounwind returns_twice "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { noinline noreturn nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind readnone willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn }
attributes #14 = { nounwind readonly willreturn }
attributes #15 = { nounwind returns_twice }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readnone willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4}

!0 = !{!"clang version 14.0.0"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !6}
!14 = distinct !{!14, !6}
!15 = distinct !{!15, !6}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !6}
!18 = distinct !{!18, !6}
!19 = distinct !{!19, !6}
!20 = distinct !{!20, !6}
!21 = distinct !{!21, !6}
!22 = distinct !{!22, !6}
!23 = distinct !{!23, !6}
!24 = distinct !{!24, !6}
!25 = distinct !{!25, !6}
!26 = distinct !{!26, !6}
!27 = distinct !{!27, !6}
!28 = distinct !{!28, !6}
!29 = distinct !{!29, !6}
!30 = distinct !{!30, !6}
!31 = distinct !{!31, !6}
!32 = distinct !{!32, !6}
!33 = distinct !{!33, !6}
!34 = distinct !{!34, !6}
!35 = distinct !{!35, !6}
!36 = distinct !{!36, !6}
!37 = distinct !{!37, !6}
!38 = distinct !{!38, !6}
!39 = distinct !{!39, !6}
!40 = distinct !{!40, !6}
!41 = distinct !{!41, !6}
!42 = distinct !{!42, !6}
!43 = distinct !{!43, !6}
!44 = distinct !{!44, !6}
!45 = distinct !{!45, !6}
!46 = distinct !{!46, !6}
!47 = distinct !{!47, !6}
!48 = distinct !{!48, !6}
!49 = distinct !{!49, !6}
!50 = distinct !{!50, !6}
!51 = distinct !{!51, !6}
!52 = distinct !{!52, !6}
!53 = distinct !{!53, !6}
!54 = distinct !{!54, !6}
!55 = distinct !{!55, !6}
!56 = distinct !{!56, !6}
!57 = distinct !{!57, !6}
!58 = distinct !{!58, !6}
!59 = distinct !{!59, !6}
!60 = distinct !{!60, !6}
!61 = distinct !{!61, !6}
!62 = distinct !{!62, !6}
!63 = distinct !{!63, !6}
!64 = distinct !{!64, !6}
!65 = distinct !{!65, !6}
!66 = distinct !{!66, !6}
!67 = distinct !{!67, !6}
!68 = distinct !{!68, !6}
!69 = distinct !{!69, !6}
!70 = distinct !{!70, !6}
!71 = distinct !{!71, !6}
!72 = distinct !{!72, !6}
!73 = distinct !{!73, !6}
!74 = distinct !{!74, !6}
!75 = distinct !{!75, !6}
!76 = distinct !{!76, !6}
!77 = distinct !{!77, !6}
!78 = distinct !{!78, !6}
!79 = distinct !{!79, !6}
!80 = distinct !{!80, !6}
!81 = distinct !{!81, !6}
!82 = distinct !{!82, !6}
!83 = distinct !{!83, !6}
!84 = distinct !{!84, !6}
!85 = distinct !{!85, !6}
!86 = distinct !{!86, !6}
!87 = distinct !{!87, !6}
!88 = distinct !{!88, !6}
!89 = distinct !{!89, !6}
!90 = distinct !{!90, !6}
!91 = distinct !{!91, !6}
!92 = distinct !{!92, !6}
!93 = distinct !{!93, !6}
!94 = distinct !{!94, !6}
!95 = distinct !{!95, !6}
!96 = distinct !{!96, !6}
!97 = distinct !{!97, !6}
!98 = distinct !{!98, !6}
!99 = distinct !{!99, !6}
!100 = distinct !{!100, !6}
!101 = distinct !{!101, !6}
!102 = distinct !{!102, !6}
!103 = distinct !{!103, !6}
!104 = distinct !{!104, !6}
!105 = distinct !{!105, !6}
!106 = distinct !{!106, !6}
!107 = distinct !{!107, !6}
!108 = distinct !{!108, !6}
!109 = distinct !{!109, !6}
!110 = distinct !{!110, !6}
!111 = distinct !{!111, !6}
!112 = distinct !{!112, !6}
!113 = distinct !{!113, !6}
!114 = distinct !{!114, !6}
!115 = distinct !{!115, !6}
!116 = distinct !{!116, !6}
!117 = distinct !{!117, !6}
!118 = distinct !{!118, !6}
!119 = distinct !{!119, !6}
!120 = distinct !{!120, !6}
!121 = distinct !{!121, !6}
!122 = distinct !{!122, !6}
!123 = distinct !{!123, !6}
!124 = distinct !{!124, !6}
!125 = distinct !{!125, !6}
!126 = distinct !{!126, !6}
!127 = distinct !{!127, !6}
!128 = distinct !{!128, !6}
!129 = distinct !{!129, !6}
!130 = distinct !{!130, !6}
!131 = distinct !{!131, !6}
!132 = distinct !{!132, !6}
!133 = distinct !{!133, !6}
!134 = distinct !{!134, !6}
!135 = distinct !{!135, !6}
!136 = distinct !{!136, !6}
!137 = distinct !{!137, !6}
!138 = distinct !{!138, !6}
!139 = distinct !{!139, !6}
!140 = distinct !{!140, !6}
!141 = distinct !{!141, !6}
!142 = distinct !{!142, !6}
!143 = distinct !{!143, !6}
!144 = distinct !{!144, !6}
!145 = distinct !{!145, !6}
!146 = distinct !{!146, !6}
!147 = distinct !{!147, !6}
!148 = distinct !{!148, !6}
!149 = distinct !{!149, !6}
!150 = distinct !{!150, !6}
!151 = distinct !{!151, !6}
!152 = distinct !{!152, !6}
!153 = distinct !{!153, !6}
!154 = distinct !{!154, !6}
!155 = distinct !{!155, !6}
!156 = distinct !{!156, !6}
!157 = distinct !{!157, !6}
!158 = distinct !{!158, !6}
!159 = distinct !{!159, !6}
!160 = distinct !{!160, !6}
!161 = distinct !{!161, !6}
!162 = distinct !{!162, !6}
!163 = distinct !{!163, !6}
!164 = distinct !{!164, !6}
!165 = distinct !{!165, !6}
!166 = distinct !{!166, !6}
!167 = distinct !{!167, !6}
!168 = distinct !{!168, !6}
!169 = distinct !{!169, !6}
!170 = distinct !{!170, !6}
!171 = distinct !{!171, !6}
!172 = distinct !{!172, !6}
!173 = distinct !{!173, !6}
!174 = distinct !{!174, !6}
!175 = distinct !{!175, !6}
!176 = distinct !{!176, !6}
!177 = distinct !{!177, !6}
!178 = distinct !{!178, !6}
!179 = distinct !{!179, !6}
!180 = distinct !{!180, !6}
!181 = distinct !{!181, !6}
!182 = distinct !{!182, !6}
!183 = distinct !{!183, !6}
!184 = distinct !{!184, !6}
!185 = distinct !{!185, !6}
!186 = distinct !{!186, !6}
!187 = distinct !{!187, !6}
!188 = distinct !{!188, !6}
!189 = distinct !{!189, !6}
!190 = distinct !{!190, !6}
!191 = distinct !{!191, !6}
!192 = distinct !{!192, !6}
!193 = distinct !{!193, !6}
!194 = distinct !{!194, !6}
!195 = distinct !{!195, !6}
!196 = distinct !{!196, !6}
!197 = distinct !{!197, !6}
!198 = distinct !{!198, !6}
!199 = distinct !{!199, !6}
!200 = distinct !{!200, !6}
!201 = distinct !{!201, !6}
!202 = distinct !{!202, !6}
!203 = distinct !{!203, !6}
!204 = distinct !{!204, !6}
!205 = distinct !{!205, !6}
!206 = distinct !{!206, !6}
!207 = distinct !{!207, !6}
!208 = distinct !{!208, !6}
!209 = distinct !{!209, !6}
!210 = distinct !{!210, !6}
!211 = distinct !{!211, !6}
!212 = distinct !{!212, !6}
!213 = distinct !{!213, !6}
!214 = distinct !{!214, !6}
!215 = distinct !{!215, !6}
!216 = distinct !{!216, !6}
!217 = distinct !{!217, !6}
!218 = distinct !{!218, !6}
!219 = distinct !{!219, !6}
!220 = distinct !{!220, !6}
!221 = distinct !{!221, !6}
!222 = distinct !{!222, !6}
!223 = distinct !{!223, !6}
!224 = distinct !{!224, !6}
!225 = distinct !{!225, !6}
!226 = distinct !{!226, !6}
!227 = distinct !{!227, !6}
!228 = distinct !{!228, !6}
!229 = distinct !{!229, !6}
!230 = distinct !{!230, !6}
!231 = distinct !{!231, !6}
!232 = distinct !{!232, !6}
!233 = distinct !{!233, !6}
!234 = distinct !{!234, !6}
!235 = distinct !{!235, !6}
!236 = distinct !{!236, !6}
!237 = distinct !{!237, !6}
!238 = distinct !{!238, !6}
!239 = distinct !{!239, !6}
!240 = distinct !{!240, !6}
!241 = distinct !{!241, !6}
!242 = distinct !{!242, !6}
!243 = distinct !{!243, !6}
!244 = distinct !{!244, !6}
!245 = distinct !{!245, !6}
!246 = distinct !{!246, !6}
!247 = distinct !{!247, !6}
!248 = distinct !{!248, !6}
!249 = distinct !{!249, !6}
!250 = distinct !{!250, !6}
!251 = distinct !{!251, !6}
!252 = distinct !{!252, !6}
!253 = distinct !{!253, !6}
!254 = distinct !{!254, !6}
!255 = distinct !{!255, !6}
!256 = distinct !{!256, !6}
!257 = distinct !{!257, !6}
!258 = distinct !{!258, !6}
!259 = distinct !{!259, !6}
!260 = distinct !{!260, !6}
!261 = distinct !{!261, !6}
!262 = distinct !{!262, !6}
!263 = distinct !{!263, !6}
!264 = distinct !{!264, !6}
!265 = distinct !{!265, !6}
!266 = distinct !{!266, !6}
!267 = distinct !{!267, !6}
!268 = distinct !{!268, !6}
!269 = distinct !{!269, !6}
!270 = distinct !{!270, !6}
!271 = distinct !{!271, !6}
!272 = distinct !{!272, !6}
!273 = distinct !{!273, !6}
!274 = distinct !{!274, !6}
!275 = distinct !{!275, !6}
!276 = distinct !{!276, !6}
!277 = distinct !{!277, !6}
!278 = distinct !{!278, !6}
!279 = distinct !{!279, !6}
!280 = distinct !{!280, !6}
!281 = distinct !{!281, !6}
!282 = distinct !{!282, !6}
!283 = distinct !{!283, !6}
!284 = distinct !{!284, !6}
!285 = distinct !{!285, !6}
!286 = distinct !{!286, !6}
!287 = distinct !{!287, !6}
!288 = distinct !{!288, !6}
!289 = distinct !{!289, !6}
!290 = distinct !{!290, !6}
!291 = distinct !{!291, !6}
!292 = distinct !{!292, !6}
!293 = distinct !{!293, !6}
!294 = distinct !{!294, !6}
!295 = distinct !{!295, !6}
!296 = distinct !{!296, !6}
!297 = distinct !{!297, !6}
!298 = distinct !{!298, !6}
!299 = distinct !{!299, !6}
!300 = distinct !{!300, !6}
!301 = distinct !{!301, !6}
!302 = distinct !{!302, !6}
!303 = distinct !{!303, !6}
!304 = distinct !{!304, !6}
!305 = distinct !{!305, !6}
!306 = distinct !{!306, !6}
!307 = distinct !{!307, !6}
!308 = distinct !{!308, !6}
!309 = distinct !{!309, !6}
!310 = distinct !{!310, !6}
!311 = distinct !{!311, !6}
!312 = distinct !{!312, !6}
!313 = distinct !{!313, !6}
!314 = distinct !{!314, !6}
!315 = distinct !{!315, !6}
!316 = distinct !{!316, !6}
!317 = distinct !{!317, !6}
!318 = distinct !{!318, !6}
!319 = distinct !{!319, !6}
!320 = distinct !{!320, !6}
!321 = distinct !{!321, !6}
!322 = distinct !{!322, !6}
!323 = distinct !{!323, !6}
!324 = distinct !{!324, !6}
!325 = distinct !{!325, !6}
!326 = distinct !{!326, !6}
!327 = distinct !{!327, !6}
!328 = distinct !{!328, !6}
!329 = distinct !{!329, !6}
!330 = distinct !{!330, !6}
!331 = distinct !{!331, !6}
!332 = distinct !{!332, !6}
!333 = distinct !{!333, !6}
!334 = distinct !{!334, !6}
!335 = distinct !{!335, !6}
!336 = distinct !{!336, !6}
!337 = distinct !{!337, !6}
!338 = distinct !{!338, !6}
!339 = distinct !{!339, !6}
!340 = distinct !{!340, !6}
!341 = distinct !{!341, !6}
!342 = distinct !{!342, !6}
!343 = distinct !{!343, !6}
!344 = distinct !{!344, !6}
!345 = distinct !{!345, !6}
!346 = distinct !{!346, !6}
!347 = distinct !{!347, !6}
!348 = distinct !{!348, !6}
!349 = distinct !{!349, !6}
!350 = distinct !{!350, !6}
!351 = distinct !{!351, !6}
!352 = distinct !{!352, !6}
!353 = distinct !{!353, !6}
!354 = distinct !{!354, !6}
!355 = distinct !{!355, !6}
!356 = distinct !{!356, !6}
!357 = distinct !{!357, !6}
!358 = distinct !{!358, !6}
!359 = distinct !{!359, !6}
!360 = distinct !{!360, !6}
!361 = distinct !{!361, !6}
!362 = distinct !{!362, !6}
!363 = distinct !{!363, !6}
!364 = distinct !{!364, !6}
!365 = distinct !{!365, !6}
!366 = distinct !{!366, !6}
!367 = distinct !{!367, !6}
!368 = distinct !{!368, !6}
!369 = distinct !{!369, !6}
!370 = distinct !{!370, !6}
!371 = distinct !{!371, !6}
!372 = distinct !{!372, !6}
!373 = distinct !{!373, !6}
!374 = distinct !{!374, !6}
!375 = distinct !{!375, !6}
!376 = distinct !{!376, !6}
!377 = distinct !{!377, !6}
!378 = distinct !{!378, !6}
!379 = distinct !{!379, !6}
!380 = distinct !{!380, !6}
