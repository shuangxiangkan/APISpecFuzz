常用函数(ChatGPT提供)：

zlib.h中有111个函数
进行fuzz的函数有31个
fuzz出来的函数有specification的函数有8个
SVF静态分析比Fuzz多出来的函数有2个：deflateCopy和inflateCopy

官方文档：https://www.zlib.net/manual.html

使用wllvm将zlib.tar.gz编译成bc文件：
export LLVM_COMPILER=clang
tar xf zlib.tar.gz
cd zlib-1.3/
CC=wllvm ./configure
make
extract-bc libz.so.1.3
llvm-dis libz.so.1.3.bc libz.so.1.3.ll (libz.so.1.3.ll就是下面的zlib_1.3.ll)


使用wllvm和afl-clang-fast将zlib_test.c编译成bc文件：
首先在zlib-1.3/目录下创建一个文件functions.txt，放入需要instrument的函数名，然后执行下面的命令：
export LLVM_COMPILER=clang
export LLVM_CC_NAME=/home/kansx/Fuzz/AFLplusplus/afl-clang-fast
CC=wllvm ./configure
make
extract-bc libz.so.1.3 -o libz.so.1.3_instrument.ll
llvm-dis libz.so.1.3_instrument.ll libz.so.1.3_instrument.ll

将可执行程序与zlib的文件link然后编译成可执行文件：
clang -S -emit-llvm -c zlib_test.c -o zlib_test.ll
llvm-link zlib_test.ll zlib_1.3.bc -o linked.bc
llvm-dis linked.bc (编译成linked.ll, optional)
llc -filetype=obj linked.bc -o linked.o
clang linked.o -o linked
./linked

将可执行程序与zlib的文件link然后编译成可执行文件(使用afl-clang-fast)：
/home/kansx/Fuzz/AFLplusplus/afl-clang-fast compress_harness.c /home/kansx/Fuzz/APISpecFuzz/Library/zlib/zlib_1.3.ll -o compress_harness