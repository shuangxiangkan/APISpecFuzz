; ModuleID = 'miniz.c'
source_filename = "miniz.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon = type { i32, i8* }
%struct.mz_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.mz_internal_state*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.mz_internal_state = type opaque
%struct.tdefl_compressor = type { i32 (i8*, i32, i8*)*, i8*, i32, [2 x i32], i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64*, i64*, i32, i8*, i64, i64, [33025 x i8], [3 x [288 x i16]], [3 x [288 x i16]], [3 x [288 x i8]], [65536 x i8], [32768 x i16], [32768 x i16], [85196 x i8] }
%struct.inflate_state = type { %struct.tinfl_decompressor_tag, i32, i32, i32, i32, i32, [32768 x i8], i32 }
%struct.tinfl_decompressor_tag = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i64, i64, [3 x [1024 x i16]], [576 x i16], [64 x i16], [38 x i16], [288 x i8], [32 x i8], [19 x i8], [4 x i8], [457 x i8] }
%struct.tdefl_output_buffer = type { i64, i64, i8*, i32 }
%struct.mz_zip_archive = type { i64, i64, i32, i32, i32, i32, i64, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i8* (i8*, i8*, i64, i64)*, i8*, i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*, i32 (i8*)*, i8*, %struct.mz_zip_internal_state_tag* }
%struct.mz_zip_internal_state_tag = type { %struct.mz_zip_array, %struct.mz_zip_array, %struct.mz_zip_array, i32, i32, i32, %struct._IO_FILE*, i64, i8*, i64, i64 }
%struct.mz_zip_array = type { i8*, i64, i64, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.mz_zip_archive_file_stat = type { i32, i64, i16, i16, i16, i16, i32, i64, i64, i16, i32, i64, i32, i32, i32, i32, [512 x i8], [512 x i8], i64 }
%struct.mz_zip_reader_extract_iter_state = type { %struct.mz_zip_archive*, i32, i32, i64, i64, i64, i64, i64, i64, %struct.mz_zip_archive_file_stat, i8*, i8*, i64, %struct.tinfl_decompressor_tag, i32 }
%struct.utimbuf = type { i64, i64 }
%struct.mz_zip_writer_add_state = type { %struct.mz_zip_archive*, i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tdefl_sym_freq = type { i16, i16 }

@mz_crc32.s_crc_table = internal constant [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], align 16
@.str = private unnamed_addr constant [7 x i8] c"11.0.2\00", align 1
@mz_error.s_error_descs = internal global [10 x %struct.anon] [%struct.anon { i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0) }, %struct.anon { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0) }, %struct.anon { i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0) }, %struct.anon { i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0) }, %struct.anon { i32 -2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0) }, %struct.anon { i32 -3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0) }, %struct.anon { i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0) }, %struct.anon { i32 -5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0) }, %struct.anon { i32 -6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0) }, %struct.anon { i32 -10000, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0) }], align 16
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"stream end\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"need dictionary\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"file error\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"stream error\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"data error\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"buf error\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"version error\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"parameter error\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"d->m_pPut_buf_func\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"miniz.c\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_buffer = private unnamed_addr constant [90 x i8] c"tdefl_status tdefl_compress_buffer(tdefl_compressor *, const void *, size_t, tdefl_flush)\00", align 1
@s_tdefl_num_probes = internal constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes = internal constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.chans = internal constant [5 x i8] c"\00\00\04\02\06", align 1
@__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr = private unnamed_addr constant [41 x i8] c"\89PNG\0D\0A\1A\0A\00\00\00\0DIHDR\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00IDAT", align 16
@.str.13 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00IEND\AEB`\82\00", align 1
@tinfl_decompress.s_length_base = internal constant [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 16
@tinfl_decompress.s_length_extra = internal constant [31 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05\00\00\00", align 16
@tinfl_decompress.s_dist_base = internal constant [32 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577, i16 0, i16 0], align 16
@tinfl_decompress.s_dist_extra = internal constant [32 x i8] c"\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\00\00", align 16
@tinfl_decompress.s_length_dezigzag = internal constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@tinfl_decompress.s_min_table_sizes = internal constant [3 x i16] [i16 257, i16 1, i16 4], align 2
@.str.14 = private unnamed_addr constant [4 x i8] c"\05\05\04\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"\02\03\07\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"\03\03\0B\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"!num_bits\00", align 1
@__PRETTY_FUNCTION__.tinfl_decompress = private unnamed_addr constant [131 x i8] c"tinfl_status tinfl_decompress(tinfl_decompressor *, const mz_uint8 *, size_t *, mz_uint8 *, mz_uint8 *, size_t *, const mz_uint32)\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"w+b\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"r+b\00", align 1
@.str.22 = private unnamed_addr constant [66 x i8] c"(local_dir_header_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex_v2 = private unnamed_addr constant [202 x i8] c"mz_bool mz_zip_writer_add_mem_ex_v2(mz_zip_archive *, const char *, const void *, size_t, const void *, mz_uint16, mz_uint, mz_uint64, mz_uint32, time_t *, const char *, mz_uint, const char *, mz_uint)\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"bit_flags & MZ_ZIP_LDH_BIT_FLAG_HAS_LOCATOR\00", align 1
@.str.24 = private unnamed_addr constant [66 x i8] c"(cur_archive_file_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_read_buf_callback = private unnamed_addr constant [210 x i8] c"mz_bool mz_zip_writer_add_read_buf_callback(mz_zip_archive *, const char *, mz_file_read_func, void *, mz_uint64, const time_t *, const void *, mz_uint16, mz_uint, const char *, mz_uint, const char *, mz_uint)\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_from_zip_reader = private unnamed_addr constant [87 x i8] c"mz_bool mz_zip_writer_add_from_zip_reader(mz_zip_archive *, mz_zip_archive *, mz_uint)\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"no error\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"undefined error\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"too many files\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"file too large\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"unsupported method\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"unsupported encryption\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"unsupported feature\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"failed finding central directory\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"not a ZIP archive\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"invalid header or archive is corrupted\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"unsupported multidisk archive\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"decompression failed or archive is corrupted\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"compression failed\00", align 1
@.str.38 = private unnamed_addr constant [29 x i8] c"unexpected decompressed size\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"CRC-32 check failed\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"unsupported central directory size\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"allocation failed\00", align 1
@.str.42 = private unnamed_addr constant [17 x i8] c"file open failed\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"file create failed\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"file write failed\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"file read failed\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"file close failed\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"file seek failed\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"file stat failed\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"invalid parameter\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"invalid filename\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"buffer too small\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"file not found\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"archive is too large\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"validation failed\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"write callback failed\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"total errors\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.59 = private unnamed_addr constant [35 x i8] c"d->m_lookahead_size >= len_to_move\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_normal = private unnamed_addr constant [50 x i8] c"mz_bool tdefl_compress_normal(tdefl_compressor *)\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"max_match_len <= TDEFL_MAX_MATCH_LEN\00", align 1
@__PRETTY_FUNCTION__.tdefl_find_match = private unnamed_addr constant [91 x i8] c"void tdefl_find_match(tdefl_compressor *, mz_uint, mz_uint, mz_uint, mz_uint *, mz_uint *)\00", align 1
@.str.61 = private unnamed_addr constant [94 x i8] c"(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE)\00", align 1
@__PRETTY_FUNCTION__.tdefl_record_match = private unnamed_addr constant [62 x i8] c"void tdefl_record_match(tdefl_compressor *, mz_uint, mz_uint)\00", align 1
@s_tdefl_small_dist_sym = internal constant [512 x i8] calign 16
@s_tdefl_large_dist_sym = internal constant [128 x i8] c"\00\00\12\13\14\14\15\15\16\16\16\16\17\17\17\17\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D", align 16
@s_tdefl_len_sym = internal constant [256 x i16] [i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 265, i16 266, i16 266, i16 267, i16 267, i16 268, i16 268, i16 269, i16 269, i16 269, i16 269, i16 270, i16 270, i16 270, i16 270, i16 271, i16 271, i16 271, i16 271, i16 272, i16 272, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 285], align 16
@.str.62 = private unnamed_addr constant [29 x i8] c"!d->m_output_flush_remaining\00", align 1
@__PRETTY_FUNCTION__.tdefl_flush_block = private unnamed_addr constant [47 x i8] c"int tdefl_flush_block(tdefl_compressor *, int)\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"bits <= ((1U << len) - 1U)\00", align 1
@.str.64 = private unnamed_addr constant [40 x i8] c"d->m_pOutput_buf < d->m_pOutput_buf_end\00", align 1
@__PRETTY_FUNCTION__.tdefl_start_static_block = private unnamed_addr constant [50 x i8] c"void tdefl_start_static_block(tdefl_compressor *)\00", align 1
@__PRETTY_FUNCTION__.tdefl_start_dynamic_block = private unnamed_addr constant [51 x i8] c"void tdefl_start_dynamic_block(tdefl_compressor *)\00", align 1
@s_tdefl_packed_code_size_syms_swizzle = internal constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@.str.65 = private unnamed_addr constant [32 x i8] c"code < TDEFL_MAX_HUFF_SYMBOLS_2\00", align 1
@.str.66 = private unnamed_addr constant [52 x i8] c"d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]]\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_lz_codes = private unnamed_addr constant [52 x i8] c"mz_bool tdefl_compress_lz_codes(tdefl_compressor *)\00", align 1
@mz_bitmasks = internal constant [17 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535], align 16
@s_tdefl_len_extra = internal constant [256 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\00", align 16
@s_tdefl_small_dist_extra = internal constant [512 x i8] calign 16
@s_tdefl_large_dist_extra = internal constant [128 x i8] c"\00\00\08\08\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D", align 16
@.str.67 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[1][sym]\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[0][lit]\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"pArray->m_element_size\00", align 1
@__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity = private unnamed_addr constant [88 x i8] c"mz_bool mz_zip_array_ensure_capacity(mz_zip_archive *, mz_zip_array *, size_t, mz_uint)\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_adler32(i64 noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %12 = load i64, i64* %5, align 8
  %13 = and i64 %12, 65535
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %9, align 4
  %15 = load i64, i64* %5, align 8
  %16 = lshr i64 %15, 16
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %10, align 4
  %18 = load i64, i64* %7, align 8
  %19 = urem i64 %18, 5552
  store i64 %19, i64* %11, align 8
  %20 = load i8*, i8** %6, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %3
  store i64 1, i64* %4, align 8
  br label %145

23:                                               ; preds = %3
  br label %24

24:                                               ; preds = %131, %23
  %25 = load i64, i64* %7, align 8
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %139

27:                                               ; preds = %24
  store i32 0, i32* %8, align 4
  br label %28

28:                                               ; preds = %107, %27
  %29 = load i32, i32* %8, align 4
  %30 = add i32 %29, 7
  %31 = zext i32 %30 to i64
  %32 = load i64, i64* %11, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %112

34:                                               ; preds = %28
  %35 = load i8*, i8** %6, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = load i32, i32* %9, align 4
  %40 = add i32 %39, %38
  store i32 %40, i32* %9, align 4
  %41 = load i32, i32* %9, align 4
  %42 = load i32, i32* %10, align 4
  %43 = add i32 %42, %41
  store i32 %43, i32* %10, align 4
  %44 = load i8*, i8** %6, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = load i32, i32* %9, align 4
  %49 = add i32 %48, %47
  store i32 %49, i32* %9, align 4
  %50 = load i32, i32* %9, align 4
  %51 = load i32, i32* %10, align 4
  %52 = add i32 %51, %50
  store i32 %52, i32* %10, align 4
  %53 = load i8*, i8** %6, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = load i32, i32* %9, align 4
  %58 = add i32 %57, %56
  store i32 %58, i32* %9, align 4
  %59 = load i32, i32* %9, align 4
  %60 = load i32, i32* %10, align 4
  %61 = add i32 %60, %59
  store i32 %61, i32* %10, align 4
  %62 = load i8*, i8** %6, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = load i32, i32* %9, align 4
  %67 = add i32 %66, %65
  store i32 %67, i32* %9, align 4
  %68 = load i32, i32* %9, align 4
  %69 = load i32, i32* %10, align 4
  %70 = add i32 %69, %68
  store i32 %70, i32* %10, align 4
  %71 = load i8*, i8** %6, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 4
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i32, i32* %9, align 4
  %76 = add i32 %75, %74
  store i32 %76, i32* %9, align 4
  %77 = load i32, i32* %9, align 4
  %78 = load i32, i32* %10, align 4
  %79 = add i32 %78, %77
  store i32 %79, i32* %10, align 4
  %80 = load i8*, i8** %6, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 5
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = load i32, i32* %9, align 4
  %85 = add i32 %84, %83
  store i32 %85, i32* %9, align 4
  %86 = load i32, i32* %9, align 4
  %87 = load i32, i32* %10, align 4
  %88 = add i32 %87, %86
  store i32 %88, i32* %10, align 4
  %89 = load i8*, i8** %6, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 6
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = load i32, i32* %9, align 4
  %94 = add i32 %93, %92
  store i32 %94, i32* %9, align 4
  %95 = load i32, i32* %9, align 4
  %96 = load i32, i32* %10, align 4
  %97 = add i32 %96, %95
  store i32 %97, i32* %10, align 4
  %98 = load i8*, i8** %6, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 7
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = load i32, i32* %9, align 4
  %103 = add i32 %102, %101
  store i32 %103, i32* %9, align 4
  %104 = load i32, i32* %9, align 4
  %105 = load i32, i32* %10, align 4
  %106 = add i32 %105, %104
  store i32 %106, i32* %10, align 4
  br label %107

107:                                              ; preds = %34
  %108 = load i32, i32* %8, align 4
  %109 = add i32 %108, 8
  store i32 %109, i32* %8, align 4
  %110 = load i8*, i8** %6, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 8
  store i8* %111, i8** %6, align 8
  br label %28, !llvm.loop !4

112:                                              ; preds = %28
  br label %113

113:                                              ; preds = %128, %112
  %114 = load i32, i32* %8, align 4
  %115 = zext i32 %114 to i64
  %116 = load i64, i64* %11, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %118, label %131

118:                                              ; preds = %113
  %119 = load i8*, i8** %6, align 8
  %120 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %120, i8** %6, align 8
  %121 = load i8, i8* %119, align 1
  %122 = zext i8 %121 to i32
  %123 = load i32, i32* %9, align 4
  %124 = add i32 %123, %122
  store i32 %124, i32* %9, align 4
  %125 = load i32, i32* %9, align 4
  %126 = load i32, i32* %10, align 4
  %127 = add i32 %126, %125
  store i32 %127, i32* %10, align 4
  br label %128

128:                                              ; preds = %118
  %129 = load i32, i32* %8, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %8, align 4
  br label %113, !llvm.loop !6

131:                                              ; preds = %113
  %132 = load i32, i32* %9, align 4
  %133 = urem i32 %132, 65521
  store i32 %133, i32* %9, align 4
  %134 = load i32, i32* %10, align 4
  %135 = urem i32 %134, 65521
  store i32 %135, i32* %10, align 4
  %136 = load i64, i64* %11, align 8
  %137 = load i64, i64* %7, align 8
  %138 = sub i64 %137, %136
  store i64 %138, i64* %7, align 8
  store i64 5552, i64* %11, align 8
  br label %24, !llvm.loop !7

139:                                              ; preds = %24
  %140 = load i32, i32* %10, align 4
  %141 = shl i32 %140, 16
  %142 = load i32, i32* %9, align 4
  %143 = add i32 %141, %142
  %144 = zext i32 %143 to i64
  store i64 %144, i64* %4, align 8
  br label %145

145:                                              ; preds = %139, %22
  %146 = load i64, i64* %4, align 8
  ret i64 %146
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_crc32(i64 noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store i64 %0, i64* %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load i64, i64* %4, align 8
  %10 = trunc i64 %9 to i32
  %11 = xor i32 %10, -1
  store i32 %11, i32* %7, align 4
  %12 = load i8*, i8** %5, align 8
  store i8* %12, i8** %8, align 8
  br label %13

13:                                               ; preds = %16, %3
  %14 = load i64, i64* %6, align 8
  %15 = icmp uge i64 %14, 4
  br i1 %15, label %16, label %73

16:                                               ; preds = %13
  %17 = load i32, i32* %7, align 4
  %18 = lshr i32 %17, 8
  %19 = load i32, i32* %7, align 4
  %20 = load i8*, i8** %8, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = xor i32 %19, %23
  %25 = and i32 %24, 255
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [256 x i32], [256 x i32]* @mz_crc32.s_crc_table, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = xor i32 %18, %28
  store i32 %29, i32* %7, align 4
  %30 = load i32, i32* %7, align 4
  %31 = lshr i32 %30, 8
  %32 = load i32, i32* %7, align 4
  %33 = load i8*, i8** %8, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = xor i32 %32, %36
  %38 = and i32 %37, 255
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* @mz_crc32.s_crc_table, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %31, %41
  store i32 %42, i32* %7, align 4
  %43 = load i32, i32* %7, align 4
  %44 = lshr i32 %43, 8
  %45 = load i32, i32* %7, align 4
  %46 = load i8*, i8** %8, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = xor i32 %45, %49
  %51 = and i32 %50, 255
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @mz_crc32.s_crc_table, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = xor i32 %44, %54
  store i32 %55, i32* %7, align 4
  %56 = load i32, i32* %7, align 4
  %57 = lshr i32 %56, 8
  %58 = load i32, i32* %7, align 4
  %59 = load i8*, i8** %8, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = xor i32 %58, %62
  %64 = and i32 %63, 255
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* @mz_crc32.s_crc_table, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = xor i32 %57, %67
  store i32 %68, i32* %7, align 4
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 4
  store i8* %70, i8** %8, align 8
  %71 = load i64, i64* %6, align 8
  %72 = sub i64 %71, 4
  store i64 %72, i64* %6, align 8
  br label %13, !llvm.loop !8

73:                                               ; preds = %13
  br label %74

74:                                               ; preds = %77, %73
  %75 = load i64, i64* %6, align 8
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %95

77:                                               ; preds = %74
  %78 = load i32, i32* %7, align 4
  %79 = lshr i32 %78, 8
  %80 = load i32, i32* %7, align 4
  %81 = load i8*, i8** %8, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = xor i32 %80, %84
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @mz_crc32.s_crc_table, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = xor i32 %79, %89
  store i32 %90, i32* %7, align 4
  %91 = load i8*, i8** %8, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %8, align 8
  %93 = load i64, i64* %6, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %6, align 8
  br label %74, !llvm.loop !9

95:                                               ; preds = %74
  %96 = load i32, i32* %7, align 4
  %97 = xor i32 %96, -1
  %98 = zext i32 %97 to i64
  ret i64 %98
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mz_free(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  call void @free(i8* noundef %3) #7
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @miniz_def_alloc_func(i8* noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = load i64, i64* %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = mul i64 %10, %11
  %13 = call noalias i8* @malloc(i64 noundef %12) #7
  ret i8* %13
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64 noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @miniz_def_free_func(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  call void @free(i8* noundef %7) #7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @miniz_def_realloc_func(i8* noundef %0, i8* noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load i64, i64* %8, align 8
  %16 = mul i64 %14, %15
  %17 = call i8* @realloc(i8* noundef %13, i64 noundef %16) #7
  ret i8* %17
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8* noundef, i64 noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_version() #0 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_deflateInit(%struct.mz_stream_s* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.mz_stream_s*, align 8
  %4 = alloca i32, align 4
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = call i32 @mz_deflateInit2(%struct.mz_stream_s* noundef %5, i32 noundef %6, i32 noundef 8, i32 noundef 15, i32 noundef 9, i32 noundef 0)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_deflateInit2(%struct.mz_stream_s* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_stream_s*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.tdefl_compressor*, align 8
  %15 = alloca i32, align 4
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  %16 = load i32, i32* %9, align 4
  %17 = load i32, i32* %11, align 4
  %18 = load i32, i32* %13, align 4
  %19 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %16, i32 noundef %17, i32 noundef %18)
  %20 = or i32 8192, %19
  store i32 %20, i32* %15, align 4
  %21 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %22 = icmp ne %struct.mz_stream_s* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %6
  store i32 -2, i32* %7, align 4
  br label %94

24:                                               ; preds = %6
  %25 = load i32, i32* %10, align 4
  %26 = icmp ne i32 %25, 8
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %12, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %12, align 4
  %32 = icmp sgt i32 %31, 9
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %11, align 4
  %35 = icmp ne i32 %34, 15
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  %37 = load i32, i32* %11, align 4
  %38 = sub nsw i32 0, %37
  %39 = icmp ne i32 %38, 15
  br i1 %39, label %40, label %41

40:                                               ; preds = %36, %30, %27, %24
  store i32 -10000, i32* %7, align 4
  br label %94

41:                                               ; preds = %36, %33
  %42 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %43 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %42, i32 0, i32 11
  store i32 0, i32* %43, align 8
  %44 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %45 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %44, i32 0, i32 12
  store i64 1, i64* %45, align 8
  %46 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %47 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %46, i32 0, i32 6
  store i8* null, i8** %47, align 8
  %48 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %49 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %48, i32 0, i32 13
  store i64 0, i64* %49, align 8
  %50 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %51 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %50, i32 0, i32 2
  store i64 0, i64* %51, align 8
  %52 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %53 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %52, i32 0, i32 5
  store i64 0, i64* %53, align 8
  %54 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %55 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %54, i32 0, i32 8
  %56 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %55, align 8
  %57 = icmp ne i8* (i8*, i64, i64)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %41
  %59 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %60 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %59, i32 0, i32 8
  store i8* (i8*, i64, i64)* @miniz_def_alloc_func, i8* (i8*, i64, i64)** %60, align 8
  br label %61

61:                                               ; preds = %58, %41
  %62 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %63 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %62, i32 0, i32 9
  %64 = load void (i8*, i8*)*, void (i8*, i8*)** %63, align 8
  %65 = icmp ne void (i8*, i8*)* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %68 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %67, i32 0, i32 9
  store void (i8*, i8*)* @miniz_def_free_func, void (i8*, i8*)** %68, align 8
  br label %69

69:                                               ; preds = %66, %61
  %70 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %71 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %70, i32 0, i32 8
  %72 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %71, align 8
  %73 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %74 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %73, i32 0, i32 10
  %75 = load i8*, i8** %74, align 8
  %76 = call i8* %72(i8* noundef %75, i64 noundef 1, i64 noundef 319352)
  %77 = bitcast i8* %76 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %77, %struct.tdefl_compressor** %14, align 8
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %79 = icmp ne %struct.tdefl_compressor* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %69
  store i32 -4, i32* %7, align 4
  br label %94

81:                                               ; preds = %69
  %82 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %83 = bitcast %struct.tdefl_compressor* %82 to %struct.mz_internal_state*
  %84 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %85 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %84, i32 0, i32 7
  store %struct.mz_internal_state* %83, %struct.mz_internal_state** %85, align 8
  %86 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %87 = load i32, i32* %15, align 4
  %88 = call i32 @tdefl_init(%struct.tdefl_compressor* noundef %86, i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i32 noundef %87)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %81
  %91 = load %struct.mz_stream_s*, %struct.mz_stream_s** %8, align 8
  %92 = call i32 @mz_deflateEnd(%struct.mz_stream_s* noundef %91)
  store i32 -10000, i32* %7, align 4
  br label %94

93:                                               ; preds = %81
  store i32 0, i32* %7, align 4
  br label %94

94:                                               ; preds = %93, %90, %80, %40, %23
  %95 = load i32, i32* %7, align 4
  ret i32 %95
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  br label %16

14:                                               ; preds = %10
  %15 = load i32, i32* %4, align 4
  br label %16

16:                                               ; preds = %14, %13
  %17 = phi i32 [ 10, %13 ], [ %15, %14 ]
  br label %19

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18, %16
  %20 = phi i32 [ %17, %16 ], [ 6, %18 ]
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [11 x i32], [11 x i32]* @s_tdefl_num_probes, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %4, align 4
  %25 = icmp sle i32 %24, 3
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 16384, i32 0
  %28 = or i32 %23, %27
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %5, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %19
  %32 = load i32, i32* %7, align 4
  %33 = or i32 %32, 4096
  store i32 %33, i32* %7, align 4
  br label %34

34:                                               ; preds = %31, %19
  %35 = load i32, i32* %4, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %7, align 4
  %39 = or i32 %38, 524288
  store i32 %39, i32* %7, align 4
  br label %68

40:                                               ; preds = %34
  %41 = load i32, i32* %6, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i32, i32* %7, align 4
  %45 = or i32 %44, 131072
  store i32 %45, i32* %7, align 4
  br label %67

46:                                               ; preds = %40
  %47 = load i32, i32* %6, align 4
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = load i32, i32* %7, align 4
  %51 = and i32 %50, -4096
  store i32 %51, i32* %7, align 4
  br label %66

52:                                               ; preds = %46
  %53 = load i32, i32* %6, align 4
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = load i32, i32* %7, align 4
  %57 = or i32 %56, 262144
  store i32 %57, i32* %7, align 4
  br label %65

58:                                               ; preds = %52
  %59 = load i32, i32* %6, align 4
  %60 = icmp eq i32 %59, 3
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = load i32, i32* %7, align 4
  %63 = or i32 %62, 65536
  store i32 %63, i32* %7, align 4
  br label %64

64:                                               ; preds = %61, %58
  br label %65

65:                                               ; preds = %64, %55
  br label %66

66:                                               ; preds = %65, %49
  br label %67

67:                                               ; preds = %66, %43
  br label %68

68:                                               ; preds = %67, %37
  %69 = load i32, i32* %7, align 4
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_init(%struct.tdefl_compressor* noundef %0, i32 (i8*, i32, i8*)* noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.tdefl_compressor*, align 8
  %6 = alloca i32 (i8*, i32, i8*)*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %5, align 8
  store i32 (i8*, i32, i8*)* %1, i32 (i8*, i32, i8*)** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %6, align 8
  %10 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %11 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %10, i32 0, i32 0
  store i32 (i8*, i32, i8*)* %9, i32 (i8*, i32, i8*)** %11, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %14 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %13, i32 0, i32 1
  store i8* %12, i8** %14, align 8
  %15 = load i32, i32* %8, align 4
  %16 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %17 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %16, i32 0, i32 2
  store i32 %15, i32* %17, align 8
  %18 = load i32, i32* %8, align 4
  %19 = and i32 %18, 4095
  %20 = add nsw i32 %19, 2
  %21 = sdiv i32 %20, 3
  %22 = add nsw i32 1, %21
  %23 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %24 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %23, i32 0, i32 3
  %25 = getelementptr inbounds [2 x i32], [2 x i32]* %24, i64 0, i64 0
  store i32 %22, i32* %25, align 4
  %26 = load i32, i32* %8, align 4
  %27 = and i32 %26, 16384
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  %30 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %31 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %30, i32 0, i32 4
  store i32 %29, i32* %31, align 4
  %32 = load i32, i32* %8, align 4
  %33 = and i32 %32, 4095
  %34 = ashr i32 %33, 2
  %35 = add nsw i32 %34, 2
  %36 = sdiv i32 %35, 3
  %37 = add nsw i32 1, %36
  %38 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %39 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %38, i32 0, i32 3
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %39, i64 0, i64 1
  store i32 %37, i32* %40, align 4
  %41 = load i32, i32* %8, align 4
  %42 = and i32 %41, 32768
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %4
  %45 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %46 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %45, i32 0, i32 41
  %47 = getelementptr inbounds [32768 x i16], [32768 x i16]* %46, i64 0, i64 0
  %48 = bitcast i16* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %48, i8 0, i64 65536, i1 false)
  br label %49

49:                                               ; preds = %44, %4
  %50 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %51 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %50, i32 0, i32 16
  store i32 0, i32* %51, align 4
  %52 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %53 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %52, i32 0, i32 15
  store i32 0, i32* %53, align 8
  %54 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %55 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %54, i32 0, i32 14
  store i32 0, i32* %55, align 4
  %56 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %56, i32 0, i32 8
  store i32 0, i32* %57, align 4
  %58 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %59 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %58, i32 0, i32 7
  store i32 0, i32* %59, align 8
  %60 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %60, i32 0, i32 6
  store i32 0, i32* %61, align 4
  %62 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %63 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %62, i32 0, i32 25
  store i32 0, i32* %63, align 8
  %64 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %65 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %64, i32 0, i32 17
  store i32 0, i32* %65, align 8
  %66 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %66, i32 0, i32 24
  store i32 0, i32* %67, align 4
  %68 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %69 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %68, i32 0, i32 23
  store i32 0, i32* %69, align 8
  %70 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %71 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %70, i32 0, i32 22
  store i32 0, i32* %71, align 4
  %72 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %72, i32 0, i32 21
  store i32 0, i32* %73, align 8
  %74 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %75 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %74, i32 0, i32 39
  %76 = getelementptr inbounds [65536 x i8], [65536 x i8]* %75, i64 0, i64 0
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %78, i32 0, i32 9
  store i8* %77, i8** %79, align 8
  %80 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %81 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %80, i32 0, i32 39
  %82 = getelementptr inbounds [65536 x i8], [65536 x i8]* %81, i64 0, i64 0
  %83 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %84 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %83, i32 0, i32 10
  store i8* %82, i8** %84, align 8
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 10
  %87 = load i8*, i8** %86, align 8
  store i8 0, i8* %87, align 1
  %88 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %89 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %88, i32 0, i32 13
  store i32 8, i32* %89, align 8
  %90 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %91 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %90, i32 0, i32 42
  %92 = getelementptr inbounds [85196 x i8], [85196 x i8]* %91, i64 0, i64 0
  %93 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %94 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %93, i32 0, i32 11
  store i8* %92, i8** %94, align 8
  %95 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %96 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %95, i32 0, i32 42
  %97 = getelementptr inbounds [85196 x i8], [85196 x i8]* %96, i64 0, i64 0
  %98 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %98, i32 0, i32 12
  store i8* %97, i8** %99, align 8
  %100 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %101 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %100, i32 0, i32 26
  store i32 0, i32* %101, align 4
  %102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %102, i32 0, i32 20
  store i32 0, i32* %103, align 4
  %104 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %105 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %104, i32 0, i32 19
  store i32 0, i32* %105, align 8
  %106 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %107 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %106, i32 0, i32 18
  store i32 0, i32* %107, align 4
  %108 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %109 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %108, i32 0, i32 5
  store i32 1, i32* %109, align 8
  %110 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %110, i32 0, i32 27
  store i8* null, i8** %111, align 8
  %112 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %113 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %112, i32 0, i32 28
  store i8* null, i8** %113, align 8
  %114 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %115 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %114, i32 0, i32 29
  store i64* null, i64** %115, align 8
  %116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %116, i32 0, i32 30
  store i64* null, i64** %117, align 8
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %118, i32 0, i32 31
  store i32 0, i32* %119, align 8
  %120 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %121 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %120, i32 0, i32 32
  store i8* null, i8** %121, align 8
  %122 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %123 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %122, i32 0, i32 33
  store i64 0, i64* %123, align 8
  %124 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %125 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %124, i32 0, i32 34
  store i64 0, i64* %125, align 8
  %126 = load i32, i32* %8, align 4
  %127 = and i32 %126, 32768
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %49
  %130 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %131 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %130, i32 0, i32 35
  %132 = getelementptr inbounds [33025 x i8], [33025 x i8]* %131, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 33025, i1 false)
  br label %133

133:                                              ; preds = %129, %49
  %134 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %135 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %134, i32 0, i32 36
  %136 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %135, i64 0, i64 0
  %137 = getelementptr inbounds [288 x i16], [288 x i16]* %136, i64 0, i64 0
  %138 = bitcast i16* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %138, i8 0, i64 576, i1 false)
  %139 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %140 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %139, i32 0, i32 36
  %141 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %140, i64 0, i64 1
  %142 = getelementptr inbounds [288 x i16], [288 x i16]* %141, i64 0, i64 0
  %143 = bitcast i16* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %143, i8 0, i64 64, i1 false)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_deflateEnd(%struct.mz_stream_s* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %3, align 8
  %4 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %5 = icmp ne %struct.mz_stream_s* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %26

7:                                                ; preds = %1
  %8 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %9 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %8, i32 0, i32 7
  %10 = load %struct.mz_internal_state*, %struct.mz_internal_state** %9, align 8
  %11 = icmp ne %struct.mz_internal_state* %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %14 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 9
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %14, align 8
  %16 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %17 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %16, i32 0, i32 10
  %18 = load i8*, i8** %17, align 8
  %19 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %19, i32 0, i32 7
  %21 = load %struct.mz_internal_state*, %struct.mz_internal_state** %20, align 8
  %22 = bitcast %struct.mz_internal_state* %21 to i8*
  call void %15(i8* noundef %18, i8* noundef %22)
  %23 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %24 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %23, i32 0, i32 7
  store %struct.mz_internal_state* null, %struct.mz_internal_state** %24, align 8
  br label %25

25:                                               ; preds = %12, %7
  store i32 0, i32* %2, align 4
  br label %26

26:                                               ; preds = %25, %6
  %27 = load i32, i32* %2, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_deflateReset(%struct.mz_stream_s* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %3, align 8
  %4 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %5 = icmp ne %struct.mz_stream_s* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %8 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %7, i32 0, i32 7
  %9 = load %struct.mz_internal_state*, %struct.mz_internal_state** %8, align 8
  %10 = icmp ne %struct.mz_internal_state* %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %6
  %12 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %13 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %12, i32 0, i32 8
  %14 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %13, align 8
  %15 = icmp ne i8* (i8*, i64, i64)* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %18 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %17, i32 0, i32 9
  %19 = load void (i8*, i8*)*, void (i8*, i8*)** %18, align 8
  %20 = icmp ne void (i8*, i8*)* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %11, %6, %1
  store i32 -2, i32* %2, align 4
  br label %38

22:                                               ; preds = %16
  %23 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %24 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %23, i32 0, i32 5
  store i64 0, i64* %24, align 8
  %25 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %26 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %25, i32 0, i32 2
  store i64 0, i64* %26, align 8
  %27 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %27, i32 0, i32 7
  %29 = load %struct.mz_internal_state*, %struct.mz_internal_state** %28, align 8
  %30 = bitcast %struct.mz_internal_state* %29 to %struct.tdefl_compressor*
  %31 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %32 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %31, i32 0, i32 7
  %33 = load %struct.mz_internal_state*, %struct.mz_internal_state** %32, align 8
  %34 = bitcast %struct.mz_internal_state* %33 to %struct.tdefl_compressor*
  %35 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %34, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = call i32 @tdefl_init(%struct.tdefl_compressor* noundef %30, i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i32 noundef %36)
  store i32 0, i32* %2, align 4
  br label %38

38:                                               ; preds = %22, %21
  %39 = load i32, i32* %2, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_deflate(%struct.mz_stream_s* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_stream_s*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %10, align 4
  %12 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %13 = icmp ne %struct.mz_stream_s* %12, null
  br i1 %13, label %14, label %30

14:                                               ; preds = %2
  %15 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %15, i32 0, i32 7
  %17 = load %struct.mz_internal_state*, %struct.mz_internal_state** %16, align 8
  %18 = icmp ne %struct.mz_internal_state* %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %14
  %20 = load i32, i32* %5, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %5, align 4
  %24 = icmp sgt i32 %23, 4
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %27 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %26, i32 0, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25, %22, %19, %14, %2
  store i32 -2, i32* %3, align 4
  br label %174

31:                                               ; preds = %25
  %32 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %33 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  store i32 -5, i32* %3, align 4
  br label %174

37:                                               ; preds = %31
  %38 = load i32, i32* %5, align 4
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i32 2, i32* %5, align 4
  br label %41

41:                                               ; preds = %40, %37
  %42 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %43 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %42, i32 0, i32 7
  %44 = load %struct.mz_internal_state*, %struct.mz_internal_state** %43, align 8
  %45 = bitcast %struct.mz_internal_state* %44 to %struct.tdefl_compressor*
  %46 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %45, i32 0, i32 26
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %54

49:                                               ; preds = %41
  %50 = load i32, i32* %5, align 4
  %51 = icmp eq i32 %50, 4
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 1, i32 -5
  store i32 %53, i32* %3, align 4
  br label %174

54:                                               ; preds = %41
  %55 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %56 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %55, i32 0, i32 2
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %8, align 8
  %58 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %59 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %58, i32 0, i32 5
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %9, align 8
  br label %61

61:                                               ; preds = %171, %54
  %62 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %63 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = zext i32 %64 to i64
  store i64 %65, i64* %6, align 8
  %66 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %67 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %66, i32 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  store i64 %69, i64* %7, align 8
  %70 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %71 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %70, i32 0, i32 7
  %72 = load %struct.mz_internal_state*, %struct.mz_internal_state** %71, align 8
  %73 = bitcast %struct.mz_internal_state* %72 to %struct.tdefl_compressor*
  %74 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %75 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %74, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %78 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %77, i32 0, i32 3
  %79 = load i8*, i8** %78, align 8
  %80 = load i32, i32* %5, align 4
  %81 = call i32 @tdefl_compress(%struct.tdefl_compressor* noundef %73, i8* noundef %76, i64* noundef %6, i8* noundef %79, i64* noundef %7, i32 noundef %80)
  store i32 %81, i32* %11, align 4
  %82 = load i64, i64* %6, align 8
  %83 = trunc i64 %82 to i32
  %84 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %85 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %84, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = zext i32 %83 to i64
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  store i8* %88, i8** %85, align 8
  %89 = load i64, i64* %6, align 8
  %90 = trunc i64 %89 to i32
  %91 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %92 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = sub i32 %93, %90
  store i32 %94, i32* %92, align 8
  %95 = load i64, i64* %6, align 8
  %96 = trunc i64 %95 to i32
  %97 = zext i32 %96 to i64
  %98 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %99 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %98, i32 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, %97
  store i64 %101, i64* %99, align 8
  %102 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %103 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %102, i32 0, i32 7
  %104 = load %struct.mz_internal_state*, %struct.mz_internal_state** %103, align 8
  %105 = bitcast %struct.mz_internal_state* %104 to %struct.tdefl_compressor*
  %106 = call i32 @tdefl_get_adler32(%struct.tdefl_compressor* noundef %105)
  %107 = zext i32 %106 to i64
  %108 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %109 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %108, i32 0, i32 12
  store i64 %107, i64* %109, align 8
  %110 = load i64, i64* %7, align 8
  %111 = trunc i64 %110 to i32
  %112 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %113 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %112, i32 0, i32 3
  %114 = load i8*, i8** %113, align 8
  %115 = zext i32 %111 to i64
  %116 = getelementptr inbounds i8, i8* %114, i64 %115
  store i8* %116, i8** %113, align 8
  %117 = load i64, i64* %7, align 8
  %118 = trunc i64 %117 to i32
  %119 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %120 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %119, i32 0, i32 4
  %121 = load i32, i32* %120, align 8
  %122 = sub i32 %121, %118
  store i32 %122, i32* %120, align 8
  %123 = load i64, i64* %7, align 8
  %124 = trunc i64 %123 to i32
  %125 = zext i32 %124 to i64
  %126 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %127 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %126, i32 0, i32 5
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, %125
  store i64 %129, i64* %127, align 8
  %130 = load i32, i32* %11, align 4
  %131 = icmp slt i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %61
  store i32 -2, i32* %10, align 4
  br label %172

133:                                              ; preds = %61
  %134 = load i32, i32* %11, align 4
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  store i32 1, i32* %10, align 4
  br label %172

137:                                              ; preds = %133
  %138 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %139 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %138, i32 0, i32 4
  %140 = load i32, i32* %139, align 8
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %137
  br label %172

143:                                              ; preds = %137
  %144 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %145 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %144, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %168, label %148

148:                                              ; preds = %143
  %149 = load i32, i32* %5, align 4
  %150 = icmp ne i32 %149, 4
  br i1 %150, label %151, label %168

151:                                              ; preds = %148
  %152 = load i32, i32* %5, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %166, label %154

154:                                              ; preds = %151
  %155 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %156 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %155, i32 0, i32 2
  %157 = load i64, i64* %156, align 8
  %158 = load i64, i64* %8, align 8
  %159 = icmp ne i64 %157, %158
  br i1 %159, label %166, label %160

160:                                              ; preds = %154
  %161 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %162 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %161, i32 0, i32 5
  %163 = load i64, i64* %162, align 8
  %164 = load i64, i64* %9, align 8
  %165 = icmp ne i64 %163, %164
  br i1 %165, label %166, label %167

166:                                              ; preds = %160, %154, %151
  br label %172

167:                                              ; preds = %160
  store i32 -5, i32* %3, align 4
  br label %174

168:                                              ; preds = %148, %143
  br label %169

169:                                              ; preds = %168
  br label %170

170:                                              ; preds = %169
  br label %171

171:                                              ; preds = %170
  br label %61

172:                                              ; preds = %166, %142, %136, %132
  %173 = load i32, i32* %10, align 4
  store i32 %173, i32* %3, align 4
  br label %174

174:                                              ; preds = %172, %167, %49, %36, %30
  %175 = load i32, i32* %3, align 4
  ret i32 %175
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_compress(%struct.tdefl_compressor* noundef %0, i8* noundef %1, i64* noundef %2, i8* noundef %3, i64* noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.tdefl_compressor*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %8, align 8
  store i8* %1, i8** %9, align 8
  store i64* %2, i64** %10, align 8
  store i8* %3, i8** %11, align 8
  store i64* %4, i64** %12, align 8
  store i32 %5, i32* %13, align 4
  %14 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %15 = icmp ne %struct.tdefl_compressor* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = load i64*, i64** %10, align 8
  %18 = icmp ne i64* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = load i64*, i64** %10, align 8
  store i64 0, i64* %20, align 8
  br label %21

21:                                               ; preds = %19, %16
  %22 = load i64*, i64** %12, align 8
  %23 = icmp ne i64* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = load i64*, i64** %12, align 8
  store i64 0, i64* %25, align 8
  br label %26

26:                                               ; preds = %24, %21
  store i32 -2, i32* %7, align 4
  br label %226

27:                                               ; preds = %6
  %28 = load i8*, i8** %9, align 8
  %29 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %30 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %29, i32 0, i32 27
  store i8* %28, i8** %30, align 8
  %31 = load i64*, i64** %10, align 8
  %32 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %33 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %32, i32 0, i32 29
  store i64* %31, i64** %33, align 8
  %34 = load i8*, i8** %11, align 8
  %35 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %36 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %35, i32 0, i32 28
  store i8* %34, i8** %36, align 8
  %37 = load i64*, i64** %12, align 8
  %38 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %39 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %38, i32 0, i32 30
  store i64* %37, i64** %39, align 8
  %40 = load i8*, i8** %9, align 8
  %41 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %41, i32 0, i32 32
  store i8* %40, i8** %42, align 8
  %43 = load i64*, i64** %10, align 8
  %44 = icmp ne i64* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %27
  %46 = load i64*, i64** %10, align 8
  %47 = load i64, i64* %46, align 8
  br label %49

48:                                               ; preds = %27
  br label %49

49:                                               ; preds = %48, %45
  %50 = phi i64 [ %47, %45 ], [ 0, %48 ]
  %51 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %52 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %51, i32 0, i32 33
  store i64 %50, i64* %52, align 8
  %53 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %54 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %53, i32 0, i32 34
  store i64 0, i64* %54, align 8
  %55 = load i32, i32* %13, align 4
  %56 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %56, i32 0, i32 31
  store i32 %55, i32* %57, align 8
  %58 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %59 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %58, i32 0, i32 0
  %60 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %59, align 8
  %61 = icmp ne i32 (i8*, i32, i8*)* %60, null
  %62 = zext i1 %61 to i32
  %63 = load i8*, i8** %11, align 8
  %64 = icmp ne i8* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %49
  %66 = load i64*, i64** %12, align 8
  %67 = icmp ne i64* %66, null
  br label %68

68:                                               ; preds = %65, %49
  %69 = phi i1 [ true, %49 ], [ %67, %65 ]
  %70 = zext i1 %69 to i32
  %71 = icmp eq i32 %62, %70
  br i1 %71, label %105, label %72

72:                                               ; preds = %68
  %73 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %74 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %73, i32 0, i32 26
  %75 = load i32, i32* %74, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %105, label %77

77:                                               ; preds = %72
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %78, i32 0, i32 25
  %80 = load i32, i32* %79, align 8
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = load i32, i32* %13, align 4
  %84 = icmp ne i32 %83, 4
  br i1 %84, label %105, label %85

85:                                               ; preds = %82, %77
  %86 = load i64*, i64** %10, align 8
  %87 = icmp ne i64* %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %85
  %89 = load i64*, i64** %10, align 8
  %90 = load i64, i64* %89, align 8
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = load i8*, i8** %9, align 8
  %94 = icmp ne i8* %93, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %92, %88, %85
  %96 = load i64*, i64** %12, align 8
  %97 = icmp ne i64* %96, null
  br i1 %97, label %98, label %118

98:                                               ; preds = %95
  %99 = load i64*, i64** %12, align 8
  %100 = load i64, i64* %99, align 8
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %98
  %103 = load i8*, i8** %11, align 8
  %104 = icmp ne i8* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102, %92, %82, %72, %68
  %106 = load i64*, i64** %10, align 8
  %107 = icmp ne i64* %106, null
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load i64*, i64** %10, align 8
  store i64 0, i64* %109, align 8
  br label %110

110:                                              ; preds = %108, %105
  %111 = load i64*, i64** %12, align 8
  %112 = icmp ne i64* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = load i64*, i64** %12, align 8
  store i64 0, i64* %114, align 8
  br label %115

115:                                              ; preds = %113, %110
  %116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %116, i32 0, i32 26
  store i32 -2, i32* %117, align 4
  store i32 -2, i32* %7, align 4
  br label %226

118:                                              ; preds = %102, %98, %95
  %119 = load i32, i32* %13, align 4
  %120 = icmp eq i32 %119, 4
  %121 = zext i1 %120 to i32
  %122 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %123 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %122, i32 0, i32 25
  %124 = load i32, i32* %123, align 8
  %125 = or i32 %124, %121
  store i32 %125, i32* %123, align 8
  %126 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %127 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %126, i32 0, i32 22
  %128 = load i32, i32* %127, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %118
  %131 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %132 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %131, i32 0, i32 23
  %133 = load i32, i32* %132, align 8
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %130, %118
  %136 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %137 = call i32 @tdefl_flush_output_buffer(%struct.tdefl_compressor* noundef %136)
  %138 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %139 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %138, i32 0, i32 26
  store i32 %137, i32* %139, align 4
  store i32 %137, i32* %7, align 4
  br label %226

140:                                              ; preds = %130
  %141 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %142 = call i32 @tdefl_compress_normal(%struct.tdefl_compressor* noundef %141)
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %140
  %145 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %146 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %145, i32 0, i32 26
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %7, align 4
  br label %226

148:                                              ; preds = %140
  %149 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %150 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %149, i32 0, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 12288
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %174

154:                                              ; preds = %148
  %155 = load i8*, i8** %9, align 8
  %156 = icmp ne i8* %155, null
  br i1 %156, label %157, label %174

157:                                              ; preds = %154
  %158 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %159 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %158, i32 0, i32 5
  %160 = load i32, i32* %159, align 8
  %161 = zext i32 %160 to i64
  %162 = load i8*, i8** %9, align 8
  %163 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %164 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %163, i32 0, i32 32
  %165 = load i8*, i8** %164, align 8
  %166 = load i8*, i8** %9, align 8
  %167 = ptrtoint i8* %165 to i64
  %168 = ptrtoint i8* %166 to i64
  %169 = sub i64 %167, %168
  %170 = call i64 @mz_adler32(i64 noundef %161, i8* noundef %162, i64 noundef %169)
  %171 = trunc i64 %170 to i32
  %172 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %173 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %172, i32 0, i32 5
  store i32 %171, i32* %173, align 8
  br label %174

174:                                              ; preds = %157, %154, %148
  %175 = load i32, i32* %13, align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %221

177:                                              ; preds = %174
  %178 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %179 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %178, i32 0, i32 7
  %180 = load i32, i32* %179, align 8
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %221, label %182

182:                                              ; preds = %177
  %183 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %184 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %183, i32 0, i32 33
  %185 = load i64, i64* %184, align 8
  %186 = icmp ne i64 %185, 0
  br i1 %186, label %221, label %187

187:                                              ; preds = %182
  %188 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %189 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %188, i32 0, i32 22
  %190 = load i32, i32* %189, align 4
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %221, label %192

192:                                              ; preds = %187
  %193 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %194 = load i32, i32* %13, align 4
  %195 = call i32 @tdefl_flush_block(%struct.tdefl_compressor* noundef %193, i32 noundef %194)
  %196 = icmp slt i32 %195, 0
  br i1 %196, label %197, label %201

197:                                              ; preds = %192
  %198 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %199 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %198, i32 0, i32 26
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %7, align 4
  br label %226

201:                                              ; preds = %192
  %202 = load i32, i32* %13, align 4
  %203 = icmp eq i32 %202, 4
  %204 = zext i1 %203 to i32
  %205 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %206 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %205, i32 0, i32 23
  store i32 %204, i32* %206, align 8
  %207 = load i32, i32* %13, align 4
  %208 = icmp eq i32 %207, 3
  br i1 %208, label %209, label %220

209:                                              ; preds = %201
  %210 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %211 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %210, i32 0, i32 41
  %212 = getelementptr inbounds [32768 x i16], [32768 x i16]* %211, i64 0, i64 0
  %213 = bitcast i16* %212 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %213, i8 0, i64 65536, i1 false)
  %214 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %215 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %214, i32 0, i32 40
  %216 = getelementptr inbounds [32768 x i16], [32768 x i16]* %215, i64 0, i64 0
  %217 = bitcast i16* %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %217, i8 0, i64 65536, i1 false)
  %218 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %219 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %218, i32 0, i32 8
  store i32 0, i32* %219, align 4
  br label %220

220:                                              ; preds = %209, %201
  br label %221

221:                                              ; preds = %220, %187, %182, %177, %174
  %222 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %223 = call i32 @tdefl_flush_output_buffer(%struct.tdefl_compressor* noundef %222)
  %224 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %8, align 8
  %225 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %224, i32 0, i32 26
  store i32 %223, i32* %225, align 4
  store i32 %223, i32* %7, align 4
  br label %226

226:                                              ; preds = %221, %197, %144, %135, %115, %26
  %227 = load i32, i32* %7, align 4
  ret i32 %227
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_get_adler32(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  %3 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %4 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_deflateBound(%struct.mz_stream_s* noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.mz_stream_s*, align 8
  %4 = alloca i64, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = mul i64 %6, 110
  %8 = udiv i64 %7, 100
  %9 = add i64 128, %8
  %10 = load i64, i64* %4, align 8
  %11 = add i64 128, %10
  %12 = load i64, i64* %4, align 8
  %13 = udiv i64 %12, 31744
  %14 = add i64 %13, 1
  %15 = mul i64 %14, 5
  %16 = add i64 %11, %15
  %17 = icmp ugt i64 %9, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i64, i64* %4, align 8
  %20 = mul i64 %19, 110
  %21 = udiv i64 %20, 100
  %22 = add i64 128, %21
  br label %31

23:                                               ; preds = %2
  %24 = load i64, i64* %4, align 8
  %25 = add i64 128, %24
  %26 = load i64, i64* %4, align 8
  %27 = udiv i64 %26, 31744
  %28 = add i64 %27, 1
  %29 = mul i64 %28, 5
  %30 = add i64 %25, %29
  br label %31

31:                                               ; preds = %23, %18
  %32 = phi i64 [ %22, %18 ], [ %30, %23 ]
  ret i64 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_compress2(i8* noundef %0, i64* noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.mz_stream_s, align 8
  store i8* %0, i8** %7, align 8
  store i64* %1, i64** %8, align 8
  store i8* %2, i8** %9, align 8
  store i64 %3, i64* %10, align 8
  store i32 %4, i32* %11, align 4
  %14 = bitcast %struct.mz_stream_s* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 112, i1 false)
  %15 = load i64, i64* %10, align 8
  %16 = load i64*, i64** %8, align 8
  %17 = load i64, i64* %16, align 8
  %18 = or i64 %15, %17
  %19 = icmp ugt i64 %18, 4294967295
  br i1 %19, label %20, label %21

20:                                               ; preds = %5
  store i32 -10000, i32* %6, align 4
  br label %57

21:                                               ; preds = %5
  %22 = load i8*, i8** %9, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = load i64, i64* %10, align 8
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 1
  store i32 %25, i32* %26, align 8
  %27 = load i8*, i8** %7, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 3
  store i8* %27, i8** %28, align 8
  %29 = load i64*, i64** %8, align 8
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 4
  store i32 %31, i32* %32, align 8
  %33 = load i32, i32* %11, align 4
  %34 = call i32 @mz_deflateInit(%struct.mz_stream_s* noundef %13, i32 noundef %33)
  store i32 %34, i32* %12, align 4
  %35 = load i32, i32* %12, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %21
  %38 = load i32, i32* %12, align 4
  store i32 %38, i32* %6, align 4
  br label %57

39:                                               ; preds = %21
  %40 = call i32 @mz_deflate(%struct.mz_stream_s* noundef %13, i32 noundef 4)
  store i32 %40, i32* %12, align 4
  %41 = load i32, i32* %12, align 4
  %42 = icmp ne i32 %41, 1
  br i1 %42, label %43, label %52

43:                                               ; preds = %39
  %44 = call i32 @mz_deflateEnd(%struct.mz_stream_s* noundef %13)
  %45 = load i32, i32* %12, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  br label %50

48:                                               ; preds = %43
  %49 = load i32, i32* %12, align 4
  br label %50

50:                                               ; preds = %48, %47
  %51 = phi i32 [ -5, %47 ], [ %49, %48 ]
  store i32 %51, i32* %6, align 4
  br label %57

52:                                               ; preds = %39
  %53 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 5
  %54 = load i64, i64* %53, align 8
  %55 = load i64*, i64** %8, align 8
  store i64 %54, i64* %55, align 8
  %56 = call i32 @mz_deflateEnd(%struct.mz_stream_s* noundef %13)
  store i32 %56, i32* %6, align 4
  br label %57

57:                                               ; preds = %52, %50, %37, %20
  %58 = load i32, i32* %6, align 4
  ret i32 %58
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_compress(i8* noundef %0, i64* noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64* %1, i64** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = call i32 @mz_compress2(i8* noundef %9, i64* noundef %10, i8* noundef %11, i64 noundef %12, i32 noundef -1)
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_compressBound(i64 noundef %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @mz_deflateBound(%struct.mz_stream_s* noundef null, i64 noundef %3)
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_inflateInit2(%struct.mz_stream_s* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_stream_s*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.inflate_state*, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %8 = icmp ne %struct.mz_stream_s* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i32 -2, i32* %3, align 4
  br label %81

10:                                               ; preds = %2
  %11 = load i32, i32* %5, align 4
  %12 = icmp ne i32 %11, 15
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  %14 = load i32, i32* %5, align 4
  %15 = sub nsw i32 0, %14
  %16 = icmp ne i32 %15, 15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i32 -10000, i32* %3, align 4
  br label %81

18:                                               ; preds = %13, %10
  %19 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %19, i32 0, i32 11
  store i32 0, i32* %20, align 8
  %21 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %22 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %21, i32 0, i32 12
  store i64 0, i64* %22, align 8
  %23 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %24 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %23, i32 0, i32 6
  store i8* null, i8** %24, align 8
  %25 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %26 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %25, i32 0, i32 2
  store i64 0, i64* %26, align 8
  %27 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %27, i32 0, i32 5
  store i64 0, i64* %28, align 8
  %29 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %30 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %29, i32 0, i32 13
  store i64 0, i64* %30, align 8
  %31 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %32 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %31, i32 0, i32 8
  %33 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %32, align 8
  %34 = icmp ne i8* (i8*, i64, i64)* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %18
  %36 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %37 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %36, i32 0, i32 8
  store i8* (i8*, i64, i64)* @miniz_def_alloc_func, i8* (i8*, i64, i64)** %37, align 8
  br label %38

38:                                               ; preds = %35, %18
  %39 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %40 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %39, i32 0, i32 9
  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %40, align 8
  %42 = icmp ne void (i8*, i8*)* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %45 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %44, i32 0, i32 9
  store void (i8*, i8*)* @miniz_def_free_func, void (i8*, i8*)** %45, align 8
  br label %46

46:                                               ; preds = %43, %38
  %47 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %48 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %47, i32 0, i32 8
  %49 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %48, align 8
  %50 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %51 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %50, i32 0, i32 10
  %52 = load i8*, i8** %51, align 8
  %53 = call i8* %49(i8* noundef %52, i64 noundef 1, i64 noundef 41168)
  %54 = bitcast i8* %53 to %struct.inflate_state*
  store %struct.inflate_state* %54, %struct.inflate_state** %6, align 8
  %55 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %56 = icmp ne %struct.inflate_state* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %46
  store i32 -4, i32* %3, align 4
  br label %81

58:                                               ; preds = %46
  %59 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %60 = bitcast %struct.inflate_state* %59 to %struct.mz_internal_state*
  %61 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %62 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %61, i32 0, i32 7
  store %struct.mz_internal_state* %60, %struct.mz_internal_state** %62, align 8
  br label %63

63:                                               ; preds = %58
  %64 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %65 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %64, i32 0, i32 0
  %66 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %65, i32 0, i32 0
  store i32 0, i32* %66, align 8
  br label %67

67:                                               ; preds = %63
  %68 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %69 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %68, i32 0, i32 1
  store i32 0, i32* %69, align 8
  %70 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %71 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %70, i32 0, i32 2
  store i32 0, i32* %71, align 4
  %72 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %73 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %72, i32 0, i32 7
  store i32 1, i32* %73, align 4
  %74 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %75 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %74, i32 0, i32 3
  store i32 1, i32* %75, align 8
  %76 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %77 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %76, i32 0, i32 4
  store i32 0, i32* %77, align 4
  %78 = load i32, i32* %5, align 4
  %79 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %80 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %79, i32 0, i32 5
  store i32 %78, i32* %80, align 8
  store i32 0, i32* %3, align 4
  br label %81

81:                                               ; preds = %67, %57, %17, %9
  %82 = load i32, i32* %3, align 4
  ret i32 %82
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_inflateInit(%struct.mz_stream_s* noundef %0) #0 {
  %2 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %2, align 8
  %3 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %4 = call i32 @mz_inflateInit2(%struct.mz_stream_s* noundef %3, i32 noundef 15)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_inflateReset(%struct.mz_stream_s* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_stream_s*, align 8
  %4 = alloca %struct.inflate_state*, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %3, align 8
  %5 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %6 = icmp ne %struct.mz_stream_s* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %40

8:                                                ; preds = %1
  %9 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %10 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %9, i32 0, i32 11
  store i32 0, i32* %10, align 8
  %11 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %12 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %11, i32 0, i32 12
  store i64 0, i64* %12, align 8
  %13 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %14 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 6
  store i8* null, i8** %14, align 8
  %15 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %15, i32 0, i32 2
  store i64 0, i64* %16, align 8
  %17 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %18 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %17, i32 0, i32 5
  store i64 0, i64* %18, align 8
  %19 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %19, i32 0, i32 13
  store i64 0, i64* %20, align 8
  %21 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %22 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %21, i32 0, i32 7
  %23 = load %struct.mz_internal_state*, %struct.mz_internal_state** %22, align 8
  %24 = bitcast %struct.mz_internal_state* %23 to %struct.inflate_state*
  store %struct.inflate_state* %24, %struct.inflate_state** %4, align 8
  br label %25

25:                                               ; preds = %8
  %26 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8
  %27 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %26, i32 0, i32 0
  %28 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %27, i32 0, i32 0
  store i32 0, i32* %28, align 8
  br label %29

29:                                               ; preds = %25
  %30 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8
  %31 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %30, i32 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8
  %33 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %32, i32 0, i32 2
  store i32 0, i32* %33, align 4
  %34 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8
  %35 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %34, i32 0, i32 7
  store i32 1, i32* %35, align 4
  %36 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8
  %37 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %36, i32 0, i32 3
  store i32 1, i32* %37, align 8
  %38 = load %struct.inflate_state*, %struct.inflate_state** %4, align 8
  %39 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %38, i32 0, i32 4
  store i32 0, i32* %39, align 4
  store i32 0, i32* %2, align 4
  br label %40

40:                                               ; preds = %29, %7
  %41 = load i32, i32* %2, align 4
  ret i32 %41
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_inflate(%struct.mz_stream_s* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_stream_s*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.inflate_state*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 8, i32* %9, align 4
  %14 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %15 = icmp ne %struct.mz_stream_s* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %18 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %17, i32 0, i32 7
  %19 = load %struct.mz_internal_state*, %struct.mz_internal_state** %18, align 8
  %20 = icmp ne %struct.mz_internal_state* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %2
  store i32 -2, i32* %3, align 4
  br label %446

22:                                               ; preds = %16
  %23 = load i32, i32* %5, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  store i32 2, i32* %5, align 4
  br label %26

26:                                               ; preds = %25, %22
  %27 = load i32, i32* %5, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = load i32, i32* %5, align 4
  %31 = icmp ne i32 %30, 2
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = load i32, i32* %5, align 4
  %34 = icmp ne i32 %33, 4
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  store i32 -2, i32* %3, align 4
  br label %446

36:                                               ; preds = %32, %29, %26
  %37 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %38 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %37, i32 0, i32 7
  %39 = load %struct.mz_internal_state*, %struct.mz_internal_state** %38, align 8
  %40 = bitcast %struct.mz_internal_state* %39 to %struct.inflate_state*
  store %struct.inflate_state* %40, %struct.inflate_state** %6, align 8
  %41 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %42 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %41, i32 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %36
  %46 = load i32, i32* %9, align 4
  %47 = or i32 %46, 1
  store i32 %47, i32* %9, align 4
  br label %48

48:                                               ; preds = %45, %36
  %49 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %50 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  store i64 %52, i64* %12, align 8
  %53 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %54 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %8, align 4
  %56 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %57 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %56, i32 0, i32 3
  store i32 0, i32* %57, align 8
  %58 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %59 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %58, i32 0, i32 7
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %48
  store i32 -3, i32* %3, align 4
  br label %446

63:                                               ; preds = %48
  %64 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %65 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %64, i32 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %63
  %69 = load i32, i32* %5, align 4
  %70 = icmp ne i32 %69, 4
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i32 -2, i32* %3, align 4
  br label %446

72:                                               ; preds = %68, %63
  %73 = load i32, i32* %5, align 4
  %74 = icmp eq i32 %73, 4
  %75 = zext i1 %74 to i32
  %76 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %77 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %76, i32 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = or i32 %78, %75
  store i32 %79, i32* %77, align 4
  %80 = load i32, i32* %5, align 4
  %81 = icmp eq i32 %80, 4
  br i1 %81, label %82, label %170

82:                                               ; preds = %72
  %83 = load i32, i32* %8, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %170

85:                                               ; preds = %82
  %86 = load i32, i32* %9, align 4
  %87 = or i32 %86, 4
  store i32 %87, i32* %9, align 4
  %88 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %89 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  store i64 %91, i64* %10, align 8
  %92 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %93 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %92, i32 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = zext i32 %94 to i64
  store i64 %95, i64* %11, align 8
  %96 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %97 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %96, i32 0, i32 0
  %98 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %99 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %98, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %102 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %101, i32 0, i32 3
  %103 = load i8*, i8** %102, align 8
  %104 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %105 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %104, i32 0, i32 3
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %9, align 4
  %108 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %97, i8* noundef %100, i64* noundef %10, i8* noundef %103, i8* noundef %106, i64* noundef %11, i32 noundef %107)
  store i32 %108, i32* %13, align 4
  %109 = load i32, i32* %13, align 4
  %110 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %111 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %110, i32 0, i32 7
  store i32 %109, i32* %111, align 4
  %112 = load i64, i64* %10, align 8
  %113 = trunc i64 %112 to i32
  %114 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %115 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %114, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = zext i32 %113 to i64
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  store i8* %118, i8** %115, align 8
  %119 = load i64, i64* %10, align 8
  %120 = trunc i64 %119 to i32
  %121 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %122 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %121, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = sub i32 %123, %120
  store i32 %124, i32* %122, align 8
  %125 = load i64, i64* %10, align 8
  %126 = trunc i64 %125 to i32
  %127 = zext i32 %126 to i64
  %128 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %129 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %128, i32 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, %127
  store i64 %131, i64* %129, align 8
  %132 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %133 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %132, i32 0, i32 0
  %134 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %133, i32 0, i32 7
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %138 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %137, i32 0, i32 12
  store i64 %136, i64* %138, align 8
  %139 = load i64, i64* %11, align 8
  %140 = trunc i64 %139 to i32
  %141 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %142 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %141, i32 0, i32 3
  %143 = load i8*, i8** %142, align 8
  %144 = zext i32 %140 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8* %145, i8** %142, align 8
  %146 = load i64, i64* %11, align 8
  %147 = trunc i64 %146 to i32
  %148 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %149 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %148, i32 0, i32 4
  %150 = load i32, i32* %149, align 8
  %151 = sub i32 %150, %147
  store i32 %151, i32* %149, align 8
  %152 = load i64, i64* %11, align 8
  %153 = trunc i64 %152 to i32
  %154 = zext i32 %153 to i64
  %155 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %156 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %155, i32 0, i32 5
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, %154
  store i64 %158, i64* %156, align 8
  %159 = load i32, i32* %13, align 4
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %85
  store i32 -3, i32* %3, align 4
  br label %446

162:                                              ; preds = %85
  %163 = load i32, i32* %13, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %167 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %166, i32 0, i32 7
  store i32 -1, i32* %167, align 4
  store i32 -5, i32* %3, align 4
  br label %446

168:                                              ; preds = %162
  br label %169

169:                                              ; preds = %168
  store i32 1, i32* %3, align 4
  br label %446

170:                                              ; preds = %82, %72
  %171 = load i32, i32* %5, align 4
  %172 = icmp ne i32 %171, 4
  br i1 %172, label %173, label %176

173:                                              ; preds = %170
  %174 = load i32, i32* %9, align 4
  %175 = or i32 %174, 2
  store i32 %175, i32* %9, align 4
  br label %176

176:                                              ; preds = %173, %170
  %177 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %178 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %177, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %256

181:                                              ; preds = %176
  %182 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %183 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %182, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %186 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %185, i32 0, i32 4
  %187 = load i32, i32* %186, align 8
  %188 = icmp ult i32 %184, %187
  br i1 %188, label %189, label %193

189:                                              ; preds = %181
  %190 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %191 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %190, i32 0, i32 2
  %192 = load i32, i32* %191, align 4
  br label %197

193:                                              ; preds = %181
  %194 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %195 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %194, i32 0, i32 4
  %196 = load i32, i32* %195, align 8
  br label %197

197:                                              ; preds = %193, %189
  %198 = phi i32 [ %192, %189 ], [ %196, %193 ]
  store i32 %198, i32* %7, align 4
  %199 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %200 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %199, i32 0, i32 3
  %201 = load i8*, i8** %200, align 8
  %202 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %203 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %202, i32 0, i32 6
  %204 = getelementptr inbounds [32768 x i8], [32768 x i8]* %203, i64 0, i64 0
  %205 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %206 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %204, i64 %208
  %210 = load i32, i32* %7, align 4
  %211 = zext i32 %210 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %201, i8* align 1 %209, i64 %211, i1 false)
  %212 = load i32, i32* %7, align 4
  %213 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %214 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %213, i32 0, i32 3
  %215 = load i8*, i8** %214, align 8
  %216 = zext i32 %212 to i64
  %217 = getelementptr inbounds i8, i8* %215, i64 %216
  store i8* %217, i8** %214, align 8
  %218 = load i32, i32* %7, align 4
  %219 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %220 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %219, i32 0, i32 4
  %221 = load i32, i32* %220, align 8
  %222 = sub i32 %221, %218
  store i32 %222, i32* %220, align 8
  %223 = load i32, i32* %7, align 4
  %224 = zext i32 %223 to i64
  %225 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %226 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %225, i32 0, i32 5
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %227, %224
  store i64 %228, i64* %226, align 8
  %229 = load i32, i32* %7, align 4
  %230 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %231 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %230, i32 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = sub i32 %232, %229
  store i32 %233, i32* %231, align 4
  %234 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %235 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %234, i32 0, i32 1
  %236 = load i32, i32* %235, align 8
  %237 = load i32, i32* %7, align 4
  %238 = add i32 %236, %237
  %239 = and i32 %238, 32767
  %240 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %241 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %240, i32 0, i32 1
  store i32 %239, i32* %241, align 8
  %242 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %243 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %242, i32 0, i32 7
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %252

246:                                              ; preds = %197
  %247 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %248 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %247, i32 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp ne i32 %249, 0
  %251 = xor i1 %250, true
  br label %252

252:                                              ; preds = %246, %197
  %253 = phi i1 [ false, %197 ], [ %251, %246 ]
  %254 = zext i1 %253 to i64
  %255 = select i1 %253, i32 1, i32 0
  store i32 %255, i32* %3, align 4
  br label %446

256:                                              ; preds = %176
  br label %257

257:                                              ; preds = %432, %256
  %258 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %259 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = zext i32 %260 to i64
  store i64 %261, i64* %10, align 8
  %262 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %263 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %262, i32 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = sub i32 32768, %264
  %266 = zext i32 %265 to i64
  store i64 %266, i64* %11, align 8
  %267 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %268 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %267, i32 0, i32 0
  %269 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %270 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %269, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %273 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %272, i32 0, i32 6
  %274 = getelementptr inbounds [32768 x i8], [32768 x i8]* %273, i64 0, i64 0
  %275 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %276 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %275, i32 0, i32 6
  %277 = getelementptr inbounds [32768 x i8], [32768 x i8]* %276, i64 0, i64 0
  %278 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %279 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %278, i32 0, i32 1
  %280 = load i32, i32* %279, align 8
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds i8, i8* %277, i64 %281
  %283 = load i32, i32* %9, align 4
  %284 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %268, i8* noundef %271, i64* noundef %10, i8* noundef %274, i8* noundef %282, i64* noundef %11, i32 noundef %283)
  store i32 %284, i32* %13, align 4
  %285 = load i32, i32* %13, align 4
  %286 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %287 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %286, i32 0, i32 7
  store i32 %285, i32* %287, align 4
  %288 = load i64, i64* %10, align 8
  %289 = trunc i64 %288 to i32
  %290 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %291 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %290, i32 0, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = zext i32 %289 to i64
  %294 = getelementptr inbounds i8, i8* %292, i64 %293
  store i8* %294, i8** %291, align 8
  %295 = load i64, i64* %10, align 8
  %296 = trunc i64 %295 to i32
  %297 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %298 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %297, i32 0, i32 1
  %299 = load i32, i32* %298, align 8
  %300 = sub i32 %299, %296
  store i32 %300, i32* %298, align 8
  %301 = load i64, i64* %10, align 8
  %302 = trunc i64 %301 to i32
  %303 = zext i32 %302 to i64
  %304 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %305 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %304, i32 0, i32 2
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %306, %303
  store i64 %307, i64* %305, align 8
  %308 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %309 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %308, i32 0, i32 0
  %310 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %309, i32 0, i32 7
  %311 = load i32, i32* %310, align 4
  %312 = zext i32 %311 to i64
  %313 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %314 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %313, i32 0, i32 12
  store i64 %312, i64* %314, align 8
  %315 = load i64, i64* %11, align 8
  %316 = trunc i64 %315 to i32
  %317 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %318 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %317, i32 0, i32 2
  store i32 %316, i32* %318, align 4
  %319 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %320 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %319, i32 0, i32 2
  %321 = load i32, i32* %320, align 4
  %322 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %323 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %322, i32 0, i32 4
  %324 = load i32, i32* %323, align 8
  %325 = icmp ult i32 %321, %324
  br i1 %325, label %326, label %330

326:                                              ; preds = %257
  %327 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %328 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %327, i32 0, i32 2
  %329 = load i32, i32* %328, align 4
  br label %334

330:                                              ; preds = %257
  %331 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %332 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %331, i32 0, i32 4
  %333 = load i32, i32* %332, align 8
  br label %334

334:                                              ; preds = %330, %326
  %335 = phi i32 [ %329, %326 ], [ %333, %330 ]
  store i32 %335, i32* %7, align 4
  %336 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %337 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %336, i32 0, i32 3
  %338 = load i8*, i8** %337, align 8
  %339 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %340 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %339, i32 0, i32 6
  %341 = getelementptr inbounds [32768 x i8], [32768 x i8]* %340, i64 0, i64 0
  %342 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %343 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %342, i32 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %341, i64 %345
  %347 = load i32, i32* %7, align 4
  %348 = zext i32 %347 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %338, i8* align 1 %346, i64 %348, i1 false)
  %349 = load i32, i32* %7, align 4
  %350 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %351 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %350, i32 0, i32 3
  %352 = load i8*, i8** %351, align 8
  %353 = zext i32 %349 to i64
  %354 = getelementptr inbounds i8, i8* %352, i64 %353
  store i8* %354, i8** %351, align 8
  %355 = load i32, i32* %7, align 4
  %356 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %357 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %356, i32 0, i32 4
  %358 = load i32, i32* %357, align 8
  %359 = sub i32 %358, %355
  store i32 %359, i32* %357, align 8
  %360 = load i32, i32* %7, align 4
  %361 = zext i32 %360 to i64
  %362 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %363 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %362, i32 0, i32 5
  %364 = load i64, i64* %363, align 8
  %365 = add i64 %364, %361
  store i64 %365, i64* %363, align 8
  %366 = load i32, i32* %7, align 4
  %367 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %368 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %367, i32 0, i32 2
  %369 = load i32, i32* %368, align 4
  %370 = sub i32 %369, %366
  store i32 %370, i32* %368, align 4
  %371 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %372 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %371, i32 0, i32 1
  %373 = load i32, i32* %372, align 8
  %374 = load i32, i32* %7, align 4
  %375 = add i32 %373, %374
  %376 = and i32 %375, 32767
  %377 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %378 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %377, i32 0, i32 1
  store i32 %376, i32* %378, align 8
  %379 = load i32, i32* %13, align 4
  %380 = icmp slt i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %334
  store i32 -3, i32* %3, align 4
  br label %446

382:                                              ; preds = %334
  %383 = load i32, i32* %13, align 4
  %384 = icmp eq i32 %383, 1
  br i1 %384, label %385, label %389

385:                                              ; preds = %382
  %386 = load i64, i64* %12, align 8
  %387 = icmp ne i64 %386, 0
  br i1 %387, label %389, label %388

388:                                              ; preds = %385
  store i32 -5, i32* %3, align 4
  br label %446

389:                                              ; preds = %385, %382
  %390 = load i32, i32* %5, align 4
  %391 = icmp eq i32 %390, 4
  br i1 %391, label %392, label %410

392:                                              ; preds = %389
  %393 = load i32, i32* %13, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %402

395:                                              ; preds = %392
  %396 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %397 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %396, i32 0, i32 2
  %398 = load i32, i32* %397, align 4
  %399 = icmp ne i32 %398, 0
  %400 = zext i1 %399 to i64
  %401 = select i1 %399, i32 -5, i32 1
  store i32 %401, i32* %3, align 4
  br label %446

402:                                              ; preds = %392
  %403 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %404 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %403, i32 0, i32 4
  %405 = load i32, i32* %404, align 8
  %406 = icmp ne i32 %405, 0
  br i1 %406, label %408, label %407

407:                                              ; preds = %402
  store i32 -5, i32* %3, align 4
  br label %446

408:                                              ; preds = %402
  br label %409

409:                                              ; preds = %408
  br label %430

410:                                              ; preds = %389
  %411 = load i32, i32* %13, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %428, label %413

413:                                              ; preds = %410
  %414 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %415 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %414, i32 0, i32 1
  %416 = load i32, i32* %415, align 8
  %417 = icmp ne i32 %416, 0
  br i1 %417, label %418, label %428

418:                                              ; preds = %413
  %419 = load %struct.mz_stream_s*, %struct.mz_stream_s** %4, align 8
  %420 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %419, i32 0, i32 4
  %421 = load i32, i32* %420, align 8
  %422 = icmp ne i32 %421, 0
  br i1 %422, label %423, label %428

423:                                              ; preds = %418
  %424 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %425 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %424, i32 0, i32 2
  %426 = load i32, i32* %425, align 4
  %427 = icmp ne i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %423, %418, %413, %410
  br label %433

429:                                              ; preds = %423
  br label %430

430:                                              ; preds = %429, %409
  br label %431

431:                                              ; preds = %430
  br label %432

432:                                              ; preds = %431
  br label %257

433:                                              ; preds = %428
  %434 = load i32, i32* %13, align 4
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %442

436:                                              ; preds = %433
  %437 = load %struct.inflate_state*, %struct.inflate_state** %6, align 8
  %438 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %437, i32 0, i32 2
  %439 = load i32, i32* %438, align 4
  %440 = icmp ne i32 %439, 0
  %441 = xor i1 %440, true
  br label %442

442:                                              ; preds = %436, %433
  %443 = phi i1 [ false, %433 ], [ %441, %436 ]
  %444 = zext i1 %443 to i64
  %445 = select i1 %443, i32 1, i32 0
  store i32 %445, i32* %3, align 4
  br label %446

446:                                              ; preds = %442, %407, %395, %388, %381, %252, %169, %165, %161, %71, %62, %35, %21
  %447 = load i32, i32* %3, align 4
  ret i32 %447
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %0, i8* noundef %1, i64* noundef %2, i8* noundef %3, i8* noundef %4, i64* noundef %5, i32 noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.tinfl_decompressor_tag*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i32, align 4
  %16 = alloca [3 x i16*], align 16
  %17 = alloca [3 x i8*], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i16*, align 8
  %43 = alloca i16*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca [17 x i32], align 16
  %51 = alloca [16 x i32], align 16
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i16, align 2
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i8*, align 8
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i8*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i32, align 4
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i64, align 8
  store %struct.tinfl_decompressor_tag* %0, %struct.tinfl_decompressor_tag** %9, align 8
  store i8* %1, i8** %10, align 8
  store i64* %2, i64** %11, align 8
  store i8* %3, i8** %12, align 8
  store i8* %4, i8** %13, align 8
  store i64* %5, i64** %14, align 8
  store i32 %6, i32* %15, align 4
  store i32 -1, i32* %18, align 4
  %84 = load i8*, i8** %10, align 8
  store i8* %84, i8** %24, align 8
  %85 = load i8*, i8** %10, align 8
  %86 = load i64*, i64** %11, align 8
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  store i8* %88, i8** %25, align 8
  %89 = load i8*, i8** %13, align 8
  store i8* %89, i8** %26, align 8
  %90 = load i8*, i8** %13, align 8
  %91 = icmp ne i8* %90, null
  br i1 %91, label %92, label %97

92:                                               ; preds = %7
  %93 = load i8*, i8** %13, align 8
  %94 = load i64*, i64** %14, align 8
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  br label %98

97:                                               ; preds = %7
  br label %98

98:                                               ; preds = %97, %92
  %99 = phi i8* [ %96, %92 ], [ null, %97 ]
  store i8* %99, i8** %27, align 8
  %100 = load i32, i32* %15, align 4
  %101 = and i32 %100, 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %98
  br label %114

104:                                              ; preds = %98
  %105 = load i8*, i8** %13, align 8
  %106 = load i8*, i8** %12, align 8
  %107 = ptrtoint i8* %105 to i64
  %108 = ptrtoint i8* %106 to i64
  %109 = sub i64 %107, %108
  %110 = load i64*, i64** %14, align 8
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %109, %111
  %113 = sub i64 %112, 1
  br label %114

114:                                              ; preds = %104, %103
  %115 = phi i64 [ -1, %103 ], [ %113, %104 ]
  store i64 %115, i64* %28, align 8
  %116 = load i64, i64* %28, align 8
  %117 = add i64 %116, 1
  %118 = load i64, i64* %28, align 8
  %119 = and i64 %117, %118
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %114
  %122 = load i8*, i8** %13, align 8
  %123 = load i8*, i8** %12, align 8
  %124 = icmp ult i8* %122, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %121, %114
  %126 = load i64*, i64** %14, align 8
  store i64 0, i64* %126, align 8
  %127 = load i64*, i64** %11, align 8
  store i64 0, i64* %127, align 8
  store i32 -3, i32* %8, align 4
  br label %2837

128:                                              ; preds = %121
  %129 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %130 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %129, i32 0, i32 15
  %131 = getelementptr inbounds [576 x i16], [576 x i16]* %130, i64 0, i64 0
  %132 = getelementptr inbounds [3 x i16*], [3 x i16*]* %16, i64 0, i64 0
  store i16* %131, i16** %132, align 16
  %133 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %134 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %133, i32 0, i32 16
  %135 = getelementptr inbounds [64 x i16], [64 x i16]* %134, i64 0, i64 0
  %136 = getelementptr inbounds [3 x i16*], [3 x i16*]* %16, i64 0, i64 1
  store i16* %135, i16** %136, align 8
  %137 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %138 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %137, i32 0, i32 17
  %139 = getelementptr inbounds [38 x i16], [38 x i16]* %138, i64 0, i64 0
  %140 = getelementptr inbounds [3 x i16*], [3 x i16*]* %16, i64 0, i64 2
  store i16* %139, i16** %140, align 16
  %141 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %142 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %141, i32 0, i32 18
  %143 = getelementptr inbounds [288 x i8], [288 x i8]* %142, i64 0, i64 0
  %144 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 0
  store i8* %143, i8** %144, align 16
  %145 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %146 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %145, i32 0, i32 19
  %147 = getelementptr inbounds [32 x i8], [32 x i8]* %146, i64 0, i64 0
  %148 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 1
  store i8* %147, i8** %148, align 8
  %149 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %150 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %149, i32 0, i32 20
  %151 = getelementptr inbounds [19 x i8], [19 x i8]* %150, i64 0, i64 0
  %152 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 2
  store i8* %151, i8** %152, align 16
  %153 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %154 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %153, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %19, align 4
  %156 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %157 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %156, i32 0, i32 12
  %158 = load i64, i64* %157, align 8
  store i64 %158, i64* %23, align 8
  %159 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %160 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %159, i32 0, i32 8
  %161 = load i32, i32* %160, align 8
  store i32 %161, i32* %20, align 4
  %162 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %163 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %162, i32 0, i32 9
  %164 = load i32, i32* %163, align 4
  store i32 %164, i32* %21, align 4
  %165 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %166 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %165, i32 0, i32 10
  %167 = load i32, i32* %166, align 8
  store i32 %167, i32* %22, align 4
  %168 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %169 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %168, i32 0, i32 13
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %29, align 8
  %171 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %172 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %171, i32 0, i32 0
  %173 = load i32, i32* %172, align 8
  switch i32 %173, label %2618 [
    i32 0, label %174
    i32 1, label %201
    i32 2, label %225
    i32 36, label %296
    i32 3, label %321
    i32 5, label %385
    i32 6, label %445
    i32 7, label %495
    i32 39, label %544
    i32 51, label %576
    i32 52, label %614
    i32 9, label %636
    i32 38, label %652
    i32 10, label %739
    i32 11, label %829
    i32 14, label %934
    i32 35, label %1076
    i32 16, label %1331
    i32 17, label %1445
    i32 18, label %1475
    i32 21, label %1565
    i32 23, label %1704
    i32 24, label %1807
    i32 25, label %1999
    i32 26, label %2125
    i32 27, label %2249
    i32 37, label %2316
    i32 53, label %2356
    i32 32, label %2453
    i32 41, label %2543
    i32 42, label %2588
    i32 34, label %2615
  ]

174:                                              ; preds = %128
  %175 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %176 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %175, i32 0, i32 3
  store i32 0, i32* %176, align 4
  %177 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %178 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %177, i32 0, i32 2
  store i32 0, i32* %178, align 8
  store i32 0, i32* %22, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %19, align 4
  store i64 0, i64* %23, align 8
  %179 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %180 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %179, i32 0, i32 7
  store i32 1, i32* %180, align 4
  %181 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %182 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %181, i32 0, i32 4
  store i32 1, i32* %182, align 8
  %183 = load i32, i32* %15, align 4
  %184 = and i32 %183, 1
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %300

186:                                              ; preds = %174
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %202, %187
  %189 = load i8*, i8** %24, align 8
  %190 = load i8*, i8** %25, align 8
  %191 = icmp uge i8* %189, %190
  br i1 %191, label %192, label %203

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %15, align 4
  %195 = and i32 %194, 2
  %196 = icmp ne i32 %195, 0
  %197 = zext i1 %196 to i64
  %198 = select i1 %196, i32 1, i32 -4
  store i32 %198, i32* %18, align 4
  %199 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %200 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %199, i32 0, i32 0
  store i32 1, i32* %200, align 8
  br label %2619

201:                                              ; preds = %128
  br label %202

202:                                              ; preds = %201
  br label %188, !llvm.loop !10

203:                                              ; preds = %188
  %204 = load i8*, i8** %24, align 8
  %205 = getelementptr inbounds i8, i8* %204, i32 1
  store i8* %205, i8** %24, align 8
  %206 = load i8, i8* %204, align 1
  %207 = zext i8 %206 to i32
  %208 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %209 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %208, i32 0, i32 2
  store i32 %207, i32* %209, align 8
  br label %210

210:                                              ; preds = %203
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %226, %211
  %213 = load i8*, i8** %24, align 8
  %214 = load i8*, i8** %25, align 8
  %215 = icmp uge i8* %213, %214
  br i1 %215, label %216, label %227

216:                                              ; preds = %212
  br label %217

217:                                              ; preds = %216
  %218 = load i32, i32* %15, align 4
  %219 = and i32 %218, 2
  %220 = icmp ne i32 %219, 0
  %221 = zext i1 %220 to i64
  %222 = select i1 %220, i32 1, i32 -4
  store i32 %222, i32* %18, align 4
  %223 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %224 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %223, i32 0, i32 0
  store i32 2, i32* %224, align 8
  br label %2619

225:                                              ; preds = %128
  br label %226

226:                                              ; preds = %225
  br label %212, !llvm.loop !11

227:                                              ; preds = %212
  %228 = load i8*, i8** %24, align 8
  %229 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %229, i8** %24, align 8
  %230 = load i8, i8* %228, align 1
  %231 = zext i8 %230 to i32
  %232 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %233 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %232, i32 0, i32 3
  store i32 %231, i32* %233, align 4
  br label %234

234:                                              ; preds = %227
  %235 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %236 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %235, i32 0, i32 2
  %237 = load i32, i32* %236, align 8
  %238 = mul i32 %237, 256
  %239 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %240 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %239, i32 0, i32 3
  %241 = load i32, i32* %240, align 4
  %242 = add i32 %238, %241
  %243 = urem i32 %242, 31
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %257, label %245

245:                                              ; preds = %234
  %246 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %247 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %246, i32 0, i32 3
  %248 = load i32, i32* %247, align 4
  %249 = and i32 %248, 32
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %257, label %251

251:                                              ; preds = %245
  %252 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %253 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %252, i32 0, i32 2
  %254 = load i32, i32* %253, align 8
  %255 = and i32 %254, 15
  %256 = icmp ne i32 %255, 8
  br label %257

257:                                              ; preds = %251, %245, %234
  %258 = phi i1 [ true, %245 ], [ true, %234 ], [ %256, %251 ]
  %259 = zext i1 %258 to i32
  store i32 %259, i32* %21, align 4
  %260 = load i32, i32* %15, align 4
  %261 = and i32 %260, 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %287, label %263

263:                                              ; preds = %257
  %264 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %265 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %264, i32 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = lshr i32 %266, 4
  %268 = add i32 8, %267
  %269 = shl i32 1, %268
  %270 = icmp ugt i32 %269, 32768
  br i1 %270, label %282, label %271

271:                                              ; preds = %263
  %272 = load i64, i64* %28, align 8
  %273 = add i64 %272, 1
  %274 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %275 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %274, i32 0, i32 2
  %276 = load i32, i32* %275, align 8
  %277 = lshr i32 %276, 4
  %278 = add i32 8, %277
  %279 = zext i32 %278 to i64
  %280 = shl i64 1, %279
  %281 = icmp ult i64 %273, %280
  br label %282

282:                                              ; preds = %271, %263
  %283 = phi i1 [ true, %263 ], [ %281, %271 ]
  %284 = zext i1 %283 to i32
  %285 = load i32, i32* %21, align 4
  %286 = or i32 %285, %284
  store i32 %286, i32* %21, align 4
  br label %287

287:                                              ; preds = %282, %257
  %288 = load i32, i32* %21, align 4
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %299

290:                                              ; preds = %287
  br label %291

291:                                              ; preds = %290
  br label %292

292:                                              ; preds = %297, %291
  br label %293

293:                                              ; preds = %292
  store i32 -1, i32* %18, align 4
  %294 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %295 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %294, i32 0, i32 0
  store i32 36, i32* %295, align 8
  br label %2619

296:                                              ; preds = %128
  br label %297

297:                                              ; preds = %296
  br label %292

298:                                              ; No predecessors!
  br label %299

299:                                              ; preds = %298, %287
  br label %300

300:                                              ; preds = %299, %174
  br label %301

301:                                              ; preds = %2424, %300
  br label %302

302:                                              ; preds = %301
  %303 = load i32, i32* %19, align 4
  %304 = icmp ult i32 %303, 3
  br i1 %304, label %305, label %342

305:                                              ; preds = %302
  br label %306

306:                                              ; preds = %338, %305
  br label %307

307:                                              ; preds = %306
  br label %308

308:                                              ; preds = %322, %307
  %309 = load i8*, i8** %24, align 8
  %310 = load i8*, i8** %25, align 8
  %311 = icmp uge i8* %309, %310
  br i1 %311, label %312, label %323

312:                                              ; preds = %308
  br label %313

313:                                              ; preds = %312
  %314 = load i32, i32* %15, align 4
  %315 = and i32 %314, 2
  %316 = icmp ne i32 %315, 0
  %317 = zext i1 %316 to i64
  %318 = select i1 %316, i32 1, i32 -4
  store i32 %318, i32* %18, align 4
  %319 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %320 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %319, i32 0, i32 0
  store i32 3, i32* %320, align 8
  br label %2619

321:                                              ; preds = %128
  br label %322

322:                                              ; preds = %321
  br label %308, !llvm.loop !12

323:                                              ; preds = %308
  %324 = load i8*, i8** %24, align 8
  %325 = getelementptr inbounds i8, i8* %324, i32 1
  store i8* %325, i8** %24, align 8
  %326 = load i8, i8* %324, align 1
  %327 = zext i8 %326 to i32
  store i32 %327, i32* %30, align 4
  br label %328

328:                                              ; preds = %323
  %329 = load i32, i32* %30, align 4
  %330 = zext i32 %329 to i64
  %331 = load i32, i32* %19, align 4
  %332 = zext i32 %331 to i64
  %333 = shl i64 %330, %332
  %334 = load i64, i64* %23, align 8
  %335 = or i64 %334, %333
  store i64 %335, i64* %23, align 8
  %336 = load i32, i32* %19, align 4
  %337 = add i32 %336, 8
  store i32 %337, i32* %19, align 4
  br label %338

338:                                              ; preds = %328
  %339 = load i32, i32* %19, align 4
  %340 = icmp ult i32 %339, 3
  br i1 %340, label %306, label %341, !llvm.loop !13

341:                                              ; preds = %338
  br label %342

342:                                              ; preds = %341, %302
  %343 = load i64, i64* %23, align 8
  %344 = and i64 %343, 7
  %345 = trunc i64 %344 to i32
  %346 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %347 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %346, i32 0, i32 5
  store i32 %345, i32* %347, align 4
  %348 = load i64, i64* %23, align 8
  %349 = lshr i64 %348, 3
  store i64 %349, i64* %23, align 8
  %350 = load i32, i32* %19, align 4
  %351 = sub i32 %350, 3
  store i32 %351, i32* %19, align 4
  br label %352

352:                                              ; preds = %342
  %353 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %354 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %353, i32 0, i32 5
  %355 = load i32, i32* %354, align 4
  %356 = lshr i32 %355, 1
  %357 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %358 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %357, i32 0, i32 6
  store i32 %356, i32* %358, align 8
  %359 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %360 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %359, i32 0, i32 6
  %361 = load i32, i32* %360, align 8
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %728

363:                                              ; preds = %352
  br label %364

364:                                              ; preds = %363
  %365 = load i32, i32* %19, align 4
  %366 = load i32, i32* %19, align 4
  %367 = and i32 %366, 7
  %368 = icmp ult i32 %365, %367
  br i1 %368, label %369, label %408

369:                                              ; preds = %364
  br label %370

370:                                              ; preds = %402, %369
  br label %371

371:                                              ; preds = %370
  br label %372

372:                                              ; preds = %386, %371
  %373 = load i8*, i8** %24, align 8
  %374 = load i8*, i8** %25, align 8
  %375 = icmp uge i8* %373, %374
  br i1 %375, label %376, label %387

376:                                              ; preds = %372
  br label %377

377:                                              ; preds = %376
  %378 = load i32, i32* %15, align 4
  %379 = and i32 %378, 2
  %380 = icmp ne i32 %379, 0
  %381 = zext i1 %380 to i64
  %382 = select i1 %380, i32 1, i32 -4
  store i32 %382, i32* %18, align 4
  %383 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %384 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %383, i32 0, i32 0
  store i32 5, i32* %384, align 8
  br label %2619

385:                                              ; preds = %128
  br label %386

386:                                              ; preds = %385
  br label %372, !llvm.loop !14

387:                                              ; preds = %372
  %388 = load i8*, i8** %24, align 8
  %389 = getelementptr inbounds i8, i8* %388, i32 1
  store i8* %389, i8** %24, align 8
  %390 = load i8, i8* %388, align 1
  %391 = zext i8 %390 to i32
  store i32 %391, i32* %31, align 4
  br label %392

392:                                              ; preds = %387
  %393 = load i32, i32* %31, align 4
  %394 = zext i32 %393 to i64
  %395 = load i32, i32* %19, align 4
  %396 = zext i32 %395 to i64
  %397 = shl i64 %394, %396
  %398 = load i64, i64* %23, align 8
  %399 = or i64 %398, %397
  store i64 %399, i64* %23, align 8
  %400 = load i32, i32* %19, align 4
  %401 = add i32 %400, 8
  store i32 %401, i32* %19, align 4
  br label %402

402:                                              ; preds = %392
  %403 = load i32, i32* %19, align 4
  %404 = load i32, i32* %19, align 4
  %405 = and i32 %404, 7
  %406 = icmp ult i32 %403, %405
  br i1 %406, label %370, label %407, !llvm.loop !15

407:                                              ; preds = %402
  br label %408

408:                                              ; preds = %407, %364
  %409 = load i32, i32* %19, align 4
  %410 = and i32 %409, 7
  %411 = load i64, i64* %23, align 8
  %412 = zext i32 %410 to i64
  %413 = lshr i64 %411, %412
  store i64 %413, i64* %23, align 8
  %414 = load i32, i32* %19, align 4
  %415 = and i32 %414, 7
  %416 = load i32, i32* %19, align 4
  %417 = sub i32 %416, %415
  store i32 %417, i32* %19, align 4
  br label %418

418:                                              ; preds = %408
  store i32 0, i32* %21, align 4
  br label %419

419:                                              ; preds = %508, %418
  %420 = load i32, i32* %21, align 4
  %421 = icmp ult i32 %420, 4
  br i1 %421, label %422, label %511

422:                                              ; preds = %419
  %423 = load i32, i32* %19, align 4
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %425, label %480

425:                                              ; preds = %422
  br label %426

426:                                              ; preds = %425
  %427 = load i32, i32* %19, align 4
  %428 = icmp ult i32 %427, 8
  br i1 %428, label %429, label %466

429:                                              ; preds = %426
  br label %430

430:                                              ; preds = %462, %429
  br label %431

431:                                              ; preds = %430
  br label %432

432:                                              ; preds = %446, %431
  %433 = load i8*, i8** %24, align 8
  %434 = load i8*, i8** %25, align 8
  %435 = icmp uge i8* %433, %434
  br i1 %435, label %436, label %447

436:                                              ; preds = %432
  br label %437

437:                                              ; preds = %436
  %438 = load i32, i32* %15, align 4
  %439 = and i32 %438, 2
  %440 = icmp ne i32 %439, 0
  %441 = zext i1 %440 to i64
  %442 = select i1 %440, i32 1, i32 -4
  store i32 %442, i32* %18, align 4
  %443 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %444 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %443, i32 0, i32 0
  store i32 6, i32* %444, align 8
  br label %2619

445:                                              ; preds = %128
  br label %446

446:                                              ; preds = %445
  br label %432, !llvm.loop !16

447:                                              ; preds = %432
  %448 = load i8*, i8** %24, align 8
  %449 = getelementptr inbounds i8, i8* %448, i32 1
  store i8* %449, i8** %24, align 8
  %450 = load i8, i8* %448, align 1
  %451 = zext i8 %450 to i32
  store i32 %451, i32* %32, align 4
  br label %452

452:                                              ; preds = %447
  %453 = load i32, i32* %32, align 4
  %454 = zext i32 %453 to i64
  %455 = load i32, i32* %19, align 4
  %456 = zext i32 %455 to i64
  %457 = shl i64 %454, %456
  %458 = load i64, i64* %23, align 8
  %459 = or i64 %458, %457
  store i64 %459, i64* %23, align 8
  %460 = load i32, i32* %19, align 4
  %461 = add i32 %460, 8
  store i32 %461, i32* %19, align 4
  br label %462

462:                                              ; preds = %452
  %463 = load i32, i32* %19, align 4
  %464 = icmp ult i32 %463, 8
  br i1 %464, label %430, label %465, !llvm.loop !17

465:                                              ; preds = %462
  br label %466

466:                                              ; preds = %465, %426
  %467 = load i64, i64* %23, align 8
  %468 = and i64 %467, 255
  %469 = trunc i64 %468 to i8
  %470 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %471 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %470, i32 0, i32 21
  %472 = load i32, i32* %21, align 4
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [4 x i8], [4 x i8]* %471, i64 0, i64 %473
  store i8 %469, i8* %474, align 1
  %475 = load i64, i64* %23, align 8
  %476 = lshr i64 %475, 8
  store i64 %476, i64* %23, align 8
  %477 = load i32, i32* %19, align 4
  %478 = sub i32 %477, 8
  store i32 %478, i32* %19, align 4
  br label %479

479:                                              ; preds = %466
  br label %507

480:                                              ; preds = %422
  br label %481

481:                                              ; preds = %480
  br label %482

482:                                              ; preds = %496, %481
  %483 = load i8*, i8** %24, align 8
  %484 = load i8*, i8** %25, align 8
  %485 = icmp uge i8* %483, %484
  br i1 %485, label %486, label %497

486:                                              ; preds = %482
  br label %487

487:                                              ; preds = %486
  %488 = load i32, i32* %15, align 4
  %489 = and i32 %488, 2
  %490 = icmp ne i32 %489, 0
  %491 = zext i1 %490 to i64
  %492 = select i1 %490, i32 1, i32 -4
  store i32 %492, i32* %18, align 4
  %493 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %494 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %493, i32 0, i32 0
  store i32 7, i32* %494, align 8
  br label %2619

495:                                              ; preds = %128
  br label %496

496:                                              ; preds = %495
  br label %482, !llvm.loop !18

497:                                              ; preds = %482
  %498 = load i8*, i8** %24, align 8
  %499 = getelementptr inbounds i8, i8* %498, i32 1
  store i8* %499, i8** %24, align 8
  %500 = load i8, i8* %498, align 1
  %501 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %502 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %501, i32 0, i32 21
  %503 = load i32, i32* %21, align 4
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds [4 x i8], [4 x i8]* %502, i64 0, i64 %504
  store i8 %500, i8* %505, align 1
  br label %506

506:                                              ; preds = %497
  br label %507

507:                                              ; preds = %506, %479
  br label %508

508:                                              ; preds = %507
  %509 = load i32, i32* %21, align 4
  %510 = add i32 %509, 1
  store i32 %510, i32* %21, align 4
  br label %419, !llvm.loop !19

511:                                              ; preds = %419
  %512 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %513 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %512, i32 0, i32 21
  %514 = getelementptr inbounds [4 x i8], [4 x i8]* %513, i64 0, i64 0
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i32
  %517 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %518 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %517, i32 0, i32 21
  %519 = getelementptr inbounds [4 x i8], [4 x i8]* %518, i64 0, i64 1
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = shl i32 %521, 8
  %523 = or i32 %516, %522
  store i32 %523, i32* %21, align 4
  %524 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %525 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %524, i32 0, i32 21
  %526 = getelementptr inbounds [4 x i8], [4 x i8]* %525, i64 0, i64 2
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i32
  %529 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %530 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %529, i32 0, i32 21
  %531 = getelementptr inbounds [4 x i8], [4 x i8]* %530, i64 0, i64 3
  %532 = load i8, i8* %531, align 1
  %533 = zext i8 %532 to i32
  %534 = shl i32 %533, 8
  %535 = or i32 %528, %534
  %536 = xor i32 65535, %535
  %537 = icmp ne i32 %523, %536
  br i1 %537, label %538, label %547

538:                                              ; preds = %511
  br label %539

539:                                              ; preds = %538
  br label %540

540:                                              ; preds = %545, %539
  br label %541

541:                                              ; preds = %540
  store i32 -1, i32* %18, align 4
  %542 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %543 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %542, i32 0, i32 0
  store i32 39, i32* %543, align 8
  br label %2619

544:                                              ; preds = %128
  br label %545

545:                                              ; preds = %544
  br label %540

546:                                              ; No predecessors!
  br label %547

547:                                              ; preds = %546, %511
  br label %548

548:                                              ; preds = %616, %547
  %549 = load i32, i32* %21, align 4
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %551, label %554

551:                                              ; preds = %548
  %552 = load i32, i32* %19, align 4
  %553 = icmp ne i32 %552, 0
  br label %554

554:                                              ; preds = %551, %548
  %555 = phi i1 [ false, %548 ], [ %553, %551 ]
  br i1 %555, label %556, label %623

556:                                              ; preds = %554
  br label %557

557:                                              ; preds = %556
  %558 = load i32, i32* %19, align 4
  %559 = icmp ult i32 %558, 8
  br i1 %559, label %560, label %597

560:                                              ; preds = %557
  br label %561

561:                                              ; preds = %593, %560
  br label %562

562:                                              ; preds = %561
  br label %563

563:                                              ; preds = %577, %562
  %564 = load i8*, i8** %24, align 8
  %565 = load i8*, i8** %25, align 8
  %566 = icmp uge i8* %564, %565
  br i1 %566, label %567, label %578

567:                                              ; preds = %563
  br label %568

568:                                              ; preds = %567
  %569 = load i32, i32* %15, align 4
  %570 = and i32 %569, 2
  %571 = icmp ne i32 %570, 0
  %572 = zext i1 %571 to i64
  %573 = select i1 %571, i32 1, i32 -4
  store i32 %573, i32* %18, align 4
  %574 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %575 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %574, i32 0, i32 0
  store i32 51, i32* %575, align 8
  br label %2619

576:                                              ; preds = %128
  br label %577

577:                                              ; preds = %576
  br label %563, !llvm.loop !20

578:                                              ; preds = %563
  %579 = load i8*, i8** %24, align 8
  %580 = getelementptr inbounds i8, i8* %579, i32 1
  store i8* %580, i8** %24, align 8
  %581 = load i8, i8* %579, align 1
  %582 = zext i8 %581 to i32
  store i32 %582, i32* %33, align 4
  br label %583

583:                                              ; preds = %578
  %584 = load i32, i32* %33, align 4
  %585 = zext i32 %584 to i64
  %586 = load i32, i32* %19, align 4
  %587 = zext i32 %586 to i64
  %588 = shl i64 %585, %587
  %589 = load i64, i64* %23, align 8
  %590 = or i64 %589, %588
  store i64 %590, i64* %23, align 8
  %591 = load i32, i32* %19, align 4
  %592 = add i32 %591, 8
  store i32 %592, i32* %19, align 4
  br label %593

593:                                              ; preds = %583
  %594 = load i32, i32* %19, align 4
  %595 = icmp ult i32 %594, 8
  br i1 %595, label %561, label %596, !llvm.loop !21

596:                                              ; preds = %593
  br label %597

597:                                              ; preds = %596, %557
  %598 = load i64, i64* %23, align 8
  %599 = and i64 %598, 255
  %600 = trunc i64 %599 to i32
  store i32 %600, i32* %20, align 4
  %601 = load i64, i64* %23, align 8
  %602 = lshr i64 %601, 8
  store i64 %602, i64* %23, align 8
  %603 = load i32, i32* %19, align 4
  %604 = sub i32 %603, 8
  store i32 %604, i32* %19, align 4
  br label %605

605:                                              ; preds = %597
  br label %606

606:                                              ; preds = %615, %605
  %607 = load i8*, i8** %26, align 8
  %608 = load i8*, i8** %27, align 8
  %609 = icmp uge i8* %607, %608
  br i1 %609, label %610, label %616

610:                                              ; preds = %606
  br label %611

611:                                              ; preds = %610
  store i32 2, i32* %18, align 4
  %612 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %613 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %612, i32 0, i32 0
  store i32 52, i32* %613, align 8
  br label %2619

614:                                              ; preds = %128
  br label %615

615:                                              ; preds = %614
  br label %606, !llvm.loop !22

616:                                              ; preds = %606
  %617 = load i32, i32* %20, align 4
  %618 = trunc i32 %617 to i8
  %619 = load i8*, i8** %26, align 8
  %620 = getelementptr inbounds i8, i8* %619, i32 1
  store i8* %620, i8** %26, align 8
  store i8 %618, i8* %619, align 1
  %621 = load i32, i32* %21, align 4
  %622 = add i32 %621, -1
  store i32 %622, i32* %21, align 4
  br label %548, !llvm.loop !23

623:                                              ; preds = %554
  br label %624

624:                                              ; preds = %712, %623
  %625 = load i32, i32* %21, align 4
  %626 = icmp ne i32 %625, 0
  br i1 %626, label %627, label %727

627:                                              ; preds = %624
  br label %628

628:                                              ; preds = %637, %627
  %629 = load i8*, i8** %26, align 8
  %630 = load i8*, i8** %27, align 8
  %631 = icmp uge i8* %629, %630
  br i1 %631, label %632, label %638

632:                                              ; preds = %628
  br label %633

633:                                              ; preds = %632
  store i32 2, i32* %18, align 4
  %634 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %635 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %634, i32 0, i32 0
  store i32 9, i32* %635, align 8
  br label %2619

636:                                              ; preds = %128
  br label %637

637:                                              ; preds = %636
  br label %628, !llvm.loop !24

638:                                              ; preds = %628
  br label %639

639:                                              ; preds = %653, %638
  %640 = load i8*, i8** %24, align 8
  %641 = load i8*, i8** %25, align 8
  %642 = icmp uge i8* %640, %641
  br i1 %642, label %643, label %654

643:                                              ; preds = %639
  br label %644

644:                                              ; preds = %643
  %645 = load i32, i32* %15, align 4
  %646 = and i32 %645, 2
  %647 = icmp ne i32 %646, 0
  %648 = zext i1 %647 to i64
  %649 = select i1 %647, i32 1, i32 -4
  store i32 %649, i32* %18, align 4
  %650 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %651 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %650, i32 0, i32 0
  store i32 38, i32* %651, align 8
  br label %2619

652:                                              ; preds = %128
  br label %653

653:                                              ; preds = %652
  br label %639, !llvm.loop !25

654:                                              ; preds = %639
  %655 = load i8*, i8** %27, align 8
  %656 = load i8*, i8** %26, align 8
  %657 = ptrtoint i8* %655 to i64
  %658 = ptrtoint i8* %656 to i64
  %659 = sub i64 %657, %658
  %660 = load i8*, i8** %25, align 8
  %661 = load i8*, i8** %24, align 8
  %662 = ptrtoint i8* %660 to i64
  %663 = ptrtoint i8* %661 to i64
  %664 = sub i64 %662, %663
  %665 = icmp ult i64 %659, %664
  br i1 %665, label %666, label %672

666:                                              ; preds = %654
  %667 = load i8*, i8** %27, align 8
  %668 = load i8*, i8** %26, align 8
  %669 = ptrtoint i8* %667 to i64
  %670 = ptrtoint i8* %668 to i64
  %671 = sub i64 %669, %670
  br label %678

672:                                              ; preds = %654
  %673 = load i8*, i8** %25, align 8
  %674 = load i8*, i8** %24, align 8
  %675 = ptrtoint i8* %673 to i64
  %676 = ptrtoint i8* %674 to i64
  %677 = sub i64 %675, %676
  br label %678

678:                                              ; preds = %672, %666
  %679 = phi i64 [ %671, %666 ], [ %677, %672 ]
  %680 = load i32, i32* %21, align 4
  %681 = zext i32 %680 to i64
  %682 = icmp ult i64 %679, %681
  br i1 %682, label %683, label %709

683:                                              ; preds = %678
  %684 = load i8*, i8** %27, align 8
  %685 = load i8*, i8** %26, align 8
  %686 = ptrtoint i8* %684 to i64
  %687 = ptrtoint i8* %685 to i64
  %688 = sub i64 %686, %687
  %689 = load i8*, i8** %25, align 8
  %690 = load i8*, i8** %24, align 8
  %691 = ptrtoint i8* %689 to i64
  %692 = ptrtoint i8* %690 to i64
  %693 = sub i64 %691, %692
  %694 = icmp ult i64 %688, %693
  br i1 %694, label %695, label %701

695:                                              ; preds = %683
  %696 = load i8*, i8** %27, align 8
  %697 = load i8*, i8** %26, align 8
  %698 = ptrtoint i8* %696 to i64
  %699 = ptrtoint i8* %697 to i64
  %700 = sub i64 %698, %699
  br label %707

701:                                              ; preds = %683
  %702 = load i8*, i8** %25, align 8
  %703 = load i8*, i8** %24, align 8
  %704 = ptrtoint i8* %702 to i64
  %705 = ptrtoint i8* %703 to i64
  %706 = sub i64 %704, %705
  br label %707

707:                                              ; preds = %701, %695
  %708 = phi i64 [ %700, %695 ], [ %706, %701 ]
  br label %712

709:                                              ; preds = %678
  %710 = load i32, i32* %21, align 4
  %711 = zext i32 %710 to i64
  br label %712

712:                                              ; preds = %709, %707
  %713 = phi i64 [ %708, %707 ], [ %711, %709 ]
  store i64 %713, i64* %34, align 8
  %714 = load i8*, i8** %26, align 8
  %715 = load i8*, i8** %24, align 8
  %716 = load i64, i64* %34, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %714, i8* align 1 %715, i64 %716, i1 false)
  %717 = load i64, i64* %34, align 8
  %718 = load i8*, i8** %24, align 8
  %719 = getelementptr inbounds i8, i8* %718, i64 %717
  store i8* %719, i8** %24, align 8
  %720 = load i64, i64* %34, align 8
  %721 = load i8*, i8** %26, align 8
  %722 = getelementptr inbounds i8, i8* %721, i64 %720
  store i8* %722, i8** %26, align 8
  %723 = load i64, i64* %34, align 8
  %724 = trunc i64 %723 to i32
  %725 = load i32, i32* %21, align 4
  %726 = sub i32 %725, %724
  store i32 %726, i32* %21, align 4
  br label %624, !llvm.loop !26

727:                                              ; preds = %624
  br label %2423

728:                                              ; preds = %352
  %729 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %730 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %729, i32 0, i32 6
  %731 = load i32, i32* %730, align 8
  %732 = icmp eq i32 %731, 3
  br i1 %732, label %733, label %742

733:                                              ; preds = %728
  br label %734

734:                                              ; preds = %733
  br label %735

735:                                              ; preds = %740, %734
  br label %736

736:                                              ; preds = %735
  store i32 -1, i32* %18, align 4
  %737 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %738 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %737, i32 0, i32 0
  store i32 10, i32* %738, align 8
  br label %2619

739:                                              ; preds = %128
  br label %740

740:                                              ; preds = %739
  br label %735

741:                                              ; No predecessors!
  br label %2422

742:                                              ; preds = %728
  %743 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %744 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %743, i32 0, i32 6
  %745 = load i32, i32* %744, align 8
  %746 = icmp eq i32 %745, 1
  br i1 %746, label %747, label %800

747:                                              ; preds = %742
  %748 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %749 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %748, i32 0, i32 18
  %750 = getelementptr inbounds [288 x i8], [288 x i8]* %749, i64 0, i64 0
  store i8* %750, i8** %35, align 8
  %751 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %752 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %751, i32 0, i32 11
  %753 = getelementptr inbounds [3 x i32], [3 x i32]* %752, i64 0, i64 0
  store i32 288, i32* %753, align 4
  %754 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %755 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %754, i32 0, i32 11
  %756 = getelementptr inbounds [3 x i32], [3 x i32]* %755, i64 0, i64 1
  store i32 32, i32* %756, align 4
  %757 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %758 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %757, i32 0, i32 19
  %759 = getelementptr inbounds [32 x i8], [32 x i8]* %758, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %759, i8 5, i64 32, i1 false)
  store i32 0, i32* %36, align 4
  br label %760

760:                                              ; preds = %766, %747
  %761 = load i32, i32* %36, align 4
  %762 = icmp ule i32 %761, 143
  br i1 %762, label %763, label %769

763:                                              ; preds = %760
  %764 = load i8*, i8** %35, align 8
  %765 = getelementptr inbounds i8, i8* %764, i32 1
  store i8* %765, i8** %35, align 8
  store i8 8, i8* %764, align 1
  br label %766

766:                                              ; preds = %763
  %767 = load i32, i32* %36, align 4
  %768 = add i32 %767, 1
  store i32 %768, i32* %36, align 4
  br label %760, !llvm.loop !27

769:                                              ; preds = %760
  br label %770

770:                                              ; preds = %776, %769
  %771 = load i32, i32* %36, align 4
  %772 = icmp ule i32 %771, 255
  br i1 %772, label %773, label %779

773:                                              ; preds = %770
  %774 = load i8*, i8** %35, align 8
  %775 = getelementptr inbounds i8, i8* %774, i32 1
  store i8* %775, i8** %35, align 8
  store i8 9, i8* %774, align 1
  br label %776

776:                                              ; preds = %773
  %777 = load i32, i32* %36, align 4
  %778 = add i32 %777, 1
  store i32 %778, i32* %36, align 4
  br label %770, !llvm.loop !28

779:                                              ; preds = %770
  br label %780

780:                                              ; preds = %786, %779
  %781 = load i32, i32* %36, align 4
  %782 = icmp ule i32 %781, 279
  br i1 %782, label %783, label %789

783:                                              ; preds = %780
  %784 = load i8*, i8** %35, align 8
  %785 = getelementptr inbounds i8, i8* %784, i32 1
  store i8* %785, i8** %35, align 8
  store i8 7, i8* %784, align 1
  br label %786

786:                                              ; preds = %783
  %787 = load i32, i32* %36, align 4
  %788 = add i32 %787, 1
  store i32 %788, i32* %36, align 4
  br label %780, !llvm.loop !29

789:                                              ; preds = %780
  br label %790

790:                                              ; preds = %796, %789
  %791 = load i32, i32* %36, align 4
  %792 = icmp ule i32 %791, 287
  br i1 %792, label %793, label %799

793:                                              ; preds = %790
  %794 = load i8*, i8** %35, align 8
  %795 = getelementptr inbounds i8, i8* %794, i32 1
  store i8* %795, i8** %35, align 8
  store i8 8, i8* %794, align 1
  br label %796

796:                                              ; preds = %793
  %797 = load i32, i32* %36, align 4
  %798 = add i32 %797, 1
  store i32 %798, i32* %36, align 4
  br label %790, !llvm.loop !30

799:                                              ; preds = %790
  br label %981

800:                                              ; preds = %742
  store i32 0, i32* %21, align 4
  br label %801

801:                                              ; preds = %900, %800
  %802 = load i32, i32* %21, align 4
  %803 = icmp ult i32 %802, 3
  br i1 %803, label %804, label %903

804:                                              ; preds = %801
  br label %805

805:                                              ; preds = %804
  %806 = load i32, i32* %19, align 4
  %807 = load i32, i32* %21, align 4
  %808 = zext i32 %807 to i64
  %809 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.14, i64 0, i64 %808
  %810 = load i8, i8* %809, align 1
  %811 = sext i8 %810 to i32
  %812 = icmp ult i32 %806, %811
  br i1 %812, label %813, label %855

813:                                              ; preds = %805
  br label %814

814:                                              ; preds = %846, %813
  br label %815

815:                                              ; preds = %814
  br label %816

816:                                              ; preds = %830, %815
  %817 = load i8*, i8** %24, align 8
  %818 = load i8*, i8** %25, align 8
  %819 = icmp uge i8* %817, %818
  br i1 %819, label %820, label %831

820:                                              ; preds = %816
  br label %821

821:                                              ; preds = %820
  %822 = load i32, i32* %15, align 4
  %823 = and i32 %822, 2
  %824 = icmp ne i32 %823, 0
  %825 = zext i1 %824 to i64
  %826 = select i1 %824, i32 1, i32 -4
  store i32 %826, i32* %18, align 4
  %827 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %828 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %827, i32 0, i32 0
  store i32 11, i32* %828, align 8
  br label %2619

829:                                              ; preds = %128
  br label %830

830:                                              ; preds = %829
  br label %816, !llvm.loop !31

831:                                              ; preds = %816
  %832 = load i8*, i8** %24, align 8
  %833 = getelementptr inbounds i8, i8* %832, i32 1
  store i8* %833, i8** %24, align 8
  %834 = load i8, i8* %832, align 1
  %835 = zext i8 %834 to i32
  store i32 %835, i32* %37, align 4
  br label %836

836:                                              ; preds = %831
  %837 = load i32, i32* %37, align 4
  %838 = zext i32 %837 to i64
  %839 = load i32, i32* %19, align 4
  %840 = zext i32 %839 to i64
  %841 = shl i64 %838, %840
  %842 = load i64, i64* %23, align 8
  %843 = or i64 %842, %841
  store i64 %843, i64* %23, align 8
  %844 = load i32, i32* %19, align 4
  %845 = add i32 %844, 8
  store i32 %845, i32* %19, align 4
  br label %846

846:                                              ; preds = %836
  %847 = load i32, i32* %19, align 4
  %848 = load i32, i32* %21, align 4
  %849 = zext i32 %848 to i64
  %850 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.14, i64 0, i64 %849
  %851 = load i8, i8* %850, align 1
  %852 = sext i8 %851 to i32
  %853 = icmp ult i32 %847, %852
  br i1 %853, label %814, label %854, !llvm.loop !32

854:                                              ; preds = %846
  br label %855

855:                                              ; preds = %854, %805
  %856 = load i64, i64* %23, align 8
  %857 = load i32, i32* %21, align 4
  %858 = zext i32 %857 to i64
  %859 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.14, i64 0, i64 %858
  %860 = load i8, i8* %859, align 1
  %861 = sext i8 %860 to i32
  %862 = shl i32 1, %861
  %863 = sub nsw i32 %862, 1
  %864 = sext i32 %863 to i64
  %865 = and i64 %856, %864
  %866 = trunc i64 %865 to i32
  %867 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %868 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %867, i32 0, i32 11
  %869 = load i32, i32* %21, align 4
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [3 x i32], [3 x i32]* %868, i64 0, i64 %870
  store i32 %866, i32* %871, align 4
  %872 = load i32, i32* %21, align 4
  %873 = zext i32 %872 to i64
  %874 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.14, i64 0, i64 %873
  %875 = load i8, i8* %874, align 1
  %876 = sext i8 %875 to i32
  %877 = load i64, i64* %23, align 8
  %878 = zext i32 %876 to i64
  %879 = lshr i64 %877, %878
  store i64 %879, i64* %23, align 8
  %880 = load i32, i32* %21, align 4
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.14, i64 0, i64 %881
  %883 = load i8, i8* %882, align 1
  %884 = sext i8 %883 to i32
  %885 = load i32, i32* %19, align 4
  %886 = sub i32 %885, %884
  store i32 %886, i32* %19, align 4
  br label %887

887:                                              ; preds = %855
  %888 = load i32, i32* %21, align 4
  %889 = zext i32 %888 to i64
  %890 = getelementptr inbounds [3 x i16], [3 x i16]* @tinfl_decompress.s_min_table_sizes, i64 0, i64 %889
  %891 = load i16, i16* %890, align 2
  %892 = zext i16 %891 to i32
  %893 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %894 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %893, i32 0, i32 11
  %895 = load i32, i32* %21, align 4
  %896 = zext i32 %895 to i64
  %897 = getelementptr inbounds [3 x i32], [3 x i32]* %894, i64 0, i64 %896
  %898 = load i32, i32* %897, align 4
  %899 = add i32 %898, %892
  store i32 %899, i32* %897, align 4
  br label %900

900:                                              ; preds = %887
  %901 = load i32, i32* %21, align 4
  %902 = add i32 %901, 1
  store i32 %902, i32* %21, align 4
  br label %801, !llvm.loop !33

903:                                              ; preds = %801
  %904 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %905 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %904, i32 0, i32 20
  %906 = getelementptr inbounds [19 x i8], [19 x i8]* %905, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %906, i8 0, i64 19, i1 false)
  store i32 0, i32* %21, align 4
  br label %907

907:                                              ; preds = %974, %903
  %908 = load i32, i32* %21, align 4
  %909 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %910 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %909, i32 0, i32 11
  %911 = getelementptr inbounds [3 x i32], [3 x i32]* %910, i64 0, i64 2
  %912 = load i32, i32* %911, align 4
  %913 = icmp ult i32 %908, %912
  br i1 %913, label %914, label %977

914:                                              ; preds = %907
  br label %915

915:                                              ; preds = %914
  %916 = load i32, i32* %19, align 4
  %917 = icmp ult i32 %916, 3
  br i1 %917, label %918, label %955

918:                                              ; preds = %915
  br label %919

919:                                              ; preds = %951, %918
  br label %920

920:                                              ; preds = %919
  br label %921

921:                                              ; preds = %935, %920
  %922 = load i8*, i8** %24, align 8
  %923 = load i8*, i8** %25, align 8
  %924 = icmp uge i8* %922, %923
  br i1 %924, label %925, label %936

925:                                              ; preds = %921
  br label %926

926:                                              ; preds = %925
  %927 = load i32, i32* %15, align 4
  %928 = and i32 %927, 2
  %929 = icmp ne i32 %928, 0
  %930 = zext i1 %929 to i64
  %931 = select i1 %929, i32 1, i32 -4
  store i32 %931, i32* %18, align 4
  %932 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %933 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %932, i32 0, i32 0
  store i32 14, i32* %933, align 8
  br label %2619

934:                                              ; preds = %128
  br label %935

935:                                              ; preds = %934
  br label %921, !llvm.loop !34

936:                                              ; preds = %921
  %937 = load i8*, i8** %24, align 8
  %938 = getelementptr inbounds i8, i8* %937, i32 1
  store i8* %938, i8** %24, align 8
  %939 = load i8, i8* %937, align 1
  %940 = zext i8 %939 to i32
  store i32 %940, i32* %39, align 4
  br label %941

941:                                              ; preds = %936
  %942 = load i32, i32* %39, align 4
  %943 = zext i32 %942 to i64
  %944 = load i32, i32* %19, align 4
  %945 = zext i32 %944 to i64
  %946 = shl i64 %943, %945
  %947 = load i64, i64* %23, align 8
  %948 = or i64 %947, %946
  store i64 %948, i64* %23, align 8
  %949 = load i32, i32* %19, align 4
  %950 = add i32 %949, 8
  store i32 %950, i32* %19, align 4
  br label %951

951:                                              ; preds = %941
  %952 = load i32, i32* %19, align 4
  %953 = icmp ult i32 %952, 3
  br i1 %953, label %919, label %954, !llvm.loop !35

954:                                              ; preds = %951
  br label %955

955:                                              ; preds = %954, %915
  %956 = load i64, i64* %23, align 8
  %957 = and i64 %956, 7
  %958 = trunc i64 %957 to i32
  store i32 %958, i32* %38, align 4
  %959 = load i64, i64* %23, align 8
  %960 = lshr i64 %959, 3
  store i64 %960, i64* %23, align 8
  %961 = load i32, i32* %19, align 4
  %962 = sub i32 %961, 3
  store i32 %962, i32* %19, align 4
  br label %963

963:                                              ; preds = %955
  %964 = load i32, i32* %38, align 4
  %965 = trunc i32 %964 to i8
  %966 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %967 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %966, i32 0, i32 20
  %968 = load i32, i32* %21, align 4
  %969 = zext i32 %968 to i64
  %970 = getelementptr inbounds [19 x i8], [19 x i8]* @tinfl_decompress.s_length_dezigzag, i64 0, i64 %969
  %971 = load i8, i8* %970, align 1
  %972 = zext i8 %971 to i64
  %973 = getelementptr inbounds [19 x i8], [19 x i8]* %967, i64 0, i64 %972
  store i8 %965, i8* %973, align 1
  br label %974

974:                                              ; preds = %963
  %975 = load i32, i32* %21, align 4
  %976 = add i32 %975, 1
  store i32 %976, i32* %21, align 4
  br label %907, !llvm.loop !36

977:                                              ; preds = %907
  %978 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %979 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %978, i32 0, i32 11
  %980 = getelementptr inbounds [3 x i32], [3 x i32]* %979, i64 0, i64 2
  store i32 19, i32* %980, align 4
  br label %981

981:                                              ; preds = %977, %799
  br label %982

982:                                              ; preds = %1598, %981
  %983 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %984 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %983, i32 0, i32 6
  %985 = load i32, i32* %984, align 8
  %986 = icmp sge i32 %985, 0
  br i1 %986, label %987, label %1603

987:                                              ; preds = %982
  %988 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %989 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %988, i32 0, i32 14
  %990 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %991 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %990, i32 0, i32 6
  %992 = load i32, i32* %991, align 8
  %993 = zext i32 %992 to i64
  %994 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %989, i64 0, i64 %993
  %995 = getelementptr inbounds [1024 x i16], [1024 x i16]* %994, i64 0, i64 0
  store i16* %995, i16** %42, align 8
  %996 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %997 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %996, i32 0, i32 6
  %998 = load i32, i32* %997, align 8
  %999 = zext i32 %998 to i64
  %1000 = getelementptr inbounds [3 x i16*], [3 x i16*]* %16, i64 0, i64 %999
  %1001 = load i16*, i16** %1000, align 8
  store i16* %1001, i16** %43, align 8
  %1002 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1003 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1002, i32 0, i32 6
  %1004 = load i32, i32* %1003, align 8
  %1005 = zext i32 %1004 to i64
  %1006 = getelementptr inbounds [3 x i8*], [3 x i8*]* %17, i64 0, i64 %1005
  %1007 = load i8*, i8** %1006, align 8
  store i8* %1007, i8** %44, align 8
  %1008 = getelementptr inbounds [16 x i32], [16 x i32]* %51, i64 0, i64 0
  %1009 = bitcast i32* %1008 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %1009, i8 0, i64 64, i1 false)
  %1010 = load i16*, i16** %42, align 8
  %1011 = bitcast i16* %1010 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %1011, i8 0, i64 2048, i1 false)
  %1012 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  call void @tinfl_clear_tree(%struct.tinfl_decompressor_tag* noundef %1012)
  store i32 0, i32* %45, align 4
  br label %1013

1013:                                             ; preds = %1034, %987
  %1014 = load i32, i32* %45, align 4
  %1015 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1016 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1015, i32 0, i32 11
  %1017 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1018 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1017, i32 0, i32 6
  %1019 = load i32, i32* %1018, align 8
  %1020 = zext i32 %1019 to i64
  %1021 = getelementptr inbounds [3 x i32], [3 x i32]* %1016, i64 0, i64 %1020
  %1022 = load i32, i32* %1021, align 4
  %1023 = icmp ult i32 %1014, %1022
  br i1 %1023, label %1024, label %1037

1024:                                             ; preds = %1013
  %1025 = load i8*, i8** %44, align 8
  %1026 = load i32, i32* %45, align 4
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds i8, i8* %1025, i64 %1027
  %1029 = load i8, i8* %1028, align 1
  %1030 = zext i8 %1029 to i64
  %1031 = getelementptr inbounds [16 x i32], [16 x i32]* %51, i64 0, i64 %1030
  %1032 = load i32, i32* %1031, align 4
  %1033 = add i32 %1032, 1
  store i32 %1033, i32* %1031, align 4
  br label %1034

1034:                                             ; preds = %1024
  %1035 = load i32, i32* %45, align 4
  %1036 = add i32 %1035, 1
  store i32 %1036, i32* %45, align 4
  br label %1013, !llvm.loop !37

1037:                                             ; preds = %1013
  store i32 0, i32* %47, align 4
  store i32 0, i32* %48, align 4
  %1038 = getelementptr inbounds [17 x i32], [17 x i32]* %50, i64 0, i64 1
  store i32 0, i32* %1038, align 4
  %1039 = getelementptr inbounds [17 x i32], [17 x i32]* %50, i64 0, i64 0
  store i32 0, i32* %1039, align 16
  store i32 1, i32* %45, align 4
  br label %1040

1040:                                             ; preds = %1061, %1037
  %1041 = load i32, i32* %45, align 4
  %1042 = icmp ule i32 %1041, 15
  br i1 %1042, label %1043, label %1064

1043:                                             ; preds = %1040
  %1044 = load i32, i32* %45, align 4
  %1045 = zext i32 %1044 to i64
  %1046 = getelementptr inbounds [16 x i32], [16 x i32]* %51, i64 0, i64 %1045
  %1047 = load i32, i32* %1046, align 4
  %1048 = load i32, i32* %47, align 4
  %1049 = add i32 %1048, %1047
  store i32 %1049, i32* %47, align 4
  %1050 = load i32, i32* %48, align 4
  %1051 = load i32, i32* %45, align 4
  %1052 = zext i32 %1051 to i64
  %1053 = getelementptr inbounds [16 x i32], [16 x i32]* %51, i64 0, i64 %1052
  %1054 = load i32, i32* %1053, align 4
  %1055 = add i32 %1050, %1054
  %1056 = shl i32 %1055, 1
  store i32 %1056, i32* %48, align 4
  %1057 = load i32, i32* %45, align 4
  %1058 = add i32 %1057, 1
  %1059 = zext i32 %1058 to i64
  %1060 = getelementptr inbounds [17 x i32], [17 x i32]* %50, i64 0, i64 %1059
  store i32 %1056, i32* %1060, align 4
  br label %1061

1061:                                             ; preds = %1043
  %1062 = load i32, i32* %45, align 4
  %1063 = add i32 %1062, 1
  store i32 %1063, i32* %45, align 4
  br label %1040, !llvm.loop !38

1064:                                             ; preds = %1040
  %1065 = load i32, i32* %48, align 4
  %1066 = icmp ne i32 65536, %1065
  br i1 %1066, label %1067, label %1079

1067:                                             ; preds = %1064
  %1068 = load i32, i32* %47, align 4
  %1069 = icmp ugt i32 %1068, 1
  br i1 %1069, label %1070, label %1079

1070:                                             ; preds = %1067
  br label %1071

1071:                                             ; preds = %1070
  br label %1072

1072:                                             ; preds = %1077, %1071
  br label %1073

1073:                                             ; preds = %1072
  store i32 -1, i32* %18, align 4
  %1074 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1075 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1074, i32 0, i32 0
  store i32 35, i32* %1075, align 8
  br label %2619

1076:                                             ; preds = %128
  br label %1077

1077:                                             ; preds = %1076
  br label %1072

1078:                                             ; No predecessors!
  br label %1079

1079:                                             ; preds = %1078, %1067, %1064
  store i32 -1, i32* %40, align 4
  store i32 0, i32* %49, align 4
  br label %1080

1080:                                             ; preds = %1225, %1079
  %1081 = load i32, i32* %49, align 4
  %1082 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1083 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1082, i32 0, i32 11
  %1084 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1085 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1084, i32 0, i32 6
  %1086 = load i32, i32* %1085, align 8
  %1087 = zext i32 %1086 to i64
  %1088 = getelementptr inbounds [3 x i32], [3 x i32]* %1083, i64 0, i64 %1087
  %1089 = load i32, i32* %1088, align 4
  %1090 = icmp ult i32 %1081, %1089
  br i1 %1090, label %1091, label %1228

1091:                                             ; preds = %1080
  store i32 0, i32* %52, align 4
  %1092 = load i8*, i8** %44, align 8
  %1093 = load i32, i32* %49, align 4
  %1094 = zext i32 %1093 to i64
  %1095 = getelementptr inbounds i8, i8* %1092, i64 %1094
  %1096 = load i8, i8* %1095, align 1
  %1097 = zext i8 %1096 to i32
  store i32 %1097, i32* %55, align 4
  %1098 = load i32, i32* %55, align 4
  %1099 = icmp ne i32 %1098, 0
  br i1 %1099, label %1101, label %1100

1100:                                             ; preds = %1091
  br label %1225

1101:                                             ; preds = %1091
  %1102 = load i32, i32* %55, align 4
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [17 x i32], [17 x i32]* %50, i64 0, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = add i32 %1105, 1
  store i32 %1106, i32* %1104, align 4
  store i32 %1105, i32* %54, align 4
  %1107 = load i32, i32* %55, align 4
  store i32 %1107, i32* %53, align 4
  br label %1108

1108:                                             ; preds = %1117, %1101
  %1109 = load i32, i32* %53, align 4
  %1110 = icmp ugt i32 %1109, 0
  br i1 %1110, label %1111, label %1122

1111:                                             ; preds = %1108
  %1112 = load i32, i32* %52, align 4
  %1113 = shl i32 %1112, 1
  %1114 = load i32, i32* %54, align 4
  %1115 = and i32 %1114, 1
  %1116 = or i32 %1113, %1115
  store i32 %1116, i32* %52, align 4
  br label %1117

1117:                                             ; preds = %1111
  %1118 = load i32, i32* %53, align 4
  %1119 = add i32 %1118, -1
  store i32 %1119, i32* %53, align 4
  %1120 = load i32, i32* %54, align 4
  %1121 = lshr i32 %1120, 1
  store i32 %1121, i32* %54, align 4
  br label %1108, !llvm.loop !39

1122:                                             ; preds = %1108
  %1123 = load i32, i32* %55, align 4
  %1124 = icmp ule i32 %1123, 10
  br i1 %1124, label %1125, label %1145

1125:                                             ; preds = %1122
  %1126 = load i32, i32* %55, align 4
  %1127 = shl i32 %1126, 9
  %1128 = load i32, i32* %49, align 4
  %1129 = or i32 %1127, %1128
  %1130 = trunc i32 %1129 to i16
  store i16 %1130, i16* %56, align 2
  br label %1131

1131:                                             ; preds = %1134, %1125
  %1132 = load i32, i32* %52, align 4
  %1133 = icmp ult i32 %1132, 1024
  br i1 %1133, label %1134, label %1144

1134:                                             ; preds = %1131
  %1135 = load i16, i16* %56, align 2
  %1136 = load i16*, i16** %42, align 8
  %1137 = load i32, i32* %52, align 4
  %1138 = zext i32 %1137 to i64
  %1139 = getelementptr inbounds i16, i16* %1136, i64 %1138
  store i16 %1135, i16* %1139, align 2
  %1140 = load i32, i32* %55, align 4
  %1141 = shl i32 1, %1140
  %1142 = load i32, i32* %52, align 4
  %1143 = add i32 %1142, %1141
  store i32 %1143, i32* %52, align 4
  br label %1131, !llvm.loop !40

1144:                                             ; preds = %1131
  br label %1225

1145:                                             ; preds = %1122
  %1146 = load i16*, i16** %42, align 8
  %1147 = load i32, i32* %52, align 4
  %1148 = and i32 %1147, 1023
  %1149 = zext i32 %1148 to i64
  %1150 = getelementptr inbounds i16, i16* %1146, i64 %1149
  %1151 = load i16, i16* %1150, align 2
  %1152 = sext i16 %1151 to i32
  store i32 %1152, i32* %41, align 4
  %1153 = icmp eq i32 0, %1152
  br i1 %1153, label %1154, label %1165

1154:                                             ; preds = %1145
  %1155 = load i32, i32* %40, align 4
  %1156 = trunc i32 %1155 to i16
  %1157 = load i16*, i16** %42, align 8
  %1158 = load i32, i32* %52, align 4
  %1159 = and i32 %1158, 1023
  %1160 = zext i32 %1159 to i64
  %1161 = getelementptr inbounds i16, i16* %1157, i64 %1160
  store i16 %1156, i16* %1161, align 2
  %1162 = load i32, i32* %40, align 4
  store i32 %1162, i32* %41, align 4
  %1163 = load i32, i32* %40, align 4
  %1164 = sub nsw i32 %1163, 2
  store i32 %1164, i32* %40, align 4
  br label %1165

1165:                                             ; preds = %1154, %1145
  %1166 = load i32, i32* %52, align 4
  %1167 = lshr i32 %1166, 9
  store i32 %1167, i32* %52, align 4
  %1168 = load i32, i32* %55, align 4
  store i32 %1168, i32* %46, align 4
  br label %1169

1169:                                             ; preds = %1208, %1165
  %1170 = load i32, i32* %46, align 4
  %1171 = icmp ugt i32 %1170, 11
  br i1 %1171, label %1172, label %1211

1172:                                             ; preds = %1169
  %1173 = load i32, i32* %52, align 4
  %1174 = lshr i32 %1173, 1
  store i32 %1174, i32* %52, align 4
  %1175 = and i32 %1174, 1
  %1176 = load i32, i32* %41, align 4
  %1177 = sub i32 %1176, %1175
  store i32 %1177, i32* %41, align 4
  %1178 = load i16*, i16** %43, align 8
  %1179 = load i32, i32* %41, align 4
  %1180 = sub nsw i32 0, %1179
  %1181 = sub nsw i32 %1180, 1
  %1182 = sext i32 %1181 to i64
  %1183 = getelementptr inbounds i16, i16* %1178, i64 %1182
  %1184 = load i16, i16* %1183, align 2
  %1185 = icmp ne i16 %1184, 0
  br i1 %1185, label %1198, label %1186

1186:                                             ; preds = %1172
  %1187 = load i32, i32* %40, align 4
  %1188 = trunc i32 %1187 to i16
  %1189 = load i16*, i16** %43, align 8
  %1190 = load i32, i32* %41, align 4
  %1191 = sub nsw i32 0, %1190
  %1192 = sub nsw i32 %1191, 1
  %1193 = sext i32 %1192 to i64
  %1194 = getelementptr inbounds i16, i16* %1189, i64 %1193
  store i16 %1188, i16* %1194, align 2
  %1195 = load i32, i32* %40, align 4
  store i32 %1195, i32* %41, align 4
  %1196 = load i32, i32* %40, align 4
  %1197 = sub nsw i32 %1196, 2
  store i32 %1197, i32* %40, align 4
  br label %1207

1198:                                             ; preds = %1172
  %1199 = load i16*, i16** %43, align 8
  %1200 = load i32, i32* %41, align 4
  %1201 = sub nsw i32 0, %1200
  %1202 = sub nsw i32 %1201, 1
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds i16, i16* %1199, i64 %1203
  %1205 = load i16, i16* %1204, align 2
  %1206 = sext i16 %1205 to i32
  store i32 %1206, i32* %41, align 4
  br label %1207

1207:                                             ; preds = %1198, %1186
  br label %1208

1208:                                             ; preds = %1207
  %1209 = load i32, i32* %46, align 4
  %1210 = add i32 %1209, -1
  store i32 %1210, i32* %46, align 4
  br label %1169, !llvm.loop !41

1211:                                             ; preds = %1169
  %1212 = load i32, i32* %52, align 4
  %1213 = lshr i32 %1212, 1
  store i32 %1213, i32* %52, align 4
  %1214 = and i32 %1213, 1
  %1215 = load i32, i32* %41, align 4
  %1216 = sub i32 %1215, %1214
  store i32 %1216, i32* %41, align 4
  %1217 = load i32, i32* %49, align 4
  %1218 = trunc i32 %1217 to i16
  %1219 = load i16*, i16** %43, align 8
  %1220 = load i32, i32* %41, align 4
  %1221 = sub nsw i32 0, %1220
  %1222 = sub nsw i32 %1221, 1
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds i16, i16* %1219, i64 %1223
  store i16 %1218, i16* %1224, align 2
  br label %1225

1225:                                             ; preds = %1211, %1144, %1100
  %1226 = load i32, i32* %49, align 4
  %1227 = add i32 %1226, 1
  store i32 %1227, i32* %49, align 4
  br label %1080, !llvm.loop !42

1228:                                             ; preds = %1080
  %1229 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1230 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1229, i32 0, i32 6
  %1231 = load i32, i32* %1230, align 8
  %1232 = icmp eq i32 %1231, 2
  br i1 %1232, label %1233, label %1597

1233:                                             ; preds = %1228
  store i32 0, i32* %21, align 4
  br label %1234

1234:                                             ; preds = %1539, %1424, %1233
  %1235 = load i32, i32* %21, align 4
  %1236 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1237 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1236, i32 0, i32 11
  %1238 = getelementptr inbounds [3 x i32], [3 x i32]* %1237, i64 0, i64 0
  %1239 = load i32, i32* %1238, align 4
  %1240 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1241 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1240, i32 0, i32 11
  %1242 = getelementptr inbounds [3 x i32], [3 x i32]* %1241, i64 0, i64 1
  %1243 = load i32, i32* %1242, align 4
  %1244 = add i32 %1239, %1243
  %1245 = icmp ult i32 %1235, %1244
  br i1 %1245, label %1246, label %1547

1246:                                             ; preds = %1234
  br label %1247

1247:                                             ; preds = %1246
  %1248 = load i32, i32* %19, align 4
  %1249 = icmp ult i32 %1248, 15
  br i1 %1249, label %1250, label %1376

1250:                                             ; preds = %1247
  %1251 = load i8*, i8** %25, align 8
  %1252 = load i8*, i8** %24, align 8
  %1253 = ptrtoint i8* %1251 to i64
  %1254 = ptrtoint i8* %1252 to i64
  %1255 = sub i64 %1253, %1254
  %1256 = icmp slt i64 %1255, 2
  br i1 %1256, label %1257, label %1352

1257:                                             ; preds = %1250
  br label %1258

1258:                                             ; preds = %1348, %1257
  %1259 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1260 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1259, i32 0, i32 14
  %1261 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %1260, i64 0, i64 2
  %1262 = load i64, i64* %23, align 8
  %1263 = and i64 %1262, 1023
  %1264 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1261, i64 0, i64 %1263
  %1265 = load i16, i16* %1264, align 2
  %1266 = sext i16 %1265 to i32
  store i32 %1266, i32* %58, align 4
  %1267 = load i32, i32* %58, align 4
  %1268 = icmp sge i32 %1267, 0
  br i1 %1268, label %1269, label %1280

1269:                                             ; preds = %1258
  %1270 = load i32, i32* %58, align 4
  %1271 = ashr i32 %1270, 9
  store i32 %1271, i32* %59, align 4
  %1272 = load i32, i32* %59, align 4
  %1273 = icmp ne i32 %1272, 0
  br i1 %1273, label %1274, label %1279

1274:                                             ; preds = %1269
  %1275 = load i32, i32* %19, align 4
  %1276 = load i32, i32* %59, align 4
  %1277 = icmp uge i32 %1275, %1276
  br i1 %1277, label %1278, label %1279

1278:                                             ; preds = %1274
  br label %1351

1279:                                             ; preds = %1274, %1269
  br label %1316

1280:                                             ; preds = %1258
  %1281 = load i32, i32* %19, align 4
  %1282 = icmp ugt i32 %1281, 10
  br i1 %1282, label %1283, label %1315

1283:                                             ; preds = %1280
  store i32 10, i32* %59, align 4
  br label %1284

1284:                                             ; preds = %1308, %1283
  %1285 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1286 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1285, i32 0, i32 17
  %1287 = load i32, i32* %58, align 4
  %1288 = xor i32 %1287, -1
  %1289 = sext i32 %1288 to i64
  %1290 = load i64, i64* %23, align 8
  %1291 = load i32, i32* %59, align 4
  %1292 = add i32 %1291, 1
  store i32 %1292, i32* %59, align 4
  %1293 = zext i32 %1291 to i64
  %1294 = lshr i64 %1290, %1293
  %1295 = and i64 %1294, 1
  %1296 = add i64 %1289, %1295
  %1297 = getelementptr inbounds [38 x i16], [38 x i16]* %1286, i64 0, i64 %1296
  %1298 = load i16, i16* %1297, align 2
  %1299 = sext i16 %1298 to i32
  store i32 %1299, i32* %58, align 4
  br label %1300

1300:                                             ; preds = %1284
  %1301 = load i32, i32* %58, align 4
  %1302 = icmp slt i32 %1301, 0
  br i1 %1302, label %1303, label %1308

1303:                                             ; preds = %1300
  %1304 = load i32, i32* %19, align 4
  %1305 = load i32, i32* %59, align 4
  %1306 = add i32 %1305, 1
  %1307 = icmp uge i32 %1304, %1306
  br label %1308

1308:                                             ; preds = %1303, %1300
  %1309 = phi i1 [ false, %1300 ], [ %1307, %1303 ]
  br i1 %1309, label %1284, label %1310, !llvm.loop !43

1310:                                             ; preds = %1308
  %1311 = load i32, i32* %58, align 4
  %1312 = icmp sge i32 %1311, 0
  br i1 %1312, label %1313, label %1314

1313:                                             ; preds = %1310
  br label %1351

1314:                                             ; preds = %1310
  br label %1315

1315:                                             ; preds = %1314, %1280
  br label %1316

1316:                                             ; preds = %1315, %1279
  br label %1317

1317:                                             ; preds = %1316
  br label %1318

1318:                                             ; preds = %1332, %1317
  %1319 = load i8*, i8** %24, align 8
  %1320 = load i8*, i8** %25, align 8
  %1321 = icmp uge i8* %1319, %1320
  br i1 %1321, label %1322, label %1333

1322:                                             ; preds = %1318
  br label %1323

1323:                                             ; preds = %1322
  %1324 = load i32, i32* %15, align 4
  %1325 = and i32 %1324, 2
  %1326 = icmp ne i32 %1325, 0
  %1327 = zext i1 %1326 to i64
  %1328 = select i1 %1326, i32 1, i32 -4
  store i32 %1328, i32* %18, align 4
  %1329 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1330 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1329, i32 0, i32 0
  store i32 16, i32* %1330, align 8
  br label %2619

1331:                                             ; preds = %128
  br label %1332

1332:                                             ; preds = %1331
  br label %1318, !llvm.loop !44

1333:                                             ; preds = %1318
  %1334 = load i8*, i8** %24, align 8
  %1335 = getelementptr inbounds i8, i8* %1334, i32 1
  store i8* %1335, i8** %24, align 8
  %1336 = load i8, i8* %1334, align 1
  %1337 = zext i8 %1336 to i32
  store i32 %1337, i32* %60, align 4
  br label %1338

1338:                                             ; preds = %1333
  %1339 = load i32, i32* %60, align 4
  %1340 = zext i32 %1339 to i64
  %1341 = load i32, i32* %19, align 4
  %1342 = zext i32 %1341 to i64
  %1343 = shl i64 %1340, %1342
  %1344 = load i64, i64* %23, align 8
  %1345 = or i64 %1344, %1343
  store i64 %1345, i64* %23, align 8
  %1346 = load i32, i32* %19, align 4
  %1347 = add i32 %1346, 8
  store i32 %1347, i32* %19, align 4
  br label %1348

1348:                                             ; preds = %1338
  %1349 = load i32, i32* %19, align 4
  %1350 = icmp ult i32 %1349, 15
  br i1 %1350, label %1258, label %1351, !llvm.loop !45

1351:                                             ; preds = %1348, %1313, %1278
  br label %1375

1352:                                             ; preds = %1250
  %1353 = load i8*, i8** %24, align 8
  %1354 = getelementptr inbounds i8, i8* %1353, i64 0
  %1355 = load i8, i8* %1354, align 1
  %1356 = zext i8 %1355 to i64
  %1357 = load i32, i32* %19, align 4
  %1358 = zext i32 %1357 to i64
  %1359 = shl i64 %1356, %1358
  %1360 = load i8*, i8** %24, align 8
  %1361 = getelementptr inbounds i8, i8* %1360, i64 1
  %1362 = load i8, i8* %1361, align 1
  %1363 = zext i8 %1362 to i64
  %1364 = load i32, i32* %19, align 4
  %1365 = add i32 %1364, 8
  %1366 = zext i32 %1365 to i64
  %1367 = shl i64 %1363, %1366
  %1368 = or i64 %1359, %1367
  %1369 = load i64, i64* %23, align 8
  %1370 = or i64 %1369, %1368
  store i64 %1370, i64* %23, align 8
  %1371 = load i8*, i8** %24, align 8
  %1372 = getelementptr inbounds i8, i8* %1371, i64 2
  store i8* %1372, i8** %24, align 8
  %1373 = load i32, i32* %19, align 4
  %1374 = add i32 %1373, 16
  store i32 %1374, i32* %19, align 4
  br label %1375

1375:                                             ; preds = %1352, %1351
  br label %1376

1376:                                             ; preds = %1375, %1247
  %1377 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1378 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1377, i32 0, i32 14
  %1379 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %1378, i64 0, i64 2
  %1380 = load i64, i64* %23, align 8
  %1381 = and i64 %1380, 1023
  %1382 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1379, i64 0, i64 %1381
  %1383 = load i16, i16* %1382, align 2
  %1384 = sext i16 %1383 to i32
  store i32 %1384, i32* %58, align 4
  %1385 = icmp sge i32 %1384, 0
  br i1 %1385, label %1386, label %1391

1386:                                             ; preds = %1376
  %1387 = load i32, i32* %58, align 4
  %1388 = ashr i32 %1387, 9
  store i32 %1388, i32* %59, align 4
  %1389 = load i32, i32* %58, align 4
  %1390 = and i32 %1389, 511
  store i32 %1390, i32* %58, align 4
  br label %1412

1391:                                             ; preds = %1376
  store i32 10, i32* %59, align 4
  br label %1392

1392:                                             ; preds = %1408, %1391
  %1393 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1394 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1393, i32 0, i32 17
  %1395 = load i32, i32* %58, align 4
  %1396 = xor i32 %1395, -1
  %1397 = sext i32 %1396 to i64
  %1398 = load i64, i64* %23, align 8
  %1399 = load i32, i32* %59, align 4
  %1400 = add i32 %1399, 1
  store i32 %1400, i32* %59, align 4
  %1401 = zext i32 %1399 to i64
  %1402 = lshr i64 %1398, %1401
  %1403 = and i64 %1402, 1
  %1404 = add i64 %1397, %1403
  %1405 = getelementptr inbounds [38 x i16], [38 x i16]* %1394, i64 0, i64 %1404
  %1406 = load i16, i16* %1405, align 2
  %1407 = sext i16 %1406 to i32
  store i32 %1407, i32* %58, align 4
  br label %1408

1408:                                             ; preds = %1392
  %1409 = load i32, i32* %58, align 4
  %1410 = icmp slt i32 %1409, 0
  br i1 %1410, label %1392, label %1411, !llvm.loop !46

1411:                                             ; preds = %1408
  br label %1412

1412:                                             ; preds = %1411, %1386
  %1413 = load i32, i32* %58, align 4
  store i32 %1413, i32* %20, align 4
  %1414 = load i32, i32* %59, align 4
  %1415 = load i64, i64* %23, align 8
  %1416 = zext i32 %1414 to i64
  %1417 = lshr i64 %1415, %1416
  store i64 %1417, i64* %23, align 8
  %1418 = load i32, i32* %59, align 4
  %1419 = load i32, i32* %19, align 4
  %1420 = sub i32 %1419, %1418
  store i32 %1420, i32* %19, align 4
  br label %1421

1421:                                             ; preds = %1412
  %1422 = load i32, i32* %20, align 4
  %1423 = icmp ult i32 %1422, 16
  br i1 %1423, label %1424, label %1433

1424:                                             ; preds = %1421
  %1425 = load i32, i32* %20, align 4
  %1426 = trunc i32 %1425 to i8
  %1427 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1428 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1427, i32 0, i32 22
  %1429 = load i32, i32* %21, align 4
  %1430 = add i32 %1429, 1
  store i32 %1430, i32* %21, align 4
  %1431 = zext i32 %1429 to i64
  %1432 = getelementptr inbounds [457 x i8], [457 x i8]* %1428, i64 0, i64 %1431
  store i8 %1426, i8* %1432, align 1
  br label %1234, !llvm.loop !47

1433:                                             ; preds = %1421
  %1434 = load i32, i32* %20, align 4
  %1435 = icmp eq i32 %1434, 16
  br i1 %1435, label %1436, label %1448

1436:                                             ; preds = %1433
  %1437 = load i32, i32* %21, align 4
  %1438 = icmp ne i32 %1437, 0
  br i1 %1438, label %1448, label %1439

1439:                                             ; preds = %1436
  br label %1440

1440:                                             ; preds = %1439
  br label %1441

1441:                                             ; preds = %1446, %1440
  br label %1442

1442:                                             ; preds = %1441
  store i32 -1, i32* %18, align 4
  %1443 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1444 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1443, i32 0, i32 0
  store i32 17, i32* %1444, align 8
  br label %2619

1445:                                             ; preds = %128
  br label %1446

1446:                                             ; preds = %1445
  br label %1441

1447:                                             ; No predecessors!
  br label %1448

1448:                                             ; preds = %1447, %1436, %1433
  %1449 = load i32, i32* %20, align 4
  %1450 = sub i32 %1449, 16
  %1451 = zext i32 %1450 to i64
  %1452 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.15, i64 0, i64 %1451
  %1453 = load i8, i8* %1452, align 1
  %1454 = sext i8 %1453 to i32
  store i32 %1454, i32* %22, align 4
  br label %1455

1455:                                             ; preds = %1448
  %1456 = load i32, i32* %19, align 4
  %1457 = load i32, i32* %22, align 4
  %1458 = icmp ult i32 %1456, %1457
  br i1 %1458, label %1459, label %1497

1459:                                             ; preds = %1455
  br label %1460

1460:                                             ; preds = %1492, %1459
  br label %1461

1461:                                             ; preds = %1460
  br label %1462

1462:                                             ; preds = %1476, %1461
  %1463 = load i8*, i8** %24, align 8
  %1464 = load i8*, i8** %25, align 8
  %1465 = icmp uge i8* %1463, %1464
  br i1 %1465, label %1466, label %1477

1466:                                             ; preds = %1462
  br label %1467

1467:                                             ; preds = %1466
  %1468 = load i32, i32* %15, align 4
  %1469 = and i32 %1468, 2
  %1470 = icmp ne i32 %1469, 0
  %1471 = zext i1 %1470 to i64
  %1472 = select i1 %1470, i32 1, i32 -4
  store i32 %1472, i32* %18, align 4
  %1473 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1474 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1473, i32 0, i32 0
  store i32 18, i32* %1474, align 8
  br label %2619

1475:                                             ; preds = %128
  br label %1476

1476:                                             ; preds = %1475
  br label %1462, !llvm.loop !48

1477:                                             ; preds = %1462
  %1478 = load i8*, i8** %24, align 8
  %1479 = getelementptr inbounds i8, i8* %1478, i32 1
  store i8* %1479, i8** %24, align 8
  %1480 = load i8, i8* %1478, align 1
  %1481 = zext i8 %1480 to i32
  store i32 %1481, i32* %61, align 4
  br label %1482

1482:                                             ; preds = %1477
  %1483 = load i32, i32* %61, align 4
  %1484 = zext i32 %1483 to i64
  %1485 = load i32, i32* %19, align 4
  %1486 = zext i32 %1485 to i64
  %1487 = shl i64 %1484, %1486
  %1488 = load i64, i64* %23, align 8
  %1489 = or i64 %1488, %1487
  store i64 %1489, i64* %23, align 8
  %1490 = load i32, i32* %19, align 4
  %1491 = add i32 %1490, 8
  store i32 %1491, i32* %19, align 4
  br label %1492

1492:                                             ; preds = %1482
  %1493 = load i32, i32* %19, align 4
  %1494 = load i32, i32* %22, align 4
  %1495 = icmp ult i32 %1493, %1494
  br i1 %1495, label %1460, label %1496, !llvm.loop !49

1496:                                             ; preds = %1492
  br label %1497

1497:                                             ; preds = %1496, %1455
  %1498 = load i64, i64* %23, align 8
  %1499 = load i32, i32* %22, align 4
  %1500 = shl i32 1, %1499
  %1501 = sub nsw i32 %1500, 1
  %1502 = sext i32 %1501 to i64
  %1503 = and i64 %1498, %1502
  %1504 = trunc i64 %1503 to i32
  store i32 %1504, i32* %57, align 4
  %1505 = load i32, i32* %22, align 4
  %1506 = load i64, i64* %23, align 8
  %1507 = zext i32 %1505 to i64
  %1508 = lshr i64 %1506, %1507
  store i64 %1508, i64* %23, align 8
  %1509 = load i32, i32* %22, align 4
  %1510 = load i32, i32* %19, align 4
  %1511 = sub i32 %1510, %1509
  store i32 %1511, i32* %19, align 4
  br label %1512

1512:                                             ; preds = %1497
  %1513 = load i32, i32* %20, align 4
  %1514 = sub i32 %1513, 16
  %1515 = zext i32 %1514 to i64
  %1516 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.16, i64 0, i64 %1515
  %1517 = load i8, i8* %1516, align 1
  %1518 = sext i8 %1517 to i32
  %1519 = load i32, i32* %57, align 4
  %1520 = add i32 %1519, %1518
  store i32 %1520, i32* %57, align 4
  %1521 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1522 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1521, i32 0, i32 22
  %1523 = getelementptr inbounds [457 x i8], [457 x i8]* %1522, i64 0, i64 0
  %1524 = load i32, i32* %21, align 4
  %1525 = zext i32 %1524 to i64
  %1526 = getelementptr inbounds i8, i8* %1523, i64 %1525
  %1527 = load i32, i32* %20, align 4
  %1528 = icmp eq i32 %1527, 16
  br i1 %1528, label %1529, label %1538

1529:                                             ; preds = %1512
  %1530 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1531 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1530, i32 0, i32 22
  %1532 = load i32, i32* %21, align 4
  %1533 = sub i32 %1532, 1
  %1534 = zext i32 %1533 to i64
  %1535 = getelementptr inbounds [457 x i8], [457 x i8]* %1531, i64 0, i64 %1534
  %1536 = load i8, i8* %1535, align 1
  %1537 = zext i8 %1536 to i32
  br label %1539

1538:                                             ; preds = %1512
  br label %1539

1539:                                             ; preds = %1538, %1529
  %1540 = phi i32 [ %1537, %1529 ], [ 0, %1538 ]
  %1541 = trunc i32 %1540 to i8
  %1542 = load i32, i32* %57, align 4
  %1543 = zext i32 %1542 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %1526, i8 %1541, i64 %1543, i1 false)
  %1544 = load i32, i32* %57, align 4
  %1545 = load i32, i32* %21, align 4
  %1546 = add i32 %1545, %1544
  store i32 %1546, i32* %21, align 4
  br label %1234, !llvm.loop !47

1547:                                             ; preds = %1234
  %1548 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1549 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1548, i32 0, i32 11
  %1550 = getelementptr inbounds [3 x i32], [3 x i32]* %1549, i64 0, i64 0
  %1551 = load i32, i32* %1550, align 4
  %1552 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1553 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1552, i32 0, i32 11
  %1554 = getelementptr inbounds [3 x i32], [3 x i32]* %1553, i64 0, i64 1
  %1555 = load i32, i32* %1554, align 4
  %1556 = add i32 %1551, %1555
  %1557 = load i32, i32* %21, align 4
  %1558 = icmp ne i32 %1556, %1557
  br i1 %1558, label %1559, label %1568

1559:                                             ; preds = %1547
  br label %1560

1560:                                             ; preds = %1559
  br label %1561

1561:                                             ; preds = %1566, %1560
  br label %1562

1562:                                             ; preds = %1561
  store i32 -1, i32* %18, align 4
  %1563 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1564 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1563, i32 0, i32 0
  store i32 21, i32* %1564, align 8
  br label %2619

1565:                                             ; preds = %128
  br label %1566

1566:                                             ; preds = %1565
  br label %1561

1567:                                             ; No predecessors!
  br label %1568

1568:                                             ; preds = %1567, %1547
  %1569 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1570 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1569, i32 0, i32 18
  %1571 = getelementptr inbounds [288 x i8], [288 x i8]* %1570, i64 0, i64 0
  %1572 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1573 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1572, i32 0, i32 22
  %1574 = getelementptr inbounds [457 x i8], [457 x i8]* %1573, i64 0, i64 0
  %1575 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1576 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1575, i32 0, i32 11
  %1577 = getelementptr inbounds [3 x i32], [3 x i32]* %1576, i64 0, i64 0
  %1578 = load i32, i32* %1577, align 4
  %1579 = zext i32 %1578 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1571, i8* align 1 %1574, i64 %1579, i1 false)
  %1580 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1581 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1580, i32 0, i32 19
  %1582 = getelementptr inbounds [32 x i8], [32 x i8]* %1581, i64 0, i64 0
  %1583 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1584 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1583, i32 0, i32 22
  %1585 = getelementptr inbounds [457 x i8], [457 x i8]* %1584, i64 0, i64 0
  %1586 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1587 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1586, i32 0, i32 11
  %1588 = getelementptr inbounds [3 x i32], [3 x i32]* %1587, i64 0, i64 0
  %1589 = load i32, i32* %1588, align 4
  %1590 = zext i32 %1589 to i64
  %1591 = getelementptr inbounds i8, i8* %1585, i64 %1590
  %1592 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1593 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1592, i32 0, i32 11
  %1594 = getelementptr inbounds [3 x i32], [3 x i32]* %1593, i64 0, i64 1
  %1595 = load i32, i32* %1594, align 4
  %1596 = zext i32 %1595 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1582, i8* align 1 %1591, i64 %1596, i1 false)
  br label %1597

1597:                                             ; preds = %1568, %1228
  br label %1598

1598:                                             ; preds = %1597
  %1599 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1600 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1599, i32 0, i32 6
  %1601 = load i32, i32* %1600, align 8
  %1602 = add i32 %1601, -1
  store i32 %1602, i32* %1600, align 8
  br label %982, !llvm.loop !50

1603:                                             ; preds = %982
  br label %1604

1604:                                             ; preds = %2420, %2371, %1603
  br label %1605

1605:                                             ; preds = %1957, %1604
  %1606 = load i8*, i8** %25, align 8
  %1607 = load i8*, i8** %24, align 8
  %1608 = ptrtoint i8* %1606 to i64
  %1609 = ptrtoint i8* %1607 to i64
  %1610 = sub i64 %1608, %1609
  %1611 = icmp slt i64 %1610, 4
  br i1 %1611, label %1619, label %1612

1612:                                             ; preds = %1605
  %1613 = load i8*, i8** %27, align 8
  %1614 = load i8*, i8** %26, align 8
  %1615 = ptrtoint i8* %1613 to i64
  %1616 = ptrtoint i8* %1614 to i64
  %1617 = sub i64 %1615, %1616
  %1618 = icmp slt i64 %1617, 2
  br i1 %1618, label %1619, label %1814

1619:                                             ; preds = %1612, %1605
  br label %1620

1620:                                             ; preds = %1619
  %1621 = load i32, i32* %19, align 4
  %1622 = icmp ult i32 %1621, 15
  br i1 %1622, label %1623, label %1749

1623:                                             ; preds = %1620
  %1624 = load i8*, i8** %25, align 8
  %1625 = load i8*, i8** %24, align 8
  %1626 = ptrtoint i8* %1624 to i64
  %1627 = ptrtoint i8* %1625 to i64
  %1628 = sub i64 %1626, %1627
  %1629 = icmp slt i64 %1628, 2
  br i1 %1629, label %1630, label %1725

1630:                                             ; preds = %1623
  br label %1631

1631:                                             ; preds = %1721, %1630
  %1632 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1633 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1632, i32 0, i32 14
  %1634 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %1633, i64 0, i64 0
  %1635 = load i64, i64* %23, align 8
  %1636 = and i64 %1635, 1023
  %1637 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1634, i64 0, i64 %1636
  %1638 = load i16, i16* %1637, align 2
  %1639 = sext i16 %1638 to i32
  store i32 %1639, i32* %63, align 4
  %1640 = load i32, i32* %63, align 4
  %1641 = icmp sge i32 %1640, 0
  br i1 %1641, label %1642, label %1653

1642:                                             ; preds = %1631
  %1643 = load i32, i32* %63, align 4
  %1644 = ashr i32 %1643, 9
  store i32 %1644, i32* %64, align 4
  %1645 = load i32, i32* %64, align 4
  %1646 = icmp ne i32 %1645, 0
  br i1 %1646, label %1647, label %1652

1647:                                             ; preds = %1642
  %1648 = load i32, i32* %19, align 4
  %1649 = load i32, i32* %64, align 4
  %1650 = icmp uge i32 %1648, %1649
  br i1 %1650, label %1651, label %1652

1651:                                             ; preds = %1647
  br label %1724

1652:                                             ; preds = %1647, %1642
  br label %1689

1653:                                             ; preds = %1631
  %1654 = load i32, i32* %19, align 4
  %1655 = icmp ugt i32 %1654, 10
  br i1 %1655, label %1656, label %1688

1656:                                             ; preds = %1653
  store i32 10, i32* %64, align 4
  br label %1657

1657:                                             ; preds = %1681, %1656
  %1658 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1659 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1658, i32 0, i32 15
  %1660 = load i32, i32* %63, align 4
  %1661 = xor i32 %1660, -1
  %1662 = sext i32 %1661 to i64
  %1663 = load i64, i64* %23, align 8
  %1664 = load i32, i32* %64, align 4
  %1665 = add i32 %1664, 1
  store i32 %1665, i32* %64, align 4
  %1666 = zext i32 %1664 to i64
  %1667 = lshr i64 %1663, %1666
  %1668 = and i64 %1667, 1
  %1669 = add i64 %1662, %1668
  %1670 = getelementptr inbounds [576 x i16], [576 x i16]* %1659, i64 0, i64 %1669
  %1671 = load i16, i16* %1670, align 2
  %1672 = sext i16 %1671 to i32
  store i32 %1672, i32* %63, align 4
  br label %1673

1673:                                             ; preds = %1657
  %1674 = load i32, i32* %63, align 4
  %1675 = icmp slt i32 %1674, 0
  br i1 %1675, label %1676, label %1681

1676:                                             ; preds = %1673
  %1677 = load i32, i32* %19, align 4
  %1678 = load i32, i32* %64, align 4
  %1679 = add i32 %1678, 1
  %1680 = icmp uge i32 %1677, %1679
  br label %1681

1681:                                             ; preds = %1676, %1673
  %1682 = phi i1 [ false, %1673 ], [ %1680, %1676 ]
  br i1 %1682, label %1657, label %1683, !llvm.loop !51

1683:                                             ; preds = %1681
  %1684 = load i32, i32* %63, align 4
  %1685 = icmp sge i32 %1684, 0
  br i1 %1685, label %1686, label %1687

1686:                                             ; preds = %1683
  br label %1724

1687:                                             ; preds = %1683
  br label %1688

1688:                                             ; preds = %1687, %1653
  br label %1689

1689:                                             ; preds = %1688, %1652
  br label %1690

1690:                                             ; preds = %1689
  br label %1691

1691:                                             ; preds = %1705, %1690
  %1692 = load i8*, i8** %24, align 8
  %1693 = load i8*, i8** %25, align 8
  %1694 = icmp uge i8* %1692, %1693
  br i1 %1694, label %1695, label %1706

1695:                                             ; preds = %1691
  br label %1696

1696:                                             ; preds = %1695
  %1697 = load i32, i32* %15, align 4
  %1698 = and i32 %1697, 2
  %1699 = icmp ne i32 %1698, 0
  %1700 = zext i1 %1699 to i64
  %1701 = select i1 %1699, i32 1, i32 -4
  store i32 %1701, i32* %18, align 4
  %1702 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1703 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1702, i32 0, i32 0
  store i32 23, i32* %1703, align 8
  br label %2619

1704:                                             ; preds = %128
  br label %1705

1705:                                             ; preds = %1704
  br label %1691, !llvm.loop !52

1706:                                             ; preds = %1691
  %1707 = load i8*, i8** %24, align 8
  %1708 = getelementptr inbounds i8, i8* %1707, i32 1
  store i8* %1708, i8** %24, align 8
  %1709 = load i8, i8* %1707, align 1
  %1710 = zext i8 %1709 to i32
  store i32 %1710, i32* %65, align 4
  br label %1711

1711:                                             ; preds = %1706
  %1712 = load i32, i32* %65, align 4
  %1713 = zext i32 %1712 to i64
  %1714 = load i32, i32* %19, align 4
  %1715 = zext i32 %1714 to i64
  %1716 = shl i64 %1713, %1715
  %1717 = load i64, i64* %23, align 8
  %1718 = or i64 %1717, %1716
  store i64 %1718, i64* %23, align 8
  %1719 = load i32, i32* %19, align 4
  %1720 = add i32 %1719, 8
  store i32 %1720, i32* %19, align 4
  br label %1721

1721:                                             ; preds = %1711
  %1722 = load i32, i32* %19, align 4
  %1723 = icmp ult i32 %1722, 15
  br i1 %1723, label %1631, label %1724, !llvm.loop !53

1724:                                             ; preds = %1721, %1686, %1651
  br label %1748

1725:                                             ; preds = %1623
  %1726 = load i8*, i8** %24, align 8
  %1727 = getelementptr inbounds i8, i8* %1726, i64 0
  %1728 = load i8, i8* %1727, align 1
  %1729 = zext i8 %1728 to i64
  %1730 = load i32, i32* %19, align 4
  %1731 = zext i32 %1730 to i64
  %1732 = shl i64 %1729, %1731
  %1733 = load i8*, i8** %24, align 8
  %1734 = getelementptr inbounds i8, i8* %1733, i64 1
  %1735 = load i8, i8* %1734, align 1
  %1736 = zext i8 %1735 to i64
  %1737 = load i32, i32* %19, align 4
  %1738 = add i32 %1737, 8
  %1739 = zext i32 %1738 to i64
  %1740 = shl i64 %1736, %1739
  %1741 = or i64 %1732, %1740
  %1742 = load i64, i64* %23, align 8
  %1743 = or i64 %1742, %1741
  store i64 %1743, i64* %23, align 8
  %1744 = load i8*, i8** %24, align 8
  %1745 = getelementptr inbounds i8, i8* %1744, i64 2
  store i8* %1745, i8** %24, align 8
  %1746 = load i32, i32* %19, align 4
  %1747 = add i32 %1746, 16
  store i32 %1747, i32* %19, align 4
  br label %1748

1748:                                             ; preds = %1725, %1724
  br label %1749

1749:                                             ; preds = %1748, %1620
  %1750 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1751 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1750, i32 0, i32 14
  %1752 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %1751, i64 0, i64 0
  %1753 = load i64, i64* %23, align 8
  %1754 = and i64 %1753, 1023
  %1755 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1752, i64 0, i64 %1754
  %1756 = load i16, i16* %1755, align 2
  %1757 = sext i16 %1756 to i32
  store i32 %1757, i32* %63, align 4
  %1758 = icmp sge i32 %1757, 0
  br i1 %1758, label %1759, label %1764

1759:                                             ; preds = %1749
  %1760 = load i32, i32* %63, align 4
  %1761 = ashr i32 %1760, 9
  store i32 %1761, i32* %64, align 4
  %1762 = load i32, i32* %63, align 4
  %1763 = and i32 %1762, 511
  store i32 %1763, i32* %63, align 4
  br label %1785

1764:                                             ; preds = %1749
  store i32 10, i32* %64, align 4
  br label %1765

1765:                                             ; preds = %1781, %1764
  %1766 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1767 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1766, i32 0, i32 15
  %1768 = load i32, i32* %63, align 4
  %1769 = xor i32 %1768, -1
  %1770 = sext i32 %1769 to i64
  %1771 = load i64, i64* %23, align 8
  %1772 = load i32, i32* %64, align 4
  %1773 = add i32 %1772, 1
  store i32 %1773, i32* %64, align 4
  %1774 = zext i32 %1772 to i64
  %1775 = lshr i64 %1771, %1774
  %1776 = and i64 %1775, 1
  %1777 = add i64 %1770, %1776
  %1778 = getelementptr inbounds [576 x i16], [576 x i16]* %1767, i64 0, i64 %1777
  %1779 = load i16, i16* %1778, align 2
  %1780 = sext i16 %1779 to i32
  store i32 %1780, i32* %63, align 4
  br label %1781

1781:                                             ; preds = %1765
  %1782 = load i32, i32* %63, align 4
  %1783 = icmp slt i32 %1782, 0
  br i1 %1783, label %1765, label %1784, !llvm.loop !54

1784:                                             ; preds = %1781
  br label %1785

1785:                                             ; preds = %1784, %1759
  %1786 = load i32, i32* %63, align 4
  store i32 %1786, i32* %21, align 4
  %1787 = load i32, i32* %64, align 4
  %1788 = load i64, i64* %23, align 8
  %1789 = zext i32 %1787 to i64
  %1790 = lshr i64 %1788, %1789
  store i64 %1790, i64* %23, align 8
  %1791 = load i32, i32* %64, align 4
  %1792 = load i32, i32* %19, align 4
  %1793 = sub i32 %1792, %1791
  store i32 %1793, i32* %19, align 4
  br label %1794

1794:                                             ; preds = %1785
  %1795 = load i32, i32* %21, align 4
  %1796 = icmp uge i32 %1795, 256
  br i1 %1796, label %1797, label %1798

1797:                                             ; preds = %1794
  br label %1958

1798:                                             ; preds = %1794
  br label %1799

1799:                                             ; preds = %1808, %1798
  %1800 = load i8*, i8** %26, align 8
  %1801 = load i8*, i8** %27, align 8
  %1802 = icmp uge i8* %1800, %1801
  br i1 %1802, label %1803, label %1809

1803:                                             ; preds = %1799
  br label %1804

1804:                                             ; preds = %1803
  store i32 2, i32* %18, align 4
  %1805 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1806 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1805, i32 0, i32 0
  store i32 24, i32* %1806, align 8
  br label %2619

1807:                                             ; preds = %128
  br label %1808

1808:                                             ; preds = %1807
  br label %1799, !llvm.loop !55

1809:                                             ; preds = %1799
  %1810 = load i32, i32* %21, align 4
  %1811 = trunc i32 %1810 to i8
  %1812 = load i8*, i8** %26, align 8
  %1813 = getelementptr inbounds i8, i8* %1812, i32 1
  store i8* %1813, i8** %26, align 8
  store i8 %1811, i8* %1812, align 1
  br label %1957

1814:                                             ; preds = %1612
  %1815 = load i32, i32* %19, align 4
  %1816 = icmp ult i32 %1815, 30
  br i1 %1816, label %1817, label %1850

1817:                                             ; preds = %1814
  %1818 = load i8*, i8** %24, align 8
  %1819 = getelementptr inbounds i8, i8* %1818, i64 0
  %1820 = load i8, i8* %1819, align 1
  %1821 = zext i8 %1820 to i32
  %1822 = load i8*, i8** %24, align 8
  %1823 = getelementptr inbounds i8, i8* %1822, i64 1
  %1824 = load i8, i8* %1823, align 1
  %1825 = zext i8 %1824 to i32
  %1826 = shl i32 %1825, 8
  %1827 = or i32 %1821, %1826
  %1828 = load i8*, i8** %24, align 8
  %1829 = getelementptr inbounds i8, i8* %1828, i64 2
  %1830 = load i8, i8* %1829, align 1
  %1831 = zext i8 %1830 to i32
  %1832 = shl i32 %1831, 16
  %1833 = or i32 %1827, %1832
  %1834 = load i8*, i8** %24, align 8
  %1835 = getelementptr inbounds i8, i8* %1834, i64 3
  %1836 = load i8, i8* %1835, align 1
  %1837 = zext i8 %1836 to i32
  %1838 = shl i32 %1837, 24
  %1839 = or i32 %1833, %1838
  %1840 = zext i32 %1839 to i64
  %1841 = load i32, i32* %19, align 4
  %1842 = zext i32 %1841 to i64
  %1843 = shl i64 %1840, %1842
  %1844 = load i64, i64* %23, align 8
  %1845 = or i64 %1844, %1843
  store i64 %1845, i64* %23, align 8
  %1846 = load i8*, i8** %24, align 8
  %1847 = getelementptr inbounds i8, i8* %1846, i64 4
  store i8* %1847, i8** %24, align 8
  %1848 = load i32, i32* %19, align 4
  %1849 = add i32 %1848, 32
  store i32 %1849, i32* %19, align 4
  br label %1850

1850:                                             ; preds = %1817, %1814
  %1851 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1852 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1851, i32 0, i32 14
  %1853 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %1852, i64 0, i64 0
  %1854 = load i64, i64* %23, align 8
  %1855 = and i64 %1854, 1023
  %1856 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1853, i64 0, i64 %1855
  %1857 = load i16, i16* %1856, align 2
  %1858 = sext i16 %1857 to i32
  store i32 %1858, i32* %66, align 4
  %1859 = icmp sge i32 %1858, 0
  br i1 %1859, label %1860, label %1863

1860:                                             ; preds = %1850
  %1861 = load i32, i32* %66, align 4
  %1862 = ashr i32 %1861, 9
  store i32 %1862, i32* %67, align 4
  br label %1884

1863:                                             ; preds = %1850
  store i32 10, i32* %67, align 4
  br label %1864

1864:                                             ; preds = %1880, %1863
  %1865 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1866 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1865, i32 0, i32 15
  %1867 = load i32, i32* %66, align 4
  %1868 = xor i32 %1867, -1
  %1869 = sext i32 %1868 to i64
  %1870 = load i64, i64* %23, align 8
  %1871 = load i32, i32* %67, align 4
  %1872 = add i32 %1871, 1
  store i32 %1872, i32* %67, align 4
  %1873 = zext i32 %1871 to i64
  %1874 = lshr i64 %1870, %1873
  %1875 = and i64 %1874, 1
  %1876 = add i64 %1869, %1875
  %1877 = getelementptr inbounds [576 x i16], [576 x i16]* %1866, i64 0, i64 %1876
  %1878 = load i16, i16* %1877, align 2
  %1879 = sext i16 %1878 to i32
  store i32 %1879, i32* %66, align 4
  br label %1880

1880:                                             ; preds = %1864
  %1881 = load i32, i32* %66, align 4
  %1882 = icmp slt i32 %1881, 0
  br i1 %1882, label %1864, label %1883, !llvm.loop !56

1883:                                             ; preds = %1880
  br label %1884

1884:                                             ; preds = %1883, %1860
  %1885 = load i32, i32* %66, align 4
  store i32 %1885, i32* %21, align 4
  %1886 = load i32, i32* %67, align 4
  %1887 = load i64, i64* %23, align 8
  %1888 = zext i32 %1886 to i64
  %1889 = lshr i64 %1887, %1888
  store i64 %1889, i64* %23, align 8
  %1890 = load i32, i32* %67, align 4
  %1891 = load i32, i32* %19, align 4
  %1892 = sub i32 %1891, %1890
  store i32 %1892, i32* %19, align 4
  %1893 = load i32, i32* %21, align 4
  %1894 = and i32 %1893, 256
  %1895 = icmp ne i32 %1894, 0
  br i1 %1895, label %1896, label %1897

1896:                                             ; preds = %1884
  br label %1958

1897:                                             ; preds = %1884
  %1898 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1899 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1898, i32 0, i32 14
  %1900 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %1899, i64 0, i64 0
  %1901 = load i64, i64* %23, align 8
  %1902 = and i64 %1901, 1023
  %1903 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1900, i64 0, i64 %1902
  %1904 = load i16, i16* %1903, align 2
  %1905 = sext i16 %1904 to i32
  store i32 %1905, i32* %66, align 4
  %1906 = icmp sge i32 %1905, 0
  br i1 %1906, label %1907, label %1910

1907:                                             ; preds = %1897
  %1908 = load i32, i32* %66, align 4
  %1909 = ashr i32 %1908, 9
  store i32 %1909, i32* %67, align 4
  br label %1931

1910:                                             ; preds = %1897
  store i32 10, i32* %67, align 4
  br label %1911

1911:                                             ; preds = %1927, %1910
  %1912 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1913 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1912, i32 0, i32 15
  %1914 = load i32, i32* %66, align 4
  %1915 = xor i32 %1914, -1
  %1916 = sext i32 %1915 to i64
  %1917 = load i64, i64* %23, align 8
  %1918 = load i32, i32* %67, align 4
  %1919 = add i32 %1918, 1
  store i32 %1919, i32* %67, align 4
  %1920 = zext i32 %1918 to i64
  %1921 = lshr i64 %1917, %1920
  %1922 = and i64 %1921, 1
  %1923 = add i64 %1916, %1922
  %1924 = getelementptr inbounds [576 x i16], [576 x i16]* %1913, i64 0, i64 %1923
  %1925 = load i16, i16* %1924, align 2
  %1926 = sext i16 %1925 to i32
  store i32 %1926, i32* %66, align 4
  br label %1927

1927:                                             ; preds = %1911
  %1928 = load i32, i32* %66, align 4
  %1929 = icmp slt i32 %1928, 0
  br i1 %1929, label %1911, label %1930, !llvm.loop !57

1930:                                             ; preds = %1927
  br label %1931

1931:                                             ; preds = %1930, %1907
  %1932 = load i32, i32* %67, align 4
  %1933 = load i64, i64* %23, align 8
  %1934 = zext i32 %1932 to i64
  %1935 = lshr i64 %1933, %1934
  store i64 %1935, i64* %23, align 8
  %1936 = load i32, i32* %67, align 4
  %1937 = load i32, i32* %19, align 4
  %1938 = sub i32 %1937, %1936
  store i32 %1938, i32* %19, align 4
  %1939 = load i32, i32* %21, align 4
  %1940 = trunc i32 %1939 to i8
  %1941 = load i8*, i8** %26, align 8
  %1942 = getelementptr inbounds i8, i8* %1941, i64 0
  store i8 %1940, i8* %1942, align 1
  %1943 = load i32, i32* %66, align 4
  %1944 = and i32 %1943, 256
  %1945 = icmp ne i32 %1944, 0
  br i1 %1945, label %1946, label %1950

1946:                                             ; preds = %1931
  %1947 = load i8*, i8** %26, align 8
  %1948 = getelementptr inbounds i8, i8* %1947, i32 1
  store i8* %1948, i8** %26, align 8
  %1949 = load i32, i32* %66, align 4
  store i32 %1949, i32* %21, align 4
  br label %1958

1950:                                             ; preds = %1931
  %1951 = load i32, i32* %66, align 4
  %1952 = trunc i32 %1951 to i8
  %1953 = load i8*, i8** %26, align 8
  %1954 = getelementptr inbounds i8, i8* %1953, i64 1
  store i8 %1952, i8* %1954, align 1
  %1955 = load i8*, i8** %26, align 8
  %1956 = getelementptr inbounds i8, i8* %1955, i64 2
  store i8* %1956, i8** %26, align 8
  br label %1957

1957:                                             ; preds = %1950, %1809
  br label %1605

1958:                                             ; preds = %1946, %1896, %1797
  %1959 = load i32, i32* %21, align 4
  %1960 = and i32 %1959, 511
  store i32 %1960, i32* %21, align 4
  %1961 = icmp eq i32 %1960, 256
  br i1 %1961, label %1962, label %1963

1962:                                             ; preds = %1958
  br label %2421

1963:                                             ; preds = %1958
  %1964 = load i32, i32* %21, align 4
  %1965 = sub i32 %1964, 257
  %1966 = zext i32 %1965 to i64
  %1967 = getelementptr inbounds [31 x i8], [31 x i8]* @tinfl_decompress.s_length_extra, i64 0, i64 %1966
  %1968 = load i8, i8* %1967, align 1
  %1969 = zext i8 %1968 to i32
  store i32 %1969, i32* %22, align 4
  %1970 = load i32, i32* %21, align 4
  %1971 = sub i32 %1970, 257
  %1972 = zext i32 %1971 to i64
  %1973 = getelementptr inbounds [31 x i16], [31 x i16]* @tinfl_decompress.s_length_base, i64 0, i64 %1972
  %1974 = load i16, i16* %1973, align 2
  %1975 = zext i16 %1974 to i32
  store i32 %1975, i32* %21, align 4
  %1976 = load i32, i32* %22, align 4
  %1977 = icmp ne i32 %1976, 0
  br i1 %1977, label %1978, label %2040

1978:                                             ; preds = %1963
  br label %1979

1979:                                             ; preds = %1978
  %1980 = load i32, i32* %19, align 4
  %1981 = load i32, i32* %22, align 4
  %1982 = icmp ult i32 %1980, %1981
  br i1 %1982, label %1983, label %2021

1983:                                             ; preds = %1979
  br label %1984

1984:                                             ; preds = %2016, %1983
  br label %1985

1985:                                             ; preds = %1984
  br label %1986

1986:                                             ; preds = %2000, %1985
  %1987 = load i8*, i8** %24, align 8
  %1988 = load i8*, i8** %25, align 8
  %1989 = icmp uge i8* %1987, %1988
  br i1 %1989, label %1990, label %2001

1990:                                             ; preds = %1986
  br label %1991

1991:                                             ; preds = %1990
  %1992 = load i32, i32* %15, align 4
  %1993 = and i32 %1992, 2
  %1994 = icmp ne i32 %1993, 0
  %1995 = zext i1 %1994 to i64
  %1996 = select i1 %1994, i32 1, i32 -4
  store i32 %1996, i32* %18, align 4
  %1997 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %1998 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1997, i32 0, i32 0
  store i32 25, i32* %1998, align 8
  br label %2619

1999:                                             ; preds = %128
  br label %2000

2000:                                             ; preds = %1999
  br label %1986, !llvm.loop !58

2001:                                             ; preds = %1986
  %2002 = load i8*, i8** %24, align 8
  %2003 = getelementptr inbounds i8, i8* %2002, i32 1
  store i8* %2003, i8** %24, align 8
  %2004 = load i8, i8* %2002, align 1
  %2005 = zext i8 %2004 to i32
  store i32 %2005, i32* %69, align 4
  br label %2006

2006:                                             ; preds = %2001
  %2007 = load i32, i32* %69, align 4
  %2008 = zext i32 %2007 to i64
  %2009 = load i32, i32* %19, align 4
  %2010 = zext i32 %2009 to i64
  %2011 = shl i64 %2008, %2010
  %2012 = load i64, i64* %23, align 8
  %2013 = or i64 %2012, %2011
  store i64 %2013, i64* %23, align 8
  %2014 = load i32, i32* %19, align 4
  %2015 = add i32 %2014, 8
  store i32 %2015, i32* %19, align 4
  br label %2016

2016:                                             ; preds = %2006
  %2017 = load i32, i32* %19, align 4
  %2018 = load i32, i32* %22, align 4
  %2019 = icmp ult i32 %2017, %2018
  br i1 %2019, label %1984, label %2020, !llvm.loop !59

2020:                                             ; preds = %2016
  br label %2021

2021:                                             ; preds = %2020, %1979
  %2022 = load i64, i64* %23, align 8
  %2023 = load i32, i32* %22, align 4
  %2024 = shl i32 1, %2023
  %2025 = sub nsw i32 %2024, 1
  %2026 = sext i32 %2025 to i64
  %2027 = and i64 %2022, %2026
  %2028 = trunc i64 %2027 to i32
  store i32 %2028, i32* %68, align 4
  %2029 = load i32, i32* %22, align 4
  %2030 = load i64, i64* %23, align 8
  %2031 = zext i32 %2029 to i64
  %2032 = lshr i64 %2030, %2031
  store i64 %2032, i64* %23, align 8
  %2033 = load i32, i32* %22, align 4
  %2034 = load i32, i32* %19, align 4
  %2035 = sub i32 %2034, %2033
  store i32 %2035, i32* %19, align 4
  br label %2036

2036:                                             ; preds = %2021
  %2037 = load i32, i32* %68, align 4
  %2038 = load i32, i32* %21, align 4
  %2039 = add i32 %2038, %2037
  store i32 %2039, i32* %21, align 4
  br label %2040

2040:                                             ; preds = %2036, %1963
  br label %2041

2041:                                             ; preds = %2040
  %2042 = load i32, i32* %19, align 4
  %2043 = icmp ult i32 %2042, 15
  br i1 %2043, label %2044, label %2170

2044:                                             ; preds = %2041
  %2045 = load i8*, i8** %25, align 8
  %2046 = load i8*, i8** %24, align 8
  %2047 = ptrtoint i8* %2045 to i64
  %2048 = ptrtoint i8* %2046 to i64
  %2049 = sub i64 %2047, %2048
  %2050 = icmp slt i64 %2049, 2
  br i1 %2050, label %2051, label %2146

2051:                                             ; preds = %2044
  br label %2052

2052:                                             ; preds = %2142, %2051
  %2053 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2054 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2053, i32 0, i32 14
  %2055 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %2054, i64 0, i64 1
  %2056 = load i64, i64* %23, align 8
  %2057 = and i64 %2056, 1023
  %2058 = getelementptr inbounds [1024 x i16], [1024 x i16]* %2055, i64 0, i64 %2057
  %2059 = load i16, i16* %2058, align 2
  %2060 = sext i16 %2059 to i32
  store i32 %2060, i32* %70, align 4
  %2061 = load i32, i32* %70, align 4
  %2062 = icmp sge i32 %2061, 0
  br i1 %2062, label %2063, label %2074

2063:                                             ; preds = %2052
  %2064 = load i32, i32* %70, align 4
  %2065 = ashr i32 %2064, 9
  store i32 %2065, i32* %71, align 4
  %2066 = load i32, i32* %71, align 4
  %2067 = icmp ne i32 %2066, 0
  br i1 %2067, label %2068, label %2073

2068:                                             ; preds = %2063
  %2069 = load i32, i32* %19, align 4
  %2070 = load i32, i32* %71, align 4
  %2071 = icmp uge i32 %2069, %2070
  br i1 %2071, label %2072, label %2073

2072:                                             ; preds = %2068
  br label %2145

2073:                                             ; preds = %2068, %2063
  br label %2110

2074:                                             ; preds = %2052
  %2075 = load i32, i32* %19, align 4
  %2076 = icmp ugt i32 %2075, 10
  br i1 %2076, label %2077, label %2109

2077:                                             ; preds = %2074
  store i32 10, i32* %71, align 4
  br label %2078

2078:                                             ; preds = %2102, %2077
  %2079 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2080 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2079, i32 0, i32 16
  %2081 = load i32, i32* %70, align 4
  %2082 = xor i32 %2081, -1
  %2083 = sext i32 %2082 to i64
  %2084 = load i64, i64* %23, align 8
  %2085 = load i32, i32* %71, align 4
  %2086 = add i32 %2085, 1
  store i32 %2086, i32* %71, align 4
  %2087 = zext i32 %2085 to i64
  %2088 = lshr i64 %2084, %2087
  %2089 = and i64 %2088, 1
  %2090 = add i64 %2083, %2089
  %2091 = getelementptr inbounds [64 x i16], [64 x i16]* %2080, i64 0, i64 %2090
  %2092 = load i16, i16* %2091, align 2
  %2093 = sext i16 %2092 to i32
  store i32 %2093, i32* %70, align 4
  br label %2094

2094:                                             ; preds = %2078
  %2095 = load i32, i32* %70, align 4
  %2096 = icmp slt i32 %2095, 0
  br i1 %2096, label %2097, label %2102

2097:                                             ; preds = %2094
  %2098 = load i32, i32* %19, align 4
  %2099 = load i32, i32* %71, align 4
  %2100 = add i32 %2099, 1
  %2101 = icmp uge i32 %2098, %2100
  br label %2102

2102:                                             ; preds = %2097, %2094
  %2103 = phi i1 [ false, %2094 ], [ %2101, %2097 ]
  br i1 %2103, label %2078, label %2104, !llvm.loop !60

2104:                                             ; preds = %2102
  %2105 = load i32, i32* %70, align 4
  %2106 = icmp sge i32 %2105, 0
  br i1 %2106, label %2107, label %2108

2107:                                             ; preds = %2104
  br label %2145

2108:                                             ; preds = %2104
  br label %2109

2109:                                             ; preds = %2108, %2074
  br label %2110

2110:                                             ; preds = %2109, %2073
  br label %2111

2111:                                             ; preds = %2110
  br label %2112

2112:                                             ; preds = %2126, %2111
  %2113 = load i8*, i8** %24, align 8
  %2114 = load i8*, i8** %25, align 8
  %2115 = icmp uge i8* %2113, %2114
  br i1 %2115, label %2116, label %2127

2116:                                             ; preds = %2112
  br label %2117

2117:                                             ; preds = %2116
  %2118 = load i32, i32* %15, align 4
  %2119 = and i32 %2118, 2
  %2120 = icmp ne i32 %2119, 0
  %2121 = zext i1 %2120 to i64
  %2122 = select i1 %2120, i32 1, i32 -4
  store i32 %2122, i32* %18, align 4
  %2123 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2124 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2123, i32 0, i32 0
  store i32 26, i32* %2124, align 8
  br label %2619

2125:                                             ; preds = %128
  br label %2126

2126:                                             ; preds = %2125
  br label %2112, !llvm.loop !61

2127:                                             ; preds = %2112
  %2128 = load i8*, i8** %24, align 8
  %2129 = getelementptr inbounds i8, i8* %2128, i32 1
  store i8* %2129, i8** %24, align 8
  %2130 = load i8, i8* %2128, align 1
  %2131 = zext i8 %2130 to i32
  store i32 %2131, i32* %72, align 4
  br label %2132

2132:                                             ; preds = %2127
  %2133 = load i32, i32* %72, align 4
  %2134 = zext i32 %2133 to i64
  %2135 = load i32, i32* %19, align 4
  %2136 = zext i32 %2135 to i64
  %2137 = shl i64 %2134, %2136
  %2138 = load i64, i64* %23, align 8
  %2139 = or i64 %2138, %2137
  store i64 %2139, i64* %23, align 8
  %2140 = load i32, i32* %19, align 4
  %2141 = add i32 %2140, 8
  store i32 %2141, i32* %19, align 4
  br label %2142

2142:                                             ; preds = %2132
  %2143 = load i32, i32* %19, align 4
  %2144 = icmp ult i32 %2143, 15
  br i1 %2144, label %2052, label %2145, !llvm.loop !62

2145:                                             ; preds = %2142, %2107, %2072
  br label %2169

2146:                                             ; preds = %2044
  %2147 = load i8*, i8** %24, align 8
  %2148 = getelementptr inbounds i8, i8* %2147, i64 0
  %2149 = load i8, i8* %2148, align 1
  %2150 = zext i8 %2149 to i64
  %2151 = load i32, i32* %19, align 4
  %2152 = zext i32 %2151 to i64
  %2153 = shl i64 %2150, %2152
  %2154 = load i8*, i8** %24, align 8
  %2155 = getelementptr inbounds i8, i8* %2154, i64 1
  %2156 = load i8, i8* %2155, align 1
  %2157 = zext i8 %2156 to i64
  %2158 = load i32, i32* %19, align 4
  %2159 = add i32 %2158, 8
  %2160 = zext i32 %2159 to i64
  %2161 = shl i64 %2157, %2160
  %2162 = or i64 %2153, %2161
  %2163 = load i64, i64* %23, align 8
  %2164 = or i64 %2163, %2162
  store i64 %2164, i64* %23, align 8
  %2165 = load i8*, i8** %24, align 8
  %2166 = getelementptr inbounds i8, i8* %2165, i64 2
  store i8* %2166, i8** %24, align 8
  %2167 = load i32, i32* %19, align 4
  %2168 = add i32 %2167, 16
  store i32 %2168, i32* %19, align 4
  br label %2169

2169:                                             ; preds = %2146, %2145
  br label %2170

2170:                                             ; preds = %2169, %2041
  %2171 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2172 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2171, i32 0, i32 14
  %2173 = getelementptr inbounds [3 x [1024 x i16]], [3 x [1024 x i16]]* %2172, i64 0, i64 1
  %2174 = load i64, i64* %23, align 8
  %2175 = and i64 %2174, 1023
  %2176 = getelementptr inbounds [1024 x i16], [1024 x i16]* %2173, i64 0, i64 %2175
  %2177 = load i16, i16* %2176, align 2
  %2178 = sext i16 %2177 to i32
  store i32 %2178, i32* %70, align 4
  %2179 = icmp sge i32 %2178, 0
  br i1 %2179, label %2180, label %2185

2180:                                             ; preds = %2170
  %2181 = load i32, i32* %70, align 4
  %2182 = ashr i32 %2181, 9
  store i32 %2182, i32* %71, align 4
  %2183 = load i32, i32* %70, align 4
  %2184 = and i32 %2183, 511
  store i32 %2184, i32* %70, align 4
  br label %2206

2185:                                             ; preds = %2170
  store i32 10, i32* %71, align 4
  br label %2186

2186:                                             ; preds = %2202, %2185
  %2187 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2188 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2187, i32 0, i32 16
  %2189 = load i32, i32* %70, align 4
  %2190 = xor i32 %2189, -1
  %2191 = sext i32 %2190 to i64
  %2192 = load i64, i64* %23, align 8
  %2193 = load i32, i32* %71, align 4
  %2194 = add i32 %2193, 1
  store i32 %2194, i32* %71, align 4
  %2195 = zext i32 %2193 to i64
  %2196 = lshr i64 %2192, %2195
  %2197 = and i64 %2196, 1
  %2198 = add i64 %2191, %2197
  %2199 = getelementptr inbounds [64 x i16], [64 x i16]* %2188, i64 0, i64 %2198
  %2200 = load i16, i16* %2199, align 2
  %2201 = sext i16 %2200 to i32
  store i32 %2201, i32* %70, align 4
  br label %2202

2202:                                             ; preds = %2186
  %2203 = load i32, i32* %70, align 4
  %2204 = icmp slt i32 %2203, 0
  br i1 %2204, label %2186, label %2205, !llvm.loop !63

2205:                                             ; preds = %2202
  br label %2206

2206:                                             ; preds = %2205, %2180
  %2207 = load i32, i32* %70, align 4
  store i32 %2207, i32* %20, align 4
  %2208 = load i32, i32* %71, align 4
  %2209 = load i64, i64* %23, align 8
  %2210 = zext i32 %2208 to i64
  %2211 = lshr i64 %2209, %2210
  store i64 %2211, i64* %23, align 8
  %2212 = load i32, i32* %71, align 4
  %2213 = load i32, i32* %19, align 4
  %2214 = sub i32 %2213, %2212
  store i32 %2214, i32* %19, align 4
  br label %2215

2215:                                             ; preds = %2206
  %2216 = load i32, i32* %20, align 4
  %2217 = zext i32 %2216 to i64
  %2218 = getelementptr inbounds [32 x i8], [32 x i8]* @tinfl_decompress.s_dist_extra, i64 0, i64 %2217
  %2219 = load i8, i8* %2218, align 1
  %2220 = zext i8 %2219 to i32
  store i32 %2220, i32* %22, align 4
  %2221 = load i32, i32* %20, align 4
  %2222 = zext i32 %2221 to i64
  %2223 = getelementptr inbounds [32 x i16], [32 x i16]* @tinfl_decompress.s_dist_base, i64 0, i64 %2222
  %2224 = load i16, i16* %2223, align 2
  %2225 = zext i16 %2224 to i32
  store i32 %2225, i32* %20, align 4
  %2226 = load i32, i32* %22, align 4
  %2227 = icmp ne i32 %2226, 0
  br i1 %2227, label %2228, label %2290

2228:                                             ; preds = %2215
  br label %2229

2229:                                             ; preds = %2228
  %2230 = load i32, i32* %19, align 4
  %2231 = load i32, i32* %22, align 4
  %2232 = icmp ult i32 %2230, %2231
  br i1 %2232, label %2233, label %2271

2233:                                             ; preds = %2229
  br label %2234

2234:                                             ; preds = %2266, %2233
  br label %2235

2235:                                             ; preds = %2234
  br label %2236

2236:                                             ; preds = %2250, %2235
  %2237 = load i8*, i8** %24, align 8
  %2238 = load i8*, i8** %25, align 8
  %2239 = icmp uge i8* %2237, %2238
  br i1 %2239, label %2240, label %2251

2240:                                             ; preds = %2236
  br label %2241

2241:                                             ; preds = %2240
  %2242 = load i32, i32* %15, align 4
  %2243 = and i32 %2242, 2
  %2244 = icmp ne i32 %2243, 0
  %2245 = zext i1 %2244 to i64
  %2246 = select i1 %2244, i32 1, i32 -4
  store i32 %2246, i32* %18, align 4
  %2247 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2248 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2247, i32 0, i32 0
  store i32 27, i32* %2248, align 8
  br label %2619

2249:                                             ; preds = %128
  br label %2250

2250:                                             ; preds = %2249
  br label %2236, !llvm.loop !64

2251:                                             ; preds = %2236
  %2252 = load i8*, i8** %24, align 8
  %2253 = getelementptr inbounds i8, i8* %2252, i32 1
  store i8* %2253, i8** %24, align 8
  %2254 = load i8, i8* %2252, align 1
  %2255 = zext i8 %2254 to i32
  store i32 %2255, i32* %74, align 4
  br label %2256

2256:                                             ; preds = %2251
  %2257 = load i32, i32* %74, align 4
  %2258 = zext i32 %2257 to i64
  %2259 = load i32, i32* %19, align 4
  %2260 = zext i32 %2259 to i64
  %2261 = shl i64 %2258, %2260
  %2262 = load i64, i64* %23, align 8
  %2263 = or i64 %2262, %2261
  store i64 %2263, i64* %23, align 8
  %2264 = load i32, i32* %19, align 4
  %2265 = add i32 %2264, 8
  store i32 %2265, i32* %19, align 4
  br label %2266

2266:                                             ; preds = %2256
  %2267 = load i32, i32* %19, align 4
  %2268 = load i32, i32* %22, align 4
  %2269 = icmp ult i32 %2267, %2268
  br i1 %2269, label %2234, label %2270, !llvm.loop !65

2270:                                             ; preds = %2266
  br label %2271

2271:                                             ; preds = %2270, %2229
  %2272 = load i64, i64* %23, align 8
  %2273 = load i32, i32* %22, align 4
  %2274 = shl i32 1, %2273
  %2275 = sub nsw i32 %2274, 1
  %2276 = sext i32 %2275 to i64
  %2277 = and i64 %2272, %2276
  %2278 = trunc i64 %2277 to i32
  store i32 %2278, i32* %73, align 4
  %2279 = load i32, i32* %22, align 4
  %2280 = load i64, i64* %23, align 8
  %2281 = zext i32 %2279 to i64
  %2282 = lshr i64 %2280, %2281
  store i64 %2282, i64* %23, align 8
  %2283 = load i32, i32* %22, align 4
  %2284 = load i32, i32* %19, align 4
  %2285 = sub i32 %2284, %2283
  store i32 %2285, i32* %19, align 4
  br label %2286

2286:                                             ; preds = %2271
  %2287 = load i32, i32* %73, align 4
  %2288 = load i32, i32* %20, align 4
  %2289 = add i32 %2288, %2287
  store i32 %2289, i32* %20, align 4
  br label %2290

2290:                                             ; preds = %2286, %2215
  %2291 = load i8*, i8** %26, align 8
  %2292 = load i8*, i8** %12, align 8
  %2293 = ptrtoint i8* %2291 to i64
  %2294 = ptrtoint i8* %2292 to i64
  %2295 = sub i64 %2293, %2294
  store i64 %2295, i64* %29, align 8
  %2296 = load i32, i32* %20, align 4
  %2297 = icmp eq i32 %2296, 0
  br i1 %2297, label %2306, label %2298

2298:                                             ; preds = %2290
  %2299 = load i32, i32* %20, align 4
  %2300 = zext i32 %2299 to i64
  %2301 = load i64, i64* %29, align 8
  %2302 = icmp ugt i64 %2300, %2301
  br i1 %2302, label %2306, label %2303

2303:                                             ; preds = %2298
  %2304 = load i64, i64* %29, align 8
  %2305 = icmp eq i64 %2304, 0
  br i1 %2305, label %2306, label %2319

2306:                                             ; preds = %2303, %2298, %2290
  %2307 = load i32, i32* %15, align 4
  %2308 = and i32 %2307, 4
  %2309 = icmp ne i32 %2308, 0
  br i1 %2309, label %2310, label %2319

2310:                                             ; preds = %2306
  br label %2311

2311:                                             ; preds = %2310
  br label %2312

2312:                                             ; preds = %2317, %2311
  br label %2313

2313:                                             ; preds = %2312
  store i32 -1, i32* %18, align 4
  %2314 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2315 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2314, i32 0, i32 0
  store i32 37, i32* %2315, align 8
  br label %2619

2316:                                             ; preds = %128
  br label %2317

2317:                                             ; preds = %2316
  br label %2312

2318:                                             ; No predecessors!
  br label %2319

2319:                                             ; preds = %2318, %2306, %2303
  %2320 = load i8*, i8** %12, align 8
  %2321 = load i64, i64* %29, align 8
  %2322 = load i32, i32* %20, align 4
  %2323 = zext i32 %2322 to i64
  %2324 = sub i64 %2321, %2323
  %2325 = load i64, i64* %28, align 8
  %2326 = and i64 %2324, %2325
  %2327 = getelementptr inbounds i8, i8* %2320, i64 %2326
  store i8* %2327, i8** %62, align 8
  %2328 = load i8*, i8** %26, align 8
  %2329 = load i8*, i8** %62, align 8
  %2330 = icmp ugt i8* %2328, %2329
  br i1 %2330, label %2331, label %2333

2331:                                             ; preds = %2319
  %2332 = load i8*, i8** %26, align 8
  br label %2335

2333:                                             ; preds = %2319
  %2334 = load i8*, i8** %62, align 8
  br label %2335

2335:                                             ; preds = %2333, %2331
  %2336 = phi i8* [ %2332, %2331 ], [ %2334, %2333 ]
  %2337 = load i32, i32* %21, align 4
  %2338 = zext i32 %2337 to i64
  %2339 = getelementptr inbounds i8, i8* %2336, i64 %2338
  %2340 = load i8*, i8** %27, align 8
  %2341 = icmp ugt i8* %2339, %2340
  br i1 %2341, label %2342, label %2372

2342:                                             ; preds = %2335
  br label %2343

2343:                                             ; preds = %2358, %2342
  %2344 = load i32, i32* %21, align 4
  %2345 = add i32 %2344, -1
  store i32 %2345, i32* %21, align 4
  %2346 = icmp ne i32 %2344, 0
  br i1 %2346, label %2347, label %2371

2347:                                             ; preds = %2343
  br label %2348

2348:                                             ; preds = %2357, %2347
  %2349 = load i8*, i8** %26, align 8
  %2350 = load i8*, i8** %27, align 8
  %2351 = icmp uge i8* %2349, %2350
  br i1 %2351, label %2352, label %2358

2352:                                             ; preds = %2348
  br label %2353

2353:                                             ; preds = %2352
  store i32 2, i32* %18, align 4
  %2354 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2355 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2354, i32 0, i32 0
  store i32 53, i32* %2355, align 8
  br label %2619

2356:                                             ; preds = %128
  br label %2357

2357:                                             ; preds = %2356
  br label %2348, !llvm.loop !66

2358:                                             ; preds = %2348
  %2359 = load i8*, i8** %12, align 8
  %2360 = load i64, i64* %29, align 8
  %2361 = add i64 %2360, 1
  store i64 %2361, i64* %29, align 8
  %2362 = load i32, i32* %20, align 4
  %2363 = zext i32 %2362 to i64
  %2364 = sub i64 %2360, %2363
  %2365 = load i64, i64* %28, align 8
  %2366 = and i64 %2364, %2365
  %2367 = getelementptr inbounds i8, i8* %2359, i64 %2366
  %2368 = load i8, i8* %2367, align 1
  %2369 = load i8*, i8** %26, align 8
  %2370 = getelementptr inbounds i8, i8* %2369, i32 1
  store i8* %2370, i8** %26, align 8
  store i8 %2368, i8* %2369, align 1
  br label %2343, !llvm.loop !67

2371:                                             ; preds = %2343
  br label %1604

2372:                                             ; preds = %2335
  br label %2373

2373:                                             ; preds = %2376, %2372
  %2374 = load i32, i32* %21, align 4
  %2375 = icmp ugt i32 %2374, 2
  br i1 %2375, label %2376, label %2398

2376:                                             ; preds = %2373
  %2377 = load i8*, i8** %62, align 8
  %2378 = getelementptr inbounds i8, i8* %2377, i64 0
  %2379 = load i8, i8* %2378, align 1
  %2380 = load i8*, i8** %26, align 8
  %2381 = getelementptr inbounds i8, i8* %2380, i64 0
  store i8 %2379, i8* %2381, align 1
  %2382 = load i8*, i8** %62, align 8
  %2383 = getelementptr inbounds i8, i8* %2382, i64 1
  %2384 = load i8, i8* %2383, align 1
  %2385 = load i8*, i8** %26, align 8
  %2386 = getelementptr inbounds i8, i8* %2385, i64 1
  store i8 %2384, i8* %2386, align 1
  %2387 = load i8*, i8** %62, align 8
  %2388 = getelementptr inbounds i8, i8* %2387, i64 2
  %2389 = load i8, i8* %2388, align 1
  %2390 = load i8*, i8** %26, align 8
  %2391 = getelementptr inbounds i8, i8* %2390, i64 2
  store i8 %2389, i8* %2391, align 1
  %2392 = load i8*, i8** %26, align 8
  %2393 = getelementptr inbounds i8, i8* %2392, i64 3
  store i8* %2393, i8** %26, align 8
  %2394 = load i8*, i8** %62, align 8
  %2395 = getelementptr inbounds i8, i8* %2394, i64 3
  store i8* %2395, i8** %62, align 8
  %2396 = load i32, i32* %21, align 4
  %2397 = sub i32 %2396, 3
  store i32 %2397, i32* %21, align 4
  br label %2373, !llvm.loop !68

2398:                                             ; preds = %2373
  %2399 = load i32, i32* %21, align 4
  %2400 = icmp ugt i32 %2399, 0
  br i1 %2400, label %2401, label %2420

2401:                                             ; preds = %2398
  %2402 = load i8*, i8** %62, align 8
  %2403 = getelementptr inbounds i8, i8* %2402, i64 0
  %2404 = load i8, i8* %2403, align 1
  %2405 = load i8*, i8** %26, align 8
  %2406 = getelementptr inbounds i8, i8* %2405, i64 0
  store i8 %2404, i8* %2406, align 1
  %2407 = load i32, i32* %21, align 4
  %2408 = icmp ugt i32 %2407, 1
  br i1 %2408, label %2409, label %2415

2409:                                             ; preds = %2401
  %2410 = load i8*, i8** %62, align 8
  %2411 = getelementptr inbounds i8, i8* %2410, i64 1
  %2412 = load i8, i8* %2411, align 1
  %2413 = load i8*, i8** %26, align 8
  %2414 = getelementptr inbounds i8, i8* %2413, i64 1
  store i8 %2412, i8* %2414, align 1
  br label %2415

2415:                                             ; preds = %2409, %2401
  %2416 = load i32, i32* %21, align 4
  %2417 = load i8*, i8** %26, align 8
  %2418 = zext i32 %2416 to i64
  %2419 = getelementptr inbounds i8, i8* %2417, i64 %2418
  store i8* %2419, i8** %26, align 8
  br label %2420

2420:                                             ; preds = %2415, %2398
  br label %1604

2421:                                             ; preds = %1962
  br label %2422

2422:                                             ; preds = %2421, %741
  br label %2423

2423:                                             ; preds = %2422, %727
  br label %2424

2424:                                             ; preds = %2423
  %2425 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2426 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2425, i32 0, i32 5
  %2427 = load i32, i32* %2426, align 4
  %2428 = and i32 %2427, 1
  %2429 = icmp ne i32 %2428, 0
  %2430 = xor i1 %2429, true
  br i1 %2430, label %301, label %2431, !llvm.loop !69

2431:                                             ; preds = %2424
  br label %2432

2432:                                             ; preds = %2431
  %2433 = load i32, i32* %19, align 4
  %2434 = load i32, i32* %19, align 4
  %2435 = and i32 %2434, 7
  %2436 = icmp ult i32 %2433, %2435
  br i1 %2436, label %2437, label %2476

2437:                                             ; preds = %2432
  br label %2438

2438:                                             ; preds = %2470, %2437
  br label %2439

2439:                                             ; preds = %2438
  br label %2440

2440:                                             ; preds = %2454, %2439
  %2441 = load i8*, i8** %24, align 8
  %2442 = load i8*, i8** %25, align 8
  %2443 = icmp uge i8* %2441, %2442
  br i1 %2443, label %2444, label %2455

2444:                                             ; preds = %2440
  br label %2445

2445:                                             ; preds = %2444
  %2446 = load i32, i32* %15, align 4
  %2447 = and i32 %2446, 2
  %2448 = icmp ne i32 %2447, 0
  %2449 = zext i1 %2448 to i64
  %2450 = select i1 %2448, i32 1, i32 -4
  store i32 %2450, i32* %18, align 4
  %2451 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2452 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2451, i32 0, i32 0
  store i32 32, i32* %2452, align 8
  br label %2619

2453:                                             ; preds = %128
  br label %2454

2454:                                             ; preds = %2453
  br label %2440, !llvm.loop !70

2455:                                             ; preds = %2440
  %2456 = load i8*, i8** %24, align 8
  %2457 = getelementptr inbounds i8, i8* %2456, i32 1
  store i8* %2457, i8** %24, align 8
  %2458 = load i8, i8* %2456, align 1
  %2459 = zext i8 %2458 to i32
  store i32 %2459, i32* %75, align 4
  br label %2460

2460:                                             ; preds = %2455
  %2461 = load i32, i32* %75, align 4
  %2462 = zext i32 %2461 to i64
  %2463 = load i32, i32* %19, align 4
  %2464 = zext i32 %2463 to i64
  %2465 = shl i64 %2462, %2464
  %2466 = load i64, i64* %23, align 8
  %2467 = or i64 %2466, %2465
  store i64 %2467, i64* %23, align 8
  %2468 = load i32, i32* %19, align 4
  %2469 = add i32 %2468, 8
  store i32 %2469, i32* %19, align 4
  br label %2470

2470:                                             ; preds = %2460
  %2471 = load i32, i32* %19, align 4
  %2472 = load i32, i32* %19, align 4
  %2473 = and i32 %2472, 7
  %2474 = icmp ult i32 %2471, %2473
  br i1 %2474, label %2438, label %2475, !llvm.loop !71

2475:                                             ; preds = %2470
  br label %2476

2476:                                             ; preds = %2475, %2432
  %2477 = load i32, i32* %19, align 4
  %2478 = and i32 %2477, 7
  %2479 = load i64, i64* %23, align 8
  %2480 = zext i32 %2478 to i64
  %2481 = lshr i64 %2479, %2480
  store i64 %2481, i64* %23, align 8
  %2482 = load i32, i32* %19, align 4
  %2483 = and i32 %2482, 7
  %2484 = load i32, i32* %19, align 4
  %2485 = sub i32 %2484, %2483
  store i32 %2485, i32* %19, align 4
  br label %2486

2486:                                             ; preds = %2476
  br label %2487

2487:                                             ; preds = %2496, %2486
  %2488 = load i8*, i8** %24, align 8
  %2489 = load i8*, i8** %10, align 8
  %2490 = icmp ugt i8* %2488, %2489
  br i1 %2490, label %2491, label %2494

2491:                                             ; preds = %2487
  %2492 = load i32, i32* %19, align 4
  %2493 = icmp uge i32 %2492, 8
  br label %2494

2494:                                             ; preds = %2491, %2487
  %2495 = phi i1 [ false, %2487 ], [ %2493, %2491 ]
  br i1 %2495, label %2496, label %2501

2496:                                             ; preds = %2494
  %2497 = load i8*, i8** %24, align 8
  %2498 = getelementptr inbounds i8, i8* %2497, i32 -1
  store i8* %2498, i8** %24, align 8
  %2499 = load i32, i32* %19, align 4
  %2500 = sub i32 %2499, 8
  store i32 %2500, i32* %19, align 4
  br label %2487, !llvm.loop !72

2501:                                             ; preds = %2494
  %2502 = load i32, i32* %19, align 4
  %2503 = zext i32 %2502 to i64
  %2504 = shl i64 -1, %2503
  %2505 = xor i64 %2504, -1
  %2506 = load i64, i64* %23, align 8
  %2507 = and i64 %2506, %2505
  store i64 %2507, i64* %23, align 8
  %2508 = load i32, i32* %19, align 4
  %2509 = icmp ne i32 %2508, 0
  br i1 %2509, label %2511, label %2510

2510:                                             ; preds = %2501
  br label %2512

2511:                                             ; preds = %2501
  call void @__assert_fail(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 2853, i8* noundef getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__.tinfl_decompress, i64 0, i64 0)) #8
  unreachable

2512:                                             ; preds = %2510
  %2513 = load i32, i32* %15, align 4
  %2514 = and i32 %2513, 1
  %2515 = icmp ne i32 %2514, 0
  br i1 %2515, label %2516, label %2609

2516:                                             ; preds = %2512
  store i32 0, i32* %21, align 4
  br label %2517

2517:                                             ; preds = %2605, %2516
  %2518 = load i32, i32* %21, align 4
  %2519 = icmp ult i32 %2518, 4
  br i1 %2519, label %2520, label %2608

2520:                                             ; preds = %2517
  %2521 = load i32, i32* %19, align 4
  %2522 = icmp ne i32 %2521, 0
  br i1 %2522, label %2523, label %2573

2523:                                             ; preds = %2520
  br label %2524

2524:                                             ; preds = %2523
  %2525 = load i32, i32* %19, align 4
  %2526 = icmp ult i32 %2525, 8
  br i1 %2526, label %2527, label %2564

2527:                                             ; preds = %2524
  br label %2528

2528:                                             ; preds = %2560, %2527
  br label %2529

2529:                                             ; preds = %2528
  br label %2530

2530:                                             ; preds = %2544, %2529
  %2531 = load i8*, i8** %24, align 8
  %2532 = load i8*, i8** %25, align 8
  %2533 = icmp uge i8* %2531, %2532
  br i1 %2533, label %2534, label %2545

2534:                                             ; preds = %2530
  br label %2535

2535:                                             ; preds = %2534
  %2536 = load i32, i32* %15, align 4
  %2537 = and i32 %2536, 2
  %2538 = icmp ne i32 %2537, 0
  %2539 = zext i1 %2538 to i64
  %2540 = select i1 %2538, i32 1, i32 -4
  store i32 %2540, i32* %18, align 4
  %2541 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2542 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2541, i32 0, i32 0
  store i32 41, i32* %2542, align 8
  br label %2619

2543:                                             ; preds = %128
  br label %2544

2544:                                             ; preds = %2543
  br label %2530, !llvm.loop !73

2545:                                             ; preds = %2530
  %2546 = load i8*, i8** %24, align 8
  %2547 = getelementptr inbounds i8, i8* %2546, i32 1
  store i8* %2547, i8** %24, align 8
  %2548 = load i8, i8* %2546, align 1
  %2549 = zext i8 %2548 to i32
  store i32 %2549, i32* %77, align 4
  br label %2550

2550:                                             ; preds = %2545
  %2551 = load i32, i32* %77, align 4
  %2552 = zext i32 %2551 to i64
  %2553 = load i32, i32* %19, align 4
  %2554 = zext i32 %2553 to i64
  %2555 = shl i64 %2552, %2554
  %2556 = load i64, i64* %23, align 8
  %2557 = or i64 %2556, %2555
  store i64 %2557, i64* %23, align 8
  %2558 = load i32, i32* %19, align 4
  %2559 = add i32 %2558, 8
  store i32 %2559, i32* %19, align 4
  br label %2560

2560:                                             ; preds = %2550
  %2561 = load i32, i32* %19, align 4
  %2562 = icmp ult i32 %2561, 8
  br i1 %2562, label %2528, label %2563, !llvm.loop !74

2563:                                             ; preds = %2560
  br label %2564

2564:                                             ; preds = %2563, %2524
  %2565 = load i64, i64* %23, align 8
  %2566 = and i64 %2565, 255
  %2567 = trunc i64 %2566 to i32
  store i32 %2567, i32* %76, align 4
  %2568 = load i64, i64* %23, align 8
  %2569 = lshr i64 %2568, 8
  store i64 %2569, i64* %23, align 8
  %2570 = load i32, i32* %19, align 4
  %2571 = sub i32 %2570, 8
  store i32 %2571, i32* %19, align 4
  br label %2572

2572:                                             ; preds = %2564
  br label %2596

2573:                                             ; preds = %2520
  br label %2574

2574:                                             ; preds = %2573
  br label %2575

2575:                                             ; preds = %2589, %2574
  %2576 = load i8*, i8** %24, align 8
  %2577 = load i8*, i8** %25, align 8
  %2578 = icmp uge i8* %2576, %2577
  br i1 %2578, label %2579, label %2590

2579:                                             ; preds = %2575
  br label %2580

2580:                                             ; preds = %2579
  %2581 = load i32, i32* %15, align 4
  %2582 = and i32 %2581, 2
  %2583 = icmp ne i32 %2582, 0
  %2584 = zext i1 %2583 to i64
  %2585 = select i1 %2583, i32 1, i32 -4
  store i32 %2585, i32* %18, align 4
  %2586 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2587 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2586, i32 0, i32 0
  store i32 42, i32* %2587, align 8
  br label %2619

2588:                                             ; preds = %128
  br label %2589

2589:                                             ; preds = %2588
  br label %2575, !llvm.loop !75

2590:                                             ; preds = %2575
  %2591 = load i8*, i8** %24, align 8
  %2592 = getelementptr inbounds i8, i8* %2591, i32 1
  store i8* %2592, i8** %24, align 8
  %2593 = load i8, i8* %2591, align 1
  %2594 = zext i8 %2593 to i32
  store i32 %2594, i32* %76, align 4
  br label %2595

2595:                                             ; preds = %2590
  br label %2596

2596:                                             ; preds = %2595, %2572
  %2597 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2598 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2597, i32 0, i32 4
  %2599 = load i32, i32* %2598, align 8
  %2600 = shl i32 %2599, 8
  %2601 = load i32, i32* %76, align 4
  %2602 = or i32 %2600, %2601
  %2603 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2604 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2603, i32 0, i32 4
  store i32 %2602, i32* %2604, align 8
  br label %2605

2605:                                             ; preds = %2596
  %2606 = load i32, i32* %21, align 4
  %2607 = add i32 %2606, 1
  store i32 %2607, i32* %21, align 4
  br label %2517, !llvm.loop !76

2608:                                             ; preds = %2517
  br label %2609

2609:                                             ; preds = %2608, %2512
  br label %2610

2610:                                             ; preds = %2609
  br label %2611

2611:                                             ; preds = %2616, %2610
  br label %2612

2612:                                             ; preds = %2611
  store i32 0, i32* %18, align 4
  %2613 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2614 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2613, i32 0, i32 0
  store i32 34, i32* %2614, align 8
  br label %2619

2615:                                             ; preds = %128
  br label %2616

2616:                                             ; preds = %2615
  br label %2611

2617:                                             ; No predecessors!
  br label %2618

2618:                                             ; preds = %2617, %128
  br label %2619

2619:                                             ; preds = %2618, %2612, %2580, %2535, %2445, %2353, %2313, %2241, %2117, %1991, %1804, %1696, %1562, %1467, %1442, %1323, %1073, %926, %821, %736, %644, %633, %611, %568, %541, %487, %437, %377, %313, %293, %217, %193
  %2620 = load i32, i32* %18, align 4
  %2621 = icmp ne i32 %2620, 1
  br i1 %2621, label %2622, label %2641

2622:                                             ; preds = %2619
  %2623 = load i32, i32* %18, align 4
  %2624 = icmp ne i32 %2623, -4
  br i1 %2624, label %2625, label %2641

2625:                                             ; preds = %2622
  br label %2626

2626:                                             ; preds = %2635, %2625
  %2627 = load i8*, i8** %24, align 8
  %2628 = load i8*, i8** %10, align 8
  %2629 = icmp ugt i8* %2627, %2628
  br i1 %2629, label %2630, label %2633

2630:                                             ; preds = %2626
  %2631 = load i32, i32* %19, align 4
  %2632 = icmp uge i32 %2631, 8
  br label %2633

2633:                                             ; preds = %2630, %2626
  %2634 = phi i1 [ false, %2626 ], [ %2632, %2630 ]
  br i1 %2634, label %2635, label %2640

2635:                                             ; preds = %2633
  %2636 = load i8*, i8** %24, align 8
  %2637 = getelementptr inbounds i8, i8* %2636, i32 -1
  store i8* %2637, i8** %24, align 8
  %2638 = load i32, i32* %19, align 4
  %2639 = sub i32 %2638, 8
  store i32 %2639, i32* %19, align 4
  br label %2626, !llvm.loop !77

2640:                                             ; preds = %2633
  br label %2641

2641:                                             ; preds = %2640, %2622, %2619
  %2642 = load i32, i32* %19, align 4
  %2643 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2644 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2643, i32 0, i32 1
  store i32 %2642, i32* %2644, align 4
  %2645 = load i64, i64* %23, align 8
  %2646 = load i32, i32* %19, align 4
  %2647 = zext i32 %2646 to i64
  %2648 = shl i64 -1, %2647
  %2649 = xor i64 %2648, -1
  %2650 = and i64 %2645, %2649
  %2651 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2652 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2651, i32 0, i32 12
  store i64 %2650, i64* %2652, align 8
  %2653 = load i32, i32* %20, align 4
  %2654 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2655 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2654, i32 0, i32 8
  store i32 %2653, i32* %2655, align 8
  %2656 = load i32, i32* %21, align 4
  %2657 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2658 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2657, i32 0, i32 9
  store i32 %2656, i32* %2658, align 4
  %2659 = load i32, i32* %22, align 4
  %2660 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2661 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2660, i32 0, i32 10
  store i32 %2659, i32* %2661, align 8
  %2662 = load i64, i64* %29, align 8
  %2663 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2664 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2663, i32 0, i32 13
  store i64 %2662, i64* %2664, align 8
  %2665 = load i8*, i8** %24, align 8
  %2666 = load i8*, i8** %10, align 8
  %2667 = ptrtoint i8* %2665 to i64
  %2668 = ptrtoint i8* %2666 to i64
  %2669 = sub i64 %2667, %2668
  %2670 = load i64*, i64** %11, align 8
  store i64 %2669, i64* %2670, align 8
  %2671 = load i8*, i8** %26, align 8
  %2672 = load i8*, i8** %13, align 8
  %2673 = ptrtoint i8* %2671 to i64
  %2674 = ptrtoint i8* %2672 to i64
  %2675 = sub i64 %2673, %2674
  %2676 = load i64*, i64** %14, align 8
  store i64 %2675, i64* %2676, align 8
  %2677 = load i32, i32* %15, align 4
  %2678 = and i32 %2677, 9
  %2679 = icmp ne i32 %2678, 0
  br i1 %2679, label %2680, label %2835

2680:                                             ; preds = %2641
  %2681 = load i32, i32* %18, align 4
  %2682 = icmp sge i32 %2681, 0
  br i1 %2682, label %2683, label %2835

2683:                                             ; preds = %2680
  %2684 = load i8*, i8** %13, align 8
  store i8* %2684, i8** %78, align 8
  %2685 = load i64*, i64** %14, align 8
  %2686 = load i64, i64* %2685, align 8
  store i64 %2686, i64* %79, align 8
  %2687 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2688 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2687, i32 0, i32 7
  %2689 = load i32, i32* %2688, align 4
  %2690 = and i32 %2689, 65535
  store i32 %2690, i32* %81, align 4
  %2691 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2692 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2691, i32 0, i32 7
  %2693 = load i32, i32* %2692, align 4
  %2694 = lshr i32 %2693, 16
  store i32 %2694, i32* %82, align 4
  %2695 = load i64, i64* %79, align 8
  %2696 = urem i64 %2695, 5552
  store i64 %2696, i64* %83, align 8
  br label %2697

2697:                                             ; preds = %2804, %2683
  %2698 = load i64, i64* %79, align 8
  %2699 = icmp ne i64 %2698, 0
  br i1 %2699, label %2700, label %2812

2700:                                             ; preds = %2697
  store i32 0, i32* %80, align 4
  br label %2701

2701:                                             ; preds = %2780, %2700
  %2702 = load i32, i32* %80, align 4
  %2703 = add i32 %2702, 7
  %2704 = zext i32 %2703 to i64
  %2705 = load i64, i64* %83, align 8
  %2706 = icmp ult i64 %2704, %2705
  br i1 %2706, label %2707, label %2785

2707:                                             ; preds = %2701
  %2708 = load i8*, i8** %78, align 8
  %2709 = getelementptr inbounds i8, i8* %2708, i64 0
  %2710 = load i8, i8* %2709, align 1
  %2711 = zext i8 %2710 to i32
  %2712 = load i32, i32* %81, align 4
  %2713 = add i32 %2712, %2711
  store i32 %2713, i32* %81, align 4
  %2714 = load i32, i32* %81, align 4
  %2715 = load i32, i32* %82, align 4
  %2716 = add i32 %2715, %2714
  store i32 %2716, i32* %82, align 4
  %2717 = load i8*, i8** %78, align 8
  %2718 = getelementptr inbounds i8, i8* %2717, i64 1
  %2719 = load i8, i8* %2718, align 1
  %2720 = zext i8 %2719 to i32
  %2721 = load i32, i32* %81, align 4
  %2722 = add i32 %2721, %2720
  store i32 %2722, i32* %81, align 4
  %2723 = load i32, i32* %81, align 4
  %2724 = load i32, i32* %82, align 4
  %2725 = add i32 %2724, %2723
  store i32 %2725, i32* %82, align 4
  %2726 = load i8*, i8** %78, align 8
  %2727 = getelementptr inbounds i8, i8* %2726, i64 2
  %2728 = load i8, i8* %2727, align 1
  %2729 = zext i8 %2728 to i32
  %2730 = load i32, i32* %81, align 4
  %2731 = add i32 %2730, %2729
  store i32 %2731, i32* %81, align 4
  %2732 = load i32, i32* %81, align 4
  %2733 = load i32, i32* %82, align 4
  %2734 = add i32 %2733, %2732
  store i32 %2734, i32* %82, align 4
  %2735 = load i8*, i8** %78, align 8
  %2736 = getelementptr inbounds i8, i8* %2735, i64 3
  %2737 = load i8, i8* %2736, align 1
  %2738 = zext i8 %2737 to i32
  %2739 = load i32, i32* %81, align 4
  %2740 = add i32 %2739, %2738
  store i32 %2740, i32* %81, align 4
  %2741 = load i32, i32* %81, align 4
  %2742 = load i32, i32* %82, align 4
  %2743 = add i32 %2742, %2741
  store i32 %2743, i32* %82, align 4
  %2744 = load i8*, i8** %78, align 8
  %2745 = getelementptr inbounds i8, i8* %2744, i64 4
  %2746 = load i8, i8* %2745, align 1
  %2747 = zext i8 %2746 to i32
  %2748 = load i32, i32* %81, align 4
  %2749 = add i32 %2748, %2747
  store i32 %2749, i32* %81, align 4
  %2750 = load i32, i32* %81, align 4
  %2751 = load i32, i32* %82, align 4
  %2752 = add i32 %2751, %2750
  store i32 %2752, i32* %82, align 4
  %2753 = load i8*, i8** %78, align 8
  %2754 = getelementptr inbounds i8, i8* %2753, i64 5
  %2755 = load i8, i8* %2754, align 1
  %2756 = zext i8 %2755 to i32
  %2757 = load i32, i32* %81, align 4
  %2758 = add i32 %2757, %2756
  store i32 %2758, i32* %81, align 4
  %2759 = load i32, i32* %81, align 4
  %2760 = load i32, i32* %82, align 4
  %2761 = add i32 %2760, %2759
  store i32 %2761, i32* %82, align 4
  %2762 = load i8*, i8** %78, align 8
  %2763 = getelementptr inbounds i8, i8* %2762, i64 6
  %2764 = load i8, i8* %2763, align 1
  %2765 = zext i8 %2764 to i32
  %2766 = load i32, i32* %81, align 4
  %2767 = add i32 %2766, %2765
  store i32 %2767, i32* %81, align 4
  %2768 = load i32, i32* %81, align 4
  %2769 = load i32, i32* %82, align 4
  %2770 = add i32 %2769, %2768
  store i32 %2770, i32* %82, align 4
  %2771 = load i8*, i8** %78, align 8
  %2772 = getelementptr inbounds i8, i8* %2771, i64 7
  %2773 = load i8, i8* %2772, align 1
  %2774 = zext i8 %2773 to i32
  %2775 = load i32, i32* %81, align 4
  %2776 = add i32 %2775, %2774
  store i32 %2776, i32* %81, align 4
  %2777 = load i32, i32* %81, align 4
  %2778 = load i32, i32* %82, align 4
  %2779 = add i32 %2778, %2777
  store i32 %2779, i32* %82, align 4
  br label %2780

2780:                                             ; preds = %2707
  %2781 = load i32, i32* %80, align 4
  %2782 = add i32 %2781, 8
  store i32 %2782, i32* %80, align 4
  %2783 = load i8*, i8** %78, align 8
  %2784 = getelementptr inbounds i8, i8* %2783, i64 8
  store i8* %2784, i8** %78, align 8
  br label %2701, !llvm.loop !78

2785:                                             ; preds = %2701
  br label %2786

2786:                                             ; preds = %2801, %2785
  %2787 = load i32, i32* %80, align 4
  %2788 = zext i32 %2787 to i64
  %2789 = load i64, i64* %83, align 8
  %2790 = icmp ult i64 %2788, %2789
  br i1 %2790, label %2791, label %2804

2791:                                             ; preds = %2786
  %2792 = load i8*, i8** %78, align 8
  %2793 = getelementptr inbounds i8, i8* %2792, i32 1
  store i8* %2793, i8** %78, align 8
  %2794 = load i8, i8* %2792, align 1
  %2795 = zext i8 %2794 to i32
  %2796 = load i32, i32* %81, align 4
  %2797 = add i32 %2796, %2795
  store i32 %2797, i32* %81, align 4
  %2798 = load i32, i32* %81, align 4
  %2799 = load i32, i32* %82, align 4
  %2800 = add i32 %2799, %2798
  store i32 %2800, i32* %82, align 4
  br label %2801

2801:                                             ; preds = %2791
  %2802 = load i32, i32* %80, align 4
  %2803 = add i32 %2802, 1
  store i32 %2803, i32* %80, align 4
  br label %2786, !llvm.loop !79

2804:                                             ; preds = %2786
  %2805 = load i32, i32* %81, align 4
  %2806 = urem i32 %2805, 65521
  store i32 %2806, i32* %81, align 4
  %2807 = load i32, i32* %82, align 4
  %2808 = urem i32 %2807, 65521
  store i32 %2808, i32* %82, align 4
  %2809 = load i64, i64* %83, align 8
  %2810 = load i64, i64* %79, align 8
  %2811 = sub i64 %2810, %2809
  store i64 %2811, i64* %79, align 8
  store i64 5552, i64* %83, align 8
  br label %2697, !llvm.loop !80

2812:                                             ; preds = %2697
  %2813 = load i32, i32* %82, align 4
  %2814 = shl i32 %2813, 16
  %2815 = load i32, i32* %81, align 4
  %2816 = add i32 %2814, %2815
  %2817 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2818 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2817, i32 0, i32 7
  store i32 %2816, i32* %2818, align 4
  %2819 = load i32, i32* %18, align 4
  %2820 = icmp eq i32 %2819, 0
  br i1 %2820, label %2821, label %2834

2821:                                             ; preds = %2812
  %2822 = load i32, i32* %15, align 4
  %2823 = and i32 %2822, 1
  %2824 = icmp ne i32 %2823, 0
  br i1 %2824, label %2825, label %2834

2825:                                             ; preds = %2821
  %2826 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2827 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2826, i32 0, i32 7
  %2828 = load i32, i32* %2827, align 4
  %2829 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %9, align 8
  %2830 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2829, i32 0, i32 4
  %2831 = load i32, i32* %2830, align 8
  %2832 = icmp ne i32 %2828, %2831
  br i1 %2832, label %2833, label %2834

2833:                                             ; preds = %2825
  store i32 -2, i32* %18, align 4
  br label %2834

2834:                                             ; preds = %2833, %2825, %2821, %2812
  br label %2835

2835:                                             ; preds = %2834, %2680, %2641
  %2836 = load i32, i32* %18, align 4
  store i32 %2836, i32* %8, align 4
  br label %2837

2837:                                             ; preds = %2835, %125
  %2838 = load i32, i32* %8, align 4
  ret i32 %2838
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_inflateEnd(%struct.mz_stream_s* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %0, %struct.mz_stream_s** %3, align 8
  %4 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %5 = icmp ne %struct.mz_stream_s* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %26

7:                                                ; preds = %1
  %8 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %9 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %8, i32 0, i32 7
  %10 = load %struct.mz_internal_state*, %struct.mz_internal_state** %9, align 8
  %11 = icmp ne %struct.mz_internal_state* %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %14 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %13, i32 0, i32 9
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %14, align 8
  %16 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %17 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %16, i32 0, i32 10
  %18 = load i8*, i8** %17, align 8
  %19 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %19, i32 0, i32 7
  %21 = load %struct.mz_internal_state*, %struct.mz_internal_state** %20, align 8
  %22 = bitcast %struct.mz_internal_state* %21 to i8*
  call void %15(i8* noundef %18, i8* noundef %22)
  %23 = load %struct.mz_stream_s*, %struct.mz_stream_s** %3, align 8
  %24 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %23, i32 0, i32 7
  store %struct.mz_internal_state* null, %struct.mz_internal_state** %24, align 8
  br label %25

25:                                               ; preds = %12, %7
  store i32 0, i32* %2, align 4
  br label %26

26:                                               ; preds = %25, %6
  %27 = load i32, i32* %2, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_uncompress2(i8* noundef %0, i64* noundef %1, i8* noundef %2, i64* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %struct.mz_stream_s, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64* %1, i64** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64* %3, i64** %9, align 8
  %12 = bitcast %struct.mz_stream_s* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 112, i1 false)
  %13 = load i64*, i64** %9, align 8
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %7, align 8
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %14, %16
  %18 = icmp ugt i64 %17, 4294967295
  br i1 %18, label %19, label %20

19:                                               ; preds = %4
  store i32 -10000, i32* %5, align 4
  br label %67

20:                                               ; preds = %4
  %21 = load i8*, i8** %8, align 8
  %22 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = load i64*, i64** %9, align 8
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 1
  store i32 %25, i32* %26, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 3
  store i8* %27, i8** %28, align 8
  %29 = load i64*, i64** %7, align 8
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 4
  store i32 %31, i32* %32, align 8
  %33 = call i32 @mz_inflateInit(%struct.mz_stream_s* noundef %10)
  store i32 %33, i32* %11, align 4
  %34 = load i32, i32* %11, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %20
  %37 = load i32, i32* %11, align 4
  store i32 %37, i32* %5, align 4
  br label %67

38:                                               ; preds = %20
  %39 = call i32 @mz_inflate(%struct.mz_stream_s* noundef %10, i32 noundef 4)
  store i32 %39, i32* %11, align 4
  %40 = load i64*, i64** %9, align 8
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = sub i64 %41, %44
  %46 = load i64*, i64** %9, align 8
  store i64 %45, i64* %46, align 8
  %47 = load i32, i32* %11, align 4
  %48 = icmp ne i32 %47, 1
  br i1 %48, label %49, label %62

49:                                               ; preds = %38
  %50 = call i32 @mz_inflateEnd(%struct.mz_stream_s* noundef %10)
  %51 = load i32, i32* %11, align 4
  %52 = icmp eq i32 %51, -5
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  br label %60

58:                                               ; preds = %53, %49
  %59 = load i32, i32* %11, align 4
  br label %60

60:                                               ; preds = %58, %57
  %61 = phi i32 [ -3, %57 ], [ %59, %58 ]
  store i32 %61, i32* %5, align 4
  br label %67

62:                                               ; preds = %38
  %63 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %10, i32 0, i32 5
  %64 = load i64, i64* %63, align 8
  %65 = load i64*, i64** %7, align 8
  store i64 %64, i64* %65, align 8
  %66 = call i32 @mz_inflateEnd(%struct.mz_stream_s* noundef %10)
  store i32 %66, i32* %5, align 4
  br label %67

67:                                               ; preds = %62, %60, %36, %19
  %68 = load i32, i32* %5, align 4
  ret i32 %68
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_uncompress(i8* noundef %0, i64* noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64* %1, i64** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = call i32 @mz_uncompress2(i8* noundef %9, i64* noundef %10, i8* noundef %11, i64* noundef %8)
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_error(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %24, %1
  %6 = load i32, i32* %4, align 4
  %7 = zext i32 %6 to i64
  %8 = icmp ult i64 %7, 10
  br i1 %8, label %9, label %27

9:                                                ; preds = %5
  %10 = load i32, i32* %4, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* @mz_error.s_error_descs, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 16
  %15 = load i32, i32* %3, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %9
  %18 = load i32, i32* %4, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* @mz_error.s_error_descs, i64 0, i64 %19
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %20, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %2, align 8
  br label %28

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %23
  %25 = load i32, i32* %4, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %4, align 4
  br label %5, !llvm.loop !81

27:                                               ; preds = %5
  store i8* null, i8** %2, align 8
  br label %28

28:                                               ; preds = %27, %17
  %29 = load i8*, i8** %2, align 8
  ret i8* %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @tdefl_flush_output_buffer(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i64, align 8
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  %4 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %5 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %4, i32 0, i32 29
  %6 = load i64*, i64** %5, align 8
  %7 = icmp ne i64* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %1
  %9 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %9, i32 0, i32 32
  %11 = load i8*, i8** %10, align 8
  %12 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %13 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %12, i32 0, i32 27
  %14 = load i8*, i8** %13, align 8
  %15 = ptrtoint i8* %11 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = sub i64 %15, %16
  %18 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %19 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %18, i32 0, i32 29
  %20 = load i64*, i64** %19, align 8
  store i64 %17, i64* %20, align 8
  br label %21

21:                                               ; preds = %8, %1
  %22 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %23 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %22, i32 0, i32 30
  %24 = load i64*, i64** %23, align 8
  %25 = icmp ne i64* %24, null
  br i1 %25, label %26, label %95

26:                                               ; preds = %21
  %27 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %28 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %27, i32 0, i32 30
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  %31 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %32 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %31, i32 0, i32 34
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %36 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %35, i32 0, i32 22
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = icmp ult i64 %34, %38
  br i1 %39, label %40, label %49

40:                                               ; preds = %26
  %41 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %41, i32 0, i32 30
  %43 = load i64*, i64** %42, align 8
  %44 = load i64, i64* %43, align 8
  %45 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %46 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %45, i32 0, i32 34
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %44, %47
  br label %54

49:                                               ; preds = %26
  %50 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %51 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %50, i32 0, i32 22
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %49, %40
  %55 = phi i64 [ %48, %40 ], [ %53, %49 ]
  store i64 %55, i64* %3, align 8
  %56 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %56, i32 0, i32 28
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %60 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %59, i32 0, i32 34
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %64 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %63, i32 0, i32 42
  %65 = getelementptr inbounds [85196 x i8], [85196 x i8]* %64, i64 0, i64 0
  %66 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %66, i32 0, i32 21
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %65, i64 %69
  %71 = load i64, i64* %3, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %70, i64 %71, i1 false)
  %72 = load i64, i64* %3, align 8
  %73 = trunc i64 %72 to i32
  %74 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %75 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %74, i32 0, i32 21
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, %73
  store i32 %77, i32* %75, align 8
  %78 = load i64, i64* %3, align 8
  %79 = trunc i64 %78 to i32
  %80 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %81 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %80, i32 0, i32 22
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 %82, %79
  store i32 %83, i32* %81, align 4
  %84 = load i64, i64* %3, align 8
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 34
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, %84
  store i64 %88, i64* %86, align 8
  %89 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %90 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %89, i32 0, i32 34
  %91 = load i64, i64* %90, align 8
  %92 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %92, i32 0, i32 30
  %94 = load i64*, i64** %93, align 8
  store i64 %91, i64* %94, align 8
  br label %95

95:                                               ; preds = %54, %21
  %96 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %97 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %96, i32 0, i32 23
  %98 = load i32, i32* %97, align 8
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %95
  %101 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %102 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %101, i32 0, i32 22
  %103 = load i32, i32* %102, align 4
  %104 = icmp ne i32 %103, 0
  %105 = xor i1 %104, true
  br label %106

106:                                              ; preds = %100, %95
  %107 = phi i1 [ false, %95 ], [ %105, %100 ]
  %108 = zext i1 %107 to i64
  %109 = select i1 %107, i32 1, i32 0
  ret i32 %109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @tdefl_compress_normal(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.tdefl_compressor*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.tdefl_compressor*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.tdefl_compressor*, align 8
  %18 = alloca i8, align 1
  %19 = alloca %struct.tdefl_compressor*, align 8
  %20 = alloca i8, align 1
  %21 = alloca %struct.tdefl_compressor*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i32, align 4
  %40 = alloca %struct.tdefl_compressor*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i8*, align 8
  %53 = alloca i8, align 1
  %54 = alloca i8, align 1
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i8, align 1
  %59 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %40, align 8
  %60 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %60, i32 0, i32 32
  %62 = load i8*, i8** %61, align 8
  store i8* %62, i8** %41, align 8
  %63 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %64 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %63, i32 0, i32 33
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %42, align 8
  %66 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %66, i32 0, i32 31
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %43, align 4
  br label %69

69:                                               ; preds = %1333, %1
  %70 = load i64, i64* %42, align 8
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = load i32, i32* %43, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %72
  %76 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %76, i32 0, i32 7
  %78 = load i32, i32* %77, align 8
  %79 = icmp ne i32 %78, 0
  br label %80

80:                                               ; preds = %75, %72
  %81 = phi i1 [ false, %72 ], [ %79, %75 ]
  br label %82

82:                                               ; preds = %80, %69
  %83 = phi i1 [ true, %69 ], [ %81, %80 ]
  br i1 %83, label %84, label %1334

84:                                               ; preds = %82
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 7
  %87 = load i32, i32* %86, align 8
  %88 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %89 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %88, i32 0, i32 8
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %87, %90
  %92 = icmp uge i32 %91, 2
  br i1 %92, label %93, label %222

93:                                               ; preds = %84
  %94 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %94, i32 0, i32 6
  %96 = load i32, i32* %95, align 4
  %97 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %98 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %97, i32 0, i32 7
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %96, %99
  %101 = and i32 %100, 32767
  store i32 %101, i32* %48, align 4
  %102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %102, i32 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %106 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %105, i32 0, i32 7
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %104, %107
  %109 = sub i32 %108, 2
  store i32 %109, i32* %49, align 4
  %110 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %110, i32 0, i32 35
  %112 = load i32, i32* %49, align 4
  %113 = and i32 %112, 32767
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [33025 x i8], [33025 x i8]* %111, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl i32 %117, 5
  %119 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %120 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %119, i32 0, i32 35
  %121 = load i32, i32* %49, align 4
  %122 = add i32 %121, 1
  %123 = and i32 %122, 32767
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [33025 x i8], [33025 x i8]* %120, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = xor i32 %118, %127
  store i32 %128, i32* %50, align 4
  %129 = load i64, i64* %42, align 8
  %130 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %131 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %130, i32 0, i32 7
  %132 = load i32, i32* %131, align 8
  %133 = sub i32 258, %132
  %134 = zext i32 %133 to i64
  %135 = icmp ult i64 %129, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %93
  %137 = load i64, i64* %42, align 8
  br label %144

138:                                              ; preds = %93
  %139 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %140 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %139, i32 0, i32 7
  %141 = load i32, i32* %140, align 8
  %142 = sub i32 258, %141
  %143 = zext i32 %142 to i64
  br label %144

144:                                              ; preds = %138, %136
  %145 = phi i64 [ %137, %136 ], [ %143, %138 ]
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %51, align 4
  %147 = load i8*, i8** %41, align 8
  %148 = icmp ne i8* %147, null
  br i1 %148, label %149, label %154

149:                                              ; preds = %144
  %150 = load i8*, i8** %41, align 8
  %151 = load i32, i32* %51, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %150, i64 %152
  br label %155

154:                                              ; preds = %144
  br label %155

155:                                              ; preds = %154, %149
  %156 = phi i8* [ %153, %149 ], [ null, %154 ]
  store i8* %156, i8** %52, align 8
  %157 = load i32, i32* %51, align 4
  %158 = zext i32 %157 to i64
  %159 = load i64, i64* %42, align 8
  %160 = sub i64 %159, %158
  store i64 %160, i64* %42, align 8
  %161 = load i32, i32* %51, align 4
  %162 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %163 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %162, i32 0, i32 7
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %164, %161
  store i32 %165, i32* %163, align 8
  br label %166

166:                                              ; preds = %190, %155
  %167 = load i8*, i8** %41, align 8
  %168 = load i8*, i8** %52, align 8
  %169 = icmp ne i8* %167, %168
  br i1 %169, label %170, label %221

170:                                              ; preds = %166
  %171 = load i8*, i8** %41, align 8
  %172 = getelementptr inbounds i8, i8* %171, i32 1
  store i8* %172, i8** %41, align 8
  %173 = load i8, i8* %171, align 1
  store i8 %173, i8* %53, align 1
  %174 = load i8, i8* %53, align 1
  %175 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %176 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %175, i32 0, i32 35
  %177 = load i32, i32* %48, align 4
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [33025 x i8], [33025 x i8]* %176, i64 0, i64 %178
  store i8 %174, i8* %179, align 1
  %180 = load i32, i32* %48, align 4
  %181 = icmp ult i32 %180, 257
  br i1 %181, label %182, label %190

182:                                              ; preds = %170
  %183 = load i8, i8* %53, align 1
  %184 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %185 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %184, i32 0, i32 35
  %186 = load i32, i32* %48, align 4
  %187 = add i32 32768, %186
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [33025 x i8], [33025 x i8]* %185, i64 0, i64 %188
  store i8 %183, i8* %189, align 1
  br label %190

190:                                              ; preds = %182, %170
  %191 = load i32, i32* %50, align 4
  %192 = shl i32 %191, 5
  %193 = load i8, i8* %53, align 1
  %194 = zext i8 %193 to i32
  %195 = xor i32 %192, %194
  %196 = and i32 %195, 32767
  store i32 %196, i32* %50, align 4
  %197 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %198 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %197, i32 0, i32 41
  %199 = load i32, i32* %50, align 4
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [32768 x i16], [32768 x i16]* %198, i64 0, i64 %200
  %202 = load i16, i16* %201, align 2
  %203 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %204 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %203, i32 0, i32 40
  %205 = load i32, i32* %49, align 4
  %206 = and i32 %205, 32767
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds [32768 x i16], [32768 x i16]* %204, i64 0, i64 %207
  store i16 %202, i16* %208, align 2
  %209 = load i32, i32* %49, align 4
  %210 = trunc i32 %209 to i16
  %211 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %212 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %211, i32 0, i32 41
  %213 = load i32, i32* %50, align 4
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds [32768 x i16], [32768 x i16]* %212, i64 0, i64 %214
  store i16 %210, i16* %215, align 2
  %216 = load i32, i32* %48, align 4
  %217 = add i32 %216, 1
  %218 = and i32 %217, 32767
  store i32 %218, i32* %48, align 4
  %219 = load i32, i32* %49, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* %49, align 4
  br label %166, !llvm.loop !82

221:                                              ; preds = %166
  br label %328

222:                                              ; preds = %84
  br label %223

223:                                              ; preds = %326, %222
  %224 = load i64, i64* %42, align 8
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %231

226:                                              ; preds = %223
  %227 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %228 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %227, i32 0, i32 7
  %229 = load i32, i32* %228, align 8
  %230 = icmp ult i32 %229, 258
  br label %231

231:                                              ; preds = %226, %223
  %232 = phi i1 [ false, %223 ], [ %230, %226 ]
  br i1 %232, label %233, label %327

233:                                              ; preds = %231
  %234 = load i8*, i8** %41, align 8
  %235 = getelementptr inbounds i8, i8* %234, i32 1
  store i8* %235, i8** %41, align 8
  %236 = load i8, i8* %234, align 1
  store i8 %236, i8* %54, align 1
  %237 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %238 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %237, i32 0, i32 6
  %239 = load i32, i32* %238, align 4
  %240 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %241 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %240, i32 0, i32 7
  %242 = load i32, i32* %241, align 8
  %243 = add i32 %239, %242
  %244 = and i32 %243, 32767
  store i32 %244, i32* %55, align 4
  %245 = load i64, i64* %42, align 8
  %246 = add i64 %245, -1
  store i64 %246, i64* %42, align 8
  %247 = load i8, i8* %54, align 1
  %248 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %249 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %248, i32 0, i32 35
  %250 = load i32, i32* %55, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [33025 x i8], [33025 x i8]* %249, i64 0, i64 %251
  store i8 %247, i8* %252, align 1
  %253 = load i32, i32* %55, align 4
  %254 = icmp ult i32 %253, 257
  br i1 %254, label %255, label %263

255:                                              ; preds = %233
  %256 = load i8, i8* %54, align 1
  %257 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %258 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %257, i32 0, i32 35
  %259 = load i32, i32* %55, align 4
  %260 = add i32 32768, %259
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [33025 x i8], [33025 x i8]* %258, i64 0, i64 %261
  store i8 %256, i8* %262, align 1
  br label %263

263:                                              ; preds = %255, %233
  %264 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %265 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %264, i32 0, i32 7
  %266 = load i32, i32* %265, align 8
  %267 = add i32 %266, 1
  store i32 %267, i32* %265, align 8
  %268 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %269 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %268, i32 0, i32 8
  %270 = load i32, i32* %269, align 4
  %271 = add i32 %267, %270
  %272 = icmp uge i32 %271, 3
  br i1 %272, label %273, label %326

273:                                              ; preds = %263
  %274 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %275 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %274, i32 0, i32 6
  %276 = load i32, i32* %275, align 4
  %277 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %278 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %277, i32 0, i32 7
  %279 = load i32, i32* %278, align 8
  %280 = sub i32 %279, 1
  %281 = add i32 %276, %280
  %282 = sub i32 %281, 2
  store i32 %282, i32* %56, align 4
  %283 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %284 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %283, i32 0, i32 35
  %285 = load i32, i32* %56, align 4
  %286 = and i32 %285, 32767
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds [33025 x i8], [33025 x i8]* %284, i64 0, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = shl i32 %290, 10
  %292 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %293 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %292, i32 0, i32 35
  %294 = load i32, i32* %56, align 4
  %295 = add i32 %294, 1
  %296 = and i32 %295, 32767
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [33025 x i8], [33025 x i8]* %293, i64 0, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  %301 = shl i32 %300, 5
  %302 = xor i32 %291, %301
  %303 = load i8, i8* %54, align 1
  %304 = zext i8 %303 to i32
  %305 = xor i32 %302, %304
  %306 = and i32 %305, 32767
  store i32 %306, i32* %57, align 4
  %307 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %308 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %307, i32 0, i32 41
  %309 = load i32, i32* %57, align 4
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [32768 x i16], [32768 x i16]* %308, i64 0, i64 %310
  %312 = load i16, i16* %311, align 2
  %313 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %314 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %313, i32 0, i32 40
  %315 = load i32, i32* %56, align 4
  %316 = and i32 %315, 32767
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [32768 x i16], [32768 x i16]* %314, i64 0, i64 %317
  store i16 %312, i16* %318, align 2
  %319 = load i32, i32* %56, align 4
  %320 = trunc i32 %319 to i16
  %321 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %322 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %321, i32 0, i32 41
  %323 = load i32, i32* %57, align 4
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds [32768 x i16], [32768 x i16]* %322, i64 0, i64 %324
  store i16 %320, i16* %325, align 2
  br label %326

326:                                              ; preds = %273, %263
  br label %223, !llvm.loop !83

327:                                              ; preds = %231
  br label %328

328:                                              ; preds = %327, %221
  %329 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %330 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %329, i32 0, i32 7
  %331 = load i32, i32* %330, align 8
  %332 = sub i32 32768, %331
  %333 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %334 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %333, i32 0, i32 8
  %335 = load i32, i32* %334, align 4
  %336 = icmp ult i32 %332, %335
  br i1 %336, label %337, label %342

337:                                              ; preds = %328
  %338 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %339 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %338, i32 0, i32 7
  %340 = load i32, i32* %339, align 8
  %341 = sub i32 32768, %340
  br label %346

342:                                              ; preds = %328
  %343 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %344 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %343, i32 0, i32 8
  %345 = load i32, i32* %344, align 4
  br label %346

346:                                              ; preds = %342, %337
  %347 = phi i32 [ %341, %337 ], [ %345, %342 ]
  %348 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %349 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %348, i32 0, i32 8
  store i32 %347, i32* %349, align 4
  %350 = load i32, i32* %43, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %358, label %352

352:                                              ; preds = %346
  %353 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %354 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %353, i32 0, i32 7
  %355 = load i32, i32* %354, align 8
  %356 = icmp ult i32 %355, 258
  br i1 %356, label %357, label %358

357:                                              ; preds = %352
  br label %1334

358:                                              ; preds = %352, %346
  store i32 1, i32* %44, align 4
  store i32 0, i32* %45, align 4
  %359 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %360 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %359, i32 0, i32 19
  %361 = load i32, i32* %360, align 8
  %362 = icmp ne i32 %361, 0
  br i1 %362, label %363, label %367

363:                                              ; preds = %358
  %364 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %365 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %364, i32 0, i32 19
  %366 = load i32, i32* %365, align 8
  br label %368

367:                                              ; preds = %358
  br label %368

368:                                              ; preds = %367, %363
  %369 = phi i32 [ %366, %363 ], [ 2, %367 ]
  store i32 %369, i32* %46, align 4
  %370 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %371 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %370, i32 0, i32 6
  %372 = load i32, i32* %371, align 4
  %373 = and i32 %372, 32767
  store i32 %373, i32* %47, align 4
  %374 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %375 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %374, i32 0, i32 2
  %376 = load i32, i32* %375, align 8
  %377 = and i32 %376, 589824
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %379, label %429

379:                                              ; preds = %368
  %380 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %381 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %380, i32 0, i32 8
  %382 = load i32, i32* %381, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %384, label %428

384:                                              ; preds = %379
  %385 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %386 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %385, i32 0, i32 2
  %387 = load i32, i32* %386, align 8
  %388 = and i32 %387, 524288
  %389 = icmp ne i32 %388, 0
  br i1 %389, label %428, label %390

390:                                              ; preds = %384
  %391 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %392 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %391, i32 0, i32 35
  %393 = load i32, i32* %47, align 4
  %394 = sub i32 %393, 1
  %395 = and i32 %394, 32767
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds [33025 x i8], [33025 x i8]* %392, i64 0, i64 %396
  %398 = load i8, i8* %397, align 1
  store i8 %398, i8* %58, align 1
  store i32 0, i32* %46, align 4
  br label %399

399:                                              ; preds = %419, %390
  %400 = load i32, i32* %46, align 4
  %401 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %402 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %401, i32 0, i32 7
  %403 = load i32, i32* %402, align 8
  %404 = icmp ult i32 %400, %403
  br i1 %404, label %405, label %422

405:                                              ; preds = %399
  %406 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %407 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %406, i32 0, i32 35
  %408 = load i32, i32* %47, align 4
  %409 = load i32, i32* %46, align 4
  %410 = add i32 %408, %409
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds [33025 x i8], [33025 x i8]* %407, i64 0, i64 %411
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  %415 = load i8, i8* %58, align 1
  %416 = zext i8 %415 to i32
  %417 = icmp ne i32 %414, %416
  br i1 %417, label %418, label %419

418:                                              ; preds = %405
  br label %422

419:                                              ; preds = %405
  %420 = load i32, i32* %46, align 4
  %421 = add i32 %420, 1
  store i32 %421, i32* %46, align 4
  br label %399, !llvm.loop !84

422:                                              ; preds = %418, %399
  %423 = load i32, i32* %46, align 4
  %424 = icmp ult i32 %423, 3
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  store i32 0, i32* %46, align 4
  br label %427

426:                                              ; preds = %422
  store i32 1, i32* %45, align 4
  br label %427

427:                                              ; preds = %426, %425
  br label %428

428:                                              ; preds = %427, %384, %379
  br label %701

429:                                              ; preds = %368
  %430 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %431 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %432 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %431, i32 0, i32 6
  %433 = load i32, i32* %432, align 4
  %434 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %435 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %434, i32 0, i32 8
  %436 = load i32, i32* %435, align 4
  %437 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %438 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %437, i32 0, i32 7
  %439 = load i32, i32* %438, align 8
  store %struct.tdefl_compressor* %430, %struct.tdefl_compressor** %21, align 8
  store i32 %433, i32* %22, align 4
  store i32 %436, i32* %23, align 4
  store i32 %439, i32* %24, align 4
  store i32* %45, i32** %25, align 8
  store i32* %46, i32** %26, align 8
  %440 = load i32, i32* %22, align 4
  %441 = and i32 %440, 32767
  store i32 %441, i32* %28, align 4
  %442 = load i32*, i32** %26, align 8
  %443 = load i32, i32* %442, align 4
  store i32 %443, i32* %29, align 4
  %444 = load i32, i32* %28, align 4
  store i32 %444, i32* %30, align 4
  %445 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %446 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %445, i32 0, i32 3
  %447 = load i32, i32* %29, align 4
  %448 = icmp uge i32 %447, 32
  %449 = zext i1 %448 to i32
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [2 x i32], [2 x i32]* %446, i64 0, i64 %450
  %452 = load i32, i32* %451, align 4
  store i32 %452, i32* %33, align 4
  %453 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %454 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %453, i32 0, i32 35
  %455 = getelementptr inbounds [33025 x i8], [33025 x i8]* %454, i64 0, i64 0
  %456 = load i32, i32* %28, align 4
  %457 = zext i32 %456 to i64
  %458 = getelementptr inbounds i8, i8* %455, i64 %457
  store i8* %458, i8** %34, align 8
  %459 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %460 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %459, i32 0, i32 35
  %461 = load i32, i32* %28, align 4
  %462 = load i32, i32* %29, align 4
  %463 = add i32 %461, %462
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds [33025 x i8], [33025 x i8]* %460, i64 0, i64 %464
  %466 = load i8, i8* %465, align 1
  store i8 %466, i8* %37, align 1
  %467 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %468 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %467, i32 0, i32 35
  %469 = load i32, i32* %28, align 4
  %470 = load i32, i32* %29, align 4
  %471 = add i32 %469, %470
  %472 = sub i32 %471, 1
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [33025 x i8], [33025 x i8]* %468, i64 0, i64 %473
  %475 = load i8, i8* %474, align 1
  store i8 %475, i8* %38, align 1
  %476 = load i32, i32* %24, align 4
  %477 = icmp ule i32 %476, 258
  br i1 %477, label %478, label %482

478:                                              ; preds = %429
  %479 = load i32, i32* %24, align 4
  %480 = load i32, i32* %29, align 4
  %481 = icmp ule i32 %479, %480
  br i1 %481, label %483, label %484

482:                                              ; preds = %429
  call void @__assert_fail(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1487, i8* noundef getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.tdefl_find_match, i64 0, i64 0)) #8
  unreachable

483:                                              ; preds = %478
  br label %700

484:                                              ; preds = %478
  br label %485

485:                                              ; preds = %699, %484
  br label %486

486:                                              ; preds = %638, %485
  %487 = load i32, i32* %33, align 4
  %488 = add i32 %487, -1
  store i32 %488, i32* %33, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %486
  br label %700

491:                                              ; preds = %486
  %492 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %493 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %492, i32 0, i32 40
  %494 = load i32, i32* %30, align 4
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds [32768 x i16], [32768 x i16]* %493, i64 0, i64 %495
  %497 = load i16, i16* %496, align 2
  %498 = zext i16 %497 to i32
  store i32 %498, i32* %31, align 4
  %499 = load i32, i32* %31, align 4
  %500 = icmp ne i32 %499, 0
  br i1 %500, label %501, label %509

501:                                              ; preds = %491
  %502 = load i32, i32* %22, align 4
  %503 = load i32, i32* %31, align 4
  %504 = sub i32 %502, %503
  %505 = trunc i32 %504 to i16
  %506 = zext i16 %505 to i32
  store i32 %506, i32* %27, align 4
  %507 = load i32, i32* %23, align 4
  %508 = icmp ugt i32 %506, %507
  br i1 %508, label %509, label %510

509:                                              ; preds = %501, %491
  br label %700

510:                                              ; preds = %501
  %511 = load i32, i32* %31, align 4
  %512 = and i32 %511, 32767
  store i32 %512, i32* %30, align 4
  %513 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %514 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %513, i32 0, i32 35
  %515 = load i32, i32* %30, align 4
  %516 = load i32, i32* %29, align 4
  %517 = add i32 %515, %516
  %518 = zext i32 %517 to i64
  %519 = getelementptr inbounds [33025 x i8], [33025 x i8]* %514, i64 0, i64 %518
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = load i8, i8* %37, align 1
  %523 = zext i8 %522 to i32
  %524 = icmp eq i32 %521, %523
  br i1 %524, label %525, label %540

525:                                              ; preds = %510
  %526 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %527 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %526, i32 0, i32 35
  %528 = load i32, i32* %30, align 4
  %529 = load i32, i32* %29, align 4
  %530 = add i32 %528, %529
  %531 = sub i32 %530, 1
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds [33025 x i8], [33025 x i8]* %527, i64 0, i64 %532
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i32
  %536 = load i8, i8* %38, align 1
  %537 = zext i8 %536 to i32
  %538 = icmp eq i32 %535, %537
  br i1 %538, label %539, label %540

539:                                              ; preds = %525
  br label %639

540:                                              ; preds = %525, %510
  %541 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %542 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %541, i32 0, i32 40
  %543 = load i32, i32* %30, align 4
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds [32768 x i16], [32768 x i16]* %542, i64 0, i64 %544
  %546 = load i16, i16* %545, align 2
  %547 = zext i16 %546 to i32
  store i32 %547, i32* %31, align 4
  %548 = load i32, i32* %31, align 4
  %549 = icmp ne i32 %548, 0
  br i1 %549, label %550, label %558

550:                                              ; preds = %540
  %551 = load i32, i32* %22, align 4
  %552 = load i32, i32* %31, align 4
  %553 = sub i32 %551, %552
  %554 = trunc i32 %553 to i16
  %555 = zext i16 %554 to i32
  store i32 %555, i32* %27, align 4
  %556 = load i32, i32* %23, align 4
  %557 = icmp ugt i32 %555, %556
  br i1 %557, label %558, label %559

558:                                              ; preds = %550, %540
  br label %700

559:                                              ; preds = %550
  %560 = load i32, i32* %31, align 4
  %561 = and i32 %560, 32767
  store i32 %561, i32* %30, align 4
  %562 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %563 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %562, i32 0, i32 35
  %564 = load i32, i32* %30, align 4
  %565 = load i32, i32* %29, align 4
  %566 = add i32 %564, %565
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds [33025 x i8], [33025 x i8]* %563, i64 0, i64 %567
  %569 = load i8, i8* %568, align 1
  %570 = zext i8 %569 to i32
  %571 = load i8, i8* %37, align 1
  %572 = zext i8 %571 to i32
  %573 = icmp eq i32 %570, %572
  br i1 %573, label %574, label %589

574:                                              ; preds = %559
  %575 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %576 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %575, i32 0, i32 35
  %577 = load i32, i32* %30, align 4
  %578 = load i32, i32* %29, align 4
  %579 = add i32 %577, %578
  %580 = sub i32 %579, 1
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds [33025 x i8], [33025 x i8]* %576, i64 0, i64 %581
  %583 = load i8, i8* %582, align 1
  %584 = zext i8 %583 to i32
  %585 = load i8, i8* %38, align 1
  %586 = zext i8 %585 to i32
  %587 = icmp eq i32 %584, %586
  br i1 %587, label %588, label %589

588:                                              ; preds = %574
  br label %639

589:                                              ; preds = %574, %559
  %590 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %591 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %590, i32 0, i32 40
  %592 = load i32, i32* %30, align 4
  %593 = zext i32 %592 to i64
  %594 = getelementptr inbounds [32768 x i16], [32768 x i16]* %591, i64 0, i64 %593
  %595 = load i16, i16* %594, align 2
  %596 = zext i16 %595 to i32
  store i32 %596, i32* %31, align 4
  %597 = load i32, i32* %31, align 4
  %598 = icmp ne i32 %597, 0
  br i1 %598, label %599, label %607

599:                                              ; preds = %589
  %600 = load i32, i32* %22, align 4
  %601 = load i32, i32* %31, align 4
  %602 = sub i32 %600, %601
  %603 = trunc i32 %602 to i16
  %604 = zext i16 %603 to i32
  store i32 %604, i32* %27, align 4
  %605 = load i32, i32* %23, align 4
  %606 = icmp ugt i32 %604, %605
  br i1 %606, label %607, label %608

607:                                              ; preds = %599, %589
  br label %700

608:                                              ; preds = %599
  %609 = load i32, i32* %31, align 4
  %610 = and i32 %609, 32767
  store i32 %610, i32* %30, align 4
  %611 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %612 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %611, i32 0, i32 35
  %613 = load i32, i32* %30, align 4
  %614 = load i32, i32* %29, align 4
  %615 = add i32 %613, %614
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [33025 x i8], [33025 x i8]* %612, i64 0, i64 %616
  %618 = load i8, i8* %617, align 1
  %619 = zext i8 %618 to i32
  %620 = load i8, i8* %37, align 1
  %621 = zext i8 %620 to i32
  %622 = icmp eq i32 %619, %621
  br i1 %622, label %623, label %638

623:                                              ; preds = %608
  %624 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %625 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %624, i32 0, i32 35
  %626 = load i32, i32* %30, align 4
  %627 = load i32, i32* %29, align 4
  %628 = add i32 %626, %627
  %629 = sub i32 %628, 1
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [33025 x i8], [33025 x i8]* %625, i64 0, i64 %630
  %632 = load i8, i8* %631, align 1
  %633 = zext i8 %632 to i32
  %634 = load i8, i8* %38, align 1
  %635 = zext i8 %634 to i32
  %636 = icmp eq i32 %633, %635
  br i1 %636, label %637, label %638

637:                                              ; preds = %623
  br label %639

638:                                              ; preds = %623, %608
  br label %486

639:                                              ; preds = %637, %588, %539
  %640 = load i32, i32* %27, align 4
  %641 = icmp ne i32 %640, 0
  br i1 %641, label %643, label %642

642:                                              ; preds = %639
  br label %700

643:                                              ; preds = %639
  %644 = load i8*, i8** %34, align 8
  store i8* %644, i8** %35, align 8
  %645 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %646 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %645, i32 0, i32 35
  %647 = getelementptr inbounds [33025 x i8], [33025 x i8]* %646, i64 0, i64 0
  %648 = load i32, i32* %30, align 4
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds i8, i8* %647, i64 %649
  store i8* %650, i8** %36, align 8
  store i32 0, i32* %32, align 4
  br label %651

651:                                              ; preds = %666, %643
  %652 = load i32, i32* %32, align 4
  %653 = load i32, i32* %24, align 4
  %654 = icmp ult i32 %652, %653
  br i1 %654, label %655, label %669

655:                                              ; preds = %651
  %656 = load i8*, i8** %35, align 8
  %657 = getelementptr inbounds i8, i8* %656, i32 1
  store i8* %657, i8** %35, align 8
  %658 = load i8, i8* %656, align 1
  %659 = zext i8 %658 to i32
  %660 = load i8*, i8** %36, align 8
  %661 = getelementptr inbounds i8, i8* %660, i32 1
  store i8* %661, i8** %36, align 8
  %662 = load i8, i8* %660, align 1
  %663 = zext i8 %662 to i32
  %664 = icmp ne i32 %659, %663
  br i1 %664, label %665, label %666

665:                                              ; preds = %655
  br label %669

666:                                              ; preds = %655
  %667 = load i32, i32* %32, align 4
  %668 = add i32 %667, 1
  store i32 %668, i32* %32, align 4
  br label %651, !llvm.loop !85

669:                                              ; preds = %665, %651
  %670 = load i32, i32* %32, align 4
  %671 = load i32, i32* %29, align 4
  %672 = icmp ugt i32 %670, %671
  br i1 %672, label %673, label %699

673:                                              ; preds = %669
  %674 = load i32, i32* %27, align 4
  %675 = load i32*, i32** %25, align 8
  store i32 %674, i32* %675, align 4
  %676 = load i32, i32* %32, align 4
  store i32 %676, i32* %29, align 4
  %677 = load i32*, i32** %26, align 8
  store i32 %676, i32* %677, align 4
  %678 = load i32, i32* %24, align 4
  %679 = icmp eq i32 %676, %678
  br i1 %679, label %680, label %681

680:                                              ; preds = %673
  br label %700

681:                                              ; preds = %673
  %682 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %683 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %682, i32 0, i32 35
  %684 = load i32, i32* %28, align 4
  %685 = load i32, i32* %29, align 4
  %686 = add i32 %684, %685
  %687 = zext i32 %686 to i64
  %688 = getelementptr inbounds [33025 x i8], [33025 x i8]* %683, i64 0, i64 %687
  %689 = load i8, i8* %688, align 1
  store i8 %689, i8* %37, align 1
  %690 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %691 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %690, i32 0, i32 35
  %692 = load i32, i32* %28, align 4
  %693 = load i32, i32* %29, align 4
  %694 = add i32 %692, %693
  %695 = sub i32 %694, 1
  %696 = zext i32 %695 to i64
  %697 = getelementptr inbounds [33025 x i8], [33025 x i8]* %691, i64 0, i64 %696
  %698 = load i8, i8* %697, align 1
  store i8 %698, i8* %38, align 1
  br label %699

699:                                              ; preds = %681, %669
  br label %485

700:                                              ; preds = %483, %490, %509, %558, %607, %642, %680
  br label %701

701:                                              ; preds = %700, %428
  %702 = load i32, i32* %46, align 4
  %703 = icmp eq i32 %702, 3
  br i1 %703, label %704, label %707

704:                                              ; preds = %701
  %705 = load i32, i32* %45, align 4
  %706 = icmp uge i32 %705, 8192
  br i1 %706, label %720, label %707

707:                                              ; preds = %704, %701
  %708 = load i32, i32* %47, align 4
  %709 = load i32, i32* %45, align 4
  %710 = icmp eq i32 %708, %709
  br i1 %710, label %720, label %711

711:                                              ; preds = %707
  %712 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %713 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %712, i32 0, i32 2
  %714 = load i32, i32* %713, align 8
  %715 = and i32 %714, 131072
  %716 = icmp ne i32 %715, 0
  br i1 %716, label %717, label %721

717:                                              ; preds = %711
  %718 = load i32, i32* %46, align 4
  %719 = icmp ule i32 %718, 5
  br i1 %719, label %720, label %721

720:                                              ; preds = %717, %707, %704
  store i32 0, i32* %46, align 4
  store i32 0, i32* %45, align 4
  br label %721

721:                                              ; preds = %720, %717, %711
  %722 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %723 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %722, i32 0, i32 19
  %724 = load i32, i32* %723, align 8
  %725 = icmp ne i32 %724, 0
  br i1 %725, label %726, label %1035

726:                                              ; preds = %721
  %727 = load i32, i32* %46, align 4
  %728 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %729 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %728, i32 0, i32 19
  %730 = load i32, i32* %729, align 8
  %731 = icmp ugt i32 %727, %730
  br i1 %731, label %732, label %913

732:                                              ; preds = %726
  %733 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %734 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %735 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %734, i32 0, i32 20
  %736 = load i32, i32* %735, align 4
  %737 = trunc i32 %736 to i8
  store %struct.tdefl_compressor* %733, %struct.tdefl_compressor** %17, align 8
  store i8 %737, i8* %18, align 1
  %738 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %739 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %738, i32 0, i32 14
  %740 = load i32, i32* %739, align 4
  %741 = add i32 %740, 1
  store i32 %741, i32* %739, align 4
  %742 = load i8, i8* %18, align 1
  %743 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %744 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %743, i32 0, i32 9
  %745 = load i8*, i8** %744, align 8
  %746 = getelementptr inbounds i8, i8* %745, i32 1
  store i8* %746, i8** %744, align 8
  store i8 %742, i8* %745, align 1
  %747 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %748 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %747, i32 0, i32 10
  %749 = load i8*, i8** %748, align 8
  %750 = load i8, i8* %749, align 1
  %751 = zext i8 %750 to i32
  %752 = ashr i32 %751, 1
  %753 = trunc i32 %752 to i8
  %754 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %755 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %754, i32 0, i32 10
  %756 = load i8*, i8** %755, align 8
  store i8 %753, i8* %756, align 1
  %757 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %758 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %757, i32 0, i32 13
  %759 = load i32, i32* %758, align 8
  %760 = add i32 %759, -1
  store i32 %760, i32* %758, align 8
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %771

762:                                              ; preds = %732
  %763 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %764 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %763, i32 0, i32 13
  store i32 8, i32* %764, align 8
  %765 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %766 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %765, i32 0, i32 9
  %767 = load i8*, i8** %766, align 8
  %768 = getelementptr inbounds i8, i8* %767, i32 1
  store i8* %768, i8** %766, align 8
  %769 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %770 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %769, i32 0, i32 10
  store i8* %767, i8** %770, align 8
  br label %771

771:                                              ; preds = %732, %762
  %772 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %17, align 8
  %773 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %772, i32 0, i32 36
  %774 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %773, i64 0, i64 0
  %775 = load i8, i8* %18, align 1
  %776 = zext i8 %775 to i64
  %777 = getelementptr inbounds [288 x i16], [288 x i16]* %774, i64 0, i64 %776
  %778 = load i16, i16* %777, align 2
  %779 = add i16 %778, 1
  store i16 %779, i16* %777, align 2
  %780 = load i32, i32* %46, align 4
  %781 = icmp uge i32 %780, 128
  br i1 %781, label %782, label %896

782:                                              ; preds = %771
  %783 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %784 = load i32, i32* %46, align 4
  %785 = load i32, i32* %45, align 4
  store %struct.tdefl_compressor* %783, %struct.tdefl_compressor** %2, align 8
  store i32 %784, i32* %3, align 4
  store i32 %785, i32* %4, align 4
  %786 = load i32, i32* %3, align 4
  %787 = icmp uge i32 %786, 3
  br i1 %787, label %788, label %842

788:                                              ; preds = %782
  %789 = load i32, i32* %4, align 4
  %790 = icmp uge i32 %789, 1
  br i1 %790, label %791, label %842

791:                                              ; preds = %788
  %792 = load i32, i32* %4, align 4
  %793 = icmp ule i32 %792, 32768
  br i1 %793, label %794, label %842

794:                                              ; preds = %791
  %795 = load i32, i32* %3, align 4
  %796 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %797 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %796, i32 0, i32 14
  %798 = load i32, i32* %797, align 4
  %799 = add i32 %798, %795
  store i32 %799, i32* %797, align 4
  %800 = load i32, i32* %3, align 4
  %801 = sub i32 %800, 3
  %802 = trunc i32 %801 to i8
  %803 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %804 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %803, i32 0, i32 9
  %805 = load i8*, i8** %804, align 8
  store i8 %802, i8* %805, align 1
  %806 = load i32, i32* %4, align 4
  %807 = sub i32 %806, 1
  store i32 %807, i32* %4, align 4
  %808 = load i32, i32* %4, align 4
  %809 = and i32 %808, 255
  %810 = trunc i32 %809 to i8
  %811 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %812 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %811, i32 0, i32 9
  %813 = load i8*, i8** %812, align 8
  %814 = getelementptr inbounds i8, i8* %813, i64 1
  store i8 %810, i8* %814, align 1
  %815 = load i32, i32* %4, align 4
  %816 = lshr i32 %815, 8
  %817 = trunc i32 %816 to i8
  %818 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %819 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %818, i32 0, i32 9
  %820 = load i8*, i8** %819, align 8
  %821 = getelementptr inbounds i8, i8* %820, i64 2
  store i8 %817, i8* %821, align 1
  %822 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %823 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %822, i32 0, i32 9
  %824 = load i8*, i8** %823, align 8
  %825 = getelementptr inbounds i8, i8* %824, i64 3
  store i8* %825, i8** %823, align 8
  %826 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %827 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %826, i32 0, i32 10
  %828 = load i8*, i8** %827, align 8
  %829 = load i8, i8* %828, align 1
  %830 = zext i8 %829 to i32
  %831 = ashr i32 %830, 1
  %832 = or i32 %831, 128
  %833 = trunc i32 %832 to i8
  %834 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %835 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %834, i32 0, i32 10
  %836 = load i8*, i8** %835, align 8
  store i8 %833, i8* %836, align 1
  %837 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %838 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %837, i32 0, i32 13
  %839 = load i32, i32* %838, align 8
  %840 = add i32 %839, -1
  store i32 %840, i32* %838, align 8
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %843, label %852

842:                                              ; preds = %791, %788, %782
  call void @__assert_fail(i8* noundef getelementptr inbounds ([94 x i8], [94 x i8]* @.str.61, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1728, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.tdefl_record_match, i64 0, i64 0)) #8
  unreachable

843:                                              ; preds = %794
  %844 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %845 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %844, i32 0, i32 13
  store i32 8, i32* %845, align 8
  %846 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %847 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %846, i32 0, i32 9
  %848 = load i8*, i8** %847, align 8
  %849 = getelementptr inbounds i8, i8* %848, i32 1
  store i8* %849, i8** %847, align 8
  %850 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %851 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %850, i32 0, i32 10
  store i8* %848, i8** %851, align 8
  br label %852

852:                                              ; preds = %843, %794
  %853 = load i32, i32* %4, align 4
  %854 = and i32 %853, 511
  %855 = zext i32 %854 to i64
  %856 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %855
  %857 = load i8, i8* %856, align 1
  %858 = zext i8 %857 to i32
  store i32 %858, i32* %5, align 4
  %859 = load i32, i32* %4, align 4
  %860 = lshr i32 %859, 8
  %861 = and i32 %860, 127
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %862
  %864 = load i8, i8* %863, align 1
  %865 = zext i8 %864 to i32
  store i32 %865, i32* %6, align 4
  %866 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %867 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %866, i32 0, i32 36
  %868 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %867, i64 0, i64 1
  %869 = load i32, i32* %4, align 4
  %870 = icmp ult i32 %869, 512
  br i1 %870, label %871, label %873

871:                                              ; preds = %852
  %872 = load i32, i32* %5, align 4
  br label %875

873:                                              ; preds = %852
  %874 = load i32, i32* %6, align 4
  br label %875

875:                                              ; preds = %871, %873
  %876 = phi i32 [ %872, %871 ], [ %874, %873 ]
  %877 = zext i32 %876 to i64
  %878 = getelementptr inbounds [288 x i16], [288 x i16]* %868, i64 0, i64 %877
  %879 = load i16, i16* %878, align 2
  %880 = add i16 %879, 1
  store i16 %880, i16* %878, align 2
  %881 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %882 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %881, i32 0, i32 36
  %883 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %882, i64 0, i64 0
  %884 = load i32, i32* %3, align 4
  %885 = sub i32 %884, 3
  %886 = zext i32 %885 to i64
  %887 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %886
  %888 = load i16, i16* %887, align 2
  %889 = zext i16 %888 to i64
  %890 = getelementptr inbounds [288 x i16], [288 x i16]* %883, i64 0, i64 %889
  %891 = load i16, i16* %890, align 2
  %892 = add i16 %891, 1
  store i16 %892, i16* %890, align 2
  %893 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %894 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %893, i32 0, i32 19
  store i32 0, i32* %894, align 8
  %895 = load i32, i32* %46, align 4
  store i32 %895, i32* %44, align 4
  br label %912

896:                                              ; preds = %771
  %897 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %898 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %897, i32 0, i32 35
  %899 = load i32, i32* %47, align 4
  %900 = zext i32 %899 to i64
  %901 = getelementptr inbounds [33025 x i8], [33025 x i8]* %898, i64 0, i64 %900
  %902 = load i8, i8* %901, align 1
  %903 = zext i8 %902 to i32
  %904 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %905 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %904, i32 0, i32 20
  store i32 %903, i32* %905, align 4
  %906 = load i32, i32* %45, align 4
  %907 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %908 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %907, i32 0, i32 18
  store i32 %906, i32* %908, align 4
  %909 = load i32, i32* %46, align 4
  %910 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %911 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %910, i32 0, i32 19
  store i32 %909, i32* %911, align 8
  br label %912

912:                                              ; preds = %896, %875
  br label %1034

913:                                              ; preds = %726
  %914 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %915 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %916 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %915, i32 0, i32 19
  %917 = load i32, i32* %916, align 8
  %918 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %919 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %918, i32 0, i32 18
  %920 = load i32, i32* %919, align 4
  store %struct.tdefl_compressor* %914, %struct.tdefl_compressor** %7, align 8
  store i32 %917, i32* %8, align 4
  store i32 %920, i32* %9, align 4
  %921 = load i32, i32* %8, align 4
  %922 = icmp uge i32 %921, 3
  br i1 %922, label %923, label %977

923:                                              ; preds = %913
  %924 = load i32, i32* %9, align 4
  %925 = icmp uge i32 %924, 1
  br i1 %925, label %926, label %977

926:                                              ; preds = %923
  %927 = load i32, i32* %9, align 4
  %928 = icmp ule i32 %927, 32768
  br i1 %928, label %929, label %977

929:                                              ; preds = %926
  %930 = load i32, i32* %8, align 4
  %931 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %932 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %931, i32 0, i32 14
  %933 = load i32, i32* %932, align 4
  %934 = add i32 %933, %930
  store i32 %934, i32* %932, align 4
  %935 = load i32, i32* %8, align 4
  %936 = sub i32 %935, 3
  %937 = trunc i32 %936 to i8
  %938 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %939 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %938, i32 0, i32 9
  %940 = load i8*, i8** %939, align 8
  store i8 %937, i8* %940, align 1
  %941 = load i32, i32* %9, align 4
  %942 = sub i32 %941, 1
  store i32 %942, i32* %9, align 4
  %943 = load i32, i32* %9, align 4
  %944 = and i32 %943, 255
  %945 = trunc i32 %944 to i8
  %946 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %947 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %946, i32 0, i32 9
  %948 = load i8*, i8** %947, align 8
  %949 = getelementptr inbounds i8, i8* %948, i64 1
  store i8 %945, i8* %949, align 1
  %950 = load i32, i32* %9, align 4
  %951 = lshr i32 %950, 8
  %952 = trunc i32 %951 to i8
  %953 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %954 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %953, i32 0, i32 9
  %955 = load i8*, i8** %954, align 8
  %956 = getelementptr inbounds i8, i8* %955, i64 2
  store i8 %952, i8* %956, align 1
  %957 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %958 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %957, i32 0, i32 9
  %959 = load i8*, i8** %958, align 8
  %960 = getelementptr inbounds i8, i8* %959, i64 3
  store i8* %960, i8** %958, align 8
  %961 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %962 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %961, i32 0, i32 10
  %963 = load i8*, i8** %962, align 8
  %964 = load i8, i8* %963, align 1
  %965 = zext i8 %964 to i32
  %966 = ashr i32 %965, 1
  %967 = or i32 %966, 128
  %968 = trunc i32 %967 to i8
  %969 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %970 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %969, i32 0, i32 10
  %971 = load i8*, i8** %970, align 8
  store i8 %968, i8* %971, align 1
  %972 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %973 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %972, i32 0, i32 13
  %974 = load i32, i32* %973, align 8
  %975 = add i32 %974, -1
  store i32 %975, i32* %973, align 8
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %978, label %987

977:                                              ; preds = %926, %923, %913
  call void @__assert_fail(i8* noundef getelementptr inbounds ([94 x i8], [94 x i8]* @.str.61, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1728, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.tdefl_record_match, i64 0, i64 0)) #8
  unreachable

978:                                              ; preds = %929
  %979 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %980 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %979, i32 0, i32 13
  store i32 8, i32* %980, align 8
  %981 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %982 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %981, i32 0, i32 9
  %983 = load i8*, i8** %982, align 8
  %984 = getelementptr inbounds i8, i8* %983, i32 1
  store i8* %984, i8** %982, align 8
  %985 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %986 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %985, i32 0, i32 10
  store i8* %983, i8** %986, align 8
  br label %987

987:                                              ; preds = %978, %929
  %988 = load i32, i32* %9, align 4
  %989 = and i32 %988, 511
  %990 = zext i32 %989 to i64
  %991 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %990
  %992 = load i8, i8* %991, align 1
  %993 = zext i8 %992 to i32
  store i32 %993, i32* %10, align 4
  %994 = load i32, i32* %9, align 4
  %995 = lshr i32 %994, 8
  %996 = and i32 %995, 127
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %997
  %999 = load i8, i8* %998, align 1
  %1000 = zext i8 %999 to i32
  store i32 %1000, i32* %11, align 4
  %1001 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %1002 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1001, i32 0, i32 36
  %1003 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1002, i64 0, i64 1
  %1004 = load i32, i32* %9, align 4
  %1005 = icmp ult i32 %1004, 512
  br i1 %1005, label %1006, label %1008

1006:                                             ; preds = %987
  %1007 = load i32, i32* %10, align 4
  br label %1010

1008:                                             ; preds = %987
  %1009 = load i32, i32* %11, align 4
  br label %1010

1010:                                             ; preds = %1006, %1008
  %1011 = phi i32 [ %1007, %1006 ], [ %1009, %1008 ]
  %1012 = zext i32 %1011 to i64
  %1013 = getelementptr inbounds [288 x i16], [288 x i16]* %1003, i64 0, i64 %1012
  %1014 = load i16, i16* %1013, align 2
  %1015 = add i16 %1014, 1
  store i16 %1015, i16* %1013, align 2
  %1016 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %7, align 8
  %1017 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1016, i32 0, i32 36
  %1018 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1017, i64 0, i64 0
  %1019 = load i32, i32* %8, align 4
  %1020 = sub i32 %1019, 3
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %1021
  %1023 = load i16, i16* %1022, align 2
  %1024 = zext i16 %1023 to i64
  %1025 = getelementptr inbounds [288 x i16], [288 x i16]* %1018, i64 0, i64 %1024
  %1026 = load i16, i16* %1025, align 2
  %1027 = add i16 %1026, 1
  store i16 %1027, i16* %1025, align 2
  %1028 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1029 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1028, i32 0, i32 19
  %1030 = load i32, i32* %1029, align 8
  %1031 = sub i32 %1030, 1
  store i32 %1031, i32* %44, align 4
  %1032 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1033 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1032, i32 0, i32 19
  store i32 0, i32* %1033, align 8
  br label %1034

1034:                                             ; preds = %1010, %912
  br label %1246

1035:                                             ; preds = %721
  %1036 = load i32, i32* %45, align 4
  %1037 = icmp ne i32 %1036, 0
  br i1 %1037, label %1095, label %1038

1038:                                             ; preds = %1035
  %1039 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1040 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1041 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1040, i32 0, i32 35
  %1042 = load i32, i32* %47, align 4
  %1043 = zext i32 %1042 to i64
  %1044 = icmp ult i64 %1043, 33024
  br i1 %1044, label %1045, label %1048

1045:                                             ; preds = %1038
  %1046 = load i32, i32* %47, align 4
  %1047 = zext i32 %1046 to i64
  br label %1049

1048:                                             ; preds = %1038
  br label %1049

1049:                                             ; preds = %1048, %1045
  %1050 = phi i64 [ %1047, %1045 ], [ 33024, %1048 ]
  %1051 = getelementptr inbounds [33025 x i8], [33025 x i8]* %1041, i64 0, i64 %1050
  %1052 = load i8, i8* %1051, align 1
  store %struct.tdefl_compressor* %1039, %struct.tdefl_compressor** %19, align 8
  store i8 %1052, i8* %20, align 1
  %1053 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1054 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1053, i32 0, i32 14
  %1055 = load i32, i32* %1054, align 4
  %1056 = add i32 %1055, 1
  store i32 %1056, i32* %1054, align 4
  %1057 = load i8, i8* %20, align 1
  %1058 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1059 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1058, i32 0, i32 9
  %1060 = load i8*, i8** %1059, align 8
  %1061 = getelementptr inbounds i8, i8* %1060, i32 1
  store i8* %1061, i8** %1059, align 8
  store i8 %1057, i8* %1060, align 1
  %1062 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1063 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1062, i32 0, i32 10
  %1064 = load i8*, i8** %1063, align 8
  %1065 = load i8, i8* %1064, align 1
  %1066 = zext i8 %1065 to i32
  %1067 = ashr i32 %1066, 1
  %1068 = trunc i32 %1067 to i8
  %1069 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1070 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1069, i32 0, i32 10
  %1071 = load i8*, i8** %1070, align 8
  store i8 %1068, i8* %1071, align 1
  %1072 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1073 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1072, i32 0, i32 13
  %1074 = load i32, i32* %1073, align 8
  %1075 = add i32 %1074, -1
  store i32 %1075, i32* %1073, align 8
  %1076 = icmp eq i32 %1075, 0
  br i1 %1076, label %1077, label %1086

1077:                                             ; preds = %1049
  %1078 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1079 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1078, i32 0, i32 13
  store i32 8, i32* %1079, align 8
  %1080 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1081 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1080, i32 0, i32 9
  %1082 = load i8*, i8** %1081, align 8
  %1083 = getelementptr inbounds i8, i8* %1082, i32 1
  store i8* %1083, i8** %1081, align 8
  %1084 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1085 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1084, i32 0, i32 10
  store i8* %1082, i8** %1085, align 8
  br label %1086

1086:                                             ; preds = %1049, %1077
  %1087 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %19, align 8
  %1088 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1087, i32 0, i32 36
  %1089 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1088, i64 0, i64 0
  %1090 = load i8, i8* %20, align 1
  %1091 = zext i8 %1090 to i64
  %1092 = getelementptr inbounds [288 x i16], [288 x i16]* %1089, i64 0, i64 %1091
  %1093 = load i16, i16* %1092, align 2
  %1094 = add i16 %1093, 1
  store i16 %1094, i16* %1092, align 2
  br label %1245

1095:                                             ; preds = %1035
  %1096 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1097 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1096, i32 0, i32 4
  %1098 = load i32, i32* %1097, align 4
  %1099 = icmp ne i32 %1098, 0
  br i1 %1099, label %1109, label %1100

1100:                                             ; preds = %1095
  %1101 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1102 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1101, i32 0, i32 2
  %1103 = load i32, i32* %1102, align 8
  %1104 = and i32 %1103, 65536
  %1105 = icmp ne i32 %1104, 0
  br i1 %1105, label %1109, label %1106

1106:                                             ; preds = %1100
  %1107 = load i32, i32* %46, align 4
  %1108 = icmp uge i32 %1107, 128
  br i1 %1108, label %1109, label %1221

1109:                                             ; preds = %1106, %1100, %1095
  %1110 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1111 = load i32, i32* %46, align 4
  %1112 = load i32, i32* %45, align 4
  store %struct.tdefl_compressor* %1110, %struct.tdefl_compressor** %12, align 8
  store i32 %1111, i32* %13, align 4
  store i32 %1112, i32* %14, align 4
  %1113 = load i32, i32* %13, align 4
  %1114 = icmp uge i32 %1113, 3
  br i1 %1114, label %1115, label %1169

1115:                                             ; preds = %1109
  %1116 = load i32, i32* %14, align 4
  %1117 = icmp uge i32 %1116, 1
  br i1 %1117, label %1118, label %1169

1118:                                             ; preds = %1115
  %1119 = load i32, i32* %14, align 4
  %1120 = icmp ule i32 %1119, 32768
  br i1 %1120, label %1121, label %1169

1121:                                             ; preds = %1118
  %1122 = load i32, i32* %13, align 4
  %1123 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1124 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1123, i32 0, i32 14
  %1125 = load i32, i32* %1124, align 4
  %1126 = add i32 %1125, %1122
  store i32 %1126, i32* %1124, align 4
  %1127 = load i32, i32* %13, align 4
  %1128 = sub i32 %1127, 3
  %1129 = trunc i32 %1128 to i8
  %1130 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1131 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1130, i32 0, i32 9
  %1132 = load i8*, i8** %1131, align 8
  store i8 %1129, i8* %1132, align 1
  %1133 = load i32, i32* %14, align 4
  %1134 = sub i32 %1133, 1
  store i32 %1134, i32* %14, align 4
  %1135 = load i32, i32* %14, align 4
  %1136 = and i32 %1135, 255
  %1137 = trunc i32 %1136 to i8
  %1138 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1139 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1138, i32 0, i32 9
  %1140 = load i8*, i8** %1139, align 8
  %1141 = getelementptr inbounds i8, i8* %1140, i64 1
  store i8 %1137, i8* %1141, align 1
  %1142 = load i32, i32* %14, align 4
  %1143 = lshr i32 %1142, 8
  %1144 = trunc i32 %1143 to i8
  %1145 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1146 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1145, i32 0, i32 9
  %1147 = load i8*, i8** %1146, align 8
  %1148 = getelementptr inbounds i8, i8* %1147, i64 2
  store i8 %1144, i8* %1148, align 1
  %1149 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1150 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1149, i32 0, i32 9
  %1151 = load i8*, i8** %1150, align 8
  %1152 = getelementptr inbounds i8, i8* %1151, i64 3
  store i8* %1152, i8** %1150, align 8
  %1153 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1154 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1153, i32 0, i32 10
  %1155 = load i8*, i8** %1154, align 8
  %1156 = load i8, i8* %1155, align 1
  %1157 = zext i8 %1156 to i32
  %1158 = ashr i32 %1157, 1
  %1159 = or i32 %1158, 128
  %1160 = trunc i32 %1159 to i8
  %1161 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1162 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1161, i32 0, i32 10
  %1163 = load i8*, i8** %1162, align 8
  store i8 %1160, i8* %1163, align 1
  %1164 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1165 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1164, i32 0, i32 13
  %1166 = load i32, i32* %1165, align 8
  %1167 = add i32 %1166, -1
  store i32 %1167, i32* %1165, align 8
  %1168 = icmp eq i32 %1167, 0
  br i1 %1168, label %1170, label %1179

1169:                                             ; preds = %1118, %1115, %1109
  call void @__assert_fail(i8* noundef getelementptr inbounds ([94 x i8], [94 x i8]* @.str.61, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1728, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.tdefl_record_match, i64 0, i64 0)) #8
  unreachable

1170:                                             ; preds = %1121
  %1171 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1172 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1171, i32 0, i32 13
  store i32 8, i32* %1172, align 8
  %1173 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1174 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1173, i32 0, i32 9
  %1175 = load i8*, i8** %1174, align 8
  %1176 = getelementptr inbounds i8, i8* %1175, i32 1
  store i8* %1176, i8** %1174, align 8
  %1177 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1178 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1177, i32 0, i32 10
  store i8* %1175, i8** %1178, align 8
  br label %1179

1179:                                             ; preds = %1170, %1121
  %1180 = load i32, i32* %14, align 4
  %1181 = and i32 %1180, 511
  %1182 = zext i32 %1181 to i64
  %1183 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %1182
  %1184 = load i8, i8* %1183, align 1
  %1185 = zext i8 %1184 to i32
  store i32 %1185, i32* %15, align 4
  %1186 = load i32, i32* %14, align 4
  %1187 = lshr i32 %1186, 8
  %1188 = and i32 %1187, 127
  %1189 = zext i32 %1188 to i64
  %1190 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %1189
  %1191 = load i8, i8* %1190, align 1
  %1192 = zext i8 %1191 to i32
  store i32 %1192, i32* %16, align 4
  %1193 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1194 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1193, i32 0, i32 36
  %1195 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1194, i64 0, i64 1
  %1196 = load i32, i32* %14, align 4
  %1197 = icmp ult i32 %1196, 512
  br i1 %1197, label %1198, label %1200

1198:                                             ; preds = %1179
  %1199 = load i32, i32* %15, align 4
  br label %1202

1200:                                             ; preds = %1179
  %1201 = load i32, i32* %16, align 4
  br label %1202

1202:                                             ; preds = %1198, %1200
  %1203 = phi i32 [ %1199, %1198 ], [ %1201, %1200 ]
  %1204 = zext i32 %1203 to i64
  %1205 = getelementptr inbounds [288 x i16], [288 x i16]* %1195, i64 0, i64 %1204
  %1206 = load i16, i16* %1205, align 2
  %1207 = add i16 %1206, 1
  store i16 %1207, i16* %1205, align 2
  %1208 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %1209 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1208, i32 0, i32 36
  %1210 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1209, i64 0, i64 0
  %1211 = load i32, i32* %13, align 4
  %1212 = sub i32 %1211, 3
  %1213 = zext i32 %1212 to i64
  %1214 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %1213
  %1215 = load i16, i16* %1214, align 2
  %1216 = zext i16 %1215 to i64
  %1217 = getelementptr inbounds [288 x i16], [288 x i16]* %1210, i64 0, i64 %1216
  %1218 = load i16, i16* %1217, align 2
  %1219 = add i16 %1218, 1
  store i16 %1219, i16* %1217, align 2
  %1220 = load i32, i32* %46, align 4
  store i32 %1220, i32* %44, align 4
  br label %1244

1221:                                             ; preds = %1106
  %1222 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1223 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1222, i32 0, i32 35
  %1224 = load i32, i32* %47, align 4
  %1225 = zext i32 %1224 to i64
  %1226 = icmp ult i64 %1225, 33024
  br i1 %1226, label %1227, label %1230

1227:                                             ; preds = %1221
  %1228 = load i32, i32* %47, align 4
  %1229 = zext i32 %1228 to i64
  br label %1231

1230:                                             ; preds = %1221
  br label %1231

1231:                                             ; preds = %1230, %1227
  %1232 = phi i64 [ %1229, %1227 ], [ 33024, %1230 ]
  %1233 = getelementptr inbounds [33025 x i8], [33025 x i8]* %1223, i64 0, i64 %1232
  %1234 = load i8, i8* %1233, align 1
  %1235 = zext i8 %1234 to i32
  %1236 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1237 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1236, i32 0, i32 20
  store i32 %1235, i32* %1237, align 4
  %1238 = load i32, i32* %45, align 4
  %1239 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1240 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1239, i32 0, i32 18
  store i32 %1238, i32* %1240, align 4
  %1241 = load i32, i32* %46, align 4
  %1242 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1243 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1242, i32 0, i32 19
  store i32 %1241, i32* %1243, align 8
  br label %1244

1244:                                             ; preds = %1231, %1202
  br label %1245

1245:                                             ; preds = %1244, %1086
  br label %1246

1246:                                             ; preds = %1245, %1034
  %1247 = load i32, i32* %44, align 4
  %1248 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1249 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1248, i32 0, i32 6
  %1250 = load i32, i32* %1249, align 4
  %1251 = add i32 %1250, %1247
  store i32 %1251, i32* %1249, align 4
  %1252 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1253 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1252, i32 0, i32 7
  %1254 = load i32, i32* %1253, align 8
  %1255 = load i32, i32* %44, align 4
  %1256 = icmp uge i32 %1254, %1255
  br i1 %1256, label %1257, label %1258

1257:                                             ; preds = %1246
  br label %1259

1258:                                             ; preds = %1246
  call void @__assert_fail(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.59, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1877, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_normal, i64 0, i64 0)) #8
  unreachable

1259:                                             ; preds = %1257
  %1260 = load i32, i32* %44, align 4
  %1261 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1262 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1261, i32 0, i32 7
  %1263 = load i32, i32* %1262, align 8
  %1264 = sub i32 %1263, %1260
  store i32 %1264, i32* %1262, align 8
  %1265 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1266 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1265, i32 0, i32 8
  %1267 = load i32, i32* %1266, align 4
  %1268 = load i32, i32* %44, align 4
  %1269 = add i32 %1267, %1268
  %1270 = icmp ult i32 %1269, 32768
  br i1 %1270, label %1271, label %1277

1271:                                             ; preds = %1259
  %1272 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1273 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1272, i32 0, i32 8
  %1274 = load i32, i32* %1273, align 4
  %1275 = load i32, i32* %44, align 4
  %1276 = add i32 %1274, %1275
  br label %1278

1277:                                             ; preds = %1259
  br label %1278

1278:                                             ; preds = %1277, %1271
  %1279 = phi i32 [ %1276, %1271 ], [ 32768, %1277 ]
  %1280 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1281 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1280, i32 0, i32 8
  store i32 %1279, i32* %1281, align 4
  %1282 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1283 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1282, i32 0, i32 9
  %1284 = load i8*, i8** %1283, align 8
  %1285 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1286 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1285, i32 0, i32 39
  %1287 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1286, i64 0, i64 65528
  %1288 = icmp ugt i8* %1284, %1287
  br i1 %1288, label %1317, label %1289

1289:                                             ; preds = %1278
  %1290 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1291 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1290, i32 0, i32 14
  %1292 = load i32, i32* %1291, align 4
  %1293 = icmp ugt i32 %1292, 31744
  br i1 %1293, label %1294, label %1333

1294:                                             ; preds = %1289
  %1295 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1296 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1295, i32 0, i32 9
  %1297 = load i8*, i8** %1296, align 8
  %1298 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1299 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1298, i32 0, i32 39
  %1300 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1299, i64 0, i64 0
  %1301 = ptrtoint i8* %1297 to i64
  %1302 = ptrtoint i8* %1300 to i64
  %1303 = sub i64 %1301, %1302
  %1304 = trunc i64 %1303 to i32
  %1305 = mul i32 %1304, 115
  %1306 = lshr i32 %1305, 7
  %1307 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1308 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1307, i32 0, i32 14
  %1309 = load i32, i32* %1308, align 4
  %1310 = icmp uge i32 %1306, %1309
  br i1 %1310, label %1317, label %1311

1311:                                             ; preds = %1294
  %1312 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1313 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1312, i32 0, i32 2
  %1314 = load i32, i32* %1313, align 8
  %1315 = and i32 %1314, 524288
  %1316 = icmp ne i32 %1315, 0
  br i1 %1316, label %1317, label %1333

1317:                                             ; preds = %1311, %1294, %1278
  %1318 = load i8*, i8** %41, align 8
  %1319 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1320 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1319, i32 0, i32 32
  store i8* %1318, i8** %1320, align 8
  %1321 = load i64, i64* %42, align 8
  %1322 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1323 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1322, i32 0, i32 33
  store i64 %1321, i64* %1323, align 8
  %1324 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1325 = call i32 @tdefl_flush_block(%struct.tdefl_compressor* noundef %1324, i32 noundef 0)
  store i32 %1325, i32* %59, align 4
  %1326 = icmp ne i32 %1325, 0
  br i1 %1326, label %1327, label %1332

1327:                                             ; preds = %1317
  %1328 = load i32, i32* %59, align 4
  %1329 = icmp slt i32 %1328, 0
  %1330 = zext i1 %1329 to i64
  %1331 = select i1 %1329, i32 0, i32 1
  store i32 %1331, i32* %39, align 4
  br label %1341

1332:                                             ; preds = %1317
  br label %1333

1333:                                             ; preds = %1332, %1311, %1289
  br label %69, !llvm.loop !86

1334:                                             ; preds = %357, %82
  %1335 = load i8*, i8** %41, align 8
  %1336 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1337 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1336, i32 0, i32 32
  store i8* %1335, i8** %1337, align 8
  %1338 = load i64, i64* %42, align 8
  %1339 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %40, align 8
  %1340 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1339, i32 0, i32 33
  store i64 %1338, i64* %1340, align 8
  store i32 1, i32* %39, align 4
  br label %1341

1341:                                             ; preds = %1334, %1327
  %1342 = load i32, i32* %39, align 4
  ret i32 %1342
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @tdefl_flush_block(%struct.tdefl_compressor* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.tdefl_compressor*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %9, align 4
  %49 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %50 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %49, i32 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 524288
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %2
  %55 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %56 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %55, i32 0, i32 6
  %57 = load i32, i32* %56, align 4
  %58 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %59 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %58, i32 0, i32 15
  %60 = load i32, i32* %59, align 8
  %61 = sub i32 %57, %60
  %62 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %63 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %62, i32 0, i32 8
  %64 = load i32, i32* %63, align 4
  %65 = icmp ule i32 %61, %64
  br label %66

66:                                               ; preds = %54, %2
  %67 = phi i1 [ false, %2 ], [ %65, %54 ]
  %68 = zext i1 %67 to i32
  store i32 %68, i32* %11, align 4
  %69 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %70 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %69, i32 0, i32 0
  %71 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %70, align 8
  %72 = icmp eq i32 (i8*, i32, i8*)* %71, null
  br i1 %72, label %73, label %91

73:                                               ; preds = %66
  %74 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %75 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %74, i32 0, i32 30
  %76 = load i64*, i64** %75, align 8
  %77 = load i64, i64* %76, align 8
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %78, i32 0, i32 34
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %77, %80
  %82 = icmp uge i64 %81, 85196
  br i1 %82, label %83, label %91

83:                                               ; preds = %73
  %84 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %85 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %84, i32 0, i32 28
  %86 = load i8*, i8** %85, align 8
  %87 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %87, i32 0, i32 34
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  br label %95

91:                                               ; preds = %73, %66
  %92 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %92, i32 0, i32 42
  %94 = getelementptr inbounds [85196 x i8], [85196 x i8]* %93, i64 0, i64 0
  br label %95

95:                                               ; preds = %91, %83
  %96 = phi i8* [ %90, %83 ], [ %94, %91 ]
  store i8* %96, i8** %12, align 8
  %97 = load i8*, i8** %12, align 8
  %98 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %98, i32 0, i32 11
  store i8* %97, i8** %99, align 8
  %100 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %101 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %100, i32 0, i32 11
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 85196
  %104 = getelementptr inbounds i8, i8* %103, i64 -16
  %105 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %106 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %105, i32 0, i32 12
  store i8* %104, i8** %106, align 8
  %107 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %108 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %107, i32 0, i32 22
  %109 = load i32, i32* %108, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %95
  br label %113

112:                                              ; preds = %95
  call void @__assert_fail(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1267, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

113:                                              ; preds = %111
  %114 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %115 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %114, i32 0, i32 21
  store i32 0, i32* %115, align 8
  %116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %116, i32 0, i32 22
  store i32 0, i32* %117, align 4
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %118, i32 0, i32 10
  %120 = load i8*, i8** %119, align 8
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %124 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %123, i32 0, i32 13
  %125 = load i32, i32* %124, align 8
  %126 = ashr i32 %122, %125
  %127 = trunc i32 %126 to i8
  %128 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %129 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %128, i32 0, i32 10
  %130 = load i8*, i8** %129, align 8
  store i8 %127, i8* %130, align 1
  %131 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %132 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %131, i32 0, i32 13
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 8
  %135 = zext i1 %134 to i32
  %136 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %137 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %136, i32 0, i32 9
  %138 = load i8*, i8** %137, align 8
  %139 = sext i32 %135 to i64
  %140 = sub i64 0, %139
  %141 = getelementptr inbounds i8, i8* %138, i64 %140
  store i8* %141, i8** %137, align 8
  %142 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %143 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %142, i32 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 4096
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %313

147:                                              ; preds = %113
  %148 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %149 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %148, i32 0, i32 24
  %150 = load i32, i32* %149, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %313, label %152

152:                                              ; preds = %147
  store i8 120, i8* %13, align 1
  store i8 3, i8* %15, align 1
  store i32 11, i32* %18, align 4
  store i32 0, i32* %17, align 4
  br label %153

153:                                              ; preds = %169, %152
  %154 = load i32, i32* %17, align 4
  %155 = load i32, i32* %18, align 4
  %156 = icmp ult i32 %154, %155
  br i1 %156, label %157, label %172

157:                                              ; preds = %153
  %158 = load i32, i32* %17, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds [11 x i32], [11 x i32]* @s_tdefl_num_probes, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %163 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %162, i32 0, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 4095
  %166 = icmp eq i32 %161, %165
  br i1 %166, label %167, label %168

167:                                              ; preds = %157
  br label %172

168:                                              ; preds = %157
  br label %169

169:                                              ; preds = %168
  %170 = load i32, i32* %17, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %17, align 4
  br label %153, !llvm.loop !87

172:                                              ; preds = %167, %153
  %173 = load i32, i32* %17, align 4
  %174 = icmp ult i32 %173, 2
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  store i8 0, i8* %15, align 1
  br label %186

176:                                              ; preds = %172
  %177 = load i32, i32* %17, align 4
  %178 = icmp ult i32 %177, 6
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  store i8 1, i8* %15, align 1
  br label %185

180:                                              ; preds = %176
  %181 = load i32, i32* %17, align 4
  %182 = icmp eq i32 %181, 6
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  store i8 2, i8* %15, align 1
  br label %184

184:                                              ; preds = %183, %180
  br label %185

185:                                              ; preds = %184, %179
  br label %186

186:                                              ; preds = %185, %175
  %187 = load i8, i8* %15, align 1
  %188 = zext i8 %187 to i32
  %189 = shl i32 %188, 6
  %190 = or i32 30720, %189
  store i32 %190, i32* %16, align 4
  %191 = load i32, i32* %16, align 4
  %192 = urem i32 %191, 31
  %193 = sub i32 31, %192
  %194 = load i32, i32* %16, align 4
  %195 = add i32 %194, %193
  store i32 %195, i32* %16, align 4
  %196 = load i32, i32* %16, align 4
  %197 = and i32 %196, 255
  %198 = trunc i32 %197 to i8
  store i8 %198, i8* %14, align 1
  br label %199

199:                                              ; preds = %186
  store i32 120, i32* %19, align 4
  store i32 8, i32* %20, align 4
  %200 = load i32, i32* %19, align 4
  %201 = load i32, i32* %20, align 4
  %202 = shl i32 1, %201
  %203 = sub i32 %202, 1
  %204 = icmp ule i32 %200, %203
  br i1 %204, label %205, label %206

205:                                              ; preds = %199
  br label %207

206:                                              ; preds = %199
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1295, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

207:                                              ; preds = %205
  %208 = load i32, i32* %19, align 4
  %209 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %210 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %209, i32 0, i32 16
  %211 = load i32, i32* %210, align 4
  %212 = shl i32 %208, %211
  %213 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %214 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %213, i32 0, i32 17
  %215 = load i32, i32* %214, align 8
  %216 = or i32 %215, %212
  store i32 %216, i32* %214, align 8
  %217 = load i32, i32* %20, align 4
  %218 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %219 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %218, i32 0, i32 16
  %220 = load i32, i32* %219, align 4
  %221 = add i32 %220, %217
  store i32 %221, i32* %219, align 4
  br label %222

222:                                              ; preds = %244, %207
  %223 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %224 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %223, i32 0, i32 16
  %225 = load i32, i32* %224, align 4
  %226 = icmp uge i32 %225, 8
  br i1 %226, label %227, label %253

227:                                              ; preds = %222
  %228 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %229 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %228, i32 0, i32 11
  %230 = load i8*, i8** %229, align 8
  %231 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %232 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %231, i32 0, i32 12
  %233 = load i8*, i8** %232, align 8
  %234 = icmp ult i8* %230, %233
  br i1 %234, label %235, label %244

235:                                              ; preds = %227
  %236 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %237 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %236, i32 0, i32 17
  %238 = load i32, i32* %237, align 8
  %239 = trunc i32 %238 to i8
  %240 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %241 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %240, i32 0, i32 11
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr inbounds i8, i8* %242, i32 1
  store i8* %243, i8** %241, align 8
  store i8 %239, i8* %242, align 1
  br label %244

244:                                              ; preds = %235, %227
  %245 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %246 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %245, i32 0, i32 17
  %247 = load i32, i32* %246, align 8
  %248 = lshr i32 %247, 8
  store i32 %248, i32* %246, align 8
  %249 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %250 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %249, i32 0, i32 16
  %251 = load i32, i32* %250, align 4
  %252 = sub i32 %251, 8
  store i32 %252, i32* %250, align 4
  br label %222, !llvm.loop !88

253:                                              ; preds = %222
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  %256 = load i8, i8* %14, align 1
  %257 = zext i8 %256 to i32
  store i32 %257, i32* %21, align 4
  store i32 8, i32* %22, align 4
  %258 = load i32, i32* %21, align 4
  %259 = load i32, i32* %22, align 4
  %260 = shl i32 1, %259
  %261 = sub i32 %260, 1
  %262 = icmp ule i32 %258, %261
  br i1 %262, label %263, label %264

263:                                              ; preds = %255
  br label %265

264:                                              ; preds = %255
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1296, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

265:                                              ; preds = %263
  %266 = load i32, i32* %21, align 4
  %267 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %268 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %267, i32 0, i32 16
  %269 = load i32, i32* %268, align 4
  %270 = shl i32 %266, %269
  %271 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %272 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %271, i32 0, i32 17
  %273 = load i32, i32* %272, align 8
  %274 = or i32 %273, %270
  store i32 %274, i32* %272, align 8
  %275 = load i32, i32* %22, align 4
  %276 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %277 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %276, i32 0, i32 16
  %278 = load i32, i32* %277, align 4
  %279 = add i32 %278, %275
  store i32 %279, i32* %277, align 4
  br label %280

280:                                              ; preds = %302, %265
  %281 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %282 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %281, i32 0, i32 16
  %283 = load i32, i32* %282, align 4
  %284 = icmp uge i32 %283, 8
  br i1 %284, label %285, label %311

285:                                              ; preds = %280
  %286 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %287 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %286, i32 0, i32 11
  %288 = load i8*, i8** %287, align 8
  %289 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %290 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %289, i32 0, i32 12
  %291 = load i8*, i8** %290, align 8
  %292 = icmp ult i8* %288, %291
  br i1 %292, label %293, label %302

293:                                              ; preds = %285
  %294 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %295 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %294, i32 0, i32 17
  %296 = load i32, i32* %295, align 8
  %297 = trunc i32 %296 to i8
  %298 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %299 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %298, i32 0, i32 11
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr inbounds i8, i8* %300, i32 1
  store i8* %301, i8** %299, align 8
  store i8 %297, i8* %300, align 1
  br label %302

302:                                              ; preds = %293, %285
  %303 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %304 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %303, i32 0, i32 17
  %305 = load i32, i32* %304, align 8
  %306 = lshr i32 %305, 8
  store i32 %306, i32* %304, align 8
  %307 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %308 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %307, i32 0, i32 16
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 %309, 8
  store i32 %310, i32* %308, align 4
  br label %280, !llvm.loop !89

311:                                              ; preds = %280
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312, %147, %113
  br label %314

314:                                              ; preds = %313
  %315 = load i32, i32* %5, align 4
  %316 = icmp eq i32 %315, 4
  %317 = zext i1 %316 to i32
  store i32 %317, i32* %23, align 4
  store i32 1, i32* %24, align 4
  %318 = load i32, i32* %23, align 4
  %319 = load i32, i32* %24, align 4
  %320 = shl i32 1, %319
  %321 = sub i32 %320, 1
  %322 = icmp ule i32 %318, %321
  br i1 %322, label %323, label %324

323:                                              ; preds = %314
  br label %325

324:                                              ; preds = %314
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1299, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

325:                                              ; preds = %323
  %326 = load i32, i32* %23, align 4
  %327 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %328 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %327, i32 0, i32 16
  %329 = load i32, i32* %328, align 4
  %330 = shl i32 %326, %329
  %331 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %332 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %331, i32 0, i32 17
  %333 = load i32, i32* %332, align 8
  %334 = or i32 %333, %330
  store i32 %334, i32* %332, align 8
  %335 = load i32, i32* %24, align 4
  %336 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %337 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %336, i32 0, i32 16
  %338 = load i32, i32* %337, align 4
  %339 = add i32 %338, %335
  store i32 %339, i32* %337, align 4
  br label %340

340:                                              ; preds = %362, %325
  %341 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %342 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %341, i32 0, i32 16
  %343 = load i32, i32* %342, align 4
  %344 = icmp uge i32 %343, 8
  br i1 %344, label %345, label %371

345:                                              ; preds = %340
  %346 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %347 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %346, i32 0, i32 11
  %348 = load i8*, i8** %347, align 8
  %349 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %350 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %349, i32 0, i32 12
  %351 = load i8*, i8** %350, align 8
  %352 = icmp ult i8* %348, %351
  br i1 %352, label %353, label %362

353:                                              ; preds = %345
  %354 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %355 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %354, i32 0, i32 17
  %356 = load i32, i32* %355, align 8
  %357 = trunc i32 %356 to i8
  %358 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %359 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %358, i32 0, i32 11
  %360 = load i8*, i8** %359, align 8
  %361 = getelementptr inbounds i8, i8* %360, i32 1
  store i8* %361, i8** %359, align 8
  store i8 %357, i8* %360, align 1
  br label %362

362:                                              ; preds = %353, %345
  %363 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %364 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %363, i32 0, i32 17
  %365 = load i32, i32* %364, align 8
  %366 = lshr i32 %365, 8
  store i32 %366, i32* %364, align 8
  %367 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %368 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %367, i32 0, i32 16
  %369 = load i32, i32* %368, align 4
  %370 = sub i32 %369, 8
  store i32 %370, i32* %368, align 4
  br label %340, !llvm.loop !90

371:                                              ; preds = %340
  br label %372

372:                                              ; preds = %371
  %373 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %374 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %373, i32 0, i32 11
  %375 = load i8*, i8** %374, align 8
  store i8* %375, i8** %8, align 8
  %376 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %377 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %376, i32 0, i32 17
  %378 = load i32, i32* %377, align 8
  store i32 %378, i32* %6, align 4
  %379 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %380 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %379, i32 0, i32 16
  %381 = load i32, i32* %380, align 4
  store i32 %381, i32* %7, align 4
  %382 = load i32, i32* %11, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %400, label %384

384:                                              ; preds = %372
  %385 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %386 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %387 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %386, i32 0, i32 2
  %388 = load i32, i32* %387, align 8
  %389 = and i32 %388, 262144
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %396, label %391

391:                                              ; preds = %384
  %392 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %393 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %392, i32 0, i32 14
  %394 = load i32, i32* %393, align 4
  %395 = icmp ult i32 %394, 48
  br label %396

396:                                              ; preds = %391, %384
  %397 = phi i1 [ true, %384 ], [ %395, %391 ]
  %398 = zext i1 %397 to i32
  %399 = call i32 @tdefl_compress_block(%struct.tdefl_compressor* noundef %385, i32 noundef %398)
  store i32 %399, i32* %9, align 4
  br label %400

400:                                              ; preds = %396, %372
  %401 = load i32, i32* %11, align 4
  %402 = icmp ne i32 %401, 0
  br i1 %402, label %422, label %403

403:                                              ; preds = %400
  %404 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %405 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %404, i32 0, i32 14
  %406 = load i32, i32* %405, align 4
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %408, label %717

408:                                              ; preds = %403
  %409 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %410 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %409, i32 0, i32 11
  %411 = load i8*, i8** %410, align 8
  %412 = load i8*, i8** %8, align 8
  %413 = ptrtoint i8* %411 to i64
  %414 = ptrtoint i8* %412 to i64
  %415 = sub i64 %413, %414
  %416 = add nsw i64 %415, 1
  %417 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %418 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %417, i32 0, i32 14
  %419 = load i32, i32* %418, align 4
  %420 = zext i32 %419 to i64
  %421 = icmp sge i64 %416, %420
  br i1 %421, label %422, label %717

422:                                              ; preds = %408, %400
  %423 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %424 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %423, i32 0, i32 6
  %425 = load i32, i32* %424, align 4
  %426 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %427 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %426, i32 0, i32 15
  %428 = load i32, i32* %427, align 8
  %429 = sub i32 %425, %428
  %430 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %431 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %430, i32 0, i32 8
  %432 = load i32, i32* %431, align 4
  %433 = icmp ule i32 %429, %432
  br i1 %433, label %434, label %717

434:                                              ; preds = %422
  %435 = load i8*, i8** %8, align 8
  %436 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %437 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %436, i32 0, i32 11
  store i8* %435, i8** %437, align 8
  %438 = load i32, i32* %6, align 4
  %439 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %440 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %439, i32 0, i32 17
  store i32 %438, i32* %440, align 8
  %441 = load i32, i32* %7, align 4
  %442 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %443 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %442, i32 0, i32 16
  store i32 %441, i32* %443, align 4
  br label %444

444:                                              ; preds = %434
  store i32 0, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %445 = load i32, i32* %26, align 4
  %446 = load i32, i32* %27, align 4
  %447 = shl i32 1, %446
  %448 = sub i32 %447, 1
  %449 = icmp ule i32 %445, %448
  br i1 %449, label %450, label %451

450:                                              ; preds = %444
  br label %452

451:                                              ; preds = %444
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

452:                                              ; preds = %450
  %453 = load i32, i32* %26, align 4
  %454 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %455 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %454, i32 0, i32 16
  %456 = load i32, i32* %455, align 4
  %457 = shl i32 %453, %456
  %458 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %459 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %458, i32 0, i32 17
  %460 = load i32, i32* %459, align 8
  %461 = or i32 %460, %457
  store i32 %461, i32* %459, align 8
  %462 = load i32, i32* %27, align 4
  %463 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %464 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %463, i32 0, i32 16
  %465 = load i32, i32* %464, align 4
  %466 = add i32 %465, %462
  store i32 %466, i32* %464, align 4
  br label %467

467:                                              ; preds = %489, %452
  %468 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %469 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %468, i32 0, i32 16
  %470 = load i32, i32* %469, align 4
  %471 = icmp uge i32 %470, 8
  br i1 %471, label %472, label %498

472:                                              ; preds = %467
  %473 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %474 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %473, i32 0, i32 11
  %475 = load i8*, i8** %474, align 8
  %476 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %477 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %476, i32 0, i32 12
  %478 = load i8*, i8** %477, align 8
  %479 = icmp ult i8* %475, %478
  br i1 %479, label %480, label %489

480:                                              ; preds = %472
  %481 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %482 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %481, i32 0, i32 17
  %483 = load i32, i32* %482, align 8
  %484 = trunc i32 %483 to i8
  %485 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %486 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %485, i32 0, i32 11
  %487 = load i8*, i8** %486, align 8
  %488 = getelementptr inbounds i8, i8* %487, i32 1
  store i8* %488, i8** %486, align 8
  store i8 %484, i8* %487, align 1
  br label %489

489:                                              ; preds = %480, %472
  %490 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %491 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %490, i32 0, i32 17
  %492 = load i32, i32* %491, align 8
  %493 = lshr i32 %492, 8
  store i32 %493, i32* %491, align 8
  %494 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %495 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %494, i32 0, i32 16
  %496 = load i32, i32* %495, align 4
  %497 = sub i32 %496, 8
  store i32 %497, i32* %495, align 4
  br label %467, !llvm.loop !91

498:                                              ; preds = %467
  br label %499

499:                                              ; preds = %498
  %500 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %501 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %500, i32 0, i32 16
  %502 = load i32, i32* %501, align 4
  %503 = icmp ne i32 %502, 0
  br i1 %503, label %504, label %565

504:                                              ; preds = %499
  br label %505

505:                                              ; preds = %504
  store i32 0, i32* %28, align 4
  %506 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %507 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %506, i32 0, i32 16
  %508 = load i32, i32* %507, align 4
  %509 = sub i32 8, %508
  store i32 %509, i32* %29, align 4
  %510 = load i32, i32* %28, align 4
  %511 = load i32, i32* %29, align 4
  %512 = shl i32 1, %511
  %513 = sub i32 %512, 1
  %514 = icmp ule i32 %510, %513
  br i1 %514, label %515, label %516

515:                                              ; preds = %505
  br label %517

516:                                              ; preds = %505
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1318, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

517:                                              ; preds = %515
  %518 = load i32, i32* %28, align 4
  %519 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %520 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %519, i32 0, i32 16
  %521 = load i32, i32* %520, align 4
  %522 = shl i32 %518, %521
  %523 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %524 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %523, i32 0, i32 17
  %525 = load i32, i32* %524, align 8
  %526 = or i32 %525, %522
  store i32 %526, i32* %524, align 8
  %527 = load i32, i32* %29, align 4
  %528 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %529 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %528, i32 0, i32 16
  %530 = load i32, i32* %529, align 4
  %531 = add i32 %530, %527
  store i32 %531, i32* %529, align 4
  br label %532

532:                                              ; preds = %554, %517
  %533 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %534 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %533, i32 0, i32 16
  %535 = load i32, i32* %534, align 4
  %536 = icmp uge i32 %535, 8
  br i1 %536, label %537, label %563

537:                                              ; preds = %532
  %538 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %539 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %538, i32 0, i32 11
  %540 = load i8*, i8** %539, align 8
  %541 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %542 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %541, i32 0, i32 12
  %543 = load i8*, i8** %542, align 8
  %544 = icmp ult i8* %540, %543
  br i1 %544, label %545, label %554

545:                                              ; preds = %537
  %546 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %547 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %546, i32 0, i32 17
  %548 = load i32, i32* %547, align 8
  %549 = trunc i32 %548 to i8
  %550 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %551 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %550, i32 0, i32 11
  %552 = load i8*, i8** %551, align 8
  %553 = getelementptr inbounds i8, i8* %552, i32 1
  store i8* %553, i8** %551, align 8
  store i8 %549, i8* %552, align 1
  br label %554

554:                                              ; preds = %545, %537
  %555 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %556 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %555, i32 0, i32 17
  %557 = load i32, i32* %556, align 8
  %558 = lshr i32 %557, 8
  store i32 %558, i32* %556, align 8
  %559 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %560 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %559, i32 0, i32 16
  %561 = load i32, i32* %560, align 4
  %562 = sub i32 %561, 8
  store i32 %562, i32* %560, align 4
  br label %532, !llvm.loop !92

563:                                              ; preds = %532
  br label %564

564:                                              ; preds = %563
  br label %565

565:                                              ; preds = %564, %499
  store i32 2, i32* %25, align 4
  br label %566

566:                                              ; preds = %630, %565
  %567 = load i32, i32* %25, align 4
  %568 = icmp ne i32 %567, 0
  br i1 %568, label %569, label %637

569:                                              ; preds = %566
  br label %570

570:                                              ; preds = %569
  %571 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %572 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %571, i32 0, i32 14
  %573 = load i32, i32* %572, align 4
  %574 = and i32 %573, 65535
  store i32 %574, i32* %30, align 4
  store i32 16, i32* %31, align 4
  %575 = load i32, i32* %30, align 4
  %576 = load i32, i32* %31, align 4
  %577 = shl i32 1, %576
  %578 = sub i32 %577, 1
  %579 = icmp ule i32 %575, %578
  br i1 %579, label %580, label %581

580:                                              ; preds = %570
  br label %582

581:                                              ; preds = %570
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1322, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

582:                                              ; preds = %580
  %583 = load i32, i32* %30, align 4
  %584 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %585 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %584, i32 0, i32 16
  %586 = load i32, i32* %585, align 4
  %587 = shl i32 %583, %586
  %588 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %589 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %588, i32 0, i32 17
  %590 = load i32, i32* %589, align 8
  %591 = or i32 %590, %587
  store i32 %591, i32* %589, align 8
  %592 = load i32, i32* %31, align 4
  %593 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %594 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %593, i32 0, i32 16
  %595 = load i32, i32* %594, align 4
  %596 = add i32 %595, %592
  store i32 %596, i32* %594, align 4
  br label %597

597:                                              ; preds = %619, %582
  %598 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %599 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %598, i32 0, i32 16
  %600 = load i32, i32* %599, align 4
  %601 = icmp uge i32 %600, 8
  br i1 %601, label %602, label %628

602:                                              ; preds = %597
  %603 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %604 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %603, i32 0, i32 11
  %605 = load i8*, i8** %604, align 8
  %606 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %607 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %606, i32 0, i32 12
  %608 = load i8*, i8** %607, align 8
  %609 = icmp ult i8* %605, %608
  br i1 %609, label %610, label %619

610:                                              ; preds = %602
  %611 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %612 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %611, i32 0, i32 17
  %613 = load i32, i32* %612, align 8
  %614 = trunc i32 %613 to i8
  %615 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %616 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %615, i32 0, i32 11
  %617 = load i8*, i8** %616, align 8
  %618 = getelementptr inbounds i8, i8* %617, i32 1
  store i8* %618, i8** %616, align 8
  store i8 %614, i8* %617, align 1
  br label %619

619:                                              ; preds = %610, %602
  %620 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %621 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %620, i32 0, i32 17
  %622 = load i32, i32* %621, align 8
  %623 = lshr i32 %622, 8
  store i32 %623, i32* %621, align 8
  %624 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %625 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %624, i32 0, i32 16
  %626 = load i32, i32* %625, align 4
  %627 = sub i32 %626, 8
  store i32 %627, i32* %625, align 4
  br label %597, !llvm.loop !93

628:                                              ; preds = %597
  br label %629

629:                                              ; preds = %628
  br label %630

630:                                              ; preds = %629
  %631 = load i32, i32* %25, align 4
  %632 = add i32 %631, -1
  store i32 %632, i32* %25, align 4
  %633 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %634 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %633, i32 0, i32 14
  %635 = load i32, i32* %634, align 4
  %636 = xor i32 %635, 65535
  store i32 %636, i32* %634, align 4
  br label %566, !llvm.loop !94

637:                                              ; preds = %566
  store i32 0, i32* %25, align 4
  br label %638

638:                                              ; preds = %713, %637
  %639 = load i32, i32* %25, align 4
  %640 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %641 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %640, i32 0, i32 14
  %642 = load i32, i32* %641, align 4
  %643 = icmp ult i32 %639, %642
  br i1 %643, label %644, label %716

644:                                              ; preds = %638
  br label %645

645:                                              ; preds = %644
  %646 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %647 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %646, i32 0, i32 35
  %648 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %649 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %648, i32 0, i32 15
  %650 = load i32, i32* %649, align 8
  %651 = load i32, i32* %25, align 4
  %652 = add i32 %650, %651
  %653 = and i32 %652, 32767
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [33025 x i8], [33025 x i8]* %647, i64 0, i64 %654
  %656 = load i8, i8* %655, align 1
  %657 = zext i8 %656 to i32
  store i32 %657, i32* %32, align 4
  store i32 8, i32* %33, align 4
  %658 = load i32, i32* %32, align 4
  %659 = load i32, i32* %33, align 4
  %660 = shl i32 1, %659
  %661 = sub i32 %660, 1
  %662 = icmp ule i32 %658, %661
  br i1 %662, label %663, label %664

663:                                              ; preds = %645
  br label %665

664:                                              ; preds = %645
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1326, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

665:                                              ; preds = %663
  %666 = load i32, i32* %32, align 4
  %667 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %668 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %667, i32 0, i32 16
  %669 = load i32, i32* %668, align 4
  %670 = shl i32 %666, %669
  %671 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %672 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %671, i32 0, i32 17
  %673 = load i32, i32* %672, align 8
  %674 = or i32 %673, %670
  store i32 %674, i32* %672, align 8
  %675 = load i32, i32* %33, align 4
  %676 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %677 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %676, i32 0, i32 16
  %678 = load i32, i32* %677, align 4
  %679 = add i32 %678, %675
  store i32 %679, i32* %677, align 4
  br label %680

680:                                              ; preds = %702, %665
  %681 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %682 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %681, i32 0, i32 16
  %683 = load i32, i32* %682, align 4
  %684 = icmp uge i32 %683, 8
  br i1 %684, label %685, label %711

685:                                              ; preds = %680
  %686 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %687 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %686, i32 0, i32 11
  %688 = load i8*, i8** %687, align 8
  %689 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %690 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %689, i32 0, i32 12
  %691 = load i8*, i8** %690, align 8
  %692 = icmp ult i8* %688, %691
  br i1 %692, label %693, label %702

693:                                              ; preds = %685
  %694 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %695 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %694, i32 0, i32 17
  %696 = load i32, i32* %695, align 8
  %697 = trunc i32 %696 to i8
  %698 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %699 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %698, i32 0, i32 11
  %700 = load i8*, i8** %699, align 8
  %701 = getelementptr inbounds i8, i8* %700, i32 1
  store i8* %701, i8** %699, align 8
  store i8 %697, i8* %700, align 1
  br label %702

702:                                              ; preds = %693, %685
  %703 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %704 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %703, i32 0, i32 17
  %705 = load i32, i32* %704, align 8
  %706 = lshr i32 %705, 8
  store i32 %706, i32* %704, align 8
  %707 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %708 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %707, i32 0, i32 16
  %709 = load i32, i32* %708, align 4
  %710 = sub i32 %709, 8
  store i32 %710, i32* %708, align 4
  br label %680, !llvm.loop !95

711:                                              ; preds = %680
  br label %712

712:                                              ; preds = %711
  br label %713

713:                                              ; preds = %712
  %714 = load i32, i32* %25, align 4
  %715 = add i32 %714, 1
  store i32 %715, i32* %25, align 4
  br label %638, !llvm.loop !96

716:                                              ; preds = %638
  br label %733

717:                                              ; preds = %422, %408, %403
  %718 = load i32, i32* %9, align 4
  %719 = icmp ne i32 %718, 0
  br i1 %719, label %732, label %720

720:                                              ; preds = %717
  %721 = load i8*, i8** %8, align 8
  %722 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %723 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %722, i32 0, i32 11
  store i8* %721, i8** %723, align 8
  %724 = load i32, i32* %6, align 4
  %725 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %726 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %725, i32 0, i32 17
  store i32 %724, i32* %726, align 8
  %727 = load i32, i32* %7, align 4
  %728 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %729 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %728, i32 0, i32 16
  store i32 %727, i32* %729, align 4
  %730 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %731 = call i32 @tdefl_compress_block(%struct.tdefl_compressor* noundef %730, i32 noundef 1)
  br label %732

732:                                              ; preds = %720, %717
  br label %733

733:                                              ; preds = %732, %716
  %734 = load i32, i32* %5, align 4
  %735 = icmp ne i32 %734, 0
  br i1 %735, label %736, label %1077

736:                                              ; preds = %733
  %737 = load i32, i32* %5, align 4
  %738 = icmp eq i32 %737, 4
  br i1 %738, label %739, label %885

739:                                              ; preds = %736
  %740 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %741 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %740, i32 0, i32 16
  %742 = load i32, i32* %741, align 4
  %743 = icmp ne i32 %742, 0
  br i1 %743, label %744, label %805

744:                                              ; preds = %739
  br label %745

745:                                              ; preds = %744
  store i32 0, i32* %34, align 4
  %746 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %747 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %746, i32 0, i32 16
  %748 = load i32, i32* %747, align 4
  %749 = sub i32 8, %748
  store i32 %749, i32* %35, align 4
  %750 = load i32, i32* %34, align 4
  %751 = load i32, i32* %35, align 4
  %752 = shl i32 1, %751
  %753 = sub i32 %752, 1
  %754 = icmp ule i32 %750, %753
  br i1 %754, label %755, label %756

755:                                              ; preds = %745
  br label %757

756:                                              ; preds = %745
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1343, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

757:                                              ; preds = %755
  %758 = load i32, i32* %34, align 4
  %759 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %760 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %759, i32 0, i32 16
  %761 = load i32, i32* %760, align 4
  %762 = shl i32 %758, %761
  %763 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %764 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %763, i32 0, i32 17
  %765 = load i32, i32* %764, align 8
  %766 = or i32 %765, %762
  store i32 %766, i32* %764, align 8
  %767 = load i32, i32* %35, align 4
  %768 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %769 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %768, i32 0, i32 16
  %770 = load i32, i32* %769, align 4
  %771 = add i32 %770, %767
  store i32 %771, i32* %769, align 4
  br label %772

772:                                              ; preds = %794, %757
  %773 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %774 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %773, i32 0, i32 16
  %775 = load i32, i32* %774, align 4
  %776 = icmp uge i32 %775, 8
  br i1 %776, label %777, label %803

777:                                              ; preds = %772
  %778 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %779 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %778, i32 0, i32 11
  %780 = load i8*, i8** %779, align 8
  %781 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %782 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %781, i32 0, i32 12
  %783 = load i8*, i8** %782, align 8
  %784 = icmp ult i8* %780, %783
  br i1 %784, label %785, label %794

785:                                              ; preds = %777
  %786 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %787 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %786, i32 0, i32 17
  %788 = load i32, i32* %787, align 8
  %789 = trunc i32 %788 to i8
  %790 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %791 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %790, i32 0, i32 11
  %792 = load i8*, i8** %791, align 8
  %793 = getelementptr inbounds i8, i8* %792, i32 1
  store i8* %793, i8** %791, align 8
  store i8 %789, i8* %792, align 1
  br label %794

794:                                              ; preds = %785, %777
  %795 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %796 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %795, i32 0, i32 17
  %797 = load i32, i32* %796, align 8
  %798 = lshr i32 %797, 8
  store i32 %798, i32* %796, align 8
  %799 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %800 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %799, i32 0, i32 16
  %801 = load i32, i32* %800, align 4
  %802 = sub i32 %801, 8
  store i32 %802, i32* %800, align 4
  br label %772, !llvm.loop !97

803:                                              ; preds = %772
  br label %804

804:                                              ; preds = %803
  br label %805

805:                                              ; preds = %804, %739
  %806 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %807 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %806, i32 0, i32 2
  %808 = load i32, i32* %807, align 8
  %809 = and i32 %808, 4096
  %810 = icmp ne i32 %809, 0
  br i1 %810, label %811, label %884

811:                                              ; preds = %805
  %812 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %813 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %812, i32 0, i32 5
  %814 = load i32, i32* %813, align 8
  store i32 %814, i32* %37, align 4
  store i32 0, i32* %36, align 4
  br label %815

815:                                              ; preds = %880, %811
  %816 = load i32, i32* %36, align 4
  %817 = icmp ult i32 %816, 4
  br i1 %817, label %818, label %883

818:                                              ; preds = %815
  br label %819

819:                                              ; preds = %818
  %820 = load i32, i32* %37, align 4
  %821 = lshr i32 %820, 24
  %822 = and i32 %821, 255
  store i32 %822, i32* %38, align 4
  store i32 8, i32* %39, align 4
  %823 = load i32, i32* %38, align 4
  %824 = load i32, i32* %39, align 4
  %825 = shl i32 1, %824
  %826 = sub i32 %825, 1
  %827 = icmp ule i32 %823, %826
  br i1 %827, label %828, label %829

828:                                              ; preds = %819
  br label %830

829:                                              ; preds = %819
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1350, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

830:                                              ; preds = %828
  %831 = load i32, i32* %38, align 4
  %832 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %833 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %832, i32 0, i32 16
  %834 = load i32, i32* %833, align 4
  %835 = shl i32 %831, %834
  %836 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %837 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %836, i32 0, i32 17
  %838 = load i32, i32* %837, align 8
  %839 = or i32 %838, %835
  store i32 %839, i32* %837, align 8
  %840 = load i32, i32* %39, align 4
  %841 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %842 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %841, i32 0, i32 16
  %843 = load i32, i32* %842, align 4
  %844 = add i32 %843, %840
  store i32 %844, i32* %842, align 4
  br label %845

845:                                              ; preds = %867, %830
  %846 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %847 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %846, i32 0, i32 16
  %848 = load i32, i32* %847, align 4
  %849 = icmp uge i32 %848, 8
  br i1 %849, label %850, label %876

850:                                              ; preds = %845
  %851 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %852 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %851, i32 0, i32 11
  %853 = load i8*, i8** %852, align 8
  %854 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %855 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %854, i32 0, i32 12
  %856 = load i8*, i8** %855, align 8
  %857 = icmp ult i8* %853, %856
  br i1 %857, label %858, label %867

858:                                              ; preds = %850
  %859 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %860 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %859, i32 0, i32 17
  %861 = load i32, i32* %860, align 8
  %862 = trunc i32 %861 to i8
  %863 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %864 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %863, i32 0, i32 11
  %865 = load i8*, i8** %864, align 8
  %866 = getelementptr inbounds i8, i8* %865, i32 1
  store i8* %866, i8** %864, align 8
  store i8 %862, i8* %865, align 1
  br label %867

867:                                              ; preds = %858, %850
  %868 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %869 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %868, i32 0, i32 17
  %870 = load i32, i32* %869, align 8
  %871 = lshr i32 %870, 8
  store i32 %871, i32* %869, align 8
  %872 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %873 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %872, i32 0, i32 16
  %874 = load i32, i32* %873, align 4
  %875 = sub i32 %874, 8
  store i32 %875, i32* %873, align 4
  br label %845, !llvm.loop !98

876:                                              ; preds = %845
  br label %877

877:                                              ; preds = %876
  %878 = load i32, i32* %37, align 4
  %879 = shl i32 %878, 8
  store i32 %879, i32* %37, align 4
  br label %880

880:                                              ; preds = %877
  %881 = load i32, i32* %36, align 4
  %882 = add i32 %881, 1
  store i32 %882, i32* %36, align 4
  br label %815, !llvm.loop !99

883:                                              ; preds = %815
  br label %884

884:                                              ; preds = %883, %805
  br label %1076

885:                                              ; preds = %736
  store i32 0, i32* %41, align 4
  br label %886

886:                                              ; preds = %885
  store i32 0, i32* %42, align 4
  store i32 3, i32* %43, align 4
  %887 = load i32, i32* %42, align 4
  %888 = load i32, i32* %43, align 4
  %889 = shl i32 1, %888
  %890 = sub i32 %889, 1
  %891 = icmp ule i32 %887, %890
  br i1 %891, label %892, label %893

892:                                              ; preds = %886
  br label %894

893:                                              ; preds = %886
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1358, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

894:                                              ; preds = %892
  %895 = load i32, i32* %42, align 4
  %896 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %897 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %896, i32 0, i32 16
  %898 = load i32, i32* %897, align 4
  %899 = shl i32 %895, %898
  %900 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %901 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %900, i32 0, i32 17
  %902 = load i32, i32* %901, align 8
  %903 = or i32 %902, %899
  store i32 %903, i32* %901, align 8
  %904 = load i32, i32* %43, align 4
  %905 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %906 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %905, i32 0, i32 16
  %907 = load i32, i32* %906, align 4
  %908 = add i32 %907, %904
  store i32 %908, i32* %906, align 4
  br label %909

909:                                              ; preds = %931, %894
  %910 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %911 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %910, i32 0, i32 16
  %912 = load i32, i32* %911, align 4
  %913 = icmp uge i32 %912, 8
  br i1 %913, label %914, label %940

914:                                              ; preds = %909
  %915 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %916 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %915, i32 0, i32 11
  %917 = load i8*, i8** %916, align 8
  %918 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %919 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %918, i32 0, i32 12
  %920 = load i8*, i8** %919, align 8
  %921 = icmp ult i8* %917, %920
  br i1 %921, label %922, label %931

922:                                              ; preds = %914
  %923 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %924 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %923, i32 0, i32 17
  %925 = load i32, i32* %924, align 8
  %926 = trunc i32 %925 to i8
  %927 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %928 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %927, i32 0, i32 11
  %929 = load i8*, i8** %928, align 8
  %930 = getelementptr inbounds i8, i8* %929, i32 1
  store i8* %930, i8** %928, align 8
  store i8 %926, i8* %929, align 1
  br label %931

931:                                              ; preds = %922, %914
  %932 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %933 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %932, i32 0, i32 17
  %934 = load i32, i32* %933, align 8
  %935 = lshr i32 %934, 8
  store i32 %935, i32* %933, align 8
  %936 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %937 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %936, i32 0, i32 16
  %938 = load i32, i32* %937, align 4
  %939 = sub i32 %938, 8
  store i32 %939, i32* %937, align 4
  br label %909, !llvm.loop !100

940:                                              ; preds = %909
  br label %941

941:                                              ; preds = %940
  %942 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %943 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %942, i32 0, i32 16
  %944 = load i32, i32* %943, align 4
  %945 = icmp ne i32 %944, 0
  br i1 %945, label %946, label %1007

946:                                              ; preds = %941
  br label %947

947:                                              ; preds = %946
  store i32 0, i32* %44, align 4
  %948 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %949 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %948, i32 0, i32 16
  %950 = load i32, i32* %949, align 4
  %951 = sub i32 8, %950
  store i32 %951, i32* %45, align 4
  %952 = load i32, i32* %44, align 4
  %953 = load i32, i32* %45, align 4
  %954 = shl i32 1, %953
  %955 = sub i32 %954, 1
  %956 = icmp ule i32 %952, %955
  br i1 %956, label %957, label %958

957:                                              ; preds = %947
  br label %959

958:                                              ; preds = %947
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1361, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

959:                                              ; preds = %957
  %960 = load i32, i32* %44, align 4
  %961 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %962 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %961, i32 0, i32 16
  %963 = load i32, i32* %962, align 4
  %964 = shl i32 %960, %963
  %965 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %966 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %965, i32 0, i32 17
  %967 = load i32, i32* %966, align 8
  %968 = or i32 %967, %964
  store i32 %968, i32* %966, align 8
  %969 = load i32, i32* %45, align 4
  %970 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %971 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %970, i32 0, i32 16
  %972 = load i32, i32* %971, align 4
  %973 = add i32 %972, %969
  store i32 %973, i32* %971, align 4
  br label %974

974:                                              ; preds = %996, %959
  %975 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %976 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %975, i32 0, i32 16
  %977 = load i32, i32* %976, align 4
  %978 = icmp uge i32 %977, 8
  br i1 %978, label %979, label %1005

979:                                              ; preds = %974
  %980 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %981 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %980, i32 0, i32 11
  %982 = load i8*, i8** %981, align 8
  %983 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %984 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %983, i32 0, i32 12
  %985 = load i8*, i8** %984, align 8
  %986 = icmp ult i8* %982, %985
  br i1 %986, label %987, label %996

987:                                              ; preds = %979
  %988 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %989 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %988, i32 0, i32 17
  %990 = load i32, i32* %989, align 8
  %991 = trunc i32 %990 to i8
  %992 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %993 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %992, i32 0, i32 11
  %994 = load i8*, i8** %993, align 8
  %995 = getelementptr inbounds i8, i8* %994, i32 1
  store i8* %995, i8** %993, align 8
  store i8 %991, i8* %994, align 1
  br label %996

996:                                              ; preds = %987, %979
  %997 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %998 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %997, i32 0, i32 17
  %999 = load i32, i32* %998, align 8
  %1000 = lshr i32 %999, 8
  store i32 %1000, i32* %998, align 8
  %1001 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1002 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1001, i32 0, i32 16
  %1003 = load i32, i32* %1002, align 4
  %1004 = sub i32 %1003, 8
  store i32 %1004, i32* %1002, align 4
  br label %974, !llvm.loop !101

1005:                                             ; preds = %974
  br label %1006

1006:                                             ; preds = %1005
  br label %1007

1007:                                             ; preds = %1006, %941
  store i32 2, i32* %40, align 4
  br label %1008

1008:                                             ; preds = %1070, %1007
  %1009 = load i32, i32* %40, align 4
  %1010 = icmp ne i32 %1009, 0
  br i1 %1010, label %1011, label %1075

1011:                                             ; preds = %1008
  br label %1012

1012:                                             ; preds = %1011
  %1013 = load i32, i32* %41, align 4
  %1014 = and i32 %1013, 65535
  store i32 %1014, i32* %46, align 4
  store i32 16, i32* %47, align 4
  %1015 = load i32, i32* %46, align 4
  %1016 = load i32, i32* %47, align 4
  %1017 = shl i32 1, %1016
  %1018 = sub i32 %1017, 1
  %1019 = icmp ule i32 %1015, %1018
  br i1 %1019, label %1020, label %1021

1020:                                             ; preds = %1012
  br label %1022

1021:                                             ; preds = %1012
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1365, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

1022:                                             ; preds = %1020
  %1023 = load i32, i32* %46, align 4
  %1024 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1025 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1024, i32 0, i32 16
  %1026 = load i32, i32* %1025, align 4
  %1027 = shl i32 %1023, %1026
  %1028 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1029 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1028, i32 0, i32 17
  %1030 = load i32, i32* %1029, align 8
  %1031 = or i32 %1030, %1027
  store i32 %1031, i32* %1029, align 8
  %1032 = load i32, i32* %47, align 4
  %1033 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1034 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1033, i32 0, i32 16
  %1035 = load i32, i32* %1034, align 4
  %1036 = add i32 %1035, %1032
  store i32 %1036, i32* %1034, align 4
  br label %1037

1037:                                             ; preds = %1059, %1022
  %1038 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1039 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1038, i32 0, i32 16
  %1040 = load i32, i32* %1039, align 4
  %1041 = icmp uge i32 %1040, 8
  br i1 %1041, label %1042, label %1068

1042:                                             ; preds = %1037
  %1043 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1044 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1043, i32 0, i32 11
  %1045 = load i8*, i8** %1044, align 8
  %1046 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1047 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1046, i32 0, i32 12
  %1048 = load i8*, i8** %1047, align 8
  %1049 = icmp ult i8* %1045, %1048
  br i1 %1049, label %1050, label %1059

1050:                                             ; preds = %1042
  %1051 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1052 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1051, i32 0, i32 17
  %1053 = load i32, i32* %1052, align 8
  %1054 = trunc i32 %1053 to i8
  %1055 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1056 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1055, i32 0, i32 11
  %1057 = load i8*, i8** %1056, align 8
  %1058 = getelementptr inbounds i8, i8* %1057, i32 1
  store i8* %1058, i8** %1056, align 8
  store i8 %1054, i8* %1057, align 1
  br label %1059

1059:                                             ; preds = %1050, %1042
  %1060 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1061 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1060, i32 0, i32 17
  %1062 = load i32, i32* %1061, align 8
  %1063 = lshr i32 %1062, 8
  store i32 %1063, i32* %1061, align 8
  %1064 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1065 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1064, i32 0, i32 16
  %1066 = load i32, i32* %1065, align 4
  %1067 = sub i32 %1066, 8
  store i32 %1067, i32* %1065, align 4
  br label %1037, !llvm.loop !102

1068:                                             ; preds = %1037
  br label %1069

1069:                                             ; preds = %1068
  br label %1070

1070:                                             ; preds = %1069
  %1071 = load i32, i32* %40, align 4
  %1072 = add i32 %1071, -1
  store i32 %1072, i32* %40, align 4
  %1073 = load i32, i32* %41, align 4
  %1074 = xor i32 %1073, 65535
  store i32 %1074, i32* %41, align 4
  br label %1008, !llvm.loop !103

1075:                                             ; preds = %1008
  br label %1076

1076:                                             ; preds = %1075, %884
  br label %1077

1077:                                             ; preds = %1076, %733
  %1078 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1079 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1078, i32 0, i32 11
  %1080 = load i8*, i8** %1079, align 8
  %1081 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1082 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1081, i32 0, i32 12
  %1083 = load i8*, i8** %1082, align 8
  %1084 = icmp ult i8* %1080, %1083
  br i1 %1084, label %1085, label %1086

1085:                                             ; preds = %1077
  br label %1087

1086:                                             ; preds = %1077
  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1370, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i64 0, i64 0)) #8
  unreachable

1087:                                             ; preds = %1085
  %1088 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1089 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1088, i32 0, i32 36
  %1090 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1089, i64 0, i64 0
  %1091 = getelementptr inbounds [288 x i16], [288 x i16]* %1090, i64 0, i64 0
  %1092 = bitcast i16* %1091 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %1092, i8 0, i64 576, i1 false)
  %1093 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1094 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1093, i32 0, i32 36
  %1095 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1094, i64 0, i64 1
  %1096 = getelementptr inbounds [288 x i16], [288 x i16]* %1095, i64 0, i64 0
  %1097 = bitcast i16* %1096 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %1097, i8 0, i64 64, i1 false)
  %1098 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1099 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1098, i32 0, i32 39
  %1100 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1099, i64 0, i64 0
  %1101 = getelementptr inbounds i8, i8* %1100, i64 1
  %1102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1102, i32 0, i32 9
  store i8* %1101, i8** %1103, align 8
  %1104 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1105 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1104, i32 0, i32 39
  %1106 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1105, i64 0, i64 0
  %1107 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1108 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1107, i32 0, i32 10
  store i8* %1106, i8** %1108, align 8
  %1109 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1110 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1109, i32 0, i32 13
  store i32 8, i32* %1110, align 8
  %1111 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1112 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1111, i32 0, i32 14
  %1113 = load i32, i32* %1112, align 4
  %1114 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1115 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1114, i32 0, i32 15
  %1116 = load i32, i32* %1115, align 8
  %1117 = add i32 %1116, %1113
  store i32 %1117, i32* %1115, align 8
  %1118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1118, i32 0, i32 14
  store i32 0, i32* %1119, align 4
  %1120 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1121 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1120, i32 0, i32 24
  %1122 = load i32, i32* %1121, align 4
  %1123 = add i32 %1122, 1
  store i32 %1123, i32* %1121, align 4
  %1124 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1125 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1124, i32 0, i32 11
  %1126 = load i8*, i8** %1125, align 8
  %1127 = load i8*, i8** %12, align 8
  %1128 = ptrtoint i8* %1126 to i64
  %1129 = ptrtoint i8* %1127 to i64
  %1130 = sub i64 %1128, %1129
  %1131 = trunc i64 %1130 to i32
  store i32 %1131, i32* %10, align 4
  %1132 = icmp ne i32 %1131, 0
  br i1 %1132, label %1133, label %1239

1133:                                             ; preds = %1087
  %1134 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1135 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1134, i32 0, i32 0
  %1136 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %1135, align 8
  %1137 = icmp ne i32 (i8*, i32, i8*)* %1136, null
  br i1 %1137, label %1138, label %1167

1138:                                             ; preds = %1133
  %1139 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1140 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1139, i32 0, i32 32
  %1141 = load i8*, i8** %1140, align 8
  %1142 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1143 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1142, i32 0, i32 27
  %1144 = load i8*, i8** %1143, align 8
  %1145 = ptrtoint i8* %1141 to i64
  %1146 = ptrtoint i8* %1144 to i64
  %1147 = sub i64 %1145, %1146
  %1148 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1149 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1148, i32 0, i32 29
  %1150 = load i64*, i64** %1149, align 8
  store i64 %1147, i64* %1150, align 8
  %1151 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1152 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1151, i32 0, i32 0
  %1153 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %1152, align 8
  %1154 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1155 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1154, i32 0, i32 42
  %1156 = getelementptr inbounds [85196 x i8], [85196 x i8]* %1155, i64 0, i64 0
  %1157 = load i32, i32* %10, align 4
  %1158 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1159 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1158, i32 0, i32 1
  %1160 = load i8*, i8** %1159, align 8
  %1161 = call i32 %1153(i8* noundef %1156, i32 noundef %1157, i8* noundef %1160)
  %1162 = icmp ne i32 %1161, 0
  br i1 %1162, label %1166, label %1163

1163:                                             ; preds = %1138
  %1164 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1165 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1164, i32 0, i32 26
  store i32 -1, i32* %1165, align 4
  store i32 -1, i32* %3, align 4
  br label %1243

1166:                                             ; preds = %1138
  br label %1238

1167:                                             ; preds = %1133
  %1168 = load i8*, i8** %12, align 8
  %1169 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1170 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1169, i32 0, i32 42
  %1171 = getelementptr inbounds [85196 x i8], [85196 x i8]* %1170, i64 0, i64 0
  %1172 = icmp eq i8* %1168, %1171
  br i1 %1172, label %1173, label %1230

1173:                                             ; preds = %1167
  %1174 = load i32, i32* %10, align 4
  %1175 = sext i32 %1174 to i64
  %1176 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1177 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1176, i32 0, i32 30
  %1178 = load i64*, i64** %1177, align 8
  %1179 = load i64, i64* %1178, align 8
  %1180 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1181 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1180, i32 0, i32 34
  %1182 = load i64, i64* %1181, align 8
  %1183 = sub i64 %1179, %1182
  %1184 = icmp ult i64 %1175, %1183
  br i1 %1184, label %1185, label %1188

1185:                                             ; preds = %1173
  %1186 = load i32, i32* %10, align 4
  %1187 = sext i32 %1186 to i64
  br label %1197

1188:                                             ; preds = %1173
  %1189 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1190 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1189, i32 0, i32 30
  %1191 = load i64*, i64** %1190, align 8
  %1192 = load i64, i64* %1191, align 8
  %1193 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1194 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1193, i32 0, i32 34
  %1195 = load i64, i64* %1194, align 8
  %1196 = sub i64 %1192, %1195
  br label %1197

1197:                                             ; preds = %1188, %1185
  %1198 = phi i64 [ %1187, %1185 ], [ %1196, %1188 ]
  %1199 = trunc i64 %1198 to i32
  store i32 %1199, i32* %48, align 4
  %1200 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1201 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1200, i32 0, i32 28
  %1202 = load i8*, i8** %1201, align 8
  %1203 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1204 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1203, i32 0, i32 34
  %1205 = load i64, i64* %1204, align 8
  %1206 = getelementptr inbounds i8, i8* %1202, i64 %1205
  %1207 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1208 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1207, i32 0, i32 42
  %1209 = getelementptr inbounds [85196 x i8], [85196 x i8]* %1208, i64 0, i64 0
  %1210 = load i32, i32* %48, align 4
  %1211 = sext i32 %1210 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1206, i8* align 2 %1209, i64 %1211, i1 false)
  %1212 = load i32, i32* %48, align 4
  %1213 = sext i32 %1212 to i64
  %1214 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1215 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1214, i32 0, i32 34
  %1216 = load i64, i64* %1215, align 8
  %1217 = add i64 %1216, %1213
  store i64 %1217, i64* %1215, align 8
  %1218 = load i32, i32* %48, align 4
  %1219 = load i32, i32* %10, align 4
  %1220 = sub nsw i32 %1219, %1218
  store i32 %1220, i32* %10, align 4
  %1221 = icmp ne i32 %1220, 0
  br i1 %1221, label %1222, label %1229

1222:                                             ; preds = %1197
  %1223 = load i32, i32* %48, align 4
  %1224 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1225 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1224, i32 0, i32 21
  store i32 %1223, i32* %1225, align 8
  %1226 = load i32, i32* %10, align 4
  %1227 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1228 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1227, i32 0, i32 22
  store i32 %1226, i32* %1228, align 4
  br label %1229

1229:                                             ; preds = %1222, %1197
  br label %1237

1230:                                             ; preds = %1167
  %1231 = load i32, i32* %10, align 4
  %1232 = sext i32 %1231 to i64
  %1233 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1234 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1233, i32 0, i32 34
  %1235 = load i64, i64* %1234, align 8
  %1236 = add i64 %1235, %1232
  store i64 %1236, i64* %1234, align 8
  br label %1237

1237:                                             ; preds = %1230, %1229
  br label %1238

1238:                                             ; preds = %1237, %1166
  br label %1239

1239:                                             ; preds = %1238, %1087
  %1240 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1241 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1240, i32 0, i32 22
  %1242 = load i32, i32* %1241, align 4
  store i32 %1242, i32* %3, align 4
  br label %1243

1243:                                             ; preds = %1239, %1163
  %1244 = load i32, i32* %3, align 4
  ret i32 %1244
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %0, i8* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.tdefl_compressor*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %9, i32 0, i32 0
  %11 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %10, align 8
  %12 = icmp ne i32 (i8*, i32, i8*)* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  br label %15

14:                                               ; preds = %4
  call void @__assert_fail(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1988, i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_buffer, i64 0, i64 0)) #8
  unreachable

15:                                               ; preds = %13
  %16 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %5, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = load i32, i32* %8, align 4
  %19 = call i32 @tdefl_compress(%struct.tdefl_compressor* noundef %16, i8* noundef %17, i64* noundef %7, i8* noundef null, i64* noundef null, i32 noundef %18)
  ret i32 %19
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8* noundef, i8* noundef, i32 noundef, i8* noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_get_prev_return_status(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  %3 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %4 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %3, i32 0, i32 26
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tdefl_compress_mem_to_output(i8* noundef %0, i64 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32 (i8*, i32, i8*)*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.tdefl_compressor*, align 8
  %13 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32 (i8*, i32, i8*)* %2, i32 (i8*, i32, i8*)** %9, align 8
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  %14 = load i64, i64* %8, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = load i8*, i8** %7, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %16, %5
  %20 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %9, align 8
  %21 = icmp ne i32 (i8*, i32, i8*)* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %19, %16
  store i32 0, i32* %6, align 4
  br label %51

23:                                               ; preds = %19
  %24 = call noalias i8* @malloc(i64 noundef 319352) #7
  %25 = bitcast i8* %24 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %25, %struct.tdefl_compressor** %12, align 8
  %26 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %27 = icmp ne %struct.tdefl_compressor* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  store i32 0, i32* %6, align 4
  br label %51

29:                                               ; preds = %23
  %30 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %31 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %9, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = load i32, i32* %11, align 4
  %34 = call i32 @tdefl_init(%struct.tdefl_compressor* noundef %30, i32 (i8*, i32, i8*)* noundef %31, i8* noundef %32, i32 noundef %33)
  %35 = icmp eq i32 %34, 0
  %36 = zext i1 %35 to i32
  store i32 %36, i32* %13, align 4
  %37 = load i32, i32* %13, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %29
  %40 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %41 = load i8*, i8** %7, align 8
  %42 = load i64, i64* %8, align 8
  %43 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %40, i8* noundef %41, i64 noundef %42, i32 noundef 4)
  %44 = icmp eq i32 %43, 1
  br label %45

45:                                               ; preds = %39, %29
  %46 = phi i1 [ false, %29 ], [ %44, %39 ]
  %47 = zext i1 %46 to i32
  store i32 %47, i32* %13, align 4
  %48 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %49 = bitcast %struct.tdefl_compressor* %48 to i8*
  call void @free(i8* noundef %49) #7
  %50 = load i32, i32* %13, align 4
  store i32 %50, i32* %6, align 4
  br label %51

51:                                               ; preds = %45, %28, %22
  %52 = load i32, i32* %6, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tdefl_compress_mem_to_heap(i8* noundef %0, i64 noundef %1, i64* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.tdefl_output_buffer, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = bitcast %struct.tdefl_output_buffer* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  %12 = load i64*, i64** %8, align 8
  %13 = icmp ne i64* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i8* null, i8** %5, align 8
  br label %32

15:                                               ; preds = %4
  %16 = load i64*, i64** %8, align 8
  store i64 0, i64* %16, align 8
  br label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %10, i32 0, i32 3
  store i32 1, i32* %18, align 8
  %19 = load i8*, i8** %6, align 8
  %20 = load i64, i64* %7, align 8
  %21 = bitcast %struct.tdefl_output_buffer* %10 to i8*
  %22 = load i32, i32* %9, align 4
  %23 = call i32 @tdefl_compress_mem_to_output(i8* noundef %19, i64 noundef %20, i32 (i8*, i32, i8*)* noundef @tdefl_output_buffer_putter, i8* noundef %21, i32 noundef %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  store i8* null, i8** %5, align 8
  br label %32

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %10, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = load i64*, i64** %8, align 8
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %10, i32 0, i32 2
  %31 = load i8*, i8** %30, align 8
  store i8* %31, i8** %5, align 8
  br label %32

32:                                               ; preds = %26, %25, %14
  %33 = load i8*, i8** %5, align 8
  ret i8* %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @tdefl_output_buffer_putter(i8* noundef %0, i32 noundef %1, i8* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.tdefl_output_buffer*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = bitcast i8* %12 to %struct.tdefl_output_buffer*
  store %struct.tdefl_output_buffer* %13, %struct.tdefl_output_buffer** %8, align 8
  %14 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %15 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = add i64 %16, %18
  store i64 %19, i64* %9, align 8
  %20 = load i64, i64* %9, align 8
  %21 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %22 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %20, %23
  br i1 %24, label %25, label %65

25:                                               ; preds = %3
  %26 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %27 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %10, align 8
  %29 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %30 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %25
  store i32 0, i32* %4, align 4
  br label %79

34:                                               ; preds = %25
  br label %35

35:                                               ; preds = %45, %34
  %36 = load i64, i64* %10, align 8
  %37 = shl i64 %36, 1
  %38 = icmp ugt i64 128, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  br label %43

40:                                               ; preds = %35
  %41 = load i64, i64* %10, align 8
  %42 = shl i64 %41, 1
  br label %43

43:                                               ; preds = %40, %39
  %44 = phi i64 [ 128, %39 ], [ %42, %40 ]
  store i64 %44, i64* %10, align 8
  br label %45

45:                                               ; preds = %43
  %46 = load i64, i64* %9, align 8
  %47 = load i64, i64* %10, align 8
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %35, label %49, !llvm.loop !104

49:                                               ; preds = %45
  %50 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %51 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = load i64, i64* %10, align 8
  %54 = call i8* @realloc(i8* noundef %52, i64 noundef %53) #7
  store i8* %54, i8** %11, align 8
  %55 = load i8*, i8** %11, align 8
  %56 = icmp ne i8* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %49
  store i32 0, i32* %4, align 4
  br label %79

58:                                               ; preds = %49
  %59 = load i8*, i8** %11, align 8
  %60 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %61 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %60, i32 0, i32 2
  store i8* %59, i8** %61, align 8
  %62 = load i64, i64* %10, align 8
  %63 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %64 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %63, i32 0, i32 1
  store i64 %62, i64* %64, align 8
  br label %65

65:                                               ; preds = %58, %3
  %66 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %67 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %66, i32 0, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %70 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %69, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds i8, i8* %68, i64 %71
  %73 = load i8*, i8** %5, align 8
  %74 = load i32, i32* %6, align 4
  %75 = sext i32 %74 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %73, i64 %75, i1 false)
  %76 = load i64, i64* %9, align 8
  %77 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %8, align 8
  %78 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %77, i32 0, i32 0
  store i64 %76, i64* %78, align 8
  store i32 1, i32* %4, align 4
  br label %79

79:                                               ; preds = %65, %57, %33
  %80 = load i32, i32* %4, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @tdefl_compress_mem_to_mem(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.tdefl_output_buffer, align 8
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  store i64 %3, i64* %10, align 8
  store i32 %4, i32* %11, align 4
  %13 = bitcast %struct.tdefl_output_buffer* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  %14 = load i8*, i8** %7, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %5
  store i64 0, i64* %6, align 8
  br label %32

17:                                               ; preds = %5
  %18 = load i8*, i8** %7, align 8
  %19 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %12, i32 0, i32 2
  store i8* %18, i8** %19, align 8
  %20 = load i64, i64* %8, align 8
  %21 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %12, i32 0, i32 1
  store i64 %20, i64* %21, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %10, align 8
  %24 = bitcast %struct.tdefl_output_buffer* %12 to i8*
  %25 = load i32, i32* %11, align 4
  %26 = call i32 @tdefl_compress_mem_to_output(i8* noundef %22, i64 noundef %23, i32 (i8*, i32, i8*)* noundef @tdefl_output_buffer_putter, i8* noundef %24, i32 noundef %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %17
  store i64 0, i64* %6, align 8
  br label %32

29:                                               ; preds = %17
  %30 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %12, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %6, align 8
  br label %32

32:                                               ; preds = %29, %28, %16
  %33 = load i64, i64* %6, align 8
  ret i64 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tdefl_write_image_to_png_file_in_memory_ex(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i64* noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.tdefl_compressor*, align 8
  %17 = alloca %struct.tdefl_output_buffer, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca [41 x i8], align 16
  store i8* %0, i8** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i64* %4, i64** %13, align 8
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  %24 = call noalias i8* @malloc(i64 noundef 319352) #7
  %25 = bitcast i8* %24 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %25, %struct.tdefl_compressor** %16, align 8
  %26 = load i32, i32* %10, align 4
  %27 = load i32, i32* %12, align 4
  %28 = mul nsw i32 %26, %27
  store i32 %28, i32* %19, align 4
  %29 = load i64*, i64** %13, align 8
  store i64 0, i64* %29, align 8
  %30 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %31 = icmp ne %struct.tdefl_compressor* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %7
  store i8* null, i8** %8, align 8
  br label %243

33:                                               ; preds = %7
  %34 = bitcast %struct.tdefl_output_buffer* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false)
  %35 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 3
  store i32 1, i32* %35, align 8
  %36 = load i32, i32* %19, align 4
  %37 = add nsw i32 1, %36
  %38 = load i32, i32* %11, align 4
  %39 = mul nsw i32 %37, %38
  %40 = icmp sgt i32 64, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %33
  br label %47

42:                                               ; preds = %33
  %43 = load i32, i32* %19, align 4
  %44 = add nsw i32 1, %43
  %45 = load i32, i32* %11, align 4
  %46 = mul nsw i32 %44, %45
  br label %47

47:                                               ; preds = %42, %41
  %48 = phi i32 [ 64, %41 ], [ %46, %42 ]
  %49 = add nsw i32 57, %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 1
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = call noalias i8* @malloc(i64 noundef %53) #7
  %55 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  store i8* %54, i8** %55, align 8
  %56 = icmp eq i8* null, %54
  br i1 %56, label %57, label %60

57:                                               ; preds = %47
  %58 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %59 = bitcast %struct.tdefl_compressor* %58 to i8*
  call void @free(i8* noundef %59) #7
  store i8* null, i8** %8, align 8
  br label %243

60:                                               ; preds = %47
  store i32 41, i32* %21, align 4
  br label %61

61:                                               ; preds = %68, %60
  %62 = load i32, i32* %21, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = bitcast i32* %21 to i8*
  %66 = bitcast %struct.tdefl_output_buffer* %17 to i8*
  %67 = call i32 @tdefl_output_buffer_putter(i8* noundef %65, i32 noundef 1, i8* noundef %66)
  br label %68

68:                                               ; preds = %64
  %69 = load i32, i32* %21, align 4
  %70 = add nsw i32 %69, -1
  store i32 %70, i32* %21, align 4
  br label %61, !llvm.loop !105

71:                                               ; preds = %61
  %72 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %73 = bitcast %struct.tdefl_output_buffer* %17 to i8*
  %74 = load i32, i32* %14, align 4
  %75 = icmp ult i32 10, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  br label %79

77:                                               ; preds = %71
  %78 = load i32, i32* %14, align 4
  br label %79

79:                                               ; preds = %77, %76
  %80 = phi i32 [ 10, %76 ], [ %78, %77 ]
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [11 x i32], [11 x i32]* @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = or i32 %83, 4096
  %85 = call i32 @tdefl_init(%struct.tdefl_compressor* noundef %72, i32 (i8*, i32, i8*)* noundef @tdefl_output_buffer_putter, i8* noundef %73, i32 noundef %84)
  store i32 0, i32* %20, align 4
  br label %86

86:                                               ; preds = %114, %79
  %87 = load i32, i32* %20, align 4
  %88 = load i32, i32* %11, align 4
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %90, label %117

90:                                               ; preds = %86
  %91 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %92 = bitcast i32* %21 to i8*
  %93 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %91, i8* noundef %92, i64 noundef 1, i32 noundef 0)
  %94 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %95 = load i8*, i8** %9, align 8
  %96 = load i32, i32* %15, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %90
  %99 = load i32, i32* %11, align 4
  %100 = sub nsw i32 %99, 1
  %101 = load i32, i32* %20, align 4
  %102 = sub nsw i32 %100, %101
  br label %105

103:                                              ; preds = %90
  %104 = load i32, i32* %20, align 4
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i32 [ %102, %98 ], [ %104, %103 ]
  %107 = load i32, i32* %19, align 4
  %108 = mul nsw i32 %106, %107
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %95, i64 %109
  %111 = load i32, i32* %19, align 4
  %112 = sext i32 %111 to i64
  %113 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %94, i8* noundef %110, i64 noundef %112, i32 noundef 0)
  br label %114

114:                                              ; preds = %105
  %115 = load i32, i32* %20, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %20, align 4
  br label %86, !llvm.loop !106

117:                                              ; preds = %86
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %119 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %118, i8* noundef null, i64 noundef 0, i32 noundef 4)
  %120 = icmp ne i32 %119, 1
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %123 = bitcast %struct.tdefl_compressor* %122 to i8*
  call void @free(i8* noundef %123) #7
  %124 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  %125 = load i8*, i8** %124, align 8
  call void @free(i8* noundef %125) #7
  store i8* null, i8** %8, align 8
  br label %243

126:                                              ; preds = %117
  %127 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %128, 41
  %130 = load i64*, i64** %13, align 8
  store i64 %129, i64* %130, align 8
  %131 = bitcast [41 x i8]* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %131, i8* align 16 getelementptr inbounds ([41 x i8], [41 x i8]* @__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr, i32 0, i32 0), i64 41, i1 false)
  %132 = load i32, i32* %10, align 4
  %133 = ashr i32 %132, 8
  %134 = trunc i32 %133 to i8
  %135 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 18
  store i8 %134, i8* %135, align 2
  %136 = load i32, i32* %10, align 4
  %137 = trunc i32 %136 to i8
  %138 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 19
  store i8 %137, i8* %138, align 1
  %139 = load i32, i32* %11, align 4
  %140 = ashr i32 %139, 8
  %141 = trunc i32 %140 to i8
  %142 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 22
  store i8 %141, i8* %142, align 2
  %143 = load i32, i32* %11, align 4
  %144 = trunc i32 %143 to i8
  %145 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 23
  store i8 %144, i8* %145, align 1
  %146 = load i32, i32* %12, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [5 x i8], [5 x i8]* @tdefl_write_image_to_png_file_in_memory_ex.chans, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 25
  store i8 %149, i8* %150, align 1
  %151 = load i64*, i64** %13, align 8
  %152 = load i64, i64* %151, align 8
  %153 = lshr i64 %152, 24
  %154 = trunc i64 %153 to i8
  %155 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 33
  store i8 %154, i8* %155, align 1
  %156 = load i64*, i64** %13, align 8
  %157 = load i64, i64* %156, align 8
  %158 = lshr i64 %157, 16
  %159 = trunc i64 %158 to i8
  %160 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 34
  store i8 %159, i8* %160, align 2
  %161 = load i64*, i64** %13, align 8
  %162 = load i64, i64* %161, align 8
  %163 = lshr i64 %162, 8
  %164 = trunc i64 %163 to i8
  %165 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 35
  store i8 %164, i8* %165, align 1
  %166 = load i64*, i64** %13, align 8
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 36
  store i8 %168, i8* %169, align 4
  %170 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 0
  %171 = getelementptr inbounds i8, i8* %170, i64 12
  %172 = call i64 @mz_crc32(i64 noundef 0, i8* noundef %171, i64 noundef 17)
  %173 = trunc i64 %172 to i32
  store i32 %173, i32* %22, align 4
  store i32 0, i32* %18, align 4
  br label %174

174:                                              ; preds = %186, %126
  %175 = load i32, i32* %18, align 4
  %176 = icmp slt i32 %175, 4
  br i1 %176, label %177, label %191

177:                                              ; preds = %174
  %178 = load i32, i32* %22, align 4
  %179 = lshr i32 %178, 24
  %180 = trunc i32 %179 to i8
  %181 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 0
  %182 = getelementptr inbounds i8, i8* %181, i64 29
  %183 = load i32, i32* %18, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %182, i64 %184
  store i8 %180, i8* %185, align 1
  br label %186

186:                                              ; preds = %177
  %187 = load i32, i32* %18, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %18, align 4
  %189 = load i32, i32* %22, align 4
  %190 = shl i32 %189, 8
  store i32 %190, i32* %22, align 4
  br label %174, !llvm.loop !107

191:                                              ; preds = %174
  %192 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds [41 x i8], [41 x i8]* %23, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %193, i8* align 16 %194, i64 41, i1 false)
  %195 = bitcast %struct.tdefl_output_buffer* %17 to i8*
  %196 = call i32 @tdefl_output_buffer_putter(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 noundef 16, i8* noundef %195)
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %191
  %199 = load i64*, i64** %13, align 8
  store i64 0, i64* %199, align 8
  %200 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %201 = bitcast %struct.tdefl_compressor* %200 to i8*
  call void @free(i8* noundef %201) #7
  %202 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  %203 = load i8*, i8** %202, align 8
  call void @free(i8* noundef %203) #7
  store i8* null, i8** %8, align 8
  br label %243

204:                                              ; preds = %191
  %205 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  %206 = load i8*, i8** %205, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 41
  %208 = getelementptr inbounds i8, i8* %207, i64 -4
  %209 = load i64*, i64** %13, align 8
  %210 = load i64, i64* %209, align 8
  %211 = add i64 %210, 4
  %212 = call i64 @mz_crc32(i64 noundef 0, i8* noundef %208, i64 noundef %211)
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %22, align 4
  store i32 0, i32* %18, align 4
  br label %214

214:                                              ; preds = %230, %204
  %215 = load i32, i32* %18, align 4
  %216 = icmp slt i32 %215, 4
  br i1 %216, label %217, label %235

217:                                              ; preds = %214
  %218 = load i32, i32* %22, align 4
  %219 = lshr i32 %218, 24
  %220 = trunc i32 %219 to i8
  %221 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds i8, i8* %222, i64 %224
  %226 = getelementptr inbounds i8, i8* %225, i64 -16
  %227 = load i32, i32* %18, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, i8* %226, i64 %228
  store i8 %220, i8* %229, align 1
  br label %230

230:                                              ; preds = %217
  %231 = load i32, i32* %18, align 4
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %18, align 4
  %233 = load i32, i32* %22, align 4
  %234 = shl i32 %233, 8
  store i32 %234, i32* %22, align 4
  br label %214, !llvm.loop !108

235:                                              ; preds = %214
  %236 = load i64*, i64** %13, align 8
  %237 = load i64, i64* %236, align 8
  %238 = add i64 %237, 57
  store i64 %238, i64* %236, align 8
  %239 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %16, align 8
  %240 = bitcast %struct.tdefl_compressor* %239 to i8*
  call void @free(i8* noundef %240) #7
  %241 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %17, i32 0, i32 2
  %242 = load i8*, i8** %241, align 8
  store i8* %242, i8** %8, align 8
  br label %243

243:                                              ; preds = %235, %198, %121, %57, %32
  %244 = load i8*, i8** %8, align 8
  ret i8* %244
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tdefl_write_image_to_png_file_in_memory(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i64* noundef %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i64* %4, i64** %10, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load i32, i32* %8, align 4
  %14 = load i32, i32* %9, align 4
  %15 = load i64*, i64** %10, align 8
  %16 = call i8* @tdefl_write_image_to_png_file_in_memory_ex(i8* noundef %11, i32 noundef %12, i32 noundef %13, i32 noundef %14, i64* noundef %15, i32 noundef 6, i32 noundef 0)
  ret i8* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tdefl_compressor* @tdefl_compressor_alloc() #0 {
  %1 = call noalias i8* @malloc(i64 noundef 319352) #7
  %2 = bitcast i8* %1 to %struct.tdefl_compressor*
  ret %struct.tdefl_compressor* %2
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @tdefl_compressor_free(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  %3 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %4 = bitcast %struct.tdefl_compressor* %3 to i8*
  call void @free(i8* noundef %4) #7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tinfl_clear_tree(%struct.tinfl_decompressor_tag* noundef %0) #0 {
  %2 = alloca %struct.tinfl_decompressor_tag*, align 8
  store %struct.tinfl_decompressor_tag* %0, %struct.tinfl_decompressor_tag** %2, align 8
  %3 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %4 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %3, i32 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %9 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %8, i32 0, i32 15
  %10 = getelementptr inbounds [576 x i16], [576 x i16]* %9, i64 0, i64 0
  %11 = bitcast i16* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 1152, i1 false)
  br label %28

12:                                               ; preds = %1
  %13 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %14 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %13, i32 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %19 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %18, i32 0, i32 16
  %20 = getelementptr inbounds [64 x i16], [64 x i16]* %19, i64 0, i64 0
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 128, i1 false)
  br label %27

22:                                               ; preds = %12
  %23 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %24 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %23, i32 0, i32 17
  %25 = getelementptr inbounds [38 x i16], [38 x i16]* %24, i64 0, i64 0
  %26 = bitcast i16* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 76, i1 false)
  br label %27

27:                                               ; preds = %22, %17
  br label %28

28:                                               ; preds = %27, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tinfl_decompress_mem_to_heap(i8* noundef %0, i64 noundef %1, i64* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.tinfl_decompressor_tag, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  store i8* null, i8** %11, align 8
  store i64 0, i64* %13, align 8
  store i64 0, i64* %14, align 8
  %19 = load i64*, i64** %8, align 8
  store i64 0, i64* %19, align 8
  br label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %10, i32 0, i32 0
  store i32 0, i32* %21, align 8
  br label %22

22:                                               ; preds = %20
  br label %23

23:                                               ; preds = %83, %22
  %24 = load i64, i64* %7, align 8
  %25 = load i64, i64* %13, align 8
  %26 = sub i64 %24, %25
  store i64 %26, i64* %15, align 8
  %27 = load i64, i64* %14, align 8
  %28 = load i64*, i64** %8, align 8
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  store i64 %30, i64* %16, align 8
  %31 = load i8*, i8** %6, align 8
  %32 = load i64, i64* %13, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = load i8*, i8** %11, align 8
  %35 = load i8*, i8** %11, align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %23
  %38 = load i8*, i8** %11, align 8
  %39 = load i64*, i64** %8, align 8
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  br label %43

42:                                               ; preds = %23
  br label %43

43:                                               ; preds = %42, %37
  %44 = phi i8* [ %41, %37 ], [ null, %42 ]
  %45 = load i32, i32* %9, align 4
  %46 = and i32 %45, -3
  %47 = or i32 %46, 4
  %48 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %10, i8* noundef %33, i64* noundef %15, i8* noundef %34, i8* noundef %44, i64* noundef %16, i32 noundef %47)
  store i32 %48, i32* %18, align 4
  %49 = load i32, i32* %18, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = load i32, i32* %18, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %57

54:                                               ; preds = %51, %43
  %55 = load i8*, i8** %11, align 8
  call void @free(i8* noundef %55) #7
  %56 = load i64*, i64** %8, align 8
  store i64 0, i64* %56, align 8
  store i8* null, i8** %5, align 8
  br label %88

57:                                               ; preds = %51
  %58 = load i64, i64* %15, align 8
  %59 = load i64, i64* %13, align 8
  %60 = add i64 %59, %58
  store i64 %60, i64* %13, align 8
  %61 = load i64, i64* %16, align 8
  %62 = load i64*, i64** %8, align 8
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %18, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %57
  br label %86

68:                                               ; preds = %57
  %69 = load i64, i64* %14, align 8
  %70 = mul i64 %69, 2
  store i64 %70, i64* %17, align 8
  %71 = load i64, i64* %17, align 8
  %72 = icmp ult i64 %71, 128
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  store i64 128, i64* %17, align 8
  br label %74

74:                                               ; preds = %73, %68
  %75 = load i8*, i8** %11, align 8
  %76 = load i64, i64* %17, align 8
  %77 = call i8* @realloc(i8* noundef %75, i64 noundef %76) #7
  store i8* %77, i8** %12, align 8
  %78 = load i8*, i8** %12, align 8
  %79 = icmp ne i8* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = load i8*, i8** %11, align 8
  call void @free(i8* noundef %81) #7
  %82 = load i64*, i64** %8, align 8
  store i64 0, i64* %82, align 8
  store i8* null, i8** %5, align 8
  br label %88

83:                                               ; preds = %74
  %84 = load i8*, i8** %12, align 8
  store i8* %84, i8** %11, align 8
  %85 = load i64, i64* %17, align 8
  store i64 %85, i64* %14, align 8
  br label %23

86:                                               ; preds = %67
  %87 = load i8*, i8** %11, align 8
  store i8* %87, i8** %5, align 8
  br label %88

88:                                               ; preds = %86, %80, %54
  %89 = load i8*, i8** %5, align 8
  ret i8* %89
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @tinfl_decompress_mem_to_mem(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.tinfl_decompressor_tag, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  br label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %11, i32 0, i32 0
  store i32 0, i32* %14, align 8
  br label %15

15:                                               ; preds = %13
  %16 = load i8*, i8** %8, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = load i8*, i8** %6, align 8
  %19 = load i32, i32* %10, align 4
  %20 = and i32 %19, -3
  %21 = or i32 %20, 4
  %22 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %11, i8* noundef %16, i64* noundef %9, i8* noundef %17, i8* noundef %18, i64* noundef %7, i32 noundef %21)
  store i32 %22, i32* %12, align 4
  %23 = load i32, i32* %12, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %15
  br label %28

26:                                               ; preds = %15
  %27 = load i64, i64* %7, align 8
  br label %28

28:                                               ; preds = %26, %25
  %29 = phi i64 [ -1, %25 ], [ %27, %26 ]
  ret i64 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tinfl_decompress_mem_to_callback(i8* noundef %0, i64* noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32 (i8*, i32, i8*)*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.tinfl_decompressor_tag, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i64* %1, i64** %8, align 8
  store i32 (i8*, i32, i8*)* %2, i32 (i8*, i32, i8*)** %9, align 8
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %20 = call noalias i8* @malloc(i64 noundef 32768) #7
  store i8* %20, i8** %14, align 8
  store i64 0, i64* %15, align 8
  store i64 0, i64* %16, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %5
  store i32 -1, i32* %6, align 4
  br label %79

24:                                               ; preds = %5
  %25 = load i8*, i8** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 0, i64 32768, i1 false)
  br label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %13, i32 0, i32 0
  store i32 0, i32* %27, align 8
  br label %28

28:                                               ; preds = %26
  br label %29

29:                                               ; preds = %69, %28
  %30 = load i64*, i64** %8, align 8
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %15, align 8
  %33 = sub i64 %31, %32
  store i64 %33, i64* %17, align 8
  %34 = load i64, i64* %16, align 8
  %35 = sub i64 32768, %34
  store i64 %35, i64* %18, align 8
  %36 = load i8*, i8** %7, align 8
  %37 = load i64, i64* %15, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i8*, i8** %14, align 8
  %40 = load i8*, i8** %14, align 8
  %41 = load i64, i64* %16, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = load i32, i32* %11, align 4
  %44 = and i32 %43, -7
  %45 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %13, i8* noundef %38, i64* noundef %17, i8* noundef %39, i8* noundef %42, i64* noundef %18, i32 noundef %44)
  store i32 %45, i32* %19, align 4
  %46 = load i64, i64* %17, align 8
  %47 = load i64, i64* %15, align 8
  %48 = add i64 %47, %46
  store i64 %48, i64* %15, align 8
  %49 = load i64, i64* %18, align 8
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %29
  %52 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %9, align 8
  %53 = load i8*, i8** %14, align 8
  %54 = load i64, i64* %16, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = load i64, i64* %18, align 8
  %57 = trunc i64 %56 to i32
  %58 = load i8*, i8** %10, align 8
  %59 = call i32 %52(i8* noundef %55, i32 noundef %57, i8* noundef %58)
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %51
  br label %74

62:                                               ; preds = %51, %29
  %63 = load i32, i32* %19, align 4
  %64 = icmp ne i32 %63, 2
  br i1 %64, label %65, label %69

65:                                               ; preds = %62
  %66 = load i32, i32* %19, align 4
  %67 = icmp eq i32 %66, 0
  %68 = zext i1 %67 to i32
  store i32 %68, i32* %12, align 4
  br label %74

69:                                               ; preds = %62
  %70 = load i64, i64* %16, align 8
  %71 = load i64, i64* %18, align 8
  %72 = add i64 %70, %71
  %73 = and i64 %72, 32767
  store i64 %73, i64* %16, align 8
  br label %29

74:                                               ; preds = %65, %61
  %75 = load i8*, i8** %14, align 8
  call void @free(i8* noundef %75) #7
  %76 = load i64, i64* %15, align 8
  %77 = load i64*, i64** %8, align 8
  store i64 %76, i64* %77, align 8
  %78 = load i32, i32* %12, align 4
  store i32 %78, i32* %6, align 4
  br label %79

79:                                               ; preds = %74, %23
  %80 = load i32, i32* %6, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tinfl_decompressor_tag* @tinfl_decompressor_alloc() #0 {
  %1 = alloca %struct.tinfl_decompressor_tag*, align 8
  %2 = call noalias i8* @malloc(i64 noundef 8376) #7
  %3 = bitcast i8* %2 to %struct.tinfl_decompressor_tag*
  store %struct.tinfl_decompressor_tag* %3, %struct.tinfl_decompressor_tag** %1, align 8
  %4 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %1, align 8
  %5 = icmp ne %struct.tinfl_decompressor_tag* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %0
  br label %7

7:                                                ; preds = %6
  %8 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %1, align 8
  %9 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %8, i32 0, i32 0
  store i32 0, i32* %9, align 8
  br label %10

10:                                               ; preds = %7
  br label %11

11:                                               ; preds = %10, %0
  %12 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %1, align 8
  ret %struct.tinfl_decompressor_tag* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @tinfl_decompressor_free(%struct.tinfl_decompressor_tag* noundef %0) #0 {
  %2 = alloca %struct.tinfl_decompressor_tag*, align 8
  store %struct.tinfl_decompressor_tag* %0, %struct.tinfl_decompressor_tag** %2, align 8
  %3 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %4 = bitcast %struct.tinfl_decompressor_tag* %3 to i8*
  call void @free(i8* noundef %4) #7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mz_zip_zero_struct(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = icmp ne %struct.mz_zip_archive* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %7 = bitcast %struct.mz_zip_archive* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 112, i1 false)
  br label %8

8:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_end(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %3, i32 noundef 1)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca %struct.mz_zip_array*, align 8
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca %struct.mz_zip_array*, align 8
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca %struct.mz_zip_array*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.mz_zip_internal_state_tag*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %10, align 8
  store i32 %1, i32* %11, align 4
  store i32 1, i32* %12, align 4
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %15 = icmp ne %struct.mz_zip_archive* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  store i32 0, i32* %9, align 4
  br label %136

17:                                               ; preds = %2
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %18, i32 0, i32 15
  %20 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %19, align 8
  %21 = icmp ne %struct.mz_zip_internal_state_tag* %20, null
  br i1 %21, label %22, label %37

22:                                               ; preds = %17
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %23, i32 0, i32 7
  %25 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %24, align 8
  %26 = icmp ne i8* (i8*, i64, i64)* %25, null
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %28, i32 0, i32 8
  %30 = load void (i8*, i8*)*, void (i8*, i8*)** %29, align 8
  %31 = icmp ne void (i8*, i8*)* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32, %27, %22, %17
  %38 = load i32, i32* %11, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %41, i32 0, i32 5
  store i32 24, i32* %42, align 4
  br label %43

43:                                               ; preds = %40, %37
  store i32 0, i32* %9, align 4
  br label %136

44:                                               ; preds = %32
  %45 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %45, i32 0, i32 15
  %47 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %46, align 8
  %48 = icmp ne %struct.mz_zip_internal_state_tag* %47, null
  br i1 %48, label %49, label %132

49:                                               ; preds = %44
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %50, i32 0, i32 15
  %52 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %51, align 8
  store %struct.mz_zip_internal_state_tag* %52, %struct.mz_zip_internal_state_tag** %13, align 8
  %53 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %53, i32 0, i32 15
  store %struct.mz_zip_internal_state_tag* null, %struct.mz_zip_internal_state_tag** %54, align 8
  %55 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %56 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %57 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %56, i32 0, i32 0
  store %struct.mz_zip_archive* %55, %struct.mz_zip_archive** %3, align 8
  store %struct.mz_zip_array* %57, %struct.mz_zip_array** %4, align 8
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %58, i32 0, i32 8
  %60 = load void (i8*, i8*)*, void (i8*, i8*)** %59, align 8
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %61, i32 0, i32 10
  %63 = load i8*, i8** %62, align 8
  %64 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %65 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %64, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void %60(i8* noundef %63, i8* noundef %66) #7
  %67 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %68 = bitcast %struct.mz_zip_array* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #7
  %69 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %70 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %71 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %70, i32 0, i32 1
  store %struct.mz_zip_archive* %69, %struct.mz_zip_archive** %5, align 8
  store %struct.mz_zip_array* %71, %struct.mz_zip_array** %6, align 8
  %72 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %72, i32 0, i32 8
  %74 = load void (i8*, i8*)*, void (i8*, i8*)** %73, align 8
  %75 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %75, i32 0, i32 10
  %77 = load i8*, i8** %76, align 8
  %78 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %79 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %78, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void %74(i8* noundef %77, i8* noundef %80) #7
  %81 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %82 = bitcast %struct.mz_zip_array* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 32, i1 false) #7
  %83 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %84 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %85 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %84, i32 0, i32 2
  store %struct.mz_zip_archive* %83, %struct.mz_zip_archive** %7, align 8
  store %struct.mz_zip_array* %85, %struct.mz_zip_array** %8, align 8
  %86 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %86, i32 0, i32 8
  %88 = load void (i8*, i8*)*, void (i8*, i8*)** %87, align 8
  %89 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %89, i32 0, i32 10
  %91 = load i8*, i8** %90, align 8
  %92 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %93 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void %88(i8* noundef %91, i8* noundef %94) #7
  %95 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %96 = bitcast %struct.mz_zip_array* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false) #7
  %97 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %98 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %97, i32 0, i32 6
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %98, align 8
  %100 = icmp ne %struct._IO_FILE* %99, null
  br i1 %100, label %101, label %123

101:                                              ; preds = %49
  %102 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %103 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %102, i32 0, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 4
  br i1 %105, label %106, label %120

106:                                              ; preds = %101
  %107 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %108 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %107, i32 0, i32 6
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %108, align 8
  %110 = call i32 @fclose(%struct._IO_FILE* noundef %109)
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %112, label %119

112:                                              ; preds = %106
  %113 = load i32, i32* %11, align 4
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  %116 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %117 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %116, i32 0, i32 5
  store i32 21, i32* %117, align 4
  br label %118

118:                                              ; preds = %115, %112
  store i32 0, i32* %12, align 4
  br label %119

119:                                              ; preds = %118, %106
  br label %120

120:                                              ; preds = %119, %101
  %121 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %122 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %121, i32 0, i32 6
  store %struct._IO_FILE* null, %struct._IO_FILE** %122, align 8
  br label %123

123:                                              ; preds = %120, %49
  %124 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %125 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %124, i32 0, i32 8
  %126 = load void (i8*, i8*)*, void (i8*, i8*)** %125, align 8
  %127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %127, i32 0, i32 10
  %129 = load i8*, i8** %128, align 8
  %130 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %131 = bitcast %struct.mz_zip_internal_state_tag* %130 to i8*
  call void %126(i8* noundef %129, i8* noundef %131)
  br label %132

132:                                              ; preds = %123, %44
  %133 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %133, i32 0, i32 3
  store i32 0, i32* %134, align 4
  %135 = load i32, i32* %12, align 4
  store i32 %135, i32* %9, align 4
  br label %136

136:                                              ; preds = %132, %43, %16
  %137 = load i32, i32* %9, align 4
  ret i32 %137
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_init(%struct.mz_zip_archive* noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32 %2, i32* %9, align 4
  %10 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %11 = icmp ne %struct.mz_zip_archive* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %13, i32 0, i32 11
  %15 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %14, align 8
  %16 = icmp ne i64 (i8*, i64, i8*, i64)* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %12, %3
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  store %struct.mz_zip_archive* %18, %struct.mz_zip_archive** %4, align 8
  store i32 24, i32* %5, align 4
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %20 = icmp ne %struct.mz_zip_archive* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load i32, i32* %5, align 4
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %23, i32 0, i32 5
  store i32 %22, i32* %24, align 4
  br label %25

25:                                               ; preds = %17, %21
  store i32 0, i32* %6, align 4
  br label %46

26:                                               ; preds = %12
  %27 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %28 = load i32, i32* %9, align 4
  %29 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive* noundef %27, i32 noundef %28)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  store i32 0, i32* %6, align 4
  br label %46

32:                                               ; preds = %26
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %33, i32 0, i32 4
  store i32 1, i32* %34, align 8
  %35 = load i64, i64* %8, align 8
  %36 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %36, i32 0, i32 0
  store i64 %35, i64* %37, align 8
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %39 = load i32, i32* %9, align 4
  %40 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive* noundef %38, i32 noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %32
  %43 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %44 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %43, i32 noundef 0)
  store i32 0, i32* %6, align 4
  br label %46

45:                                               ; preds = %32
  store i32 1, i32* %6, align 4
  br label %46

46:                                               ; preds = %45, %42, %31, %25
  %47 = load i32, i32* %6, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %8, align 8
  store i32 %1, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %12 = icmp ne %struct.mz_zip_archive* %11, null
  br i1 %12, label %13, label %23

13:                                               ; preds = %2
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %14, i32 0, i32 15
  %16 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %15, align 8
  %17 = icmp ne %struct.mz_zip_internal_state_tag* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %18, %13, %2
  %24 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  store %struct.mz_zip_archive* %24, %struct.mz_zip_archive** %3, align 8
  store i32 24, i32* %4, align 4
  %25 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %26 = icmp ne %struct.mz_zip_archive* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = load i32, i32* %4, align 4
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %29, i32 0, i32 5
  store i32 %28, i32* %30, align 4
  br label %31

31:                                               ; preds = %23, %27
  store i32 0, i32* %7, align 4
  br label %120

32:                                               ; preds = %18
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %33, i32 0, i32 7
  %35 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %34, align 8
  %36 = icmp ne i8* (i8*, i64, i64)* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %38, i32 0, i32 7
  store i8* (i8*, i64, i64)* @miniz_def_alloc_func, i8* (i8*, i64, i64)** %39, align 8
  br label %40

40:                                               ; preds = %37, %32
  %41 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %41, i32 0, i32 8
  %43 = load void (i8*, i8*)*, void (i8*, i8*)** %42, align 8
  %44 = icmp ne void (i8*, i8*)* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %46, i32 0, i32 8
  store void (i8*, i8*)* @miniz_def_free_func, void (i8*, i8*)** %47, align 8
  br label %48

48:                                               ; preds = %45, %40
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %49, i32 0, i32 9
  %51 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %50, align 8
  %52 = icmp ne i8* (i8*, i8*, i64, i64)* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %54, i32 0, i32 9
  store i8* (i8*, i8*, i64, i64)* @miniz_def_realloc_func, i8* (i8*, i8*, i64, i64)** %55, align 8
  br label %56

56:                                               ; preds = %53, %48
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %57, i32 0, i32 0
  store i64 0, i64* %58, align 8
  %59 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %59, i32 0, i32 1
  store i64 0, i64* %60, align 8
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %61, i32 0, i32 2
  store i32 0, i32* %62, align 8
  %63 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %63, i32 0, i32 5
  store i32 0, i32* %64, align 4
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %65, i32 0, i32 7
  %67 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %66, align 8
  %68 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %68, i32 0, i32 10
  %70 = load i8*, i8** %69, align 8
  %71 = call i8* %67(i8* noundef %70, i64 noundef 1, i64 noundef 152)
  %72 = bitcast i8* %71 to %struct.mz_zip_internal_state_tag*
  %73 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %73, i32 0, i32 15
  store %struct.mz_zip_internal_state_tag* %72, %struct.mz_zip_internal_state_tag** %74, align 8
  %75 = icmp eq %struct.mz_zip_internal_state_tag* null, %72
  br i1 %75, label %76, label %85

76:                                               ; preds = %56
  %77 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  store %struct.mz_zip_archive* %77, %struct.mz_zip_archive** %5, align 8
  store i32 16, i32* %6, align 4
  %78 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %79 = icmp ne %struct.mz_zip_archive* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = load i32, i32* %6, align 4
  %82 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %82, i32 0, i32 5
  store i32 %81, i32* %83, align 4
  br label %84

84:                                               ; preds = %76, %80
  store i32 0, i32* %7, align 4
  br label %120

85:                                               ; preds = %56
  %86 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %86, i32 0, i32 15
  %88 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %87, align 8
  %89 = bitcast %struct.mz_zip_internal_state_tag* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 152, i1 false)
  %90 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %90, i32 0, i32 15
  %92 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %91, align 8
  %93 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %92, i32 0, i32 0
  %94 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %93, i32 0, i32 3
  store i32 1, i32* %94, align 8
  %95 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %96 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %95, i32 0, i32 15
  %97 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %96, align 8
  %98 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %97, i32 0, i32 1
  %99 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %98, i32 0, i32 3
  store i32 4, i32* %99, align 8
  %100 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %100, i32 0, i32 15
  %102 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %101, align 8
  %103 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %102, i32 0, i32 2
  %104 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %103, i32 0, i32 3
  store i32 4, i32* %104, align 8
  %105 = load i32, i32* %9, align 4
  %106 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %107 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %106, i32 0, i32 15
  %108 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %107, align 8
  %109 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %108, i32 0, i32 3
  store i32 %105, i32* %109, align 8
  %110 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %110, i32 0, i32 15
  %112 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %111, align 8
  %113 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %112, i32 0, i32 4
  store i32 0, i32* %113, align 4
  %114 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %114, i32 0, i32 15
  %116 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %115, align 8
  %117 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %116, i32 0, i32 5
  store i32 0, i32* %117, align 8
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %119 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %118, i32 0, i32 3
  store i32 1, i32* %119, align 4
  store i32 1, i32* %7, align 4
  br label %120

120:                                              ; preds = %85, %84, %31
  %121 = load i32, i32* %7, align 4
  ret i32 %121
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca %struct.mz_zip_array*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca %struct.mz_zip_array*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca %struct.mz_zip_array*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.mz_zip_archive*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct.mz_zip_archive*, align 8
  %27 = alloca i32, align 4
  %28 = alloca %struct.mz_zip_archive*, align 8
  %29 = alloca i32, align 4
  %30 = alloca %struct.mz_zip_archive*, align 8
  %31 = alloca i32, align 4
  %32 = alloca %struct.mz_zip_archive*, align 8
  %33 = alloca i32, align 4
  %34 = alloca %struct.mz_zip_archive*, align 8
  %35 = alloca i32, align 4
  %36 = alloca %struct.mz_zip_archive*, align 8
  %37 = alloca i32, align 4
  %38 = alloca %struct.mz_zip_archive*, align 8
  %39 = alloca i32, align 4
  %40 = alloca %struct.mz_zip_archive*, align 8
  %41 = alloca i32, align 4
  %42 = alloca %struct.mz_zip_archive*, align 8
  %43 = alloca i32, align 4
  %44 = alloca %struct.mz_zip_archive*, align 8
  %45 = alloca i32, align 4
  %46 = alloca %struct.mz_zip_archive*, align 8
  %47 = alloca i32, align 4
  %48 = alloca %struct.mz_zip_archive*, align 8
  %49 = alloca i32, align 4
  %50 = alloca %struct.mz_zip_archive*, align 8
  %51 = alloca i32, align 4
  %52 = alloca %struct.mz_zip_archive*, align 8
  %53 = alloca i32, align 4
  %54 = alloca %struct.mz_zip_archive*, align 8
  %55 = alloca i32, align 4
  %56 = alloca %struct.mz_zip_archive*, align 8
  %57 = alloca i32, align 4
  %58 = alloca %struct.mz_zip_archive*, align 8
  %59 = alloca i32, align 4
  %60 = alloca %struct.mz_zip_archive*, align 8
  %61 = alloca i32, align 4
  %62 = alloca %struct.mz_zip_archive*, align 8
  %63 = alloca i32, align 4
  %64 = alloca %struct.mz_zip_archive*, align 8
  %65 = alloca i32, align 4
  %66 = alloca %struct.mz_zip_archive*, align 8
  %67 = alloca i32, align 4
  %68 = alloca %struct.mz_zip_archive*, align 8
  %69 = alloca i32, align 4
  %70 = alloca %struct.mz_zip_archive*, align 8
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca %struct.mz_zip_archive*, align 8
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca i8*, align 8
  %82 = alloca [1024 x i32], align 16
  %83 = alloca i8*, align 8
  %84 = alloca i32, align 4
  %85 = alloca [5 x i32], align 16
  %86 = alloca i8*, align 8
  %87 = alloca [14 x i32], align 16
  %88 = alloca i8*, align 8
  %89 = alloca i64, align 8
  %90 = alloca i32, align 4
  %91 = alloca i64, align 8
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  %94 = alloca i64, align 8
  %95 = alloca i32, align 4
  %96 = alloca i32, align 4
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca i32, align 4
  %100 = alloca i32, align 4
  %101 = alloca i32, align 4
  %102 = alloca i64, align 8
  %103 = alloca i64, align 8
  %104 = alloca i64, align 8
  %105 = alloca i32, align 4
  %106 = alloca i8*, align 8
  %107 = alloca i8*, align 8
  %108 = alloca i32, align 4
  %109 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %73, align 8
  store i32 %1, i32* %74, align 4
  store i32 0, i32* %75, align 4
  store i32 0, i32* %76, align 4
  store i32 0, i32* %77, align 4
  store i32 0, i32* %78, align 4
  store i64 0, i64* %79, align 8
  store i64 0, i64* %80, align 8
  %110 = getelementptr inbounds [1024 x i32], [1024 x i32]* %82, i64 0, i64 0
  %111 = bitcast i32* %110 to i8*
  store i8* %111, i8** %83, align 8
  %112 = load i32, i32* %74, align 4
  %113 = and i32 %112, 2048
  %114 = icmp eq i32 %113, 0
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %84, align 4
  %116 = getelementptr inbounds [5 x i32], [5 x i32]* %85, i64 0, i64 0
  %117 = bitcast i32* %116 to i8*
  store i8* %117, i8** %86, align 8
  %118 = getelementptr inbounds [14 x i32], [14 x i32]* %87, i64 0, i64 0
  %119 = bitcast i32* %118 to i8*
  store i8* %119, i8** %88, align 8
  store i64 0, i64* %89, align 8
  %120 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %121 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %120, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = icmp ult i64 %122, 22
  br i1 %123, label %124, label %133

124:                                              ; preds = %2
  %125 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %125, %struct.mz_zip_archive** %18, align 8
  store i32 8, i32* %19, align 4
  %126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %127 = icmp ne %struct.mz_zip_archive* %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = load i32, i32* %19, align 4
  %130 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %130, i32 0, i32 5
  store i32 %129, i32* %131, align 4
  br label %132

132:                                              ; preds = %124, %128
  store i32 0, i32* %72, align 4
  br label %1751

133:                                              ; preds = %2
  %134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %135 = call i32 @mz_zip_reader_locate_header_sig(%struct.mz_zip_archive* noundef %134, i32 noundef 101010256, i32 noundef 22, i64* noundef %80)
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %146, label %137

137:                                              ; preds = %133
  %138 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %138, %struct.mz_zip_archive** %20, align 8
  store i32 7, i32* %21, align 4
  %139 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %140 = icmp ne %struct.mz_zip_archive* %139, null
  br i1 %140, label %141, label %145

141:                                              ; preds = %137
  %142 = load i32, i32* %21, align 4
  %143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %144 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %143, i32 0, i32 5
  store i32 %142, i32* %144, align 4
  br label %145

145:                                              ; preds = %137, %141
  store i32 0, i32* %72, align 4
  br label %1751

146:                                              ; preds = %133
  %147 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %147, i32 0, i32 11
  %149 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %148, align 8
  %150 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %151 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %150, i32 0, i32 14
  %152 = load i8*, i8** %151, align 8
  %153 = load i64, i64* %80, align 8
  %154 = load i8*, i8** %83, align 8
  %155 = call i64 %149(i8* noundef %152, i64 noundef %153, i8* noundef %154, i64 noundef 22)
  %156 = icmp ne i64 %155, 22
  br i1 %156, label %157, label %166

157:                                              ; preds = %146
  %158 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %158, %struct.mz_zip_archive** %22, align 8
  store i32 20, i32* %23, align 4
  %159 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %160 = icmp ne %struct.mz_zip_archive* %159, null
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = load i32, i32* %23, align 4
  %163 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %164 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %163, i32 0, i32 5
  store i32 %162, i32* %164, align 4
  br label %165

165:                                              ; preds = %157, %161
  store i32 0, i32* %72, align 4
  br label %1751

166:                                              ; preds = %146
  %167 = load i8*, i8** %83, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 0
  %169 = getelementptr inbounds i8, i8* %168, i64 0
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = load i8*, i8** %83, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 0
  %174 = getelementptr inbounds i8, i8* %173, i64 1
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl i32 %176, 8
  %178 = or i32 %171, %177
  %179 = load i8*, i8** %83, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 0
  %181 = getelementptr inbounds i8, i8* %180, i64 2
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl i32 %183, 16
  %185 = or i32 %178, %184
  %186 = load i8*, i8** %83, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 0
  %188 = getelementptr inbounds i8, i8* %187, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = shl i32 %190, 24
  %192 = or i32 %185, %191
  %193 = icmp ne i32 %192, 101010256
  br i1 %193, label %194, label %203

194:                                              ; preds = %166
  %195 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %195, %struct.mz_zip_archive** %24, align 8
  store i32 8, i32* %25, align 4
  %196 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %197 = icmp ne %struct.mz_zip_archive* %196, null
  br i1 %197, label %198, label %202

198:                                              ; preds = %194
  %199 = load i32, i32* %25, align 4
  %200 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %201 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %200, i32 0, i32 5
  store i32 %199, i32* %201, align 4
  br label %202

202:                                              ; preds = %194, %198
  store i32 0, i32* %72, align 4
  br label %1751

203:                                              ; preds = %166
  %204 = load i64, i64* %80, align 8
  %205 = icmp sge i64 %204, 76
  br i1 %205, label %206, label %370

206:                                              ; preds = %203
  %207 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %208 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %207, i32 0, i32 11
  %209 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %208, align 8
  %210 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %211 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %210, i32 0, i32 14
  %212 = load i8*, i8** %211, align 8
  %213 = load i64, i64* %80, align 8
  %214 = sub nsw i64 %213, 20
  %215 = load i8*, i8** %86, align 8
  %216 = call i64 %209(i8* noundef %212, i64 noundef %214, i8* noundef %215, i64 noundef 20)
  %217 = icmp eq i64 %216, 20
  br i1 %217, label %218, label %369

218:                                              ; preds = %206
  %219 = load i8*, i8** %86, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 0
  %221 = getelementptr inbounds i8, i8* %220, i64 0
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = load i8*, i8** %86, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 0
  %226 = getelementptr inbounds i8, i8* %225, i64 1
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = shl i32 %228, 8
  %230 = or i32 %223, %229
  %231 = load i8*, i8** %86, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 0
  %233 = getelementptr inbounds i8, i8* %232, i64 2
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = shl i32 %235, 16
  %237 = or i32 %230, %236
  %238 = load i8*, i8** %86, align 8
  %239 = getelementptr inbounds i8, i8* %238, i64 0
  %240 = getelementptr inbounds i8, i8* %239, i64 3
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = shl i32 %242, 24
  %244 = or i32 %237, %243
  %245 = icmp eq i32 %244, 117853008
  br i1 %245, label %246, label %368

246:                                              ; preds = %218
  %247 = load i8*, i8** %86, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 8
  %249 = getelementptr inbounds i8, i8* %248, i64 0
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = load i8*, i8** %86, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 8
  %254 = getelementptr inbounds i8, i8* %253, i64 1
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = shl i32 %256, 8
  %258 = or i32 %251, %257
  %259 = load i8*, i8** %86, align 8
  %260 = getelementptr inbounds i8, i8* %259, i64 8
  %261 = getelementptr inbounds i8, i8* %260, i64 2
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = shl i32 %263, 16
  %265 = or i32 %258, %264
  %266 = load i8*, i8** %86, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 8
  %268 = getelementptr inbounds i8, i8* %267, i64 3
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = shl i32 %270, 24
  %272 = or i32 %265, %271
  %273 = zext i32 %272 to i64
  %274 = load i8*, i8** %86, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 8
  %276 = getelementptr inbounds i8, i8* %275, i64 4
  %277 = getelementptr inbounds i8, i8* %276, i64 0
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = load i8*, i8** %86, align 8
  %281 = getelementptr inbounds i8, i8* %280, i64 8
  %282 = getelementptr inbounds i8, i8* %281, i64 4
  %283 = getelementptr inbounds i8, i8* %282, i64 1
  %284 = load i8, i8* %283, align 1
  %285 = zext i8 %284 to i32
  %286 = shl i32 %285, 8
  %287 = or i32 %279, %286
  %288 = load i8*, i8** %86, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 8
  %290 = getelementptr inbounds i8, i8* %289, i64 4
  %291 = getelementptr inbounds i8, i8* %290, i64 2
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = shl i32 %293, 16
  %295 = or i32 %287, %294
  %296 = load i8*, i8** %86, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 8
  %298 = getelementptr inbounds i8, i8* %297, i64 4
  %299 = getelementptr inbounds i8, i8* %298, i64 3
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = shl i32 %301, 24
  %303 = or i32 %295, %302
  %304 = zext i32 %303 to i64
  %305 = shl i64 %304, 32
  %306 = or i64 %273, %305
  store i64 %306, i64* %89, align 8
  %307 = load i64, i64* %89, align 8
  %308 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %309 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %308, i32 0, i32 0
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 %310, 56
  %312 = icmp ugt i64 %307, %311
  br i1 %312, label %313, label %322

313:                                              ; preds = %246
  %314 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %314, %struct.mz_zip_archive** %26, align 8
  store i32 8, i32* %27, align 4
  %315 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %316 = icmp ne %struct.mz_zip_archive* %315, null
  br i1 %316, label %317, label %321

317:                                              ; preds = %313
  %318 = load i32, i32* %27, align 4
  %319 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %320 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %319, i32 0, i32 5
  store i32 %318, i32* %320, align 4
  br label %321

321:                                              ; preds = %313, %317
  store i32 0, i32* %72, align 4
  br label %1751

322:                                              ; preds = %246
  %323 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %324 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %323, i32 0, i32 11
  %325 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %324, align 8
  %326 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %327 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %326, i32 0, i32 14
  %328 = load i8*, i8** %327, align 8
  %329 = load i64, i64* %89, align 8
  %330 = load i8*, i8** %88, align 8
  %331 = call i64 %325(i8* noundef %328, i64 noundef %329, i8* noundef %330, i64 noundef 56)
  %332 = icmp eq i64 %331, 56
  br i1 %332, label %333, label %367

333:                                              ; preds = %322
  %334 = load i8*, i8** %88, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 0
  %336 = getelementptr inbounds i8, i8* %335, i64 0
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i32
  %339 = load i8*, i8** %88, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 0
  %341 = getelementptr inbounds i8, i8* %340, i64 1
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  %344 = shl i32 %343, 8
  %345 = or i32 %338, %344
  %346 = load i8*, i8** %88, align 8
  %347 = getelementptr inbounds i8, i8* %346, i64 0
  %348 = getelementptr inbounds i8, i8* %347, i64 2
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  %351 = shl i32 %350, 16
  %352 = or i32 %345, %351
  %353 = load i8*, i8** %88, align 8
  %354 = getelementptr inbounds i8, i8* %353, i64 0
  %355 = getelementptr inbounds i8, i8* %354, i64 3
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = shl i32 %357, 24
  %359 = or i32 %352, %358
  %360 = icmp eq i32 %359, 101075792
  br i1 %360, label %361, label %366

361:                                              ; preds = %333
  %362 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %363 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %362, i32 0, i32 15
  %364 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %363, align 8
  %365 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %364, i32 0, i32 4
  store i32 1, i32* %365, align 4
  br label %366

366:                                              ; preds = %361, %333
  br label %367

367:                                              ; preds = %366, %322
  br label %368

368:                                              ; preds = %367, %218
  br label %369

369:                                              ; preds = %368, %206
  br label %370

370:                                              ; preds = %369, %203
  %371 = load i8*, i8** %83, align 8
  %372 = getelementptr inbounds i8, i8* %371, i64 10
  %373 = getelementptr inbounds i8, i8* %372, i64 0
  %374 = load i8, i8* %373, align 1
  %375 = zext i8 %374 to i32
  %376 = load i8*, i8** %83, align 8
  %377 = getelementptr inbounds i8, i8* %376, i64 10
  %378 = getelementptr inbounds i8, i8* %377, i64 1
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i32
  %381 = shl i32 %380, 8
  %382 = or i32 %375, %381
  %383 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %384 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %383, i32 0, i32 2
  store i32 %382, i32* %384, align 8
  %385 = load i8*, i8** %83, align 8
  %386 = getelementptr inbounds i8, i8* %385, i64 8
  %387 = getelementptr inbounds i8, i8* %386, i64 0
  %388 = load i8, i8* %387, align 1
  %389 = zext i8 %388 to i32
  %390 = load i8*, i8** %83, align 8
  %391 = getelementptr inbounds i8, i8* %390, i64 8
  %392 = getelementptr inbounds i8, i8* %391, i64 1
  %393 = load i8, i8* %392, align 1
  %394 = zext i8 %393 to i32
  %395 = shl i32 %394, 8
  %396 = or i32 %389, %395
  store i32 %396, i32* %76, align 4
  %397 = load i8*, i8** %83, align 8
  %398 = getelementptr inbounds i8, i8* %397, i64 4
  %399 = getelementptr inbounds i8, i8* %398, i64 0
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %400 to i32
  %402 = load i8*, i8** %83, align 8
  %403 = getelementptr inbounds i8, i8* %402, i64 4
  %404 = getelementptr inbounds i8, i8* %403, i64 1
  %405 = load i8, i8* %404, align 1
  %406 = zext i8 %405 to i32
  %407 = shl i32 %406, 8
  %408 = or i32 %401, %407
  store i32 %408, i32* %77, align 4
  %409 = load i8*, i8** %83, align 8
  %410 = getelementptr inbounds i8, i8* %409, i64 6
  %411 = getelementptr inbounds i8, i8* %410, i64 0
  %412 = load i8, i8* %411, align 1
  %413 = zext i8 %412 to i32
  %414 = load i8*, i8** %83, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 6
  %416 = getelementptr inbounds i8, i8* %415, i64 1
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i32
  %419 = shl i32 %418, 8
  %420 = or i32 %413, %419
  store i32 %420, i32* %78, align 4
  %421 = load i8*, i8** %83, align 8
  %422 = getelementptr inbounds i8, i8* %421, i64 12
  %423 = getelementptr inbounds i8, i8* %422, i64 0
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i32
  %426 = load i8*, i8** %83, align 8
  %427 = getelementptr inbounds i8, i8* %426, i64 12
  %428 = getelementptr inbounds i8, i8* %427, i64 1
  %429 = load i8, i8* %428, align 1
  %430 = zext i8 %429 to i32
  %431 = shl i32 %430, 8
  %432 = or i32 %425, %431
  %433 = load i8*, i8** %83, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 12
  %435 = getelementptr inbounds i8, i8* %434, i64 2
  %436 = load i8, i8* %435, align 1
  %437 = zext i8 %436 to i32
  %438 = shl i32 %437, 16
  %439 = or i32 %432, %438
  %440 = load i8*, i8** %83, align 8
  %441 = getelementptr inbounds i8, i8* %440, i64 12
  %442 = getelementptr inbounds i8, i8* %441, i64 3
  %443 = load i8, i8* %442, align 1
  %444 = zext i8 %443 to i32
  %445 = shl i32 %444, 24
  %446 = or i32 %439, %445
  store i32 %446, i32* %75, align 4
  %447 = load i8*, i8** %83, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 16
  %449 = getelementptr inbounds i8, i8* %448, i64 0
  %450 = load i8, i8* %449, align 1
  %451 = zext i8 %450 to i32
  %452 = load i8*, i8** %83, align 8
  %453 = getelementptr inbounds i8, i8* %452, i64 16
  %454 = getelementptr inbounds i8, i8* %453, i64 1
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i32
  %457 = shl i32 %456, 8
  %458 = or i32 %451, %457
  %459 = load i8*, i8** %83, align 8
  %460 = getelementptr inbounds i8, i8* %459, i64 16
  %461 = getelementptr inbounds i8, i8* %460, i64 2
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  %464 = shl i32 %463, 16
  %465 = or i32 %458, %464
  %466 = load i8*, i8** %83, align 8
  %467 = getelementptr inbounds i8, i8* %466, i64 16
  %468 = getelementptr inbounds i8, i8* %467, i64 3
  %469 = load i8, i8* %468, align 1
  %470 = zext i8 %469 to i32
  %471 = shl i32 %470, 24
  %472 = or i32 %465, %471
  %473 = zext i32 %472 to i64
  store i64 %473, i64* %79, align 8
  %474 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %475 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %474, i32 0, i32 15
  %476 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %475, align 8
  %477 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %476, i32 0, i32 4
  %478 = load i32, i32* %477, align 4
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %480, label %927

480:                                              ; preds = %370
  %481 = load i8*, i8** %86, align 8
  %482 = getelementptr inbounds i8, i8* %481, i64 16
  %483 = getelementptr inbounds i8, i8* %482, i64 0
  %484 = load i8, i8* %483, align 1
  %485 = zext i8 %484 to i32
  %486 = load i8*, i8** %86, align 8
  %487 = getelementptr inbounds i8, i8* %486, i64 16
  %488 = getelementptr inbounds i8, i8* %487, i64 1
  %489 = load i8, i8* %488, align 1
  %490 = zext i8 %489 to i32
  %491 = shl i32 %490, 8
  %492 = or i32 %485, %491
  %493 = load i8*, i8** %86, align 8
  %494 = getelementptr inbounds i8, i8* %493, i64 16
  %495 = getelementptr inbounds i8, i8* %494, i64 2
  %496 = load i8, i8* %495, align 1
  %497 = zext i8 %496 to i32
  %498 = shl i32 %497, 16
  %499 = or i32 %492, %498
  %500 = load i8*, i8** %86, align 8
  %501 = getelementptr inbounds i8, i8* %500, i64 16
  %502 = getelementptr inbounds i8, i8* %501, i64 3
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i32
  %505 = shl i32 %504, 24
  %506 = or i32 %499, %505
  store i32 %506, i32* %90, align 4
  %507 = load i8*, i8** %88, align 8
  %508 = getelementptr inbounds i8, i8* %507, i64 32
  %509 = getelementptr inbounds i8, i8* %508, i64 0
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i32
  %512 = load i8*, i8** %88, align 8
  %513 = getelementptr inbounds i8, i8* %512, i64 32
  %514 = getelementptr inbounds i8, i8* %513, i64 1
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i32
  %517 = shl i32 %516, 8
  %518 = or i32 %511, %517
  %519 = load i8*, i8** %88, align 8
  %520 = getelementptr inbounds i8, i8* %519, i64 32
  %521 = getelementptr inbounds i8, i8* %520, i64 2
  %522 = load i8, i8* %521, align 1
  %523 = zext i8 %522 to i32
  %524 = shl i32 %523, 16
  %525 = or i32 %518, %524
  %526 = load i8*, i8** %88, align 8
  %527 = getelementptr inbounds i8, i8* %526, i64 32
  %528 = getelementptr inbounds i8, i8* %527, i64 3
  %529 = load i8, i8* %528, align 1
  %530 = zext i8 %529 to i32
  %531 = shl i32 %530, 24
  %532 = or i32 %525, %531
  %533 = zext i32 %532 to i64
  %534 = load i8*, i8** %88, align 8
  %535 = getelementptr inbounds i8, i8* %534, i64 32
  %536 = getelementptr inbounds i8, i8* %535, i64 4
  %537 = getelementptr inbounds i8, i8* %536, i64 0
  %538 = load i8, i8* %537, align 1
  %539 = zext i8 %538 to i32
  %540 = load i8*, i8** %88, align 8
  %541 = getelementptr inbounds i8, i8* %540, i64 32
  %542 = getelementptr inbounds i8, i8* %541, i64 4
  %543 = getelementptr inbounds i8, i8* %542, i64 1
  %544 = load i8, i8* %543, align 1
  %545 = zext i8 %544 to i32
  %546 = shl i32 %545, 8
  %547 = or i32 %539, %546
  %548 = load i8*, i8** %88, align 8
  %549 = getelementptr inbounds i8, i8* %548, i64 32
  %550 = getelementptr inbounds i8, i8* %549, i64 4
  %551 = getelementptr inbounds i8, i8* %550, i64 2
  %552 = load i8, i8* %551, align 1
  %553 = zext i8 %552 to i32
  %554 = shl i32 %553, 16
  %555 = or i32 %547, %554
  %556 = load i8*, i8** %88, align 8
  %557 = getelementptr inbounds i8, i8* %556, i64 32
  %558 = getelementptr inbounds i8, i8* %557, i64 4
  %559 = getelementptr inbounds i8, i8* %558, i64 3
  %560 = load i8, i8* %559, align 1
  %561 = zext i8 %560 to i32
  %562 = shl i32 %561, 24
  %563 = or i32 %555, %562
  %564 = zext i32 %563 to i64
  %565 = shl i64 %564, 32
  %566 = or i64 %533, %565
  store i64 %566, i64* %91, align 8
  %567 = load i8*, i8** %88, align 8
  %568 = getelementptr inbounds i8, i8* %567, i64 24
  %569 = getelementptr inbounds i8, i8* %568, i64 0
  %570 = load i8, i8* %569, align 1
  %571 = zext i8 %570 to i32
  %572 = load i8*, i8** %88, align 8
  %573 = getelementptr inbounds i8, i8* %572, i64 24
  %574 = getelementptr inbounds i8, i8* %573, i64 1
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i32
  %577 = shl i32 %576, 8
  %578 = or i32 %571, %577
  %579 = load i8*, i8** %88, align 8
  %580 = getelementptr inbounds i8, i8* %579, i64 24
  %581 = getelementptr inbounds i8, i8* %580, i64 2
  %582 = load i8, i8* %581, align 1
  %583 = zext i8 %582 to i32
  %584 = shl i32 %583, 16
  %585 = or i32 %578, %584
  %586 = load i8*, i8** %88, align 8
  %587 = getelementptr inbounds i8, i8* %586, i64 24
  %588 = getelementptr inbounds i8, i8* %587, i64 3
  %589 = load i8, i8* %588, align 1
  %590 = zext i8 %589 to i32
  %591 = shl i32 %590, 24
  %592 = or i32 %585, %591
  %593 = zext i32 %592 to i64
  %594 = load i8*, i8** %88, align 8
  %595 = getelementptr inbounds i8, i8* %594, i64 24
  %596 = getelementptr inbounds i8, i8* %595, i64 4
  %597 = getelementptr inbounds i8, i8* %596, i64 0
  %598 = load i8, i8* %597, align 1
  %599 = zext i8 %598 to i32
  %600 = load i8*, i8** %88, align 8
  %601 = getelementptr inbounds i8, i8* %600, i64 24
  %602 = getelementptr inbounds i8, i8* %601, i64 4
  %603 = getelementptr inbounds i8, i8* %602, i64 1
  %604 = load i8, i8* %603, align 1
  %605 = zext i8 %604 to i32
  %606 = shl i32 %605, 8
  %607 = or i32 %599, %606
  %608 = load i8*, i8** %88, align 8
  %609 = getelementptr inbounds i8, i8* %608, i64 24
  %610 = getelementptr inbounds i8, i8* %609, i64 4
  %611 = getelementptr inbounds i8, i8* %610, i64 2
  %612 = load i8, i8* %611, align 1
  %613 = zext i8 %612 to i32
  %614 = shl i32 %613, 16
  %615 = or i32 %607, %614
  %616 = load i8*, i8** %88, align 8
  %617 = getelementptr inbounds i8, i8* %616, i64 24
  %618 = getelementptr inbounds i8, i8* %617, i64 4
  %619 = getelementptr inbounds i8, i8* %618, i64 3
  %620 = load i8, i8* %619, align 1
  %621 = zext i8 %620 to i32
  %622 = shl i32 %621, 24
  %623 = or i32 %615, %622
  %624 = zext i32 %623 to i64
  %625 = shl i64 %624, 32
  %626 = or i64 %593, %625
  store i64 %626, i64* %92, align 8
  %627 = load i8*, i8** %88, align 8
  %628 = getelementptr inbounds i8, i8* %627, i64 4
  %629 = getelementptr inbounds i8, i8* %628, i64 0
  %630 = load i8, i8* %629, align 1
  %631 = zext i8 %630 to i32
  %632 = load i8*, i8** %88, align 8
  %633 = getelementptr inbounds i8, i8* %632, i64 4
  %634 = getelementptr inbounds i8, i8* %633, i64 1
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i32
  %637 = shl i32 %636, 8
  %638 = or i32 %631, %637
  %639 = load i8*, i8** %88, align 8
  %640 = getelementptr inbounds i8, i8* %639, i64 4
  %641 = getelementptr inbounds i8, i8* %640, i64 2
  %642 = load i8, i8* %641, align 1
  %643 = zext i8 %642 to i32
  %644 = shl i32 %643, 16
  %645 = or i32 %638, %644
  %646 = load i8*, i8** %88, align 8
  %647 = getelementptr inbounds i8, i8* %646, i64 4
  %648 = getelementptr inbounds i8, i8* %647, i64 3
  %649 = load i8, i8* %648, align 1
  %650 = zext i8 %649 to i32
  %651 = shl i32 %650, 24
  %652 = or i32 %645, %651
  %653 = zext i32 %652 to i64
  %654 = load i8*, i8** %88, align 8
  %655 = getelementptr inbounds i8, i8* %654, i64 4
  %656 = getelementptr inbounds i8, i8* %655, i64 4
  %657 = getelementptr inbounds i8, i8* %656, i64 0
  %658 = load i8, i8* %657, align 1
  %659 = zext i8 %658 to i32
  %660 = load i8*, i8** %88, align 8
  %661 = getelementptr inbounds i8, i8* %660, i64 4
  %662 = getelementptr inbounds i8, i8* %661, i64 4
  %663 = getelementptr inbounds i8, i8* %662, i64 1
  %664 = load i8, i8* %663, align 1
  %665 = zext i8 %664 to i32
  %666 = shl i32 %665, 8
  %667 = or i32 %659, %666
  %668 = load i8*, i8** %88, align 8
  %669 = getelementptr inbounds i8, i8* %668, i64 4
  %670 = getelementptr inbounds i8, i8* %669, i64 4
  %671 = getelementptr inbounds i8, i8* %670, i64 2
  %672 = load i8, i8* %671, align 1
  %673 = zext i8 %672 to i32
  %674 = shl i32 %673, 16
  %675 = or i32 %667, %674
  %676 = load i8*, i8** %88, align 8
  %677 = getelementptr inbounds i8, i8* %676, i64 4
  %678 = getelementptr inbounds i8, i8* %677, i64 4
  %679 = getelementptr inbounds i8, i8* %678, i64 3
  %680 = load i8, i8* %679, align 1
  %681 = zext i8 %680 to i32
  %682 = shl i32 %681, 24
  %683 = or i32 %675, %682
  %684 = zext i32 %683 to i64
  %685 = shl i64 %684, 32
  %686 = or i64 %653, %685
  store i64 %686, i64* %93, align 8
  %687 = load i8*, i8** %88, align 8
  %688 = getelementptr inbounds i8, i8* %687, i64 40
  %689 = getelementptr inbounds i8, i8* %688, i64 0
  %690 = load i8, i8* %689, align 1
  %691 = zext i8 %690 to i32
  %692 = load i8*, i8** %88, align 8
  %693 = getelementptr inbounds i8, i8* %692, i64 40
  %694 = getelementptr inbounds i8, i8* %693, i64 1
  %695 = load i8, i8* %694, align 1
  %696 = zext i8 %695 to i32
  %697 = shl i32 %696, 8
  %698 = or i32 %691, %697
  %699 = load i8*, i8** %88, align 8
  %700 = getelementptr inbounds i8, i8* %699, i64 40
  %701 = getelementptr inbounds i8, i8* %700, i64 2
  %702 = load i8, i8* %701, align 1
  %703 = zext i8 %702 to i32
  %704 = shl i32 %703, 16
  %705 = or i32 %698, %704
  %706 = load i8*, i8** %88, align 8
  %707 = getelementptr inbounds i8, i8* %706, i64 40
  %708 = getelementptr inbounds i8, i8* %707, i64 3
  %709 = load i8, i8* %708, align 1
  %710 = zext i8 %709 to i32
  %711 = shl i32 %710, 24
  %712 = or i32 %705, %711
  %713 = zext i32 %712 to i64
  %714 = load i8*, i8** %88, align 8
  %715 = getelementptr inbounds i8, i8* %714, i64 40
  %716 = getelementptr inbounds i8, i8* %715, i64 4
  %717 = getelementptr inbounds i8, i8* %716, i64 0
  %718 = load i8, i8* %717, align 1
  %719 = zext i8 %718 to i32
  %720 = load i8*, i8** %88, align 8
  %721 = getelementptr inbounds i8, i8* %720, i64 40
  %722 = getelementptr inbounds i8, i8* %721, i64 4
  %723 = getelementptr inbounds i8, i8* %722, i64 1
  %724 = load i8, i8* %723, align 1
  %725 = zext i8 %724 to i32
  %726 = shl i32 %725, 8
  %727 = or i32 %719, %726
  %728 = load i8*, i8** %88, align 8
  %729 = getelementptr inbounds i8, i8* %728, i64 40
  %730 = getelementptr inbounds i8, i8* %729, i64 4
  %731 = getelementptr inbounds i8, i8* %730, i64 2
  %732 = load i8, i8* %731, align 1
  %733 = zext i8 %732 to i32
  %734 = shl i32 %733, 16
  %735 = or i32 %727, %734
  %736 = load i8*, i8** %88, align 8
  %737 = getelementptr inbounds i8, i8* %736, i64 40
  %738 = getelementptr inbounds i8, i8* %737, i64 4
  %739 = getelementptr inbounds i8, i8* %738, i64 3
  %740 = load i8, i8* %739, align 1
  %741 = zext i8 %740 to i32
  %742 = shl i32 %741, 24
  %743 = or i32 %735, %742
  %744 = zext i32 %743 to i64
  %745 = shl i64 %744, 32
  %746 = or i64 %713, %745
  store i64 %746, i64* %94, align 8
  %747 = load i64, i64* %93, align 8
  %748 = icmp ult i64 %747, 44
  br i1 %748, label %749, label %758

749:                                              ; preds = %480
  %750 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %750, %struct.mz_zip_archive** %28, align 8
  store i32 9, i32* %29, align 4
  %751 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %752 = icmp ne %struct.mz_zip_archive* %751, null
  br i1 %752, label %753, label %757

753:                                              ; preds = %749
  %754 = load i32, i32* %29, align 4
  %755 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %756 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %755, i32 0, i32 5
  store i32 %754, i32* %756, align 4
  br label %757

757:                                              ; preds = %749, %753
  store i32 0, i32* %72, align 4
  br label %1751

758:                                              ; preds = %480
  %759 = load i32, i32* %90, align 4
  %760 = icmp ne i32 %759, 1
  br i1 %760, label %761, label %770

761:                                              ; preds = %758
  %762 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %762, %struct.mz_zip_archive** %30, align 8
  store i32 10, i32* %31, align 4
  %763 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %30, align 8
  %764 = icmp ne %struct.mz_zip_archive* %763, null
  br i1 %764, label %765, label %769

765:                                              ; preds = %761
  %766 = load i32, i32* %31, align 4
  %767 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %30, align 8
  %768 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %767, i32 0, i32 5
  store i32 %766, i32* %768, align 4
  br label %769

769:                                              ; preds = %761, %765
  store i32 0, i32* %72, align 4
  br label %1751

770:                                              ; preds = %758
  %771 = load i64, i64* %91, align 8
  %772 = icmp ugt i64 %771, 4294967295
  br i1 %772, label %773, label %782

773:                                              ; preds = %770
  %774 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %774, %struct.mz_zip_archive** %32, align 8
  store i32 2, i32* %33, align 4
  %775 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %776 = icmp ne %struct.mz_zip_archive* %775, null
  br i1 %776, label %777, label %781

777:                                              ; preds = %773
  %778 = load i32, i32* %33, align 4
  %779 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %780 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %779, i32 0, i32 5
  store i32 %778, i32* %780, align 4
  br label %781

781:                                              ; preds = %773, %777
  store i32 0, i32* %72, align 4
  br label %1751

782:                                              ; preds = %770
  %783 = load i64, i64* %91, align 8
  %784 = trunc i64 %783 to i32
  %785 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %786 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %785, i32 0, i32 2
  store i32 %784, i32* %786, align 8
  %787 = load i64, i64* %92, align 8
  %788 = icmp ugt i64 %787, 4294967295
  br i1 %788, label %789, label %798

789:                                              ; preds = %782
  %790 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %790, %struct.mz_zip_archive** %34, align 8
  store i32 2, i32* %35, align 4
  %791 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %792 = icmp ne %struct.mz_zip_archive* %791, null
  br i1 %792, label %793, label %797

793:                                              ; preds = %789
  %794 = load i32, i32* %35, align 4
  %795 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %796 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %795, i32 0, i32 5
  store i32 %794, i32* %796, align 4
  br label %797

797:                                              ; preds = %789, %793
  store i32 0, i32* %72, align 4
  br label %1751

798:                                              ; preds = %782
  %799 = load i64, i64* %92, align 8
  %800 = trunc i64 %799 to i32
  store i32 %800, i32* %76, align 4
  %801 = load i64, i64* %94, align 8
  %802 = icmp ugt i64 %801, 4294967295
  br i1 %802, label %803, label %812

803:                                              ; preds = %798
  %804 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %804, %struct.mz_zip_archive** %36, align 8
  store i32 15, i32* %37, align 4
  %805 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %806 = icmp ne %struct.mz_zip_archive* %805, null
  br i1 %806, label %807, label %811

807:                                              ; preds = %803
  %808 = load i32, i32* %37, align 4
  %809 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %810 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %809, i32 0, i32 5
  store i32 %808, i32* %810, align 4
  br label %811

811:                                              ; preds = %803, %807
  store i32 0, i32* %72, align 4
  br label %1751

812:                                              ; preds = %798
  %813 = load i64, i64* %94, align 8
  %814 = trunc i64 %813 to i32
  store i32 %814, i32* %75, align 4
  %815 = load i8*, i8** %88, align 8
  %816 = getelementptr inbounds i8, i8* %815, i64 16
  %817 = getelementptr inbounds i8, i8* %816, i64 0
  %818 = load i8, i8* %817, align 1
  %819 = zext i8 %818 to i32
  %820 = load i8*, i8** %88, align 8
  %821 = getelementptr inbounds i8, i8* %820, i64 16
  %822 = getelementptr inbounds i8, i8* %821, i64 1
  %823 = load i8, i8* %822, align 1
  %824 = zext i8 %823 to i32
  %825 = shl i32 %824, 8
  %826 = or i32 %819, %825
  %827 = load i8*, i8** %88, align 8
  %828 = getelementptr inbounds i8, i8* %827, i64 16
  %829 = getelementptr inbounds i8, i8* %828, i64 2
  %830 = load i8, i8* %829, align 1
  %831 = zext i8 %830 to i32
  %832 = shl i32 %831, 16
  %833 = or i32 %826, %832
  %834 = load i8*, i8** %88, align 8
  %835 = getelementptr inbounds i8, i8* %834, i64 16
  %836 = getelementptr inbounds i8, i8* %835, i64 3
  %837 = load i8, i8* %836, align 1
  %838 = zext i8 %837 to i32
  %839 = shl i32 %838, 24
  %840 = or i32 %833, %839
  store i32 %840, i32* %77, align 4
  %841 = load i8*, i8** %88, align 8
  %842 = getelementptr inbounds i8, i8* %841, i64 20
  %843 = getelementptr inbounds i8, i8* %842, i64 0
  %844 = load i8, i8* %843, align 1
  %845 = zext i8 %844 to i32
  %846 = load i8*, i8** %88, align 8
  %847 = getelementptr inbounds i8, i8* %846, i64 20
  %848 = getelementptr inbounds i8, i8* %847, i64 1
  %849 = load i8, i8* %848, align 1
  %850 = zext i8 %849 to i32
  %851 = shl i32 %850, 8
  %852 = or i32 %845, %851
  %853 = load i8*, i8** %88, align 8
  %854 = getelementptr inbounds i8, i8* %853, i64 20
  %855 = getelementptr inbounds i8, i8* %854, i64 2
  %856 = load i8, i8* %855, align 1
  %857 = zext i8 %856 to i32
  %858 = shl i32 %857, 16
  %859 = or i32 %852, %858
  %860 = load i8*, i8** %88, align 8
  %861 = getelementptr inbounds i8, i8* %860, i64 20
  %862 = getelementptr inbounds i8, i8* %861, i64 3
  %863 = load i8, i8* %862, align 1
  %864 = zext i8 %863 to i32
  %865 = shl i32 %864, 24
  %866 = or i32 %859, %865
  store i32 %866, i32* %78, align 4
  %867 = load i8*, i8** %88, align 8
  %868 = getelementptr inbounds i8, i8* %867, i64 48
  %869 = getelementptr inbounds i8, i8* %868, i64 0
  %870 = load i8, i8* %869, align 1
  %871 = zext i8 %870 to i32
  %872 = load i8*, i8** %88, align 8
  %873 = getelementptr inbounds i8, i8* %872, i64 48
  %874 = getelementptr inbounds i8, i8* %873, i64 1
  %875 = load i8, i8* %874, align 1
  %876 = zext i8 %875 to i32
  %877 = shl i32 %876, 8
  %878 = or i32 %871, %877
  %879 = load i8*, i8** %88, align 8
  %880 = getelementptr inbounds i8, i8* %879, i64 48
  %881 = getelementptr inbounds i8, i8* %880, i64 2
  %882 = load i8, i8* %881, align 1
  %883 = zext i8 %882 to i32
  %884 = shl i32 %883, 16
  %885 = or i32 %878, %884
  %886 = load i8*, i8** %88, align 8
  %887 = getelementptr inbounds i8, i8* %886, i64 48
  %888 = getelementptr inbounds i8, i8* %887, i64 3
  %889 = load i8, i8* %888, align 1
  %890 = zext i8 %889 to i32
  %891 = shl i32 %890, 24
  %892 = or i32 %885, %891
  %893 = zext i32 %892 to i64
  %894 = load i8*, i8** %88, align 8
  %895 = getelementptr inbounds i8, i8* %894, i64 48
  %896 = getelementptr inbounds i8, i8* %895, i64 4
  %897 = getelementptr inbounds i8, i8* %896, i64 0
  %898 = load i8, i8* %897, align 1
  %899 = zext i8 %898 to i32
  %900 = load i8*, i8** %88, align 8
  %901 = getelementptr inbounds i8, i8* %900, i64 48
  %902 = getelementptr inbounds i8, i8* %901, i64 4
  %903 = getelementptr inbounds i8, i8* %902, i64 1
  %904 = load i8, i8* %903, align 1
  %905 = zext i8 %904 to i32
  %906 = shl i32 %905, 8
  %907 = or i32 %899, %906
  %908 = load i8*, i8** %88, align 8
  %909 = getelementptr inbounds i8, i8* %908, i64 48
  %910 = getelementptr inbounds i8, i8* %909, i64 4
  %911 = getelementptr inbounds i8, i8* %910, i64 2
  %912 = load i8, i8* %911, align 1
  %913 = zext i8 %912 to i32
  %914 = shl i32 %913, 16
  %915 = or i32 %907, %914
  %916 = load i8*, i8** %88, align 8
  %917 = getelementptr inbounds i8, i8* %916, i64 48
  %918 = getelementptr inbounds i8, i8* %917, i64 4
  %919 = getelementptr inbounds i8, i8* %918, i64 3
  %920 = load i8, i8* %919, align 1
  %921 = zext i8 %920 to i32
  %922 = shl i32 %921, 24
  %923 = or i32 %915, %922
  %924 = zext i32 %923 to i64
  %925 = shl i64 %924, 32
  %926 = or i64 %893, %925
  store i64 %926, i64* %79, align 8
  br label %927

927:                                              ; preds = %812, %370
  %928 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %929 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %928, i32 0, i32 2
  %930 = load i32, i32* %929, align 8
  %931 = load i32, i32* %76, align 4
  %932 = icmp ne i32 %930, %931
  br i1 %932, label %933, label %942

933:                                              ; preds = %927
  %934 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %934, %struct.mz_zip_archive** %38, align 8
  store i32 10, i32* %39, align 4
  %935 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %936 = icmp ne %struct.mz_zip_archive* %935, null
  br i1 %936, label %937, label %941

937:                                              ; preds = %933
  %938 = load i32, i32* %39, align 4
  %939 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %940 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %939, i32 0, i32 5
  store i32 %938, i32* %940, align 4
  br label %941

941:                                              ; preds = %933, %937
  store i32 0, i32* %72, align 4
  br label %1751

942:                                              ; preds = %927
  %943 = load i32, i32* %77, align 4
  %944 = load i32, i32* %78, align 4
  %945 = or i32 %943, %944
  %946 = icmp ne i32 %945, 0
  br i1 %946, label %947, label %962

947:                                              ; preds = %942
  %948 = load i32, i32* %77, align 4
  %949 = icmp ne i32 %948, 1
  br i1 %949, label %953, label %950

950:                                              ; preds = %947
  %951 = load i32, i32* %78, align 4
  %952 = icmp ne i32 %951, 1
  br i1 %952, label %953, label %962

953:                                              ; preds = %950, %947
  %954 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %954, %struct.mz_zip_archive** %40, align 8
  store i32 10, i32* %41, align 4
  %955 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %40, align 8
  %956 = icmp ne %struct.mz_zip_archive* %955, null
  br i1 %956, label %957, label %961

957:                                              ; preds = %953
  %958 = load i32, i32* %41, align 4
  %959 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %40, align 8
  %960 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %959, i32 0, i32 5
  store i32 %958, i32* %960, align 4
  br label %961

961:                                              ; preds = %953, %957
  store i32 0, i32* %72, align 4
  br label %1751

962:                                              ; preds = %950, %942
  %963 = load i32, i32* %75, align 4
  %964 = zext i32 %963 to i64
  %965 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %966 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %965, i32 0, i32 2
  %967 = load i32, i32* %966, align 8
  %968 = zext i32 %967 to i64
  %969 = mul i64 %968, 46
  %970 = icmp ult i64 %964, %969
  br i1 %970, label %971, label %980

971:                                              ; preds = %962
  %972 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %972, %struct.mz_zip_archive** %42, align 8
  store i32 9, i32* %43, align 4
  %973 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %974 = icmp ne %struct.mz_zip_archive* %973, null
  br i1 %974, label %975, label %979

975:                                              ; preds = %971
  %976 = load i32, i32* %43, align 4
  %977 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %978 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %977, i32 0, i32 5
  store i32 %976, i32* %978, align 4
  br label %979

979:                                              ; preds = %971, %975
  store i32 0, i32* %72, align 4
  br label %1751

980:                                              ; preds = %962
  %981 = load i64, i64* %79, align 8
  %982 = load i32, i32* %75, align 4
  %983 = zext i32 %982 to i64
  %984 = add i64 %981, %983
  %985 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %986 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %985, i32 0, i32 0
  %987 = load i64, i64* %986, align 8
  %988 = icmp ugt i64 %984, %987
  br i1 %988, label %989, label %998

989:                                              ; preds = %980
  %990 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %990, %struct.mz_zip_archive** %44, align 8
  store i32 9, i32* %45, align 4
  %991 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %44, align 8
  %992 = icmp ne %struct.mz_zip_archive* %991, null
  br i1 %992, label %993, label %997

993:                                              ; preds = %989
  %994 = load i32, i32* %45, align 4
  %995 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %44, align 8
  %996 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %995, i32 0, i32 5
  store i32 %994, i32* %996, align 4
  br label %997

997:                                              ; preds = %989, %993
  store i32 0, i32* %72, align 4
  br label %1751

998:                                              ; preds = %980
  %999 = load i64, i64* %79, align 8
  %1000 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1001 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1000, i32 0, i32 1
  store i64 %999, i64* %1001, align 8
  %1002 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1003 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1002, i32 0, i32 2
  %1004 = load i32, i32* %1003, align 8
  %1005 = icmp ne i32 %1004, 0
  br i1 %1005, label %1006, label %1745

1006:                                             ; preds = %998
  %1007 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1008 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1009 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1008, i32 0, i32 15
  %1010 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1009, align 8
  %1011 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1010, i32 0, i32 0
  %1012 = load i32, i32* %75, align 4
  %1013 = zext i32 %1012 to i64
  store %struct.mz_zip_archive* %1007, %struct.mz_zip_archive** %4, align 8
  store %struct.mz_zip_array* %1011, %struct.mz_zip_array** %5, align 8
  store i64 %1013, i64* %6, align 8
  store i32 0, i32* %7, align 4
  %1014 = load i64, i64* %6, align 8
  %1015 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %1016 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1015, i32 0, i32 2
  %1017 = load i64, i64* %1016, align 8
  %1018 = icmp ugt i64 %1014, %1017
  br i1 %1018, label %1019, label %1028

1019:                                             ; preds = %1006
  %1020 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %1021 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %1022 = load i64, i64* %6, align 8
  %1023 = load i32, i32* %7, align 4
  %1024 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1020, %struct.mz_zip_array* noundef %1021, i64 noundef %1022, i32 noundef %1023) #7
  %1025 = icmp ne i32 %1024, 0
  br i1 %1025, label %1027, label %1026

1026:                                             ; preds = %1019
  store i32 0, i32* %3, align 4
  br label %1032

1027:                                             ; preds = %1019
  br label %1028

1028:                                             ; preds = %1027, %1006
  %1029 = load i64, i64* %6, align 8
  %1030 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %1031 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1030, i32 0, i32 1
  store i64 %1029, i64* %1031, align 8
  store i32 1, i32* %3, align 4
  br label %1032

1032:                                             ; preds = %1026, %1028
  %1033 = load i32, i32* %3, align 4
  %1034 = icmp ne i32 %1033, 0
  br i1 %1034, label %1035, label %1066

1035:                                             ; preds = %1032
  %1036 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1037 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1038 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1037, i32 0, i32 15
  %1039 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1038, align 8
  %1040 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1039, i32 0, i32 1
  %1041 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1042 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1041, i32 0, i32 2
  %1043 = load i32, i32* %1042, align 8
  %1044 = zext i32 %1043 to i64
  store %struct.mz_zip_archive* %1036, %struct.mz_zip_archive** %9, align 8
  store %struct.mz_zip_array* %1040, %struct.mz_zip_array** %10, align 8
  store i64 %1044, i64* %11, align 8
  store i32 0, i32* %12, align 4
  %1045 = load i64, i64* %11, align 8
  %1046 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %1047 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1046, i32 0, i32 2
  %1048 = load i64, i64* %1047, align 8
  %1049 = icmp ugt i64 %1045, %1048
  br i1 %1049, label %1050, label %1059

1050:                                             ; preds = %1035
  %1051 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %1052 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %1053 = load i64, i64* %11, align 8
  %1054 = load i32, i32* %12, align 4
  %1055 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1051, %struct.mz_zip_array* noundef %1052, i64 noundef %1053, i32 noundef %1054) #7
  %1056 = icmp ne i32 %1055, 0
  br i1 %1056, label %1058, label %1057

1057:                                             ; preds = %1050
  store i32 0, i32* %8, align 4
  br label %1063

1058:                                             ; preds = %1050
  br label %1059

1059:                                             ; preds = %1058, %1035
  %1060 = load i64, i64* %11, align 8
  %1061 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %1062 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1061, i32 0, i32 1
  store i64 %1060, i64* %1062, align 8
  store i32 1, i32* %8, align 4
  br label %1063

1063:                                             ; preds = %1057, %1059
  %1064 = load i32, i32* %8, align 4
  %1065 = icmp ne i32 %1064, 0
  br i1 %1065, label %1075, label %1066

1066:                                             ; preds = %1063, %1032
  %1067 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1067, %struct.mz_zip_archive** %46, align 8
  store i32 16, i32* %47, align 4
  %1068 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %1069 = icmp ne %struct.mz_zip_archive* %1068, null
  br i1 %1069, label %1070, label %1074

1070:                                             ; preds = %1066
  %1071 = load i32, i32* %47, align 4
  %1072 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %1073 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1072, i32 0, i32 5
  store i32 %1071, i32* %1073, align 4
  br label %1074

1074:                                             ; preds = %1066, %1070
  store i32 0, i32* %72, align 4
  br label %1751

1075:                                             ; preds = %1063
  %1076 = load i32, i32* %84, align 4
  %1077 = icmp ne i32 %1076, 0
  br i1 %1077, label %1078, label %1119

1078:                                             ; preds = %1075
  %1079 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1080 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1081 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1080, i32 0, i32 15
  %1082 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1081, align 8
  %1083 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1082, i32 0, i32 2
  %1084 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1085 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1084, i32 0, i32 2
  %1086 = load i32, i32* %1085, align 8
  %1087 = zext i32 %1086 to i64
  store %struct.mz_zip_archive* %1079, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_array* %1083, %struct.mz_zip_array** %15, align 8
  store i64 %1087, i64* %16, align 8
  store i32 0, i32* %17, align 4
  %1088 = load i64, i64* %16, align 8
  %1089 = load %struct.mz_zip_array*, %struct.mz_zip_array** %15, align 8
  %1090 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1089, i32 0, i32 2
  %1091 = load i64, i64* %1090, align 8
  %1092 = icmp ugt i64 %1088, %1091
  br i1 %1092, label %1093, label %1102

1093:                                             ; preds = %1078
  %1094 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %1095 = load %struct.mz_zip_array*, %struct.mz_zip_array** %15, align 8
  %1096 = load i64, i64* %16, align 8
  %1097 = load i32, i32* %17, align 4
  %1098 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1094, %struct.mz_zip_array* noundef %1095, i64 noundef %1096, i32 noundef %1097) #7
  %1099 = icmp ne i32 %1098, 0
  br i1 %1099, label %1101, label %1100

1100:                                             ; preds = %1093
  store i32 0, i32* %13, align 4
  br label %1106

1101:                                             ; preds = %1093
  br label %1102

1102:                                             ; preds = %1101, %1078
  %1103 = load i64, i64* %16, align 8
  %1104 = load %struct.mz_zip_array*, %struct.mz_zip_array** %15, align 8
  %1105 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1104, i32 0, i32 1
  store i64 %1103, i64* %1105, align 8
  store i32 1, i32* %13, align 4
  br label %1106

1106:                                             ; preds = %1100, %1102
  %1107 = load i32, i32* %13, align 4
  %1108 = icmp ne i32 %1107, 0
  br i1 %1108, label %1118, label %1109

1109:                                             ; preds = %1106
  %1110 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1110, %struct.mz_zip_archive** %48, align 8
  store i32 16, i32* %49, align 4
  %1111 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %1112 = icmp ne %struct.mz_zip_archive* %1111, null
  br i1 %1112, label %1113, label %1117

1113:                                             ; preds = %1109
  %1114 = load i32, i32* %49, align 4
  %1115 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %1116 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1115, i32 0, i32 5
  store i32 %1114, i32* %1116, align 4
  br label %1117

1117:                                             ; preds = %1109, %1113
  store i32 0, i32* %72, align 4
  br label %1751

1118:                                             ; preds = %1106
  br label %1119

1119:                                             ; preds = %1118, %1075
  %1120 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1121 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1120, i32 0, i32 11
  %1122 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1121, align 8
  %1123 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1124 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1123, i32 0, i32 14
  %1125 = load i8*, i8** %1124, align 8
  %1126 = load i64, i64* %79, align 8
  %1127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1128 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1127, i32 0, i32 15
  %1129 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1128, align 8
  %1130 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1129, i32 0, i32 0
  %1131 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1130, i32 0, i32 0
  %1132 = load i8*, i8** %1131, align 8
  %1133 = load i32, i32* %75, align 4
  %1134 = zext i32 %1133 to i64
  %1135 = call i64 %1122(i8* noundef %1125, i64 noundef %1126, i8* noundef %1132, i64 noundef %1134)
  %1136 = load i32, i32* %75, align 4
  %1137 = zext i32 %1136 to i64
  %1138 = icmp ne i64 %1135, %1137
  br i1 %1138, label %1139, label %1148

1139:                                             ; preds = %1119
  %1140 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1140, %struct.mz_zip_archive** %50, align 8
  store i32 20, i32* %51, align 4
  %1141 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %50, align 8
  %1142 = icmp ne %struct.mz_zip_archive* %1141, null
  br i1 %1142, label %1143, label %1147

1143:                                             ; preds = %1139
  %1144 = load i32, i32* %51, align 4
  %1145 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %50, align 8
  %1146 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1145, i32 0, i32 5
  store i32 %1144, i32* %1146, align 4
  br label %1147

1147:                                             ; preds = %1139, %1143
  store i32 0, i32* %72, align 4
  br label %1751

1148:                                             ; preds = %1119
  %1149 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1150 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1149, i32 0, i32 15
  %1151 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1150, align 8
  %1152 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1151, i32 0, i32 0
  %1153 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1152, i32 0, i32 0
  %1154 = load i8*, i8** %1153, align 8
  store i8* %1154, i8** %81, align 8
  %1155 = load i32, i32* %75, align 4
  store i32 %1155, i32* %96, align 4
  store i32 0, i32* %95, align 4
  br label %1156

1156:                                             ; preds = %1741, %1148
  %1157 = load i32, i32* %95, align 4
  %1158 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1159 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1158, i32 0, i32 2
  %1160 = load i32, i32* %1159, align 8
  %1161 = icmp ult i32 %1157, %1160
  br i1 %1161, label %1162, label %1744

1162:                                             ; preds = %1156
  %1163 = load i32, i32* %96, align 4
  %1164 = icmp ult i32 %1163, 46
  br i1 %1164, label %1189, label %1165

1165:                                             ; preds = %1162
  %1166 = load i8*, i8** %81, align 8
  %1167 = getelementptr inbounds i8, i8* %1166, i64 0
  %1168 = load i8, i8* %1167, align 1
  %1169 = zext i8 %1168 to i32
  %1170 = load i8*, i8** %81, align 8
  %1171 = getelementptr inbounds i8, i8* %1170, i64 1
  %1172 = load i8, i8* %1171, align 1
  %1173 = zext i8 %1172 to i32
  %1174 = shl i32 %1173, 8
  %1175 = or i32 %1169, %1174
  %1176 = load i8*, i8** %81, align 8
  %1177 = getelementptr inbounds i8, i8* %1176, i64 2
  %1178 = load i8, i8* %1177, align 1
  %1179 = zext i8 %1178 to i32
  %1180 = shl i32 %1179, 16
  %1181 = or i32 %1175, %1180
  %1182 = load i8*, i8** %81, align 8
  %1183 = getelementptr inbounds i8, i8* %1182, i64 3
  %1184 = load i8, i8* %1183, align 1
  %1185 = zext i8 %1184 to i32
  %1186 = shl i32 %1185, 24
  %1187 = or i32 %1181, %1186
  %1188 = icmp ne i32 %1187, 33639248
  br i1 %1188, label %1189, label %1198

1189:                                             ; preds = %1165, %1162
  %1190 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1190, %struct.mz_zip_archive** %52, align 8
  store i32 9, i32* %53, align 4
  %1191 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %52, align 8
  %1192 = icmp ne %struct.mz_zip_archive* %1191, null
  br i1 %1192, label %1193, label %1197

1193:                                             ; preds = %1189
  %1194 = load i32, i32* %53, align 4
  %1195 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %52, align 8
  %1196 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1195, i32 0, i32 5
  store i32 %1194, i32* %1196, align 4
  br label %1197

1197:                                             ; preds = %1189, %1193
  store i32 0, i32* %72, align 4
  br label %1751

1198:                                             ; preds = %1165
  %1199 = load i8*, i8** %81, align 8
  %1200 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1201 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1200, i32 0, i32 15
  %1202 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1201, align 8
  %1203 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1202, i32 0, i32 0
  %1204 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1203, i32 0, i32 0
  %1205 = load i8*, i8** %1204, align 8
  %1206 = ptrtoint i8* %1199 to i64
  %1207 = ptrtoint i8* %1205 to i64
  %1208 = sub i64 %1206, %1207
  %1209 = trunc i64 %1208 to i32
  %1210 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1211 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1210, i32 0, i32 15
  %1212 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1211, align 8
  %1213 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1212, i32 0, i32 1
  %1214 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1213, i32 0, i32 0
  %1215 = load i8*, i8** %1214, align 8
  %1216 = bitcast i8* %1215 to i32*
  %1217 = load i32, i32* %95, align 4
  %1218 = zext i32 %1217 to i64
  %1219 = getelementptr inbounds i32, i32* %1216, i64 %1218
  store i32 %1209, i32* %1219, align 4
  %1220 = load i32, i32* %84, align 4
  %1221 = icmp ne i32 %1220, 0
  br i1 %1221, label %1222, label %1234

1222:                                             ; preds = %1198
  %1223 = load i32, i32* %95, align 4
  %1224 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1225 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1224, i32 0, i32 15
  %1226 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1225, align 8
  %1227 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1226, i32 0, i32 2
  %1228 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1227, i32 0, i32 0
  %1229 = load i8*, i8** %1228, align 8
  %1230 = bitcast i8* %1229 to i32*
  %1231 = load i32, i32* %95, align 4
  %1232 = zext i32 %1231 to i64
  %1233 = getelementptr inbounds i32, i32* %1230, i64 %1232
  store i32 %1223, i32* %1233, align 4
  br label %1234

1234:                                             ; preds = %1222, %1198
  %1235 = load i8*, i8** %81, align 8
  %1236 = getelementptr inbounds i8, i8* %1235, i64 20
  %1237 = getelementptr inbounds i8, i8* %1236, i64 0
  %1238 = load i8, i8* %1237, align 1
  %1239 = zext i8 %1238 to i32
  %1240 = load i8*, i8** %81, align 8
  %1241 = getelementptr inbounds i8, i8* %1240, i64 20
  %1242 = getelementptr inbounds i8, i8* %1241, i64 1
  %1243 = load i8, i8* %1242, align 1
  %1244 = zext i8 %1243 to i32
  %1245 = shl i32 %1244, 8
  %1246 = or i32 %1239, %1245
  %1247 = load i8*, i8** %81, align 8
  %1248 = getelementptr inbounds i8, i8* %1247, i64 20
  %1249 = getelementptr inbounds i8, i8* %1248, i64 2
  %1250 = load i8, i8* %1249, align 1
  %1251 = zext i8 %1250 to i32
  %1252 = shl i32 %1251, 16
  %1253 = or i32 %1246, %1252
  %1254 = load i8*, i8** %81, align 8
  %1255 = getelementptr inbounds i8, i8* %1254, i64 20
  %1256 = getelementptr inbounds i8, i8* %1255, i64 3
  %1257 = load i8, i8* %1256, align 1
  %1258 = zext i8 %1257 to i32
  %1259 = shl i32 %1258, 24
  %1260 = or i32 %1253, %1259
  %1261 = zext i32 %1260 to i64
  store i64 %1261, i64* %102, align 8
  %1262 = load i8*, i8** %81, align 8
  %1263 = getelementptr inbounds i8, i8* %1262, i64 24
  %1264 = getelementptr inbounds i8, i8* %1263, i64 0
  %1265 = load i8, i8* %1264, align 1
  %1266 = zext i8 %1265 to i32
  %1267 = load i8*, i8** %81, align 8
  %1268 = getelementptr inbounds i8, i8* %1267, i64 24
  %1269 = getelementptr inbounds i8, i8* %1268, i64 1
  %1270 = load i8, i8* %1269, align 1
  %1271 = zext i8 %1270 to i32
  %1272 = shl i32 %1271, 8
  %1273 = or i32 %1266, %1272
  %1274 = load i8*, i8** %81, align 8
  %1275 = getelementptr inbounds i8, i8* %1274, i64 24
  %1276 = getelementptr inbounds i8, i8* %1275, i64 2
  %1277 = load i8, i8* %1276, align 1
  %1278 = zext i8 %1277 to i32
  %1279 = shl i32 %1278, 16
  %1280 = or i32 %1273, %1279
  %1281 = load i8*, i8** %81, align 8
  %1282 = getelementptr inbounds i8, i8* %1281, i64 24
  %1283 = getelementptr inbounds i8, i8* %1282, i64 3
  %1284 = load i8, i8* %1283, align 1
  %1285 = zext i8 %1284 to i32
  %1286 = shl i32 %1285, 24
  %1287 = or i32 %1280, %1286
  %1288 = zext i32 %1287 to i64
  store i64 %1288, i64* %103, align 8
  %1289 = load i8*, i8** %81, align 8
  %1290 = getelementptr inbounds i8, i8* %1289, i64 42
  %1291 = getelementptr inbounds i8, i8* %1290, i64 0
  %1292 = load i8, i8* %1291, align 1
  %1293 = zext i8 %1292 to i32
  %1294 = load i8*, i8** %81, align 8
  %1295 = getelementptr inbounds i8, i8* %1294, i64 42
  %1296 = getelementptr inbounds i8, i8* %1295, i64 1
  %1297 = load i8, i8* %1296, align 1
  %1298 = zext i8 %1297 to i32
  %1299 = shl i32 %1298, 8
  %1300 = or i32 %1293, %1299
  %1301 = load i8*, i8** %81, align 8
  %1302 = getelementptr inbounds i8, i8* %1301, i64 42
  %1303 = getelementptr inbounds i8, i8* %1302, i64 2
  %1304 = load i8, i8* %1303, align 1
  %1305 = zext i8 %1304 to i32
  %1306 = shl i32 %1305, 16
  %1307 = or i32 %1300, %1306
  %1308 = load i8*, i8** %81, align 8
  %1309 = getelementptr inbounds i8, i8* %1308, i64 42
  %1310 = getelementptr inbounds i8, i8* %1309, i64 3
  %1311 = load i8, i8* %1310, align 1
  %1312 = zext i8 %1311 to i32
  %1313 = shl i32 %1312, 24
  %1314 = or i32 %1307, %1313
  %1315 = zext i32 %1314 to i64
  store i64 %1315, i64* %104, align 8
  %1316 = load i8*, i8** %81, align 8
  %1317 = getelementptr inbounds i8, i8* %1316, i64 28
  %1318 = getelementptr inbounds i8, i8* %1317, i64 0
  %1319 = load i8, i8* %1318, align 1
  %1320 = zext i8 %1319 to i32
  %1321 = load i8*, i8** %81, align 8
  %1322 = getelementptr inbounds i8, i8* %1321, i64 28
  %1323 = getelementptr inbounds i8, i8* %1322, i64 1
  %1324 = load i8, i8* %1323, align 1
  %1325 = zext i8 %1324 to i32
  %1326 = shl i32 %1325, 8
  %1327 = or i32 %1320, %1326
  store i32 %1327, i32* %100, align 4
  %1328 = load i8*, i8** %81, align 8
  %1329 = getelementptr inbounds i8, i8* %1328, i64 30
  %1330 = getelementptr inbounds i8, i8* %1329, i64 0
  %1331 = load i8, i8* %1330, align 1
  %1332 = zext i8 %1331 to i32
  %1333 = load i8*, i8** %81, align 8
  %1334 = getelementptr inbounds i8, i8* %1333, i64 30
  %1335 = getelementptr inbounds i8, i8* %1334, i64 1
  %1336 = load i8, i8* %1335, align 1
  %1337 = zext i8 %1336 to i32
  %1338 = shl i32 %1337, 8
  %1339 = or i32 %1332, %1338
  store i32 %1339, i32* %101, align 4
  %1340 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1341 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1340, i32 0, i32 15
  %1342 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1341, align 8
  %1343 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1342, i32 0, i32 5
  %1344 = load i32, i32* %1343, align 8
  %1345 = icmp ne i32 %1344, 0
  br i1 %1345, label %1524, label %1346

1346:                                             ; preds = %1234
  %1347 = load i32, i32* %101, align 4
  %1348 = icmp ne i32 %1347, 0
  br i1 %1348, label %1349, label %1524

1349:                                             ; preds = %1346
  %1350 = load i64, i64* %102, align 8
  %1351 = load i64, i64* %103, align 8
  %1352 = icmp ugt i64 %1350, %1351
  br i1 %1352, label %1353, label %1355

1353:                                             ; preds = %1349
  %1354 = load i64, i64* %102, align 8
  br label %1357

1355:                                             ; preds = %1349
  %1356 = load i64, i64* %103, align 8
  br label %1357

1357:                                             ; preds = %1355, %1353
  %1358 = phi i64 [ %1354, %1353 ], [ %1356, %1355 ]
  %1359 = load i64, i64* %104, align 8
  %1360 = icmp ugt i64 %1358, %1359
  br i1 %1360, label %1361, label %1371

1361:                                             ; preds = %1357
  %1362 = load i64, i64* %102, align 8
  %1363 = load i64, i64* %103, align 8
  %1364 = icmp ugt i64 %1362, %1363
  br i1 %1364, label %1365, label %1367

1365:                                             ; preds = %1361
  %1366 = load i64, i64* %102, align 8
  br label %1369

1367:                                             ; preds = %1361
  %1368 = load i64, i64* %103, align 8
  br label %1369

1369:                                             ; preds = %1367, %1365
  %1370 = phi i64 [ %1366, %1365 ], [ %1368, %1367 ]
  br label %1373

1371:                                             ; preds = %1357
  %1372 = load i64, i64* %104, align 8
  br label %1373

1373:                                             ; preds = %1371, %1369
  %1374 = phi i64 [ %1370, %1369 ], [ %1372, %1371 ]
  %1375 = icmp eq i64 %1374, 4294967295
  br i1 %1375, label %1376, label %1524

1376:                                             ; preds = %1373
  %1377 = load i32, i32* %101, align 4
  store i32 %1377, i32* %105, align 4
  %1378 = load i32, i32* %105, align 4
  %1379 = icmp ne i32 %1378, 0
  br i1 %1379, label %1380, label %1523

1380:                                             ; preds = %1376
  store i8* null, i8** %107, align 8
  %1381 = load i32, i32* %100, align 4
  %1382 = add i32 46, %1381
  %1383 = load i32, i32* %101, align 4
  %1384 = add i32 %1382, %1383
  %1385 = load i32, i32* %96, align 4
  %1386 = icmp ugt i32 %1384, %1385
  br i1 %1386, label %1387, label %1433

1387:                                             ; preds = %1380
  %1388 = load i32, i32* %101, align 4
  %1389 = zext i32 %1388 to i64
  %1390 = call noalias i8* @malloc(i64 noundef %1389) #7
  store i8* %1390, i8** %107, align 8
  %1391 = load i8*, i8** %107, align 8
  %1392 = icmp eq i8* %1391, null
  br i1 %1392, label %1393, label %1402

1393:                                             ; preds = %1387
  %1394 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1394, %struct.mz_zip_archive** %54, align 8
  store i32 16, i32* %55, align 4
  %1395 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %1396 = icmp ne %struct.mz_zip_archive* %1395, null
  br i1 %1396, label %1397, label %1401

1397:                                             ; preds = %1393
  %1398 = load i32, i32* %55, align 4
  %1399 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %1400 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1399, i32 0, i32 5
  store i32 %1398, i32* %1400, align 4
  br label %1401

1401:                                             ; preds = %1393, %1397
  store i32 0, i32* %72, align 4
  br label %1751

1402:                                             ; preds = %1387
  %1403 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1404 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1403, i32 0, i32 11
  %1405 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1404, align 8
  %1406 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1407 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1406, i32 0, i32 14
  %1408 = load i8*, i8** %1407, align 8
  %1409 = load i64, i64* %79, align 8
  %1410 = add i64 %1409, 46
  %1411 = load i32, i32* %100, align 4
  %1412 = zext i32 %1411 to i64
  %1413 = add i64 %1410, %1412
  %1414 = load i8*, i8** %107, align 8
  %1415 = load i32, i32* %101, align 4
  %1416 = zext i32 %1415 to i64
  %1417 = call i64 %1405(i8* noundef %1408, i64 noundef %1413, i8* noundef %1414, i64 noundef %1416)
  %1418 = load i32, i32* %101, align 4
  %1419 = zext i32 %1418 to i64
  %1420 = icmp ne i64 %1417, %1419
  br i1 %1420, label %1421, label %1431

1421:                                             ; preds = %1402
  %1422 = load i8*, i8** %107, align 8
  call void @free(i8* noundef %1422) #7
  %1423 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1423, %struct.mz_zip_archive** %56, align 8
  store i32 20, i32* %57, align 4
  %1424 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %56, align 8
  %1425 = icmp ne %struct.mz_zip_archive* %1424, null
  br i1 %1425, label %1426, label %1430

1426:                                             ; preds = %1421
  %1427 = load i32, i32* %57, align 4
  %1428 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %56, align 8
  %1429 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1428, i32 0, i32 5
  store i32 %1427, i32* %1429, align 4
  br label %1430

1430:                                             ; preds = %1421, %1426
  store i32 0, i32* %72, align 4
  br label %1751

1431:                                             ; preds = %1402
  %1432 = load i8*, i8** %107, align 8
  store i8* %1432, i8** %106, align 8
  br label %1439

1433:                                             ; preds = %1380
  %1434 = load i8*, i8** %81, align 8
  %1435 = getelementptr inbounds i8, i8* %1434, i64 46
  %1436 = load i32, i32* %100, align 4
  %1437 = zext i32 %1436 to i64
  %1438 = getelementptr inbounds i8, i8* %1435, i64 %1437
  store i8* %1438, i8** %106, align 8
  br label %1439

1439:                                             ; preds = %1433, %1431
  br label %1440

1440:                                             ; preds = %1518, %1439
  %1441 = load i32, i32* %105, align 4
  %1442 = zext i32 %1441 to i64
  %1443 = icmp ult i64 %1442, 4
  br i1 %1443, label %1444, label %1454

1444:                                             ; preds = %1440
  %1445 = load i8*, i8** %107, align 8
  call void @free(i8* noundef %1445) #7
  %1446 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1446, %struct.mz_zip_archive** %58, align 8
  store i32 9, i32* %59, align 4
  %1447 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %1448 = icmp ne %struct.mz_zip_archive* %1447, null
  br i1 %1448, label %1449, label %1453

1449:                                             ; preds = %1444
  %1450 = load i32, i32* %59, align 4
  %1451 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %1452 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1451, i32 0, i32 5
  store i32 %1450, i32* %1452, align 4
  br label %1453

1453:                                             ; preds = %1444, %1449
  store i32 0, i32* %72, align 4
  br label %1751

1454:                                             ; preds = %1440
  %1455 = load i8*, i8** %106, align 8
  %1456 = getelementptr inbounds i8, i8* %1455, i64 0
  %1457 = load i8, i8* %1456, align 1
  %1458 = zext i8 %1457 to i32
  %1459 = load i8*, i8** %106, align 8
  %1460 = getelementptr inbounds i8, i8* %1459, i64 1
  %1461 = load i8, i8* %1460, align 1
  %1462 = zext i8 %1461 to i32
  %1463 = shl i32 %1462, 8
  %1464 = or i32 %1458, %1463
  store i32 %1464, i32* %108, align 4
  %1465 = load i8*, i8** %106, align 8
  %1466 = getelementptr inbounds i8, i8* %1465, i64 2
  %1467 = getelementptr inbounds i8, i8* %1466, i64 0
  %1468 = load i8, i8* %1467, align 1
  %1469 = zext i8 %1468 to i32
  %1470 = load i8*, i8** %106, align 8
  %1471 = getelementptr inbounds i8, i8* %1470, i64 2
  %1472 = getelementptr inbounds i8, i8* %1471, i64 1
  %1473 = load i8, i8* %1472, align 1
  %1474 = zext i8 %1473 to i32
  %1475 = shl i32 %1474, 8
  %1476 = or i32 %1469, %1475
  store i32 %1476, i32* %109, align 4
  %1477 = load i32, i32* %109, align 4
  %1478 = zext i32 %1477 to i64
  %1479 = add i64 %1478, 4
  %1480 = load i32, i32* %105, align 4
  %1481 = zext i32 %1480 to i64
  %1482 = icmp ugt i64 %1479, %1481
  br i1 %1482, label %1483, label %1493

1483:                                             ; preds = %1454
  %1484 = load i8*, i8** %107, align 8
  call void @free(i8* noundef %1484) #7
  %1485 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1485, %struct.mz_zip_archive** %60, align 8
  store i32 9, i32* %61, align 4
  %1486 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %1487 = icmp ne %struct.mz_zip_archive* %1486, null
  br i1 %1487, label %1488, label %1492

1488:                                             ; preds = %1483
  %1489 = load i32, i32* %61, align 4
  %1490 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %1491 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1490, i32 0, i32 5
  store i32 %1489, i32* %1491, align 4
  br label %1492

1492:                                             ; preds = %1483, %1488
  store i32 0, i32* %72, align 4
  br label %1751

1493:                                             ; preds = %1454
  %1494 = load i32, i32* %108, align 4
  %1495 = icmp eq i32 %1494, 1
  br i1 %1495, label %1496, label %1505

1496:                                             ; preds = %1493
  %1497 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1498 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1497, i32 0, i32 15
  %1499 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1498, align 8
  %1500 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1499, i32 0, i32 4
  store i32 1, i32* %1500, align 4
  %1501 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1502 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1501, i32 0, i32 15
  %1503 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1502, align 8
  %1504 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1503, i32 0, i32 5
  store i32 1, i32* %1504, align 8
  br label %1521

1505:                                             ; preds = %1493
  %1506 = load i32, i32* %109, align 4
  %1507 = zext i32 %1506 to i64
  %1508 = add i64 4, %1507
  %1509 = load i8*, i8** %106, align 8
  %1510 = getelementptr inbounds i8, i8* %1509, i64 %1508
  store i8* %1510, i8** %106, align 8
  %1511 = load i32, i32* %105, align 4
  %1512 = zext i32 %1511 to i64
  %1513 = sub i64 %1512, 4
  %1514 = load i32, i32* %109, align 4
  %1515 = zext i32 %1514 to i64
  %1516 = sub i64 %1513, %1515
  %1517 = trunc i64 %1516 to i32
  store i32 %1517, i32* %105, align 4
  br label %1518

1518:                                             ; preds = %1505
  %1519 = load i32, i32* %105, align 4
  %1520 = icmp ne i32 %1519, 0
  br i1 %1520, label %1440, label %1521, !llvm.loop !109

1521:                                             ; preds = %1518, %1496
  %1522 = load i8*, i8** %107, align 8
  call void @free(i8* noundef %1522) #7
  br label %1523

1523:                                             ; preds = %1521, %1376
  br label %1524

1524:                                             ; preds = %1523, %1373, %1346, %1234
  %1525 = load i64, i64* %102, align 8
  %1526 = icmp ne i64 %1525, 4294967295
  br i1 %1526, label %1527, label %1578

1527:                                             ; preds = %1524
  %1528 = load i64, i64* %103, align 8
  %1529 = icmp ne i64 %1528, 4294967295
  br i1 %1529, label %1530, label %1578

1530:                                             ; preds = %1527
  %1531 = load i8*, i8** %81, align 8
  %1532 = getelementptr inbounds i8, i8* %1531, i64 10
  %1533 = getelementptr inbounds i8, i8* %1532, i64 0
  %1534 = load i8, i8* %1533, align 1
  %1535 = zext i8 %1534 to i32
  %1536 = load i8*, i8** %81, align 8
  %1537 = getelementptr inbounds i8, i8* %1536, i64 10
  %1538 = getelementptr inbounds i8, i8* %1537, i64 1
  %1539 = load i8, i8* %1538, align 1
  %1540 = zext i8 %1539 to i32
  %1541 = shl i32 %1540, 8
  %1542 = or i32 %1535, %1541
  %1543 = load i8*, i8** %81, align 8
  %1544 = getelementptr inbounds i8, i8* %1543, i64 10
  %1545 = getelementptr inbounds i8, i8* %1544, i64 2
  %1546 = load i8, i8* %1545, align 1
  %1547 = zext i8 %1546 to i32
  %1548 = shl i32 %1547, 16
  %1549 = or i32 %1542, %1548
  %1550 = load i8*, i8** %81, align 8
  %1551 = getelementptr inbounds i8, i8* %1550, i64 10
  %1552 = getelementptr inbounds i8, i8* %1551, i64 3
  %1553 = load i8, i8* %1552, align 1
  %1554 = zext i8 %1553 to i32
  %1555 = shl i32 %1554, 24
  %1556 = or i32 %1549, %1555
  %1557 = icmp ne i32 %1556, 0
  br i1 %1557, label %1562, label %1558

1558:                                             ; preds = %1530
  %1559 = load i64, i64* %103, align 8
  %1560 = load i64, i64* %102, align 8
  %1561 = icmp ne i64 %1559, %1560
  br i1 %1561, label %1568, label %1562

1562:                                             ; preds = %1558, %1530
  %1563 = load i64, i64* %103, align 8
  %1564 = icmp ne i64 %1563, 0
  br i1 %1564, label %1565, label %1577

1565:                                             ; preds = %1562
  %1566 = load i64, i64* %102, align 8
  %1567 = icmp ne i64 %1566, 0
  br i1 %1567, label %1577, label %1568

1568:                                             ; preds = %1565, %1558
  %1569 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1569, %struct.mz_zip_archive** %62, align 8
  store i32 9, i32* %63, align 4
  %1570 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %62, align 8
  %1571 = icmp ne %struct.mz_zip_archive* %1570, null
  br i1 %1571, label %1572, label %1576

1572:                                             ; preds = %1568
  %1573 = load i32, i32* %63, align 4
  %1574 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %62, align 8
  %1575 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1574, i32 0, i32 5
  store i32 %1573, i32* %1575, align 4
  br label %1576

1576:                                             ; preds = %1568, %1572
  store i32 0, i32* %72, align 4
  br label %1751

1577:                                             ; preds = %1565, %1562
  br label %1578

1578:                                             ; preds = %1577, %1527, %1524
  %1579 = load i8*, i8** %81, align 8
  %1580 = getelementptr inbounds i8, i8* %1579, i64 34
  %1581 = getelementptr inbounds i8, i8* %1580, i64 0
  %1582 = load i8, i8* %1581, align 1
  %1583 = zext i8 %1582 to i32
  %1584 = load i8*, i8** %81, align 8
  %1585 = getelementptr inbounds i8, i8* %1584, i64 34
  %1586 = getelementptr inbounds i8, i8* %1585, i64 1
  %1587 = load i8, i8* %1586, align 1
  %1588 = zext i8 %1587 to i32
  %1589 = shl i32 %1588, 8
  %1590 = or i32 %1583, %1589
  store i32 %1590, i32* %98, align 4
  %1591 = load i32, i32* %98, align 4
  %1592 = icmp eq i32 %1591, 65535
  br i1 %1592, label %1600, label %1593

1593:                                             ; preds = %1578
  %1594 = load i32, i32* %98, align 4
  %1595 = load i32, i32* %77, align 4
  %1596 = icmp ne i32 %1594, %1595
  br i1 %1596, label %1597, label %1609

1597:                                             ; preds = %1593
  %1598 = load i32, i32* %98, align 4
  %1599 = icmp ne i32 %1598, 1
  br i1 %1599, label %1600, label %1609

1600:                                             ; preds = %1597, %1578
  %1601 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1601, %struct.mz_zip_archive** %64, align 8
  store i32 10, i32* %65, align 4
  %1602 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %1603 = icmp ne %struct.mz_zip_archive* %1602, null
  br i1 %1603, label %1604, label %1608

1604:                                             ; preds = %1600
  %1605 = load i32, i32* %65, align 4
  %1606 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %1607 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1606, i32 0, i32 5
  store i32 %1605, i32* %1607, align 4
  br label %1608

1608:                                             ; preds = %1600, %1604
  store i32 0, i32* %72, align 4
  br label %1751

1609:                                             ; preds = %1597, %1593
  %1610 = load i64, i64* %102, align 8
  %1611 = icmp ne i64 %1610, 4294967295
  br i1 %1611, label %1612, label %1657

1612:                                             ; preds = %1609
  %1613 = load i8*, i8** %81, align 8
  %1614 = getelementptr inbounds i8, i8* %1613, i64 42
  %1615 = getelementptr inbounds i8, i8* %1614, i64 0
  %1616 = load i8, i8* %1615, align 1
  %1617 = zext i8 %1616 to i32
  %1618 = load i8*, i8** %81, align 8
  %1619 = getelementptr inbounds i8, i8* %1618, i64 42
  %1620 = getelementptr inbounds i8, i8* %1619, i64 1
  %1621 = load i8, i8* %1620, align 1
  %1622 = zext i8 %1621 to i32
  %1623 = shl i32 %1622, 8
  %1624 = or i32 %1617, %1623
  %1625 = load i8*, i8** %81, align 8
  %1626 = getelementptr inbounds i8, i8* %1625, i64 42
  %1627 = getelementptr inbounds i8, i8* %1626, i64 2
  %1628 = load i8, i8* %1627, align 1
  %1629 = zext i8 %1628 to i32
  %1630 = shl i32 %1629, 16
  %1631 = or i32 %1624, %1630
  %1632 = load i8*, i8** %81, align 8
  %1633 = getelementptr inbounds i8, i8* %1632, i64 42
  %1634 = getelementptr inbounds i8, i8* %1633, i64 3
  %1635 = load i8, i8* %1634, align 1
  %1636 = zext i8 %1635 to i32
  %1637 = shl i32 %1636, 24
  %1638 = or i32 %1631, %1637
  %1639 = zext i32 %1638 to i64
  %1640 = add i64 %1639, 30
  %1641 = load i64, i64* %102, align 8
  %1642 = add i64 %1640, %1641
  %1643 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %1644 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1643, i32 0, i32 0
  %1645 = load i64, i64* %1644, align 8
  %1646 = icmp ugt i64 %1642, %1645
  br i1 %1646, label %1647, label %1656

1647:                                             ; preds = %1612
  %1648 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1648, %struct.mz_zip_archive** %66, align 8
  store i32 9, i32* %67, align 4
  %1649 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %66, align 8
  %1650 = icmp ne %struct.mz_zip_archive* %1649, null
  br i1 %1650, label %1651, label %1655

1651:                                             ; preds = %1647
  %1652 = load i32, i32* %67, align 4
  %1653 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %66, align 8
  %1654 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1653, i32 0, i32 5
  store i32 %1652, i32* %1654, align 4
  br label %1655

1655:                                             ; preds = %1647, %1651
  store i32 0, i32* %72, align 4
  br label %1751

1656:                                             ; preds = %1612
  br label %1657

1657:                                             ; preds = %1656, %1609
  %1658 = load i8*, i8** %81, align 8
  %1659 = getelementptr inbounds i8, i8* %1658, i64 8
  %1660 = getelementptr inbounds i8, i8* %1659, i64 0
  %1661 = load i8, i8* %1660, align 1
  %1662 = zext i8 %1661 to i32
  %1663 = load i8*, i8** %81, align 8
  %1664 = getelementptr inbounds i8, i8* %1663, i64 8
  %1665 = getelementptr inbounds i8, i8* %1664, i64 1
  %1666 = load i8, i8* %1665, align 1
  %1667 = zext i8 %1666 to i32
  %1668 = shl i32 %1667, 8
  %1669 = or i32 %1662, %1668
  store i32 %1669, i32* %99, align 4
  %1670 = load i32, i32* %99, align 4
  %1671 = and i32 %1670, 8192
  %1672 = icmp ne i32 %1671, 0
  br i1 %1672, label %1673, label %1682

1673:                                             ; preds = %1657
  %1674 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1674, %struct.mz_zip_archive** %68, align 8
  store i32 5, i32* %69, align 4
  %1675 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  %1676 = icmp ne %struct.mz_zip_archive* %1675, null
  br i1 %1676, label %1677, label %1681

1677:                                             ; preds = %1673
  %1678 = load i32, i32* %69, align 4
  %1679 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  %1680 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1679, i32 0, i32 5
  store i32 %1678, i32* %1680, align 4
  br label %1681

1681:                                             ; preds = %1673, %1677
  store i32 0, i32* %72, align 4
  br label %1751

1682:                                             ; preds = %1657
  %1683 = load i8*, i8** %81, align 8
  %1684 = getelementptr inbounds i8, i8* %1683, i64 28
  %1685 = getelementptr inbounds i8, i8* %1684, i64 0
  %1686 = load i8, i8* %1685, align 1
  %1687 = zext i8 %1686 to i32
  %1688 = load i8*, i8** %81, align 8
  %1689 = getelementptr inbounds i8, i8* %1688, i64 28
  %1690 = getelementptr inbounds i8, i8* %1689, i64 1
  %1691 = load i8, i8* %1690, align 1
  %1692 = zext i8 %1691 to i32
  %1693 = shl i32 %1692, 8
  %1694 = or i32 %1687, %1693
  %1695 = add i32 46, %1694
  %1696 = load i8*, i8** %81, align 8
  %1697 = getelementptr inbounds i8, i8* %1696, i64 30
  %1698 = getelementptr inbounds i8, i8* %1697, i64 0
  %1699 = load i8, i8* %1698, align 1
  %1700 = zext i8 %1699 to i32
  %1701 = load i8*, i8** %81, align 8
  %1702 = getelementptr inbounds i8, i8* %1701, i64 30
  %1703 = getelementptr inbounds i8, i8* %1702, i64 1
  %1704 = load i8, i8* %1703, align 1
  %1705 = zext i8 %1704 to i32
  %1706 = shl i32 %1705, 8
  %1707 = or i32 %1700, %1706
  %1708 = add i32 %1695, %1707
  %1709 = load i8*, i8** %81, align 8
  %1710 = getelementptr inbounds i8, i8* %1709, i64 32
  %1711 = getelementptr inbounds i8, i8* %1710, i64 0
  %1712 = load i8, i8* %1711, align 1
  %1713 = zext i8 %1712 to i32
  %1714 = load i8*, i8** %81, align 8
  %1715 = getelementptr inbounds i8, i8* %1714, i64 32
  %1716 = getelementptr inbounds i8, i8* %1715, i64 1
  %1717 = load i8, i8* %1716, align 1
  %1718 = zext i8 %1717 to i32
  %1719 = shl i32 %1718, 8
  %1720 = or i32 %1713, %1719
  %1721 = add i32 %1708, %1720
  store i32 %1721, i32* %97, align 4
  %1722 = load i32, i32* %96, align 4
  %1723 = icmp ugt i32 %1721, %1722
  br i1 %1723, label %1724, label %1733

1724:                                             ; preds = %1682
  %1725 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  store %struct.mz_zip_archive* %1725, %struct.mz_zip_archive** %70, align 8
  store i32 9, i32* %71, align 4
  %1726 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %70, align 8
  %1727 = icmp ne %struct.mz_zip_archive* %1726, null
  br i1 %1727, label %1728, label %1732

1728:                                             ; preds = %1724
  %1729 = load i32, i32* %71, align 4
  %1730 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %70, align 8
  %1731 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1730, i32 0, i32 5
  store i32 %1729, i32* %1731, align 4
  br label %1732

1732:                                             ; preds = %1724, %1728
  store i32 0, i32* %72, align 4
  br label %1751

1733:                                             ; preds = %1682
  %1734 = load i32, i32* %97, align 4
  %1735 = load i32, i32* %96, align 4
  %1736 = sub i32 %1735, %1734
  store i32 %1736, i32* %96, align 4
  %1737 = load i32, i32* %97, align 4
  %1738 = load i8*, i8** %81, align 8
  %1739 = zext i32 %1737 to i64
  %1740 = getelementptr inbounds i8, i8* %1738, i64 %1739
  store i8* %1740, i8** %81, align 8
  br label %1741

1741:                                             ; preds = %1733
  %1742 = load i32, i32* %95, align 4
  %1743 = add i32 %1742, 1
  store i32 %1743, i32* %95, align 4
  br label %1156, !llvm.loop !110

1744:                                             ; preds = %1156
  br label %1745

1745:                                             ; preds = %1744, %998
  %1746 = load i32, i32* %84, align 4
  %1747 = icmp ne i32 %1746, 0
  br i1 %1747, label %1748, label %1750

1748:                                             ; preds = %1745
  %1749 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  call void @mz_zip_reader_sort_central_dir_offsets_by_filename(%struct.mz_zip_archive* noundef %1749)
  br label %1750

1750:                                             ; preds = %1748, %1745
  store i32 1, i32* %72, align 4
  br label %1751

1751:                                             ; preds = %1750, %1732, %1681, %1655, %1608, %1576, %1492, %1453, %1430, %1401, %1197, %1147, %1117, %1074, %997, %979, %961, %941, %811, %797, %781, %769, %757, %321, %202, %165, %145, %132
  %1752 = load i32, i32* %72, align 4
  ret i32 %1752
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_init_mem(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %10, align 8
  store i8* %1, i8** %11, align 8
  store i64 %2, i64* %12, align 8
  store i32 %3, i32* %13, align 4
  %14 = load i8*, i8** %11, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %4
  %17 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  store %struct.mz_zip_archive* %17, %struct.mz_zip_archive** %5, align 8
  store i32 24, i32* %6, align 4
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %19 = icmp ne %struct.mz_zip_archive* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = load i32, i32* %6, align 4
  %22 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %22, i32 0, i32 5
  store i32 %21, i32* %23, align 4
  br label %24

24:                                               ; preds = %16, %20
  store i32 0, i32* %9, align 4
  br label %75

25:                                               ; preds = %4
  %26 = load i64, i64* %12, align 8
  %27 = icmp ult i64 %26, 22
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  store %struct.mz_zip_archive* %29, %struct.mz_zip_archive** %7, align 8
  store i32 8, i32* %8, align 4
  %30 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %31 = icmp ne %struct.mz_zip_archive* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = load i32, i32* %8, align 4
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 5
  store i32 %33, i32* %35, align 4
  br label %36

36:                                               ; preds = %28, %32
  store i32 0, i32* %9, align 4
  br label %75

37:                                               ; preds = %25
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %39 = load i32, i32* %13, align 4
  %40 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive* noundef %38, i32 noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  store i32 0, i32* %9, align 4
  br label %75

43:                                               ; preds = %37
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %44, i32 0, i32 4
  store i32 2, i32* %45, align 8
  %46 = load i64, i64* %12, align 8
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %47, i32 0, i32 0
  store i64 %46, i64* %48, align 8
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %49, i32 0, i32 11
  store i64 (i8*, i64, i8*, i64)* @mz_zip_mem_read_func, i64 (i8*, i64, i8*, i64)** %50, align 8
  %51 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %52 = bitcast %struct.mz_zip_archive* %51 to i8*
  %53 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %53, i32 0, i32 14
  store i8* %52, i8** %54, align 8
  %55 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %55, i32 0, i32 13
  store i32 (i8*)* null, i32 (i8*)** %56, align 8
  %57 = load i8*, i8** %11, align 8
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %58, i32 0, i32 15
  %60 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %59, align 8
  %61 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %60, i32 0, i32 8
  store i8* %57, i8** %61, align 8
  %62 = load i64, i64* %12, align 8
  %63 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %63, i32 0, i32 15
  %65 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %64, align 8
  %66 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %65, i32 0, i32 9
  store i64 %62, i64* %66, align 8
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %68 = load i32, i32* %13, align 4
  %69 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive* noundef %67, i32 noundef %68)
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %43
  %72 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %73 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %72, i32 noundef 0)
  store i32 0, i32* %9, align 4
  br label %75

74:                                               ; preds = %43
  store i32 1, i32* %9, align 4
  br label %75

75:                                               ; preds = %74, %71, %42, %36, %24
  %76 = load i32, i32* %9, align 4
  ret i32 %76
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_mem_read_func(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = bitcast i8* %11 to %struct.mz_zip_archive*
  store %struct.mz_zip_archive* %12, %struct.mz_zip_archive** %9, align 8
  %13 = load i64, i64* %6, align 8
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp uge i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %4
  br label %37

19:                                               ; preds = %4
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i64, i64* %6, align 8
  %24 = sub i64 %22, %23
  %25 = load i64, i64* %8, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %19
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %28, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %6, align 8
  %32 = sub i64 %30, %31
  br label %35

33:                                               ; preds = %19
  %34 = load i64, i64* %8, align 8
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64 [ %32, %27 ], [ %34, %33 ]
  br label %37

37:                                               ; preds = %35, %18
  %38 = phi i64 [ 0, %18 ], [ %36, %35 ]
  store i64 %38, i64* %10, align 8
  %39 = load i8*, i8** %7, align 8
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %40, i32 0, i32 15
  %42 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %41, align 8
  %43 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %42, i32 0, i32 8
  %44 = load i8*, i8** %43, align 8
  %45 = load i64, i64* %6, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %46, i64 %47, i1 false)
  %48 = load i64, i64* %10, align 8
  ret i64 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_init_file(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = call i32 @mz_zip_reader_init_file_v2(%struct.mz_zip_archive* noundef %7, i8* noundef %8, i32 noundef %9, i64 noundef 0, i64 noundef 0)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_init_file_v2(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i32 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.mz_zip_archive*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca %struct._IO_FILE*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %15, align 8
  store i8* %1, i8** %16, align 8
  store i32 %2, i32* %17, align 4
  store i64 %3, i64* %18, align 8
  store i64 %4, i64* %19, align 8
  %22 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %23 = icmp ne %struct.mz_zip_archive* %22, null
  br i1 %23, label %24, label %33

24:                                               ; preds = %5
  %25 = load i8*, i8** %16, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = load i64, i64* %19, align 8
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  %31 = load i64, i64* %19, align 8
  %32 = icmp ult i64 %31, 22
  br i1 %32, label %33, label %42

33:                                               ; preds = %30, %24, %5
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %34, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %35 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %36 = icmp ne %struct.mz_zip_archive* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = load i32, i32* %7, align 4
  %39 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %39, i32 0, i32 5
  store i32 %38, i32* %40, align 4
  br label %41

41:                                               ; preds = %33, %37
  store i32 0, i32* %14, align 4
  br label %130

42:                                               ; preds = %30, %27
  %43 = load i8*, i8** %16, align 8
  %44 = call noalias %struct._IO_FILE* @fopen(i8* noundef %43, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  store %struct._IO_FILE* %44, %struct._IO_FILE** %21, align 8
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %46 = icmp ne %struct._IO_FILE* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %48, %struct.mz_zip_archive** %8, align 8
  store i32 17, i32* %9, align 4
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %50 = icmp ne %struct.mz_zip_archive* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = load i32, i32* %9, align 4
  %53 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %53, i32 0, i32 5
  store i32 %52, i32* %54, align 4
  br label %55

55:                                               ; preds = %47, %51
  store i32 0, i32* %14, align 4
  br label %130

56:                                               ; preds = %42
  %57 = load i64, i64* %19, align 8
  store i64 %57, i64* %20, align 8
  %58 = load i64, i64* %20, align 8
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %56
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %62 = call i32 @fseeko(%struct._IO_FILE* noundef %61, i64 noundef 0, i32 noundef 2)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %60
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %66 = call i32 @fclose(%struct._IO_FILE* noundef %65)
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %67, %struct.mz_zip_archive** %10, align 8
  store i32 22, i32* %11, align 4
  %68 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %69 = icmp ne %struct.mz_zip_archive* %68, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %64
  %71 = load i32, i32* %11, align 4
  %72 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %72, i32 0, i32 5
  store i32 %71, i32* %73, align 4
  br label %74

74:                                               ; preds = %64, %70
  store i32 0, i32* %14, align 4
  br label %130

75:                                               ; preds = %60
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %77 = call i64 @ftello(%struct._IO_FILE* noundef %76)
  store i64 %77, i64* %20, align 8
  br label %78

78:                                               ; preds = %75, %56
  %79 = load i64, i64* %20, align 8
  %80 = icmp ult i64 %79, 22
  br i1 %80, label %81, label %92

81:                                               ; preds = %78
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %83 = call i32 @fclose(%struct._IO_FILE* noundef %82)
  %84 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %84, %struct.mz_zip_archive** %12, align 8
  store i32 8, i32* %13, align 4
  %85 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %86 = icmp ne %struct.mz_zip_archive* %85, null
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = load i32, i32* %13, align 4
  %89 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %89, i32 0, i32 5
  store i32 %88, i32* %90, align 4
  br label %91

91:                                               ; preds = %81, %87
  store i32 0, i32* %14, align 4
  br label %130

92:                                               ; preds = %78
  %93 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %94 = load i32, i32* %17, align 4
  %95 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive* noundef %93, i32 noundef %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %99 = call i32 @fclose(%struct._IO_FILE* noundef %98)
  store i32 0, i32* %14, align 4
  br label %130

100:                                              ; preds = %92
  %101 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %102 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %101, i32 0, i32 4
  store i32 4, i32* %102, align 8
  %103 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %104 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %103, i32 0, i32 11
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_read_func, i64 (i8*, i64, i8*, i64)** %104, align 8
  %105 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %106 = bitcast %struct.mz_zip_archive* %105 to i8*
  %107 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %108 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %107, i32 0, i32 14
  store i8* %106, i8** %108, align 8
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8
  %110 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %110, i32 0, i32 15
  %112 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %111, align 8
  %113 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %112, i32 0, i32 6
  store %struct._IO_FILE* %109, %struct._IO_FILE** %113, align 8
  %114 = load i64, i64* %20, align 8
  %115 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %116 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %115, i32 0, i32 0
  store i64 %114, i64* %116, align 8
  %117 = load i64, i64* %18, align 8
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %119 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %118, i32 0, i32 15
  %120 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %119, align 8
  %121 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %120, i32 0, i32 7
  store i64 %117, i64* %121, align 8
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %123 = load i32, i32* %17, align 4
  %124 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive* noundef %122, i32 noundef %123)
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %100
  %127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %128 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %127, i32 noundef 0)
  store i32 0, i32* %14, align 4
  br label %130

129:                                              ; preds = %100
  store i32 1, i32* %14, align 4
  br label %130

130:                                              ; preds = %129, %126, %97, %91, %74, %55, %41
  %131 = load i32, i32* %14, align 4
  ret i32 %131
}

declare dso_local noalias %struct._IO_FILE* @fopen(i8* noundef, i8* noundef) #5

declare dso_local i32 @fseeko(%struct._IO_FILE* noundef, i64 noundef, i32 noundef) #5

declare dso_local i32 @fclose(%struct._IO_FILE* noundef) #5

declare dso_local i64 @ftello(%struct._IO_FILE* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_file_read_func(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = bitcast i8* %12 to %struct.mz_zip_archive*
  store %struct.mz_zip_archive* %13, %struct.mz_zip_archive** %10, align 8
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %14, i32 0, i32 15
  %16 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %15, align 8
  %17 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %16, i32 0, i32 6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8
  %19 = call i64 @ftello(%struct._IO_FILE* noundef %18)
  store i64 %19, i64* %11, align 8
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 15
  %22 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %21, align 8
  %23 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %22, i32 0, i32 7
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %7, align 8
  %26 = add i64 %25, %24
  store i64 %26, i64* %7, align 8
  %27 = load i64, i64* %7, align 8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %4
  %30 = load i64, i64* %11, align 8
  %31 = load i64, i64* %7, align 8
  %32 = icmp ne i64 %30, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %29
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 15
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %35, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %36, i32 0, i32 6
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %37, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i32 @fseeko(%struct._IO_FILE* noundef %38, i64 noundef %39, i32 noundef 0)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %33, %4
  store i64 0, i64* %5, align 8
  br label %52

43:                                               ; preds = %33, %29
  %44 = load i8*, i8** %8, align 8
  %45 = load i64, i64* %9, align 8
  %46 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %46, i32 0, i32 15
  %48 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %47, align 8
  %49 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %48, i32 0, i32 6
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %49, align 8
  %51 = call i64 @fread(i8* noundef %44, i64 noundef 1, i64 noundef %45, %struct._IO_FILE* noundef %50)
  store i64 %51, i64* %5, align 8
  br label %52

52:                                               ; preds = %43, %42
  %53 = load i64, i64* %5, align 8
  ret i64 %53
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_init_cfile(%struct.mz_zip_archive* noundef %0, %struct._IO_FILE* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %12, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %13, align 8
  store i64 %2, i64* %14, align 8
  store i32 %3, i32* %15, align 4
  %17 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %18 = icmp ne %struct.mz_zip_archive* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %21 = icmp ne %struct._IO_FILE* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %19, %4
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %23, %struct.mz_zip_archive** %5, align 8
  store i32 17, i32* %6, align 4
  %24 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %25 = icmp ne %struct.mz_zip_archive* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load i32, i32* %6, align 4
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %28, i32 0, i32 5
  store i32 %27, i32* %29, align 4
  br label %30

30:                                               ; preds = %22, %26
  store i32 0, i32* %11, align 4
  br label %102

31:                                               ; preds = %19
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %33 = call i64 @ftello(%struct._IO_FILE* noundef %32)
  store i64 %33, i64* %16, align 8
  %34 = load i64, i64* %14, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %31
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %38 = call i32 @fseeko(%struct._IO_FILE* noundef %37, i64 noundef 0, i32 noundef 2)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %36
  %41 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %41, %struct.mz_zip_archive** %7, align 8
  store i32 22, i32* %8, align 4
  %42 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %43 = icmp ne %struct.mz_zip_archive* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = load i32, i32* %8, align 4
  %46 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %46, i32 0, i32 5
  store i32 %45, i32* %47, align 4
  br label %48

48:                                               ; preds = %40, %44
  store i32 0, i32* %11, align 4
  br label %102

49:                                               ; preds = %36
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %51 = call i64 @ftello(%struct._IO_FILE* noundef %50)
  %52 = load i64, i64* %16, align 8
  %53 = sub i64 %51, %52
  store i64 %53, i64* %14, align 8
  %54 = load i64, i64* %14, align 8
  %55 = icmp ult i64 %54, 22
  br i1 %55, label %56, label %65

56:                                               ; preds = %49
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %57, %struct.mz_zip_archive** %9, align 8
  store i32 8, i32* %10, align 4
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %59 = icmp ne %struct.mz_zip_archive* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i32, i32* %10, align 4
  %62 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %62, i32 0, i32 5
  store i32 %61, i32* %63, align 4
  br label %64

64:                                               ; preds = %56, %60
  store i32 0, i32* %11, align 4
  br label %102

65:                                               ; preds = %49
  br label %66

66:                                               ; preds = %65, %31
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %68 = load i32, i32* %15, align 4
  %69 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive* noundef %67, i32 noundef %68)
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %66
  store i32 0, i32* %11, align 4
  br label %102

72:                                               ; preds = %66
  %73 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %73, i32 0, i32 4
  store i32 5, i32* %74, align 8
  %75 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %75, i32 0, i32 11
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_read_func, i64 (i8*, i64, i8*, i64)** %76, align 8
  %77 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %78 = bitcast %struct.mz_zip_archive* %77 to i8*
  %79 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %80 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %79, i32 0, i32 14
  store i8* %78, i8** %80, align 8
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %82 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %82, i32 0, i32 15
  %84 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %83, align 8
  %85 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %84, i32 0, i32 6
  store %struct._IO_FILE* %81, %struct._IO_FILE** %85, align 8
  %86 = load i64, i64* %14, align 8
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %87, i32 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = load i64, i64* %16, align 8
  %90 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %90, i32 0, i32 15
  %92 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %91, align 8
  %93 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %92, i32 0, i32 7
  store i64 %89, i64* %93, align 8
  %94 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %95 = load i32, i32* %15, align 4
  %96 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive* noundef %94, i32 noundef %95)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %72
  %99 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %100 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %99, i32 noundef 0)
  store i32 0, i32* %11, align 4
  br label %102

101:                                              ; preds = %72
  store i32 1, i32* %11, align 4
  br label %102

102:                                              ; preds = %101, %98, %71, %64, %48, %30
  %103 = load i32, i32* %11, align 4
  ret i32 %103
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_is_file_encrypted(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %9, align 8
  store i32 %1, i32* %10, align 4
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %14 = load i32, i32* %10, align 4
  store %struct.mz_zip_archive* %13, %struct.mz_zip_archive** %4, align 8
  store i32 %14, i32* %5, align 4
  %15 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %16 = icmp ne %struct.mz_zip_archive* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %2
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %18, i32 0, i32 15
  %20 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %19, align 8
  %21 = icmp ne %struct.mz_zip_internal_state_tag* %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = load i32, i32* %5, align 4
  %24 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp uge i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %17, %2
  store i8* null, i8** %3, align 8
  br label %49

29:                                               ; preds = %22
  %30 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %31 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %30, i32 0, i32 15
  %32 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %31, align 8
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %36, i32 0, i32 15
  %38 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %37, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %38, i32 0, i32 1
  %40 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %39, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %5, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %35, i64 %47
  store i8* %48, i8** %3, align 8
  br label %49

49:                                               ; preds = %28, %29
  %50 = load i8*, i8** %3, align 8
  store i8* %50, i8** %12, align 8
  %51 = load i8*, i8** %12, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  store %struct.mz_zip_archive* %54, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %55 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %56 = icmp ne %struct.mz_zip_archive* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = load i32, i32* %7, align 4
  %59 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %59, i32 0, i32 5
  store i32 %58, i32* %60, align 4
  br label %61

61:                                               ; preds = %53, %57
  store i32 0, i32* %8, align 4
  br label %79

62:                                               ; preds = %49
  %63 = load i8*, i8** %12, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 8
  %65 = getelementptr inbounds i8, i8* %64, i64 0
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = load i8*, i8** %12, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl i32 %72, 8
  %74 = or i32 %67, %73
  store i32 %74, i32* %11, align 4
  %75 = load i32, i32* %11, align 4
  %76 = and i32 %75, 65
  %77 = icmp ne i32 %76, 0
  %78 = zext i1 %77 to i32
  store i32 %78, i32* %8, align 4
  br label %79

79:                                               ; preds = %62, %61
  %80 = load i32, i32* %8, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_is_file_supported(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.mz_zip_archive*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %15, align 8
  store i32 %1, i32* %16, align 4
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %21 = load i32, i32* %16, align 4
  store %struct.mz_zip_archive* %20, %struct.mz_zip_archive** %4, align 8
  store i32 %21, i32* %5, align 4
  %22 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %23 = icmp ne %struct.mz_zip_archive* %22, null
  br i1 %23, label %24, label %35

24:                                               ; preds = %2
  %25 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %25, i32 0, i32 15
  %27 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %26, align 8
  %28 = icmp ne %struct.mz_zip_internal_state_tag* %27, null
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = load i32, i32* %5, align 4
  %31 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp uge i32 %30, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %24, %2
  store i8* null, i8** %3, align 8
  br label %56

36:                                               ; preds = %29
  %37 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %37, i32 0, i32 15
  %39 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %38, align 8
  %40 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %39, i32 0, i32 0
  %41 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %40, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %43, i32 0, i32 15
  %45 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %44, align 8
  %46 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %45, i32 0, i32 1
  %47 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %5, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %42, i64 %54
  store i8* %55, i8** %3, align 8
  br label %56

56:                                               ; preds = %35, %36
  %57 = load i8*, i8** %3, align 8
  store i8* %57, i8** %19, align 8
  %58 = load i8*, i8** %19, align 8
  %59 = icmp ne i8* %58, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %61, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %62 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %63 = icmp ne %struct.mz_zip_archive* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = load i32, i32* %7, align 4
  %66 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %67 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %66, i32 0, i32 5
  store i32 %65, i32* %67, align 4
  br label %68

68:                                               ; preds = %60, %64
  store i32 0, i32* %14, align 4
  br label %135

69:                                               ; preds = %56
  %70 = load i8*, i8** %19, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 10
  %72 = getelementptr inbounds i8, i8* %71, i64 0
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i8*, i8** %19, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 10
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl i32 %79, 8
  %81 = or i32 %74, %80
  store i32 %81, i32* %18, align 4
  %82 = load i8*, i8** %19, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 8
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = load i8*, i8** %19, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = getelementptr inbounds i8, i8* %88, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl i32 %91, 8
  %93 = or i32 %86, %92
  store i32 %93, i32* %17, align 4
  %94 = load i32, i32* %18, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %69
  %97 = load i32, i32* %18, align 4
  %98 = icmp ne i32 %97, 8
  br i1 %98, label %99, label %108

99:                                               ; preds = %96
  %100 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %100, %struct.mz_zip_archive** %8, align 8
  store i32 4, i32* %9, align 4
  %101 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %102 = icmp ne %struct.mz_zip_archive* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = load i32, i32* %9, align 4
  %105 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %106 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %105, i32 0, i32 5
  store i32 %104, i32* %106, align 4
  br label %107

107:                                              ; preds = %99, %103
  store i32 0, i32* %14, align 4
  br label %135

108:                                              ; preds = %96, %69
  %109 = load i32, i32* %17, align 4
  %110 = and i32 %109, 65
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %121

112:                                              ; preds = %108
  %113 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %113, %struct.mz_zip_archive** %10, align 8
  store i32 5, i32* %11, align 4
  %114 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %115 = icmp ne %struct.mz_zip_archive* %114, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = load i32, i32* %11, align 4
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %119 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %118, i32 0, i32 5
  store i32 %117, i32* %119, align 4
  br label %120

120:                                              ; preds = %112, %116
  store i32 0, i32* %14, align 4
  br label %135

121:                                              ; preds = %108
  %122 = load i32, i32* %17, align 4
  %123 = and i32 %122, 32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %134

125:                                              ; preds = %121
  %126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_archive* %126, %struct.mz_zip_archive** %12, align 8
  store i32 6, i32* %13, align 4
  %127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %128 = icmp ne %struct.mz_zip_archive* %127, null
  br i1 %128, label %129, label %133

129:                                              ; preds = %125
  %130 = load i32, i32* %13, align 4
  %131 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %132 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %131, i32 0, i32 5
  store i32 %130, i32* %132, align 4
  br label %133

133:                                              ; preds = %125, %129
  store i32 0, i32* %14, align 4
  br label %135

134:                                              ; preds = %121
  store i32 1, i32* %14, align 4
  br label %135

135:                                              ; preds = %134, %133, %120, %107, %68
  %136 = load i32, i32* %14, align 4
  ret i32 %136
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_is_file_a_directory(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %9, align 8
  store i32 %1, i32* %10, align 4
  %15 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %16 = load i32, i32* %10, align 4
  store %struct.mz_zip_archive* %15, %struct.mz_zip_archive** %4, align 8
  store i32 %16, i32* %5, align 4
  %17 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %18 = icmp ne %struct.mz_zip_archive* %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %2
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 15
  %22 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %21, align 8
  %23 = icmp ne %struct.mz_zip_internal_state_tag* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = load i32, i32* %5, align 4
  %26 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %26, i32 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp uge i32 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %24, %19, %2
  store i8* null, i8** %3, align 8
  br label %51

31:                                               ; preds = %24
  %32 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %32, i32 0, i32 15
  %34 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %33, align 8
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %38, i32 0, i32 15
  %40 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %39, align 8
  %41 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %40, i32 0, i32 1
  %42 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %5, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %37, i64 %49
  store i8* %50, i8** %3, align 8
  br label %51

51:                                               ; preds = %30, %31
  %52 = load i8*, i8** %3, align 8
  store i8* %52, i8** %14, align 8
  %53 = load i8*, i8** %14, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  store %struct.mz_zip_archive* %56, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %58 = icmp ne %struct.mz_zip_archive* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = load i32, i32* %7, align 4
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %61, i32 0, i32 5
  store i32 %60, i32* %62, align 4
  br label %63

63:                                               ; preds = %55, %59
  store i32 0, i32* %8, align 4
  br label %137

64:                                               ; preds = %51
  %65 = load i8*, i8** %14, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 28
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = load i8*, i8** %14, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 28
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 8
  %76 = or i32 %69, %75
  store i32 %76, i32* %11, align 4
  %77 = load i32, i32* %11, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %64
  %80 = load i8*, i8** %14, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 46
  %82 = load i32, i32* %11, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %81, i64 %83
  %85 = getelementptr inbounds i8, i8* %84, i64 -1
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = icmp eq i32 %87, 47
  br i1 %88, label %89, label %90

89:                                               ; preds = %79
  store i32 1, i32* %8, align 4
  br label %137

90:                                               ; preds = %79
  br label %91

91:                                               ; preds = %90, %64
  %92 = load i8*, i8** %14, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 4
  %94 = getelementptr inbounds i8, i8* %93, i64 0
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = load i8*, i8** %14, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 4
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl i32 %101, 8
  %103 = or i32 %96, %102
  %104 = lshr i32 %103, 8
  store i32 %104, i32* %12, align 4
  %105 = load i32, i32* %12, align 4
  %106 = load i8*, i8** %14, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 38
  %108 = getelementptr inbounds i8, i8* %107, i64 0
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = load i8*, i8** %14, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 38
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl i32 %115, 8
  %117 = or i32 %110, %116
  %118 = load i8*, i8** %14, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 38
  %120 = getelementptr inbounds i8, i8* %119, i64 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = shl i32 %122, 16
  %124 = or i32 %117, %123
  %125 = load i8*, i8** %14, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 38
  %127 = getelementptr inbounds i8, i8* %126, i64 3
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = shl i32 %129, 24
  %131 = or i32 %124, %130
  store i32 %131, i32* %13, align 4
  %132 = load i32, i32* %13, align 4
  %133 = and i32 %132, 16
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %91
  store i32 1, i32* %8, align 4
  br label %137

136:                                              ; preds = %91
  store i32 0, i32* %8, align 4
  br label %137

137:                                              ; preds = %136, %135, %89, %63
  %138 = load i32, i32* %8, align 4
  ret i32 %138
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %11, i8* noundef %12, i8* noundef %13, i32 noundef %14, i32* noundef %10)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 -1, i32* %5, align 4
  br label %20

18:                                               ; preds = %4
  %19 = load i32, i32* %10, align 4
  store i32 %19, i32* %5, align 4
  br label %20

20:                                               ; preds = %18, %17
  %21 = load i32, i32* %5, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3, i32* noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.mz_zip_archive*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %struct.mz_zip_archive*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i8*, align 8
  %41 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %27, align 8
  store i8* %1, i8** %28, align 8
  store i8* %2, i8** %29, align 8
  store i32 %3, i32* %30, align 4
  store i32* %4, i32** %31, align 8
  %42 = load i32*, i32** %31, align 8
  %43 = icmp ne i32* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %5
  %45 = load i32*, i32** %31, align 8
  store i32 0, i32* %45, align 4
  br label %46

46:                                               ; preds = %44, %5
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %48 = icmp ne %struct.mz_zip_archive* %47, null
  br i1 %48, label %49, label %57

49:                                               ; preds = %46
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %50, i32 0, i32 15
  %52 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %51, align 8
  %53 = icmp ne %struct.mz_zip_internal_state_tag* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load i8*, i8** %28, align 8
  %56 = icmp ne i8* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %54, %49, %46
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %58, %struct.mz_zip_archive** %18, align 8
  store i32 24, i32* %19, align 4
  %59 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %60 = icmp ne %struct.mz_zip_archive* %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = load i32, i32* %19, align 4
  %63 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %63, i32 0, i32 5
  store i32 %62, i32* %64, align 4
  br label %65

65:                                               ; preds = %57, %61
  store i32 0, i32* %26, align 4
  br label %489

66:                                               ; preds = %54
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %67, i32 0, i32 15
  %69 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %68, align 8
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 2048
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %99

74:                                               ; preds = %66
  %75 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %75, i32 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %99

79:                                               ; preds = %74
  %80 = load i32, i32* %30, align 4
  %81 = and i32 %80, 768
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %99

83:                                               ; preds = %79
  %84 = load i8*, i8** %29, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %87, i32 0, i32 15
  %89 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %88, align 8
  %90 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %89, i32 0, i32 2
  %91 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %90, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %86
  %95 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %96 = load i8*, i8** %28, align 8
  %97 = load i32*, i32** %31, align 8
  %98 = call i32 @mz_zip_locate_file_binary_search(%struct.mz_zip_archive* noundef %95, i8* noundef %96, i32* noundef %97)
  store i32 %98, i32* %26, align 4
  br label %489

99:                                               ; preds = %86, %83, %79, %74, %66
  %100 = load i8*, i8** %28, align 8
  %101 = call i64 @strlen(i8* noundef %100) #9
  store i64 %101, i64* %33, align 8
  %102 = load i64, i64* %33, align 8
  %103 = icmp ugt i64 %102, 65535
  br i1 %103, label %104, label %113

104:                                              ; preds = %99
  %105 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %105, %struct.mz_zip_archive** %20, align 8
  store i32 24, i32* %21, align 4
  %106 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %107 = icmp ne %struct.mz_zip_archive* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = load i32, i32* %21, align 4
  %110 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %110, i32 0, i32 5
  store i32 %109, i32* %111, align 4
  br label %112

112:                                              ; preds = %104, %108
  store i32 0, i32* %26, align 4
  br label %489

113:                                              ; preds = %99
  %114 = load i8*, i8** %29, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %116, label %119

116:                                              ; preds = %113
  %117 = load i8*, i8** %29, align 8
  %118 = call i64 @strlen(i8* noundef %117) #9
  br label %120

119:                                              ; preds = %113
  br label %120

120:                                              ; preds = %119, %116
  %121 = phi i64 [ %118, %116 ], [ 0, %119 ]
  store i64 %121, i64* %34, align 8
  %122 = load i64, i64* %34, align 8
  %123 = icmp ugt i64 %122, 65535
  br i1 %123, label %124, label %133

124:                                              ; preds = %120
  %125 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %125, %struct.mz_zip_archive** %22, align 8
  store i32 24, i32* %23, align 4
  %126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %127 = icmp ne %struct.mz_zip_archive* %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = load i32, i32* %23, align 4
  %130 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %130, i32 0, i32 5
  store i32 %129, i32* %131, align 4
  br label %132

132:                                              ; preds = %124, %128
  store i32 0, i32* %26, align 4
  br label %489

133:                                              ; preds = %120
  store i32 0, i32* %32, align 4
  br label %134

134:                                              ; preds = %477, %133
  %135 = load i32, i32* %32, align 4
  %136 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %137 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %136, i32 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = icmp ult i32 %135, %138
  br i1 %139, label %140, label %480

140:                                              ; preds = %134
  %141 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %142 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %141, i32 0, i32 15
  %143 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %142, align 8
  %144 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %143, i32 0, i32 0
  %145 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %144, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %147, i32 0, i32 15
  %149 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %148, align 8
  %150 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %149, i32 0, i32 1
  %151 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %150, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %32, align 4
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %153, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %146, i64 %158
  store i8* %159, i8** %35, align 8
  %160 = load i8*, i8** %35, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 28
  %162 = getelementptr inbounds i8, i8* %161, i64 0
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = load i8*, i8** %35, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 28
  %167 = getelementptr inbounds i8, i8* %166, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = shl i32 %169, 8
  %171 = or i32 %164, %170
  store i32 %171, i32* %36, align 4
  %172 = load i8*, i8** %35, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 46
  store i8* %173, i8** %37, align 8
  %174 = load i32, i32* %36, align 4
  %175 = zext i32 %174 to i64
  %176 = load i64, i64* %33, align 8
  %177 = icmp ult i64 %175, %176
  br i1 %177, label %178, label %179

178:                                              ; preds = %140
  br label %477

179:                                              ; preds = %140
  %180 = load i64, i64* %34, align 8
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %317

182:                                              ; preds = %179
  %183 = load i8*, i8** %35, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 30
  %185 = getelementptr inbounds i8, i8* %184, i64 0
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = load i8*, i8** %35, align 8
  %189 = getelementptr inbounds i8, i8* %188, i64 30
  %190 = getelementptr inbounds i8, i8* %189, i64 1
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = shl i32 %192, 8
  %194 = or i32 %187, %193
  store i32 %194, i32* %38, align 4
  %195 = load i8*, i8** %35, align 8
  %196 = getelementptr inbounds i8, i8* %195, i64 32
  %197 = getelementptr inbounds i8, i8* %196, i64 0
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = load i8*, i8** %35, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 32
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = shl i32 %204, 8
  %206 = or i32 %199, %205
  store i32 %206, i32* %39, align 4
  %207 = load i8*, i8** %37, align 8
  %208 = load i32, i32* %36, align 4
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %207, i64 %209
  %211 = load i32, i32* %38, align 4
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds i8, i8* %210, i64 %212
  store i8* %213, i8** %40, align 8
  %214 = load i32, i32* %39, align 4
  %215 = zext i32 %214 to i64
  %216 = load i64, i64* %34, align 8
  %217 = icmp ne i64 %215, %216
  br i1 %217, label %315, label %218

218:                                              ; preds = %182
  %219 = load i8*, i8** %29, align 8
  %220 = load i8*, i8** %40, align 8
  %221 = load i32, i32* %39, align 4
  %222 = load i32, i32* %30, align 4
  store i8* %219, i8** %7, align 8
  store i8* %220, i8** %8, align 8
  store i32 %221, i32* %9, align 4
  store i32 %222, i32* %10, align 4
  %223 = load i32, i32* %10, align 4
  %224 = and i32 %223, 256
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %226, label %234

226:                                              ; preds = %218
  %227 = load i8*, i8** %7, align 8
  %228 = load i8*, i8** %8, align 8
  %229 = load i32, i32* %9, align 4
  %230 = zext i32 %229 to i64
  %231 = call i32 @memcmp(i8* noundef %227, i8* noundef %228, i64 noundef %230) #9
  %232 = icmp eq i32 0, %231
  %233 = zext i1 %232 to i32
  store i32 %233, i32* %6, align 4
  br label %312

234:                                              ; preds = %218
  store i32 0, i32* %11, align 4
  br label %235

235:                                              ; preds = %308, %234
  %236 = load i32, i32* %11, align 4
  %237 = load i32, i32* %9, align 4
  %238 = icmp ult i32 %236, %237
  br i1 %238, label %239, label %311

239:                                              ; preds = %235
  %240 = load i8*, i8** %7, align 8
  %241 = load i32, i32* %11, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %240, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp sge i32 %245, 65
  br i1 %246, label %247, label %264

247:                                              ; preds = %239
  %248 = load i8*, i8** %7, align 8
  %249 = load i32, i32* %11, align 4
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %248, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = sext i8 %252 to i32
  %254 = icmp sle i32 %253, 90
  br i1 %254, label %255, label %264

255:                                              ; preds = %247
  %256 = load i8*, i8** %7, align 8
  %257 = load i32, i32* %11, align 4
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds i8, i8* %256, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = sext i8 %260 to i32
  %262 = sub nsw i32 %261, 65
  %263 = add nsw i32 %262, 97
  br label %271

264:                                              ; preds = %247, %239
  %265 = load i8*, i8** %7, align 8
  %266 = load i32, i32* %11, align 4
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds i8, i8* %265, i64 %267
  %269 = load i8, i8* %268, align 1
  %270 = sext i8 %269 to i32
  br label %271

271:                                              ; preds = %264, %255
  %272 = phi i32 [ %263, %255 ], [ %270, %264 ]
  %273 = load i8*, i8** %8, align 8
  %274 = load i32, i32* %11, align 4
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %273, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = sext i8 %277 to i32
  %279 = icmp sge i32 %278, 65
  br i1 %279, label %280, label %297

280:                                              ; preds = %271
  %281 = load i8*, i8** %8, align 8
  %282 = load i32, i32* %11, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %281, i64 %283
  %285 = load i8, i8* %284, align 1
  %286 = sext i8 %285 to i32
  %287 = icmp sle i32 %286, 90
  br i1 %287, label %288, label %297

288:                                              ; preds = %280
  %289 = load i8*, i8** %8, align 8
  %290 = load i32, i32* %11, align 4
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds i8, i8* %289, i64 %291
  %293 = load i8, i8* %292, align 1
  %294 = sext i8 %293 to i32
  %295 = sub nsw i32 %294, 65
  %296 = add nsw i32 %295, 97
  br label %304

297:                                              ; preds = %280, %271
  %298 = load i8*, i8** %8, align 8
  %299 = load i32, i32* %11, align 4
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %298, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = sext i8 %302 to i32
  br label %304

304:                                              ; preds = %297, %288
  %305 = phi i32 [ %296, %288 ], [ %303, %297 ]
  %306 = icmp ne i32 %272, %305
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  store i32 0, i32* %6, align 4
  br label %312

308:                                              ; preds = %304
  %309 = load i32, i32* %11, align 4
  %310 = add i32 %309, 1
  store i32 %310, i32* %11, align 4
  br label %235, !llvm.loop !111

311:                                              ; preds = %235
  store i32 1, i32* %6, align 4
  br label %312

312:                                              ; preds = %226, %307, %311
  %313 = load i32, i32* %6, align 4
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %316, label %315

315:                                              ; preds = %312, %182
  br label %477

316:                                              ; preds = %312
  br label %317

317:                                              ; preds = %316, %179
  %318 = load i32, i32* %30, align 4
  %319 = and i32 %318, 512
  %320 = icmp ne i32 %319, 0
  br i1 %320, label %321, label %367

321:                                              ; preds = %317
  %322 = load i32, i32* %36, align 4
  %323 = icmp ne i32 %322, 0
  br i1 %323, label %324, label %367

324:                                              ; preds = %321
  %325 = load i32, i32* %36, align 4
  %326 = sub i32 %325, 1
  store i32 %326, i32* %41, align 4
  br label %327

327:                                              ; preds = %353, %324
  %328 = load i8*, i8** %37, align 8
  %329 = load i32, i32* %41, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %328, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = sext i8 %332 to i32
  %334 = icmp eq i32 %333, 47
  br i1 %334, label %351, label %335

335:                                              ; preds = %327
  %336 = load i8*, i8** %37, align 8
  %337 = load i32, i32* %41, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds i8, i8* %336, i64 %338
  %340 = load i8, i8* %339, align 1
  %341 = sext i8 %340 to i32
  %342 = icmp eq i32 %341, 92
  br i1 %342, label %351, label %343

343:                                              ; preds = %335
  %344 = load i8*, i8** %37, align 8
  %345 = load i32, i32* %41, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i8, i8* %344, i64 %346
  %348 = load i8, i8* %347, align 1
  %349 = sext i8 %348 to i32
  %350 = icmp eq i32 %349, 58
  br i1 %350, label %351, label %352

351:                                              ; preds = %343, %335, %327
  br label %357

352:                                              ; preds = %343
  br label %353

353:                                              ; preds = %352
  %354 = load i32, i32* %41, align 4
  %355 = add nsw i32 %354, -1
  store i32 %355, i32* %41, align 4
  %356 = icmp sge i32 %355, 0
  br i1 %356, label %327, label %357, !llvm.loop !112

357:                                              ; preds = %353, %351
  %358 = load i32, i32* %41, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %41, align 4
  %360 = load i32, i32* %41, align 4
  %361 = load i8*, i8** %37, align 8
  %362 = sext i32 %360 to i64
  %363 = getelementptr inbounds i8, i8* %361, i64 %362
  store i8* %363, i8** %37, align 8
  %364 = load i32, i32* %41, align 4
  %365 = load i32, i32* %36, align 4
  %366 = sub i32 %365, %364
  store i32 %366, i32* %36, align 4
  br label %367

367:                                              ; preds = %357, %321, %317
  %368 = load i32, i32* %36, align 4
  %369 = zext i32 %368 to i64
  %370 = load i64, i64* %33, align 8
  %371 = icmp eq i64 %369, %370
  br i1 %371, label %372, label %476

372:                                              ; preds = %367
  %373 = load i8*, i8** %28, align 8
  %374 = load i8*, i8** %37, align 8
  %375 = load i32, i32* %36, align 4
  %376 = load i32, i32* %30, align 4
  store i8* %373, i8** %13, align 8
  store i8* %374, i8** %14, align 8
  store i32 %375, i32* %15, align 4
  store i32 %376, i32* %16, align 4
  %377 = load i32, i32* %16, align 4
  %378 = and i32 %377, 256
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %380, label %388

380:                                              ; preds = %372
  %381 = load i8*, i8** %13, align 8
  %382 = load i8*, i8** %14, align 8
  %383 = load i32, i32* %15, align 4
  %384 = zext i32 %383 to i64
  %385 = call i32 @memcmp(i8* noundef %381, i8* noundef %382, i64 noundef %384) #9
  %386 = icmp eq i32 0, %385
  %387 = zext i1 %386 to i32
  store i32 %387, i32* %12, align 4
  br label %466

388:                                              ; preds = %372
  store i32 0, i32* %17, align 4
  br label %389

389:                                              ; preds = %462, %388
  %390 = load i32, i32* %17, align 4
  %391 = load i32, i32* %15, align 4
  %392 = icmp ult i32 %390, %391
  br i1 %392, label %393, label %465

393:                                              ; preds = %389
  %394 = load i8*, i8** %13, align 8
  %395 = load i32, i32* %17, align 4
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds i8, i8* %394, i64 %396
  %398 = load i8, i8* %397, align 1
  %399 = sext i8 %398 to i32
  %400 = icmp sge i32 %399, 65
  br i1 %400, label %401, label %418

401:                                              ; preds = %393
  %402 = load i8*, i8** %13, align 8
  %403 = load i32, i32* %17, align 4
  %404 = zext i32 %403 to i64
  %405 = getelementptr inbounds i8, i8* %402, i64 %404
  %406 = load i8, i8* %405, align 1
  %407 = sext i8 %406 to i32
  %408 = icmp sle i32 %407, 90
  br i1 %408, label %409, label %418

409:                                              ; preds = %401
  %410 = load i8*, i8** %13, align 8
  %411 = load i32, i32* %17, align 4
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %410, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = sext i8 %414 to i32
  %416 = sub nsw i32 %415, 65
  %417 = add nsw i32 %416, 97
  br label %425

418:                                              ; preds = %401, %393
  %419 = load i8*, i8** %13, align 8
  %420 = load i32, i32* %17, align 4
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds i8, i8* %419, i64 %421
  %423 = load i8, i8* %422, align 1
  %424 = sext i8 %423 to i32
  br label %425

425:                                              ; preds = %418, %409
  %426 = phi i32 [ %417, %409 ], [ %424, %418 ]
  %427 = load i8*, i8** %14, align 8
  %428 = load i32, i32* %17, align 4
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds i8, i8* %427, i64 %429
  %431 = load i8, i8* %430, align 1
  %432 = sext i8 %431 to i32
  %433 = icmp sge i32 %432, 65
  br i1 %433, label %434, label %451

434:                                              ; preds = %425
  %435 = load i8*, i8** %14, align 8
  %436 = load i32, i32* %17, align 4
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds i8, i8* %435, i64 %437
  %439 = load i8, i8* %438, align 1
  %440 = sext i8 %439 to i32
  %441 = icmp sle i32 %440, 90
  br i1 %441, label %442, label %451

442:                                              ; preds = %434
  %443 = load i8*, i8** %14, align 8
  %444 = load i32, i32* %17, align 4
  %445 = zext i32 %444 to i64
  %446 = getelementptr inbounds i8, i8* %443, i64 %445
  %447 = load i8, i8* %446, align 1
  %448 = sext i8 %447 to i32
  %449 = sub nsw i32 %448, 65
  %450 = add nsw i32 %449, 97
  br label %458

451:                                              ; preds = %434, %425
  %452 = load i8*, i8** %14, align 8
  %453 = load i32, i32* %17, align 4
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds i8, i8* %452, i64 %454
  %456 = load i8, i8* %455, align 1
  %457 = sext i8 %456 to i32
  br label %458

458:                                              ; preds = %451, %442
  %459 = phi i32 [ %450, %442 ], [ %457, %451 ]
  %460 = icmp ne i32 %426, %459
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  store i32 0, i32* %12, align 4
  br label %466

462:                                              ; preds = %458
  %463 = load i32, i32* %17, align 4
  %464 = add i32 %463, 1
  store i32 %464, i32* %17, align 4
  br label %389, !llvm.loop !111

465:                                              ; preds = %389
  store i32 1, i32* %12, align 4
  br label %466

466:                                              ; preds = %380, %461, %465
  %467 = load i32, i32* %12, align 4
  %468 = icmp ne i32 %467, 0
  br i1 %468, label %469, label %476

469:                                              ; preds = %466
  %470 = load i32*, i32** %31, align 8
  %471 = icmp ne i32* %470, null
  br i1 %471, label %472, label %475

472:                                              ; preds = %469
  %473 = load i32, i32* %32, align 4
  %474 = load i32*, i32** %31, align 8
  store i32 %473, i32* %474, align 4
  br label %475

475:                                              ; preds = %472, %469
  store i32 1, i32* %26, align 4
  br label %489

476:                                              ; preds = %466, %367
  br label %477

477:                                              ; preds = %476, %315, %178
  %478 = load i32, i32* %32, align 4
  %479 = add i32 %478, 1
  store i32 %479, i32* %32, align 4
  br label %134, !llvm.loop !113

480:                                              ; preds = %134
  %481 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %481, %struct.mz_zip_archive** %24, align 8
  store i32 28, i32* %25, align 4
  %482 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %483 = icmp ne %struct.mz_zip_archive* %482, null
  br i1 %483, label %484, label %488

484:                                              ; preds = %480
  %485 = load i32, i32* %25, align 4
  %486 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %487 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %486, i32 0, i32 5
  store i32 %485, i32* %487, align 4
  br label %488

488:                                              ; preds = %480, %484
  store i32 0, i32* %26, align 4
  br label %489

489:                                              ; preds = %488, %475, %132, %112, %94, %65
  %490 = load i32, i32* %26, align 4
  ret i32 %490
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_locate_file_binary_search(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i32* noundef %2) #0 {
  %4 = alloca %struct.mz_zip_array*, align 8
  %5 = alloca %struct.mz_zip_array*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %21 = alloca %struct.mz_zip_array*, align 8
  %22 = alloca %struct.mz_zip_array*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %17, align 8
  store i8* %1, i8** %18, align 8
  store i32* %2, i32** %19, align 8
  %31 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %17, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %31, i32 0, i32 15
  %33 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %32, align 8
  store %struct.mz_zip_internal_state_tag* %33, %struct.mz_zip_internal_state_tag** %20, align 8
  %34 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %20, align 8
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %34, i32 0, i32 1
  store %struct.mz_zip_array* %35, %struct.mz_zip_array** %21, align 8
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %20, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %36, i32 0, i32 0
  store %struct.mz_zip_array* %37, %struct.mz_zip_array** %22, align 8
  %38 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %20, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %38, i32 0, i32 2
  %40 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %39, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast i8* %41 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 0
  store i32* %43, i32** %23, align 8
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %17, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %24, align 4
  %47 = load i8*, i8** %18, align 8
  %48 = call i64 @strlen(i8* noundef %47) #9
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %25, align 4
  %50 = load i32*, i32** %19, align 8
  %51 = icmp ne i32* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %3
  %53 = load i32*, i32** %19, align 8
  store i32 0, i32* %53, align 4
  br label %54

54:                                               ; preds = %52, %3
  %55 = load i32, i32* %24, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %216

57:                                               ; preds = %54
  store i64 0, i64* %26, align 8
  %58 = load i32, i32* %24, align 4
  %59 = zext i32 %58 to i64
  %60 = sub nsw i64 %59, 1
  store i64 %60, i64* %27, align 8
  br label %61

61:                                               ; preds = %214, %57
  %62 = load i64, i64* %26, align 8
  %63 = load i64, i64* %27, align 8
  %64 = icmp sle i64 %62, %63
  br i1 %64, label %65, label %215

65:                                               ; preds = %61
  %66 = load i64, i64* %26, align 8
  %67 = load i64, i64* %27, align 8
  %68 = load i64, i64* %26, align 8
  %69 = sub nsw i64 %67, %68
  %70 = ashr i64 %69, 1
  %71 = add nsw i64 %66, %70
  store i64 %71, i64* %28, align 8
  %72 = load i32*, i32** %23, align 8
  %73 = load i64, i64* %28, align 8
  %74 = trunc i64 %73 to i32
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %72, i64 %75
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %29, align 4
  %78 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %79 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %80 = load i32, i32* %29, align 4
  %81 = load i8*, i8** %18, align 8
  %82 = load i32, i32* %25, align 4
  store %struct.mz_zip_array* %78, %struct.mz_zip_array** %4, align 8
  store %struct.mz_zip_array* %79, %struct.mz_zip_array** %5, align 8
  store i32 %80, i32* %6, align 4
  store i8* %81, i8** %7, align 8
  store i32 %82, i32* %8, align 4
  %83 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %84 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %83, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %87 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %86, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %6, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %85, i64 %94
  store i8* %95, i8** %9, align 8
  %96 = load i8*, i8** %9, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 28
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = load i8*, i8** %9, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 28
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl i32 %104, 8
  %106 = or i32 %99, %105
  store i32 %106, i32* %11, align 4
  store i8 0, i8* %12, align 1
  store i8 0, i8* %13, align 1
  %107 = load i8*, i8** %9, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 46
  store i8* %108, i8** %9, align 8
  %109 = load i8*, i8** %9, align 8
  %110 = load i32, i32* %11, align 4
  %111 = load i32, i32* %8, align 4
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %65
  %114 = load i32, i32* %11, align 4
  br label %117

115:                                              ; preds = %65
  %116 = load i32, i32* %8, align 4
  br label %117

117:                                              ; preds = %115, %113
  %118 = phi i32 [ %114, %113 ], [ %116, %115 ]
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %109, i64 %119
  store i8* %120, i8** %10, align 8
  br label %121

121:                                              ; preds = %174, %117
  %122 = load i8*, i8** %9, align 8
  %123 = load i8*, i8** %10, align 8
  %124 = icmp ult i8* %122, %123
  br i1 %124, label %125, label %179

125:                                              ; preds = %121
  %126 = load i8*, i8** %9, align 8
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp sge i32 %128, 65
  br i1 %129, label %130, label %141

130:                                              ; preds = %125
  %131 = load i8*, i8** %9, align 8
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = icmp sle i32 %133, 90
  br i1 %134, label %135, label %141

135:                                              ; preds = %130
  %136 = load i8*, i8** %9, align 8
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = sub nsw i32 %138, 65
  %140 = add nsw i32 %139, 97
  br label %145

141:                                              ; preds = %130, %125
  %142 = load i8*, i8** %9, align 8
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  br label %145

145:                                              ; preds = %141, %135
  %146 = phi i32 [ %140, %135 ], [ %144, %141 ]
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %12, align 1
  %148 = zext i8 %147 to i32
  %149 = load i8*, i8** %7, align 8
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp sge i32 %151, 65
  br i1 %152, label %153, label %164

153:                                              ; preds = %145
  %154 = load i8*, i8** %7, align 8
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i32
  %157 = icmp sle i32 %156, 90
  br i1 %157, label %158, label %164

158:                                              ; preds = %153
  %159 = load i8*, i8** %7, align 8
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  %162 = sub nsw i32 %161, 65
  %163 = add nsw i32 %162, 97
  br label %168

164:                                              ; preds = %153, %145
  %165 = load i8*, i8** %7, align 8
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  br label %168

168:                                              ; preds = %164, %158
  %169 = phi i32 [ %163, %158 ], [ %167, %164 ]
  %170 = trunc i32 %169 to i8
  store i8 %170, i8* %13, align 1
  %171 = zext i8 %170 to i32
  %172 = icmp ne i32 %148, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %168
  br label %179

174:                                              ; preds = %168
  %175 = load i8*, i8** %9, align 8
  %176 = getelementptr inbounds i8, i8* %175, i32 1
  store i8* %176, i8** %9, align 8
  %177 = load i8*, i8** %7, align 8
  %178 = getelementptr inbounds i8, i8* %177, i32 1
  store i8* %178, i8** %7, align 8
  br label %121, !llvm.loop !114

179:                                              ; preds = %173, %121
  %180 = load i8*, i8** %9, align 8
  %181 = load i8*, i8** %10, align 8
  %182 = icmp eq i8* %180, %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %179
  %184 = load i32, i32* %11, align 4
  %185 = load i32, i32* %8, align 4
  %186 = sub i32 %184, %185
  br label %193

187:                                              ; preds = %179
  %188 = load i8, i8* %12, align 1
  %189 = zext i8 %188 to i32
  %190 = load i8, i8* %13, align 1
  %191 = zext i8 %190 to i32
  %192 = sub nsw i32 %189, %191
  br label %193

193:                                              ; preds = %183, %187
  %194 = phi i32 [ %186, %183 ], [ %192, %187 ]
  store i32 %194, i32* %30, align 4
  %195 = load i32, i32* %30, align 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %204, label %197

197:                                              ; preds = %193
  %198 = load i32*, i32** %19, align 8
  %199 = icmp ne i32* %198, null
  br i1 %199, label %200, label %203

200:                                              ; preds = %197
  %201 = load i32, i32* %29, align 4
  %202 = load i32*, i32** %19, align 8
  store i32 %201, i32* %202, align 4
  br label %203

203:                                              ; preds = %200, %197
  store i32 1, i32* %16, align 4
  br label %225

204:                                              ; preds = %193
  %205 = load i32, i32* %30, align 4
  %206 = icmp slt i32 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = load i64, i64* %28, align 8
  %209 = add nsw i64 %208, 1
  store i64 %209, i64* %26, align 8
  br label %213

210:                                              ; preds = %204
  %211 = load i64, i64* %28, align 8
  %212 = sub nsw i64 %211, 1
  store i64 %212, i64* %27, align 8
  br label %213

213:                                              ; preds = %210, %207
  br label %214

214:                                              ; preds = %213
  br label %61, !llvm.loop !115

215:                                              ; preds = %61
  br label %216

216:                                              ; preds = %215, %54
  %217 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %17, align 8
  store %struct.mz_zip_archive* %217, %struct.mz_zip_archive** %14, align 8
  store i32 28, i32* %15, align 4
  %218 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %219 = icmp ne %struct.mz_zip_archive* %218, null
  br i1 %219, label %220, label %224

220:                                              ; preds = %216
  %221 = load i32, i32* %15, align 4
  %222 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %223 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %222, i32 0, i32 5
  store i32 %221, i32* %223, align 4
  br label %224

224:                                              ; preds = %216, %220
  store i32 0, i32* %16, align 4
  br label %225

225:                                              ; preds = %224, %203
  %226 = load i32, i32* %16, align 4
  ret i32 %226
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_to_mem_no_alloc(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4, i8* noundef %5, i64 noundef %6) #0 {
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %8, align 8
  store i32 %1, i32* %9, align 4
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  store i64 %6, i64* %14, align 8
  %15 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %16 = load i32, i32* %9, align 4
  %17 = load i8*, i8** %10, align 8
  %18 = load i64, i64* %11, align 8
  %19 = load i32, i32* %12, align 4
  %20 = load i8*, i8** %13, align 8
  %21 = load i64, i64* %14, align 8
  %22 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(%struct.mz_zip_archive* noundef %15, i32 noundef %16, i8* noundef %17, i64 noundef %18, i32 noundef %19, i8* noundef %20, i64 noundef %21, %struct.mz_zip_archive_file_stat* noundef null)
  ret i32 %22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_reader_extract_to_mem_no_alloc1(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4, i8* noundef %5, i64 noundef %6, %struct.mz_zip_archive_file_stat* noundef %7) #0 {
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.mz_zip_archive*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.mz_zip_archive*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive*, align 8
  %18 = alloca i32, align 4
  %19 = alloca %struct.mz_zip_archive*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %struct.mz_zip_archive*, align 8
  %22 = alloca i32, align 4
  %23 = alloca %struct.mz_zip_archive*, align 8
  %24 = alloca i32, align 4
  %25 = alloca %struct.mz_zip_archive*, align 8
  %26 = alloca i32, align 4
  %27 = alloca %struct.mz_zip_archive*, align 8
  %28 = alloca i32, align 4
  %29 = alloca %struct.mz_zip_archive*, align 8
  %30 = alloca i32, align 4
  %31 = alloca %struct.mz_zip_archive*, align 8
  %32 = alloca i32, align 4
  %33 = alloca %struct.mz_zip_archive*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca %struct.mz_zip_archive*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i8*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32, align 4
  %41 = alloca i8*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %struct.mz_zip_archive_file_stat*, align 8
  %44 = alloca i32, align 4
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca %struct.mz_zip_archive_file_stat, align 8
  %53 = alloca i8*, align 8
  %54 = alloca [8 x i32], align 16
  %55 = alloca i8*, align 8
  %56 = alloca %struct.tinfl_decompressor_tag, align 8
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %36, align 8
  store i32 %1, i32* %37, align 4
  store i8* %2, i8** %38, align 8
  store i64 %3, i64* %39, align 8
  store i32 %4, i32* %40, align 4
  store i8* %5, i8** %41, align 8
  store i64 %6, i64* %42, align 8
  store %struct.mz_zip_archive_file_stat* %7, %struct.mz_zip_archive_file_stat** %43, align 8
  store i32 0, i32* %44, align 4
  store i64 0, i64* %48, align 8
  store i64 0, i64* %50, align 8
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %54, i64 0, i64 0
  %60 = bitcast i32* %59 to i8*
  store i8* %60, i8** %55, align 8
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %62 = icmp ne %struct.mz_zip_archive* %61, null
  br i1 %62, label %63, label %85

63:                                               ; preds = %8
  %64 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %64, i32 0, i32 15
  %66 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %65, align 8
  %67 = icmp ne %struct.mz_zip_internal_state_tag* %66, null
  br i1 %67, label %68, label %85

68:                                               ; preds = %63
  %69 = load i64, i64* %39, align 8
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i8*, i8** %38, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %74, label %85

74:                                               ; preds = %71, %68
  %75 = load i64, i64* %42, align 8
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = load i8*, i8** %41, align 8
  %79 = icmp ne i8* %78, null
  br i1 %79, label %80, label %85

80:                                               ; preds = %77, %74
  %81 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %81, i32 0, i32 11
  %83 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %82, align 8
  %84 = icmp ne i64 (i8*, i64, i8*, i64)* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %80, %77, %71, %63, %8
  %86 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %86, %struct.mz_zip_archive** %9, align 8
  store i32 24, i32* %10, align 4
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %88 = icmp ne %struct.mz_zip_archive* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = load i32, i32* %10, align 4
  %91 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %92 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %91, i32 0, i32 5
  store i32 %90, i32* %92, align 4
  br label %93

93:                                               ; preds = %85, %89
  store i32 0, i32* %35, align 4
  br label %538

94:                                               ; preds = %80
  %95 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %43, align 8
  %96 = icmp ne %struct.mz_zip_archive_file_stat* %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %94
  %98 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %43, align 8
  %99 = bitcast %struct.mz_zip_archive_file_stat* %52 to i8*
  %100 = bitcast %struct.mz_zip_archive_file_stat* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 1112, i1 false)
  br label %108

101:                                              ; preds = %94
  %102 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %103 = load i32, i32* %37, align 4
  %104 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %102, i32 noundef %103, %struct.mz_zip_archive_file_stat* noundef %52)
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %101
  store i32 0, i32* %35, align 4
  br label %538

107:                                              ; preds = %101
  br label %108

108:                                              ; preds = %107, %97
  %109 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 13
  %110 = load i32, i32* %109, align 4
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %114 = load i64, i64* %113, align 8
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %112, %108
  store i32 1, i32* %35, align 4
  br label %538

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 4
  %119 = load i16, i16* %118, align 4
  %120 = zext i16 %119 to i32
  %121 = and i32 %120, 97
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %132

123:                                              ; preds = %117
  %124 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %124, %struct.mz_zip_archive** %11, align 8
  store i32 5, i32* %12, align 4
  %125 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %126 = icmp ne %struct.mz_zip_archive* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %123
  %128 = load i32, i32* %12, align 4
  %129 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %130 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %129, i32 0, i32 5
  store i32 %128, i32* %130, align 4
  br label %131

131:                                              ; preds = %123, %127
  store i32 0, i32* %35, align 4
  br label %538

132:                                              ; preds = %117
  %133 = load i32, i32* %40, align 4
  %134 = and i32 %133, 1024
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %155, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 5
  %138 = load i16, i16* %137, align 2
  %139 = zext i16 %138 to i32
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %136
  %142 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 5
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = icmp ne i32 %144, 8
  br i1 %145, label %146, label %155

146:                                              ; preds = %141
  %147 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %147, %struct.mz_zip_archive** %13, align 8
  store i32 4, i32* %14, align 4
  %148 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %149 = icmp ne %struct.mz_zip_archive* %148, null
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = load i32, i32* %14, align 4
  %152 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %153 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %152, i32 0, i32 5
  store i32 %151, i32* %153, align 4
  br label %154

154:                                              ; preds = %146, %150
  store i32 0, i32* %35, align 4
  br label %538

155:                                              ; preds = %141, %136, %132
  %156 = load i32, i32* %40, align 4
  %157 = and i32 %156, 1024
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %161 = load i64, i64* %160, align 8
  br label %165

162:                                              ; preds = %155
  %163 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %164 = load i64, i64* %163, align 8
  br label %165

165:                                              ; preds = %162, %159
  %166 = phi i64 [ %161, %159 ], [ %164, %162 ]
  store i64 %166, i64* %45, align 8
  %167 = load i64, i64* %39, align 8
  %168 = load i64, i64* %45, align 8
  %169 = icmp ult i64 %167, %168
  br i1 %169, label %170, label %179

170:                                              ; preds = %165
  %171 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %171, %struct.mz_zip_archive** %15, align 8
  store i32 26, i32* %16, align 4
  %172 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %173 = icmp ne %struct.mz_zip_archive* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = load i32, i32* %16, align 4
  %176 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %177 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %176, i32 0, i32 5
  store i32 %175, i32* %177, align 4
  br label %178

178:                                              ; preds = %170, %174
  store i32 0, i32* %35, align 4
  br label %538

179:                                              ; preds = %165
  %180 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 11
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %46, align 8
  %182 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %183 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %182, i32 0, i32 11
  %184 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %183, align 8
  %185 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %186 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %185, i32 0, i32 14
  %187 = load i8*, i8** %186, align 8
  %188 = load i64, i64* %46, align 8
  %189 = load i8*, i8** %55, align 8
  %190 = call i64 %184(i8* noundef %187, i64 noundef %188, i8* noundef %189, i64 noundef 30)
  %191 = icmp ne i64 %190, 30
  br i1 %191, label %192, label %201

192:                                              ; preds = %179
  %193 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %193, %struct.mz_zip_archive** %17, align 8
  store i32 20, i32* %18, align 4
  %194 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %17, align 8
  %195 = icmp ne %struct.mz_zip_archive* %194, null
  br i1 %195, label %196, label %200

196:                                              ; preds = %192
  %197 = load i32, i32* %18, align 4
  %198 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %17, align 8
  %199 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %198, i32 0, i32 5
  store i32 %197, i32* %199, align 4
  br label %200

200:                                              ; preds = %192, %196
  store i32 0, i32* %35, align 4
  br label %538

201:                                              ; preds = %179
  %202 = load i8*, i8** %55, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 0
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = load i8*, i8** %55, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 1
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = shl i32 %209, 8
  %211 = or i32 %205, %210
  %212 = load i8*, i8** %55, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 2
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = shl i32 %215, 16
  %217 = or i32 %211, %216
  %218 = load i8*, i8** %55, align 8
  %219 = getelementptr inbounds i8, i8* %218, i64 3
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl i32 %221, 24
  %223 = or i32 %217, %222
  %224 = icmp ne i32 %223, 67324752
  br i1 %224, label %225, label %234

225:                                              ; preds = %201
  %226 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %226, %struct.mz_zip_archive** %19, align 8
  store i32 9, i32* %20, align 4
  %227 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  %228 = icmp ne %struct.mz_zip_archive* %227, null
  br i1 %228, label %229, label %233

229:                                              ; preds = %225
  %230 = load i32, i32* %20, align 4
  %231 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  %232 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %231, i32 0, i32 5
  store i32 %230, i32* %232, align 4
  br label %233

233:                                              ; preds = %225, %229
  store i32 0, i32* %35, align 4
  br label %538

234:                                              ; preds = %201
  %235 = load i8*, i8** %55, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 26
  %237 = getelementptr inbounds i8, i8* %236, i64 0
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = load i8*, i8** %55, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 26
  %242 = getelementptr inbounds i8, i8* %241, i64 1
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = shl i32 %244, 8
  %246 = or i32 %239, %245
  %247 = add i32 30, %246
  %248 = load i8*, i8** %55, align 8
  %249 = getelementptr inbounds i8, i8* %248, i64 28
  %250 = getelementptr inbounds i8, i8* %249, i64 0
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = load i8*, i8** %55, align 8
  %254 = getelementptr inbounds i8, i8* %253, i64 28
  %255 = getelementptr inbounds i8, i8* %254, i64 1
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = shl i32 %257, 8
  %259 = or i32 %252, %258
  %260 = add i32 %247, %259
  %261 = zext i32 %260 to i64
  %262 = load i64, i64* %46, align 8
  %263 = add i64 %262, %261
  store i64 %263, i64* %46, align 8
  %264 = load i64, i64* %46, align 8
  %265 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %266 = load i64, i64* %265, align 8
  %267 = add i64 %264, %266
  %268 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %269 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %268, i32 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = icmp ugt i64 %267, %270
  br i1 %271, label %272, label %281

272:                                              ; preds = %234
  %273 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %273, %struct.mz_zip_archive** %21, align 8
  store i32 9, i32* %22, align 4
  %274 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %275 = icmp ne %struct.mz_zip_archive* %274, null
  br i1 %275, label %276, label %280

276:                                              ; preds = %272
  %277 = load i32, i32* %22, align 4
  %278 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %279 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %278, i32 0, i32 5
  store i32 %277, i32* %279, align 4
  br label %280

280:                                              ; preds = %272, %276
  store i32 0, i32* %35, align 4
  br label %538

281:                                              ; preds = %234
  %282 = load i32, i32* %40, align 4
  %283 = and i32 %282, 1024
  %284 = icmp ne i32 %283, 0
  br i1 %284, label %289, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 5
  %287 = load i16, i16* %286, align 2
  %288 = icmp ne i16 %287, 0
  br i1 %288, label %335, label %289

289:                                              ; preds = %285, %281
  %290 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %291 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %290, i32 0, i32 11
  %292 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %291, align 8
  %293 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %294 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %293, i32 0, i32 14
  %295 = load i8*, i8** %294, align 8
  %296 = load i64, i64* %46, align 8
  %297 = load i8*, i8** %38, align 8
  %298 = load i64, i64* %45, align 8
  %299 = call i64 %292(i8* noundef %295, i64 noundef %296, i8* noundef %297, i64 noundef %298)
  %300 = load i64, i64* %45, align 8
  %301 = icmp ne i64 %299, %300
  br i1 %301, label %302, label %311

302:                                              ; preds = %289
  %303 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %303, %struct.mz_zip_archive** %23, align 8
  store i32 20, i32* %24, align 4
  %304 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %23, align 8
  %305 = icmp ne %struct.mz_zip_archive* %304, null
  br i1 %305, label %306, label %310

306:                                              ; preds = %302
  %307 = load i32, i32* %24, align 4
  %308 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %23, align 8
  %309 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %308, i32 0, i32 5
  store i32 %307, i32* %309, align 4
  br label %310

310:                                              ; preds = %302, %306
  store i32 0, i32* %35, align 4
  br label %538

311:                                              ; preds = %289
  %312 = load i32, i32* %40, align 4
  %313 = and i32 %312, 1024
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %334

315:                                              ; preds = %311
  %316 = load i8*, i8** %38, align 8
  %317 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %318 = load i64, i64* %317, align 8
  %319 = call i64 @mz_crc32(i64 noundef 0, i8* noundef %316, i64 noundef %318)
  %320 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 6
  %321 = load i32, i32* %320, align 8
  %322 = zext i32 %321 to i64
  %323 = icmp ne i64 %319, %322
  br i1 %323, label %324, label %333

324:                                              ; preds = %315
  %325 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %325, %struct.mz_zip_archive** %25, align 8
  store i32 14, i32* %26, align 4
  %326 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %25, align 8
  %327 = icmp ne %struct.mz_zip_archive* %326, null
  br i1 %327, label %328, label %332

328:                                              ; preds = %324
  %329 = load i32, i32* %26, align 4
  %330 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %25, align 8
  %331 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %330, i32 0, i32 5
  store i32 %329, i32* %331, align 4
  br label %332

332:                                              ; preds = %324, %328
  store i32 0, i32* %35, align 4
  br label %538

333:                                              ; preds = %315
  br label %334

334:                                              ; preds = %333, %311
  store i32 1, i32* %35, align 4
  br label %538

335:                                              ; preds = %285
  br label %336

336:                                              ; preds = %335
  %337 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %56, i32 0, i32 0
  store i32 0, i32* %337, align 8
  br label %338

338:                                              ; preds = %336
  %339 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %340 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %339, i32 0, i32 15
  %341 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %340, align 8
  %342 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %341, i32 0, i32 8
  %343 = load i8*, i8** %342, align 8
  %344 = icmp ne i8* %343, null
  br i1 %344, label %345, label %355

345:                                              ; preds = %338
  %346 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %347 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %346, i32 0, i32 15
  %348 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %347, align 8
  %349 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %348, i32 0, i32 8
  %350 = load i8*, i8** %349, align 8
  %351 = load i64, i64* %46, align 8
  %352 = getelementptr inbounds i8, i8* %350, i64 %351
  store i8* %352, i8** %53, align 8
  %353 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %354 = load i64, i64* %353, align 8
  store i64 %354, i64* %51, align 8
  store i64 %354, i64* %49, align 8
  store i64 0, i64* %47, align 8
  br label %399

355:                                              ; preds = %338
  %356 = load i8*, i8** %41, align 8
  %357 = icmp ne i8* %356, null
  br i1 %357, label %358, label %367

358:                                              ; preds = %355
  %359 = load i64, i64* %42, align 8
  %360 = icmp ne i64 %359, 0
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  store i32 0, i32* %35, align 4
  br label %538

362:                                              ; preds = %358
  %363 = load i8*, i8** %41, align 8
  store i8* %363, i8** %53, align 8
  %364 = load i64, i64* %42, align 8
  store i64 %364, i64* %49, align 8
  store i64 0, i64* %51, align 8
  %365 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %366 = load i64, i64* %365, align 8
  store i64 %366, i64* %47, align 8
  br label %398

367:                                              ; preds = %355
  %368 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %369 = load i64, i64* %368, align 8
  %370 = icmp ult i64 %369, 65536
  br i1 %370, label %371, label %374

371:                                              ; preds = %367
  %372 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %373 = load i64, i64* %372, align 8
  br label %375

374:                                              ; preds = %367
  br label %375

375:                                              ; preds = %374, %371
  %376 = phi i64 [ %373, %371 ], [ 65536, %374 ]
  store i64 %376, i64* %49, align 8
  %377 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %378 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %377, i32 0, i32 7
  %379 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %378, align 8
  %380 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %381 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %380, i32 0, i32 10
  %382 = load i8*, i8** %381, align 8
  %383 = load i64, i64* %49, align 8
  %384 = call i8* %379(i8* noundef %382, i64 noundef 1, i64 noundef %383)
  store i8* %384, i8** %53, align 8
  %385 = icmp eq i8* null, %384
  br i1 %385, label %386, label %395

386:                                              ; preds = %375
  %387 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %387, %struct.mz_zip_archive** %27, align 8
  store i32 16, i32* %28, align 4
  %388 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %389 = icmp ne %struct.mz_zip_archive* %388, null
  br i1 %389, label %390, label %394

390:                                              ; preds = %386
  %391 = load i32, i32* %28, align 4
  %392 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %393 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %392, i32 0, i32 5
  store i32 %391, i32* %393, align 4
  br label %394

394:                                              ; preds = %386, %390
  store i32 0, i32* %35, align 4
  br label %538

395:                                              ; preds = %375
  store i64 0, i64* %51, align 8
  %396 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %397 = load i64, i64* %396, align 8
  store i64 %397, i64* %47, align 8
  br label %398

398:                                              ; preds = %395, %362
  br label %399

399:                                              ; preds = %398, %345
  br label %400

400:                                              ; preds = %476, %399
  %401 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %402 = load i64, i64* %401, align 8
  %403 = load i64, i64* %48, align 8
  %404 = sub i64 %402, %403
  store i64 %404, i64* %58, align 8
  %405 = load i64, i64* %51, align 8
  %406 = icmp ne i64 %405, 0
  br i1 %406, label %452, label %407

407:                                              ; preds = %400
  %408 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %409 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %408, i32 0, i32 15
  %410 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %409, align 8
  %411 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %410, i32 0, i32 8
  %412 = load i8*, i8** %411, align 8
  %413 = icmp ne i8* %412, null
  br i1 %413, label %452, label %414

414:                                              ; preds = %407
  %415 = load i64, i64* %49, align 8
  %416 = load i64, i64* %47, align 8
  %417 = icmp ult i64 %415, %416
  br i1 %417, label %418, label %420

418:                                              ; preds = %414
  %419 = load i64, i64* %49, align 8
  br label %422

420:                                              ; preds = %414
  %421 = load i64, i64* %47, align 8
  br label %422

422:                                              ; preds = %420, %418
  %423 = phi i64 [ %419, %418 ], [ %421, %420 ]
  store i64 %423, i64* %51, align 8
  %424 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %425 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %424, i32 0, i32 11
  %426 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %425, align 8
  %427 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %428 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %427, i32 0, i32 14
  %429 = load i8*, i8** %428, align 8
  %430 = load i64, i64* %46, align 8
  %431 = load i8*, i8** %53, align 8
  %432 = load i64, i64* %51, align 8
  %433 = call i64 %426(i8* noundef %429, i64 noundef %430, i8* noundef %431, i64 noundef %432)
  %434 = load i64, i64* %51, align 8
  %435 = icmp ne i64 %433, %434
  br i1 %435, label %436, label %445

436:                                              ; preds = %422
  store i32 -1, i32* %44, align 4
  %437 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %437, %struct.mz_zip_archive** %29, align 8
  store i32 11, i32* %30, align 4
  %438 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %29, align 8
  %439 = icmp ne %struct.mz_zip_archive* %438, null
  br i1 %439, label %440, label %444

440:                                              ; preds = %436
  %441 = load i32, i32* %30, align 4
  %442 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %29, align 8
  %443 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %442, i32 0, i32 5
  store i32 %441, i32* %443, align 4
  br label %444

444:                                              ; preds = %436, %440
  br label %479

445:                                              ; preds = %422
  %446 = load i64, i64* %51, align 8
  %447 = load i64, i64* %46, align 8
  %448 = add i64 %447, %446
  store i64 %448, i64* %46, align 8
  %449 = load i64, i64* %51, align 8
  %450 = load i64, i64* %47, align 8
  %451 = sub i64 %450, %449
  store i64 %451, i64* %47, align 8
  store i64 0, i64* %50, align 8
  br label %452

452:                                              ; preds = %445, %407, %400
  %453 = load i64, i64* %51, align 8
  store i64 %453, i64* %57, align 8
  %454 = load i8*, i8** %53, align 8
  %455 = load i64, i64* %50, align 8
  %456 = getelementptr inbounds i8, i8* %454, i64 %455
  %457 = load i8*, i8** %38, align 8
  %458 = load i8*, i8** %38, align 8
  %459 = load i64, i64* %48, align 8
  %460 = getelementptr inbounds i8, i8* %458, i64 %459
  %461 = load i64, i64* %47, align 8
  %462 = icmp ne i64 %461, 0
  %463 = zext i1 %462 to i64
  %464 = select i1 %462, i32 2, i32 0
  %465 = or i32 4, %464
  %466 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %56, i8* noundef %456, i64* noundef %57, i8* noundef %457, i8* noundef %460, i64* noundef %58, i32 noundef %465)
  store i32 %466, i32* %44, align 4
  %467 = load i64, i64* %57, align 8
  %468 = load i64, i64* %51, align 8
  %469 = sub i64 %468, %467
  store i64 %469, i64* %51, align 8
  %470 = load i64, i64* %57, align 8
  %471 = load i64, i64* %50, align 8
  %472 = add i64 %471, %470
  store i64 %472, i64* %50, align 8
  %473 = load i64, i64* %58, align 8
  %474 = load i64, i64* %48, align 8
  %475 = add i64 %474, %473
  store i64 %475, i64* %48, align 8
  br label %476

476:                                              ; preds = %452
  %477 = load i32, i32* %44, align 4
  %478 = icmp eq i32 %477, 1
  br i1 %478, label %400, label %479, !llvm.loop !116

479:                                              ; preds = %476, %444
  %480 = load i32, i32* %44, align 4
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %516

482:                                              ; preds = %479
  %483 = load i64, i64* %48, align 8
  %484 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %485 = load i64, i64* %484, align 8
  %486 = icmp ne i64 %483, %485
  br i1 %486, label %487, label %496

487:                                              ; preds = %482
  %488 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %488, %struct.mz_zip_archive** %31, align 8
  store i32 13, i32* %32, align 4
  %489 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %31, align 8
  %490 = icmp ne %struct.mz_zip_archive* %489, null
  br i1 %490, label %491, label %495

491:                                              ; preds = %487
  %492 = load i32, i32* %32, align 4
  %493 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %31, align 8
  %494 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %493, i32 0, i32 5
  store i32 %492, i32* %494, align 4
  br label %495

495:                                              ; preds = %487, %491
  store i32 -1, i32* %44, align 4
  br label %515

496:                                              ; preds = %482
  %497 = load i8*, i8** %38, align 8
  %498 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %499 = load i64, i64* %498, align 8
  %500 = call i64 @mz_crc32(i64 noundef 0, i8* noundef %497, i64 noundef %499)
  %501 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 6
  %502 = load i32, i32* %501, align 8
  %503 = zext i32 %502 to i64
  %504 = icmp ne i64 %500, %503
  br i1 %504, label %505, label %514

505:                                              ; preds = %496
  %506 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_archive* %506, %struct.mz_zip_archive** %33, align 8
  store i32 14, i32* %34, align 4
  %507 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %33, align 8
  %508 = icmp ne %struct.mz_zip_archive* %507, null
  br i1 %508, label %509, label %513

509:                                              ; preds = %505
  %510 = load i32, i32* %34, align 4
  %511 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %33, align 8
  %512 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %511, i32 0, i32 5
  store i32 %510, i32* %512, align 4
  br label %513

513:                                              ; preds = %505, %509
  store i32 -1, i32* %44, align 4
  br label %514

514:                                              ; preds = %513, %496
  br label %515

515:                                              ; preds = %514, %495
  br label %516

516:                                              ; preds = %515, %479
  %517 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %518 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %517, i32 0, i32 15
  %519 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %518, align 8
  %520 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %519, i32 0, i32 8
  %521 = load i8*, i8** %520, align 8
  %522 = icmp ne i8* %521, null
  br i1 %522, label %534, label %523

523:                                              ; preds = %516
  %524 = load i8*, i8** %41, align 8
  %525 = icmp ne i8* %524, null
  br i1 %525, label %534, label %526

526:                                              ; preds = %523
  %527 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %528 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %527, i32 0, i32 8
  %529 = load void (i8*, i8*)*, void (i8*, i8*)** %528, align 8
  %530 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %531 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %530, i32 0, i32 10
  %532 = load i8*, i8** %531, align 8
  %533 = load i8*, i8** %53, align 8
  call void %529(i8* noundef %532, i8* noundef %533)
  br label %534

534:                                              ; preds = %526, %523, %516
  %535 = load i32, i32* %44, align 4
  %536 = icmp eq i32 %535, 0
  %537 = zext i1 %536 to i32
  store i32 %537, i32* %35, align 4
  br label %538

538:                                              ; preds = %534, %394, %361, %334, %332, %310, %280, %233, %200, %178, %154, %131, %116, %106, %93
  %539 = load i32, i32* %35, align 4
  ret i32 %539
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_mem_no_alloc(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4, i8* noundef %5, i64 noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %9, align 8
  store i8* %1, i8** %10, align 8
  store i8* %2, i8** %11, align 8
  store i64 %3, i64* %12, align 8
  store i32 %4, i32* %13, align 4
  store i8* %5, i8** %14, align 8
  store i64 %6, i64* %15, align 8
  %17 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %18 = load i8*, i8** %10, align 8
  %19 = load i32, i32* %13, align 4
  %20 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %17, i8* noundef %18, i8* noundef null, i32 noundef %19, i32* noundef %16)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %32

23:                                               ; preds = %7
  %24 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %25 = load i32, i32* %16, align 4
  %26 = load i8*, i8** %11, align 8
  %27 = load i64, i64* %12, align 8
  %28 = load i32, i32* %13, align 4
  %29 = load i8*, i8** %14, align 8
  %30 = load i64, i64* %15, align 8
  %31 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(%struct.mz_zip_archive* noundef %24, i32 noundef %25, i8* noundef %26, i64 noundef %27, i32 noundef %28, i8* noundef %29, i64 noundef %30, %struct.mz_zip_archive_file_stat* noundef null)
  store i32 %31, i32* %8, align 4
  br label %32

32:                                               ; preds = %23, %22
  %33 = load i32, i32* %8, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_to_mem(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load i8*, i8** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load i32, i32* %10, align 4
  %16 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(%struct.mz_zip_archive* noundef %11, i32 noundef %12, i8* noundef %13, i64 noundef %14, i32 noundef %15, i8* noundef null, i64 noundef 0, %struct.mz_zip_archive_file_stat* noundef null)
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_mem(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load i32, i32* %10, align 4
  %16 = call i32 @mz_zip_reader_extract_file_to_mem_no_alloc(%struct.mz_zip_archive* noundef %11, i8* noundef %12, i8* noundef %13, i64 noundef %14, i32 noundef %15, i8* noundef null, i64 noundef 0)
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_zip_reader_extract_to_heap(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i64* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_file_stat, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %8, align 8
  store i32 %1, i32* %9, align 4
  store i64* %2, i64** %10, align 8
  store i32 %3, i32* %11, align 4
  %15 = load i64*, i64** %10, align 8
  %16 = icmp ne i64* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = load i64*, i64** %10, align 8
  store i64 0, i64* %18, align 8
  br label %19

19:                                               ; preds = %17, %4
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %20, i32 noundef %21, %struct.mz_zip_archive_file_stat* noundef %12)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  store i8* null, i8** %7, align 8
  br label %79

25:                                               ; preds = %19
  %26 = load i32, i32* %11, align 4
  %27 = and i32 %26, 1024
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %12, i32 0, i32 7
  %31 = load i64, i64* %30, align 8
  br label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %12, i32 0, i32 8
  %34 = load i64, i64* %33, align 8
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i64 [ %31, %29 ], [ %34, %32 ]
  store i64 %36, i64* %13, align 8
  %37 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %37, i32 0, i32 7
  %39 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %38, align 8
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %40, i32 0, i32 10
  %42 = load i8*, i8** %41, align 8
  %43 = load i64, i64* %13, align 8
  %44 = call i8* %39(i8* noundef %42, i64 noundef 1, i64 noundef %43)
  store i8* %44, i8** %14, align 8
  %45 = icmp eq i8* null, %44
  br i1 %45, label %46, label %55

46:                                               ; preds = %35
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  store %struct.mz_zip_archive* %47, %struct.mz_zip_archive** %5, align 8
  store i32 16, i32* %6, align 4
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %49 = icmp ne %struct.mz_zip_archive* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load i32, i32* %6, align 4
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %52, i32 0, i32 5
  store i32 %51, i32* %53, align 4
  br label %54

54:                                               ; preds = %46, %50
  store i8* null, i8** %7, align 8
  br label %79

55:                                               ; preds = %35
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %57 = load i32, i32* %9, align 4
  %58 = load i8*, i8** %14, align 8
  %59 = load i64, i64* %13, align 8
  %60 = load i32, i32* %11, align 4
  %61 = call i32 @mz_zip_reader_extract_to_mem_no_alloc1(%struct.mz_zip_archive* noundef %56, i32 noundef %57, i8* noundef %58, i64 noundef %59, i32 noundef %60, i8* noundef null, i64 noundef 0, %struct.mz_zip_archive_file_stat* noundef %12)
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %55
  %64 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %64, i32 0, i32 8
  %66 = load void (i8*, i8*)*, void (i8*, i8*)** %65, align 8
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %67, i32 0, i32 10
  %69 = load i8*, i8** %68, align 8
  %70 = load i8*, i8** %14, align 8
  call void %66(i8* noundef %69, i8* noundef %70)
  store i8* null, i8** %7, align 8
  br label %79

71:                                               ; preds = %55
  %72 = load i64*, i64** %10, align 8
  %73 = icmp ne i64* %72, null
  br i1 %73, label %74, label %77

74:                                               ; preds = %71
  %75 = load i64, i64* %13, align 8
  %76 = load i64*, i64** %10, align 8
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %71
  %78 = load i8*, i8** %14, align 8
  store i8* %78, i8** %7, align 8
  br label %79

79:                                               ; preds = %77, %63, %54, %24
  %80 = load i8*, i8** %7, align 8
  ret i8* %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %0, i32 noundef %1, %struct.mz_zip_archive_file_stat* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive_file_stat*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %7, align 8
  store i32 %1, i32* %8, align 4
  store %struct.mz_zip_archive_file_stat* %2, %struct.mz_zip_archive_file_stat** %9, align 8
  %10 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %11 = load i32, i32* %8, align 4
  %12 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %13 = load i32, i32* %8, align 4
  store %struct.mz_zip_archive* %12, %struct.mz_zip_archive** %5, align 8
  store i32 %13, i32* %6, align 4
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %15 = icmp ne %struct.mz_zip_archive* %14, null
  br i1 %15, label %16, label %27

16:                                               ; preds = %3
  %17 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %17, i32 0, i32 15
  %19 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %18, align 8
  %20 = icmp ne %struct.mz_zip_internal_state_tag* %19, null
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = load i32, i32* %6, align 4
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp uge i32 %22, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %16, %3
  store i8* null, i8** %4, align 8
  br label %48

28:                                               ; preds = %21
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %29, i32 0, i32 15
  %31 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %32 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %36 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %35, i32 0, i32 15
  %37 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %36, align 8
  %38 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %37, i32 0, i32 1
  %39 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %38, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %6, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %34, i64 %46
  store i8* %47, i8** %4, align 8
  br label %48

48:                                               ; preds = %27, %28
  %49 = load i8*, i8** %4, align 8
  %50 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %9, align 8
  %51 = call i32 @mz_zip_file_stat_internal(%struct.mz_zip_archive* noundef %10, i32 noundef %11, i8* noundef %49, %struct.mz_zip_archive_file_stat* noundef %50, i32* noundef null)
  ret i32 %51
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_zip_reader_extract_file_to_heap(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i64* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i32, i32* %9, align 4
  %14 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %11, i8* noundef %12, i8* noundef null, i32 noundef %13, i32* noundef %10)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = load i64*, i64** %8, align 8
  %18 = icmp ne i64* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = load i64*, i64** %8, align 8
  store i64 0, i64* %20, align 8
  br label %21

21:                                               ; preds = %19, %16
  store i8* null, i8** %5, align 8
  br label %28

22:                                               ; preds = %4
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %24 = load i32, i32* %10, align 4
  %25 = load i64*, i64** %8, align 8
  %26 = load i32, i32* %9, align 4
  %27 = call i8* @mz_zip_reader_extract_to_heap(%struct.mz_zip_archive* noundef %23, i32 noundef %24, i64* noundef %25, i32 noundef %26)
  store i8* %27, i8** %5, align 8
  br label %28

28:                                               ; preds = %22, %21
  %29 = load i8*, i8** %5, align 8
  ret i8* %29
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i64 (i8*, i64, i8*, i64)* noundef %2, i8* noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.mz_zip_archive*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct.mz_zip_archive*, align 8
  %27 = alloca i32, align 4
  %28 = alloca %struct.mz_zip_archive*, align 8
  %29 = alloca i32, align 4
  %30 = alloca %struct.mz_zip_archive*, align 8
  %31 = alloca i32, align 4
  %32 = alloca %struct.mz_zip_archive*, align 8
  %33 = alloca i32, align 4
  %34 = alloca %struct.mz_zip_archive*, align 8
  %35 = alloca i32, align 4
  %36 = alloca %struct.mz_zip_archive*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %struct.mz_zip_archive*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i64 (i8*, i64, i8*, i64)*, align 8
  %42 = alloca i8*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca %struct.mz_zip_archive_file_stat, align 8
  %53 = alloca i8*, align 8
  %54 = alloca i8*, align 8
  %55 = alloca [8 x i32], align 16
  %56 = alloca i8*, align 8
  %57 = alloca %struct.tinfl_decompressor_tag, align 8
  %58 = alloca i8*, align 8
  %59 = alloca i64, align 8
  %60 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %39, align 8
  store i32 %1, i32* %40, align 4
  store i64 (i8*, i64, i8*, i64)* %2, i64 (i8*, i64, i8*, i64)** %41, align 8
  store i8* %3, i8** %42, align 8
  store i32 %4, i32* %43, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %45, align 4
  store i64 0, i64* %47, align 8
  store i64 0, i64* %50, align 8
  store i8* null, i8** %53, align 8
  store i8* null, i8** %54, align 8
  %61 = getelementptr inbounds [8 x i32], [8 x i32]* %55, i64 0, i64 0
  %62 = bitcast i32* %61 to i8*
  store i8* %62, i8** %56, align 8
  %63 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %64 = icmp ne %struct.mz_zip_archive* %63, null
  br i1 %64, label %65, label %78

65:                                               ; preds = %5
  %66 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %67 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %66, i32 0, i32 15
  %68 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %67, align 8
  %69 = icmp ne %struct.mz_zip_internal_state_tag* %68, null
  br i1 %69, label %70, label %78

70:                                               ; preds = %65
  %71 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %41, align 8
  %72 = icmp ne i64 (i8*, i64, i8*, i64)* %71, null
  br i1 %72, label %73, label %78

73:                                               ; preds = %70
  %74 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %74, i32 0, i32 11
  %76 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %75, align 8
  %77 = icmp ne i64 (i8*, i64, i8*, i64)* %76, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %70, %65, %5
  %79 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %79, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %80 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %81 = icmp ne %struct.mz_zip_archive* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = load i32, i32* %7, align 4
  %84 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %84, i32 0, i32 5
  store i32 %83, i32* %85, align 4
  br label %86

86:                                               ; preds = %78, %82
  store i32 0, i32* %38, align 4
  br label %639

87:                                               ; preds = %73
  %88 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %89 = load i32, i32* %40, align 4
  %90 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %88, i32 noundef %89, %struct.mz_zip_archive_file_stat* noundef %52)
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %87
  store i32 0, i32* %38, align 4
  br label %639

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 13
  %95 = load i32, i32* %94, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %99 = load i64, i64* %98, align 8
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %97, %93
  store i32 1, i32* %38, align 4
  br label %639

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 4
  %104 = load i16, i16* %103, align 4
  %105 = zext i16 %104 to i32
  %106 = and i32 %105, 97
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %117

108:                                              ; preds = %102
  %109 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %109, %struct.mz_zip_archive** %8, align 8
  store i32 5, i32* %9, align 4
  %110 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %111 = icmp ne %struct.mz_zip_archive* %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = load i32, i32* %9, align 4
  %114 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %114, i32 0, i32 5
  store i32 %113, i32* %115, align 4
  br label %116

116:                                              ; preds = %108, %112
  store i32 0, i32* %38, align 4
  br label %639

117:                                              ; preds = %102
  %118 = load i32, i32* %43, align 4
  %119 = and i32 %118, 1024
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %140, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 5
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %140

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 5
  %128 = load i16, i16* %127, align 2
  %129 = zext i16 %128 to i32
  %130 = icmp ne i32 %129, 8
  br i1 %130, label %131, label %140

131:                                              ; preds = %126
  %132 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %132, %struct.mz_zip_archive** %10, align 8
  store i32 4, i32* %11, align 4
  %133 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %134 = icmp ne %struct.mz_zip_archive* %133, null
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = load i32, i32* %11, align 4
  %137 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %138 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %137, i32 0, i32 5
  store i32 %136, i32* %138, align 4
  br label %139

139:                                              ; preds = %131, %135
  store i32 0, i32* %38, align 4
  br label %639

140:                                              ; preds = %126, %121, %117
  %141 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 11
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %51, align 8
  %143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %144 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %143, i32 0, i32 11
  %145 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %144, align 8
  %146 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %147 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %146, i32 0, i32 14
  %148 = load i8*, i8** %147, align 8
  %149 = load i64, i64* %51, align 8
  %150 = load i8*, i8** %56, align 8
  %151 = call i64 %145(i8* noundef %148, i64 noundef %149, i8* noundef %150, i64 noundef 30)
  %152 = icmp ne i64 %151, 30
  br i1 %152, label %153, label %162

153:                                              ; preds = %140
  %154 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %154, %struct.mz_zip_archive** %12, align 8
  store i32 20, i32* %13, align 4
  %155 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %156 = icmp ne %struct.mz_zip_archive* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = load i32, i32* %13, align 4
  %159 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %160 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %159, i32 0, i32 5
  store i32 %158, i32* %160, align 4
  br label %161

161:                                              ; preds = %153, %157
  store i32 0, i32* %38, align 4
  br label %639

162:                                              ; preds = %140
  %163 = load i8*, i8** %56, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 0
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = load i8*, i8** %56, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = shl i32 %170, 8
  %172 = or i32 %166, %171
  %173 = load i8*, i8** %56, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl i32 %176, 16
  %178 = or i32 %172, %177
  %179 = load i8*, i8** %56, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 3
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = shl i32 %182, 24
  %184 = or i32 %178, %183
  %185 = icmp ne i32 %184, 67324752
  br i1 %185, label %186, label %195

186:                                              ; preds = %162
  %187 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %187, %struct.mz_zip_archive** %14, align 8
  store i32 9, i32* %15, align 4
  %188 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %189 = icmp ne %struct.mz_zip_archive* %188, null
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = load i32, i32* %15, align 4
  %192 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %193 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %192, i32 0, i32 5
  store i32 %191, i32* %193, align 4
  br label %194

194:                                              ; preds = %186, %190
  store i32 0, i32* %38, align 4
  br label %639

195:                                              ; preds = %162
  %196 = load i8*, i8** %56, align 8
  %197 = getelementptr inbounds i8, i8* %196, i64 26
  %198 = getelementptr inbounds i8, i8* %197, i64 0
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = load i8*, i8** %56, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 26
  %203 = getelementptr inbounds i8, i8* %202, i64 1
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = shl i32 %205, 8
  %207 = or i32 %200, %206
  %208 = add i32 30, %207
  %209 = load i8*, i8** %56, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 28
  %211 = getelementptr inbounds i8, i8* %210, i64 0
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = load i8*, i8** %56, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 28
  %216 = getelementptr inbounds i8, i8* %215, i64 1
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = shl i32 %218, 8
  %220 = or i32 %213, %219
  %221 = add i32 %208, %220
  %222 = zext i32 %221 to i64
  %223 = load i64, i64* %51, align 8
  %224 = add i64 %223, %222
  store i64 %224, i64* %51, align 8
  %225 = load i64, i64* %51, align 8
  %226 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %225, %227
  %229 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %230 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %229, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = icmp ugt i64 %228, %231
  br i1 %232, label %233, label %242

233:                                              ; preds = %195
  %234 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %234, %struct.mz_zip_archive** %16, align 8
  store i32 9, i32* %17, align 4
  %235 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %236 = icmp ne %struct.mz_zip_archive* %235, null
  br i1 %236, label %237, label %241

237:                                              ; preds = %233
  %238 = load i32, i32* %17, align 4
  %239 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %240 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %239, i32 0, i32 5
  store i32 %238, i32* %240, align 4
  br label %241

241:                                              ; preds = %233, %237
  store i32 0, i32* %38, align 4
  br label %639

242:                                              ; preds = %195
  %243 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %244 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %243, i32 0, i32 15
  %245 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %244, align 8
  %246 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %245, i32 0, i32 8
  %247 = load i8*, i8** %246, align 8
  %248 = icmp ne i8* %247, null
  br i1 %248, label %249, label %259

249:                                              ; preds = %242
  %250 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %251 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %250, i32 0, i32 15
  %252 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %253 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %252, i32 0, i32 8
  %254 = load i8*, i8** %253, align 8
  %255 = load i64, i64* %51, align 8
  %256 = getelementptr inbounds i8, i8* %254, i64 %255
  store i8* %256, i8** %53, align 8
  %257 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %258 = load i64, i64* %257, align 8
  store i64 %258, i64* %48, align 8
  store i64 %258, i64* %46, align 8
  store i64 0, i64* %49, align 8
  br label %290

259:                                              ; preds = %242
  %260 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %261 = load i64, i64* %260, align 8
  %262 = icmp ult i64 %261, 65536
  br i1 %262, label %263, label %266

263:                                              ; preds = %259
  %264 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %265 = load i64, i64* %264, align 8
  br label %267

266:                                              ; preds = %259
  br label %267

267:                                              ; preds = %266, %263
  %268 = phi i64 [ %265, %263 ], [ 65536, %266 ]
  store i64 %268, i64* %46, align 8
  %269 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %270 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %269, i32 0, i32 7
  %271 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %270, align 8
  %272 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %273 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %272, i32 0, i32 10
  %274 = load i8*, i8** %273, align 8
  %275 = load i64, i64* %46, align 8
  %276 = call i8* %271(i8* noundef %274, i64 noundef 1, i64 noundef %275)
  store i8* %276, i8** %53, align 8
  %277 = icmp eq i8* null, %276
  br i1 %277, label %278, label %287

278:                                              ; preds = %267
  %279 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %279, %struct.mz_zip_archive** %18, align 8
  store i32 16, i32* %19, align 4
  %280 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %281 = icmp ne %struct.mz_zip_archive* %280, null
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = load i32, i32* %19, align 4
  %284 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %285 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %284, i32 0, i32 5
  store i32 %283, i32* %285, align 4
  br label %286

286:                                              ; preds = %278, %282
  store i32 0, i32* %38, align 4
  br label %639

287:                                              ; preds = %267
  store i64 0, i64* %48, align 8
  %288 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %289 = load i64, i64* %288, align 8
  store i64 %289, i64* %49, align 8
  br label %290

290:                                              ; preds = %287, %249
  %291 = load i32, i32* %43, align 4
  %292 = and i32 %291, 1024
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 5
  %296 = load i16, i16* %295, align 2
  %297 = icmp ne i16 %296, 0
  br i1 %297, label %423, label %298

298:                                              ; preds = %294, %290
  %299 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %300 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %299, i32 0, i32 15
  %301 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %300, align 8
  %302 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %301, i32 0, i32 8
  %303 = load i8*, i8** %302, align 8
  %304 = icmp ne i8* %303, null
  br i1 %304, label %305, label %347

305:                                              ; preds = %298
  %306 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %41, align 8
  %307 = load i8*, i8** %42, align 8
  %308 = load i64, i64* %50, align 8
  %309 = load i8*, i8** %53, align 8
  %310 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %311 = load i64, i64* %310, align 8
  %312 = call i64 %306(i8* noundef %307, i64 noundef %308, i8* noundef %309, i64 noundef %311)
  %313 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %314 = load i64, i64* %313, align 8
  %315 = icmp ne i64 %312, %314
  br i1 %315, label %316, label %325

316:                                              ; preds = %305
  %317 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %317, %struct.mz_zip_archive** %20, align 8
  store i32 31, i32* %21, align 4
  %318 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %319 = icmp ne %struct.mz_zip_archive* %318, null
  br i1 %319, label %320, label %324

320:                                              ; preds = %316
  %321 = load i32, i32* %21, align 4
  %322 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %323 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %322, i32 0, i32 5
  store i32 %321, i32* %323, align 4
  br label %324

324:                                              ; preds = %316, %320
  store i32 -1, i32* %44, align 4
  br label %338

325:                                              ; preds = %305
  %326 = load i32, i32* %43, align 4
  %327 = and i32 %326, 1024
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %337, label %329

329:                                              ; preds = %325
  %330 = load i32, i32* %45, align 4
  %331 = zext i32 %330 to i64
  %332 = load i8*, i8** %53, align 8
  %333 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %334 = load i64, i64* %333, align 8
  %335 = call i64 @mz_crc32(i64 noundef %331, i8* noundef %332, i64 noundef %334)
  %336 = trunc i64 %335 to i32
  store i32 %336, i32* %45, align 4
  br label %337

337:                                              ; preds = %329, %325
  br label %338

338:                                              ; preds = %337, %324
  %339 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %340 = load i64, i64* %339, align 8
  %341 = load i64, i64* %51, align 8
  %342 = add i64 %341, %340
  store i64 %342, i64* %51, align 8
  %343 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 7
  %344 = load i64, i64* %343, align 8
  %345 = load i64, i64* %50, align 8
  %346 = add i64 %345, %344
  store i64 %346, i64* %50, align 8
  store i64 0, i64* %49, align 8
  br label %422

347:                                              ; preds = %298
  br label %348

348:                                              ; preds = %411, %347
  %349 = load i64, i64* %49, align 8
  %350 = icmp ne i64 %349, 0
  br i1 %350, label %351, label %421

351:                                              ; preds = %348
  %352 = load i64, i64* %46, align 8
  %353 = load i64, i64* %49, align 8
  %354 = icmp ult i64 %352, %353
  br i1 %354, label %355, label %357

355:                                              ; preds = %351
  %356 = load i64, i64* %46, align 8
  br label %359

357:                                              ; preds = %351
  %358 = load i64, i64* %49, align 8
  br label %359

359:                                              ; preds = %357, %355
  %360 = phi i64 [ %356, %355 ], [ %358, %357 ]
  store i64 %360, i64* %48, align 8
  %361 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %362 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %361, i32 0, i32 11
  %363 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %362, align 8
  %364 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %365 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %364, i32 0, i32 14
  %366 = load i8*, i8** %365, align 8
  %367 = load i64, i64* %51, align 8
  %368 = load i8*, i8** %53, align 8
  %369 = load i64, i64* %48, align 8
  %370 = call i64 %363(i8* noundef %366, i64 noundef %367, i8* noundef %368, i64 noundef %369)
  %371 = load i64, i64* %48, align 8
  %372 = icmp ne i64 %370, %371
  br i1 %372, label %373, label %382

373:                                              ; preds = %359
  %374 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %374, %struct.mz_zip_archive** %22, align 8
  store i32 20, i32* %23, align 4
  %375 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %376 = icmp ne %struct.mz_zip_archive* %375, null
  br i1 %376, label %377, label %381

377:                                              ; preds = %373
  %378 = load i32, i32* %23, align 4
  %379 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %380 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %379, i32 0, i32 5
  store i32 %378, i32* %380, align 4
  br label %381

381:                                              ; preds = %373, %377
  store i32 -1, i32* %44, align 4
  br label %421

382:                                              ; preds = %359
  %383 = load i32, i32* %43, align 4
  %384 = and i32 %383, 1024
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %393, label %386

386:                                              ; preds = %382
  %387 = load i32, i32* %45, align 4
  %388 = zext i32 %387 to i64
  %389 = load i8*, i8** %53, align 8
  %390 = load i64, i64* %48, align 8
  %391 = call i64 @mz_crc32(i64 noundef %388, i8* noundef %389, i64 noundef %390)
  %392 = trunc i64 %391 to i32
  store i32 %392, i32* %45, align 4
  br label %393

393:                                              ; preds = %386, %382
  %394 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %41, align 8
  %395 = load i8*, i8** %42, align 8
  %396 = load i64, i64* %50, align 8
  %397 = load i8*, i8** %53, align 8
  %398 = load i64, i64* %48, align 8
  %399 = call i64 %394(i8* noundef %395, i64 noundef %396, i8* noundef %397, i64 noundef %398)
  %400 = load i64, i64* %48, align 8
  %401 = icmp ne i64 %399, %400
  br i1 %401, label %402, label %411

402:                                              ; preds = %393
  %403 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %403, %struct.mz_zip_archive** %24, align 8
  store i32 31, i32* %25, align 4
  %404 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %405 = icmp ne %struct.mz_zip_archive* %404, null
  br i1 %405, label %406, label %410

406:                                              ; preds = %402
  %407 = load i32, i32* %25, align 4
  %408 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %409 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %408, i32 0, i32 5
  store i32 %407, i32* %409, align 4
  br label %410

410:                                              ; preds = %402, %406
  store i32 -1, i32* %44, align 4
  br label %421

411:                                              ; preds = %393
  %412 = load i64, i64* %48, align 8
  %413 = load i64, i64* %51, align 8
  %414 = add i64 %413, %412
  store i64 %414, i64* %51, align 8
  %415 = load i64, i64* %48, align 8
  %416 = load i64, i64* %50, align 8
  %417 = add i64 %416, %415
  store i64 %417, i64* %50, align 8
  %418 = load i64, i64* %48, align 8
  %419 = load i64, i64* %49, align 8
  %420 = sub i64 %419, %418
  store i64 %420, i64* %49, align 8
  br label %348, !llvm.loop !117

421:                                              ; preds = %410, %381, %348
  br label %422

422:                                              ; preds = %421, %338
  br label %572

423:                                              ; preds = %294
  br label %424

424:                                              ; preds = %423
  %425 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %57, i32 0, i32 0
  store i32 0, i32* %425, align 8
  br label %426

426:                                              ; preds = %424
  %427 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %428 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %427, i32 0, i32 7
  %429 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %428, align 8
  %430 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %431 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %430, i32 0, i32 10
  %432 = load i8*, i8** %431, align 8
  %433 = call i8* %429(i8* noundef %432, i64 noundef 1, i64 noundef 32768)
  store i8* %433, i8** %54, align 8
  %434 = icmp eq i8* null, %433
  br i1 %434, label %435, label %444

435:                                              ; preds = %426
  %436 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %436, %struct.mz_zip_archive** %26, align 8
  store i32 16, i32* %27, align 4
  %437 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %438 = icmp ne %struct.mz_zip_archive* %437, null
  br i1 %438, label %439, label %443

439:                                              ; preds = %435
  %440 = load i32, i32* %27, align 4
  %441 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %442 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %441, i32 0, i32 5
  store i32 %440, i32* %442, align 4
  br label %443

443:                                              ; preds = %435, %439
  store i32 -1, i32* %44, align 4
  br label %571

444:                                              ; preds = %426
  br label %445

445:                                              ; preds = %568, %444
  %446 = load i8*, i8** %54, align 8
  %447 = load i64, i64* %50, align 8
  %448 = and i64 %447, 32767
  %449 = getelementptr inbounds i8, i8* %446, i64 %448
  store i8* %449, i8** %58, align 8
  %450 = load i64, i64* %50, align 8
  %451 = and i64 %450, 32767
  %452 = sub i64 32768, %451
  store i64 %452, i64* %60, align 8
  %453 = load i64, i64* %48, align 8
  %454 = icmp ne i64 %453, 0
  br i1 %454, label %500, label %455

455:                                              ; preds = %445
  %456 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %457 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %456, i32 0, i32 15
  %458 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %457, align 8
  %459 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %458, i32 0, i32 8
  %460 = load i8*, i8** %459, align 8
  %461 = icmp ne i8* %460, null
  br i1 %461, label %500, label %462

462:                                              ; preds = %455
  %463 = load i64, i64* %46, align 8
  %464 = load i64, i64* %49, align 8
  %465 = icmp ult i64 %463, %464
  br i1 %465, label %466, label %468

466:                                              ; preds = %462
  %467 = load i64, i64* %46, align 8
  br label %470

468:                                              ; preds = %462
  %469 = load i64, i64* %49, align 8
  br label %470

470:                                              ; preds = %468, %466
  %471 = phi i64 [ %467, %466 ], [ %469, %468 ]
  store i64 %471, i64* %48, align 8
  %472 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %473 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %472, i32 0, i32 11
  %474 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %473, align 8
  %475 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %476 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %475, i32 0, i32 14
  %477 = load i8*, i8** %476, align 8
  %478 = load i64, i64* %51, align 8
  %479 = load i8*, i8** %53, align 8
  %480 = load i64, i64* %48, align 8
  %481 = call i64 %474(i8* noundef %477, i64 noundef %478, i8* noundef %479, i64 noundef %480)
  %482 = load i64, i64* %48, align 8
  %483 = icmp ne i64 %481, %482
  br i1 %483, label %484, label %493

484:                                              ; preds = %470
  %485 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %485, %struct.mz_zip_archive** %28, align 8
  store i32 20, i32* %29, align 4
  %486 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %487 = icmp ne %struct.mz_zip_archive* %486, null
  br i1 %487, label %488, label %492

488:                                              ; preds = %484
  %489 = load i32, i32* %29, align 4
  %490 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %490, i32 0, i32 5
  store i32 %489, i32* %491, align 4
  br label %492

492:                                              ; preds = %484, %488
  store i32 -1, i32* %44, align 4
  br label %570

493:                                              ; preds = %470
  %494 = load i64, i64* %48, align 8
  %495 = load i64, i64* %51, align 8
  %496 = add i64 %495, %494
  store i64 %496, i64* %51, align 8
  %497 = load i64, i64* %48, align 8
  %498 = load i64, i64* %49, align 8
  %499 = sub i64 %498, %497
  store i64 %499, i64* %49, align 8
  store i64 0, i64* %47, align 8
  br label %500

500:                                              ; preds = %493, %455, %445
  %501 = load i64, i64* %48, align 8
  store i64 %501, i64* %59, align 8
  %502 = load i8*, i8** %53, align 8
  %503 = load i64, i64* %47, align 8
  %504 = getelementptr inbounds i8, i8* %502, i64 %503
  %505 = load i8*, i8** %54, align 8
  %506 = load i8*, i8** %58, align 8
  %507 = load i64, i64* %49, align 8
  %508 = icmp ne i64 %507, 0
  %509 = zext i1 %508 to i64
  %510 = select i1 %508, i32 2, i32 0
  %511 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %57, i8* noundef %504, i64* noundef %59, i8* noundef %505, i8* noundef %506, i64* noundef %60, i32 noundef %510)
  store i32 %511, i32* %44, align 4
  %512 = load i64, i64* %59, align 8
  %513 = load i64, i64* %48, align 8
  %514 = sub i64 %513, %512
  store i64 %514, i64* %48, align 8
  %515 = load i64, i64* %59, align 8
  %516 = load i64, i64* %47, align 8
  %517 = add i64 %516, %515
  store i64 %517, i64* %47, align 8
  %518 = load i64, i64* %60, align 8
  %519 = icmp ne i64 %518, 0
  br i1 %519, label %520, label %561

520:                                              ; preds = %500
  %521 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %41, align 8
  %522 = load i8*, i8** %42, align 8
  %523 = load i64, i64* %50, align 8
  %524 = load i8*, i8** %58, align 8
  %525 = load i64, i64* %60, align 8
  %526 = call i64 %521(i8* noundef %522, i64 noundef %523, i8* noundef %524, i64 noundef %525)
  %527 = load i64, i64* %60, align 8
  %528 = icmp ne i64 %526, %527
  br i1 %528, label %529, label %538

529:                                              ; preds = %520
  %530 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %530, %struct.mz_zip_archive** %30, align 8
  store i32 31, i32* %31, align 4
  %531 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %30, align 8
  %532 = icmp ne %struct.mz_zip_archive* %531, null
  br i1 %532, label %533, label %537

533:                                              ; preds = %529
  %534 = load i32, i32* %31, align 4
  %535 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %30, align 8
  %536 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %535, i32 0, i32 5
  store i32 %534, i32* %536, align 4
  br label %537

537:                                              ; preds = %529, %533
  store i32 -1, i32* %44, align 4
  br label %570

538:                                              ; preds = %520
  %539 = load i32, i32* %45, align 4
  %540 = zext i32 %539 to i64
  %541 = load i8*, i8** %58, align 8
  %542 = load i64, i64* %60, align 8
  %543 = call i64 @mz_crc32(i64 noundef %540, i8* noundef %541, i64 noundef %542)
  %544 = trunc i64 %543 to i32
  store i32 %544, i32* %45, align 4
  %545 = load i64, i64* %60, align 8
  %546 = load i64, i64* %50, align 8
  %547 = add i64 %546, %545
  store i64 %547, i64* %50, align 8
  %548 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %549 = load i64, i64* %548, align 8
  %550 = icmp ugt i64 %547, %549
  br i1 %550, label %551, label %560

551:                                              ; preds = %538
  %552 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %552, %struct.mz_zip_archive** %32, align 8
  store i32 11, i32* %33, align 4
  %553 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %554 = icmp ne %struct.mz_zip_archive* %553, null
  br i1 %554, label %555, label %559

555:                                              ; preds = %551
  %556 = load i32, i32* %33, align 4
  %557 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %558 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %557, i32 0, i32 5
  store i32 %556, i32* %558, align 4
  br label %559

559:                                              ; preds = %551, %555
  store i32 -1, i32* %44, align 4
  br label %570

560:                                              ; preds = %538
  br label %561

561:                                              ; preds = %560, %500
  br label %562

562:                                              ; preds = %561
  %563 = load i32, i32* %44, align 4
  %564 = icmp eq i32 %563, 1
  br i1 %564, label %568, label %565

565:                                              ; preds = %562
  %566 = load i32, i32* %44, align 4
  %567 = icmp eq i32 %566, 2
  br label %568

568:                                              ; preds = %565, %562
  %569 = phi i1 [ true, %562 ], [ %567, %565 ]
  br i1 %569, label %445, label %570, !llvm.loop !118

570:                                              ; preds = %568, %559, %537, %492
  br label %571

571:                                              ; preds = %570, %443
  br label %572

572:                                              ; preds = %571, %422
  %573 = load i32, i32* %44, align 4
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %609

575:                                              ; preds = %572
  %576 = load i32, i32* %43, align 4
  %577 = and i32 %576, 1024
  %578 = icmp ne i32 %577, 0
  br i1 %578, label %609, label %579

579:                                              ; preds = %575
  %580 = load i64, i64* %50, align 8
  %581 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 8
  %582 = load i64, i64* %581, align 8
  %583 = icmp ne i64 %580, %582
  br i1 %583, label %584, label %593

584:                                              ; preds = %579
  %585 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %585, %struct.mz_zip_archive** %34, align 8
  store i32 13, i32* %35, align 4
  %586 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %587 = icmp ne %struct.mz_zip_archive* %586, null
  br i1 %587, label %588, label %592

588:                                              ; preds = %584
  %589 = load i32, i32* %35, align 4
  %590 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %591 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %590, i32 0, i32 5
  store i32 %589, i32* %591, align 4
  br label %592

592:                                              ; preds = %584, %588
  store i32 -1, i32* %44, align 4
  br label %608

593:                                              ; preds = %579
  %594 = load i32, i32* %45, align 4
  %595 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %52, i32 0, i32 6
  %596 = load i32, i32* %595, align 8
  %597 = icmp ne i32 %594, %596
  br i1 %597, label %598, label %607

598:                                              ; preds = %593
  %599 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  store %struct.mz_zip_archive* %599, %struct.mz_zip_archive** %36, align 8
  store i32 11, i32* %37, align 4
  %600 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %601 = icmp ne %struct.mz_zip_archive* %600, null
  br i1 %601, label %602, label %606

602:                                              ; preds = %598
  %603 = load i32, i32* %37, align 4
  %604 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %605 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %604, i32 0, i32 5
  store i32 %603, i32* %605, align 4
  br label %606

606:                                              ; preds = %598, %602
  store i32 -1, i32* %44, align 4
  br label %607

607:                                              ; preds = %606, %593
  br label %608

608:                                              ; preds = %607, %592
  br label %609

609:                                              ; preds = %608, %575, %572
  %610 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %611 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %610, i32 0, i32 15
  %612 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %611, align 8
  %613 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %612, i32 0, i32 8
  %614 = load i8*, i8** %613, align 8
  %615 = icmp ne i8* %614, null
  br i1 %615, label %624, label %616

616:                                              ; preds = %609
  %617 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %618 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %617, i32 0, i32 8
  %619 = load void (i8*, i8*)*, void (i8*, i8*)** %618, align 8
  %620 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %621 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %620, i32 0, i32 10
  %622 = load i8*, i8** %621, align 8
  %623 = load i8*, i8** %53, align 8
  call void %619(i8* noundef %622, i8* noundef %623)
  br label %624

624:                                              ; preds = %616, %609
  %625 = load i8*, i8** %54, align 8
  %626 = icmp ne i8* %625, null
  br i1 %626, label %627, label %635

627:                                              ; preds = %624
  %628 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %629 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %628, i32 0, i32 8
  %630 = load void (i8*, i8*)*, void (i8*, i8*)** %629, align 8
  %631 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %39, align 8
  %632 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %631, i32 0, i32 10
  %633 = load i8*, i8** %632, align 8
  %634 = load i8*, i8** %54, align 8
  call void %630(i8* noundef %633, i8* noundef %634)
  br label %635

635:                                              ; preds = %627, %624
  %636 = load i32, i32* %44, align 4
  %637 = icmp eq i32 %636, 0
  %638 = zext i1 %637 to i32
  store i32 %638, i32* %38, align 4
  br label %639

639:                                              ; preds = %635, %286, %241, %194, %161, %139, %116, %101, %92, %86
  %640 = load i32, i32* %38, align 4
  ret i32 %640
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_callback(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i64 (i8*, i64, i8*, i64)* noundef %2, i8* noundef %3, i32 noundef %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64 (i8*, i64, i8*, i64)*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %7, align 8
  store i8* %1, i8** %8, align 8
  store i64 (i8*, i64, i8*, i64)* %2, i64 (i8*, i64, i8*, i64)** %9, align 8
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %14 = load i8*, i8** %8, align 8
  %15 = load i32, i32* %11, align 4
  %16 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %13, i8* noundef %14, i8* noundef null, i32 noundef %15, i32* noundef %12)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %5
  store i32 0, i32* %6, align 4
  br label %26

19:                                               ; preds = %5
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %21 = load i32, i32* %12, align 4
  %22 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %9, align 8
  %23 = load i8*, i8** %10, align 8
  %24 = load i32, i32* %11, align 4
  %25 = call i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive* noundef %20, i32 noundef %21, i64 (i8*, i64, i8*, i64)* noundef %22, i8* noundef %23, i32 noundef %24)
  store i32 %25, i32* %6, align 4
  br label %26

26:                                               ; preds = %19, %18
  %27 = load i32, i32* %6, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mz_zip_reader_extract_iter_state* @mz_zip_reader_extract_iter_new(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_reader_extract_iter_state*, align 8
  %21 = alloca %struct.mz_zip_archive*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %struct.mz_zip_reader_extract_iter_state*, align 8
  %25 = alloca [8 x i32], align 16
  %26 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %21, align 8
  store i32 %1, i32* %22, align 4
  store i32 %2, i32* %23, align 4
  %27 = getelementptr inbounds [8 x i32], [8 x i32]* %25, i64 0, i64 0
  %28 = bitcast i32* %27 to i8*
  store i8* %28, i8** %26, align 8
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %30 = icmp ne %struct.mz_zip_archive* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %3
  %32 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %32, i32 0, i32 15
  %34 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %33, align 8
  %35 = icmp ne %struct.mz_zip_internal_state_tag* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %31, %3
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

37:                                               ; preds = %31
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %38, i32 0, i32 7
  %40 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %39, align 8
  %41 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %41, i32 0, i32 10
  %43 = load i8*, i8** %42, align 8
  %44 = call i8* %40(i8* noundef %43, i64 noundef 1, i64 noundef 9584)
  %45 = bitcast i8* %44 to %struct.mz_zip_reader_extract_iter_state*
  store %struct.mz_zip_reader_extract_iter_state* %45, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %46 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %47 = icmp ne %struct.mz_zip_reader_extract_iter_state* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %37
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %49, %struct.mz_zip_archive** %4, align 8
  store i32 16, i32* %5, align 4
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %51 = icmp ne %struct.mz_zip_archive* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i32, i32* %5, align 4
  %54 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %54, i32 0, i32 5
  store i32 %53, i32* %55, align 4
  br label %56

56:                                               ; preds = %48, %52
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

57:                                               ; preds = %37
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %59 = load i32, i32* %22, align 4
  %60 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %61 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %60, i32 0, i32 9
  %62 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %58, i32 noundef %59, %struct.mz_zip_archive_file_stat* noundef %61)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %57
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %65, i32 0, i32 8
  %67 = load void (i8*, i8*)*, void (i8*, i8*)** %66, align 8
  %68 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %68, i32 0, i32 10
  %70 = load i8*, i8** %69, align 8
  %71 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %72 = bitcast %struct.mz_zip_reader_extract_iter_state* %71 to i8*
  call void %67(i8* noundef %70, i8* noundef %72)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

73:                                               ; preds = %57
  %74 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %75 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %74, i32 0, i32 9
  %76 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %75, i32 0, i32 4
  %77 = load i16, i16* %76, align 4
  %78 = zext i16 %77 to i32
  %79 = and i32 %78, 97
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %98

81:                                               ; preds = %73
  %82 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %82, %struct.mz_zip_archive** %6, align 8
  store i32 5, i32* %7, align 4
  %83 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %84 = icmp ne %struct.mz_zip_archive* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = load i32, i32* %7, align 4
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %87, i32 0, i32 5
  store i32 %86, i32* %88, align 4
  br label %89

89:                                               ; preds = %81, %85
  %90 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %90, i32 0, i32 8
  %92 = load void (i8*, i8*)*, void (i8*, i8*)** %91, align 8
  %93 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %94 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %93, i32 0, i32 10
  %95 = load i8*, i8** %94, align 8
  %96 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %97 = bitcast %struct.mz_zip_reader_extract_iter_state* %96 to i8*
  call void %92(i8* noundef %95, i8* noundef %97)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

98:                                               ; preds = %73
  %99 = load i32, i32* %23, align 4
  %100 = and i32 %99, 1024
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %133, label %102

102:                                              ; preds = %98
  %103 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %104 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %103, i32 0, i32 9
  %105 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %104, i32 0, i32 5
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %133

109:                                              ; preds = %102
  %110 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %111 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %110, i32 0, i32 9
  %112 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %111, i32 0, i32 5
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = icmp ne i32 %114, 8
  br i1 %115, label %116, label %133

116:                                              ; preds = %109
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %117, %struct.mz_zip_archive** %8, align 8
  store i32 4, i32* %9, align 4
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %119 = icmp ne %struct.mz_zip_archive* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, i32* %9, align 4
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %122, i32 0, i32 5
  store i32 %121, i32* %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  %125 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %126 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %125, i32 0, i32 8
  %127 = load void (i8*, i8*)*, void (i8*, i8*)** %126, align 8
  %128 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %129 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %128, i32 0, i32 10
  %130 = load i8*, i8** %129, align 8
  %131 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %132 = bitcast %struct.mz_zip_reader_extract_iter_state* %131 to i8*
  call void %127(i8* noundef %130, i8* noundef %132)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

133:                                              ; preds = %109, %102, %98
  %134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %135 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %136 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %135, i32 0, i32 0
  store %struct.mz_zip_archive* %134, %struct.mz_zip_archive** %136, align 8
  %137 = load i32, i32* %23, align 4
  %138 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %139 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %138, i32 0, i32 1
  store i32 %137, i32* %139, align 8
  %140 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %141 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %140, i32 0, i32 2
  store i32 0, i32* %141, align 4
  %142 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %143 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %142, i32 0, i32 14
  store i32 0, i32* %143, align 8
  %144 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %145 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %144, i32 0, i32 4
  store i64 0, i64* %145, align 8
  %146 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %147 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %146, i32 0, i32 7
  store i64 0, i64* %147, align 8
  %148 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %149 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %148, i32 0, i32 10
  store i8* null, i8** %149, align 8
  %150 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %151 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %150, i32 0, i32 11
  store i8* null, i8** %151, align 8
  %152 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %153 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %152, i32 0, i32 12
  store i64 0, i64* %153, align 8
  %154 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %155 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %154, i32 0, i32 9
  %156 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %155, i32 0, i32 11
  %157 = load i64, i64* %156, align 8
  %158 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %159 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %158, i32 0, i32 8
  store i64 %157, i64* %159, align 8
  %160 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %161 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %160, i32 0, i32 11
  %162 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %161, align 8
  %163 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %164 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %163, i32 0, i32 14
  %165 = load i8*, i8** %164, align 8
  %166 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %167 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %166, i32 0, i32 8
  %168 = load i64, i64* %167, align 8
  %169 = load i8*, i8** %26, align 8
  %170 = call i64 %162(i8* noundef %165, i64 noundef %168, i8* noundef %169, i64 noundef 30)
  %171 = icmp ne i64 %170, 30
  br i1 %171, label %172, label %189

172:                                              ; preds = %133
  %173 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %173, %struct.mz_zip_archive** %10, align 8
  store i32 20, i32* %11, align 4
  %174 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %175 = icmp ne %struct.mz_zip_archive* %174, null
  br i1 %175, label %176, label %180

176:                                              ; preds = %172
  %177 = load i32, i32* %11, align 4
  %178 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %179 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %178, i32 0, i32 5
  store i32 %177, i32* %179, align 4
  br label %180

180:                                              ; preds = %172, %176
  %181 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %182 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %181, i32 0, i32 8
  %183 = load void (i8*, i8*)*, void (i8*, i8*)** %182, align 8
  %184 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %185 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %184, i32 0, i32 10
  %186 = load i8*, i8** %185, align 8
  %187 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %188 = bitcast %struct.mz_zip_reader_extract_iter_state* %187 to i8*
  call void %183(i8* noundef %186, i8* noundef %188)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

189:                                              ; preds = %133
  %190 = load i8*, i8** %26, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 0
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = load i8*, i8** %26, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 1
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl i32 %197, 8
  %199 = or i32 %193, %198
  %200 = load i8*, i8** %26, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 2
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl i32 %203, 16
  %205 = or i32 %199, %204
  %206 = load i8*, i8** %26, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 3
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = shl i32 %209, 24
  %211 = or i32 %205, %210
  %212 = icmp ne i32 %211, 67324752
  br i1 %212, label %213, label %230

213:                                              ; preds = %189
  %214 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %214, %struct.mz_zip_archive** %12, align 8
  store i32 9, i32* %13, align 4
  %215 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %216 = icmp ne %struct.mz_zip_archive* %215, null
  br i1 %216, label %217, label %221

217:                                              ; preds = %213
  %218 = load i32, i32* %13, align 4
  %219 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %220 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %219, i32 0, i32 5
  store i32 %218, i32* %220, align 4
  br label %221

221:                                              ; preds = %213, %217
  %222 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %223 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %222, i32 0, i32 8
  %224 = load void (i8*, i8*)*, void (i8*, i8*)** %223, align 8
  %225 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %226 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %225, i32 0, i32 10
  %227 = load i8*, i8** %226, align 8
  %228 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %229 = bitcast %struct.mz_zip_reader_extract_iter_state* %228 to i8*
  call void %224(i8* noundef %227, i8* noundef %229)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

230:                                              ; preds = %189
  %231 = load i8*, i8** %26, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 26
  %233 = getelementptr inbounds i8, i8* %232, i64 0
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = load i8*, i8** %26, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 26
  %238 = getelementptr inbounds i8, i8* %237, i64 1
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = shl i32 %240, 8
  %242 = or i32 %235, %241
  %243 = add i32 30, %242
  %244 = load i8*, i8** %26, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 28
  %246 = getelementptr inbounds i8, i8* %245, i64 0
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = load i8*, i8** %26, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 28
  %251 = getelementptr inbounds i8, i8* %250, i64 1
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = shl i32 %253, 8
  %255 = or i32 %248, %254
  %256 = add i32 %243, %255
  %257 = zext i32 %256 to i64
  %258 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %259 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %258, i32 0, i32 8
  %260 = load i64, i64* %259, align 8
  %261 = add i64 %260, %257
  store i64 %261, i64* %259, align 8
  %262 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %263 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %262, i32 0, i32 8
  %264 = load i64, i64* %263, align 8
  %265 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %266 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %265, i32 0, i32 9
  %267 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %266, i32 0, i32 7
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %264, %268
  %270 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %271 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %270, i32 0, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = icmp ugt i64 %269, %272
  br i1 %273, label %274, label %291

274:                                              ; preds = %230
  %275 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %275, %struct.mz_zip_archive** %14, align 8
  store i32 9, i32* %15, align 4
  %276 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %277 = icmp ne %struct.mz_zip_archive* %276, null
  br i1 %277, label %278, label %282

278:                                              ; preds = %274
  %279 = load i32, i32* %15, align 4
  %280 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %281 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %280, i32 0, i32 5
  store i32 %279, i32* %281, align 4
  br label %282

282:                                              ; preds = %274, %278
  %283 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %284 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %283, i32 0, i32 8
  %285 = load void (i8*, i8*)*, void (i8*, i8*)** %284, align 8
  %286 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %287 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %286, i32 0, i32 10
  %288 = load i8*, i8** %287, align 8
  %289 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %290 = bitcast %struct.mz_zip_reader_extract_iter_state* %289 to i8*
  call void %285(i8* noundef %288, i8* noundef %290)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

291:                                              ; preds = %230
  %292 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %293 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %292, i32 0, i32 15
  %294 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %293, align 8
  %295 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %294, i32 0, i32 8
  %296 = load i8*, i8** %295, align 8
  %297 = icmp ne i8* %296, null
  br i1 %297, label %298, label %324

298:                                              ; preds = %291
  %299 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %300 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %299, i32 0, i32 15
  %301 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %300, align 8
  %302 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %301, i32 0, i32 8
  %303 = load i8*, i8** %302, align 8
  %304 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %305 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %304, i32 0, i32 8
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds i8, i8* %303, i64 %306
  %308 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %309 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %308, i32 0, i32 10
  store i8* %307, i8** %309, align 8
  %310 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %311 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %310, i32 0, i32 9
  %312 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %311, i32 0, i32 7
  %313 = load i64, i64* %312, align 8
  %314 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %315 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %314, i32 0, i32 5
  store i64 %313, i64* %315, align 8
  %316 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %317 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %316, i32 0, i32 3
  store i64 %313, i64* %317, align 8
  %318 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %319 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %318, i32 0, i32 9
  %320 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %319, i32 0, i32 7
  %321 = load i64, i64* %320, align 8
  %322 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %323 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %322, i32 0, i32 6
  store i64 %321, i64* %323, align 8
  br label %393

324:                                              ; preds = %291
  %325 = load i32, i32* %23, align 4
  %326 = and i32 %325, 1024
  %327 = icmp ne i32 %326, 0
  br i1 %327, label %381, label %328

328:                                              ; preds = %324
  %329 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %330 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %329, i32 0, i32 9
  %331 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %330, i32 0, i32 5
  %332 = load i16, i16* %331, align 2
  %333 = icmp ne i16 %332, 0
  br i1 %333, label %334, label %381

334:                                              ; preds = %328
  %335 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %336 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %335, i32 0, i32 9
  %337 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %336, i32 0, i32 7
  %338 = load i64, i64* %337, align 8
  %339 = icmp ult i64 %338, 65536
  br i1 %339, label %340, label %345

340:                                              ; preds = %334
  %341 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %342 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %341, i32 0, i32 9
  %343 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %342, i32 0, i32 7
  %344 = load i64, i64* %343, align 8
  br label %346

345:                                              ; preds = %334
  br label %346

346:                                              ; preds = %345, %340
  %347 = phi i64 [ %344, %340 ], [ 65536, %345 ]
  %348 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %349 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %348, i32 0, i32 3
  store i64 %347, i64* %349, align 8
  %350 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %351 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %350, i32 0, i32 7
  %352 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %351, align 8
  %353 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %354 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %353, i32 0, i32 10
  %355 = load i8*, i8** %354, align 8
  %356 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %357 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %356, i32 0, i32 3
  %358 = load i64, i64* %357, align 8
  %359 = call i8* %352(i8* noundef %355, i64 noundef 1, i64 noundef %358)
  %360 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %361 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %360, i32 0, i32 10
  store i8* %359, i8** %361, align 8
  %362 = icmp eq i8* null, %359
  br i1 %362, label %363, label %380

363:                                              ; preds = %346
  %364 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %364, %struct.mz_zip_archive** %16, align 8
  store i32 16, i32* %17, align 4
  %365 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %366 = icmp ne %struct.mz_zip_archive* %365, null
  br i1 %366, label %367, label %371

367:                                              ; preds = %363
  %368 = load i32, i32* %17, align 4
  %369 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %370 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %369, i32 0, i32 5
  store i32 %368, i32* %370, align 4
  br label %371

371:                                              ; preds = %363, %367
  %372 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %373 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %372, i32 0, i32 8
  %374 = load void (i8*, i8*)*, void (i8*, i8*)** %373, align 8
  %375 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %376 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %375, i32 0, i32 10
  %377 = load i8*, i8** %376, align 8
  %378 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %379 = bitcast %struct.mz_zip_reader_extract_iter_state* %378 to i8*
  call void %374(i8* noundef %377, i8* noundef %379)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

380:                                              ; preds = %346
  br label %384

381:                                              ; preds = %328, %324
  %382 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %383 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %382, i32 0, i32 3
  store i64 0, i64* %383, align 8
  br label %384

384:                                              ; preds = %381, %380
  %385 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %386 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %385, i32 0, i32 5
  store i64 0, i64* %386, align 8
  %387 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %388 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %387, i32 0, i32 9
  %389 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %388, i32 0, i32 7
  %390 = load i64, i64* %389, align 8
  %391 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %392 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %391, i32 0, i32 6
  store i64 %390, i64* %392, align 8
  br label %393

393:                                              ; preds = %384, %298
  %394 = load i32, i32* %23, align 4
  %395 = and i32 %394, 1024
  %396 = icmp ne i32 %395, 0
  br i1 %396, label %452, label %397

397:                                              ; preds = %393
  %398 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %399 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %398, i32 0, i32 9
  %400 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %399, i32 0, i32 5
  %401 = load i16, i16* %400, align 2
  %402 = icmp ne i16 %401, 0
  br i1 %402, label %403, label %452

403:                                              ; preds = %397
  br label %404

404:                                              ; preds = %403
  %405 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %406 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %405, i32 0, i32 13
  %407 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %406, i32 0, i32 0
  store i32 0, i32* %407, align 8
  br label %408

408:                                              ; preds = %404
  %409 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %410 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %409, i32 0, i32 7
  %411 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %410, align 8
  %412 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %413 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %412, i32 0, i32 10
  %414 = load i8*, i8** %413, align 8
  %415 = call i8* %411(i8* noundef %414, i64 noundef 1, i64 noundef 32768)
  %416 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %417 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %416, i32 0, i32 11
  store i8* %415, i8** %417, align 8
  %418 = icmp eq i8* null, %415
  br i1 %418, label %419, label %451

419:                                              ; preds = %408
  %420 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_archive* %420, %struct.mz_zip_archive** %18, align 8
  store i32 16, i32* %19, align 4
  %421 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %422 = icmp ne %struct.mz_zip_archive* %421, null
  br i1 %422, label %423, label %427

423:                                              ; preds = %419
  %424 = load i32, i32* %19, align 4
  %425 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %426 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %425, i32 0, i32 5
  store i32 %424, i32* %426, align 4
  br label %427

427:                                              ; preds = %419, %423
  %428 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %429 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %428, i32 0, i32 10
  %430 = load i8*, i8** %429, align 8
  %431 = icmp ne i8* %430, null
  br i1 %431, label %432, label %442

432:                                              ; preds = %427
  %433 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %434 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %433, i32 0, i32 8
  %435 = load void (i8*, i8*)*, void (i8*, i8*)** %434, align 8
  %436 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %437 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %436, i32 0, i32 10
  %438 = load i8*, i8** %437, align 8
  %439 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %440 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %439, i32 0, i32 10
  %441 = load i8*, i8** %440, align 8
  call void %435(i8* noundef %438, i8* noundef %441)
  br label %442

442:                                              ; preds = %432, %427
  %443 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %444 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %443, i32 0, i32 8
  %445 = load void (i8*, i8*)*, void (i8*, i8*)** %444, align 8
  %446 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %447 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %446, i32 0, i32 10
  %448 = load i8*, i8** %447, align 8
  %449 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  %450 = bitcast %struct.mz_zip_reader_extract_iter_state* %449 to i8*
  call void %445(i8* noundef %448, i8* noundef %450)
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

451:                                              ; preds = %408
  br label %452

452:                                              ; preds = %451, %397, %393
  %453 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %24, align 8
  store %struct.mz_zip_reader_extract_iter_state* %453, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  br label %454

454:                                              ; preds = %452, %442, %371, %282, %221, %180, %124, %89, %64, %56, %36
  %455 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %20, align 8
  ret %struct.mz_zip_reader_extract_iter_state* %455
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mz_zip_reader_extract_iter_state* @mz_zip_reader_extract_file_iter_new(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_reader_extract_iter_state*, align 8
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i32, i32* %7, align 4
  %12 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %9, i8* noundef %10, i8* noundef null, i32 noundef %11, i32* noundef %8)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  store %struct.mz_zip_reader_extract_iter_state* null, %struct.mz_zip_reader_extract_iter_state** %4, align 8
  br label %20

15:                                               ; preds = %3
  %16 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %17 = load i32, i32* %8, align 4
  %18 = load i32, i32* %7, align 4
  %19 = call %struct.mz_zip_reader_extract_iter_state* @mz_zip_reader_extract_iter_new(%struct.mz_zip_archive* noundef %16, i32 noundef %17, i32 noundef %18)
  store %struct.mz_zip_reader_extract_iter_state* %19, %struct.mz_zip_reader_extract_iter_state** %4, align 8
  br label %20

20:                                               ; preds = %15, %14
  %21 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %4, align 8
  ret %struct.mz_zip_reader_extract_iter_state* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_zip_reader_extract_iter_read(%struct.mz_zip_reader_extract_iter_state* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %struct.mz_zip_reader_extract_iter_state*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  store %struct.mz_zip_reader_extract_iter_state* %0, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  store i8* %1, i8** %12, align 8
  store i64 %2, i64* %13, align 8
  store i64 0, i64* %14, align 8
  %19 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %20 = icmp ne %struct.mz_zip_reader_extract_iter_state* %19, null
  br i1 %20, label %21, label %36

21:                                               ; preds = %3
  %22 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %23 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %22, i32 0, i32 0
  %24 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %23, align 8
  %25 = icmp ne %struct.mz_zip_archive* %24, null
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %28 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %27, i32 0, i32 0
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %29, i32 0, i32 15
  %31 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %32 = icmp ne %struct.mz_zip_internal_state_tag* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = load i8*, i8** %12, align 8
  %35 = icmp ne i8* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %33, %26, %21, %3
  store i64 0, i64* %10, align 8
  br label %388

37:                                               ; preds = %33
  %38 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %39 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 1024
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %37
  %44 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %45 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %44, i32 0, i32 9
  %46 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %45, i32 0, i32 5
  %47 = load i16, i16* %46, align 2
  %48 = icmp ne i16 %47, 0
  br i1 %48, label %150, label %49

49:                                               ; preds = %43, %37
  %50 = load i64, i64* %13, align 8
  %51 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %52 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %51, i32 0, i32 6
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = load i64, i64* %13, align 8
  br label %61

57:                                               ; preds = %49
  %58 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %59 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %58, i32 0, i32 6
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %57, %55
  %62 = phi i64 [ %56, %55 ], [ %60, %57 ]
  store i64 %62, i64* %14, align 8
  %63 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %64 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %63, i32 0, i32 0
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %65, i32 0, i32 15
  %67 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %66, align 8
  %68 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %67, i32 0, i32 8
  %69 = load i8*, i8** %68, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i8*, i8** %12, align 8
  %73 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %74 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %73, i32 0, i32 10
  %75 = load i8*, i8** %74, align 8
  %76 = load i64, i64* %14, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %75, i64 %76, i1 false)
  %77 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %78 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %77, i32 0, i32 10
  %79 = load i8*, i8** %78, align 8
  %80 = load i64, i64* %14, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %83 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %82, i32 0, i32 10
  store i8* %81, i8** %83, align 8
  br label %117

84:                                               ; preds = %61
  %85 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %86 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %85, i32 0, i32 0
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %86, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %87, i32 0, i32 11
  %89 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %88, align 8
  %90 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %91 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %90, i32 0, i32 0
  %92 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %93 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %92, i32 0, i32 14
  %94 = load i8*, i8** %93, align 8
  %95 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %96 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %95, i32 0, i32 8
  %97 = load i64, i64* %96, align 8
  %98 = load i8*, i8** %12, align 8
  %99 = load i64, i64* %14, align 8
  %100 = call i64 %89(i8* noundef %94, i64 noundef %97, i8* noundef %98, i64 noundef %99)
  %101 = load i64, i64* %14, align 8
  %102 = icmp ne i64 %100, %101
  br i1 %102, label %103, label %116

103:                                              ; preds = %84
  %104 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %105 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %104, i32 0, i32 0
  %106 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %105, align 8
  store %struct.mz_zip_archive* %106, %struct.mz_zip_archive** %4, align 8
  store i32 20, i32* %5, align 4
  %107 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %108 = icmp ne %struct.mz_zip_archive* %107, null
  br i1 %108, label %109, label %113

109:                                              ; preds = %103
  %110 = load i32, i32* %5, align 4
  %111 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %112 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %111, i32 0, i32 5
  store i32 %110, i32* %112, align 4
  br label %113

113:                                              ; preds = %103, %109
  %114 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %115 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %114, i32 0, i32 2
  store i32 -1, i32* %115, align 4
  store i64 0, i64* %14, align 8
  br label %116

116:                                              ; preds = %113, %84
  br label %117

117:                                              ; preds = %116, %71
  %118 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %119 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 1024
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %134, label %123

123:                                              ; preds = %117
  %124 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %125 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %124, i32 0, i32 14
  %126 = load i32, i32* %125, align 8
  %127 = zext i32 %126 to i64
  %128 = load i8*, i8** %12, align 8
  %129 = load i64, i64* %14, align 8
  %130 = call i64 @mz_crc32(i64 noundef %127, i8* noundef %128, i64 noundef %129)
  %131 = trunc i64 %130 to i32
  %132 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %133 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %132, i32 0, i32 14
  store i32 %131, i32* %133, align 8
  br label %134

134:                                              ; preds = %123, %117
  %135 = load i64, i64* %14, align 8
  %136 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %137 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %136, i32 0, i32 8
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, %135
  store i64 %139, i64* %137, align 8
  %140 = load i64, i64* %14, align 8
  %141 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %142 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %141, i32 0, i32 7
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, %140
  store i64 %144, i64* %142, align 8
  %145 = load i64, i64* %14, align 8
  %146 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %147 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %146, i32 0, i32 6
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %148, %145
  store i64 %149, i64* %147, align 8
  br label %386

150:                                              ; preds = %43
  br label %151

151:                                              ; preds = %383, %150
  %152 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %153 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %152, i32 0, i32 11
  %154 = load i8*, i8** %153, align 8
  %155 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %156 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %155, i32 0, i32 7
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 32767
  %159 = getelementptr inbounds i8, i8* %154, i64 %158
  store i8* %159, i8** %15, align 8
  %160 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %161 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %160, i32 0, i32 7
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 32767
  %164 = sub i64 32768, %163
  store i64 %164, i64* %17, align 8
  %165 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %166 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %165, i32 0, i32 12
  %167 = load i64, i64* %166, align 8
  %168 = icmp ne i64 %167, 0
  br i1 %168, label %296, label %169

169:                                              ; preds = %151
  %170 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %171 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %170, i32 0, i32 5
  %172 = load i64, i64* %171, align 8
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %257, label %174

174:                                              ; preds = %169
  %175 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %176 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %175, i32 0, i32 0
  %177 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %176, align 8
  %178 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %177, i32 0, i32 15
  %179 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %178, align 8
  %180 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %179, i32 0, i32 8
  %181 = load i8*, i8** %180, align 8
  %182 = icmp ne i8* %181, null
  br i1 %182, label %257, label %183

183:                                              ; preds = %174
  %184 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %185 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %184, i32 0, i32 3
  %186 = load i64, i64* %185, align 8
  %187 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %188 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %187, i32 0, i32 6
  %189 = load i64, i64* %188, align 8
  %190 = icmp ult i64 %186, %189
  br i1 %190, label %191, label %195

191:                                              ; preds = %183
  %192 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %193 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %192, i32 0, i32 3
  %194 = load i64, i64* %193, align 8
  br label %199

195:                                              ; preds = %183
  %196 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %197 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %196, i32 0, i32 6
  %198 = load i64, i64* %197, align 8
  br label %199

199:                                              ; preds = %195, %191
  %200 = phi i64 [ %194, %191 ], [ %198, %195 ]
  %201 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %202 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %201, i32 0, i32 5
  store i64 %200, i64* %202, align 8
  %203 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %204 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %203, i32 0, i32 0
  %205 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %204, align 8
  %206 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %205, i32 0, i32 11
  %207 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %206, align 8
  %208 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %209 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %208, i32 0, i32 0
  %210 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %209, align 8
  %211 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %210, i32 0, i32 14
  %212 = load i8*, i8** %211, align 8
  %213 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %214 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %213, i32 0, i32 8
  %215 = load i64, i64* %214, align 8
  %216 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %217 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %216, i32 0, i32 10
  %218 = load i8*, i8** %217, align 8
  %219 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %220 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %219, i32 0, i32 5
  %221 = load i64, i64* %220, align 8
  %222 = call i64 %207(i8* noundef %212, i64 noundef %215, i8* noundef %218, i64 noundef %221)
  %223 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %224 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %223, i32 0, i32 5
  %225 = load i64, i64* %224, align 8
  %226 = icmp ne i64 %222, %225
  br i1 %226, label %227, label %240

227:                                              ; preds = %199
  %228 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %229 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %228, i32 0, i32 0
  %230 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %229, align 8
  store %struct.mz_zip_archive* %230, %struct.mz_zip_archive** %6, align 8
  store i32 20, i32* %7, align 4
  %231 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %232 = icmp ne %struct.mz_zip_archive* %231, null
  br i1 %232, label %233, label %237

233:                                              ; preds = %227
  %234 = load i32, i32* %7, align 4
  %235 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %236 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %235, i32 0, i32 5
  store i32 %234, i32* %236, align 4
  br label %237

237:                                              ; preds = %227, %233
  %238 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %239 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %238, i32 0, i32 2
  store i32 -1, i32* %239, align 4
  br label %385

240:                                              ; preds = %199
  %241 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %242 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %241, i32 0, i32 5
  %243 = load i64, i64* %242, align 8
  %244 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %245 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %244, i32 0, i32 8
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, %243
  store i64 %247, i64* %245, align 8
  %248 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %249 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %248, i32 0, i32 5
  %250 = load i64, i64* %249, align 8
  %251 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %252 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %251, i32 0, i32 6
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %253, %250
  store i64 %254, i64* %252, align 8
  %255 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %256 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %255, i32 0, i32 4
  store i64 0, i64* %256, align 8
  br label %257

257:                                              ; preds = %240, %174, %169
  %258 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %259 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %258, i32 0, i32 5
  %260 = load i64, i64* %259, align 8
  store i64 %260, i64* %16, align 8
  %261 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %262 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %261, i32 0, i32 13
  %263 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %264 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %263, i32 0, i32 10
  %265 = load i8*, i8** %264, align 8
  %266 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %267 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %266, i32 0, i32 4
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds i8, i8* %265, i64 %268
  %270 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %271 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %270, i32 0, i32 11
  %272 = load i8*, i8** %271, align 8
  %273 = load i8*, i8** %15, align 8
  %274 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %275 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %274, i32 0, i32 6
  %276 = load i64, i64* %275, align 8
  %277 = icmp ne i64 %276, 0
  %278 = zext i1 %277 to i64
  %279 = select i1 %277, i32 2, i32 0
  %280 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* noundef %262, i8* noundef %269, i64* noundef %16, i8* noundef %272, i8* noundef %273, i64* noundef %17, i32 noundef %279)
  %281 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %282 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %281, i32 0, i32 2
  store i32 %280, i32* %282, align 4
  %283 = load i64, i64* %16, align 8
  %284 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %285 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %284, i32 0, i32 5
  %286 = load i64, i64* %285, align 8
  %287 = sub i64 %286, %283
  store i64 %287, i64* %285, align 8
  %288 = load i64, i64* %16, align 8
  %289 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %290 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %289, i32 0, i32 4
  %291 = load i64, i64* %290, align 8
  %292 = add i64 %291, %288
  store i64 %292, i64* %290, align 8
  %293 = load i64, i64* %17, align 8
  %294 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %295 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %294, i32 0, i32 12
  store i64 %293, i64* %295, align 8
  br label %296

296:                                              ; preds = %257, %151
  %297 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %298 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %297, i32 0, i32 12
  %299 = load i64, i64* %298, align 8
  %300 = icmp ne i64 %299, 0
  br i1 %300, label %301, label %366

301:                                              ; preds = %296
  %302 = load i64, i64* %13, align 8
  %303 = load i64, i64* %14, align 8
  %304 = sub i64 %302, %303
  %305 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %306 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %305, i32 0, i32 12
  %307 = load i64, i64* %306, align 8
  %308 = icmp ult i64 %304, %307
  br i1 %308, label %309, label %313

309:                                              ; preds = %301
  %310 = load i64, i64* %13, align 8
  %311 = load i64, i64* %14, align 8
  %312 = sub i64 %310, %311
  br label %317

313:                                              ; preds = %301
  %314 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %315 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %314, i32 0, i32 12
  %316 = load i64, i64* %315, align 8
  br label %317

317:                                              ; preds = %313, %309
  %318 = phi i64 [ %312, %309 ], [ %316, %313 ]
  store i64 %318, i64* %18, align 8
  %319 = load i8*, i8** %12, align 8
  %320 = load i64, i64* %14, align 8
  %321 = getelementptr inbounds i8, i8* %319, i64 %320
  %322 = load i8*, i8** %15, align 8
  %323 = load i64, i64* %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %321, i8* align 1 %322, i64 %323, i1 false)
  %324 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %325 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %324, i32 0, i32 14
  %326 = load i32, i32* %325, align 8
  %327 = zext i32 %326 to i64
  %328 = load i8*, i8** %15, align 8
  %329 = load i64, i64* %18, align 8
  %330 = call i64 @mz_crc32(i64 noundef %327, i8* noundef %328, i64 noundef %329)
  %331 = trunc i64 %330 to i32
  %332 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %333 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %332, i32 0, i32 14
  store i32 %331, i32* %333, align 8
  %334 = load i64, i64* %18, align 8
  %335 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %336 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %335, i32 0, i32 12
  %337 = load i64, i64* %336, align 8
  %338 = sub i64 %337, %334
  store i64 %338, i64* %336, align 8
  %339 = load i64, i64* %18, align 8
  %340 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %341 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %340, i32 0, i32 7
  %342 = load i64, i64* %341, align 8
  %343 = add i64 %342, %339
  store i64 %343, i64* %341, align 8
  %344 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %345 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %344, i32 0, i32 9
  %346 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %345, i32 0, i32 8
  %347 = load i64, i64* %346, align 8
  %348 = icmp ugt i64 %343, %347
  br i1 %348, label %349, label %362

349:                                              ; preds = %317
  %350 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %351 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %350, i32 0, i32 0
  %352 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %351, align 8
  store %struct.mz_zip_archive* %352, %struct.mz_zip_archive** %8, align 8
  store i32 11, i32* %9, align 4
  %353 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %354 = icmp ne %struct.mz_zip_archive* %353, null
  br i1 %354, label %355, label %359

355:                                              ; preds = %349
  %356 = load i32, i32* %9, align 4
  %357 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %358 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %357, i32 0, i32 5
  store i32 %356, i32* %358, align 4
  br label %359

359:                                              ; preds = %349, %355
  %360 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %361 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %360, i32 0, i32 2
  store i32 -1, i32* %361, align 4
  br label %385

362:                                              ; preds = %317
  %363 = load i64, i64* %18, align 8
  %364 = load i64, i64* %14, align 8
  %365 = add i64 %364, %363
  store i64 %365, i64* %14, align 8
  br label %366

366:                                              ; preds = %362, %296
  br label %367

367:                                              ; preds = %366
  %368 = load i64, i64* %14, align 8
  %369 = load i64, i64* %13, align 8
  %370 = icmp ult i64 %368, %369
  br i1 %370, label %371, label %383

371:                                              ; preds = %367
  %372 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %373 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %372, i32 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, 1
  br i1 %375, label %381, label %376

376:                                              ; preds = %371
  %377 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %11, align 8
  %378 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %377, i32 0, i32 2
  %379 = load i32, i32* %378, align 4
  %380 = icmp eq i32 %379, 2
  br label %381

381:                                              ; preds = %376, %371
  %382 = phi i1 [ true, %371 ], [ %380, %376 ]
  br label %383

383:                                              ; preds = %381, %367
  %384 = phi i1 [ false, %367 ], [ %382, %381 ]
  br i1 %384, label %151, label %385, !llvm.loop !119

385:                                              ; preds = %383, %359, %237
  br label %386

386:                                              ; preds = %385, %134
  %387 = load i64, i64* %14, align 8
  store i64 %387, i64* %10, align 8
  br label %388

388:                                              ; preds = %386, %36
  %389 = load i64, i64* %10, align 8
  ret i64 %389
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_iter_free(%struct.mz_zip_reader_extract_iter_state* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_reader_extract_iter_state*, align 8
  %8 = alloca i32, align 4
  store %struct.mz_zip_reader_extract_iter_state* %0, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %9 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %10 = icmp ne %struct.mz_zip_reader_extract_iter_state* %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %1
  %12 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %13 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %12, i32 0, i32 0
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %15 = icmp ne %struct.mz_zip_archive* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %18 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %17, i32 0, i32 0
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %19, i32 0, i32 15
  %21 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %20, align 8
  %22 = icmp ne %struct.mz_zip_internal_state_tag* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %16, %11, %1
  store i32 0, i32* %6, align 4
  br label %142

24:                                               ; preds = %16
  %25 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %26 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %25, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %81

29:                                               ; preds = %24
  %30 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %31 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 1024
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %81, label %35

35:                                               ; preds = %29
  %36 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %37 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %36, i32 0, i32 7
  %38 = load i64, i64* %37, align 8
  %39 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %40 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %40, i32 0, i32 8
  %42 = load i64, i64* %41, align 8
  %43 = icmp ne i64 %38, %42
  br i1 %43, label %44, label %57

44:                                               ; preds = %35
  %45 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %46 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %45, i32 0, i32 0
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  store %struct.mz_zip_archive* %47, %struct.mz_zip_archive** %2, align 8
  store i32 13, i32* %3, align 4
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %49 = icmp ne %struct.mz_zip_archive* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %44
  %51 = load i32, i32* %3, align 4
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %52, i32 0, i32 5
  store i32 %51, i32* %53, align 4
  br label %54

54:                                               ; preds = %44, %50
  %55 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %56 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %55, i32 0, i32 2
  store i32 -1, i32* %56, align 4
  br label %80

57:                                               ; preds = %35
  %58 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %59 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %58, i32 0, i32 14
  %60 = load i32, i32* %59, align 8
  %61 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %62 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %61, i32 0, i32 9
  %63 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 6
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %60, %64
  br i1 %65, label %66, label %79

66:                                               ; preds = %57
  %67 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %68 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %67, i32 0, i32 0
  %69 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  store %struct.mz_zip_archive* %69, %struct.mz_zip_archive** %4, align 8
  store i32 11, i32* %5, align 4
  %70 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %71 = icmp ne %struct.mz_zip_archive* %70, null
  br i1 %71, label %72, label %76

72:                                               ; preds = %66
  %73 = load i32, i32* %5, align 4
  %74 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %74, i32 0, i32 5
  store i32 %73, i32* %75, align 4
  br label %76

76:                                               ; preds = %66, %72
  %77 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %78 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %77, i32 0, i32 2
  store i32 -1, i32* %78, align 4
  br label %79

79:                                               ; preds = %76, %57
  br label %80

80:                                               ; preds = %79, %54
  br label %81

81:                                               ; preds = %80, %29, %24
  %82 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %83 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %82, i32 0, i32 0
  %84 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %83, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %84, i32 0, i32 15
  %86 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %85, align 8
  %87 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %86, i32 0, i32 8
  %88 = load i8*, i8** %87, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %104, label %90

90:                                               ; preds = %81
  %91 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %92 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %91, i32 0, i32 0
  %93 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %92, align 8
  %94 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %93, i32 0, i32 8
  %95 = load void (i8*, i8*)*, void (i8*, i8*)** %94, align 8
  %96 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %97 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %96, i32 0, i32 0
  %98 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %97, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %98, i32 0, i32 10
  %100 = load i8*, i8** %99, align 8
  %101 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %102 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %101, i32 0, i32 10
  %103 = load i8*, i8** %102, align 8
  call void %95(i8* noundef %100, i8* noundef %103)
  br label %104

104:                                              ; preds = %90, %81
  %105 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %106 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %105, i32 0, i32 11
  %107 = load i8*, i8** %106, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %109, label %123

109:                                              ; preds = %104
  %110 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %111 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %110, i32 0, i32 0
  %112 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %111, align 8
  %113 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %112, i32 0, i32 8
  %114 = load void (i8*, i8*)*, void (i8*, i8*)** %113, align 8
  %115 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %116 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %115, i32 0, i32 0
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %116, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %117, i32 0, i32 10
  %119 = load i8*, i8** %118, align 8
  %120 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %121 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %120, i32 0, i32 11
  %122 = load i8*, i8** %121, align 8
  call void %114(i8* noundef %119, i8* noundef %122)
  br label %123

123:                                              ; preds = %109, %104
  %124 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %125 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %124, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %8, align 4
  %127 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %128 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %127, i32 0, i32 0
  %129 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %128, align 8
  %130 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %129, i32 0, i32 8
  %131 = load void (i8*, i8*)*, void (i8*, i8*)** %130, align 8
  %132 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %133 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, %struct.mz_zip_reader_extract_iter_state* %132, i32 0, i32 0
  %134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %133, align 8
  %135 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %134, i32 0, i32 10
  %136 = load i8*, i8** %135, align 8
  %137 = load %struct.mz_zip_reader_extract_iter_state*, %struct.mz_zip_reader_extract_iter_state** %7, align 8
  %138 = bitcast %struct.mz_zip_reader_extract_iter_state* %137 to i8*
  call void %131(i8* noundef %136, i8* noundef %138)
  %139 = load i32, i32* %8, align 4
  %140 = icmp eq i32 %139, 0
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %6, align 4
  br label %142

142:                                              ; preds = %123, %23
  %143 = load i32, i32* %6, align 4
  ret i32 %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_to_file(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive_file_stat, align 8
  %18 = alloca %struct._IO_FILE*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %12, align 8
  store i32 %1, i32* %13, align 4
  store i8* %2, i8** %14, align 8
  store i32 %3, i32* %15, align 4
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %20 = load i32, i32* %13, align 4
  %21 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %19, i32 noundef %20, %struct.mz_zip_archive_file_stat* noundef %17)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %4
  store i32 0, i32* %11, align 4
  br label %90

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %17, i32 0, i32 13
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %17, i32 0, i32 15
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %28, %24
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %33, %struct.mz_zip_archive** %5, align 8
  store i32 6, i32* %6, align 4
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %35 = icmp ne %struct.mz_zip_archive* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = load i32, i32* %6, align 4
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %38, i32 0, i32 5
  store i32 %37, i32* %39, align 4
  br label %40

40:                                               ; preds = %32, %36
  store i32 0, i32* %11, align 4
  br label %90

41:                                               ; preds = %28
  %42 = load i8*, i8** %14, align 8
  %43 = call noalias %struct._IO_FILE* @fopen(i8* noundef %42, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0))
  store %struct._IO_FILE* %43, %struct._IO_FILE** %18, align 8
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %45 = icmp ne %struct._IO_FILE* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %41
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %47, %struct.mz_zip_archive** %7, align 8
  store i32 17, i32* %8, align 4
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %49 = icmp ne %struct.mz_zip_archive* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load i32, i32* %8, align 4
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %52, i32 0, i32 5
  store i32 %51, i32* %53, align 4
  br label %54

54:                                               ; preds = %46, %50
  store i32 0, i32* %11, align 4
  br label %90

55:                                               ; preds = %41
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %57 = load i32, i32* %13, align 4
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %59 = bitcast %struct._IO_FILE* %58 to i8*
  %60 = load i32, i32* %15, align 4
  %61 = call i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive* noundef %56, i32 noundef %57, i64 (i8*, i64, i8*, i64)* noundef @mz_zip_file_write_callback, i8* noundef %59, i32 noundef %60)
  store i32 %61, i32* %16, align 4
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %63 = call i32 @fclose(%struct._IO_FILE* noundef %62)
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %16, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %77

68:                                               ; preds = %65
  %69 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %69, %struct.mz_zip_archive** %9, align 8
  store i32 21, i32* %10, align 4
  %70 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %71 = icmp ne %struct.mz_zip_archive* %70, null
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = load i32, i32* %10, align 4
  %74 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %74, i32 0, i32 5
  store i32 %73, i32* %75, align 4
  br label %76

76:                                               ; preds = %68, %72
  br label %77

77:                                               ; preds = %76, %65
  store i32 0, i32* %16, align 4
  br label %78

78:                                               ; preds = %77, %55
  %79 = load i32, i32* %16, align 4
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %78
  %82 = load i8*, i8** %14, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %17, i32 0, i32 18
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %17, i32 0, i32 18
  %86 = load i64, i64* %85, align 8
  %87 = call i32 @mz_zip_set_file_times(i8* noundef %82, i64 noundef %84, i64 noundef %86)
  br label %88

88:                                               ; preds = %81, %78
  %89 = load i32, i32* %16, align 4
  store i32 %89, i32* %11, align 4
  br label %90

90:                                               ; preds = %88, %54, %40, %23
  %91 = load i32, i32* %11, align 4
  ret i32 %91
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_file_write_callback(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i64, i64* %6, align 8
  %10 = load i8*, i8** %7, align 8
  %11 = load i64, i64* %8, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = bitcast i8* %12 to %struct._IO_FILE*
  %14 = call i64 @fwrite(i8* noundef %10, i64 noundef 1, i64 noundef %11, %struct._IO_FILE* noundef %13)
  ret i64 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_set_file_times(i8* noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.utimbuf, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = bitcast %struct.utimbuf* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %5, align 8
  %10 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %7, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* %6, align 8
  %12 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %7, i32 0, i32 1
  store i64 %11, i64* %12, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = call i32 @utime(i8* noundef %13, %struct.utimbuf* noundef %7) #7
  %15 = icmp ne i32 %14, 0
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i32
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_file(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i32, i32* %9, align 4
  %14 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %11, i8* noundef %12, i8* noundef null, i32 noundef %13, i32* noundef %10)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  br label %23

17:                                               ; preds = %4
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %19 = load i32, i32* %10, align 4
  %20 = load i8*, i8** %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = call i32 @mz_zip_reader_extract_to_file(%struct.mz_zip_archive* noundef %18, i32 noundef %19, i8* noundef %20, i32 noundef %21)
  store i32 %22, i32* %5, align 4
  br label %23

23:                                               ; preds = %17, %16
  %24 = load i32, i32* %5, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_to_cfile(%struct.mz_zip_archive* noundef %0, i32 noundef %1, %struct._IO_FILE* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_file_stat, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %8, align 8
  store i32 %1, i32* %9, align 4
  store %struct._IO_FILE* %2, %struct._IO_FILE** %10, align 8
  store i32 %3, i32* %11, align 4
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %13, i32 noundef %14, %struct.mz_zip_archive_file_stat* noundef %12)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %7, align 4
  br label %42

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %12, i32 0, i32 13
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %12, i32 0, i32 15
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %22, %18
  %27 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  store %struct.mz_zip_archive* %27, %struct.mz_zip_archive** %5, align 8
  store i32 6, i32* %6, align 4
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %29 = icmp ne %struct.mz_zip_archive* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = load i32, i32* %6, align 4
  %32 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %32, i32 0, i32 5
  store i32 %31, i32* %33, align 4
  br label %34

34:                                               ; preds = %26, %30
  store i32 0, i32* %7, align 4
  br label %42

35:                                               ; preds = %22
  %36 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %37 = load i32, i32* %9, align 4
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %39 = bitcast %struct._IO_FILE* %38 to i8*
  %40 = load i32, i32* %11, align 4
  %41 = call i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive* noundef %36, i32 noundef %37, i64 (i8*, i64, i8*, i64)* noundef @mz_zip_file_write_callback, i8* noundef %39, i32 noundef %40)
  store i32 %41, i32* %7, align 4
  br label %42

42:                                               ; preds = %35, %34, %17
  %43 = load i32, i32* %7, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_cfile(%struct.mz_zip_archive* noundef %0, i8* noundef %1, %struct._IO_FILE* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i8* %1, i8** %7, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i32, i32* %9, align 4
  %14 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %11, i8* noundef %12, i8* noundef null, i32 noundef %13, i32* noundef %10)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  br label %23

17:                                               ; preds = %4
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %19 = load i32, i32* %10, align 4
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = call i32 @mz_zip_reader_extract_to_cfile(%struct.mz_zip_archive* noundef %18, i32 noundef %19, %struct._IO_FILE* noundef %20, i32 noundef %21)
  store i32 %22, i32* %5, align 4
  br label %23

23:                                               ; preds = %17, %16
  %24 = load i32, i32* %5, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_validate_file(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca %struct.mz_zip_array*, align 8
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca %struct.mz_zip_array*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca %struct.mz_zip_array*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.mz_zip_array*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.mz_zip_archive*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct.mz_zip_archive*, align 8
  %27 = alloca i32, align 4
  %28 = alloca %struct.mz_zip_archive*, align 8
  %29 = alloca i32, align 4
  %30 = alloca %struct.mz_zip_archive*, align 8
  %31 = alloca i32, align 4
  %32 = alloca %struct.mz_zip_archive*, align 8
  %33 = alloca i32, align 4
  %34 = alloca %struct.mz_zip_archive*, align 8
  %35 = alloca i32, align 4
  %36 = alloca %struct.mz_zip_archive*, align 8
  %37 = alloca i32, align 4
  %38 = alloca %struct.mz_zip_archive*, align 8
  %39 = alloca i32, align 4
  %40 = alloca %struct.mz_zip_archive*, align 8
  %41 = alloca i32, align 4
  %42 = alloca %struct.mz_zip_archive*, align 8
  %43 = alloca i32, align 4
  %44 = alloca %struct.mz_zip_archive*, align 8
  %45 = alloca i32, align 4
  %46 = alloca %struct.mz_zip_archive*, align 8
  %47 = alloca i32, align 4
  %48 = alloca %struct.mz_zip_archive*, align 8
  %49 = alloca i32, align 4
  %50 = alloca %struct.mz_zip_archive*, align 8
  %51 = alloca i32, align 4
  %52 = alloca %struct.mz_zip_archive*, align 8
  %53 = alloca i32, align 4
  %54 = alloca %struct.mz_zip_archive*, align 8
  %55 = alloca i32, align 4
  %56 = alloca %struct.mz_zip_archive*, align 8
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca %struct.mz_zip_archive*, align 8
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca %struct.mz_zip_archive_file_stat, align 8
  %63 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %64 = alloca i8*, align 8
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca [8 x i32], align 16
  %68 = alloca i8*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i64, align 8
  %74 = alloca i64, align 8
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca %struct.mz_zip_array, align 8
  %79 = alloca i32, align 4
  %80 = alloca i8*, align 8
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  %84 = alloca i8*, align 8
  %85 = alloca [32 x i8], align 16
  %86 = alloca i32, align 4
  %87 = alloca i8*, align 8
  %88 = alloca i32, align 4
  %89 = alloca i64, align 8
  %90 = alloca i64, align 8
  %91 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %59, align 8
  store i32 %1, i32* %60, align 4
  store i32 %2, i32* %61, align 4
  store i32 0, i32* %65, align 4
  store i32 0, i32* %66, align 4
  %92 = getelementptr inbounds [8 x i32], [8 x i32]* %67, i64 0, i64 0
  %93 = bitcast i32* %92 to i8*
  store i8* %93, i8** %68, align 8
  store i64 0, i64* %69, align 8
  store i32 0, i32* %75, align 4
  store %struct.mz_zip_array* %78, %struct.mz_zip_array** %13, align 8
  store i32 1, i32* %14, align 4
  %94 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %95 = bitcast %struct.mz_zip_array* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 32, i1 false) #7
  %96 = load i32, i32* %14, align 4
  %97 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %98 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %97, i32 0, i32 3
  store i32 %96, i32* %98, align 8
  %99 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %100 = icmp ne %struct.mz_zip_archive* %99, null
  br i1 %100, label %101, label %121

101:                                              ; preds = %3
  %102 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %103 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %102, i32 0, i32 15
  %104 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %103, align 8
  %105 = icmp ne %struct.mz_zip_internal_state_tag* %104, null
  br i1 %105, label %106, label %121

106:                                              ; preds = %101
  %107 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %108 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %107, i32 0, i32 7
  %109 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %108, align 8
  %110 = icmp ne i8* (i8*, i64, i64)* %109, null
  br i1 %110, label %111, label %121

111:                                              ; preds = %106
  %112 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %113 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %112, i32 0, i32 8
  %114 = load void (i8*, i8*)*, void (i8*, i8*)** %113, align 8
  %115 = icmp ne void (i8*, i8*)* %114, null
  br i1 %115, label %116, label %121

116:                                              ; preds = %111
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %117, i32 0, i32 11
  %119 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %118, align 8
  %120 = icmp ne i64 (i8*, i64, i8*, i64)* %119, null
  br i1 %120, label %130, label %121

121:                                              ; preds = %116, %111, %106, %101, %3
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %122, %struct.mz_zip_archive** %18, align 8
  store i32 24, i32* %19, align 4
  %123 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %124 = icmp ne %struct.mz_zip_archive* %123, null
  br i1 %124, label %125, label %129

125:                                              ; preds = %121
  %126 = load i32, i32* %19, align 4
  %127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %127, i32 0, i32 5
  store i32 %126, i32* %128, align 4
  br label %129

129:                                              ; preds = %121, %125
  store i32 0, i32* %58, align 4
  br label %1199

130:                                              ; preds = %116
  %131 = load i32, i32* %60, align 4
  %132 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %133 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %132, i32 0, i32 2
  %134 = load i32, i32* %133, align 8
  %135 = icmp ugt i32 %131, %134
  br i1 %135, label %136, label %145

136:                                              ; preds = %130
  %137 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %137, %struct.mz_zip_archive** %20, align 8
  store i32 24, i32* %21, align 4
  %138 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %139 = icmp ne %struct.mz_zip_archive* %138, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %136
  %141 = load i32, i32* %21, align 4
  %142 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %143 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %142, i32 0, i32 5
  store i32 %141, i32* %143, align 4
  br label %144

144:                                              ; preds = %136, %140
  store i32 0, i32* %58, align 4
  br label %1199

145:                                              ; preds = %130
  %146 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %147 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %146, i32 0, i32 15
  %148 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %147, align 8
  store %struct.mz_zip_internal_state_tag* %148, %struct.mz_zip_internal_state_tag** %63, align 8
  %149 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %150 = load i32, i32* %60, align 4
  store %struct.mz_zip_archive* %149, %struct.mz_zip_archive** %16, align 8
  store i32 %150, i32* %17, align 4
  %151 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %152 = icmp ne %struct.mz_zip_archive* %151, null
  br i1 %152, label %153, label %164

153:                                              ; preds = %145
  %154 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %155 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %154, i32 0, i32 15
  %156 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %155, align 8
  %157 = icmp ne %struct.mz_zip_internal_state_tag* %156, null
  br i1 %157, label %158, label %164

158:                                              ; preds = %153
  %159 = load i32, i32* %17, align 4
  %160 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %161 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %160, i32 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = icmp uge i32 %159, %162
  br i1 %163, label %164, label %165

164:                                              ; preds = %158, %153, %145
  store i8* null, i8** %15, align 8
  br label %185

165:                                              ; preds = %158
  %166 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %166, i32 0, i32 15
  %168 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %167, align 8
  %169 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %168, i32 0, i32 0
  %170 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %169, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %173 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %172, i32 0, i32 15
  %174 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %173, align 8
  %175 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %174, i32 0, i32 1
  %176 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %175, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = bitcast i8* %177 to i32*
  %179 = load i32, i32* %17, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %178, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %171, i64 %183
  store i8* %184, i8** %15, align 8
  br label %185

185:                                              ; preds = %164, %165
  %186 = load i8*, i8** %15, align 8
  store i8* %186, i8** %64, align 8
  %187 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %188 = load i32, i32* %60, align 4
  %189 = load i8*, i8** %64, align 8
  %190 = call i32 @mz_zip_file_stat_internal(%struct.mz_zip_archive* noundef %187, i32 noundef %188, i8* noundef %189, %struct.mz_zip_archive_file_stat* noundef %62, i32* noundef %65)
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %193, label %192

192:                                              ; preds = %185
  store i32 0, i32* %58, align 4
  br label %1199

193:                                              ; preds = %185
  %194 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 13
  %195 = load i32, i32* %194, align 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 8
  %199 = load i64, i64* %198, align 8
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %197, %193
  store i32 1, i32* %58, align 4
  br label %1199

202:                                              ; preds = %197
  %203 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 14
  %204 = load i32, i32* %203, align 8
  %205 = icmp ne i32 %204, 0
  br i1 %205, label %206, label %215

206:                                              ; preds = %202
  %207 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %207, %struct.mz_zip_archive** %22, align 8
  store i32 5, i32* %23, align 4
  %208 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %209 = icmp ne %struct.mz_zip_archive* %208, null
  br i1 %209, label %210, label %214

210:                                              ; preds = %206
  %211 = load i32, i32* %23, align 4
  %212 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %213 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %212, i32 0, i32 5
  store i32 %211, i32* %213, align 4
  br label %214

214:                                              ; preds = %206, %210
  store i32 0, i32* %58, align 4
  br label %1199

215:                                              ; preds = %202
  %216 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 5
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %234

220:                                              ; preds = %215
  %221 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 5
  %222 = load i16, i16* %221, align 2
  %223 = zext i16 %222 to i32
  %224 = icmp ne i32 %223, 8
  br i1 %224, label %225, label %234

225:                                              ; preds = %220
  %226 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %226, %struct.mz_zip_archive** %24, align 8
  store i32 4, i32* %25, align 4
  %227 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %228 = icmp ne %struct.mz_zip_archive* %227, null
  br i1 %228, label %229, label %233

229:                                              ; preds = %225
  %230 = load i32, i32* %25, align 4
  %231 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %232 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %231, i32 0, i32 5
  store i32 %230, i32* %232, align 4
  br label %233

233:                                              ; preds = %225, %229
  store i32 0, i32* %58, align 4
  br label %1199

234:                                              ; preds = %220, %215
  %235 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 15
  %236 = load i32, i32* %235, align 4
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %247, label %238

238:                                              ; preds = %234
  %239 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %239, %struct.mz_zip_archive** %26, align 8
  store i32 6, i32* %27, align 4
  %240 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %241 = icmp ne %struct.mz_zip_archive* %240, null
  br i1 %241, label %242, label %246

242:                                              ; preds = %238
  %243 = load i32, i32* %27, align 4
  %244 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %245 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %244, i32 0, i32 5
  store i32 %243, i32* %245, align 4
  br label %246

246:                                              ; preds = %238, %242
  store i32 0, i32* %58, align 4
  br label %1199

247:                                              ; preds = %234
  %248 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 11
  %249 = load i64, i64* %248, align 8
  store i64 %249, i64* %69, align 8
  %250 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %251 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %250, i32 0, i32 11
  %252 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %251, align 8
  %253 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %254 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %253, i32 0, i32 14
  %255 = load i8*, i8** %254, align 8
  %256 = load i64, i64* %69, align 8
  %257 = load i8*, i8** %68, align 8
  %258 = call i64 %252(i8* noundef %255, i64 noundef %256, i8* noundef %257, i64 noundef 30)
  %259 = icmp ne i64 %258, 30
  br i1 %259, label %260, label %269

260:                                              ; preds = %247
  %261 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %261, %struct.mz_zip_archive** %28, align 8
  store i32 20, i32* %29, align 4
  %262 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %263 = icmp ne %struct.mz_zip_archive* %262, null
  br i1 %263, label %264, label %268

264:                                              ; preds = %260
  %265 = load i32, i32* %29, align 4
  %266 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %28, align 8
  %267 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %266, i32 0, i32 5
  store i32 %265, i32* %267, align 4
  br label %268

268:                                              ; preds = %260, %264
  store i32 0, i32* %58, align 4
  br label %1199

269:                                              ; preds = %247
  %270 = load i8*, i8** %68, align 8
  %271 = getelementptr inbounds i8, i8* %270, i64 0
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = load i8*, i8** %68, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 1
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = shl i32 %277, 8
  %279 = or i32 %273, %278
  %280 = load i8*, i8** %68, align 8
  %281 = getelementptr inbounds i8, i8* %280, i64 2
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = shl i32 %283, 16
  %285 = or i32 %279, %284
  %286 = load i8*, i8** %68, align 8
  %287 = getelementptr inbounds i8, i8* %286, i64 3
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = shl i32 %289, 24
  %291 = or i32 %285, %290
  %292 = icmp ne i32 %291, 67324752
  br i1 %292, label %293, label %302

293:                                              ; preds = %269
  %294 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %294, %struct.mz_zip_archive** %30, align 8
  store i32 9, i32* %31, align 4
  %295 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %30, align 8
  %296 = icmp ne %struct.mz_zip_archive* %295, null
  br i1 %296, label %297, label %301

297:                                              ; preds = %293
  %298 = load i32, i32* %31, align 4
  %299 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %30, align 8
  %300 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %299, i32 0, i32 5
  store i32 %298, i32* %300, align 4
  br label %301

301:                                              ; preds = %293, %297
  store i32 0, i32* %58, align 4
  br label %1199

302:                                              ; preds = %269
  %303 = load i8*, i8** %68, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 26
  %305 = getelementptr inbounds i8, i8* %304, i64 0
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = load i8*, i8** %68, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 26
  %310 = getelementptr inbounds i8, i8* %309, i64 1
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = shl i32 %312, 8
  %314 = or i32 %307, %313
  store i32 %314, i32* %70, align 4
  %315 = load i8*, i8** %68, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 28
  %317 = getelementptr inbounds i8, i8* %316, i64 0
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i32
  %320 = load i8*, i8** %68, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 28
  %322 = getelementptr inbounds i8, i8* %321, i64 1
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = shl i32 %324, 8
  %326 = or i32 %319, %325
  store i32 %326, i32* %71, align 4
  %327 = load i8*, i8** %68, align 8
  %328 = getelementptr inbounds i8, i8* %327, i64 18
  %329 = getelementptr inbounds i8, i8* %328, i64 0
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = load i8*, i8** %68, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 18
  %334 = getelementptr inbounds i8, i8* %333, i64 1
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = shl i32 %336, 8
  %338 = or i32 %331, %337
  %339 = load i8*, i8** %68, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 18
  %341 = getelementptr inbounds i8, i8* %340, i64 2
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  %344 = shl i32 %343, 16
  %345 = or i32 %338, %344
  %346 = load i8*, i8** %68, align 8
  %347 = getelementptr inbounds i8, i8* %346, i64 18
  %348 = getelementptr inbounds i8, i8* %347, i64 3
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  %351 = shl i32 %350, 24
  %352 = or i32 %345, %351
  %353 = zext i32 %352 to i64
  store i64 %353, i64* %73, align 8
  %354 = load i8*, i8** %68, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 22
  %356 = getelementptr inbounds i8, i8* %355, i64 0
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = load i8*, i8** %68, align 8
  %360 = getelementptr inbounds i8, i8* %359, i64 22
  %361 = getelementptr inbounds i8, i8* %360, i64 1
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i32
  %364 = shl i32 %363, 8
  %365 = or i32 %358, %364
  %366 = load i8*, i8** %68, align 8
  %367 = getelementptr inbounds i8, i8* %366, i64 22
  %368 = getelementptr inbounds i8, i8* %367, i64 2
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = shl i32 %370, 16
  %372 = or i32 %365, %371
  %373 = load i8*, i8** %68, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 22
  %375 = getelementptr inbounds i8, i8* %374, i64 3
  %376 = load i8, i8* %375, align 1
  %377 = zext i8 %376 to i32
  %378 = shl i32 %377, 24
  %379 = or i32 %372, %378
  %380 = zext i32 %379 to i64
  store i64 %380, i64* %74, align 8
  %381 = load i8*, i8** %68, align 8
  %382 = getelementptr inbounds i8, i8* %381, i64 14
  %383 = getelementptr inbounds i8, i8* %382, i64 0
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = load i8*, i8** %68, align 8
  %387 = getelementptr inbounds i8, i8* %386, i64 14
  %388 = getelementptr inbounds i8, i8* %387, i64 1
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i32
  %391 = shl i32 %390, 8
  %392 = or i32 %385, %391
  %393 = load i8*, i8** %68, align 8
  %394 = getelementptr inbounds i8, i8* %393, i64 14
  %395 = getelementptr inbounds i8, i8* %394, i64 2
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  %398 = shl i32 %397, 16
  %399 = or i32 %392, %398
  %400 = load i8*, i8** %68, align 8
  %401 = getelementptr inbounds i8, i8* %400, i64 14
  %402 = getelementptr inbounds i8, i8* %401, i64 3
  %403 = load i8, i8* %402, align 1
  %404 = zext i8 %403 to i32
  %405 = shl i32 %404, 24
  %406 = or i32 %399, %405
  store i32 %406, i32* %72, align 4
  %407 = load i8*, i8** %68, align 8
  %408 = getelementptr inbounds i8, i8* %407, i64 6
  %409 = getelementptr inbounds i8, i8* %408, i64 0
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = load i8*, i8** %68, align 8
  %413 = getelementptr inbounds i8, i8* %412, i64 6
  %414 = getelementptr inbounds i8, i8* %413, i64 1
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = shl i32 %416, 8
  %418 = or i32 %411, %417
  store i32 %418, i32* %77, align 4
  %419 = load i32, i32* %77, align 4
  %420 = and i32 %419, 8
  %421 = icmp ne i32 %420, 0
  %422 = zext i1 %421 to i32
  store i32 %422, i32* %76, align 4
  %423 = load i32, i32* %70, align 4
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 16
  %426 = getelementptr inbounds [512 x i8], [512 x i8]* %425, i64 0, i64 0
  %427 = call i64 @strlen(i8* noundef %426) #9
  %428 = icmp ne i64 %424, %427
  br i1 %428, label %429, label %438

429:                                              ; preds = %302
  %430 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %430, %struct.mz_zip_archive** %32, align 8
  store i32 9, i32* %33, align 4
  %431 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %432 = icmp ne %struct.mz_zip_archive* %431, null
  br i1 %432, label %433, label %437

433:                                              ; preds = %429
  %434 = load i32, i32* %33, align 4
  %435 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %436 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %435, i32 0, i32 5
  store i32 %434, i32* %436, align 4
  br label %437

437:                                              ; preds = %429, %433
  store i32 0, i32* %58, align 4
  br label %1199

438:                                              ; preds = %302
  %439 = load i64, i64* %69, align 8
  %440 = add i64 %439, 30
  %441 = load i32, i32* %70, align 4
  %442 = zext i32 %441 to i64
  %443 = add i64 %440, %442
  %444 = load i32, i32* %71, align 4
  %445 = zext i32 %444 to i64
  %446 = add i64 %443, %445
  %447 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 7
  %448 = load i64, i64* %447, align 8
  %449 = add i64 %446, %448
  %450 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %451 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %450, i32 0, i32 0
  %452 = load i64, i64* %451, align 8
  %453 = icmp ugt i64 %449, %452
  br i1 %453, label %454, label %463

454:                                              ; preds = %438
  %455 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %455, %struct.mz_zip_archive** %34, align 8
  store i32 9, i32* %35, align 4
  %456 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %457 = icmp ne %struct.mz_zip_archive* %456, null
  br i1 %457, label %458, label %462

458:                                              ; preds = %454
  %459 = load i32, i32* %35, align 4
  %460 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %461 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %460, i32 0, i32 5
  store i32 %459, i32* %461, align 4
  br label %462

462:                                              ; preds = %454, %458
  store i32 0, i32* %58, align 4
  br label %1199

463:                                              ; preds = %438
  %464 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %465 = load i32, i32* %70, align 4
  %466 = load i32, i32* %71, align 4
  %467 = icmp ugt i32 %465, %466
  br i1 %467, label %468, label %470

468:                                              ; preds = %463
  %469 = load i32, i32* %70, align 4
  br label %472

470:                                              ; preds = %463
  %471 = load i32, i32* %71, align 4
  br label %472

472:                                              ; preds = %470, %468
  %473 = phi i32 [ %469, %468 ], [ %471, %470 ]
  %474 = zext i32 %473 to i64
  store %struct.mz_zip_archive* %464, %struct.mz_zip_archive** %9, align 8
  store %struct.mz_zip_array* %78, %struct.mz_zip_array** %10, align 8
  store i64 %474, i64* %11, align 8
  store i32 0, i32* %12, align 4
  %475 = load i64, i64* %11, align 8
  %476 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %477 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %476, i32 0, i32 2
  %478 = load i64, i64* %477, align 8
  %479 = icmp ugt i64 %475, %478
  br i1 %479, label %480, label %489

480:                                              ; preds = %472
  %481 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %482 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %483 = load i64, i64* %11, align 8
  %484 = load i32, i32* %12, align 4
  %485 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %481, %struct.mz_zip_array* noundef %482, i64 noundef %483, i32 noundef %484) #7
  %486 = icmp ne i32 %485, 0
  br i1 %486, label %488, label %487

487:                                              ; preds = %480
  store i32 0, i32* %8, align 4
  br label %493

488:                                              ; preds = %480
  br label %489

489:                                              ; preds = %488, %472
  %490 = load i64, i64* %11, align 8
  %491 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %492 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %491, i32 0, i32 1
  store i64 %490, i64* %492, align 8
  store i32 1, i32* %8, align 4
  br label %493

493:                                              ; preds = %487, %489
  %494 = load i32, i32* %8, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %505, label %496

496:                                              ; preds = %493
  %497 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %497, %struct.mz_zip_archive** %36, align 8
  store i32 16, i32* %37, align 4
  %498 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %499 = icmp ne %struct.mz_zip_archive* %498, null
  br i1 %499, label %500, label %504

500:                                              ; preds = %496
  %501 = load i32, i32* %37, align 4
  %502 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %503 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %502, i32 0, i32 5
  store i32 %501, i32* %503, align 4
  br label %504

504:                                              ; preds = %496, %500
  br label %1186

505:                                              ; preds = %493
  %506 = load i32, i32* %70, align 4
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %508, label %553

508:                                              ; preds = %505
  %509 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %510 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %509, i32 0, i32 11
  %511 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %510, align 8
  %512 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %513 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %512, i32 0, i32 14
  %514 = load i8*, i8** %513, align 8
  %515 = load i64, i64* %69, align 8
  %516 = add i64 %515, 30
  %517 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %78, i32 0, i32 0
  %518 = load i8*, i8** %517, align 8
  %519 = load i32, i32* %70, align 4
  %520 = zext i32 %519 to i64
  %521 = call i64 %511(i8* noundef %514, i64 noundef %516, i8* noundef %518, i64 noundef %520)
  %522 = load i32, i32* %70, align 4
  %523 = zext i32 %522 to i64
  %524 = icmp ne i64 %521, %523
  br i1 %524, label %525, label %534

525:                                              ; preds = %508
  %526 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %526, %struct.mz_zip_archive** %38, align 8
  store i32 20, i32* %39, align 4
  %527 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %528 = icmp ne %struct.mz_zip_archive* %527, null
  br i1 %528, label %529, label %533

529:                                              ; preds = %525
  %530 = load i32, i32* %39, align 4
  %531 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %532 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %531, i32 0, i32 5
  store i32 %530, i32* %532, align 4
  br label %533

533:                                              ; preds = %525, %529
  br label %1186

534:                                              ; preds = %508
  %535 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 16
  %536 = getelementptr inbounds [512 x i8], [512 x i8]* %535, i64 0, i64 0
  %537 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %78, i32 0, i32 0
  %538 = load i8*, i8** %537, align 8
  %539 = load i32, i32* %70, align 4
  %540 = zext i32 %539 to i64
  %541 = call i32 @memcmp(i8* noundef %536, i8* noundef %538, i64 noundef %540) #9
  %542 = icmp ne i32 %541, 0
  br i1 %542, label %543, label %552

543:                                              ; preds = %534
  %544 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %544, %struct.mz_zip_archive** %40, align 8
  store i32 30, i32* %41, align 4
  %545 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %40, align 8
  %546 = icmp ne %struct.mz_zip_archive* %545, null
  br i1 %546, label %547, label %551

547:                                              ; preds = %543
  %548 = load i32, i32* %41, align 4
  %549 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %40, align 8
  %550 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %549, i32 0, i32 5
  store i32 %548, i32* %550, align 4
  br label %551

551:                                              ; preds = %543, %547
  br label %1186

552:                                              ; preds = %534
  br label %553

553:                                              ; preds = %552, %505
  %554 = load i32, i32* %71, align 4
  %555 = icmp ne i32 %554, 0
  br i1 %555, label %556, label %790

556:                                              ; preds = %553
  %557 = load i64, i64* %73, align 8
  %558 = icmp eq i64 %557, 4294967295
  br i1 %558, label %562, label %559

559:                                              ; preds = %556
  %560 = load i64, i64* %74, align 8
  %561 = icmp eq i64 %560, 4294967295
  br i1 %561, label %562, label %790

562:                                              ; preds = %559, %556
  %563 = load i32, i32* %71, align 4
  store i32 %563, i32* %79, align 4
  %564 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %78, i32 0, i32 0
  %565 = load i8*, i8** %564, align 8
  store i8* %565, i8** %80, align 8
  %566 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %567 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %566, i32 0, i32 11
  %568 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %567, align 8
  %569 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %570 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %569, i32 0, i32 14
  %571 = load i8*, i8** %570, align 8
  %572 = load i64, i64* %69, align 8
  %573 = add i64 %572, 30
  %574 = load i32, i32* %70, align 4
  %575 = zext i32 %574 to i64
  %576 = add i64 %573, %575
  %577 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %78, i32 0, i32 0
  %578 = load i8*, i8** %577, align 8
  %579 = load i32, i32* %71, align 4
  %580 = zext i32 %579 to i64
  %581 = call i64 %568(i8* noundef %571, i64 noundef %576, i8* noundef %578, i64 noundef %580)
  %582 = load i32, i32* %71, align 4
  %583 = zext i32 %582 to i64
  %584 = icmp ne i64 %581, %583
  br i1 %584, label %585, label %594

585:                                              ; preds = %562
  %586 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %586, %struct.mz_zip_archive** %42, align 8
  store i32 20, i32* %43, align 4
  %587 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %588 = icmp ne %struct.mz_zip_archive* %587, null
  br i1 %588, label %589, label %593

589:                                              ; preds = %585
  %590 = load i32, i32* %43, align 4
  %591 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %592 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %591, i32 0, i32 5
  store i32 %590, i32* %592, align 4
  br label %593

593:                                              ; preds = %585, %589
  br label %1186

594:                                              ; preds = %562
  br label %595

595:                                              ; preds = %786, %594
  %596 = load i32, i32* %79, align 4
  %597 = zext i32 %596 to i64
  %598 = icmp ult i64 %597, 4
  br i1 %598, label %599, label %608

599:                                              ; preds = %595
  %600 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %600, %struct.mz_zip_archive** %44, align 8
  store i32 9, i32* %45, align 4
  %601 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %44, align 8
  %602 = icmp ne %struct.mz_zip_archive* %601, null
  br i1 %602, label %603, label %607

603:                                              ; preds = %599
  %604 = load i32, i32* %45, align 4
  %605 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %44, align 8
  %606 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %605, i32 0, i32 5
  store i32 %604, i32* %606, align 4
  br label %607

607:                                              ; preds = %599, %603
  br label %1186

608:                                              ; preds = %595
  %609 = load i8*, i8** %80, align 8
  %610 = getelementptr inbounds i8, i8* %609, i64 0
  %611 = load i8, i8* %610, align 1
  %612 = zext i8 %611 to i32
  %613 = load i8*, i8** %80, align 8
  %614 = getelementptr inbounds i8, i8* %613, i64 1
  %615 = load i8, i8* %614, align 1
  %616 = zext i8 %615 to i32
  %617 = shl i32 %616, 8
  %618 = or i32 %612, %617
  store i32 %618, i32* %81, align 4
  %619 = load i8*, i8** %80, align 8
  %620 = getelementptr inbounds i8, i8* %619, i64 2
  %621 = getelementptr inbounds i8, i8* %620, i64 0
  %622 = load i8, i8* %621, align 1
  %623 = zext i8 %622 to i32
  %624 = load i8*, i8** %80, align 8
  %625 = getelementptr inbounds i8, i8* %624, i64 2
  %626 = getelementptr inbounds i8, i8* %625, i64 1
  %627 = load i8, i8* %626, align 1
  %628 = zext i8 %627 to i32
  %629 = shl i32 %628, 8
  %630 = or i32 %623, %629
  store i32 %630, i32* %82, align 4
  %631 = load i32, i32* %82, align 4
  %632 = zext i32 %631 to i64
  %633 = add i64 %632, 4
  %634 = trunc i64 %633 to i32
  store i32 %634, i32* %83, align 4
  %635 = load i32, i32* %83, align 4
  %636 = load i32, i32* %79, align 4
  %637 = icmp ugt i32 %635, %636
  br i1 %637, label %638, label %647

638:                                              ; preds = %608
  %639 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %639, %struct.mz_zip_archive** %46, align 8
  store i32 9, i32* %47, align 4
  %640 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %641 = icmp ne %struct.mz_zip_archive* %640, null
  br i1 %641, label %642, label %646

642:                                              ; preds = %638
  %643 = load i32, i32* %47, align 4
  %644 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %645 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %644, i32 0, i32 5
  store i32 %643, i32* %645, align 4
  br label %646

646:                                              ; preds = %638, %642
  br label %1186

647:                                              ; preds = %608
  %648 = load i32, i32* %81, align 4
  %649 = icmp eq i32 %648, 1
  br i1 %649, label %650, label %778

650:                                              ; preds = %647
  %651 = load i8*, i8** %80, align 8
  %652 = getelementptr inbounds i8, i8* %651, i64 4
  store i8* %652, i8** %84, align 8
  %653 = load i32, i32* %82, align 4
  %654 = zext i32 %653 to i64
  %655 = icmp ult i64 %654, 16
  br i1 %655, label %656, label %665

656:                                              ; preds = %650
  %657 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %657, %struct.mz_zip_archive** %48, align 8
  store i32 9, i32* %49, align 4
  %658 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %659 = icmp ne %struct.mz_zip_archive* %658, null
  br i1 %659, label %660, label %664

660:                                              ; preds = %656
  %661 = load i32, i32* %49, align 4
  %662 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %663 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %662, i32 0, i32 5
  store i32 %661, i32* %663, align 4
  br label %664

664:                                              ; preds = %656, %660
  br label %1186

665:                                              ; preds = %650
  %666 = load i8*, i8** %84, align 8
  %667 = getelementptr inbounds i8, i8* %666, i64 0
  %668 = load i8, i8* %667, align 1
  %669 = zext i8 %668 to i32
  %670 = load i8*, i8** %84, align 8
  %671 = getelementptr inbounds i8, i8* %670, i64 1
  %672 = load i8, i8* %671, align 1
  %673 = zext i8 %672 to i32
  %674 = shl i32 %673, 8
  %675 = or i32 %669, %674
  %676 = load i8*, i8** %84, align 8
  %677 = getelementptr inbounds i8, i8* %676, i64 2
  %678 = load i8, i8* %677, align 1
  %679 = zext i8 %678 to i32
  %680 = shl i32 %679, 16
  %681 = or i32 %675, %680
  %682 = load i8*, i8** %84, align 8
  %683 = getelementptr inbounds i8, i8* %682, i64 3
  %684 = load i8, i8* %683, align 1
  %685 = zext i8 %684 to i32
  %686 = shl i32 %685, 24
  %687 = or i32 %681, %686
  %688 = zext i32 %687 to i64
  %689 = load i8*, i8** %84, align 8
  %690 = getelementptr inbounds i8, i8* %689, i64 4
  %691 = getelementptr inbounds i8, i8* %690, i64 0
  %692 = load i8, i8* %691, align 1
  %693 = zext i8 %692 to i32
  %694 = load i8*, i8** %84, align 8
  %695 = getelementptr inbounds i8, i8* %694, i64 4
  %696 = getelementptr inbounds i8, i8* %695, i64 1
  %697 = load i8, i8* %696, align 1
  %698 = zext i8 %697 to i32
  %699 = shl i32 %698, 8
  %700 = or i32 %693, %699
  %701 = load i8*, i8** %84, align 8
  %702 = getelementptr inbounds i8, i8* %701, i64 4
  %703 = getelementptr inbounds i8, i8* %702, i64 2
  %704 = load i8, i8* %703, align 1
  %705 = zext i8 %704 to i32
  %706 = shl i32 %705, 16
  %707 = or i32 %700, %706
  %708 = load i8*, i8** %84, align 8
  %709 = getelementptr inbounds i8, i8* %708, i64 4
  %710 = getelementptr inbounds i8, i8* %709, i64 3
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = shl i32 %712, 24
  %714 = or i32 %707, %713
  %715 = zext i32 %714 to i64
  %716 = shl i64 %715, 32
  %717 = or i64 %688, %716
  store i64 %717, i64* %74, align 8
  %718 = load i8*, i8** %84, align 8
  %719 = getelementptr inbounds i8, i8* %718, i64 8
  %720 = getelementptr inbounds i8, i8* %719, i64 0
  %721 = load i8, i8* %720, align 1
  %722 = zext i8 %721 to i32
  %723 = load i8*, i8** %84, align 8
  %724 = getelementptr inbounds i8, i8* %723, i64 8
  %725 = getelementptr inbounds i8, i8* %724, i64 1
  %726 = load i8, i8* %725, align 1
  %727 = zext i8 %726 to i32
  %728 = shl i32 %727, 8
  %729 = or i32 %722, %728
  %730 = load i8*, i8** %84, align 8
  %731 = getelementptr inbounds i8, i8* %730, i64 8
  %732 = getelementptr inbounds i8, i8* %731, i64 2
  %733 = load i8, i8* %732, align 1
  %734 = zext i8 %733 to i32
  %735 = shl i32 %734, 16
  %736 = or i32 %729, %735
  %737 = load i8*, i8** %84, align 8
  %738 = getelementptr inbounds i8, i8* %737, i64 8
  %739 = getelementptr inbounds i8, i8* %738, i64 3
  %740 = load i8, i8* %739, align 1
  %741 = zext i8 %740 to i32
  %742 = shl i32 %741, 24
  %743 = or i32 %736, %742
  %744 = zext i32 %743 to i64
  %745 = load i8*, i8** %84, align 8
  %746 = getelementptr inbounds i8, i8* %745, i64 8
  %747 = getelementptr inbounds i8, i8* %746, i64 4
  %748 = getelementptr inbounds i8, i8* %747, i64 0
  %749 = load i8, i8* %748, align 1
  %750 = zext i8 %749 to i32
  %751 = load i8*, i8** %84, align 8
  %752 = getelementptr inbounds i8, i8* %751, i64 8
  %753 = getelementptr inbounds i8, i8* %752, i64 4
  %754 = getelementptr inbounds i8, i8* %753, i64 1
  %755 = load i8, i8* %754, align 1
  %756 = zext i8 %755 to i32
  %757 = shl i32 %756, 8
  %758 = or i32 %750, %757
  %759 = load i8*, i8** %84, align 8
  %760 = getelementptr inbounds i8, i8* %759, i64 8
  %761 = getelementptr inbounds i8, i8* %760, i64 4
  %762 = getelementptr inbounds i8, i8* %761, i64 2
  %763 = load i8, i8* %762, align 1
  %764 = zext i8 %763 to i32
  %765 = shl i32 %764, 16
  %766 = or i32 %758, %765
  %767 = load i8*, i8** %84, align 8
  %768 = getelementptr inbounds i8, i8* %767, i64 8
  %769 = getelementptr inbounds i8, i8* %768, i64 4
  %770 = getelementptr inbounds i8, i8* %769, i64 3
  %771 = load i8, i8* %770, align 1
  %772 = zext i8 %771 to i32
  %773 = shl i32 %772, 24
  %774 = or i32 %766, %773
  %775 = zext i32 %774 to i64
  %776 = shl i64 %775, 32
  %777 = or i64 %744, %776
  store i64 %777, i64* %73, align 8
  store i32 1, i32* %66, align 4
  br label %789

778:                                              ; preds = %647
  %779 = load i32, i32* %83, align 4
  %780 = load i8*, i8** %80, align 8
  %781 = zext i32 %779 to i64
  %782 = getelementptr inbounds i8, i8* %780, i64 %781
  store i8* %782, i8** %80, align 8
  %783 = load i32, i32* %83, align 4
  %784 = load i32, i32* %79, align 4
  %785 = sub i32 %784, %783
  store i32 %785, i32* %79, align 4
  br label %786

786:                                              ; preds = %778
  %787 = load i32, i32* %79, align 4
  %788 = icmp ne i32 %787, 0
  br i1 %788, label %595, label %789, !llvm.loop !120

789:                                              ; preds = %786, %665
  br label %790

790:                                              ; preds = %789, %559, %553
  %791 = load i32, i32* %76, align 4
  %792 = icmp ne i32 %791, 0
  br i1 %792, label %793, label %1122

793:                                              ; preds = %790
  %794 = load i64, i64* %73, align 8
  %795 = icmp ne i64 %794, 0
  br i1 %795, label %1122, label %796

796:                                              ; preds = %793
  %797 = load i32, i32* %72, align 4
  %798 = icmp ne i32 %797, 0
  br i1 %798, label %1122, label %799

799:                                              ; preds = %796
  store i64 0, i64* %89, align 8
  store i64 0, i64* %90, align 8
  %800 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %63, align 8
  %801 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %800, i32 0, i32 4
  %802 = load i32, i32* %801, align 4
  %803 = icmp ne i32 %802, 0
  br i1 %803, label %807, label %804

804:                                              ; preds = %799
  %805 = load i32, i32* %66, align 4
  %806 = icmp ne i32 %805, 0
  br label %807

807:                                              ; preds = %804, %799
  %808 = phi i1 [ true, %799 ], [ %806, %804 ]
  %809 = zext i1 %808 to i64
  %810 = select i1 %808, i32 6, i32 4
  store i32 %810, i32* %91, align 4
  %811 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %812 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %811, i32 0, i32 11
  %813 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %812, align 8
  %814 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %815 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %814, i32 0, i32 14
  %816 = load i8*, i8** %815, align 8
  %817 = load i64, i64* %69, align 8
  %818 = add i64 %817, 30
  %819 = load i32, i32* %70, align 4
  %820 = zext i32 %819 to i64
  %821 = add i64 %818, %820
  %822 = load i32, i32* %71, align 4
  %823 = zext i32 %822 to i64
  %824 = add i64 %821, %823
  %825 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 7
  %826 = load i64, i64* %825, align 8
  %827 = add i64 %824, %826
  %828 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  %829 = load i32, i32* %91, align 4
  %830 = zext i32 %829 to i64
  %831 = mul i64 4, %830
  %832 = call i64 %813(i8* noundef %816, i64 noundef %827, i8* noundef %828, i64 noundef %831)
  %833 = load i32, i32* %91, align 4
  %834 = zext i32 %833 to i64
  %835 = mul i64 4, %834
  %836 = icmp ne i64 %832, %835
  br i1 %836, label %837, label %846

837:                                              ; preds = %807
  %838 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %838, %struct.mz_zip_archive** %50, align 8
  store i32 20, i32* %51, align 4
  %839 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %50, align 8
  %840 = icmp ne %struct.mz_zip_archive* %839, null
  br i1 %840, label %841, label %845

841:                                              ; preds = %837
  %842 = load i32, i32* %51, align 4
  %843 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %50, align 8
  %844 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %843, i32 0, i32 5
  store i32 %842, i32* %844, align 4
  br label %845

845:                                              ; preds = %837, %841
  br label %1186

846:                                              ; preds = %807
  %847 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  %848 = getelementptr inbounds i8, i8* %847, i64 0
  %849 = load i8, i8* %848, align 16
  %850 = zext i8 %849 to i32
  %851 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  %852 = getelementptr inbounds i8, i8* %851, i64 1
  %853 = load i8, i8* %852, align 1
  %854 = zext i8 %853 to i32
  %855 = shl i32 %854, 8
  %856 = or i32 %850, %855
  %857 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  %858 = getelementptr inbounds i8, i8* %857, i64 2
  %859 = load i8, i8* %858, align 2
  %860 = zext i8 %859 to i32
  %861 = shl i32 %860, 16
  %862 = or i32 %856, %861
  %863 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  %864 = getelementptr inbounds i8, i8* %863, i64 3
  %865 = load i8, i8* %864, align 1
  %866 = zext i8 %865 to i32
  %867 = shl i32 %866, 24
  %868 = or i32 %862, %867
  %869 = icmp eq i32 %868, 134695760
  %870 = zext i1 %869 to i32
  store i32 %870, i32* %86, align 4
  %871 = load i32, i32* %86, align 4
  %872 = icmp ne i32 %871, 0
  br i1 %872, label %873, label %876

873:                                              ; preds = %846
  %874 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  %875 = getelementptr inbounds i8, i8* %874, i64 4
  br label %878

876:                                              ; preds = %846
  %877 = getelementptr inbounds [32 x i8], [32 x i8]* %85, i64 0, i64 0
  br label %878

878:                                              ; preds = %876, %873
  %879 = phi i8* [ %875, %873 ], [ %877, %876 ]
  store i8* %879, i8** %87, align 8
  %880 = load i8*, i8** %87, align 8
  %881 = getelementptr inbounds i8, i8* %880, i64 0
  %882 = load i8, i8* %881, align 1
  %883 = zext i8 %882 to i32
  %884 = load i8*, i8** %87, align 8
  %885 = getelementptr inbounds i8, i8* %884, i64 1
  %886 = load i8, i8* %885, align 1
  %887 = zext i8 %886 to i32
  %888 = shl i32 %887, 8
  %889 = or i32 %883, %888
  %890 = load i8*, i8** %87, align 8
  %891 = getelementptr inbounds i8, i8* %890, i64 2
  %892 = load i8, i8* %891, align 1
  %893 = zext i8 %892 to i32
  %894 = shl i32 %893, 16
  %895 = or i32 %889, %894
  %896 = load i8*, i8** %87, align 8
  %897 = getelementptr inbounds i8, i8* %896, i64 3
  %898 = load i8, i8* %897, align 1
  %899 = zext i8 %898 to i32
  %900 = shl i32 %899, 24
  %901 = or i32 %895, %900
  store i32 %901, i32* %88, align 4
  %902 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %63, align 8
  %903 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %902, i32 0, i32 4
  %904 = load i32, i32* %903, align 4
  %905 = icmp ne i32 %904, 0
  br i1 %905, label %909, label %906

906:                                              ; preds = %878
  %907 = load i32, i32* %66, align 4
  %908 = icmp ne i32 %907, 0
  br i1 %908, label %909, label %1038

909:                                              ; preds = %906, %878
  %910 = load i8*, i8** %87, align 8
  %911 = getelementptr inbounds i8, i8* %910, i64 4
  %912 = getelementptr inbounds i8, i8* %911, i64 0
  %913 = load i8, i8* %912, align 1
  %914 = zext i8 %913 to i32
  %915 = load i8*, i8** %87, align 8
  %916 = getelementptr inbounds i8, i8* %915, i64 4
  %917 = getelementptr inbounds i8, i8* %916, i64 1
  %918 = load i8, i8* %917, align 1
  %919 = zext i8 %918 to i32
  %920 = shl i32 %919, 8
  %921 = or i32 %914, %920
  %922 = load i8*, i8** %87, align 8
  %923 = getelementptr inbounds i8, i8* %922, i64 4
  %924 = getelementptr inbounds i8, i8* %923, i64 2
  %925 = load i8, i8* %924, align 1
  %926 = zext i8 %925 to i32
  %927 = shl i32 %926, 16
  %928 = or i32 %921, %927
  %929 = load i8*, i8** %87, align 8
  %930 = getelementptr inbounds i8, i8* %929, i64 4
  %931 = getelementptr inbounds i8, i8* %930, i64 3
  %932 = load i8, i8* %931, align 1
  %933 = zext i8 %932 to i32
  %934 = shl i32 %933, 24
  %935 = or i32 %928, %934
  %936 = zext i32 %935 to i64
  %937 = load i8*, i8** %87, align 8
  %938 = getelementptr inbounds i8, i8* %937, i64 4
  %939 = getelementptr inbounds i8, i8* %938, i64 4
  %940 = getelementptr inbounds i8, i8* %939, i64 0
  %941 = load i8, i8* %940, align 1
  %942 = zext i8 %941 to i32
  %943 = load i8*, i8** %87, align 8
  %944 = getelementptr inbounds i8, i8* %943, i64 4
  %945 = getelementptr inbounds i8, i8* %944, i64 4
  %946 = getelementptr inbounds i8, i8* %945, i64 1
  %947 = load i8, i8* %946, align 1
  %948 = zext i8 %947 to i32
  %949 = shl i32 %948, 8
  %950 = or i32 %942, %949
  %951 = load i8*, i8** %87, align 8
  %952 = getelementptr inbounds i8, i8* %951, i64 4
  %953 = getelementptr inbounds i8, i8* %952, i64 4
  %954 = getelementptr inbounds i8, i8* %953, i64 2
  %955 = load i8, i8* %954, align 1
  %956 = zext i8 %955 to i32
  %957 = shl i32 %956, 16
  %958 = or i32 %950, %957
  %959 = load i8*, i8** %87, align 8
  %960 = getelementptr inbounds i8, i8* %959, i64 4
  %961 = getelementptr inbounds i8, i8* %960, i64 4
  %962 = getelementptr inbounds i8, i8* %961, i64 3
  %963 = load i8, i8* %962, align 1
  %964 = zext i8 %963 to i32
  %965 = shl i32 %964, 24
  %966 = or i32 %958, %965
  %967 = zext i32 %966 to i64
  %968 = shl i64 %967, 32
  %969 = or i64 %936, %968
  store i64 %969, i64* %89, align 8
  %970 = load i8*, i8** %87, align 8
  %971 = getelementptr inbounds i8, i8* %970, i64 4
  %972 = getelementptr inbounds i8, i8* %971, i64 8
  %973 = getelementptr inbounds i8, i8* %972, i64 0
  %974 = load i8, i8* %973, align 1
  %975 = zext i8 %974 to i32
  %976 = load i8*, i8** %87, align 8
  %977 = getelementptr inbounds i8, i8* %976, i64 4
  %978 = getelementptr inbounds i8, i8* %977, i64 8
  %979 = getelementptr inbounds i8, i8* %978, i64 1
  %980 = load i8, i8* %979, align 1
  %981 = zext i8 %980 to i32
  %982 = shl i32 %981, 8
  %983 = or i32 %975, %982
  %984 = load i8*, i8** %87, align 8
  %985 = getelementptr inbounds i8, i8* %984, i64 4
  %986 = getelementptr inbounds i8, i8* %985, i64 8
  %987 = getelementptr inbounds i8, i8* %986, i64 2
  %988 = load i8, i8* %987, align 1
  %989 = zext i8 %988 to i32
  %990 = shl i32 %989, 16
  %991 = or i32 %983, %990
  %992 = load i8*, i8** %87, align 8
  %993 = getelementptr inbounds i8, i8* %992, i64 4
  %994 = getelementptr inbounds i8, i8* %993, i64 8
  %995 = getelementptr inbounds i8, i8* %994, i64 3
  %996 = load i8, i8* %995, align 1
  %997 = zext i8 %996 to i32
  %998 = shl i32 %997, 24
  %999 = or i32 %991, %998
  %1000 = zext i32 %999 to i64
  %1001 = load i8*, i8** %87, align 8
  %1002 = getelementptr inbounds i8, i8* %1001, i64 4
  %1003 = getelementptr inbounds i8, i8* %1002, i64 8
  %1004 = getelementptr inbounds i8, i8* %1003, i64 4
  %1005 = getelementptr inbounds i8, i8* %1004, i64 0
  %1006 = load i8, i8* %1005, align 1
  %1007 = zext i8 %1006 to i32
  %1008 = load i8*, i8** %87, align 8
  %1009 = getelementptr inbounds i8, i8* %1008, i64 4
  %1010 = getelementptr inbounds i8, i8* %1009, i64 8
  %1011 = getelementptr inbounds i8, i8* %1010, i64 4
  %1012 = getelementptr inbounds i8, i8* %1011, i64 1
  %1013 = load i8, i8* %1012, align 1
  %1014 = zext i8 %1013 to i32
  %1015 = shl i32 %1014, 8
  %1016 = or i32 %1007, %1015
  %1017 = load i8*, i8** %87, align 8
  %1018 = getelementptr inbounds i8, i8* %1017, i64 4
  %1019 = getelementptr inbounds i8, i8* %1018, i64 8
  %1020 = getelementptr inbounds i8, i8* %1019, i64 4
  %1021 = getelementptr inbounds i8, i8* %1020, i64 2
  %1022 = load i8, i8* %1021, align 1
  %1023 = zext i8 %1022 to i32
  %1024 = shl i32 %1023, 16
  %1025 = or i32 %1016, %1024
  %1026 = load i8*, i8** %87, align 8
  %1027 = getelementptr inbounds i8, i8* %1026, i64 4
  %1028 = getelementptr inbounds i8, i8* %1027, i64 8
  %1029 = getelementptr inbounds i8, i8* %1028, i64 4
  %1030 = getelementptr inbounds i8, i8* %1029, i64 3
  %1031 = load i8, i8* %1030, align 1
  %1032 = zext i8 %1031 to i32
  %1033 = shl i32 %1032, 24
  %1034 = or i32 %1025, %1033
  %1035 = zext i32 %1034 to i64
  %1036 = shl i64 %1035, 32
  %1037 = or i64 %1000, %1036
  store i64 %1037, i64* %90, align 8
  br label %1097

1038:                                             ; preds = %906
  %1039 = load i8*, i8** %87, align 8
  %1040 = getelementptr inbounds i8, i8* %1039, i64 4
  %1041 = getelementptr inbounds i8, i8* %1040, i64 0
  %1042 = load i8, i8* %1041, align 1
  %1043 = zext i8 %1042 to i32
  %1044 = load i8*, i8** %87, align 8
  %1045 = getelementptr inbounds i8, i8* %1044, i64 4
  %1046 = getelementptr inbounds i8, i8* %1045, i64 1
  %1047 = load i8, i8* %1046, align 1
  %1048 = zext i8 %1047 to i32
  %1049 = shl i32 %1048, 8
  %1050 = or i32 %1043, %1049
  %1051 = load i8*, i8** %87, align 8
  %1052 = getelementptr inbounds i8, i8* %1051, i64 4
  %1053 = getelementptr inbounds i8, i8* %1052, i64 2
  %1054 = load i8, i8* %1053, align 1
  %1055 = zext i8 %1054 to i32
  %1056 = shl i32 %1055, 16
  %1057 = or i32 %1050, %1056
  %1058 = load i8*, i8** %87, align 8
  %1059 = getelementptr inbounds i8, i8* %1058, i64 4
  %1060 = getelementptr inbounds i8, i8* %1059, i64 3
  %1061 = load i8, i8* %1060, align 1
  %1062 = zext i8 %1061 to i32
  %1063 = shl i32 %1062, 24
  %1064 = or i32 %1057, %1063
  %1065 = zext i32 %1064 to i64
  store i64 %1065, i64* %89, align 8
  %1066 = load i8*, i8** %87, align 8
  %1067 = getelementptr inbounds i8, i8* %1066, i64 4
  %1068 = getelementptr inbounds i8, i8* %1067, i64 4
  %1069 = getelementptr inbounds i8, i8* %1068, i64 0
  %1070 = load i8, i8* %1069, align 1
  %1071 = zext i8 %1070 to i32
  %1072 = load i8*, i8** %87, align 8
  %1073 = getelementptr inbounds i8, i8* %1072, i64 4
  %1074 = getelementptr inbounds i8, i8* %1073, i64 4
  %1075 = getelementptr inbounds i8, i8* %1074, i64 1
  %1076 = load i8, i8* %1075, align 1
  %1077 = zext i8 %1076 to i32
  %1078 = shl i32 %1077, 8
  %1079 = or i32 %1071, %1078
  %1080 = load i8*, i8** %87, align 8
  %1081 = getelementptr inbounds i8, i8* %1080, i64 4
  %1082 = getelementptr inbounds i8, i8* %1081, i64 4
  %1083 = getelementptr inbounds i8, i8* %1082, i64 2
  %1084 = load i8, i8* %1083, align 1
  %1085 = zext i8 %1084 to i32
  %1086 = shl i32 %1085, 16
  %1087 = or i32 %1079, %1086
  %1088 = load i8*, i8** %87, align 8
  %1089 = getelementptr inbounds i8, i8* %1088, i64 4
  %1090 = getelementptr inbounds i8, i8* %1089, i64 4
  %1091 = getelementptr inbounds i8, i8* %1090, i64 3
  %1092 = load i8, i8* %1091, align 1
  %1093 = zext i8 %1092 to i32
  %1094 = shl i32 %1093, 24
  %1095 = or i32 %1087, %1094
  %1096 = zext i32 %1095 to i64
  store i64 %1096, i64* %90, align 8
  br label %1097

1097:                                             ; preds = %1038, %909
  %1098 = load i32, i32* %88, align 4
  %1099 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 6
  %1100 = load i32, i32* %1099, align 8
  %1101 = icmp ne i32 %1098, %1100
  br i1 %1101, label %1112, label %1102

1102:                                             ; preds = %1097
  %1103 = load i64, i64* %89, align 8
  %1104 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 7
  %1105 = load i64, i64* %1104, align 8
  %1106 = icmp ne i64 %1103, %1105
  br i1 %1106, label %1112, label %1107

1107:                                             ; preds = %1102
  %1108 = load i64, i64* %90, align 8
  %1109 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 8
  %1110 = load i64, i64* %1109, align 8
  %1111 = icmp ne i64 %1108, %1110
  br i1 %1111, label %1112, label %1121

1112:                                             ; preds = %1107, %1102, %1097
  %1113 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %1113, %struct.mz_zip_archive** %52, align 8
  store i32 30, i32* %53, align 4
  %1114 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %52, align 8
  %1115 = icmp ne %struct.mz_zip_archive* %1114, null
  br i1 %1115, label %1116, label %1120

1116:                                             ; preds = %1112
  %1117 = load i32, i32* %53, align 4
  %1118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %52, align 8
  %1119 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1118, i32 0, i32 5
  store i32 %1117, i32* %1119, align 4
  br label %1120

1120:                                             ; preds = %1112, %1116
  br label %1186

1121:                                             ; preds = %1107
  br label %1147

1122:                                             ; preds = %796, %793, %790
  %1123 = load i32, i32* %72, align 4
  %1124 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 6
  %1125 = load i32, i32* %1124, align 8
  %1126 = icmp ne i32 %1123, %1125
  br i1 %1126, label %1137, label %1127

1127:                                             ; preds = %1122
  %1128 = load i64, i64* %73, align 8
  %1129 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 7
  %1130 = load i64, i64* %1129, align 8
  %1131 = icmp ne i64 %1128, %1130
  br i1 %1131, label %1137, label %1132

1132:                                             ; preds = %1127
  %1133 = load i64, i64* %74, align 8
  %1134 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 8
  %1135 = load i64, i64* %1134, align 8
  %1136 = icmp ne i64 %1133, %1135
  br i1 %1136, label %1137, label %1146

1137:                                             ; preds = %1132, %1127, %1122
  %1138 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %1138, %struct.mz_zip_archive** %54, align 8
  store i32 30, i32* %55, align 4
  %1139 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %1140 = icmp ne %struct.mz_zip_archive* %1139, null
  br i1 %1140, label %1141, label %1145

1141:                                             ; preds = %1137
  %1142 = load i32, i32* %55, align 4
  %1143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %1144 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1143, i32 0, i32 5
  store i32 %1142, i32* %1144, align 4
  br label %1145

1145:                                             ; preds = %1137, %1141
  br label %1186

1146:                                             ; preds = %1132
  br label %1147

1147:                                             ; preds = %1146, %1121
  %1148 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %1148, %struct.mz_zip_archive** %4, align 8
  store %struct.mz_zip_array* %78, %struct.mz_zip_array** %5, align 8
  %1149 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %1150 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1149, i32 0, i32 8
  %1151 = load void (i8*, i8*)*, void (i8*, i8*)** %1150, align 8
  %1152 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %1153 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1152, i32 0, i32 10
  %1154 = load i8*, i8** %1153, align 8
  %1155 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %1156 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1155, i32 0, i32 0
  %1157 = load i8*, i8** %1156, align 8
  call void %1151(i8* noundef %1154, i8* noundef %1157) #7
  %1158 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %1159 = bitcast %struct.mz_zip_array* %1158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1159, i8 0, i64 32, i1 false) #7
  %1160 = load i32, i32* %61, align 4
  %1161 = and i32 %1160, 8192
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1163, label %1185

1163:                                             ; preds = %1147
  %1164 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %1165 = load i32, i32* %60, align 4
  %1166 = bitcast i32* %75 to i8*
  %1167 = call i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive* noundef %1164, i32 noundef %1165, i64 (i8*, i64, i8*, i64)* noundef @mz_zip_compute_crc32_callback, i8* noundef %1166, i32 noundef 0)
  %1168 = icmp ne i32 %1167, 0
  br i1 %1168, label %1170, label %1169

1169:                                             ; preds = %1163
  store i32 0, i32* %58, align 4
  br label %1199

1170:                                             ; preds = %1163
  %1171 = load i32, i32* %75, align 4
  %1172 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %62, i32 0, i32 6
  %1173 = load i32, i32* %1172, align 8
  %1174 = icmp ne i32 %1171, %1173
  br i1 %1174, label %1175, label %1184

1175:                                             ; preds = %1170
  %1176 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %1176, %struct.mz_zip_archive** %56, align 8
  store i32 30, i32* %57, align 4
  %1177 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %56, align 8
  %1178 = icmp ne %struct.mz_zip_archive* %1177, null
  br i1 %1178, label %1179, label %1183

1179:                                             ; preds = %1175
  %1180 = load i32, i32* %57, align 4
  %1181 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %56, align 8
  %1182 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1181, i32 0, i32 5
  store i32 %1180, i32* %1182, align 4
  br label %1183

1183:                                             ; preds = %1175, %1179
  store i32 0, i32* %58, align 4
  br label %1199

1184:                                             ; preds = %1170
  br label %1185

1185:                                             ; preds = %1184, %1147
  store i32 1, i32* %58, align 4
  br label %1199

1186:                                             ; preds = %1145, %1120, %845, %664, %646, %607, %593, %551, %533, %504
  %1187 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  store %struct.mz_zip_archive* %1187, %struct.mz_zip_archive** %6, align 8
  store %struct.mz_zip_array* %78, %struct.mz_zip_array** %7, align 8
  %1188 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %1189 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1188, i32 0, i32 8
  %1190 = load void (i8*, i8*)*, void (i8*, i8*)** %1189, align 8
  %1191 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %1192 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1191, i32 0, i32 10
  %1193 = load i8*, i8** %1192, align 8
  %1194 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %1195 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1194, i32 0, i32 0
  %1196 = load i8*, i8** %1195, align 8
  call void %1190(i8* noundef %1193, i8* noundef %1196) #7
  %1197 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %1198 = bitcast %struct.mz_zip_array* %1197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1198, i8 0, i64 32, i1 false) #7
  store i32 0, i32* %58, align 4
  br label %1199

1199:                                             ; preds = %1186, %1185, %1183, %1169, %462, %437, %301, %268, %246, %233, %214, %201, %192, %144, %129
  %1200 = load i32, i32* %58, align 4
  ret i32 %1200
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_file_stat_internal(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i8* noundef %2, %struct.mz_zip_archive_file_stat* noundef %3, i32* noundef %4) #0 {
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.mz_zip_archive*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca %struct.mz_zip_archive_file_stat*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %19, align 8
  store i32 %1, i32* %20, align 4
  store i8* %2, i8** %21, align 8
  store %struct.mz_zip_archive_file_stat* %3, %struct.mz_zip_archive_file_stat** %22, align 8
  store i32* %4, i32** %23, align 8
  %32 = load i8*, i8** %21, align 8
  store i8* %32, i8** %25, align 8
  %33 = load i32*, i32** %23, align 8
  %34 = icmp ne i32* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %5
  %36 = load i32*, i32** %23, align 8
  store i32 0, i32* %36, align 4
  br label %37

37:                                               ; preds = %35, %5
  %38 = load i8*, i8** %25, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %42 = icmp ne %struct.mz_zip_archive_file_stat* %41, null
  br i1 %42, label %52, label %43

43:                                               ; preds = %40, %37
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  store %struct.mz_zip_archive* %44, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %45 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %46 = icmp ne %struct.mz_zip_archive* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load i32, i32* %7, align 4
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %49, i32 0, i32 5
  store i32 %48, i32* %50, align 4
  br label %51

51:                                               ; preds = %43, %47
  store i32 0, i32* %18, align 4
  br label %820

52:                                               ; preds = %40
  %53 = load i32, i32* %20, align 4
  %54 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %54, i32 0, i32 0
  store i32 %53, i32* %55, align 8
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %56, i32 0, i32 15
  %58 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %57, align 8
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %58, i32 0, i32 1
  %60 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %59, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %20, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %68, i32 0, i32 1
  store i64 %67, i64* %69, align 8
  %70 = load i8*, i8** %25, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  %72 = getelementptr inbounds i8, i8* %71, i64 0
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i8*, i8** %25, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 4
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl i32 %79, 8
  %81 = or i32 %74, %80
  %82 = trunc i32 %81 to i16
  %83 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %83, i32 0, i32 2
  store i16 %82, i16* %84, align 8
  %85 = load i8*, i8** %25, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 6
  %87 = getelementptr inbounds i8, i8* %86, i64 0
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i8*, i8** %25, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 6
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = shl i32 %94, 8
  %96 = or i32 %89, %95
  %97 = trunc i32 %96 to i16
  %98 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %98, i32 0, i32 3
  store i16 %97, i16* %99, align 2
  %100 = load i8*, i8** %25, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 8
  %102 = getelementptr inbounds i8, i8* %101, i64 0
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = load i8*, i8** %25, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 8
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl i32 %109, 8
  %111 = or i32 %104, %110
  %112 = trunc i32 %111 to i16
  %113 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %114 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %113, i32 0, i32 4
  store i16 %112, i16* %114, align 4
  %115 = load i8*, i8** %25, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 10
  %117 = getelementptr inbounds i8, i8* %116, i64 0
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = load i8*, i8** %25, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 10
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = shl i32 %124, 8
  %126 = or i32 %119, %125
  %127 = trunc i32 %126 to i16
  %128 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %129 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %128, i32 0, i32 5
  store i16 %127, i16* %129, align 2
  %130 = load i8*, i8** %25, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 12
  %132 = getelementptr inbounds i8, i8* %131, i64 0
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = load i8*, i8** %25, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 12
  %137 = getelementptr inbounds i8, i8* %136, i64 1
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl i32 %139, 8
  %141 = or i32 %134, %140
  %142 = load i8*, i8** %25, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 14
  %144 = getelementptr inbounds i8, i8* %143, i64 0
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = load i8*, i8** %25, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 14
  %149 = getelementptr inbounds i8, i8* %148, i64 1
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = shl i32 %151, 8
  %153 = or i32 %146, %152
  %154 = call i64 @mz_zip_dos_to_time_t(i32 noundef %141, i32 noundef %153)
  %155 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %156 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %155, i32 0, i32 18
  store i64 %154, i64* %156, align 8
  %157 = load i8*, i8** %25, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 16
  %159 = getelementptr inbounds i8, i8* %158, i64 0
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = load i8*, i8** %25, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 16
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = shl i32 %166, 8
  %168 = or i32 %161, %167
  %169 = load i8*, i8** %25, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 16
  %171 = getelementptr inbounds i8, i8* %170, i64 2
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl i32 %173, 16
  %175 = or i32 %168, %174
  %176 = load i8*, i8** %25, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 16
  %178 = getelementptr inbounds i8, i8* %177, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = shl i32 %180, 24
  %182 = or i32 %175, %181
  %183 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %184 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %183, i32 0, i32 6
  store i32 %182, i32* %184, align 8
  %185 = load i8*, i8** %25, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 20
  %187 = getelementptr inbounds i8, i8* %186, i64 0
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = load i8*, i8** %25, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 20
  %192 = getelementptr inbounds i8, i8* %191, i64 1
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = shl i32 %194, 8
  %196 = or i32 %189, %195
  %197 = load i8*, i8** %25, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 20
  %199 = getelementptr inbounds i8, i8* %198, i64 2
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = shl i32 %201, 16
  %203 = or i32 %196, %202
  %204 = load i8*, i8** %25, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 20
  %206 = getelementptr inbounds i8, i8* %205, i64 3
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = shl i32 %208, 24
  %210 = or i32 %203, %209
  %211 = zext i32 %210 to i64
  %212 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %213 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %212, i32 0, i32 7
  store i64 %211, i64* %213, align 8
  %214 = load i8*, i8** %25, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 24
  %216 = getelementptr inbounds i8, i8* %215, i64 0
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = load i8*, i8** %25, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 24
  %221 = getelementptr inbounds i8, i8* %220, i64 1
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = shl i32 %223, 8
  %225 = or i32 %218, %224
  %226 = load i8*, i8** %25, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 24
  %228 = getelementptr inbounds i8, i8* %227, i64 2
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = shl i32 %230, 16
  %232 = or i32 %225, %231
  %233 = load i8*, i8** %25, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 24
  %235 = getelementptr inbounds i8, i8* %234, i64 3
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = shl i32 %237, 24
  %239 = or i32 %232, %238
  %240 = zext i32 %239 to i64
  %241 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %242 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %241, i32 0, i32 8
  store i64 %240, i64* %242, align 8
  %243 = load i8*, i8** %25, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 36
  %245 = getelementptr inbounds i8, i8* %244, i64 0
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = load i8*, i8** %25, align 8
  %249 = getelementptr inbounds i8, i8* %248, i64 36
  %250 = getelementptr inbounds i8, i8* %249, i64 1
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = shl i32 %252, 8
  %254 = or i32 %247, %253
  %255 = trunc i32 %254 to i16
  %256 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %257 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %256, i32 0, i32 9
  store i16 %255, i16* %257, align 8
  %258 = load i8*, i8** %25, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 38
  %260 = getelementptr inbounds i8, i8* %259, i64 0
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  %263 = load i8*, i8** %25, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 38
  %265 = getelementptr inbounds i8, i8* %264, i64 1
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = shl i32 %267, 8
  %269 = or i32 %262, %268
  %270 = load i8*, i8** %25, align 8
  %271 = getelementptr inbounds i8, i8* %270, i64 38
  %272 = getelementptr inbounds i8, i8* %271, i64 2
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i32
  %275 = shl i32 %274, 16
  %276 = or i32 %269, %275
  %277 = load i8*, i8** %25, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 38
  %279 = getelementptr inbounds i8, i8* %278, i64 3
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = shl i32 %281, 24
  %283 = or i32 %276, %282
  %284 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %285 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %284, i32 0, i32 10
  store i32 %283, i32* %285, align 4
  %286 = load i8*, i8** %25, align 8
  %287 = getelementptr inbounds i8, i8* %286, i64 42
  %288 = getelementptr inbounds i8, i8* %287, i64 0
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = load i8*, i8** %25, align 8
  %292 = getelementptr inbounds i8, i8* %291, i64 42
  %293 = getelementptr inbounds i8, i8* %292, i64 1
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = shl i32 %295, 8
  %297 = or i32 %290, %296
  %298 = load i8*, i8** %25, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 42
  %300 = getelementptr inbounds i8, i8* %299, i64 2
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = shl i32 %302, 16
  %304 = or i32 %297, %303
  %305 = load i8*, i8** %25, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 42
  %307 = getelementptr inbounds i8, i8* %306, i64 3
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = shl i32 %309, 24
  %311 = or i32 %304, %310
  %312 = zext i32 %311 to i64
  %313 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %314 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %313, i32 0, i32 11
  store i64 %312, i64* %314, align 8
  %315 = load i8*, i8** %25, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 28
  %317 = getelementptr inbounds i8, i8* %316, i64 0
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i32
  %320 = load i8*, i8** %25, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 28
  %322 = getelementptr inbounds i8, i8* %321, i64 1
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = shl i32 %324, 8
  %326 = or i32 %319, %325
  store i32 %326, i32* %24, align 4
  %327 = load i32, i32* %24, align 4
  %328 = icmp ult i32 %327, 511
  br i1 %328, label %329, label %331

329:                                              ; preds = %52
  %330 = load i32, i32* %24, align 4
  br label %332

331:                                              ; preds = %52
  br label %332

332:                                              ; preds = %331, %329
  %333 = phi i32 [ %330, %329 ], [ 511, %331 ]
  store i32 %333, i32* %24, align 4
  %334 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %335 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %334, i32 0, i32 16
  %336 = getelementptr inbounds [512 x i8], [512 x i8]* %335, i64 0, i64 0
  %337 = load i8*, i8** %25, align 8
  %338 = getelementptr inbounds i8, i8* %337, i64 46
  %339 = load i32, i32* %24, align 4
  %340 = zext i32 %339 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %336, i8* align 1 %338, i64 %340, i1 false)
  %341 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %342 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %341, i32 0, i32 16
  %343 = load i32, i32* %24, align 4
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds [512 x i8], [512 x i8]* %342, i64 0, i64 %344
  store i8 0, i8* %345, align 1
  %346 = load i8*, i8** %25, align 8
  %347 = getelementptr inbounds i8, i8* %346, i64 32
  %348 = getelementptr inbounds i8, i8* %347, i64 0
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  %351 = load i8*, i8** %25, align 8
  %352 = getelementptr inbounds i8, i8* %351, i64 32
  %353 = getelementptr inbounds i8, i8* %352, i64 1
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = shl i32 %355, 8
  %357 = or i32 %350, %356
  store i32 %357, i32* %24, align 4
  %358 = load i32, i32* %24, align 4
  %359 = icmp ult i32 %358, 511
  br i1 %359, label %360, label %362

360:                                              ; preds = %332
  %361 = load i32, i32* %24, align 4
  br label %363

362:                                              ; preds = %332
  br label %363

363:                                              ; preds = %362, %360
  %364 = phi i32 [ %361, %360 ], [ 511, %362 ]
  store i32 %364, i32* %24, align 4
  %365 = load i32, i32* %24, align 4
  %366 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %367 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %366, i32 0, i32 12
  store i32 %365, i32* %367, align 8
  %368 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %369 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %368, i32 0, i32 17
  %370 = getelementptr inbounds [512 x i8], [512 x i8]* %369, i64 0, i64 0
  %371 = load i8*, i8** %25, align 8
  %372 = getelementptr inbounds i8, i8* %371, i64 46
  %373 = load i8*, i8** %25, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 28
  %375 = getelementptr inbounds i8, i8* %374, i64 0
  %376 = load i8, i8* %375, align 1
  %377 = zext i8 %376 to i32
  %378 = load i8*, i8** %25, align 8
  %379 = getelementptr inbounds i8, i8* %378, i64 28
  %380 = getelementptr inbounds i8, i8* %379, i64 1
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i32
  %383 = shl i32 %382, 8
  %384 = or i32 %377, %383
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds i8, i8* %372, i64 %385
  %387 = load i8*, i8** %25, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 30
  %389 = getelementptr inbounds i8, i8* %388, i64 0
  %390 = load i8, i8* %389, align 1
  %391 = zext i8 %390 to i32
  %392 = load i8*, i8** %25, align 8
  %393 = getelementptr inbounds i8, i8* %392, i64 30
  %394 = getelementptr inbounds i8, i8* %393, i64 1
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i32
  %397 = shl i32 %396, 8
  %398 = or i32 %391, %397
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds i8, i8* %386, i64 %399
  %401 = load i32, i32* %24, align 4
  %402 = zext i32 %401 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %370, i8* align 1 %400, i64 %402, i1 false)
  %403 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %404 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %403, i32 0, i32 17
  %405 = load i32, i32* %24, align 4
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [512 x i8], [512 x i8]* %404, i64 0, i64 %406
  store i8 0, i8* %407, align 1
  %408 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  %409 = load i32, i32* %20, align 4
  %410 = call i32 @mz_zip_reader_is_file_a_directory(%struct.mz_zip_archive* noundef %408, i32 noundef %409)
  %411 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %412 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %411, i32 0, i32 13
  store i32 %410, i32* %412, align 4
  %413 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  %414 = load i32, i32* %20, align 4
  %415 = call i32 @mz_zip_reader_is_file_encrypted(%struct.mz_zip_archive* noundef %413, i32 noundef %414)
  %416 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %417 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %416, i32 0, i32 14
  store i32 %415, i32* %417, align 8
  %418 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  %419 = load i32, i32* %20, align 4
  %420 = call i32 @mz_zip_reader_is_file_supported(%struct.mz_zip_archive* noundef %418, i32 noundef %419)
  %421 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %422 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %421, i32 0, i32 15
  store i32 %420, i32* %422, align 4
  %423 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %424 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %423, i32 0, i32 7
  %425 = load i64, i64* %424, align 8
  %426 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %427 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %426, i32 0, i32 8
  %428 = load i64, i64* %427, align 8
  %429 = icmp ugt i64 %425, %428
  br i1 %429, label %430, label %434

430:                                              ; preds = %363
  %431 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %432 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %431, i32 0, i32 7
  %433 = load i64, i64* %432, align 8
  br label %438

434:                                              ; preds = %363
  %435 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %436 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %435, i32 0, i32 8
  %437 = load i64, i64* %436, align 8
  br label %438

438:                                              ; preds = %434, %430
  %439 = phi i64 [ %433, %430 ], [ %437, %434 ]
  %440 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %441 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %440, i32 0, i32 11
  %442 = load i64, i64* %441, align 8
  %443 = icmp ugt i64 %439, %442
  br i1 %443, label %444, label %462

444:                                              ; preds = %438
  %445 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %446 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %445, i32 0, i32 7
  %447 = load i64, i64* %446, align 8
  %448 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %449 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %448, i32 0, i32 8
  %450 = load i64, i64* %449, align 8
  %451 = icmp ugt i64 %447, %450
  br i1 %451, label %452, label %456

452:                                              ; preds = %444
  %453 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %454 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %453, i32 0, i32 7
  %455 = load i64, i64* %454, align 8
  br label %460

456:                                              ; preds = %444
  %457 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %458 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %457, i32 0, i32 8
  %459 = load i64, i64* %458, align 8
  br label %460

460:                                              ; preds = %456, %452
  %461 = phi i64 [ %455, %452 ], [ %459, %456 ]
  br label %466

462:                                              ; preds = %438
  %463 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %464 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %463, i32 0, i32 11
  %465 = load i64, i64* %464, align 8
  br label %466

466:                                              ; preds = %462, %460
  %467 = phi i64 [ %461, %460 ], [ %465, %462 ]
  %468 = icmp eq i64 %467, 4294967295
  br i1 %468, label %469, label %819

469:                                              ; preds = %466
  %470 = load i8*, i8** %25, align 8
  %471 = getelementptr inbounds i8, i8* %470, i64 30
  %472 = getelementptr inbounds i8, i8* %471, i64 0
  %473 = load i8, i8* %472, align 1
  %474 = zext i8 %473 to i32
  %475 = load i8*, i8** %25, align 8
  %476 = getelementptr inbounds i8, i8* %475, i64 30
  %477 = getelementptr inbounds i8, i8* %476, i64 1
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i32
  %480 = shl i32 %479, 8
  %481 = or i32 %474, %480
  store i32 %481, i32* %26, align 4
  %482 = load i32, i32* %26, align 4
  %483 = icmp ne i32 %482, 0
  br i1 %483, label %484, label %818

484:                                              ; preds = %469
  %485 = load i8*, i8** %25, align 8
  %486 = getelementptr inbounds i8, i8* %485, i64 46
  %487 = load i8*, i8** %25, align 8
  %488 = getelementptr inbounds i8, i8* %487, i64 28
  %489 = getelementptr inbounds i8, i8* %488, i64 0
  %490 = load i8, i8* %489, align 1
  %491 = zext i8 %490 to i32
  %492 = load i8*, i8** %25, align 8
  %493 = getelementptr inbounds i8, i8* %492, i64 28
  %494 = getelementptr inbounds i8, i8* %493, i64 1
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i32
  %497 = shl i32 %496, 8
  %498 = or i32 %491, %497
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %486, i64 %499
  store i8* %500, i8** %27, align 8
  br label %501

501:                                              ; preds = %814, %484
  %502 = load i32, i32* %26, align 4
  %503 = zext i32 %502 to i64
  %504 = icmp ult i64 %503, 4
  br i1 %504, label %505, label %514

505:                                              ; preds = %501
  %506 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  store %struct.mz_zip_archive* %506, %struct.mz_zip_archive** %8, align 8
  store i32 9, i32* %9, align 4
  %507 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %508 = icmp ne %struct.mz_zip_archive* %507, null
  br i1 %508, label %509, label %513

509:                                              ; preds = %505
  %510 = load i32, i32* %9, align 4
  %511 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %512 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %511, i32 0, i32 5
  store i32 %510, i32* %512, align 4
  br label %513

513:                                              ; preds = %505, %509
  store i32 0, i32* %18, align 4
  br label %820

514:                                              ; preds = %501
  %515 = load i8*, i8** %27, align 8
  %516 = getelementptr inbounds i8, i8* %515, i64 0
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i32
  %519 = load i8*, i8** %27, align 8
  %520 = getelementptr inbounds i8, i8* %519, i64 1
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = shl i32 %522, 8
  %524 = or i32 %518, %523
  store i32 %524, i32* %28, align 4
  %525 = load i8*, i8** %27, align 8
  %526 = getelementptr inbounds i8, i8* %525, i64 2
  %527 = getelementptr inbounds i8, i8* %526, i64 0
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i32
  %530 = load i8*, i8** %27, align 8
  %531 = getelementptr inbounds i8, i8* %530, i64 2
  %532 = getelementptr inbounds i8, i8* %531, i64 1
  %533 = load i8, i8* %532, align 1
  %534 = zext i8 %533 to i32
  %535 = shl i32 %534, 8
  %536 = or i32 %529, %535
  store i32 %536, i32* %29, align 4
  %537 = load i32, i32* %29, align 4
  %538 = zext i32 %537 to i64
  %539 = add i64 %538, 4
  %540 = load i32, i32* %26, align 4
  %541 = zext i32 %540 to i64
  %542 = icmp ugt i64 %539, %541
  br i1 %542, label %543, label %552

543:                                              ; preds = %514
  %544 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  store %struct.mz_zip_archive* %544, %struct.mz_zip_archive** %10, align 8
  store i32 9, i32* %11, align 4
  %545 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %546 = icmp ne %struct.mz_zip_archive* %545, null
  br i1 %546, label %547, label %551

547:                                              ; preds = %543
  %548 = load i32, i32* %11, align 4
  %549 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %550 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %549, i32 0, i32 5
  store i32 %548, i32* %550, align 4
  br label %551

551:                                              ; preds = %543, %547
  store i32 0, i32* %18, align 4
  br label %820

552:                                              ; preds = %514
  %553 = load i32, i32* %28, align 4
  %554 = icmp eq i32 %553, 1
  br i1 %554, label %555, label %801

555:                                              ; preds = %552
  %556 = load i8*, i8** %27, align 8
  %557 = getelementptr inbounds i8, i8* %556, i64 4
  store i8* %557, i8** %30, align 8
  %558 = load i32, i32* %29, align 4
  store i32 %558, i32* %31, align 4
  %559 = load i32*, i32** %23, align 8
  %560 = icmp ne i32* %559, null
  br i1 %560, label %561, label %563

561:                                              ; preds = %555
  %562 = load i32*, i32** %23, align 8
  store i32 1, i32* %562, align 4
  br label %563

563:                                              ; preds = %561, %555
  %564 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %565 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %564, i32 0, i32 8
  %566 = load i64, i64* %565, align 8
  %567 = icmp eq i64 %566, 4294967295
  br i1 %567, label %568, label %642

568:                                              ; preds = %563
  %569 = load i32, i32* %31, align 4
  %570 = zext i32 %569 to i64
  %571 = icmp ult i64 %570, 8
  br i1 %571, label %572, label %581

572:                                              ; preds = %568
  %573 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  store %struct.mz_zip_archive* %573, %struct.mz_zip_archive** %12, align 8
  store i32 9, i32* %13, align 4
  %574 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %575 = icmp ne %struct.mz_zip_archive* %574, null
  br i1 %575, label %576, label %580

576:                                              ; preds = %572
  %577 = load i32, i32* %13, align 4
  %578 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %579 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %578, i32 0, i32 5
  store i32 %577, i32* %579, align 4
  br label %580

580:                                              ; preds = %572, %576
  store i32 0, i32* %18, align 4
  br label %820

581:                                              ; preds = %568
  %582 = load i8*, i8** %30, align 8
  %583 = getelementptr inbounds i8, i8* %582, i64 0
  %584 = load i8, i8* %583, align 1
  %585 = zext i8 %584 to i32
  %586 = load i8*, i8** %30, align 8
  %587 = getelementptr inbounds i8, i8* %586, i64 1
  %588 = load i8, i8* %587, align 1
  %589 = zext i8 %588 to i32
  %590 = shl i32 %589, 8
  %591 = or i32 %585, %590
  %592 = load i8*, i8** %30, align 8
  %593 = getelementptr inbounds i8, i8* %592, i64 2
  %594 = load i8, i8* %593, align 1
  %595 = zext i8 %594 to i32
  %596 = shl i32 %595, 16
  %597 = or i32 %591, %596
  %598 = load i8*, i8** %30, align 8
  %599 = getelementptr inbounds i8, i8* %598, i64 3
  %600 = load i8, i8* %599, align 1
  %601 = zext i8 %600 to i32
  %602 = shl i32 %601, 24
  %603 = or i32 %597, %602
  %604 = zext i32 %603 to i64
  %605 = load i8*, i8** %30, align 8
  %606 = getelementptr inbounds i8, i8* %605, i64 4
  %607 = getelementptr inbounds i8, i8* %606, i64 0
  %608 = load i8, i8* %607, align 1
  %609 = zext i8 %608 to i32
  %610 = load i8*, i8** %30, align 8
  %611 = getelementptr inbounds i8, i8* %610, i64 4
  %612 = getelementptr inbounds i8, i8* %611, i64 1
  %613 = load i8, i8* %612, align 1
  %614 = zext i8 %613 to i32
  %615 = shl i32 %614, 8
  %616 = or i32 %609, %615
  %617 = load i8*, i8** %30, align 8
  %618 = getelementptr inbounds i8, i8* %617, i64 4
  %619 = getelementptr inbounds i8, i8* %618, i64 2
  %620 = load i8, i8* %619, align 1
  %621 = zext i8 %620 to i32
  %622 = shl i32 %621, 16
  %623 = or i32 %616, %622
  %624 = load i8*, i8** %30, align 8
  %625 = getelementptr inbounds i8, i8* %624, i64 4
  %626 = getelementptr inbounds i8, i8* %625, i64 3
  %627 = load i8, i8* %626, align 1
  %628 = zext i8 %627 to i32
  %629 = shl i32 %628, 24
  %630 = or i32 %623, %629
  %631 = zext i32 %630 to i64
  %632 = shl i64 %631, 32
  %633 = or i64 %604, %632
  %634 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %635 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %634, i32 0, i32 8
  store i64 %633, i64* %635, align 8
  %636 = load i8*, i8** %30, align 8
  %637 = getelementptr inbounds i8, i8* %636, i64 8
  store i8* %637, i8** %30, align 8
  %638 = load i32, i32* %31, align 4
  %639 = zext i32 %638 to i64
  %640 = sub i64 %639, 8
  %641 = trunc i64 %640 to i32
  store i32 %641, i32* %31, align 4
  br label %642

642:                                              ; preds = %581, %563
  %643 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %644 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %643, i32 0, i32 7
  %645 = load i64, i64* %644, align 8
  %646 = icmp eq i64 %645, 4294967295
  br i1 %646, label %647, label %721

647:                                              ; preds = %642
  %648 = load i32, i32* %31, align 4
  %649 = zext i32 %648 to i64
  %650 = icmp ult i64 %649, 8
  br i1 %650, label %651, label %660

651:                                              ; preds = %647
  %652 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  store %struct.mz_zip_archive* %652, %struct.mz_zip_archive** %14, align 8
  store i32 9, i32* %15, align 4
  %653 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %654 = icmp ne %struct.mz_zip_archive* %653, null
  br i1 %654, label %655, label %659

655:                                              ; preds = %651
  %656 = load i32, i32* %15, align 4
  %657 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %658 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %657, i32 0, i32 5
  store i32 %656, i32* %658, align 4
  br label %659

659:                                              ; preds = %651, %655
  store i32 0, i32* %18, align 4
  br label %820

660:                                              ; preds = %647
  %661 = load i8*, i8** %30, align 8
  %662 = getelementptr inbounds i8, i8* %661, i64 0
  %663 = load i8, i8* %662, align 1
  %664 = zext i8 %663 to i32
  %665 = load i8*, i8** %30, align 8
  %666 = getelementptr inbounds i8, i8* %665, i64 1
  %667 = load i8, i8* %666, align 1
  %668 = zext i8 %667 to i32
  %669 = shl i32 %668, 8
  %670 = or i32 %664, %669
  %671 = load i8*, i8** %30, align 8
  %672 = getelementptr inbounds i8, i8* %671, i64 2
  %673 = load i8, i8* %672, align 1
  %674 = zext i8 %673 to i32
  %675 = shl i32 %674, 16
  %676 = or i32 %670, %675
  %677 = load i8*, i8** %30, align 8
  %678 = getelementptr inbounds i8, i8* %677, i64 3
  %679 = load i8, i8* %678, align 1
  %680 = zext i8 %679 to i32
  %681 = shl i32 %680, 24
  %682 = or i32 %676, %681
  %683 = zext i32 %682 to i64
  %684 = load i8*, i8** %30, align 8
  %685 = getelementptr inbounds i8, i8* %684, i64 4
  %686 = getelementptr inbounds i8, i8* %685, i64 0
  %687 = load i8, i8* %686, align 1
  %688 = zext i8 %687 to i32
  %689 = load i8*, i8** %30, align 8
  %690 = getelementptr inbounds i8, i8* %689, i64 4
  %691 = getelementptr inbounds i8, i8* %690, i64 1
  %692 = load i8, i8* %691, align 1
  %693 = zext i8 %692 to i32
  %694 = shl i32 %693, 8
  %695 = or i32 %688, %694
  %696 = load i8*, i8** %30, align 8
  %697 = getelementptr inbounds i8, i8* %696, i64 4
  %698 = getelementptr inbounds i8, i8* %697, i64 2
  %699 = load i8, i8* %698, align 1
  %700 = zext i8 %699 to i32
  %701 = shl i32 %700, 16
  %702 = or i32 %695, %701
  %703 = load i8*, i8** %30, align 8
  %704 = getelementptr inbounds i8, i8* %703, i64 4
  %705 = getelementptr inbounds i8, i8* %704, i64 3
  %706 = load i8, i8* %705, align 1
  %707 = zext i8 %706 to i32
  %708 = shl i32 %707, 24
  %709 = or i32 %702, %708
  %710 = zext i32 %709 to i64
  %711 = shl i64 %710, 32
  %712 = or i64 %683, %711
  %713 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %714 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %713, i32 0, i32 7
  store i64 %712, i64* %714, align 8
  %715 = load i8*, i8** %30, align 8
  %716 = getelementptr inbounds i8, i8* %715, i64 8
  store i8* %716, i8** %30, align 8
  %717 = load i32, i32* %31, align 4
  %718 = zext i32 %717 to i64
  %719 = sub i64 %718, 8
  %720 = trunc i64 %719 to i32
  store i32 %720, i32* %31, align 4
  br label %721

721:                                              ; preds = %660, %642
  %722 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %723 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %722, i32 0, i32 11
  %724 = load i64, i64* %723, align 8
  %725 = icmp eq i64 %724, 4294967295
  br i1 %725, label %726, label %800

726:                                              ; preds = %721
  %727 = load i32, i32* %31, align 4
  %728 = zext i32 %727 to i64
  %729 = icmp ult i64 %728, 8
  br i1 %729, label %730, label %739

730:                                              ; preds = %726
  %731 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %19, align 8
  store %struct.mz_zip_archive* %731, %struct.mz_zip_archive** %16, align 8
  store i32 9, i32* %17, align 4
  %732 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %733 = icmp ne %struct.mz_zip_archive* %732, null
  br i1 %733, label %734, label %738

734:                                              ; preds = %730
  %735 = load i32, i32* %17, align 4
  %736 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %737 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %736, i32 0, i32 5
  store i32 %735, i32* %737, align 4
  br label %738

738:                                              ; preds = %730, %734
  store i32 0, i32* %18, align 4
  br label %820

739:                                              ; preds = %726
  %740 = load i8*, i8** %30, align 8
  %741 = getelementptr inbounds i8, i8* %740, i64 0
  %742 = load i8, i8* %741, align 1
  %743 = zext i8 %742 to i32
  %744 = load i8*, i8** %30, align 8
  %745 = getelementptr inbounds i8, i8* %744, i64 1
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i32
  %748 = shl i32 %747, 8
  %749 = or i32 %743, %748
  %750 = load i8*, i8** %30, align 8
  %751 = getelementptr inbounds i8, i8* %750, i64 2
  %752 = load i8, i8* %751, align 1
  %753 = zext i8 %752 to i32
  %754 = shl i32 %753, 16
  %755 = or i32 %749, %754
  %756 = load i8*, i8** %30, align 8
  %757 = getelementptr inbounds i8, i8* %756, i64 3
  %758 = load i8, i8* %757, align 1
  %759 = zext i8 %758 to i32
  %760 = shl i32 %759, 24
  %761 = or i32 %755, %760
  %762 = zext i32 %761 to i64
  %763 = load i8*, i8** %30, align 8
  %764 = getelementptr inbounds i8, i8* %763, i64 4
  %765 = getelementptr inbounds i8, i8* %764, i64 0
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i32
  %768 = load i8*, i8** %30, align 8
  %769 = getelementptr inbounds i8, i8* %768, i64 4
  %770 = getelementptr inbounds i8, i8* %769, i64 1
  %771 = load i8, i8* %770, align 1
  %772 = zext i8 %771 to i32
  %773 = shl i32 %772, 8
  %774 = or i32 %767, %773
  %775 = load i8*, i8** %30, align 8
  %776 = getelementptr inbounds i8, i8* %775, i64 4
  %777 = getelementptr inbounds i8, i8* %776, i64 2
  %778 = load i8, i8* %777, align 1
  %779 = zext i8 %778 to i32
  %780 = shl i32 %779, 16
  %781 = or i32 %774, %780
  %782 = load i8*, i8** %30, align 8
  %783 = getelementptr inbounds i8, i8* %782, i64 4
  %784 = getelementptr inbounds i8, i8* %783, i64 3
  %785 = load i8, i8* %784, align 1
  %786 = zext i8 %785 to i32
  %787 = shl i32 %786, 24
  %788 = or i32 %781, %787
  %789 = zext i32 %788 to i64
  %790 = shl i64 %789, 32
  %791 = or i64 %762, %790
  %792 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %22, align 8
  %793 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %792, i32 0, i32 11
  store i64 %791, i64* %793, align 8
  %794 = load i8*, i8** %30, align 8
  %795 = getelementptr inbounds i8, i8* %794, i64 8
  store i8* %795, i8** %30, align 8
  %796 = load i32, i32* %31, align 4
  %797 = zext i32 %796 to i64
  %798 = sub i64 %797, 8
  %799 = trunc i64 %798 to i32
  store i32 %799, i32* %31, align 4
  br label %800

800:                                              ; preds = %739, %721
  br label %817

801:                                              ; preds = %552
  %802 = load i32, i32* %29, align 4
  %803 = zext i32 %802 to i64
  %804 = add i64 4, %803
  %805 = load i8*, i8** %27, align 8
  %806 = getelementptr inbounds i8, i8* %805, i64 %804
  store i8* %806, i8** %27, align 8
  %807 = load i32, i32* %26, align 4
  %808 = zext i32 %807 to i64
  %809 = sub i64 %808, 4
  %810 = load i32, i32* %29, align 4
  %811 = zext i32 %810 to i64
  %812 = sub i64 %809, %811
  %813 = trunc i64 %812 to i32
  store i32 %813, i32* %26, align 4
  br label %814

814:                                              ; preds = %801
  %815 = load i32, i32* %26, align 4
  %816 = icmp ne i32 %815, 0
  br i1 %816, label %501, label %817, !llvm.loop !121

817:                                              ; preds = %814, %800
  br label %818

818:                                              ; preds = %817, %469
  br label %819

819:                                              ; preds = %818, %466
  store i32 1, i32* %18, align 4
  br label %820

820:                                              ; preds = %819, %738, %659, %580, %551, %513, %51
  %821 = load i32, i32* %18, align 4
  ret i32 %821
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_compute_crc32_callback(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = bitcast i8* %10 to i32*
  store i32* %11, i32** %9, align 8
  %12 = load i64, i64* %6, align 8
  %13 = load i32*, i32** %9, align 8
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = load i8*, i8** %7, align 8
  %17 = load i64, i64* %8, align 8
  %18 = call i64 @mz_crc32(i64 noundef %15, i8* noundef %16, i64 noundef %17)
  %19 = trunc i64 %18 to i32
  %20 = load i32*, i32** %9, align 8
  store i32 %19, i32* %20, align 4
  %21 = load i64, i64* %8, align 8
  ret i64 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_validate_archive(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.mz_zip_archive_file_stat, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %14, align 8
  store i32 %1, i32* %15, align 4
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %21 = icmp ne %struct.mz_zip_archive* %20, null
  br i1 %21, label %22, label %42

22:                                               ; preds = %2
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %23, i32 0, i32 15
  %25 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %24, align 8
  %26 = icmp ne %struct.mz_zip_internal_state_tag* %25, null
  br i1 %26, label %27, label %42

27:                                               ; preds = %22
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %28, i32 0, i32 7
  %30 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %29, align 8
  %31 = icmp ne i8* (i8*, i64, i64)* %30, null
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %33, i32 0, i32 8
  %35 = load void (i8*, i8*)*, void (i8*, i8*)** %34, align 8
  %36 = icmp ne void (i8*, i8*)* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %38, i32 0, i32 11
  %40 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %39, align 8
  %41 = icmp ne i64 (i8*, i64, i8*, i64)* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %37, %32, %27, %22, %2
  %43 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %43, %struct.mz_zip_archive** %3, align 8
  store i32 24, i32* %4, align 4
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %45 = icmp ne %struct.mz_zip_archive* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = load i32, i32* %4, align 4
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %48, i32 0, i32 5
  store i32 %47, i32* %49, align 4
  br label %50

50:                                               ; preds = %42, %46
  store i32 0, i32* %13, align 4
  br label %154

51:                                               ; preds = %37
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %52, i32 0, i32 15
  %54 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %53, align 8
  store %struct.mz_zip_internal_state_tag* %54, %struct.mz_zip_internal_state_tag** %16, align 8
  %55 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %55, i32 0, i32 4
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %88, label %59

59:                                               ; preds = %51
  %60 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %61 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %60, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp ugt i32 %62, 65535
  br i1 %63, label %64, label %73

64:                                               ; preds = %59
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %65, %struct.mz_zip_archive** %5, align 8
  store i32 29, i32* %6, align 4
  %66 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %67 = icmp ne %struct.mz_zip_archive* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = load i32, i32* %6, align 4
  %70 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %70, i32 0, i32 5
  store i32 %69, i32* %71, align 4
  br label %72

72:                                               ; preds = %64, %68
  store i32 0, i32* %13, align 4
  br label %154

73:                                               ; preds = %59
  %74 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %74, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp ugt i64 %76, 4294967295
  br i1 %77, label %78, label %87

78:                                               ; preds = %73
  %79 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %79, %struct.mz_zip_archive** %7, align 8
  store i32 29, i32* %8, align 4
  %80 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %81 = icmp ne %struct.mz_zip_archive* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = load i32, i32* %8, align 4
  %84 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %84, i32 0, i32 5
  store i32 %83, i32* %85, align 4
  br label %86

86:                                               ; preds = %78, %82
  store i32 0, i32* %13, align 4
  br label %154

87:                                               ; preds = %73
  br label %104

88:                                               ; preds = %51
  %89 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %90 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %90, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = icmp uge i64 %92, 4294967295
  br i1 %93, label %94, label %103

94:                                               ; preds = %88
  %95 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %95, %struct.mz_zip_archive** %9, align 8
  store i32 29, i32* %10, align 4
  %96 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %97 = icmp ne %struct.mz_zip_archive* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = load i32, i32* %10, align 4
  %100 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %100, i32 0, i32 5
  store i32 %99, i32* %101, align 4
  br label %102

102:                                              ; preds = %94, %98
  store i32 0, i32* %13, align 4
  br label %154

103:                                              ; preds = %88
  br label %104

104:                                              ; preds = %103, %87
  store i32 0, i32* %17, align 4
  br label %105

105:                                              ; preds = %150, %104
  %106 = load i32, i32* %17, align 4
  %107 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %108 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %107, i32 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = icmp ult i32 %106, %109
  br i1 %110, label %111, label %153

111:                                              ; preds = %105
  %112 = load i32, i32* %15, align 4
  %113 = and i32 4096, %112
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %142

115:                                              ; preds = %111
  %116 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %117 = load i32, i32* %17, align 4
  %118 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive* noundef %116, i32 noundef %117, %struct.mz_zip_archive_file_stat* noundef %19)
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %115
  store i32 0, i32* %13, align 4
  br label %154

121:                                              ; preds = %115
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %19, i32 0, i32 16
  %124 = getelementptr inbounds [512 x i8], [512 x i8]* %123, i64 0, i64 0
  %125 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %122, i8* noundef %124, i8* noundef null, i32 noundef 0, i32* noundef %18)
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %121
  store i32 0, i32* %13, align 4
  br label %154

128:                                              ; preds = %121
  %129 = load i32, i32* %18, align 4
  %130 = load i32, i32* %17, align 4
  %131 = icmp ne i32 %129, %130
  br i1 %131, label %132, label %141

132:                                              ; preds = %128
  %133 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %133, %struct.mz_zip_archive** %11, align 8
  store i32 30, i32* %12, align 4
  %134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %135 = icmp ne %struct.mz_zip_archive* %134, null
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = load i32, i32* %12, align 4
  %138 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %139 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %138, i32 0, i32 5
  store i32 %137, i32* %139, align 4
  br label %140

140:                                              ; preds = %132, %136
  store i32 0, i32* %13, align 4
  br label %154

141:                                              ; preds = %128
  br label %142

142:                                              ; preds = %141, %111
  %143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %144 = load i32, i32* %17, align 4
  %145 = load i32, i32* %15, align 4
  %146 = call i32 @mz_zip_validate_file(%struct.mz_zip_archive* noundef %143, i32 noundef %144, i32 noundef %145)
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %149, label %148

148:                                              ; preds = %142
  store i32 0, i32* %13, align 4
  br label %154

149:                                              ; preds = %142
  br label %150

150:                                              ; preds = %149
  %151 = load i32, i32* %17, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %17, align 4
  br label %105, !llvm.loop !122

153:                                              ; preds = %105
  store i32 1, i32* %13, align 4
  br label %154

154:                                              ; preds = %153, %148, %140, %127, %120, %102, %86, %72, %50
  %155 = load i32, i32* %13, align 4
  ret i32 %155
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_validate_mem_archive(i8* noundef %0, i64 noundef %1, i32 noundef %2, i32* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32 1, i32* %10, align 4
  store i32 0, i32* %12, align 4
  %13 = load i8*, i8** %6, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = load i64, i64* %7, align 8
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %15, %4
  %19 = load i32*, i32** %9, align 8
  %20 = icmp ne i32* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load i32*, i32** %9, align 8
  store i32 24, i32* %22, align 4
  br label %23

23:                                               ; preds = %21, %18
  store i32 0, i32* %5, align 4
  br label %64

24:                                               ; preds = %15
  call void @mz_zip_zero_struct(%struct.mz_zip_archive* noundef %11)
  %25 = load i8*, i8** %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = load i32, i32* %8, align 4
  %28 = call i32 @mz_zip_reader_init_mem(%struct.mz_zip_archive* noundef %11, i8* noundef %25, i64 noundef %26, i32 noundef %27)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = load i32*, i32** %9, align 8
  %32 = icmp ne i32* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %11, i32 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = load i32*, i32** %9, align 8
  store i32 %35, i32* %36, align 4
  br label %37

37:                                               ; preds = %33, %30
  store i32 0, i32* %5, align 4
  br label %64

38:                                               ; preds = %24
  %39 = load i32, i32* %8, align 4
  %40 = call i32 @mz_zip_validate_archive(%struct.mz_zip_archive* noundef %11, i32 noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %11, i32 0, i32 5
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %12, align 4
  store i32 0, i32* %10, align 4
  br label %45

45:                                               ; preds = %42, %38
  %46 = load i32, i32* %10, align 4
  %47 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %11, i32 noundef %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %12, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %11, i32 0, i32 5
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %12, align 4
  br label %55

55:                                               ; preds = %52, %49
  store i32 0, i32* %10, align 4
  br label %56

56:                                               ; preds = %55, %45
  %57 = load i32*, i32** %9, align 8
  %58 = icmp ne i32* %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load i32, i32* %12, align 4
  %61 = load i32*, i32** %9, align 8
  store i32 %60, i32* %61, align 4
  br label %62

62:                                               ; preds = %59, %56
  %63 = load i32, i32* %10, align 4
  store i32 %63, i32* %5, align 4
  br label %64

64:                                               ; preds = %62, %37, %23
  %65 = load i32, i32* %5, align 4
  ret i32 %65
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_validate_file_archive(i8* noundef %0, i32 noundef %1, i32* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  store i32 1, i32* %8, align 4
  store i32 0, i32* %10, align 4
  %11 = load i8*, i8** %5, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = load i32*, i32** %7, align 8
  %15 = icmp ne i32* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load i32*, i32** %7, align 8
  store i32 24, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %13
  store i32 0, i32* %4, align 4
  br label %58

19:                                               ; preds = %3
  call void @mz_zip_zero_struct(%struct.mz_zip_archive* noundef %9)
  %20 = load i8*, i8** %5, align 8
  %21 = load i32, i32* %6, align 4
  %22 = call i32 @mz_zip_reader_init_file_v2(%struct.mz_zip_archive* noundef %9, i8* noundef %20, i32 noundef %21, i64 noundef 0, i64 noundef 0)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = load i32*, i32** %7, align 8
  %26 = icmp ne i32* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %9, i32 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = load i32*, i32** %7, align 8
  store i32 %29, i32* %30, align 4
  br label %31

31:                                               ; preds = %27, %24
  store i32 0, i32* %4, align 4
  br label %58

32:                                               ; preds = %19
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @mz_zip_validate_archive(%struct.mz_zip_archive* noundef %9, i32 noundef %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %9, i32 0, i32 5
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %10, align 4
  store i32 0, i32* %8, align 4
  br label %39

39:                                               ; preds = %36, %32
  %40 = load i32, i32* %8, align 4
  %41 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %9, i32 noundef %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = load i32, i32* %10, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %9, i32 0, i32 5
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %10, align 4
  br label %49

49:                                               ; preds = %46, %43
  store i32 0, i32* %8, align 4
  br label %50

50:                                               ; preds = %49, %39
  %51 = load i32*, i32** %7, align 8
  %52 = icmp ne i32* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load i32, i32* %10, align 4
  %55 = load i32*, i32** %7, align 8
  store i32 %54, i32* %55, align 4
  br label %56

56:                                               ; preds = %53, %50
  %57 = load i32, i32* %8, align 4
  store i32 %57, i32* %4, align 4
  br label %58

58:                                               ; preds = %56, %31, %18
  %59 = load i32, i32* %4, align 4
  ret i32 %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_v2(%struct.mz_zip_archive* noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.mz_zip_archive*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %13, align 8
  store i64 %1, i64* %14, align 8
  store i32 %2, i32* %15, align 4
  %17 = load i32, i32* %15, align 4
  %18 = and i32 %17, 16384
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  store i32 %20, i32* %16, align 4
  %21 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %22 = icmp ne %struct.mz_zip_archive* %21, null
  br i1 %22, label %23, label %38

23:                                               ; preds = %3
  %24 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %24, i32 0, i32 15
  %26 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %25, align 8
  %27 = icmp ne %struct.mz_zip_internal_state_tag* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %29, i32 0, i32 12
  %31 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %30, align 8
  %32 = icmp ne i64 (i8*, i64, i8*, i64)* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %33, %28, %23, %3
  %39 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  store %struct.mz_zip_archive* %39, %struct.mz_zip_archive** %4, align 8
  store i32 24, i32* %5, align 4
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %41 = icmp ne %struct.mz_zip_archive* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load i32, i32* %5, align 4
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %44, i32 0, i32 5
  store i32 %43, i32* %45, align 4
  br label %46

46:                                               ; preds = %38, %42
  store i32 0, i32* %12, align 4
  br label %177

47:                                               ; preds = %33
  %48 = load i32, i32* %15, align 4
  %49 = and i32 %48, 32768
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %66

51:                                               ; preds = %47
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %52, i32 0, i32 11
  %54 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %53, align 8
  %55 = icmp ne i64 (i8*, i64, i8*, i64)* %54, null
  br i1 %55, label %65, label %56

56:                                               ; preds = %51
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  store %struct.mz_zip_archive* %57, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %59 = icmp ne %struct.mz_zip_archive* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i32, i32* %7, align 4
  %62 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %62, i32 0, i32 5
  store i32 %61, i32* %63, align 4
  br label %64

64:                                               ; preds = %56, %60
  store i32 0, i32* %12, align 4
  br label %177

65:                                               ; preds = %51
  br label %66

66:                                               ; preds = %65, %47
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %67, i32 0, i32 6
  %69 = load i64, i64* %68, align 8
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %91

71:                                               ; preds = %66
  %72 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %72, i32 0, i32 6
  %74 = load i64, i64* %73, align 8
  %75 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %75, i32 0, i32 6
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %77, 1
  %79 = and i64 %74, %78
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %90

81:                                               ; preds = %71
  %82 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  store %struct.mz_zip_archive* %82, %struct.mz_zip_archive** %8, align 8
  store i32 24, i32* %9, align 4
  %83 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %84 = icmp ne %struct.mz_zip_archive* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = load i32, i32* %9, align 4
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %87, i32 0, i32 5
  store i32 %86, i32* %88, align 4
  br label %89

89:                                               ; preds = %81, %85
  store i32 0, i32* %12, align 4
  br label %177

90:                                               ; preds = %71
  br label %91

91:                                               ; preds = %90, %66
  %92 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %93 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %92, i32 0, i32 7
  %94 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %93, align 8
  %95 = icmp ne i8* (i8*, i64, i64)* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %91
  %97 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %98 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %97, i32 0, i32 7
  store i8* (i8*, i64, i64)* @miniz_def_alloc_func, i8* (i8*, i64, i64)** %98, align 8
  br label %99

99:                                               ; preds = %96, %91
  %100 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %100, i32 0, i32 8
  %102 = load void (i8*, i8*)*, void (i8*, i8*)** %101, align 8
  %103 = icmp ne void (i8*, i8*)* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %106 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %105, i32 0, i32 8
  store void (i8*, i8*)* @miniz_def_free_func, void (i8*, i8*)** %106, align 8
  br label %107

107:                                              ; preds = %104, %99
  %108 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %109 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %108, i32 0, i32 9
  %110 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %109, align 8
  %111 = icmp ne i8* (i8*, i8*, i64, i64)* %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %114 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %113, i32 0, i32 9
  store i8* (i8*, i8*, i64, i64)* @miniz_def_realloc_func, i8* (i8*, i8*, i64, i64)** %114, align 8
  br label %115

115:                                              ; preds = %112, %107
  %116 = load i64, i64* %14, align 8
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %118 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %117, i32 0, i32 0
  store i64 %116, i64* %118, align 8
  %119 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %119, i32 0, i32 1
  store i64 0, i64* %120, align 8
  %121 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %121, i32 0, i32 2
  store i32 0, i32* %122, align 8
  %123 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %124 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %123, i32 0, i32 7
  %125 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %124, align 8
  %126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %127 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %126, i32 0, i32 10
  %128 = load i8*, i8** %127, align 8
  %129 = call i8* %125(i8* noundef %128, i64 noundef 1, i64 noundef 152)
  %130 = bitcast i8* %129 to %struct.mz_zip_internal_state_tag*
  %131 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %132 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %131, i32 0, i32 15
  store %struct.mz_zip_internal_state_tag* %130, %struct.mz_zip_internal_state_tag** %132, align 8
  %133 = icmp eq %struct.mz_zip_internal_state_tag* null, %130
  br i1 %133, label %134, label %143

134:                                              ; preds = %115
  %135 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  store %struct.mz_zip_archive* %135, %struct.mz_zip_archive** %10, align 8
  store i32 16, i32* %11, align 4
  %136 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %137 = icmp ne %struct.mz_zip_archive* %136, null
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = load i32, i32* %11, align 4
  %140 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %141 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %140, i32 0, i32 5
  store i32 %139, i32* %141, align 4
  br label %142

142:                                              ; preds = %134, %138
  store i32 0, i32* %12, align 4
  br label %177

143:                                              ; preds = %115
  %144 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %145 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %144, i32 0, i32 15
  %146 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %145, align 8
  %147 = bitcast %struct.mz_zip_internal_state_tag* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 152, i1 false)
  %148 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %149 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %148, i32 0, i32 15
  %150 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %149, align 8
  %151 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %150, i32 0, i32 0
  %152 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %151, i32 0, i32 3
  store i32 1, i32* %152, align 8
  %153 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %154 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %153, i32 0, i32 15
  %155 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %154, align 8
  %156 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %155, i32 0, i32 1
  %157 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %156, i32 0, i32 3
  store i32 4, i32* %157, align 8
  %158 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %159 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %158, i32 0, i32 15
  %160 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %159, align 8
  %161 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %160, i32 0, i32 2
  %162 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %161, i32 0, i32 3
  store i32 4, i32* %162, align 8
  %163 = load i32, i32* %16, align 4
  %164 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %165 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %164, i32 0, i32 15
  %166 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %165, align 8
  %167 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %166, i32 0, i32 4
  store i32 %163, i32* %167, align 4
  %168 = load i32, i32* %16, align 4
  %169 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %170 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %169, i32 0, i32 15
  %171 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %170, align 8
  %172 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %171, i32 0, i32 5
  store i32 %168, i32* %172, align 8
  %173 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %174 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %173, i32 0, i32 4
  store i32 1, i32* %174, align 8
  %175 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %176 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %175, i32 0, i32 3
  store i32 2, i32* %176, align 4
  store i32 1, i32* %12, align 4
  br label %177

177:                                              ; preds = %143, %142, %89, %64, %46
  %178 = load i32, i32* %12, align 4
  ret i32 %178
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init(%struct.mz_zip_archive* noundef %0, i64 noundef %1) #0 {
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32 @mz_zip_writer_init_v2(%struct.mz_zip_archive* noundef %5, i64 noundef %6, i32 noundef 0)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_heap_v2(%struct.mz_zip_archive* noundef %0, i64 noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %8, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  store i32 %3, i32* %11, align 4
  %12 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %12, i32 0, i32 12
  store i64 (i8*, i64, i8*, i64)* @mz_zip_heap_write_func, i64 (i8*, i64, i8*, i64)** %13, align 8
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %14, i32 0, i32 13
  store i32 (i8*)* null, i32 (i8*)** %15, align 8
  %16 = load i32, i32* %11, align 4
  %17 = and i32 %16, 32768
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 11
  store i64 (i8*, i64, i8*, i64)* @mz_zip_mem_read_func, i64 (i8*, i64, i8*, i64)** %21, align 8
  br label %22

22:                                               ; preds = %19, %4
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %24 = bitcast %struct.mz_zip_archive* %23 to i8*
  %25 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %25, i32 0, i32 14
  store i8* %24, i8** %26, align 8
  %27 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %28 = load i64, i64* %9, align 8
  %29 = load i32, i32* %11, align 4
  %30 = call i32 @mz_zip_writer_init_v2(%struct.mz_zip_archive* noundef %27, i64 noundef %28, i32 noundef %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %22
  store i32 0, i32* %7, align 4
  br label %78

33:                                               ; preds = %22
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 4
  store i32 3, i32* %35, align 8
  %36 = load i64, i64* %10, align 8
  %37 = load i64, i64* %9, align 8
  %38 = icmp ugt i64 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = load i64, i64* %10, align 8
  br label %43

41:                                               ; preds = %33
  %42 = load i64, i64* %9, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %42, %41 ]
  store i64 %44, i64* %10, align 8
  %45 = icmp ne i64 0, %44
  br i1 %45, label %46, label %77

46:                                               ; preds = %43
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %47, i32 0, i32 7
  %49 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %48, align 8
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %50, i32 0, i32 10
  %52 = load i8*, i8** %51, align 8
  %53 = load i64, i64* %10, align 8
  %54 = call i8* %49(i8* noundef %52, i64 noundef 1, i64 noundef %53)
  %55 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %55, i32 0, i32 15
  %57 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %56, align 8
  %58 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %57, i32 0, i32 8
  store i8* %54, i8** %58, align 8
  %59 = icmp eq i8* null, %54
  br i1 %59, label %60, label %71

60:                                               ; preds = %46
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %62 = call i32 @mz_zip_writer_end_internal(%struct.mz_zip_archive* noundef %61, i32 noundef 0)
  %63 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  store %struct.mz_zip_archive* %63, %struct.mz_zip_archive** %5, align 8
  store i32 16, i32* %6, align 4
  %64 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %65 = icmp ne %struct.mz_zip_archive* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = load i32, i32* %6, align 4
  %68 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %68, i32 0, i32 5
  store i32 %67, i32* %69, align 4
  br label %70

70:                                               ; preds = %60, %66
  store i32 0, i32* %7, align 4
  br label %78

71:                                               ; preds = %46
  %72 = load i64, i64* %10, align 8
  %73 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %73, i32 0, i32 15
  %75 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %74, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %75, i32 0, i32 10
  store i64 %72, i64* %76, align 8
  br label %77

77:                                               ; preds = %71, %43
  store i32 1, i32* %7, align 4
  br label %78

78:                                               ; preds = %77, %70, %32
  %79 = load i32, i32* %7, align 4
  ret i32 %79
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_heap_write_func(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = bitcast i8* %17 to %struct.mz_zip_archive*
  store %struct.mz_zip_archive* %18, %struct.mz_zip_archive** %12, align 8
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %19, i32 0, i32 15
  %21 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %20, align 8
  store %struct.mz_zip_internal_state_tag* %21, %struct.mz_zip_internal_state_tag** %13, align 8
  %22 = load i64, i64* %9, align 8
  %23 = load i64, i64* %11, align 8
  %24 = add i64 %22, %23
  %25 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %26 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %25, i32 0, i32 9
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %24, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %4
  %30 = load i64, i64* %9, align 8
  %31 = load i64, i64* %11, align 8
  %32 = add i64 %30, %31
  br label %37

33:                                               ; preds = %4
  %34 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %34, i32 0, i32 9
  %36 = load i64, i64* %35, align 8
  br label %37

37:                                               ; preds = %33, %29
  %38 = phi i64 [ %32, %29 ], [ %36, %33 ]
  store i64 %38, i64* %14, align 8
  %39 = load i64, i64* %11, align 8
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  store i64 0, i64* %7, align 8
  br label %108

42:                                               ; preds = %37
  %43 = load i64, i64* %14, align 8
  %44 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %45 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %44, i32 0, i32 10
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %43, %46
  br i1 %47, label %48, label %96

48:                                               ; preds = %42
  %49 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %50 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %49, i32 0, i32 10
  %51 = load i64, i64* %50, align 8
  %52 = icmp ugt i64 64, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  br label %58

54:                                               ; preds = %48
  %55 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %55, i32 0, i32 10
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %54, %53
  %59 = phi i64 [ 64, %53 ], [ %57, %54 ]
  store i64 %59, i64* %16, align 8
  br label %60

60:                                               ; preds = %64, %58
  %61 = load i64, i64* %16, align 8
  %62 = load i64, i64* %14, align 8
  %63 = icmp ult i64 %61, %62
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = load i64, i64* %16, align 8
  %66 = mul i64 %65, 2
  store i64 %66, i64* %16, align 8
  br label %60, !llvm.loop !123

67:                                               ; preds = %60
  %68 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %68, i32 0, i32 9
  %70 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %69, align 8
  %71 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %72 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %71, i32 0, i32 10
  %73 = load i8*, i8** %72, align 8
  %74 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %75 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %74, i32 0, i32 8
  %76 = load i8*, i8** %75, align 8
  %77 = load i64, i64* %16, align 8
  %78 = call i8* %70(i8* noundef %73, i8* noundef %76, i64 noundef 1, i64 noundef %77)
  store i8* %78, i8** %15, align 8
  %79 = icmp eq i8* null, %78
  br i1 %79, label %80, label %89

80:                                               ; preds = %67
  %81 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %81, %struct.mz_zip_archive** %5, align 8
  store i32 16, i32* %6, align 4
  %82 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %83 = icmp ne %struct.mz_zip_archive* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = load i32, i32* %6, align 4
  %86 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %86, i32 0, i32 5
  store i32 %85, i32* %87, align 4
  br label %88

88:                                               ; preds = %80, %84
  store i64 0, i64* %7, align 8
  br label %108

89:                                               ; preds = %67
  %90 = load i8*, i8** %15, align 8
  %91 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %92 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %91, i32 0, i32 8
  store i8* %90, i8** %92, align 8
  %93 = load i64, i64* %16, align 8
  %94 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %95 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %94, i32 0, i32 10
  store i64 %93, i64* %95, align 8
  br label %96

96:                                               ; preds = %89, %42
  %97 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %98 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %97, i32 0, i32 8
  %99 = load i8*, i8** %98, align 8
  %100 = load i64, i64* %9, align 8
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  %102 = load i8*, i8** %10, align 8
  %103 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %102, i64 %103, i1 false)
  %104 = load i64, i64* %14, align 8
  %105 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %106 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %105, i32 0, i32 9
  store i64 %104, i64* %106, align 8
  %107 = load i64, i64* %11, align 8
  store i64 %107, i64* %7, align 8
  br label %108

108:                                              ; preds = %96, %88, %41
  %109 = load i64, i64* %7, align 8
  ret i64 %109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_end_internal(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca %struct.mz_zip_array*, align 8
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca %struct.mz_zip_array*, align 8
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca %struct.mz_zip_array*, align 8
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %17 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %14, align 8
  store i32 %1, i32* %15, align 4
  store i32 1, i32* %17, align 4
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %19 = icmp ne %struct.mz_zip_archive* %18, null
  br i1 %19, label %20, label %45

20:                                               ; preds = %2
  %21 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %21, i32 0, i32 15
  %23 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %22, align 8
  %24 = icmp ne %struct.mz_zip_internal_state_tag* %23, null
  br i1 %24, label %25, label %45

25:                                               ; preds = %20
  %26 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %26, i32 0, i32 7
  %28 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %27, align 8
  %29 = icmp ne i8* (i8*, i64, i64)* %28, null
  br i1 %29, label %30, label %45

30:                                               ; preds = %25
  %31 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %31, i32 0, i32 8
  %33 = load void (i8*, i8*)*, void (i8*, i8*)** %32, align 8
  %34 = icmp ne void (i8*, i8*)* %33, null
  br i1 %34, label %35, label %45

35:                                               ; preds = %30
  %36 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 2
  br i1 %39, label %40, label %58

40:                                               ; preds = %35
  %41 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %41, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp ne i32 %43, 3
  br i1 %44, label %45, label %58

45:                                               ; preds = %40, %30, %25, %20, %2
  %46 = load i32, i32* %15, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %49, %struct.mz_zip_archive** %9, align 8
  store i32 24, i32* %10, align 4
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %51 = icmp ne %struct.mz_zip_archive* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i32, i32* %10, align 4
  %54 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %54, i32 0, i32 5
  store i32 %53, i32* %55, align 4
  br label %56

56:                                               ; preds = %48, %52
  br label %57

57:                                               ; preds = %56, %45
  store i32 0, i32* %13, align 4
  br label %172

58:                                               ; preds = %40, %35
  %59 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %59, i32 0, i32 15
  %61 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %60, align 8
  store %struct.mz_zip_internal_state_tag* %61, %struct.mz_zip_internal_state_tag** %16, align 8
  %62 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %62, i32 0, i32 15
  store %struct.mz_zip_internal_state_tag* null, %struct.mz_zip_internal_state_tag** %63, align 8
  %64 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %65 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %66 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %65, i32 0, i32 0
  store %struct.mz_zip_archive* %64, %struct.mz_zip_archive** %3, align 8
  store %struct.mz_zip_array* %66, %struct.mz_zip_array** %4, align 8
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %67, i32 0, i32 8
  %69 = load void (i8*, i8*)*, void (i8*, i8*)** %68, align 8
  %70 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %70, i32 0, i32 10
  %72 = load i8*, i8** %71, align 8
  %73 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %74 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void %69(i8* noundef %72, i8* noundef %75) #7
  %76 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %77 = bitcast %struct.mz_zip_array* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 32, i1 false) #7
  %78 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %79 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %80 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %79, i32 0, i32 1
  store %struct.mz_zip_archive* %78, %struct.mz_zip_archive** %5, align 8
  store %struct.mz_zip_array* %80, %struct.mz_zip_array** %6, align 8
  %81 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %81, i32 0, i32 8
  %83 = load void (i8*, i8*)*, void (i8*, i8*)** %82, align 8
  %84 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %84, i32 0, i32 10
  %86 = load i8*, i8** %85, align 8
  %87 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %88 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void %83(i8* noundef %86, i8* noundef %89) #7
  %90 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %91 = bitcast %struct.mz_zip_array* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 32, i1 false) #7
  %92 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %93 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %94 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %93, i32 0, i32 2
  store %struct.mz_zip_archive* %92, %struct.mz_zip_archive** %7, align 8
  store %struct.mz_zip_array* %94, %struct.mz_zip_array** %8, align 8
  %95 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %96 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %95, i32 0, i32 8
  %97 = load void (i8*, i8*)*, void (i8*, i8*)** %96, align 8
  %98 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %98, i32 0, i32 10
  %100 = load i8*, i8** %99, align 8
  %101 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %102 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %101, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void %97(i8* noundef %100, i8* noundef %103) #7
  %104 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %105 = bitcast %struct.mz_zip_array* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 32, i1 false) #7
  %106 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %107 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %106, i32 0, i32 6
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %107, align 8
  %109 = icmp ne %struct._IO_FILE* %108, null
  br i1 %109, label %110, label %138

110:                                              ; preds = %58
  %111 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %112 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %111, i32 0, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 4
  br i1 %114, label %115, label %135

115:                                              ; preds = %110
  %116 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %117 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %116, i32 0, i32 6
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** %117, align 8
  %119 = call i32 @fclose(%struct._IO_FILE* noundef %118)
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %121, label %134

121:                                              ; preds = %115
  %122 = load i32, i32* %15, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %121
  %125 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  store %struct.mz_zip_archive* %125, %struct.mz_zip_archive** %11, align 8
  store i32 21, i32* %12, align 4
  %126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %127 = icmp ne %struct.mz_zip_archive* %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = load i32, i32* %12, align 4
  %130 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %130, i32 0, i32 5
  store i32 %129, i32* %131, align 4
  br label %132

132:                                              ; preds = %124, %128
  br label %133

133:                                              ; preds = %132, %121
  store i32 0, i32* %17, align 4
  br label %134

134:                                              ; preds = %133, %115
  br label %135

135:                                              ; preds = %134, %110
  %136 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %137 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %136, i32 0, i32 6
  store %struct._IO_FILE* null, %struct._IO_FILE** %137, align 8
  br label %138

138:                                              ; preds = %135, %58
  %139 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %140 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %139, i32 0, i32 12
  %141 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %140, align 8
  %142 = icmp eq i64 (i8*, i64, i8*, i64)* %141, @mz_zip_heap_write_func
  br i1 %142, label %143, label %160

143:                                              ; preds = %138
  %144 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %145 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %144, i32 0, i32 8
  %146 = load i8*, i8** %145, align 8
  %147 = icmp ne i8* %146, null
  br i1 %147, label %148, label %160

148:                                              ; preds = %143
  %149 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %150 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %149, i32 0, i32 8
  %151 = load void (i8*, i8*)*, void (i8*, i8*)** %150, align 8
  %152 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %153 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %152, i32 0, i32 10
  %154 = load i8*, i8** %153, align 8
  %155 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %156 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %155, i32 0, i32 8
  %157 = load i8*, i8** %156, align 8
  call void %151(i8* noundef %154, i8* noundef %157)
  %158 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %159 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %158, i32 0, i32 8
  store i8* null, i8** %159, align 8
  br label %160

160:                                              ; preds = %148, %143, %138
  %161 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %162 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %161, i32 0, i32 8
  %163 = load void (i8*, i8*)*, void (i8*, i8*)** %162, align 8
  %164 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %165 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %164, i32 0, i32 10
  %166 = load i8*, i8** %165, align 8
  %167 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %168 = bitcast %struct.mz_zip_internal_state_tag* %167 to i8*
  call void %163(i8* noundef %166, i8* noundef %168)
  %169 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %170 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %169, i32 0, i32 3
  store i32 0, i32* %170, align 4
  %171 = load i32, i32* %17, align 4
  store i32 %171, i32* %13, align 4
  br label %172

172:                                              ; preds = %160, %57
  %173 = load i32, i32* %13, align 4
  ret i32 %173
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_heap(%struct.mz_zip_archive* noundef %0, i64 noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = call i32 @mz_zip_writer_init_heap_v2(%struct.mz_zip_archive* noundef %7, i64 noundef %8, i64 noundef %9, i32 noundef 0)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_file(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i64 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = call i32 @mz_zip_writer_init_file_v2(%struct.mz_zip_archive* noundef %7, i8* noundef %8, i64 noundef %9, i32 noundef 0)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_file_v2(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i64, align 8
  %16 = alloca [4096 x i8], align 16
  %17 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %10, align 8
  store i8* %1, i8** %11, align 8
  store i64 %2, i64* %12, align 8
  store i32 %3, i32* %13, align 4
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %18, i32 0, i32 12
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_write_func, i64 (i8*, i64, i8*, i64)** %19, align 8
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 13
  store i32 (i8*)* null, i32 (i8*)** %21, align 8
  %22 = load i32, i32* %13, align 4
  %23 = and i32 %22, 32768
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %4
  %26 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %26, i32 0, i32 11
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_read_func, i64 (i8*, i64, i8*, i64)** %27, align 8
  br label %28

28:                                               ; preds = %25, %4
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %30 = bitcast %struct.mz_zip_archive* %29 to i8*
  %31 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %31, i32 0, i32 14
  store i8* %30, i8** %32, align 8
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %34 = load i64, i64* %12, align 8
  %35 = load i32, i32* %13, align 4
  %36 = call i32 @mz_zip_writer_init_v2(%struct.mz_zip_archive* noundef %33, i64 noundef %34, i32 noundef %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %28
  store i32 0, i32* %9, align 4
  br label %114

39:                                               ; preds = %28
  %40 = load i8*, i8** %11, align 8
  %41 = load i32, i32* %13, align 4
  %42 = and i32 %41, 32768
  %43 = icmp ne i32 %42, 0
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)
  %46 = call noalias %struct._IO_FILE* @fopen(i8* noundef %40, i8* noundef %45)
  store %struct._IO_FILE* %46, %struct._IO_FILE** %14, align 8
  %47 = icmp eq %struct._IO_FILE* null, %46
  br i1 %47, label %48, label %59

48:                                               ; preds = %39
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %50 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive* noundef %49)
  %51 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  store %struct.mz_zip_archive* %51, %struct.mz_zip_archive** %5, align 8
  store i32 17, i32* %6, align 4
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %53 = icmp ne %struct.mz_zip_archive* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %48
  %55 = load i32, i32* %6, align 4
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %56, i32 0, i32 5
  store i32 %55, i32* %57, align 4
  br label %58

58:                                               ; preds = %48, %54
  store i32 0, i32* %9, align 4
  br label %114

59:                                               ; preds = %39
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %61, i32 0, i32 15
  %63 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %62, align 8
  %64 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %63, i32 0, i32 6
  store %struct._IO_FILE* %60, %struct._IO_FILE** %64, align 8
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %65, i32 0, i32 4
  store i32 4, i32* %66, align 8
  %67 = load i64, i64* %12, align 8
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %113

69:                                               ; preds = %59
  store i64 0, i64* %15, align 8
  %70 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %70, i8 0, i64 4096, i1 false)
  br label %71

71:                                               ; preds = %109, %69
  %72 = load i64, i64* %12, align 8
  %73 = icmp ult i64 4096, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  br label %77

75:                                               ; preds = %71
  %76 = load i64, i64* %12, align 8
  br label %77

77:                                               ; preds = %75, %74
  %78 = phi i64 [ 4096, %74 ], [ %76, %75 ]
  store i64 %78, i64* %17, align 8
  %79 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %80 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %79, i32 0, i32 12
  %81 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %80, align 8
  %82 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %82, i32 0, i32 14
  %84 = load i8*, i8** %83, align 8
  %85 = load i64, i64* %15, align 8
  %86 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  %87 = load i64, i64* %17, align 8
  %88 = call i64 %81(i8* noundef %84, i64 noundef %85, i8* noundef %86, i64 noundef %87)
  %89 = load i64, i64* %17, align 8
  %90 = icmp ne i64 %88, %89
  br i1 %90, label %91, label %102

91:                                               ; preds = %77
  %92 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %93 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive* noundef %92)
  %94 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  store %struct.mz_zip_archive* %94, %struct.mz_zip_archive** %7, align 8
  store i32 19, i32* %8, align 4
  %95 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %96 = icmp ne %struct.mz_zip_archive* %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %91
  %98 = load i32, i32* %8, align 4
  %99 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %100 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %99, i32 0, i32 5
  store i32 %98, i32* %100, align 4
  br label %101

101:                                              ; preds = %91, %97
  store i32 0, i32* %9, align 4
  br label %114

102:                                              ; preds = %77
  %103 = load i64, i64* %17, align 8
  %104 = load i64, i64* %15, align 8
  %105 = add i64 %104, %103
  store i64 %105, i64* %15, align 8
  %106 = load i64, i64* %17, align 8
  %107 = load i64, i64* %12, align 8
  %108 = sub i64 %107, %106
  store i64 %108, i64* %12, align 8
  br label %109

109:                                              ; preds = %102
  %110 = load i64, i64* %12, align 8
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %71, label %112, !llvm.loop !124

112:                                              ; preds = %109
  br label %113

113:                                              ; preds = %112, %59
  store i32 1, i32* %9, align 4
  br label %114

114:                                              ; preds = %113, %101, %58, %38
  %115 = load i32, i32* %9, align 4
  ret i32 %115
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_file_write_func(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  %14 = load i8*, i8** %8, align 8
  %15 = bitcast i8* %14 to %struct.mz_zip_archive*
  store %struct.mz_zip_archive* %15, %struct.mz_zip_archive** %12, align 8
  %16 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %17 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %16, i32 0, i32 15
  %18 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %17, align 8
  %19 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %18, i32 0, i32 6
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %21 = call i64 @ftello(%struct._IO_FILE* noundef %20)
  store i64 %21, i64* %13, align 8
  %22 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %22, i32 0, i32 15
  %24 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %23, align 8
  %25 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %24, i32 0, i32 7
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %9, align 8
  %28 = add i64 %27, %26
  store i64 %28, i64* %9, align 8
  %29 = load i64, i64* %9, align 8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %4
  %32 = load i64, i64* %13, align 8
  %33 = load i64, i64* %9, align 8
  %34 = icmp ne i64 %32, %33
  br i1 %34, label %35, label %53

35:                                               ; preds = %31
  %36 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %36, i32 0, i32 15
  %38 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %37, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %38, i32 0, i32 6
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %39, align 8
  %41 = load i64, i64* %9, align 8
  %42 = call i32 @fseeko(%struct._IO_FILE* noundef %40, i64 noundef %41, i32 noundef 0)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %53

44:                                               ; preds = %35, %4
  %45 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %45, %struct.mz_zip_archive** %5, align 8
  store i32 22, i32* %6, align 4
  %46 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %47 = icmp ne %struct.mz_zip_archive* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i32, i32* %6, align 4
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %50, i32 0, i32 5
  store i32 %49, i32* %51, align 4
  br label %52

52:                                               ; preds = %44, %48
  store i64 0, i64* %7, align 8
  br label %62

53:                                               ; preds = %35, %31
  %54 = load i8*, i8** %10, align 8
  %55 = load i64, i64* %11, align 8
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %56, i32 0, i32 15
  %58 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %57, align 8
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %58, i32 0, i32 6
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %59, align 8
  %61 = call i64 @fwrite(i8* noundef %54, i64 noundef 1, i64 noundef %55, %struct._IO_FILE* noundef %60)
  store i64 %61, i64* %7, align 8
  br label %62

62:                                               ; preds = %53, %52
  %63 = load i64, i64* %7, align 8
  ret i64 %63
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_end(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = call i32 @mz_zip_writer_end_internal(%struct.mz_zip_archive* noundef %3, i32 noundef 1)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_cfile(%struct.mz_zip_archive* noundef %0, %struct._IO_FILE* noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %5, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %8, i32 0, i32 12
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_write_func, i64 (i8*, i64, i8*, i64)** %9, align 8
  %10 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %11 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %10, i32 0, i32 13
  store i32 (i8*)* null, i32 (i8*)** %11, align 8
  %12 = load i32, i32* %7, align 4
  %13 = and i32 %12, 32768
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %17 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %16, i32 0, i32 11
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_read_func, i64 (i8*, i64, i8*, i64)** %17, align 8
  br label %18

18:                                               ; preds = %15, %3
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %20 = bitcast %struct.mz_zip_archive* %19 to i8*
  %21 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %21, i32 0, i32 14
  store i8* %20, i8** %22, align 8
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %24 = load i32, i32* %7, align 4
  %25 = call i32 @mz_zip_writer_init_v2(%struct.mz_zip_archive* noundef %23, i64 noundef 0, i32 noundef %24)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %18
  store i32 0, i32* %4, align 4
  br label %46

28:                                               ; preds = %18
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %30 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %31 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %30, i32 0, i32 15
  %32 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %31, align 8
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %32, i32 0, i32 6
  store %struct._IO_FILE* %29, %struct._IO_FILE** %33, align 8
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 15
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %35, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %36, i32 0, i32 6
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %37, align 8
  %39 = call i64 @ftello(%struct._IO_FILE* noundef %38)
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %40, i32 0, i32 15
  %42 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %41, align 8
  %43 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %42, i32 0, i32 7
  store i64 %39, i64* %43, align 8
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %44, i32 0, i32 4
  store i32 5, i32* %45, align 8
  store i32 1, i32* %4, align 4
  br label %46

46:                                               ; preds = %28, %27
  %47 = load i32, i32* %4, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_from_reader_v2(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca %struct.mz_zip_array*, align 8
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.mz_zip_archive*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %struct.mz_zip_archive*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca %struct.mz_zip_internal_state_tag*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %27, align 8
  store i8* %1, i8** %28, align 8
  store i32 %2, i32* %29, align 4
  %31 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %32 = icmp ne %struct.mz_zip_archive* %31, null
  br i1 %32, label %33, label %43

33:                                               ; preds = %3
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 15
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %35, align 8
  %37 = icmp ne %struct.mz_zip_internal_state_tag* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %33
  %39 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %39, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 1
  br i1 %42, label %43, label %52

43:                                               ; preds = %38, %33, %3
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %44, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %45 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %46 = icmp ne %struct.mz_zip_archive* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load i32, i32* %7, align 4
  %49 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %49, i32 0, i32 5
  store i32 %48, i32* %50, align 4
  br label %51

51:                                               ; preds = %43, %47
  store i32 0, i32* %26, align 4
  br label %266

52:                                               ; preds = %38
  %53 = load i32, i32* %29, align 4
  %54 = and i32 %53, 16384
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %73

56:                                               ; preds = %52
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %57, i32 0, i32 15
  %59 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %58, align 8
  %60 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %59, i32 0, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56
  %64 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %64, %struct.mz_zip_archive** %8, align 8
  store i32 24, i32* %9, align 4
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %66 = icmp ne %struct.mz_zip_archive* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = load i32, i32* %9, align 4
  %69 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %70 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %69, i32 0, i32 5
  store i32 %68, i32* %70, align 4
  br label %71

71:                                               ; preds = %63, %67
  store i32 0, i32* %26, align 4
  br label %266

72:                                               ; preds = %56
  br label %73

73:                                               ; preds = %72, %52
  %74 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %74, i32 0, i32 15
  %76 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %75, align 8
  %77 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %76, i32 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %95

80:                                               ; preds = %73
  %81 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %85, label %94

85:                                               ; preds = %80
  %86 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %86, %struct.mz_zip_archive** %10, align 8
  store i32 2, i32* %11, align 4
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %88 = icmp ne %struct.mz_zip_archive* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = load i32, i32* %11, align 4
  %91 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %92 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %91, i32 0, i32 5
  store i32 %90, i32* %92, align 4
  br label %93

93:                                               ; preds = %85, %89
  store i32 0, i32* %26, align 4
  br label %266

94:                                               ; preds = %80
  br label %126

95:                                               ; preds = %73
  %96 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %97 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %96, i32 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 65535
  br i1 %99, label %100, label %109

100:                                              ; preds = %95
  %101 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %101, %struct.mz_zip_archive** %12, align 8
  store i32 2, i32* %13, align 4
  %102 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %103 = icmp ne %struct.mz_zip_archive* %102, null
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = load i32, i32* %13, align 4
  %106 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %107 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %106, i32 0, i32 5
  store i32 %105, i32* %107, align 4
  br label %108

108:                                              ; preds = %100, %104
  store i32 0, i32* %26, align 4
  br label %266

109:                                              ; preds = %95
  %110 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %110, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 46
  %114 = add i64 %113, 30
  %115 = icmp ugt i64 %114, 4294967295
  br i1 %115, label %116, label %125

116:                                              ; preds = %109
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %117, %struct.mz_zip_archive** %14, align 8
  store i32 3, i32* %15, align 4
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %119 = icmp ne %struct.mz_zip_archive* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, i32* %15, align 4
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %14, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %122, i32 0, i32 5
  store i32 %121, i32* %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 0, i32* %26, align 4
  br label %266

125:                                              ; preds = %109
  br label %126

126:                                              ; preds = %125, %94
  %127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %127, i32 0, i32 15
  %129 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %128, align 8
  store %struct.mz_zip_internal_state_tag* %129, %struct.mz_zip_internal_state_tag** %30, align 8
  %130 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %131 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %130, i32 0, i32 6
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %131, align 8
  %133 = icmp ne %struct._IO_FILE* %132, null
  br i1 %133, label %134, label %193

134:                                              ; preds = %126
  %135 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %136 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %135, i32 0, i32 14
  %137 = load i8*, i8** %136, align 8
  %138 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %139 = bitcast %struct.mz_zip_archive* %138 to i8*
  %140 = icmp ne i8* %137, %139
  br i1 %140, label %141, label %150

141:                                              ; preds = %134
  %142 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %142, %struct.mz_zip_archive** %16, align 8
  store i32 24, i32* %17, align 4
  %143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %144 = icmp ne %struct.mz_zip_archive* %143, null
  br i1 %144, label %145, label %149

145:                                              ; preds = %141
  %146 = load i32, i32* %17, align 4
  %147 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %147, i32 0, i32 5
  store i32 %146, i32* %148, align 4
  br label %149

149:                                              ; preds = %141, %145
  store i32 0, i32* %26, align 4
  br label %266

150:                                              ; preds = %134
  %151 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %152 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %151, i32 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 4
  br i1 %154, label %155, label %188

155:                                              ; preds = %150
  %156 = load i8*, i8** %28, align 8
  %157 = icmp ne i8* %156, null
  br i1 %157, label %167, label %158

158:                                              ; preds = %155
  %159 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %159, %struct.mz_zip_archive** %18, align 8
  store i32 24, i32* %19, align 4
  %160 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %161 = icmp ne %struct.mz_zip_archive* %160, null
  br i1 %161, label %162, label %166

162:                                              ; preds = %158
  %163 = load i32, i32* %19, align 4
  %164 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %18, align 8
  %165 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %164, i32 0, i32 5
  store i32 %163, i32* %165, align 4
  br label %166

166:                                              ; preds = %158, %162
  store i32 0, i32* %26, align 4
  br label %266

167:                                              ; preds = %155
  %168 = load i8*, i8** %28, align 8
  %169 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %170 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %169, i32 0, i32 6
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %170, align 8
  %172 = call %struct._IO_FILE* @freopen(i8* noundef %168, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), %struct._IO_FILE* noundef %171)
  %173 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %174 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %173, i32 0, i32 6
  store %struct._IO_FILE* %172, %struct._IO_FILE** %174, align 8
  %175 = icmp eq %struct._IO_FILE* null, %172
  br i1 %175, label %176, label %187

176:                                              ; preds = %167
  %177 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %178 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %177, i32 noundef 0)
  %179 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %179, %struct.mz_zip_archive** %20, align 8
  store i32 17, i32* %21, align 4
  %180 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %181 = icmp ne %struct.mz_zip_archive* %180, null
  br i1 %181, label %182, label %186

182:                                              ; preds = %176
  %183 = load i32, i32* %21, align 4
  %184 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %185 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %184, i32 0, i32 5
  store i32 %183, i32* %185, align 4
  br label %186

186:                                              ; preds = %176, %182
  store i32 0, i32* %26, align 4
  br label %266

187:                                              ; preds = %167
  br label %188

188:                                              ; preds = %187, %150
  %189 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %190 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %189, i32 0, i32 12
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_write_func, i64 (i8*, i64, i8*, i64)** %190, align 8
  %191 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %192 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %191, i32 0, i32 13
  store i32 (i8*)* null, i32 (i8*)** %192, align 8
  br label %240

193:                                              ; preds = %126
  %194 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %195 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %194, i32 0, i32 8
  %196 = load i8*, i8** %195, align 8
  %197 = icmp ne i8* %196, null
  br i1 %197, label %198, label %224

198:                                              ; preds = %193
  %199 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %200 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %199, i32 0, i32 14
  %201 = load i8*, i8** %200, align 8
  %202 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %203 = bitcast %struct.mz_zip_archive* %202 to i8*
  %204 = icmp ne i8* %201, %203
  br i1 %204, label %205, label %214

205:                                              ; preds = %198
  %206 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %206, %struct.mz_zip_archive** %22, align 8
  store i32 24, i32* %23, align 4
  %207 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %208 = icmp ne %struct.mz_zip_archive* %207, null
  br i1 %208, label %209, label %213

209:                                              ; preds = %205
  %210 = load i32, i32* %23, align 4
  %211 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %22, align 8
  %212 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %211, i32 0, i32 5
  store i32 %210, i32* %212, align 4
  br label %213

213:                                              ; preds = %205, %209
  store i32 0, i32* %26, align 4
  br label %266

214:                                              ; preds = %198
  %215 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %216 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %215, i32 0, i32 9
  %217 = load i64, i64* %216, align 8
  %218 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %30, align 8
  %219 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %218, i32 0, i32 10
  store i64 %217, i64* %219, align 8
  %220 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %221 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %220, i32 0, i32 12
  store i64 (i8*, i64, i8*, i64)* @mz_zip_heap_write_func, i64 (i8*, i64, i8*, i64)** %221, align 8
  %222 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %223 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %222, i32 0, i32 13
  store i32 (i8*)* null, i32 (i8*)** %223, align 8
  br label %239

224:                                              ; preds = %193
  %225 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %226 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %225, i32 0, i32 12
  %227 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %226, align 8
  %228 = icmp ne i64 (i8*, i64, i8*, i64)* %227, null
  br i1 %228, label %238, label %229

229:                                              ; preds = %224
  %230 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_archive* %230, %struct.mz_zip_archive** %24, align 8
  store i32 24, i32* %25, align 4
  %231 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %232 = icmp ne %struct.mz_zip_archive* %231, null
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = load i32, i32* %25, align 4
  %235 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %24, align 8
  %236 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %235, i32 0, i32 5
  store i32 %234, i32* %236, align 4
  br label %237

237:                                              ; preds = %229, %233
  store i32 0, i32* %26, align 4
  br label %266

238:                                              ; preds = %224
  br label %239

239:                                              ; preds = %238, %214
  br label %240

240:                                              ; preds = %239, %188
  %241 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %242 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %241, i32 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %245 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %244, i32 0, i32 0
  store i64 %243, i64* %245, align 8
  %246 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %247 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %246, i32 0, i32 1
  store i64 0, i64* %247, align 8
  %248 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %249 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %250 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %249, i32 0, i32 15
  %251 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %250, align 8
  %252 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %251, i32 0, i32 2
  store %struct.mz_zip_archive* %248, %struct.mz_zip_archive** %4, align 8
  store %struct.mz_zip_array* %252, %struct.mz_zip_array** %5, align 8
  %253 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %254 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %253, i32 0, i32 8
  %255 = load void (i8*, i8*)*, void (i8*, i8*)** %254, align 8
  %256 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %257 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %256, i32 0, i32 10
  %258 = load i8*, i8** %257, align 8
  %259 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %260 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %259, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  call void %255(i8* noundef %258, i8* noundef %261) #7
  %262 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %263 = bitcast %struct.mz_zip_array* %262 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 32, i1 false) #7
  %264 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %265 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %264, i32 0, i32 3
  store i32 2, i32* %265, align 4
  store i32 1, i32* %26, align 4
  br label %266

266:                                              ; preds = %240, %237, %213, %186, %166, %149, %124, %108, %93, %71, %51
  %267 = load i32, i32* %26, align 4
  ret i32 %267
}

declare dso_local %struct._IO_FILE* @freopen(i8* noundef, i8* noundef, %struct._IO_FILE* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_init_from_reader(%struct.mz_zip_archive* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call i32 @mz_zip_writer_init_from_reader_v2(%struct.mz_zip_archive* noundef %5, i8* noundef %6, i32 noundef 0)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_mem(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = load i64, i64* %9, align 8
  %15 = load i32, i32* %10, align 4
  %16 = call i32 @mz_zip_writer_add_mem_ex(%struct.mz_zip_archive* noundef %11, i8* noundef %12, i8* noundef %13, i64 noundef %14, i8* noundef null, i16 noundef zeroext 0, i32 noundef %15, i64 noundef 0, i32 noundef 0)
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_mem_ex(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i8* noundef %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8) #0 {
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %10, align 8
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %12, align 8
  store i64 %3, i64* %13, align 8
  store i8* %4, i8** %14, align 8
  store i16 %5, i16* %15, align 2
  store i32 %6, i32* %16, align 4
  store i64 %7, i64* %17, align 8
  store i32 %8, i32* %18, align 4
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %20 = load i8*, i8** %11, align 8
  %21 = load i8*, i8** %12, align 8
  %22 = load i64, i64* %13, align 8
  %23 = load i8*, i8** %14, align 8
  %24 = load i16, i16* %15, align 2
  %25 = load i32, i32* %16, align 4
  %26 = load i64, i64* %17, align 8
  %27 = load i32, i32* %18, align 4
  %28 = call i32 @mz_zip_writer_add_mem_ex_v2(%struct.mz_zip_archive* noundef %19, i8* noundef %20, i8* noundef %21, i64 noundef %22, i8* noundef %23, i16 noundef zeroext %24, i32 noundef %25, i64 noundef %26, i32 noundef %27, i64* noundef null, i8* noundef null, i32 noundef 0, i8* noundef null, i32 noundef 0)
  ret i32 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_mem_ex_v2(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i8* noundef %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8, i64* noundef %9, i8* noundef %10, i32 noundef %11, i8* noundef %12, i32 noundef %13) #0 {
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca %struct.mz_zip_array*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.mz_zip_archive*, align 8
  %22 = alloca %struct.mz_zip_array*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i8*, align 8
  %36 = alloca i64, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i8*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i8*, align 8
  %42 = alloca i32, align 4
  %43 = alloca i8*, align 8
  %44 = alloca i32, align 4
  %45 = alloca %struct.mz_zip_archive*, align 8
  %46 = alloca %struct.mz_zip_array*, align 8
  %47 = alloca i64, align 8
  %48 = alloca %struct.mz_zip_archive*, align 8
  %49 = alloca %struct.mz_zip_array*, align 8
  %50 = alloca i64, align 8
  %51 = alloca %struct.mz_zip_archive*, align 8
  %52 = alloca i32, align 4
  %53 = alloca %struct.mz_zip_archive*, align 8
  %54 = alloca i32, align 4
  %55 = alloca %struct.mz_zip_archive*, align 8
  %56 = alloca i32, align 4
  %57 = alloca %struct.mz_zip_archive*, align 8
  %58 = alloca i32, align 4
  %59 = alloca %struct.mz_zip_archive*, align 8
  %60 = alloca i32, align 4
  %61 = alloca %struct.mz_zip_archive*, align 8
  %62 = alloca i32, align 4
  %63 = alloca %struct.mz_zip_archive*, align 8
  %64 = alloca i32, align 4
  %65 = alloca %struct.mz_zip_archive*, align 8
  %66 = alloca i32, align 4
  %67 = alloca %struct.mz_zip_archive*, align 8
  %68 = alloca i32, align 4
  %69 = alloca %struct.mz_zip_archive*, align 8
  %70 = alloca i32, align 4
  %71 = alloca %struct.mz_zip_archive*, align 8
  %72 = alloca i32, align 4
  %73 = alloca %struct.mz_zip_archive*, align 8
  %74 = alloca i32, align 4
  %75 = alloca %struct.mz_zip_archive*, align 8
  %76 = alloca i32, align 4
  %77 = alloca %struct.mz_zip_archive*, align 8
  %78 = alloca i32, align 4
  %79 = alloca %struct.mz_zip_archive*, align 8
  %80 = alloca i32, align 4
  %81 = alloca %struct.mz_zip_archive*, align 8
  %82 = alloca i32, align 4
  %83 = alloca %struct.mz_zip_archive*, align 8
  %84 = alloca i32, align 4
  %85 = alloca %struct.mz_zip_archive*, align 8
  %86 = alloca i32, align 4
  %87 = alloca %struct.mz_zip_archive*, align 8
  %88 = alloca i32, align 4
  %89 = alloca %struct.mz_zip_archive*, align 8
  %90 = alloca i32, align 4
  %91 = alloca %struct.mz_zip_archive*, align 8
  %92 = alloca i32, align 4
  %93 = alloca i32, align 4
  %94 = alloca %struct.mz_zip_archive*, align 8
  %95 = alloca i8*, align 8
  %96 = alloca i8*, align 8
  %97 = alloca i64, align 8
  %98 = alloca i8*, align 8
  %99 = alloca i16, align 2
  %100 = alloca i32, align 4
  %101 = alloca i64, align 8
  %102 = alloca i32, align 4
  %103 = alloca i64*, align 8
  %104 = alloca i8*, align 8
  %105 = alloca i32, align 4
  %106 = alloca i8*, align 8
  %107 = alloca i32, align 4
  %108 = alloca i16, align 2
  %109 = alloca i16, align 2
  %110 = alloca i16, align 2
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca i32, align 4
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  %117 = alloca i64, align 8
  %118 = alloca [30 x i8], align 16
  %119 = alloca %struct.tdefl_compressor*, align 8
  %120 = alloca i32, align 4
  %121 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %122 = alloca i8*, align 8
  %123 = alloca i32, align 4
  %124 = alloca [28 x i8], align 16
  %125 = alloca i16, align 2
  %126 = alloca i64, align 8
  %127 = alloca %struct.mz_zip_writer_add_state, align 8
  %128 = alloca [24 x i8], align 16
  %129 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %94, align 8
  store i8* %1, i8** %95, align 8
  store i8* %2, i8** %96, align 8
  store i64 %3, i64* %97, align 8
  store i8* %4, i8** %98, align 8
  store i16 %5, i16* %99, align 2
  store i32 %6, i32* %100, align 4
  store i64 %7, i64* %101, align 8
  store i32 %8, i32* %102, align 4
  store i64* %9, i64** %103, align 8
  store i8* %10, i8** %104, align 8
  store i32 %11, i32* %105, align 4
  store i8* %12, i8** %106, align 8
  store i32 %13, i32* %107, align 4
  store i16 0, i16* %108, align 2
  store i16 0, i16* %109, align 2
  store i16 0, i16* %110, align 2
  store i32 0, i32* %112, align 4
  %130 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %131 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %130, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %114, align 8
  %133 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %133, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %115, align 8
  store i64 0, i64* %116, align 8
  store %struct.tdefl_compressor* null, %struct.tdefl_compressor** %119, align 8
  store i8* null, i8** %122, align 8
  store i32 0, i32* %123, align 4
  store i16 0, i16* %125, align 2
  %136 = load i32, i32* %100, align 4
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %14
  store i32 6, i32* %100, align 4
  br label %139

139:                                              ; preds = %138, %14
  %140 = load i64, i64* %101, align 8
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %149, label %142

142:                                              ; preds = %139
  %143 = load i64, i64* %97, align 8
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %154

145:                                              ; preds = %142
  %146 = load i32, i32* %100, align 4
  %147 = and i32 %146, 1024
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %145, %139
  %150 = load i16, i16* %125, align 2
  %151 = zext i16 %150 to i32
  %152 = or i32 %151, 8
  %153 = trunc i32 %152 to i16
  store i16 %153, i16* %125, align 2
  br label %154

154:                                              ; preds = %149, %145, %142
  %155 = load i32, i32* %100, align 4
  %156 = and i32 %155, 65536
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = load i16, i16* %125, align 2
  %160 = zext i16 %159 to i32
  %161 = or i32 %160, 2048
  %162 = trunc i32 %161 to i16
  store i16 %162, i16* %125, align 2
  br label %163

163:                                              ; preds = %158, %154
  %164 = load i32, i32* %100, align 4
  %165 = and i32 %164, 15
  store i32 %165, i32* %111, align 4
  %166 = load i32, i32* %111, align 4
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = load i32, i32* %100, align 4
  %170 = and i32 %169, 1024
  %171 = icmp ne i32 %170, 0
  br label %172

172:                                              ; preds = %168, %163
  %173 = phi i1 [ true, %163 ], [ %171, %168 ]
  %174 = zext i1 %173 to i32
  store i32 %174, i32* %120, align 4
  %175 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %176 = icmp ne %struct.mz_zip_archive* %175, null
  br i1 %176, label %177, label %206

177:                                              ; preds = %172
  %178 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %179 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %178, i32 0, i32 15
  %180 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %179, align 8
  %181 = icmp ne %struct.mz_zip_internal_state_tag* %180, null
  br i1 %181, label %182, label %206

182:                                              ; preds = %177
  %183 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %184 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %183, i32 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = icmp ne i32 %185, 2
  br i1 %186, label %206, label %187

187:                                              ; preds = %182
  %188 = load i64, i64* %97, align 8
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %187
  %191 = load i8*, i8** %96, align 8
  %192 = icmp ne i8* %191, null
  br i1 %192, label %193, label %206

193:                                              ; preds = %190, %187
  %194 = load i8*, i8** %95, align 8
  %195 = icmp ne i8* %194, null
  br i1 %195, label %196, label %206

196:                                              ; preds = %193
  %197 = load i16, i16* %99, align 2
  %198 = zext i16 %197 to i32
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %196
  %201 = load i8*, i8** %98, align 8
  %202 = icmp ne i8* %201, null
  br i1 %202, label %203, label %206

203:                                              ; preds = %200, %196
  %204 = load i32, i32* %111, align 4
  %205 = icmp ugt i32 %204, 10
  br i1 %205, label %206, label %215

206:                                              ; preds = %203, %200, %193, %190, %182, %177, %172
  %207 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %207, %struct.mz_zip_archive** %51, align 8
  store i32 24, i32* %52, align 4
  %208 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %51, align 8
  %209 = icmp ne %struct.mz_zip_archive* %208, null
  br i1 %209, label %210, label %214

210:                                              ; preds = %206
  %211 = load i32, i32* %52, align 4
  %212 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %51, align 8
  %213 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %212, i32 0, i32 5
  store i32 %211, i32* %213, align 4
  br label %214

214:                                              ; preds = %206, %210
  store i32 0, i32* %93, align 4
  br label %1210

215:                                              ; preds = %203
  %216 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %217 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %216, i32 0, i32 15
  %218 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %217, align 8
  store %struct.mz_zip_internal_state_tag* %218, %struct.mz_zip_internal_state_tag** %121, align 8
  %219 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %220 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %219, i32 0, i32 4
  %221 = load i32, i32* %220, align 4
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %223, label %238

223:                                              ; preds = %215
  %224 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %225 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %224, i32 0, i32 2
  %226 = load i32, i32* %225, align 8
  %227 = icmp eq i32 %226, -1
  br i1 %227, label %228, label %237

228:                                              ; preds = %223
  %229 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %229, %struct.mz_zip_archive** %53, align 8
  store i32 2, i32* %54, align 4
  %230 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %53, align 8
  %231 = icmp ne %struct.mz_zip_archive* %230, null
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = load i32, i32* %54, align 4
  %234 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %53, align 8
  %235 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %234, i32 0, i32 5
  store i32 %233, i32* %235, align 4
  br label %236

236:                                              ; preds = %228, %232
  store i32 0, i32* %93, align 4
  br label %1210

237:                                              ; preds = %223
  br label %256

238:                                              ; preds = %215
  %239 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %240 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %239, i32 0, i32 2
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 65535
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %245 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %244, i32 0, i32 4
  store i32 1, i32* %245, align 4
  br label %246

246:                                              ; preds = %243, %238
  %247 = load i64, i64* %97, align 8
  %248 = icmp ugt i64 %247, 4294967295
  br i1 %248, label %252, label %249

249:                                              ; preds = %246
  %250 = load i64, i64* %101, align 8
  %251 = icmp ugt i64 %250, 4294967295
  br i1 %251, label %252, label %255

252:                                              ; preds = %249, %246
  %253 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %254 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %253, i32 0, i32 4
  store i32 1, i32* %254, align 4
  br label %255

255:                                              ; preds = %252, %249
  br label %256

256:                                              ; preds = %255, %237
  %257 = load i32, i32* %100, align 4
  %258 = and i32 %257, 1024
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %272, label %260

260:                                              ; preds = %256
  %261 = load i64, i64* %101, align 8
  %262 = icmp ne i64 %261, 0
  br i1 %262, label %263, label %272

263:                                              ; preds = %260
  %264 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %264, %struct.mz_zip_archive** %55, align 8
  store i32 24, i32* %56, align 4
  %265 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %55, align 8
  %266 = icmp ne %struct.mz_zip_archive* %265, null
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  %268 = load i32, i32* %56, align 4
  %269 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %55, align 8
  %270 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %269, i32 0, i32 5
  store i32 %268, i32* %270, align 4
  br label %271

271:                                              ; preds = %263, %267
  store i32 0, i32* %93, align 4
  br label %1210

272:                                              ; preds = %260, %256
  %273 = load i8*, i8** %95, align 8
  %274 = call i32 @mz_zip_writer_validate_archive_name(i8* noundef %273)
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %285, label %276

276:                                              ; preds = %272
  %277 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %277, %struct.mz_zip_archive** %57, align 8
  store i32 25, i32* %58, align 4
  %278 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %57, align 8
  %279 = icmp ne %struct.mz_zip_archive* %278, null
  br i1 %279, label %280, label %284

280:                                              ; preds = %276
  %281 = load i32, i32* %58, align 4
  %282 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %57, align 8
  %283 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %282, i32 0, i32 5
  store i32 %281, i32* %283, align 4
  br label %284

284:                                              ; preds = %276, %280
  store i32 0, i32* %93, align 4
  br label %1210

285:                                              ; preds = %272
  %286 = load i64*, i64** %103, align 8
  %287 = icmp ne i64* %286, null
  br i1 %287, label %288, label %291

288:                                              ; preds = %285
  %289 = load i64*, i64** %103, align 8
  %290 = load i64, i64* %289, align 8
  call void @mz_zip_time_t_to_dos_time(i64 noundef %290, i16* noundef %109, i16* noundef %110)
  br label %294

291:                                              ; preds = %285
  %292 = call i64 @time(i64* noundef %126) #7
  %293 = load i64, i64* %126, align 8
  call void @mz_zip_time_t_to_dos_time(i64 noundef %293, i16* noundef %109, i16* noundef %110)
  br label %294

294:                                              ; preds = %291, %288
  %295 = load i32, i32* %100, align 4
  %296 = and i32 %295, 1024
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %308, label %298

298:                                              ; preds = %294
  %299 = load i8*, i8** %96, align 8
  %300 = load i64, i64* %97, align 8
  %301 = call i64 @mz_crc32(i64 noundef 0, i8* noundef %299, i64 noundef %300)
  %302 = trunc i64 %301 to i32
  store i32 %302, i32* %102, align 4
  %303 = load i64, i64* %97, align 8
  store i64 %303, i64* %101, align 8
  %304 = load i64, i64* %101, align 8
  %305 = icmp ule i64 %304, 3
  br i1 %305, label %306, label %307

306:                                              ; preds = %298
  store i32 0, i32* %111, align 4
  store i32 1, i32* %120, align 4
  br label %307

307:                                              ; preds = %306, %298
  br label %308

308:                                              ; preds = %307, %294
  %309 = load i8*, i8** %95, align 8
  %310 = call i64 @strlen(i8* noundef %309) #9
  store i64 %310, i64* %117, align 8
  %311 = load i64, i64* %117, align 8
  %312 = icmp ugt i64 %311, 65535
  br i1 %312, label %313, label %322

313:                                              ; preds = %308
  %314 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %314, %struct.mz_zip_archive** %59, align 8
  store i32 25, i32* %60, align 4
  %315 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %316 = icmp ne %struct.mz_zip_archive* %315, null
  br i1 %316, label %317, label %321

317:                                              ; preds = %313
  %318 = load i32, i32* %60, align 4
  %319 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %59, align 8
  %320 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %319, i32 0, i32 5
  store i32 %318, i32* %320, align 4
  br label %321

321:                                              ; preds = %313, %317
  store i32 0, i32* %93, align 4
  br label %1210

322:                                              ; preds = %308
  %323 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %324 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive* noundef %323)
  store i32 %324, i32* %113, align 4
  %325 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %326 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %325, i32 0, i32 0
  %327 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %326, i32 0, i32 1
  %328 = load i64, i64* %327, align 8
  %329 = add i64 %328, 46
  %330 = load i64, i64* %117, align 8
  %331 = add i64 %329, %330
  %332 = add i64 %331, 28
  %333 = load i16, i16* %99, align 2
  %334 = zext i16 %333 to i64
  %335 = add i64 %332, %334
  %336 = icmp uge i64 %335, 4294967295
  br i1 %336, label %337, label %346

337:                                              ; preds = %322
  %338 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %338, %struct.mz_zip_archive** %61, align 8
  store i32 15, i32* %62, align 4
  %339 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %61, align 8
  %340 = icmp ne %struct.mz_zip_archive* %339, null
  br i1 %340, label %341, label %345

341:                                              ; preds = %337
  %342 = load i32, i32* %62, align 4
  %343 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %61, align 8
  %344 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %343, i32 0, i32 5
  store i32 %342, i32* %344, align 4
  br label %345

345:                                              ; preds = %337, %341
  store i32 0, i32* %93, align 4
  br label %1210

346:                                              ; preds = %322
  %347 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %348 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %347, i32 0, i32 4
  %349 = load i32, i32* %348, align 4
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %385, label %351

351:                                              ; preds = %346
  %352 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %353 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %352, i32 0, i32 0
  %354 = load i64, i64* %353, align 8
  %355 = load i32, i32* %113, align 4
  %356 = zext i32 %355 to i64
  %357 = add i64 %354, %356
  %358 = add i64 %357, 30
  %359 = load i64, i64* %117, align 8
  %360 = add i64 %358, %359
  %361 = add i64 %360, 46
  %362 = load i64, i64* %117, align 8
  %363 = add i64 %361, %362
  %364 = load i16, i16* %99, align 2
  %365 = zext i16 %364 to i64
  %366 = add i64 %363, %365
  %367 = load i32, i32* %105, align 4
  %368 = zext i32 %367 to i64
  %369 = add i64 %366, %368
  %370 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %371 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %370, i32 0, i32 0
  %372 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %371, i32 0, i32 1
  %373 = load i64, i64* %372, align 8
  %374 = add i64 %369, %373
  %375 = add i64 %374, 22
  %376 = load i32, i32* %107, align 4
  %377 = zext i32 %376 to i64
  %378 = add i64 %375, %377
  %379 = add i64 %378, 16
  %380 = icmp ugt i64 %379, 4294967295
  br i1 %380, label %381, label %384

381:                                              ; preds = %351
  %382 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %383 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %382, i32 0, i32 4
  store i32 1, i32* %383, align 4
  br label %384

384:                                              ; preds = %381, %351
  br label %385

385:                                              ; preds = %384, %346
  %386 = load i64, i64* %117, align 8
  %387 = icmp ne i64 %386, 0
  br i1 %387, label %388, label %414

388:                                              ; preds = %385
  %389 = load i8*, i8** %95, align 8
  %390 = load i64, i64* %117, align 8
  %391 = sub i64 %390, 1
  %392 = getelementptr inbounds i8, i8* %389, i64 %391
  %393 = load i8, i8* %392, align 1
  %394 = sext i8 %393 to i32
  %395 = icmp eq i32 %394, 47
  br i1 %395, label %396, label %414

396:                                              ; preds = %388
  %397 = load i32, i32* %112, align 4
  %398 = or i32 %397, 16
  store i32 %398, i32* %112, align 4
  %399 = load i64, i64* %97, align 8
  %400 = icmp ne i64 %399, 0
  br i1 %400, label %404, label %401

401:                                              ; preds = %396
  %402 = load i64, i64* %101, align 8
  %403 = icmp ne i64 %402, 0
  br i1 %403, label %404, label %413

404:                                              ; preds = %401, %396
  %405 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %405, %struct.mz_zip_archive** %63, align 8
  store i32 24, i32* %64, align 4
  %406 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %63, align 8
  %407 = icmp ne %struct.mz_zip_archive* %406, null
  br i1 %407, label %408, label %412

408:                                              ; preds = %404
  %409 = load i32, i32* %64, align 4
  %410 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %63, align 8
  %411 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %410, i32 0, i32 5
  store i32 %409, i32* %411, align 4
  br label %412

412:                                              ; preds = %404, %408
  store i32 0, i32* %93, align 4
  br label %1210

413:                                              ; preds = %401
  br label %414

414:                                              ; preds = %413, %388, %385
  %415 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %416 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %417 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %416, i32 0, i32 0
  %418 = load i64, i64* %117, align 8
  %419 = add i64 46, %418
  %420 = load i16, i16* %99, align 2
  %421 = zext i16 %420 to i64
  %422 = add i64 %419, %421
  %423 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %424 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %423, i32 0, i32 4
  %425 = load i32, i32* %424, align 4
  %426 = icmp ne i32 %425, 0
  %427 = zext i1 %426 to i64
  %428 = select i1 %426, i64 28, i64 0
  %429 = add i64 %422, %428
  store %struct.mz_zip_archive* %415, %struct.mz_zip_archive** %45, align 8
  store %struct.mz_zip_array* %417, %struct.mz_zip_array** %46, align 8
  store i64 %429, i64* %47, align 8
  %430 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %45, align 8
  %431 = load %struct.mz_zip_array*, %struct.mz_zip_array** %46, align 8
  %432 = load %struct.mz_zip_array*, %struct.mz_zip_array** %46, align 8
  %433 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %432, i32 0, i32 1
  %434 = load i64, i64* %433, align 8
  %435 = load i64, i64* %47, align 8
  %436 = add i64 %434, %435
  store %struct.mz_zip_archive* %430, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_array* %431, %struct.mz_zip_array** %22, align 8
  store i64 %436, i64* %23, align 8
  store i32 1, i32* %24, align 4
  %437 = load i64, i64* %23, align 8
  %438 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %439 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %438, i32 0, i32 2
  %440 = load i64, i64* %439, align 8
  %441 = icmp ugt i64 %437, %440
  br i1 %441, label %442, label %451

442:                                              ; preds = %414
  %443 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %444 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %445 = load i64, i64* %23, align 8
  %446 = load i32, i32* %24, align 4
  %447 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %443, %struct.mz_zip_array* noundef %444, i64 noundef %445, i32 noundef %446) #7
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %450, label %449

449:                                              ; preds = %442
  store i32 0, i32* %20, align 4
  br label %452

450:                                              ; preds = %442
  br label %451

451:                                              ; preds = %450, %414
  store i32 1, i32* %20, align 4
  br label %452

452:                                              ; preds = %449, %451
  %453 = load i32, i32* %20, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %484

455:                                              ; preds = %452
  %456 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %457 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %458 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %457, i32 0, i32 1
  store %struct.mz_zip_archive* %456, %struct.mz_zip_archive** %48, align 8
  store %struct.mz_zip_array* %458, %struct.mz_zip_array** %49, align 8
  store i64 1, i64* %50, align 8
  %459 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %460 = load %struct.mz_zip_array*, %struct.mz_zip_array** %49, align 8
  %461 = load %struct.mz_zip_array*, %struct.mz_zip_array** %49, align 8
  %462 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %461, i32 0, i32 1
  %463 = load i64, i64* %462, align 8
  %464 = load i64, i64* %50, align 8
  %465 = add i64 %463, %464
  store %struct.mz_zip_archive* %459, %struct.mz_zip_archive** %16, align 8
  store %struct.mz_zip_array* %460, %struct.mz_zip_array** %17, align 8
  store i64 %465, i64* %18, align 8
  store i32 1, i32* %19, align 4
  %466 = load i64, i64* %18, align 8
  %467 = load %struct.mz_zip_array*, %struct.mz_zip_array** %17, align 8
  %468 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %467, i32 0, i32 2
  %469 = load i64, i64* %468, align 8
  %470 = icmp ugt i64 %466, %469
  br i1 %470, label %471, label %480

471:                                              ; preds = %455
  %472 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %473 = load %struct.mz_zip_array*, %struct.mz_zip_array** %17, align 8
  %474 = load i64, i64* %18, align 8
  %475 = load i32, i32* %19, align 4
  %476 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %472, %struct.mz_zip_array* noundef %473, i64 noundef %474, i32 noundef %475) #7
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %479, label %478

478:                                              ; preds = %471
  store i32 0, i32* %15, align 4
  br label %481

479:                                              ; preds = %471
  br label %480

480:                                              ; preds = %479, %455
  store i32 1, i32* %15, align 4
  br label %481

481:                                              ; preds = %478, %480
  %482 = load i32, i32* %15, align 4
  %483 = icmp ne i32 %482, 0
  br i1 %483, label %493, label %484

484:                                              ; preds = %481, %452
  %485 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %485, %struct.mz_zip_archive** %65, align 8
  store i32 16, i32* %66, align 4
  %486 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %65, align 8
  %487 = icmp ne %struct.mz_zip_archive* %486, null
  br i1 %487, label %488, label %492

488:                                              ; preds = %484
  %489 = load i32, i32* %66, align 4
  %490 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %65, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %490, i32 0, i32 5
  store i32 %489, i32* %491, align 4
  br label %492

492:                                              ; preds = %484, %488
  store i32 0, i32* %93, align 4
  br label %1210

493:                                              ; preds = %481
  %494 = load i32, i32* %120, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %519, label %496

496:                                              ; preds = %493
  %497 = load i64, i64* %97, align 8
  %498 = icmp ne i64 %497, 0
  br i1 %498, label %499, label %519

499:                                              ; preds = %496
  %500 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %501 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %500, i32 0, i32 7
  %502 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %501, align 8
  %503 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %504 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %503, i32 0, i32 10
  %505 = load i8*, i8** %504, align 8
  %506 = call i8* %502(i8* noundef %505, i64 noundef 1, i64 noundef 319352)
  %507 = bitcast i8* %506 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %507, %struct.tdefl_compressor** %119, align 8
  %508 = icmp eq %struct.tdefl_compressor* null, %507
  br i1 %508, label %509, label %518

509:                                              ; preds = %499
  %510 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %510, %struct.mz_zip_archive** %67, align 8
  store i32 16, i32* %68, align 4
  %511 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %67, align 8
  %512 = icmp ne %struct.mz_zip_archive* %511, null
  br i1 %512, label %513, label %517

513:                                              ; preds = %509
  %514 = load i32, i32* %68, align 4
  %515 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %67, align 8
  %516 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %515, i32 0, i32 5
  store i32 %514, i32* %516, align 4
  br label %517

517:                                              ; preds = %509, %513
  store i32 0, i32* %93, align 4
  br label %1210

518:                                              ; preds = %499
  br label %519

519:                                              ; preds = %518, %496, %493
  %520 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %521 = load i64, i64* %115, align 8
  %522 = load i32, i32* %113, align 4
  %523 = call i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive* noundef %520, i64 noundef %521, i32 noundef %522)
  %524 = icmp ne i32 %523, 0
  br i1 %524, label %534, label %525

525:                                              ; preds = %519
  %526 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %527 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %526, i32 0, i32 8
  %528 = load void (i8*, i8*)*, void (i8*, i8*)** %527, align 8
  %529 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %530 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %529, i32 0, i32 10
  %531 = load i8*, i8** %530, align 8
  %532 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %533 = bitcast %struct.tdefl_compressor* %532 to i8*
  call void %528(i8* noundef %531, i8* noundef %533)
  store i32 0, i32* %93, align 4
  br label %1210

534:                                              ; preds = %519
  %535 = load i32, i32* %113, align 4
  %536 = zext i32 %535 to i64
  %537 = load i64, i64* %114, align 8
  %538 = add i64 %537, %536
  store i64 %538, i64* %114, align 8
  %539 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %540 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %539, i32 0, i32 6
  %541 = load i64, i64* %540, align 8
  %542 = icmp ne i64 %541, 0
  br i1 %542, label %543, label %554

543:                                              ; preds = %534
  %544 = load i64, i64* %114, align 8
  %545 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %546 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %545, i32 0, i32 6
  %547 = load i64, i64* %546, align 8
  %548 = sub i64 %547, 1
  %549 = and i64 %544, %548
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %552

551:                                              ; preds = %543
  br label %553

552:                                              ; preds = %543
  call void @__assert_fail(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.22, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 6339, i8* noundef getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex_v2, i64 0, i64 0)) #8
  unreachable

553:                                              ; preds = %551
  br label %554

554:                                              ; preds = %553, %534
  %555 = load i32, i32* %113, align 4
  %556 = zext i32 %555 to i64
  %557 = load i64, i64* %115, align 8
  %558 = add i64 %557, %556
  store i64 %558, i64* %115, align 8
  %559 = getelementptr inbounds [30 x i8], [30 x i8]* %118, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %559, i8 0, i64 30, i1 false)
  %560 = load i32, i32* %120, align 4
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %562, label %566

562:                                              ; preds = %554
  %563 = load i32, i32* %100, align 4
  %564 = and i32 %563, 1024
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %562, %554
  store i16 8, i16* %108, align 2
  br label %567

567:                                              ; preds = %566, %562
  %568 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %569 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %568, i32 0, i32 4
  %570 = load i32, i32* %569, align 4
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %572, label %712

572:                                              ; preds = %567
  %573 = load i64, i64* %101, align 8
  %574 = icmp uge i64 %573, 4294967295
  br i1 %574, label %578, label %575

575:                                              ; preds = %572
  %576 = load i64, i64* %114, align 8
  %577 = icmp uge i64 %576, 4294967295
  br i1 %577, label %578, label %600

578:                                              ; preds = %575, %572
  %579 = getelementptr inbounds [28 x i8], [28 x i8]* %124, i64 0, i64 0
  store i8* %579, i8** %122, align 8
  %580 = getelementptr inbounds [28 x i8], [28 x i8]* %124, i64 0, i64 0
  %581 = load i64, i64* %101, align 8
  %582 = icmp uge i64 %581, 4294967295
  br i1 %582, label %583, label %584

583:                                              ; preds = %578
  br label %585

584:                                              ; preds = %578
  br label %585

585:                                              ; preds = %584, %583
  %586 = phi i64* [ %101, %583 ], [ null, %584 ]
  %587 = load i64, i64* %101, align 8
  %588 = icmp uge i64 %587, 4294967295
  br i1 %588, label %589, label %590

589:                                              ; preds = %585
  br label %591

590:                                              ; preds = %585
  br label %591

591:                                              ; preds = %590, %589
  %592 = phi i64* [ %116, %589 ], [ null, %590 ]
  %593 = load i64, i64* %114, align 8
  %594 = icmp uge i64 %593, 4294967295
  br i1 %594, label %595, label %596

595:                                              ; preds = %591
  br label %597

596:                                              ; preds = %591
  br label %597

597:                                              ; preds = %596, %595
  %598 = phi i64* [ %114, %595 ], [ null, %596 ]
  %599 = call i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %580, i64* noundef %586, i64* noundef %592, i64* noundef %598)
  store i32 %599, i32* %123, align 4
  br label %600

600:                                              ; preds = %597, %575
  %601 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %602 = getelementptr inbounds [30 x i8], [30 x i8]* %118, i64 0, i64 0
  %603 = load i64, i64* %117, align 8
  %604 = trunc i64 %603 to i16
  %605 = load i32, i32* %123, align 4
  %606 = load i32, i32* %105, align 4
  %607 = add i32 %605, %606
  %608 = trunc i32 %607 to i16
  %609 = load i16, i16* %108, align 2
  %610 = load i16, i16* %125, align 2
  %611 = load i16, i16* %109, align 2
  %612 = load i16, i16* %110, align 2
  %613 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive* noundef %601, i8* noundef %602, i16 noundef zeroext %604, i16 noundef zeroext %608, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %609, i16 noundef zeroext %610, i16 noundef zeroext %611, i16 noundef zeroext %612)
  %614 = icmp ne i32 %613, 0
  br i1 %614, label %624, label %615

615:                                              ; preds = %600
  %616 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %616, %struct.mz_zip_archive** %69, align 8
  store i32 27, i32* %70, align 4
  %617 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %69, align 8
  %618 = icmp ne %struct.mz_zip_archive* %617, null
  br i1 %618, label %619, label %623

619:                                              ; preds = %615
  %620 = load i32, i32* %70, align 4
  %621 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %69, align 8
  %622 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %621, i32 0, i32 5
  store i32 %620, i32* %622, align 4
  br label %623

623:                                              ; preds = %615, %619
  store i32 0, i32* %93, align 4
  br label %1210

624:                                              ; preds = %600
  %625 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %626 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %625, i32 0, i32 12
  %627 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %626, align 8
  %628 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %629 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %628, i32 0, i32 14
  %630 = load i8*, i8** %629, align 8
  %631 = load i64, i64* %114, align 8
  %632 = getelementptr inbounds [30 x i8], [30 x i8]* %118, i64 0, i64 0
  %633 = call i64 %627(i8* noundef %630, i64 noundef %631, i8* noundef %632, i64 noundef 30)
  %634 = icmp ne i64 %633, 30
  br i1 %634, label %635, label %644

635:                                              ; preds = %624
  %636 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %636, %struct.mz_zip_archive** %71, align 8
  store i32 19, i32* %72, align 4
  %637 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %71, align 8
  %638 = icmp ne %struct.mz_zip_archive* %637, null
  br i1 %638, label %639, label %643

639:                                              ; preds = %635
  %640 = load i32, i32* %72, align 4
  %641 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %71, align 8
  %642 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %641, i32 0, i32 5
  store i32 %640, i32* %642, align 4
  br label %643

643:                                              ; preds = %635, %639
  store i32 0, i32* %93, align 4
  br label %1210

644:                                              ; preds = %624
  %645 = load i64, i64* %115, align 8
  %646 = add i64 %645, 30
  store i64 %646, i64* %115, align 8
  %647 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %648 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %647, i32 0, i32 12
  %649 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %648, align 8
  %650 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %651 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %650, i32 0, i32 14
  %652 = load i8*, i8** %651, align 8
  %653 = load i64, i64* %115, align 8
  %654 = load i8*, i8** %95, align 8
  %655 = load i64, i64* %117, align 8
  %656 = call i64 %649(i8* noundef %652, i64 noundef %653, i8* noundef %654, i64 noundef %655)
  %657 = load i64, i64* %117, align 8
  %658 = icmp ne i64 %656, %657
  br i1 %658, label %659, label %676

659:                                              ; preds = %644
  %660 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %661 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %660, i32 0, i32 8
  %662 = load void (i8*, i8*)*, void (i8*, i8*)** %661, align 8
  %663 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %664 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %663, i32 0, i32 10
  %665 = load i8*, i8** %664, align 8
  %666 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %667 = bitcast %struct.tdefl_compressor* %666 to i8*
  call void %662(i8* noundef %665, i8* noundef %667)
  %668 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %668, %struct.mz_zip_archive** %73, align 8
  store i32 19, i32* %74, align 4
  %669 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %670 = icmp ne %struct.mz_zip_archive* %669, null
  br i1 %670, label %671, label %675

671:                                              ; preds = %659
  %672 = load i32, i32* %74, align 4
  %673 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %674 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %673, i32 0, i32 5
  store i32 %672, i32* %674, align 4
  br label %675

675:                                              ; preds = %659, %671
  store i32 0, i32* %93, align 4
  br label %1210

676:                                              ; preds = %644
  %677 = load i64, i64* %117, align 8
  %678 = load i64, i64* %115, align 8
  %679 = add i64 %678, %677
  store i64 %679, i64* %115, align 8
  %680 = load i8*, i8** %122, align 8
  %681 = icmp ne i8* %680, null
  br i1 %681, label %682, label %711

682:                                              ; preds = %676
  %683 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %684 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %683, i32 0, i32 12
  %685 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %684, align 8
  %686 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %687 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %686, i32 0, i32 14
  %688 = load i8*, i8** %687, align 8
  %689 = load i64, i64* %115, align 8
  %690 = getelementptr inbounds [28 x i8], [28 x i8]* %124, i64 0, i64 0
  %691 = load i32, i32* %123, align 4
  %692 = zext i32 %691 to i64
  %693 = call i64 %685(i8* noundef %688, i64 noundef %689, i8* noundef %690, i64 noundef %692)
  %694 = load i32, i32* %123, align 4
  %695 = zext i32 %694 to i64
  %696 = icmp ne i64 %693, %695
  br i1 %696, label %697, label %706

697:                                              ; preds = %682
  %698 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %698, %struct.mz_zip_archive** %75, align 8
  store i32 19, i32* %76, align 4
  %699 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %700 = icmp ne %struct.mz_zip_archive* %699, null
  br i1 %700, label %701, label %705

701:                                              ; preds = %697
  %702 = load i32, i32* %76, align 4
  %703 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %704 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %703, i32 0, i32 5
  store i32 %702, i32* %704, align 4
  br label %705

705:                                              ; preds = %697, %701
  store i32 0, i32* %93, align 4
  br label %1210

706:                                              ; preds = %682
  %707 = load i32, i32* %123, align 4
  %708 = zext i32 %707 to i64
  %709 = load i64, i64* %115, align 8
  %710 = add i64 %709, %708
  store i64 %710, i64* %115, align 8
  br label %711

711:                                              ; preds = %706, %676
  br label %805

712:                                              ; preds = %567
  %713 = load i64, i64* %116, align 8
  %714 = icmp ugt i64 %713, 4294967295
  br i1 %714, label %718, label %715

715:                                              ; preds = %712
  %716 = load i64, i64* %115, align 8
  %717 = icmp ugt i64 %716, 4294967295
  br i1 %717, label %718, label %727

718:                                              ; preds = %715, %712
  %719 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %719, %struct.mz_zip_archive** %77, align 8
  store i32 29, i32* %78, align 4
  %720 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %77, align 8
  %721 = icmp ne %struct.mz_zip_archive* %720, null
  br i1 %721, label %722, label %726

722:                                              ; preds = %718
  %723 = load i32, i32* %78, align 4
  %724 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %77, align 8
  %725 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %724, i32 0, i32 5
  store i32 %723, i32* %725, align 4
  br label %726

726:                                              ; preds = %718, %722
  store i32 0, i32* %93, align 4
  br label %1210

727:                                              ; preds = %715
  %728 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %729 = getelementptr inbounds [30 x i8], [30 x i8]* %118, i64 0, i64 0
  %730 = load i64, i64* %117, align 8
  %731 = trunc i64 %730 to i16
  %732 = load i32, i32* %105, align 4
  %733 = trunc i32 %732 to i16
  %734 = load i16, i16* %108, align 2
  %735 = load i16, i16* %125, align 2
  %736 = load i16, i16* %109, align 2
  %737 = load i16, i16* %110, align 2
  %738 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive* noundef %728, i8* noundef %729, i16 noundef zeroext %731, i16 noundef zeroext %733, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %734, i16 noundef zeroext %735, i16 noundef zeroext %736, i16 noundef zeroext %737)
  %739 = icmp ne i32 %738, 0
  br i1 %739, label %749, label %740

740:                                              ; preds = %727
  %741 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %741, %struct.mz_zip_archive** %79, align 8
  store i32 27, i32* %80, align 4
  %742 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  %743 = icmp ne %struct.mz_zip_archive* %742, null
  br i1 %743, label %744, label %748

744:                                              ; preds = %740
  %745 = load i32, i32* %80, align 4
  %746 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  %747 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %746, i32 0, i32 5
  store i32 %745, i32* %747, align 4
  br label %748

748:                                              ; preds = %740, %744
  store i32 0, i32* %93, align 4
  br label %1210

749:                                              ; preds = %727
  %750 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %751 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %750, i32 0, i32 12
  %752 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %751, align 8
  %753 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %754 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %753, i32 0, i32 14
  %755 = load i8*, i8** %754, align 8
  %756 = load i64, i64* %114, align 8
  %757 = getelementptr inbounds [30 x i8], [30 x i8]* %118, i64 0, i64 0
  %758 = call i64 %752(i8* noundef %755, i64 noundef %756, i8* noundef %757, i64 noundef 30)
  %759 = icmp ne i64 %758, 30
  br i1 %759, label %760, label %769

760:                                              ; preds = %749
  %761 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %761, %struct.mz_zip_archive** %81, align 8
  store i32 19, i32* %82, align 4
  %762 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %81, align 8
  %763 = icmp ne %struct.mz_zip_archive* %762, null
  br i1 %763, label %764, label %768

764:                                              ; preds = %760
  %765 = load i32, i32* %82, align 4
  %766 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %81, align 8
  %767 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %766, i32 0, i32 5
  store i32 %765, i32* %767, align 4
  br label %768

768:                                              ; preds = %760, %764
  store i32 0, i32* %93, align 4
  br label %1210

769:                                              ; preds = %749
  %770 = load i64, i64* %115, align 8
  %771 = add i64 %770, 30
  store i64 %771, i64* %115, align 8
  %772 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %773 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %772, i32 0, i32 12
  %774 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %773, align 8
  %775 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %776 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %775, i32 0, i32 14
  %777 = load i8*, i8** %776, align 8
  %778 = load i64, i64* %115, align 8
  %779 = load i8*, i8** %95, align 8
  %780 = load i64, i64* %117, align 8
  %781 = call i64 %774(i8* noundef %777, i64 noundef %778, i8* noundef %779, i64 noundef %780)
  %782 = load i64, i64* %117, align 8
  %783 = icmp ne i64 %781, %782
  br i1 %783, label %784, label %801

784:                                              ; preds = %769
  %785 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %786 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %785, i32 0, i32 8
  %787 = load void (i8*, i8*)*, void (i8*, i8*)** %786, align 8
  %788 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %789 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %788, i32 0, i32 10
  %790 = load i8*, i8** %789, align 8
  %791 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %792 = bitcast %struct.tdefl_compressor* %791 to i8*
  call void %787(i8* noundef %790, i8* noundef %792)
  %793 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %793, %struct.mz_zip_archive** %83, align 8
  store i32 19, i32* %84, align 4
  %794 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %83, align 8
  %795 = icmp ne %struct.mz_zip_archive* %794, null
  br i1 %795, label %796, label %800

796:                                              ; preds = %784
  %797 = load i32, i32* %84, align 4
  %798 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %83, align 8
  %799 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %798, i32 0, i32 5
  store i32 %797, i32* %799, align 4
  br label %800

800:                                              ; preds = %784, %796
  store i32 0, i32* %93, align 4
  br label %1210

801:                                              ; preds = %769
  %802 = load i64, i64* %117, align 8
  %803 = load i64, i64* %115, align 8
  %804 = add i64 %803, %802
  store i64 %804, i64* %115, align 8
  br label %805

805:                                              ; preds = %801, %711
  %806 = load i32, i32* %105, align 4
  %807 = icmp ugt i32 %806, 0
  br i1 %807, label %808, label %837

808:                                              ; preds = %805
  %809 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %810 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %809, i32 0, i32 12
  %811 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %810, align 8
  %812 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %813 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %812, i32 0, i32 14
  %814 = load i8*, i8** %813, align 8
  %815 = load i64, i64* %115, align 8
  %816 = load i8*, i8** %104, align 8
  %817 = load i32, i32* %105, align 4
  %818 = zext i32 %817 to i64
  %819 = call i64 %811(i8* noundef %814, i64 noundef %815, i8* noundef %816, i64 noundef %818)
  %820 = load i32, i32* %105, align 4
  %821 = zext i32 %820 to i64
  %822 = icmp ne i64 %819, %821
  br i1 %822, label %823, label %832

823:                                              ; preds = %808
  %824 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %824, %struct.mz_zip_archive** %85, align 8
  store i32 19, i32* %86, align 4
  %825 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %85, align 8
  %826 = icmp ne %struct.mz_zip_archive* %825, null
  br i1 %826, label %827, label %831

827:                                              ; preds = %823
  %828 = load i32, i32* %86, align 4
  %829 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %85, align 8
  %830 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %829, i32 0, i32 5
  store i32 %828, i32* %830, align 4
  br label %831

831:                                              ; preds = %823, %827
  store i32 0, i32* %93, align 4
  br label %1210

832:                                              ; preds = %808
  %833 = load i32, i32* %105, align 4
  %834 = zext i32 %833 to i64
  %835 = load i64, i64* %115, align 8
  %836 = add i64 %835, %834
  store i64 %836, i64* %115, align 8
  br label %837

837:                                              ; preds = %832, %805
  %838 = load i32, i32* %120, align 4
  %839 = icmp ne i32 %838, 0
  br i1 %839, label %840, label %875

840:                                              ; preds = %837
  %841 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %842 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %841, i32 0, i32 12
  %843 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %842, align 8
  %844 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %845 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %844, i32 0, i32 14
  %846 = load i8*, i8** %845, align 8
  %847 = load i64, i64* %115, align 8
  %848 = load i8*, i8** %96, align 8
  %849 = load i64, i64* %97, align 8
  %850 = call i64 %843(i8* noundef %846, i64 noundef %847, i8* noundef %848, i64 noundef %849)
  %851 = load i64, i64* %97, align 8
  %852 = icmp ne i64 %850, %851
  br i1 %852, label %853, label %870

853:                                              ; preds = %840
  %854 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %855 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %854, i32 0, i32 8
  %856 = load void (i8*, i8*)*, void (i8*, i8*)** %855, align 8
  %857 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %858 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %857, i32 0, i32 10
  %859 = load i8*, i8** %858, align 8
  %860 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %861 = bitcast %struct.tdefl_compressor* %860 to i8*
  call void %856(i8* noundef %859, i8* noundef %861)
  %862 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %862, %struct.mz_zip_archive** %87, align 8
  store i32 19, i32* %88, align 4
  %863 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %87, align 8
  %864 = icmp ne %struct.mz_zip_archive* %863, null
  br i1 %864, label %865, label %869

865:                                              ; preds = %853
  %866 = load i32, i32* %88, align 4
  %867 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %87, align 8
  %868 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %867, i32 0, i32 5
  store i32 %866, i32* %868, align 4
  br label %869

869:                                              ; preds = %853, %865
  store i32 0, i32* %93, align 4
  br label %1210

870:                                              ; preds = %840
  %871 = load i64, i64* %97, align 8
  %872 = load i64, i64* %115, align 8
  %873 = add i64 %872, %871
  store i64 %873, i64* %115, align 8
  %874 = load i64, i64* %97, align 8
  store i64 %874, i64* %116, align 8
  br label %919

875:                                              ; preds = %837
  %876 = load i64, i64* %97, align 8
  %877 = icmp ne i64 %876, 0
  br i1 %877, label %878, label %918

878:                                              ; preds = %875
  %879 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %880 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 0
  store %struct.mz_zip_archive* %879, %struct.mz_zip_archive** %880, align 8
  %881 = load i64, i64* %115, align 8
  %882 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 1
  store i64 %881, i64* %882, align 8
  %883 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 2
  store i64 0, i64* %883, align 8
  %884 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %885 = bitcast %struct.mz_zip_writer_add_state* %127 to i8*
  %886 = load i32, i32* %111, align 4
  %887 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %886, i32 noundef -15, i32 noundef 0)
  %888 = call i32 @tdefl_init(%struct.tdefl_compressor* noundef %884, i32 (i8*, i32, i8*)* noundef @mz_zip_writer_add_put_buf_callback, i8* noundef %885, i32 noundef %887)
  %889 = icmp ne i32 %888, 0
  br i1 %889, label %896, label %890

890:                                              ; preds = %878
  %891 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %892 = load i8*, i8** %96, align 8
  %893 = load i64, i64* %97, align 8
  %894 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %891, i8* noundef %892, i64 noundef %893, i32 noundef 4)
  %895 = icmp ne i32 %894, 1
  br i1 %895, label %896, label %913

896:                                              ; preds = %890, %878
  %897 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %898 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %897, i32 0, i32 8
  %899 = load void (i8*, i8*)*, void (i8*, i8*)** %898, align 8
  %900 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %901 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %900, i32 0, i32 10
  %902 = load i8*, i8** %901, align 8
  %903 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %904 = bitcast %struct.tdefl_compressor* %903 to i8*
  call void %899(i8* noundef %902, i8* noundef %904)
  %905 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %905, %struct.mz_zip_archive** %89, align 8
  store i32 12, i32* %90, align 4
  %906 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %89, align 8
  %907 = icmp ne %struct.mz_zip_archive* %906, null
  br i1 %907, label %908, label %912

908:                                              ; preds = %896
  %909 = load i32, i32* %90, align 4
  %910 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %89, align 8
  %911 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %910, i32 0, i32 5
  store i32 %909, i32* %911, align 4
  br label %912

912:                                              ; preds = %896, %908
  store i32 0, i32* %93, align 4
  br label %1210

913:                                              ; preds = %890
  %914 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 2
  %915 = load i64, i64* %914, align 8
  store i64 %915, i64* %116, align 8
  %916 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 1
  %917 = load i64, i64* %916, align 8
  store i64 %917, i64* %115, align 8
  br label %918

918:                                              ; preds = %913, %875
  br label %919

919:                                              ; preds = %918, %870
  %920 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %921 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %920, i32 0, i32 8
  %922 = load void (i8*, i8*)*, void (i8*, i8*)** %921, align 8
  %923 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %924 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %923, i32 0, i32 10
  %925 = load i8*, i8** %924, align 8
  %926 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %119, align 8
  %927 = bitcast %struct.tdefl_compressor* %926 to i8*
  call void %922(i8* noundef %925, i8* noundef %927)
  store %struct.tdefl_compressor* null, %struct.tdefl_compressor** %119, align 8
  %928 = load i64, i64* %101, align 8
  %929 = icmp ne i64 %928, 0
  br i1 %929, label %930, label %1154

930:                                              ; preds = %919
  store i32 16, i32* %129, align 4
  %931 = load i16, i16* %125, align 2
  %932 = zext i16 %931 to i32
  %933 = and i32 %932, 8
  %934 = icmp ne i32 %933, 0
  br i1 %934, label %935, label %936

935:                                              ; preds = %930
  br label %937

936:                                              ; preds = %930
  call void @__assert_fail(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 6448, i8* noundef getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex_v2, i64 0, i64 0)) #8
  unreachable

937:                                              ; preds = %935
  %938 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %939 = getelementptr inbounds i8, i8* %938, i64 0
  store i8* %939, i8** %37, align 8
  store i32 134695760, i32* %38, align 4
  %940 = load i32, i32* %38, align 4
  %941 = trunc i32 %940 to i8
  %942 = load i8*, i8** %37, align 8
  store i8 %941, i8* %942, align 1
  %943 = load i32, i32* %38, align 4
  %944 = lshr i32 %943, 8
  %945 = trunc i32 %944 to i8
  %946 = load i8*, i8** %37, align 8
  %947 = getelementptr inbounds i8, i8* %946, i64 1
  store i8 %945, i8* %947, align 1
  %948 = load i32, i32* %38, align 4
  %949 = lshr i32 %948, 16
  %950 = trunc i32 %949 to i8
  %951 = load i8*, i8** %37, align 8
  %952 = getelementptr inbounds i8, i8* %951, i64 2
  store i8 %950, i8* %952, align 1
  %953 = load i32, i32* %38, align 4
  %954 = lshr i32 %953, 24
  %955 = trunc i32 %954 to i8
  %956 = load i8*, i8** %37, align 8
  %957 = getelementptr inbounds i8, i8* %956, i64 3
  store i8 %955, i8* %957, align 1
  %958 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %959 = getelementptr inbounds i8, i8* %958, i64 4
  %960 = load i32, i32* %102, align 4
  store i8* %959, i8** %39, align 8
  store i32 %960, i32* %40, align 4
  %961 = load i32, i32* %40, align 4
  %962 = trunc i32 %961 to i8
  %963 = load i8*, i8** %39, align 8
  store i8 %962, i8* %963, align 1
  %964 = load i32, i32* %40, align 4
  %965 = lshr i32 %964, 8
  %966 = trunc i32 %965 to i8
  %967 = load i8*, i8** %39, align 8
  %968 = getelementptr inbounds i8, i8* %967, i64 1
  store i8 %966, i8* %968, align 1
  %969 = load i32, i32* %40, align 4
  %970 = lshr i32 %969, 16
  %971 = trunc i32 %970 to i8
  %972 = load i8*, i8** %39, align 8
  %973 = getelementptr inbounds i8, i8* %972, i64 2
  store i8 %971, i8* %973, align 1
  %974 = load i32, i32* %40, align 4
  %975 = lshr i32 %974, 24
  %976 = trunc i32 %975 to i8
  %977 = load i8*, i8** %39, align 8
  %978 = getelementptr inbounds i8, i8* %977, i64 3
  store i8 %976, i8* %978, align 1
  %979 = load i8*, i8** %122, align 8
  %980 = icmp eq i8* %979, null
  br i1 %980, label %981, label %1038

981:                                              ; preds = %937
  %982 = load i64, i64* %116, align 8
  %983 = icmp ugt i64 %982, 4294967295
  br i1 %983, label %984, label %993

984:                                              ; preds = %981
  %985 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  store %struct.mz_zip_archive* %985, %struct.mz_zip_archive** %91, align 8
  store i32 29, i32* %92, align 4
  %986 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %987 = icmp ne %struct.mz_zip_archive* %986, null
  br i1 %987, label %988, label %992

988:                                              ; preds = %984
  %989 = load i32, i32* %92, align 4
  %990 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %991 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %990, i32 0, i32 5
  store i32 %989, i32* %991, align 4
  br label %992

992:                                              ; preds = %984, %988
  store i32 0, i32* %93, align 4
  br label %1210

993:                                              ; preds = %981
  %994 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %995 = getelementptr inbounds i8, i8* %994, i64 8
  %996 = load i64, i64* %116, align 8
  %997 = trunc i64 %996 to i32
  store i8* %995, i8** %41, align 8
  store i32 %997, i32* %42, align 4
  %998 = load i32, i32* %42, align 4
  %999 = trunc i32 %998 to i8
  %1000 = load i8*, i8** %41, align 8
  store i8 %999, i8* %1000, align 1
  %1001 = load i32, i32* %42, align 4
  %1002 = lshr i32 %1001, 8
  %1003 = trunc i32 %1002 to i8
  %1004 = load i8*, i8** %41, align 8
  %1005 = getelementptr inbounds i8, i8* %1004, i64 1
  store i8 %1003, i8* %1005, align 1
  %1006 = load i32, i32* %42, align 4
  %1007 = lshr i32 %1006, 16
  %1008 = trunc i32 %1007 to i8
  %1009 = load i8*, i8** %41, align 8
  %1010 = getelementptr inbounds i8, i8* %1009, i64 2
  store i8 %1008, i8* %1010, align 1
  %1011 = load i32, i32* %42, align 4
  %1012 = lshr i32 %1011, 24
  %1013 = trunc i32 %1012 to i8
  %1014 = load i8*, i8** %41, align 8
  %1015 = getelementptr inbounds i8, i8* %1014, i64 3
  store i8 %1013, i8* %1015, align 1
  %1016 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %1017 = getelementptr inbounds i8, i8* %1016, i64 12
  %1018 = load i64, i64* %101, align 8
  %1019 = trunc i64 %1018 to i32
  store i8* %1017, i8** %43, align 8
  store i32 %1019, i32* %44, align 4
  %1020 = load i32, i32* %44, align 4
  %1021 = trunc i32 %1020 to i8
  %1022 = load i8*, i8** %43, align 8
  store i8 %1021, i8* %1022, align 1
  %1023 = load i32, i32* %44, align 4
  %1024 = lshr i32 %1023, 8
  %1025 = trunc i32 %1024 to i8
  %1026 = load i8*, i8** %43, align 8
  %1027 = getelementptr inbounds i8, i8* %1026, i64 1
  store i8 %1025, i8* %1027, align 1
  %1028 = load i32, i32* %44, align 4
  %1029 = lshr i32 %1028, 16
  %1030 = trunc i32 %1029 to i8
  %1031 = load i8*, i8** %43, align 8
  %1032 = getelementptr inbounds i8, i8* %1031, i64 2
  store i8 %1030, i8* %1032, align 1
  %1033 = load i32, i32* %44, align 4
  %1034 = lshr i32 %1033, 24
  %1035 = trunc i32 %1034 to i8
  %1036 = load i8*, i8** %43, align 8
  %1037 = getelementptr inbounds i8, i8* %1036, i64 3
  store i8 %1035, i8* %1037, align 1
  br label %1133

1038:                                             ; preds = %937
  %1039 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %1040 = getelementptr inbounds i8, i8* %1039, i64 8
  %1041 = load i64, i64* %116, align 8
  store i8* %1040, i8** %29, align 8
  store i64 %1041, i64* %30, align 8
  %1042 = load i8*, i8** %29, align 8
  %1043 = load i64, i64* %30, align 8
  %1044 = trunc i64 %1043 to i32
  store i8* %1042, i8** %25, align 8
  store i32 %1044, i32* %26, align 4
  %1045 = load i32, i32* %26, align 4
  %1046 = trunc i32 %1045 to i8
  %1047 = load i8*, i8** %25, align 8
  store i8 %1046, i8* %1047, align 1
  %1048 = load i32, i32* %26, align 4
  %1049 = lshr i32 %1048, 8
  %1050 = trunc i32 %1049 to i8
  %1051 = load i8*, i8** %25, align 8
  %1052 = getelementptr inbounds i8, i8* %1051, i64 1
  store i8 %1050, i8* %1052, align 1
  %1053 = load i32, i32* %26, align 4
  %1054 = lshr i32 %1053, 16
  %1055 = trunc i32 %1054 to i8
  %1056 = load i8*, i8** %25, align 8
  %1057 = getelementptr inbounds i8, i8* %1056, i64 2
  store i8 %1055, i8* %1057, align 1
  %1058 = load i32, i32* %26, align 4
  %1059 = lshr i32 %1058, 24
  %1060 = trunc i32 %1059 to i8
  %1061 = load i8*, i8** %25, align 8
  %1062 = getelementptr inbounds i8, i8* %1061, i64 3
  store i8 %1060, i8* %1062, align 1
  %1063 = load i8*, i8** %29, align 8
  %1064 = getelementptr inbounds i8, i8* %1063, i64 4
  %1065 = load i64, i64* %30, align 8
  %1066 = lshr i64 %1065, 32
  %1067 = trunc i64 %1066 to i32
  store i8* %1064, i8** %27, align 8
  store i32 %1067, i32* %28, align 4
  %1068 = load i32, i32* %28, align 4
  %1069 = trunc i32 %1068 to i8
  %1070 = load i8*, i8** %27, align 8
  store i8 %1069, i8* %1070, align 1
  %1071 = load i32, i32* %28, align 4
  %1072 = lshr i32 %1071, 8
  %1073 = trunc i32 %1072 to i8
  %1074 = load i8*, i8** %27, align 8
  %1075 = getelementptr inbounds i8, i8* %1074, i64 1
  store i8 %1073, i8* %1075, align 1
  %1076 = load i32, i32* %28, align 4
  %1077 = lshr i32 %1076, 16
  %1078 = trunc i32 %1077 to i8
  %1079 = load i8*, i8** %27, align 8
  %1080 = getelementptr inbounds i8, i8* %1079, i64 2
  store i8 %1078, i8* %1080, align 1
  %1081 = load i32, i32* %28, align 4
  %1082 = lshr i32 %1081, 24
  %1083 = trunc i32 %1082 to i8
  %1084 = load i8*, i8** %27, align 8
  %1085 = getelementptr inbounds i8, i8* %1084, i64 3
  store i8 %1083, i8* %1085, align 1
  %1086 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %1087 = getelementptr inbounds i8, i8* %1086, i64 16
  %1088 = load i64, i64* %101, align 8
  store i8* %1087, i8** %35, align 8
  store i64 %1088, i64* %36, align 8
  %1089 = load i8*, i8** %35, align 8
  %1090 = load i64, i64* %36, align 8
  %1091 = trunc i64 %1090 to i32
  store i8* %1089, i8** %31, align 8
  store i32 %1091, i32* %32, align 4
  %1092 = load i32, i32* %32, align 4
  %1093 = trunc i32 %1092 to i8
  %1094 = load i8*, i8** %31, align 8
  store i8 %1093, i8* %1094, align 1
  %1095 = load i32, i32* %32, align 4
  %1096 = lshr i32 %1095, 8
  %1097 = trunc i32 %1096 to i8
  %1098 = load i8*, i8** %31, align 8
  %1099 = getelementptr inbounds i8, i8* %1098, i64 1
  store i8 %1097, i8* %1099, align 1
  %1100 = load i32, i32* %32, align 4
  %1101 = lshr i32 %1100, 16
  %1102 = trunc i32 %1101 to i8
  %1103 = load i8*, i8** %31, align 8
  %1104 = getelementptr inbounds i8, i8* %1103, i64 2
  store i8 %1102, i8* %1104, align 1
  %1105 = load i32, i32* %32, align 4
  %1106 = lshr i32 %1105, 24
  %1107 = trunc i32 %1106 to i8
  %1108 = load i8*, i8** %31, align 8
  %1109 = getelementptr inbounds i8, i8* %1108, i64 3
  store i8 %1107, i8* %1109, align 1
  %1110 = load i8*, i8** %35, align 8
  %1111 = getelementptr inbounds i8, i8* %1110, i64 4
  %1112 = load i64, i64* %36, align 8
  %1113 = lshr i64 %1112, 32
  %1114 = trunc i64 %1113 to i32
  store i8* %1111, i8** %33, align 8
  store i32 %1114, i32* %34, align 4
  %1115 = load i32, i32* %34, align 4
  %1116 = trunc i32 %1115 to i8
  %1117 = load i8*, i8** %33, align 8
  store i8 %1116, i8* %1117, align 1
  %1118 = load i32, i32* %34, align 4
  %1119 = lshr i32 %1118, 8
  %1120 = trunc i32 %1119 to i8
  %1121 = load i8*, i8** %33, align 8
  %1122 = getelementptr inbounds i8, i8* %1121, i64 1
  store i8 %1120, i8* %1122, align 1
  %1123 = load i32, i32* %34, align 4
  %1124 = lshr i32 %1123, 16
  %1125 = trunc i32 %1124 to i8
  %1126 = load i8*, i8** %33, align 8
  %1127 = getelementptr inbounds i8, i8* %1126, i64 2
  store i8 %1125, i8* %1127, align 1
  %1128 = load i32, i32* %34, align 4
  %1129 = lshr i32 %1128, 24
  %1130 = trunc i32 %1129 to i8
  %1131 = load i8*, i8** %33, align 8
  %1132 = getelementptr inbounds i8, i8* %1131, i64 3
  store i8 %1130, i8* %1132, align 1
  store i32 24, i32* %129, align 4
  br label %1133

1133:                                             ; preds = %1038, %993
  %1134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %1135 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1134, i32 0, i32 12
  %1136 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1135, align 8
  %1137 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %1138 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1137, i32 0, i32 14
  %1139 = load i8*, i8** %1138, align 8
  %1140 = load i64, i64* %115, align 8
  %1141 = getelementptr inbounds [24 x i8], [24 x i8]* %128, i64 0, i64 0
  %1142 = load i32, i32* %129, align 4
  %1143 = zext i32 %1142 to i64
  %1144 = call i64 %1136(i8* noundef %1139, i64 noundef %1140, i8* noundef %1141, i64 noundef %1143)
  %1145 = load i32, i32* %129, align 4
  %1146 = zext i32 %1145 to i64
  %1147 = icmp ne i64 %1144, %1146
  br i1 %1147, label %1148, label %1149

1148:                                             ; preds = %1133
  store i32 0, i32* %93, align 4
  br label %1210

1149:                                             ; preds = %1133
  %1150 = load i32, i32* %129, align 4
  %1151 = zext i32 %1150 to i64
  %1152 = load i64, i64* %115, align 8
  %1153 = add i64 %1152, %1151
  store i64 %1153, i64* %115, align 8
  br label %1154

1154:                                             ; preds = %1149, %919
  %1155 = load i8*, i8** %122, align 8
  %1156 = icmp ne i8* %1155, null
  br i1 %1156, label %1157, label %1178

1157:                                             ; preds = %1154
  %1158 = getelementptr inbounds [28 x i8], [28 x i8]* %124, i64 0, i64 0
  %1159 = load i64, i64* %101, align 8
  %1160 = icmp uge i64 %1159, 4294967295
  br i1 %1160, label %1161, label %1162

1161:                                             ; preds = %1157
  br label %1163

1162:                                             ; preds = %1157
  br label %1163

1163:                                             ; preds = %1162, %1161
  %1164 = phi i64* [ %101, %1161 ], [ null, %1162 ]
  %1165 = load i64, i64* %101, align 8
  %1166 = icmp uge i64 %1165, 4294967295
  br i1 %1166, label %1167, label %1168

1167:                                             ; preds = %1163
  br label %1169

1168:                                             ; preds = %1163
  br label %1169

1169:                                             ; preds = %1168, %1167
  %1170 = phi i64* [ %116, %1167 ], [ null, %1168 ]
  %1171 = load i64, i64* %114, align 8
  %1172 = icmp uge i64 %1171, 4294967295
  br i1 %1172, label %1173, label %1174

1173:                                             ; preds = %1169
  br label %1175

1174:                                             ; preds = %1169
  br label %1175

1175:                                             ; preds = %1174, %1173
  %1176 = phi i64* [ %114, %1173 ], [ null, %1174 ]
  %1177 = call i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %1158, i64* noundef %1164, i64* noundef %1170, i64* noundef %1176)
  store i32 %1177, i32* %123, align 4
  br label %1178

1178:                                             ; preds = %1175, %1154
  %1179 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %1180 = load i8*, i8** %95, align 8
  %1181 = load i64, i64* %117, align 8
  %1182 = trunc i64 %1181 to i16
  %1183 = load i8*, i8** %122, align 8
  %1184 = load i32, i32* %123, align 4
  %1185 = trunc i32 %1184 to i16
  %1186 = load i8*, i8** %98, align 8
  %1187 = load i16, i16* %99, align 2
  %1188 = load i64, i64* %101, align 8
  %1189 = load i64, i64* %116, align 8
  %1190 = load i32, i32* %102, align 4
  %1191 = load i16, i16* %108, align 2
  %1192 = load i16, i16* %125, align 2
  %1193 = load i16, i16* %109, align 2
  %1194 = load i16, i16* %110, align 2
  %1195 = load i64, i64* %114, align 8
  %1196 = load i32, i32* %112, align 4
  %1197 = load i8*, i8** %106, align 8
  %1198 = load i32, i32* %107, align 4
  %1199 = call i32 @mz_zip_writer_add_to_central_dir(%struct.mz_zip_archive* noundef %1179, i8* noundef %1180, i16 noundef zeroext %1182, i8* noundef %1183, i16 noundef zeroext %1185, i8* noundef %1186, i16 noundef zeroext %1187, i64 noundef %1188, i64 noundef %1189, i32 noundef %1190, i16 noundef zeroext %1191, i16 noundef zeroext %1192, i16 noundef zeroext %1193, i16 noundef zeroext %1194, i64 noundef %1195, i32 noundef %1196, i8* noundef %1197, i32 noundef %1198)
  %1200 = icmp ne i32 %1199, 0
  br i1 %1200, label %1202, label %1201

1201:                                             ; preds = %1178
  store i32 0, i32* %93, align 4
  br label %1210

1202:                                             ; preds = %1178
  %1203 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %1204 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1203, i32 0, i32 2
  %1205 = load i32, i32* %1204, align 8
  %1206 = add i32 %1205, 1
  store i32 %1206, i32* %1204, align 8
  %1207 = load i64, i64* %115, align 8
  %1208 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %1209 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1208, i32 0, i32 0
  store i64 %1207, i64* %1209, align 8
  store i32 1, i32* %93, align 4
  br label %1210

1210:                                             ; preds = %1202, %1201, %1148, %992, %912, %869, %831, %800, %768, %748, %726, %705, %675, %643, %623, %525, %517, %492, %412, %345, %321, %284, %271, %236, %214
  %1211 = load i32, i32* %93, align 4
  ret i32 %1211
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_validate_archive_name(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = icmp eq i32 %6, 47
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %10

9:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  br label %10

10:                                               ; preds = %9, %8
  %11 = load i32, i32* %2, align 4
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mz_zip_time_t_to_dos_time(i64 noundef %0, i16* noundef %1, i16* noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca %struct.tm*, align 8
  store i64 %0, i64* %4, align 8
  store i16* %1, i16** %5, align 8
  store i16* %2, i16** %6, align 8
  %8 = call %struct.tm* @localtime(i64* noundef %4) #7
  store %struct.tm* %8, %struct.tm** %7, align 8
  %9 = load %struct.tm*, %struct.tm** %7, align 8
  %10 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = shl i32 %11, 11
  %13 = load %struct.tm*, %struct.tm** %7, align 8
  %14 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = shl i32 %15, 5
  %17 = add nsw i32 %12, %16
  %18 = load %struct.tm*, %struct.tm** %7, align 8
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = ashr i32 %20, 1
  %22 = add nsw i32 %17, %21
  %23 = trunc i32 %22 to i16
  %24 = load i16*, i16** %5, align 8
  store i16 %23, i16* %24, align 2
  %25 = load %struct.tm*, %struct.tm** %7, align 8
  %26 = getelementptr inbounds %struct.tm, %struct.tm* %25, i32 0, i32 5
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1900
  %29 = sub nsw i32 %28, 1980
  %30 = shl i32 %29, 9
  %31 = load %struct.tm*, %struct.tm** %7, align 8
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %31, i32 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 1
  %35 = shl i32 %34, 5
  %36 = add nsw i32 %30, %35
  %37 = load %struct.tm*, %struct.tm** %7, align 8
  %38 = getelementptr inbounds %struct.tm, %struct.tm* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %36, %39
  %41 = trunc i32 %40 to i16
  %42 = load i16*, i16** %6, align 8
  store i16 %41, i16* %42, align 2
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @time(i64* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %5 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %6 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %5, i32 0, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %32

10:                                               ; preds = %1
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %12 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %14, i32 0, i32 6
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, 1
  %18 = and i64 %13, %17
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %4, align 4
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 6
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %4, align 4
  %24 = zext i32 %23 to i64
  %25 = sub i64 %22, %24
  %26 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %26, i32 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, 1
  %30 = and i64 %25, %29
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %2, align 4
  br label %32

32:                                               ; preds = %10, %9
  %33 = load i32, i32* %2, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive* noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32 %2, i32* %9, align 4
  %12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %13 = load i32, i32* %9, align 4
  %14 = zext i32 %13 to i64
  %15 = icmp ult i64 4096, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  br label %20

17:                                               ; preds = %3
  %18 = load i32, i32* %9, align 4
  %19 = zext i32 %18 to i64
  br label %20

20:                                               ; preds = %17, %16
  %21 = phi i64 [ 4096, %16 ], [ %19, %17 ]
  call void @llvm.memset.p0i8.i64(i8* align 16 %12, i8 0, i64 %21, i1 false)
  br label %22

22:                                               ; preds = %59, %20
  %23 = load i32, i32* %9, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %67

25:                                               ; preds = %22
  %26 = load i32, i32* %9, align 4
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 4096, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  br label %33

30:                                               ; preds = %25
  %31 = load i32, i32* %9, align 4
  %32 = zext i32 %31 to i64
  br label %33

33:                                               ; preds = %30, %29
  %34 = phi i64 [ 4096, %29 ], [ %32, %30 ]
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %11, align 4
  %36 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %36, i32 0, i32 12
  %38 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %37, align 8
  %39 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %39, i32 0, i32 14
  %41 = load i8*, i8** %40, align 8
  %42 = load i64, i64* %8, align 8
  %43 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %44 = load i32, i32* %11, align 4
  %45 = zext i32 %44 to i64
  %46 = call i64 %38(i8* noundef %41, i64 noundef %42, i8* noundef %43, i64 noundef %45)
  %47 = load i32, i32* %11, align 4
  %48 = zext i32 %47 to i64
  %49 = icmp ne i64 %46, %48
  br i1 %49, label %50, label %59

50:                                               ; preds = %33
  %51 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  store %struct.mz_zip_archive* %51, %struct.mz_zip_archive** %4, align 8
  store i32 19, i32* %5, align 4
  %52 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %53 = icmp ne %struct.mz_zip_archive* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = load i32, i32* %5, align 4
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %56, i32 0, i32 5
  store i32 %55, i32* %57, align 4
  br label %58

58:                                               ; preds = %50, %54
  store i32 0, i32* %6, align 4
  br label %68

59:                                               ; preds = %33
  %60 = load i32, i32* %11, align 4
  %61 = zext i32 %60 to i64
  %62 = load i64, i64* %8, align 8
  %63 = add i64 %62, %61
  store i64 %63, i64* %8, align 8
  %64 = load i32, i32* %11, align 4
  %65 = load i32, i32* %9, align 4
  %66 = sub i32 %65, %64
  store i32 %66, i32* %9, align 4
  br label %22, !llvm.loop !125

67:                                               ; preds = %22
  store i32 1, i32* %6, align 4
  br label %68

68:                                               ; preds = %67, %58
  %69 = load i32, i32* %6, align 4
  ret i32 %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %0, i64* noundef %1, i64* noundef %2, i64* noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i8*, align 8
  %8 = alloca i16, align 2
  %9 = alloca i8*, align 8
  %10 = alloca i16, align 2
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i32, align 4
  store i8* %0, i8** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  store i64* %3, i64** %32, align 8
  %35 = load i8*, i8** %29, align 8
  store i8* %35, i8** %33, align 8
  store i32 0, i32* %34, align 4
  %36 = load i8*, i8** %33, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  store i8* %37, i8** %5, align 8
  store i16 1, i16* %6, align 2
  %38 = load i16, i16* %6, align 2
  %39 = trunc i16 %38 to i8
  %40 = load i8*, i8** %5, align 8
  store i8 %39, i8* %40, align 1
  %41 = load i16, i16* %6, align 2
  %42 = zext i16 %41 to i32
  %43 = ashr i32 %42, 8
  %44 = trunc i32 %43 to i8
  %45 = load i8*, i8** %5, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %44, i8* %46, align 1
  %47 = load i8*, i8** %33, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 2
  store i8* %48, i8** %7, align 8
  store i16 0, i16* %8, align 2
  %49 = load i16, i16* %8, align 2
  %50 = trunc i16 %49 to i8
  %51 = load i8*, i8** %7, align 8
  store i8 %50, i8* %51, align 1
  %52 = load i16, i16* %8, align 2
  %53 = zext i16 %52 to i32
  %54 = ashr i32 %53, 8
  %55 = trunc i32 %54 to i8
  %56 = load i8*, i8** %7, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  store i8 %55, i8* %57, align 1
  %58 = load i8*, i8** %33, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 4
  store i8* %59, i8** %33, align 8
  %60 = load i64*, i64** %30, align 8
  %61 = icmp ne i64* %60, null
  br i1 %61, label %62, label %116

62:                                               ; preds = %4
  %63 = load i8*, i8** %33, align 8
  %64 = load i64*, i64** %30, align 8
  %65 = load i64, i64* %64, align 8
  store i8* %63, i8** %15, align 8
  store i64 %65, i64* %16, align 8
  %66 = load i8*, i8** %15, align 8
  %67 = load i64, i64* %16, align 8
  %68 = trunc i64 %67 to i32
  store i8* %66, i8** %11, align 8
  store i32 %68, i32* %12, align 4
  %69 = load i32, i32* %12, align 4
  %70 = trunc i32 %69 to i8
  %71 = load i8*, i8** %11, align 8
  store i8 %70, i8* %71, align 1
  %72 = load i32, i32* %12, align 4
  %73 = lshr i32 %72, 8
  %74 = trunc i32 %73 to i8
  %75 = load i8*, i8** %11, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  store i8 %74, i8* %76, align 1
  %77 = load i32, i32* %12, align 4
  %78 = lshr i32 %77, 16
  %79 = trunc i32 %78 to i8
  %80 = load i8*, i8** %11, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 2
  store i8 %79, i8* %81, align 1
  %82 = load i32, i32* %12, align 4
  %83 = lshr i32 %82, 24
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %11, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 3
  store i8 %84, i8* %86, align 1
  %87 = load i8*, i8** %15, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  %89 = load i64, i64* %16, align 8
  %90 = lshr i64 %89, 32
  %91 = trunc i64 %90 to i32
  store i8* %88, i8** %13, align 8
  store i32 %91, i32* %14, align 4
  %92 = load i32, i32* %14, align 4
  %93 = trunc i32 %92 to i8
  %94 = load i8*, i8** %13, align 8
  store i8 %93, i8* %94, align 1
  %95 = load i32, i32* %14, align 4
  %96 = lshr i32 %95, 8
  %97 = trunc i32 %96 to i8
  %98 = load i8*, i8** %13, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  store i8 %97, i8* %99, align 1
  %100 = load i32, i32* %14, align 4
  %101 = lshr i32 %100, 16
  %102 = trunc i32 %101 to i8
  %103 = load i8*, i8** %13, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 2
  store i8 %102, i8* %104, align 1
  %105 = load i32, i32* %14, align 4
  %106 = lshr i32 %105, 24
  %107 = trunc i32 %106 to i8
  %108 = load i8*, i8** %13, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 3
  store i8 %107, i8* %109, align 1
  %110 = load i8*, i8** %33, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 8
  store i8* %111, i8** %33, align 8
  %112 = load i32, i32* %34, align 4
  %113 = zext i32 %112 to i64
  %114 = add i64 %113, 8
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %34, align 4
  br label %116

116:                                              ; preds = %62, %4
  %117 = load i64*, i64** %31, align 8
  %118 = icmp ne i64* %117, null
  br i1 %118, label %119, label %173

119:                                              ; preds = %116
  %120 = load i8*, i8** %33, align 8
  %121 = load i64*, i64** %31, align 8
  %122 = load i64, i64* %121, align 8
  store i8* %120, i8** %21, align 8
  store i64 %122, i64* %22, align 8
  %123 = load i8*, i8** %21, align 8
  %124 = load i64, i64* %22, align 8
  %125 = trunc i64 %124 to i32
  store i8* %123, i8** %17, align 8
  store i32 %125, i32* %18, align 4
  %126 = load i32, i32* %18, align 4
  %127 = trunc i32 %126 to i8
  %128 = load i8*, i8** %17, align 8
  store i8 %127, i8* %128, align 1
  %129 = load i32, i32* %18, align 4
  %130 = lshr i32 %129, 8
  %131 = trunc i32 %130 to i8
  %132 = load i8*, i8** %17, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 1
  store i8 %131, i8* %133, align 1
  %134 = load i32, i32* %18, align 4
  %135 = lshr i32 %134, 16
  %136 = trunc i32 %135 to i8
  %137 = load i8*, i8** %17, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 2
  store i8 %136, i8* %138, align 1
  %139 = load i32, i32* %18, align 4
  %140 = lshr i32 %139, 24
  %141 = trunc i32 %140 to i8
  %142 = load i8*, i8** %17, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 3
  store i8 %141, i8* %143, align 1
  %144 = load i8*, i8** %21, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 4
  %146 = load i64, i64* %22, align 8
  %147 = lshr i64 %146, 32
  %148 = trunc i64 %147 to i32
  store i8* %145, i8** %19, align 8
  store i32 %148, i32* %20, align 4
  %149 = load i32, i32* %20, align 4
  %150 = trunc i32 %149 to i8
  %151 = load i8*, i8** %19, align 8
  store i8 %150, i8* %151, align 1
  %152 = load i32, i32* %20, align 4
  %153 = lshr i32 %152, 8
  %154 = trunc i32 %153 to i8
  %155 = load i8*, i8** %19, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 1
  store i8 %154, i8* %156, align 1
  %157 = load i32, i32* %20, align 4
  %158 = lshr i32 %157, 16
  %159 = trunc i32 %158 to i8
  %160 = load i8*, i8** %19, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 2
  store i8 %159, i8* %161, align 1
  %162 = load i32, i32* %20, align 4
  %163 = lshr i32 %162, 24
  %164 = trunc i32 %163 to i8
  %165 = load i8*, i8** %19, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 3
  store i8 %164, i8* %166, align 1
  %167 = load i8*, i8** %33, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 8
  store i8* %168, i8** %33, align 8
  %169 = load i32, i32* %34, align 4
  %170 = zext i32 %169 to i64
  %171 = add i64 %170, 8
  %172 = trunc i64 %171 to i32
  store i32 %172, i32* %34, align 4
  br label %173

173:                                              ; preds = %119, %116
  %174 = load i64*, i64** %32, align 8
  %175 = icmp ne i64* %174, null
  br i1 %175, label %176, label %230

176:                                              ; preds = %173
  %177 = load i8*, i8** %33, align 8
  %178 = load i64*, i64** %32, align 8
  %179 = load i64, i64* %178, align 8
  store i8* %177, i8** %27, align 8
  store i64 %179, i64* %28, align 8
  %180 = load i8*, i8** %27, align 8
  %181 = load i64, i64* %28, align 8
  %182 = trunc i64 %181 to i32
  store i8* %180, i8** %23, align 8
  store i32 %182, i32* %24, align 4
  %183 = load i32, i32* %24, align 4
  %184 = trunc i32 %183 to i8
  %185 = load i8*, i8** %23, align 8
  store i8 %184, i8* %185, align 1
  %186 = load i32, i32* %24, align 4
  %187 = lshr i32 %186, 8
  %188 = trunc i32 %187 to i8
  %189 = load i8*, i8** %23, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 1
  store i8 %188, i8* %190, align 1
  %191 = load i32, i32* %24, align 4
  %192 = lshr i32 %191, 16
  %193 = trunc i32 %192 to i8
  %194 = load i8*, i8** %23, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 2
  store i8 %193, i8* %195, align 1
  %196 = load i32, i32* %24, align 4
  %197 = lshr i32 %196, 24
  %198 = trunc i32 %197 to i8
  %199 = load i8*, i8** %23, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 3
  store i8 %198, i8* %200, align 1
  %201 = load i8*, i8** %27, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 4
  %203 = load i64, i64* %28, align 8
  %204 = lshr i64 %203, 32
  %205 = trunc i64 %204 to i32
  store i8* %202, i8** %25, align 8
  store i32 %205, i32* %26, align 4
  %206 = load i32, i32* %26, align 4
  %207 = trunc i32 %206 to i8
  %208 = load i8*, i8** %25, align 8
  store i8 %207, i8* %208, align 1
  %209 = load i32, i32* %26, align 4
  %210 = lshr i32 %209, 8
  %211 = trunc i32 %210 to i8
  %212 = load i8*, i8** %25, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 1
  store i8 %211, i8* %213, align 1
  %214 = load i32, i32* %26, align 4
  %215 = lshr i32 %214, 16
  %216 = trunc i32 %215 to i8
  %217 = load i8*, i8** %25, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 2
  store i8 %216, i8* %218, align 1
  %219 = load i32, i32* %26, align 4
  %220 = lshr i32 %219, 24
  %221 = trunc i32 %220 to i8
  %222 = load i8*, i8** %25, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 3
  store i8 %221, i8* %223, align 1
  %224 = load i8*, i8** %33, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 8
  store i8* %225, i8** %33, align 8
  %226 = load i32, i32* %34, align 4
  %227 = zext i32 %226 to i64
  %228 = add i64 %227, 8
  %229 = trunc i64 %228 to i32
  store i32 %229, i32* %34, align 4
  br label %230

230:                                              ; preds = %176, %173
  %231 = load i8*, i8** %29, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 2
  %233 = load i32, i32* %34, align 4
  %234 = trunc i32 %233 to i16
  store i8* %232, i8** %9, align 8
  store i16 %234, i16* %10, align 2
  %235 = load i16, i16* %10, align 2
  %236 = trunc i16 %235 to i8
  %237 = load i8*, i8** %9, align 8
  store i8 %236, i8* %237, align 1
  %238 = load i16, i16* %10, align 2
  %239 = zext i16 %238 to i32
  %240 = ashr i32 %239, 8
  %241 = trunc i32 %240 to i8
  %242 = load i8*, i8** %9, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 1
  store i8 %241, i8* %243, align 1
  %244 = load i8*, i8** %33, align 8
  %245 = load i8*, i8** %29, align 8
  %246 = ptrtoint i8* %244 to i64
  %247 = ptrtoint i8* %245 to i64
  %248 = sub i64 %246, %247
  %249 = trunc i64 %248 to i32
  ret i32 %249
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i64 noundef %4, i64 noundef %5, i32 noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8, i16 noundef zeroext %9, i16 noundef zeroext %10) #0 {
  %12 = alloca i8*, align 8
  %13 = alloca i16, align 2
  %14 = alloca i8*, align 8
  %15 = alloca i16, align 2
  %16 = alloca i8*, align 8
  %17 = alloca i16, align 2
  %18 = alloca i8*, align 8
  %19 = alloca i16, align 2
  %20 = alloca i8*, align 8
  %21 = alloca i16, align 2
  %22 = alloca i8*, align 8
  %23 = alloca i16, align 2
  %24 = alloca i8*, align 8
  %25 = alloca i16, align 2
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca %struct.mz_zip_archive*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i16, align 2
  %37 = alloca i16, align 2
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32, align 4
  %41 = alloca i16, align 2
  %42 = alloca i16, align 2
  %43 = alloca i16, align 2
  %44 = alloca i16, align 2
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %34, align 8
  store i8* %1, i8** %35, align 8
  store i16 %2, i16* %36, align 2
  store i16 %3, i16* %37, align 2
  store i64 %4, i64* %38, align 8
  store i64 %5, i64* %39, align 8
  store i32 %6, i32* %40, align 4
  store i16 %7, i16* %41, align 2
  store i16 %8, i16* %42, align 2
  store i16 %9, i16* %43, align 2
  store i16 %10, i16* %44, align 2
  %45 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %46 = load i8*, i8** %35, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 30, i1 false)
  %47 = load i8*, i8** %35, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  store i8* %48, i8** %26, align 8
  store i32 67324752, i32* %27, align 4
  %49 = load i32, i32* %27, align 4
  %50 = trunc i32 %49 to i8
  %51 = load i8*, i8** %26, align 8
  store i8 %50, i8* %51, align 1
  %52 = load i32, i32* %27, align 4
  %53 = lshr i32 %52, 8
  %54 = trunc i32 %53 to i8
  %55 = load i8*, i8** %26, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 1
  store i8 %54, i8* %56, align 1
  %57 = load i32, i32* %27, align 4
  %58 = lshr i32 %57, 16
  %59 = trunc i32 %58 to i8
  %60 = load i8*, i8** %26, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 2
  store i8 %59, i8* %61, align 1
  %62 = load i32, i32* %27, align 4
  %63 = lshr i32 %62, 24
  %64 = trunc i32 %63 to i8
  %65 = load i8*, i8** %26, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 3
  store i8 %64, i8* %66, align 1
  %67 = load i8*, i8** %35, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 4
  %69 = load i16, i16* %41, align 2
  %70 = zext i16 %69 to i32
  %71 = icmp ne i32 %70, 0
  %72 = zext i1 %71 to i64
  %73 = select i1 %71, i32 20, i32 0
  %74 = trunc i32 %73 to i16
  store i8* %68, i8** %12, align 8
  store i16 %74, i16* %13, align 2
  %75 = load i16, i16* %13, align 2
  %76 = trunc i16 %75 to i8
  %77 = load i8*, i8** %12, align 8
  store i8 %76, i8* %77, align 1
  %78 = load i16, i16* %13, align 2
  %79 = zext i16 %78 to i32
  %80 = ashr i32 %79, 8
  %81 = trunc i32 %80 to i8
  %82 = load i8*, i8** %12, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  store i8 %81, i8* %83, align 1
  %84 = load i8*, i8** %35, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 6
  %86 = load i16, i16* %42, align 2
  store i8* %85, i8** %14, align 8
  store i16 %86, i16* %15, align 2
  %87 = load i16, i16* %15, align 2
  %88 = trunc i16 %87 to i8
  %89 = load i8*, i8** %14, align 8
  store i8 %88, i8* %89, align 1
  %90 = load i16, i16* %15, align 2
  %91 = zext i16 %90 to i32
  %92 = ashr i32 %91, 8
  %93 = trunc i32 %92 to i8
  %94 = load i8*, i8** %14, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  store i8 %93, i8* %95, align 1
  %96 = load i8*, i8** %35, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 8
  %98 = load i16, i16* %41, align 2
  store i8* %97, i8** %16, align 8
  store i16 %98, i16* %17, align 2
  %99 = load i16, i16* %17, align 2
  %100 = trunc i16 %99 to i8
  %101 = load i8*, i8** %16, align 8
  store i8 %100, i8* %101, align 1
  %102 = load i16, i16* %17, align 2
  %103 = zext i16 %102 to i32
  %104 = ashr i32 %103, 8
  %105 = trunc i32 %104 to i8
  %106 = load i8*, i8** %16, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  store i8 %105, i8* %107, align 1
  %108 = load i8*, i8** %35, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 10
  %110 = load i16, i16* %43, align 2
  store i8* %109, i8** %18, align 8
  store i16 %110, i16* %19, align 2
  %111 = load i16, i16* %19, align 2
  %112 = trunc i16 %111 to i8
  %113 = load i8*, i8** %18, align 8
  store i8 %112, i8* %113, align 1
  %114 = load i16, i16* %19, align 2
  %115 = zext i16 %114 to i32
  %116 = ashr i32 %115, 8
  %117 = trunc i32 %116 to i8
  %118 = load i8*, i8** %18, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  store i8 %117, i8* %119, align 1
  %120 = load i8*, i8** %35, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 12
  %122 = load i16, i16* %44, align 2
  store i8* %121, i8** %20, align 8
  store i16 %122, i16* %21, align 2
  %123 = load i16, i16* %21, align 2
  %124 = trunc i16 %123 to i8
  %125 = load i8*, i8** %20, align 8
  store i8 %124, i8* %125, align 1
  %126 = load i16, i16* %21, align 2
  %127 = zext i16 %126 to i32
  %128 = ashr i32 %127, 8
  %129 = trunc i32 %128 to i8
  %130 = load i8*, i8** %20, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  store i8 %129, i8* %131, align 1
  %132 = load i8*, i8** %35, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 14
  %134 = load i32, i32* %40, align 4
  store i8* %133, i8** %28, align 8
  store i32 %134, i32* %29, align 4
  %135 = load i32, i32* %29, align 4
  %136 = trunc i32 %135 to i8
  %137 = load i8*, i8** %28, align 8
  store i8 %136, i8* %137, align 1
  %138 = load i32, i32* %29, align 4
  %139 = lshr i32 %138, 8
  %140 = trunc i32 %139 to i8
  %141 = load i8*, i8** %28, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  store i8 %140, i8* %142, align 1
  %143 = load i32, i32* %29, align 4
  %144 = lshr i32 %143, 16
  %145 = trunc i32 %144 to i8
  %146 = load i8*, i8** %28, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 2
  store i8 %145, i8* %147, align 1
  %148 = load i32, i32* %29, align 4
  %149 = lshr i32 %148, 24
  %150 = trunc i32 %149 to i8
  %151 = load i8*, i8** %28, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 3
  store i8 %150, i8* %152, align 1
  %153 = load i8*, i8** %35, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 18
  %155 = load i64, i64* %39, align 8
  %156 = icmp ult i64 %155, 4294967295
  br i1 %156, label %157, label %159

157:                                              ; preds = %11
  %158 = load i64, i64* %39, align 8
  br label %160

159:                                              ; preds = %11
  br label %160

160:                                              ; preds = %159, %157
  %161 = phi i64 [ %158, %157 ], [ 4294967295, %159 ]
  %162 = trunc i64 %161 to i32
  store i8* %154, i8** %30, align 8
  store i32 %162, i32* %31, align 4
  %163 = load i32, i32* %31, align 4
  %164 = trunc i32 %163 to i8
  %165 = load i8*, i8** %30, align 8
  store i8 %164, i8* %165, align 1
  %166 = load i32, i32* %31, align 4
  %167 = lshr i32 %166, 8
  %168 = trunc i32 %167 to i8
  %169 = load i8*, i8** %30, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 1
  store i8 %168, i8* %170, align 1
  %171 = load i32, i32* %31, align 4
  %172 = lshr i32 %171, 16
  %173 = trunc i32 %172 to i8
  %174 = load i8*, i8** %30, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 2
  store i8 %173, i8* %175, align 1
  %176 = load i32, i32* %31, align 4
  %177 = lshr i32 %176, 24
  %178 = trunc i32 %177 to i8
  %179 = load i8*, i8** %30, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 3
  store i8 %178, i8* %180, align 1
  %181 = load i8*, i8** %35, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 22
  %183 = load i64, i64* %38, align 8
  %184 = icmp ult i64 %183, 4294967295
  br i1 %184, label %185, label %187

185:                                              ; preds = %160
  %186 = load i64, i64* %38, align 8
  br label %188

187:                                              ; preds = %160
  br label %188

188:                                              ; preds = %187, %185
  %189 = phi i64 [ %186, %185 ], [ 4294967295, %187 ]
  %190 = trunc i64 %189 to i32
  store i8* %182, i8** %32, align 8
  store i32 %190, i32* %33, align 4
  %191 = load i32, i32* %33, align 4
  %192 = trunc i32 %191 to i8
  %193 = load i8*, i8** %32, align 8
  store i8 %192, i8* %193, align 1
  %194 = load i32, i32* %33, align 4
  %195 = lshr i32 %194, 8
  %196 = trunc i32 %195 to i8
  %197 = load i8*, i8** %32, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 1
  store i8 %196, i8* %198, align 1
  %199 = load i32, i32* %33, align 4
  %200 = lshr i32 %199, 16
  %201 = trunc i32 %200 to i8
  %202 = load i8*, i8** %32, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 2
  store i8 %201, i8* %203, align 1
  %204 = load i32, i32* %33, align 4
  %205 = lshr i32 %204, 24
  %206 = trunc i32 %205 to i8
  %207 = load i8*, i8** %32, align 8
  %208 = getelementptr inbounds i8, i8* %207, i64 3
  store i8 %206, i8* %208, align 1
  %209 = load i8*, i8** %35, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 26
  %211 = load i16, i16* %36, align 2
  store i8* %210, i8** %22, align 8
  store i16 %211, i16* %23, align 2
  %212 = load i16, i16* %23, align 2
  %213 = trunc i16 %212 to i8
  %214 = load i8*, i8** %22, align 8
  store i8 %213, i8* %214, align 1
  %215 = load i16, i16* %23, align 2
  %216 = zext i16 %215 to i32
  %217 = ashr i32 %216, 8
  %218 = trunc i32 %217 to i8
  %219 = load i8*, i8** %22, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 1
  store i8 %218, i8* %220, align 1
  %221 = load i8*, i8** %35, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 28
  %223 = load i16, i16* %37, align 2
  store i8* %222, i8** %24, align 8
  store i16 %223, i16* %25, align 2
  %224 = load i16, i16* %25, align 2
  %225 = trunc i16 %224 to i8
  %226 = load i8*, i8** %24, align 8
  store i8 %225, i8* %226, align 1
  %227 = load i16, i16* %25, align 2
  %228 = zext i16 %227 to i32
  %229 = ashr i32 %228, 8
  %230 = trunc i32 %229 to i8
  %231 = load i8*, i8** %24, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 1
  store i8 %230, i8* %232, align 1
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_add_put_buf_callback(i8* noundef %0, i32 noundef %1, i8* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.mz_zip_writer_add_state*, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  %9 = load i8*, i8** %7, align 8
  %10 = bitcast i8* %9 to %struct.mz_zip_writer_add_state*
  store %struct.mz_zip_writer_add_state* %10, %struct.mz_zip_writer_add_state** %8, align 8
  %11 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %8, align 8
  %12 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %11, i32 0, i32 0
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %13, i32 0, i32 12
  %15 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %14, align 8
  %16 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %8, align 8
  %17 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %16, i32 0, i32 0
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %17, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %18, i32 0, i32 14
  %20 = load i8*, i8** %19, align 8
  %21 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %8, align 8
  %22 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = load i8*, i8** %5, align 8
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = call i64 %15(i8* noundef %20, i64 noundef %23, i8* noundef %24, i64 noundef %26)
  %28 = trunc i64 %27 to i32
  %29 = load i32, i32* %6, align 4
  %30 = icmp ne i32 %28, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %45

32:                                               ; preds = %3
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %8, align 8
  %36 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %34
  store i64 %38, i64* %36, align 8
  %39 = load i32, i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %40
  store i64 %44, i64* %42, align 8
  store i32 1, i32* %4, align 4
  br label %45

45:                                               ; preds = %32, %31
  %46 = load i32, i32* %4, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_add_to_central_dir(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i16 noundef zeroext %2, i8* noundef %3, i16 noundef zeroext %4, i8* noundef %5, i16 noundef zeroext %6, i64 noundef %7, i64 noundef %8, i32 noundef %9, i16 noundef zeroext %10, i16 noundef zeroext %11, i16 noundef zeroext %12, i16 noundef zeroext %13, i64 noundef %14, i32 noundef %15, i8* noundef %16, i32 noundef %17) #0 {
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca %struct.mz_zip_array*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %struct.mz_zip_archive*, align 8
  %26 = alloca %struct.mz_zip_array*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca %struct.mz_zip_archive*, align 8
  %32 = alloca %struct.mz_zip_array*, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca %struct.mz_zip_archive*, align 8
  %37 = alloca %struct.mz_zip_array*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i32, align 4
  %42 = alloca %struct.mz_zip_archive*, align 8
  %43 = alloca %struct.mz_zip_array*, align 8
  %44 = alloca i64, align 8
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca %struct.mz_zip_archive*, align 8
  %48 = alloca %struct.mz_zip_array*, align 8
  %49 = alloca i8*, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i32, align 4
  %53 = alloca %struct.mz_zip_archive*, align 8
  %54 = alloca %struct.mz_zip_array*, align 8
  %55 = alloca i64, align 8
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca %struct.mz_zip_archive*, align 8
  %59 = alloca %struct.mz_zip_array*, align 8
  %60 = alloca i8*, align 8
  %61 = alloca i64, align 8
  %62 = alloca i64, align 8
  %63 = alloca i32, align 4
  %64 = alloca %struct.mz_zip_archive*, align 8
  %65 = alloca %struct.mz_zip_array*, align 8
  %66 = alloca i64, align 8
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca %struct.mz_zip_archive*, align 8
  %70 = alloca %struct.mz_zip_array*, align 8
  %71 = alloca i8*, align 8
  %72 = alloca i64, align 8
  %73 = alloca i64, align 8
  %74 = alloca i32, align 4
  %75 = alloca %struct.mz_zip_archive*, align 8
  %76 = alloca %struct.mz_zip_array*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca %struct.mz_zip_archive*, align 8
  %81 = alloca %struct.mz_zip_array*, align 8
  %82 = alloca i8*, align 8
  %83 = alloca i64, align 8
  %84 = alloca i64, align 8
  %85 = alloca i32, align 4
  %86 = alloca %struct.mz_zip_archive*, align 8
  %87 = alloca %struct.mz_zip_array*, align 8
  %88 = alloca i64, align 8
  %89 = alloca i32, align 4
  %90 = alloca %struct.mz_zip_archive*, align 8
  %91 = alloca i32, align 4
  %92 = alloca %struct.mz_zip_archive*, align 8
  %93 = alloca i32, align 4
  %94 = alloca %struct.mz_zip_archive*, align 8
  %95 = alloca i32, align 4
  %96 = alloca %struct.mz_zip_archive*, align 8
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca %struct.mz_zip_archive*, align 8
  %100 = alloca i8*, align 8
  %101 = alloca i16, align 2
  %102 = alloca i8*, align 8
  %103 = alloca i16, align 2
  %104 = alloca i8*, align 8
  %105 = alloca i16, align 2
  %106 = alloca i64, align 8
  %107 = alloca i64, align 8
  %108 = alloca i32, align 4
  %109 = alloca i16, align 2
  %110 = alloca i16, align 2
  %111 = alloca i16, align 2
  %112 = alloca i16, align 2
  %113 = alloca i64, align 8
  %114 = alloca i32, align 4
  %115 = alloca i8*, align 8
  %116 = alloca i32, align 4
  %117 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %118 = alloca i32, align 4
  %119 = alloca i64, align 8
  %120 = alloca [46 x i8], align 16
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %99, align 8
  store i8* %1, i8** %100, align 8
  store i16 %2, i16* %101, align 2
  store i8* %3, i8** %102, align 8
  store i16 %4, i16* %103, align 2
  store i8* %5, i8** %104, align 8
  store i16 %6, i16* %105, align 2
  store i64 %7, i64* %106, align 8
  store i64 %8, i64* %107, align 8
  store i32 %9, i32* %108, align 4
  store i16 %10, i16* %109, align 2
  store i16 %11, i16* %110, align 2
  store i16 %12, i16* %111, align 2
  store i16 %13, i16* %112, align 2
  store i64 %14, i64* %113, align 8
  store i32 %15, i32* %114, align 4
  store i8* %16, i8** %115, align 8
  store i32 %17, i32* %116, align 4
  %121 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %121, i32 0, i32 15
  %123 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %122, align 8
  store %struct.mz_zip_internal_state_tag* %123, %struct.mz_zip_internal_state_tag** %117, align 8
  %124 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %125 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %124, i32 0, i32 0
  %126 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %125, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = trunc i64 %127 to i32
  store i32 %128, i32* %118, align 4
  %129 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %130 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %129, i32 0, i32 0
  %131 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %130, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %119, align 8
  %133 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %134 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %133, i32 0, i32 15
  %135 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %134, align 8
  %136 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %135, i32 0, i32 4
  %137 = load i32, i32* %136, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %18
  %140 = load i64, i64* %113, align 8
  %141 = icmp ugt i64 %140, 4294967295
  br i1 %141, label %142, label %151

142:                                              ; preds = %139
  %143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  store %struct.mz_zip_archive* %143, %struct.mz_zip_archive** %90, align 8
  store i32 3, i32* %91, align 4
  %144 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %90, align 8
  %145 = icmp ne %struct.mz_zip_archive* %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = load i32, i32* %91, align 4
  %148 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %90, align 8
  %149 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %148, i32 0, i32 5
  store i32 %147, i32* %149, align 4
  br label %150

150:                                              ; preds = %142, %146
  store i32 0, i32* %98, align 4
  br label %612

151:                                              ; preds = %139
  br label %152

152:                                              ; preds = %151, %18
  %153 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %154 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %153, i32 0, i32 0
  %155 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %154, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 46
  %158 = load i16, i16* %101, align 2
  %159 = zext i16 %158 to i64
  %160 = add i64 %157, %159
  %161 = load i16, i16* %103, align 2
  %162 = zext i16 %161 to i64
  %163 = add i64 %160, %162
  %164 = load i32, i32* %116, align 4
  %165 = zext i32 %164 to i64
  %166 = add i64 %163, %165
  %167 = load i16, i16* %105, align 2
  %168 = zext i16 %167 to i64
  %169 = add i64 %166, %168
  %170 = icmp uge i64 %169, 4294967295
  br i1 %170, label %171, label %180

171:                                              ; preds = %152
  %172 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  store %struct.mz_zip_archive* %172, %struct.mz_zip_archive** %92, align 8
  store i32 15, i32* %93, align 4
  %173 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %92, align 8
  %174 = icmp ne %struct.mz_zip_archive* %173, null
  br i1 %174, label %175, label %179

175:                                              ; preds = %171
  %176 = load i32, i32* %93, align 4
  %177 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %92, align 8
  %178 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %177, i32 0, i32 5
  store i32 %176, i32* %178, align 4
  br label %179

179:                                              ; preds = %171, %175
  store i32 0, i32* %98, align 4
  br label %612

180:                                              ; preds = %152
  %181 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %182 = getelementptr inbounds [46 x i8], [46 x i8]* %120, i64 0, i64 0
  %183 = load i16, i16* %101, align 2
  %184 = load i16, i16* %103, align 2
  %185 = zext i16 %184 to i32
  %186 = load i32, i32* %116, align 4
  %187 = add i32 %185, %186
  %188 = trunc i32 %187 to i16
  %189 = load i16, i16* %105, align 2
  %190 = load i64, i64* %106, align 8
  %191 = load i64, i64* %107, align 8
  %192 = load i32, i32* %108, align 4
  %193 = load i16, i16* %109, align 2
  %194 = load i16, i16* %110, align 2
  %195 = load i16, i16* %111, align 2
  %196 = load i16, i16* %112, align 2
  %197 = load i64, i64* %113, align 8
  %198 = load i32, i32* %114, align 4
  %199 = call i32 @mz_zip_writer_create_central_dir_header(%struct.mz_zip_archive* noundef %181, i8* noundef %182, i16 noundef zeroext %183, i16 noundef zeroext %188, i16 noundef zeroext %189, i64 noundef %190, i64 noundef %191, i32 noundef %192, i16 noundef zeroext %193, i16 noundef zeroext %194, i16 noundef zeroext %195, i16 noundef zeroext %196, i64 noundef %197, i32 noundef %198)
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %210, label %201

201:                                              ; preds = %180
  %202 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  store %struct.mz_zip_archive* %202, %struct.mz_zip_archive** %94, align 8
  store i32 27, i32* %95, align 4
  %203 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %204 = icmp ne %struct.mz_zip_archive* %203, null
  br i1 %204, label %205, label %209

205:                                              ; preds = %201
  %206 = load i32, i32* %95, align 4
  %207 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %94, align 8
  %208 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %207, i32 0, i32 5
  store i32 %206, i32* %208, align 4
  br label %209

209:                                              ; preds = %201, %205
  store i32 0, i32* %98, align 4
  br label %612

210:                                              ; preds = %180
  %211 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %212 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %213 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %212, i32 0, i32 0
  %214 = getelementptr inbounds [46 x i8], [46 x i8]* %120, i64 0, i64 0
  store %struct.mz_zip_archive* %211, %struct.mz_zip_archive** %25, align 8
  store %struct.mz_zip_array* %213, %struct.mz_zip_array** %26, align 8
  store i8* %214, i8** %27, align 8
  store i64 46, i64* %28, align 8
  %215 = load %struct.mz_zip_array*, %struct.mz_zip_array** %26, align 8
  %216 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %215, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  store i64 %217, i64* %29, align 8
  %218 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %25, align 8
  %219 = load %struct.mz_zip_array*, %struct.mz_zip_array** %26, align 8
  %220 = load i64, i64* %29, align 8
  %221 = load i64, i64* %28, align 8
  %222 = add i64 %220, %221
  store %struct.mz_zip_archive* %218, %struct.mz_zip_archive** %20, align 8
  store %struct.mz_zip_array* %219, %struct.mz_zip_array** %21, align 8
  store i64 %222, i64* %22, align 8
  store i32 1, i32* %23, align 4
  %223 = load i64, i64* %22, align 8
  %224 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %225 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %224, i32 0, i32 2
  %226 = load i64, i64* %225, align 8
  %227 = icmp ugt i64 %223, %226
  br i1 %227, label %228, label %237

228:                                              ; preds = %210
  %229 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %230 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %231 = load i64, i64* %22, align 8
  %232 = load i32, i32* %23, align 4
  %233 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %229, %struct.mz_zip_array* noundef %230, i64 noundef %231, i32 noundef %232) #7
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %236, label %235

235:                                              ; preds = %228
  store i32 0, i32* %19, align 4
  br label %241

236:                                              ; preds = %228
  br label %237

237:                                              ; preds = %236, %210
  %238 = load i64, i64* %22, align 8
  %239 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %240 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %239, i32 0, i32 1
  store i64 %238, i64* %240, align 8
  store i32 1, i32* %19, align 4
  br label %241

241:                                              ; preds = %237, %235
  %242 = load i32, i32* %19, align 4
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %241
  store i32 0, i32* %24, align 4
  br label %267

245:                                              ; preds = %241
  %246 = load i64, i64* %28, align 8
  %247 = icmp ugt i64 %246, 0
  br i1 %247, label %248, label %266

248:                                              ; preds = %245
  %249 = load %struct.mz_zip_array*, %struct.mz_zip_array** %26, align 8
  %250 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %249, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = load i64, i64* %29, align 8
  %253 = load %struct.mz_zip_array*, %struct.mz_zip_array** %26, align 8
  %254 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %253, i32 0, i32 3
  %255 = load i32, i32* %254, align 8
  %256 = zext i32 %255 to i64
  %257 = mul i64 %252, %256
  %258 = getelementptr inbounds i8, i8* %251, i64 %257
  %259 = load i8*, i8** %27, align 8
  %260 = load i64, i64* %28, align 8
  %261 = load %struct.mz_zip_array*, %struct.mz_zip_array** %26, align 8
  %262 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %261, i32 0, i32 3
  %263 = load i32, i32* %262, align 8
  %264 = zext i32 %263 to i64
  %265 = mul i64 %260, %264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %258, i8* align 1 %259, i64 %265, i1 false) #7
  br label %266

266:                                              ; preds = %248, %245
  store i32 1, i32* %24, align 4
  br label %267

267:                                              ; preds = %244, %266
  %268 = load i32, i32* %24, align 4
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %578

270:                                              ; preds = %267
  %271 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %272 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %273 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %272, i32 0, i32 0
  %274 = load i8*, i8** %100, align 8
  %275 = load i16, i16* %101, align 2
  %276 = zext i16 %275 to i64
  store %struct.mz_zip_archive* %271, %struct.mz_zip_archive** %36, align 8
  store %struct.mz_zip_array* %273, %struct.mz_zip_array** %37, align 8
  store i8* %274, i8** %38, align 8
  store i64 %276, i64* %39, align 8
  %277 = load %struct.mz_zip_array*, %struct.mz_zip_array** %37, align 8
  %278 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %277, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  store i64 %279, i64* %40, align 8
  %280 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %281 = load %struct.mz_zip_array*, %struct.mz_zip_array** %37, align 8
  %282 = load i64, i64* %40, align 8
  %283 = load i64, i64* %39, align 8
  %284 = add i64 %282, %283
  store %struct.mz_zip_archive* %280, %struct.mz_zip_archive** %31, align 8
  store %struct.mz_zip_array* %281, %struct.mz_zip_array** %32, align 8
  store i64 %284, i64* %33, align 8
  store i32 1, i32* %34, align 4
  %285 = load i64, i64* %33, align 8
  %286 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %287 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %286, i32 0, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = icmp ugt i64 %285, %288
  br i1 %289, label %290, label %299

290:                                              ; preds = %270
  %291 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %31, align 8
  %292 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %293 = load i64, i64* %33, align 8
  %294 = load i32, i32* %34, align 4
  %295 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %291, %struct.mz_zip_array* noundef %292, i64 noundef %293, i32 noundef %294) #7
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %298, label %297

297:                                              ; preds = %290
  store i32 0, i32* %30, align 4
  br label %303

298:                                              ; preds = %290
  br label %299

299:                                              ; preds = %298, %270
  %300 = load i64, i64* %33, align 8
  %301 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %302 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %301, i32 0, i32 1
  store i64 %300, i64* %302, align 8
  store i32 1, i32* %30, align 4
  br label %303

303:                                              ; preds = %299, %297
  %304 = load i32, i32* %30, align 4
  %305 = icmp ne i32 %304, 0
  br i1 %305, label %307, label %306

306:                                              ; preds = %303
  store i32 0, i32* %35, align 4
  br label %329

307:                                              ; preds = %303
  %308 = load i64, i64* %39, align 8
  %309 = icmp ugt i64 %308, 0
  br i1 %309, label %310, label %328

310:                                              ; preds = %307
  %311 = load %struct.mz_zip_array*, %struct.mz_zip_array** %37, align 8
  %312 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %311, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  %314 = load i64, i64* %40, align 8
  %315 = load %struct.mz_zip_array*, %struct.mz_zip_array** %37, align 8
  %316 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %315, i32 0, i32 3
  %317 = load i32, i32* %316, align 8
  %318 = zext i32 %317 to i64
  %319 = mul i64 %314, %318
  %320 = getelementptr inbounds i8, i8* %313, i64 %319
  %321 = load i8*, i8** %38, align 8
  %322 = load i64, i64* %39, align 8
  %323 = load %struct.mz_zip_array*, %struct.mz_zip_array** %37, align 8
  %324 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %323, i32 0, i32 3
  %325 = load i32, i32* %324, align 8
  %326 = zext i32 %325 to i64
  %327 = mul i64 %322, %326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %320, i8* align 1 %321, i64 %327, i1 false) #7
  br label %328

328:                                              ; preds = %310, %307
  store i32 1, i32* %35, align 4
  br label %329

329:                                              ; preds = %306, %328
  %330 = load i32, i32* %35, align 4
  %331 = icmp ne i32 %330, 0
  br i1 %331, label %332, label %578

332:                                              ; preds = %329
  %333 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %334 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %335 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %334, i32 0, i32 0
  %336 = load i8*, i8** %102, align 8
  %337 = load i16, i16* %103, align 2
  %338 = zext i16 %337 to i64
  store %struct.mz_zip_archive* %333, %struct.mz_zip_archive** %47, align 8
  store %struct.mz_zip_array* %335, %struct.mz_zip_array** %48, align 8
  store i8* %336, i8** %49, align 8
  store i64 %338, i64* %50, align 8
  %339 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %340 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %339, i32 0, i32 1
  %341 = load i64, i64* %340, align 8
  store i64 %341, i64* %51, align 8
  %342 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %47, align 8
  %343 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %344 = load i64, i64* %51, align 8
  %345 = load i64, i64* %50, align 8
  %346 = add i64 %344, %345
  store %struct.mz_zip_archive* %342, %struct.mz_zip_archive** %42, align 8
  store %struct.mz_zip_array* %343, %struct.mz_zip_array** %43, align 8
  store i64 %346, i64* %44, align 8
  store i32 1, i32* %45, align 4
  %347 = load i64, i64* %44, align 8
  %348 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %349 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %348, i32 0, i32 2
  %350 = load i64, i64* %349, align 8
  %351 = icmp ugt i64 %347, %350
  br i1 %351, label %352, label %361

352:                                              ; preds = %332
  %353 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %354 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %355 = load i64, i64* %44, align 8
  %356 = load i32, i32* %45, align 4
  %357 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %353, %struct.mz_zip_array* noundef %354, i64 noundef %355, i32 noundef %356) #7
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %360, label %359

359:                                              ; preds = %352
  store i32 0, i32* %41, align 4
  br label %365

360:                                              ; preds = %352
  br label %361

361:                                              ; preds = %360, %332
  %362 = load i64, i64* %44, align 8
  %363 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %364 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %363, i32 0, i32 1
  store i64 %362, i64* %364, align 8
  store i32 1, i32* %41, align 4
  br label %365

365:                                              ; preds = %361, %359
  %366 = load i32, i32* %41, align 4
  %367 = icmp ne i32 %366, 0
  br i1 %367, label %369, label %368

368:                                              ; preds = %365
  store i32 0, i32* %46, align 4
  br label %391

369:                                              ; preds = %365
  %370 = load i64, i64* %50, align 8
  %371 = icmp ugt i64 %370, 0
  br i1 %371, label %372, label %390

372:                                              ; preds = %369
  %373 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %374 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %373, i32 0, i32 0
  %375 = load i8*, i8** %374, align 8
  %376 = load i64, i64* %51, align 8
  %377 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %378 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %377, i32 0, i32 3
  %379 = load i32, i32* %378, align 8
  %380 = zext i32 %379 to i64
  %381 = mul i64 %376, %380
  %382 = getelementptr inbounds i8, i8* %375, i64 %381
  %383 = load i8*, i8** %49, align 8
  %384 = load i64, i64* %50, align 8
  %385 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %386 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %385, i32 0, i32 3
  %387 = load i32, i32* %386, align 8
  %388 = zext i32 %387 to i64
  %389 = mul i64 %384, %388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %382, i8* align 1 %383, i64 %389, i1 false) #7
  br label %390

390:                                              ; preds = %372, %369
  store i32 1, i32* %46, align 4
  br label %391

391:                                              ; preds = %368, %390
  %392 = load i32, i32* %46, align 4
  %393 = icmp ne i32 %392, 0
  br i1 %393, label %394, label %578

394:                                              ; preds = %391
  %395 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %396 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %397 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %396, i32 0, i32 0
  %398 = load i8*, i8** %115, align 8
  %399 = load i32, i32* %116, align 4
  %400 = zext i32 %399 to i64
  store %struct.mz_zip_archive* %395, %struct.mz_zip_archive** %58, align 8
  store %struct.mz_zip_array* %397, %struct.mz_zip_array** %59, align 8
  store i8* %398, i8** %60, align 8
  store i64 %400, i64* %61, align 8
  %401 = load %struct.mz_zip_array*, %struct.mz_zip_array** %59, align 8
  %402 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %401, i32 0, i32 1
  %403 = load i64, i64* %402, align 8
  store i64 %403, i64* %62, align 8
  %404 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %405 = load %struct.mz_zip_array*, %struct.mz_zip_array** %59, align 8
  %406 = load i64, i64* %62, align 8
  %407 = load i64, i64* %61, align 8
  %408 = add i64 %406, %407
  store %struct.mz_zip_archive* %404, %struct.mz_zip_archive** %53, align 8
  store %struct.mz_zip_array* %405, %struct.mz_zip_array** %54, align 8
  store i64 %408, i64* %55, align 8
  store i32 1, i32* %56, align 4
  %409 = load i64, i64* %55, align 8
  %410 = load %struct.mz_zip_array*, %struct.mz_zip_array** %54, align 8
  %411 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %410, i32 0, i32 2
  %412 = load i64, i64* %411, align 8
  %413 = icmp ugt i64 %409, %412
  br i1 %413, label %414, label %423

414:                                              ; preds = %394
  %415 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %53, align 8
  %416 = load %struct.mz_zip_array*, %struct.mz_zip_array** %54, align 8
  %417 = load i64, i64* %55, align 8
  %418 = load i32, i32* %56, align 4
  %419 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %415, %struct.mz_zip_array* noundef %416, i64 noundef %417, i32 noundef %418) #7
  %420 = icmp ne i32 %419, 0
  br i1 %420, label %422, label %421

421:                                              ; preds = %414
  store i32 0, i32* %52, align 4
  br label %427

422:                                              ; preds = %414
  br label %423

423:                                              ; preds = %422, %394
  %424 = load i64, i64* %55, align 8
  %425 = load %struct.mz_zip_array*, %struct.mz_zip_array** %54, align 8
  %426 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %425, i32 0, i32 1
  store i64 %424, i64* %426, align 8
  store i32 1, i32* %52, align 4
  br label %427

427:                                              ; preds = %423, %421
  %428 = load i32, i32* %52, align 4
  %429 = icmp ne i32 %428, 0
  br i1 %429, label %431, label %430

430:                                              ; preds = %427
  store i32 0, i32* %57, align 4
  br label %453

431:                                              ; preds = %427
  %432 = load i64, i64* %61, align 8
  %433 = icmp ugt i64 %432, 0
  br i1 %433, label %434, label %452

434:                                              ; preds = %431
  %435 = load %struct.mz_zip_array*, %struct.mz_zip_array** %59, align 8
  %436 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %435, i32 0, i32 0
  %437 = load i8*, i8** %436, align 8
  %438 = load i64, i64* %62, align 8
  %439 = load %struct.mz_zip_array*, %struct.mz_zip_array** %59, align 8
  %440 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %439, i32 0, i32 3
  %441 = load i32, i32* %440, align 8
  %442 = zext i32 %441 to i64
  %443 = mul i64 %438, %442
  %444 = getelementptr inbounds i8, i8* %437, i64 %443
  %445 = load i8*, i8** %60, align 8
  %446 = load i64, i64* %61, align 8
  %447 = load %struct.mz_zip_array*, %struct.mz_zip_array** %59, align 8
  %448 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %447, i32 0, i32 3
  %449 = load i32, i32* %448, align 8
  %450 = zext i32 %449 to i64
  %451 = mul i64 %446, %450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %444, i8* align 1 %445, i64 %451, i1 false) #7
  br label %452

452:                                              ; preds = %434, %431
  store i32 1, i32* %57, align 4
  br label %453

453:                                              ; preds = %430, %452
  %454 = load i32, i32* %57, align 4
  %455 = icmp ne i32 %454, 0
  br i1 %455, label %456, label %578

456:                                              ; preds = %453
  %457 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %458 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %459 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %458, i32 0, i32 0
  %460 = load i8*, i8** %104, align 8
  %461 = load i16, i16* %105, align 2
  %462 = zext i16 %461 to i64
  store %struct.mz_zip_archive* %457, %struct.mz_zip_archive** %69, align 8
  store %struct.mz_zip_array* %459, %struct.mz_zip_array** %70, align 8
  store i8* %460, i8** %71, align 8
  store i64 %462, i64* %72, align 8
  %463 = load %struct.mz_zip_array*, %struct.mz_zip_array** %70, align 8
  %464 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %463, i32 0, i32 1
  %465 = load i64, i64* %464, align 8
  store i64 %465, i64* %73, align 8
  %466 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %69, align 8
  %467 = load %struct.mz_zip_array*, %struct.mz_zip_array** %70, align 8
  %468 = load i64, i64* %73, align 8
  %469 = load i64, i64* %72, align 8
  %470 = add i64 %468, %469
  store %struct.mz_zip_archive* %466, %struct.mz_zip_archive** %64, align 8
  store %struct.mz_zip_array* %467, %struct.mz_zip_array** %65, align 8
  store i64 %470, i64* %66, align 8
  store i32 1, i32* %67, align 4
  %471 = load i64, i64* %66, align 8
  %472 = load %struct.mz_zip_array*, %struct.mz_zip_array** %65, align 8
  %473 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %472, i32 0, i32 2
  %474 = load i64, i64* %473, align 8
  %475 = icmp ugt i64 %471, %474
  br i1 %475, label %476, label %485

476:                                              ; preds = %456
  %477 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %478 = load %struct.mz_zip_array*, %struct.mz_zip_array** %65, align 8
  %479 = load i64, i64* %66, align 8
  %480 = load i32, i32* %67, align 4
  %481 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %477, %struct.mz_zip_array* noundef %478, i64 noundef %479, i32 noundef %480) #7
  %482 = icmp ne i32 %481, 0
  br i1 %482, label %484, label %483

483:                                              ; preds = %476
  store i32 0, i32* %63, align 4
  br label %489

484:                                              ; preds = %476
  br label %485

485:                                              ; preds = %484, %456
  %486 = load i64, i64* %66, align 8
  %487 = load %struct.mz_zip_array*, %struct.mz_zip_array** %65, align 8
  %488 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %487, i32 0, i32 1
  store i64 %486, i64* %488, align 8
  store i32 1, i32* %63, align 4
  br label %489

489:                                              ; preds = %485, %483
  %490 = load i32, i32* %63, align 4
  %491 = icmp ne i32 %490, 0
  br i1 %491, label %493, label %492

492:                                              ; preds = %489
  store i32 0, i32* %68, align 4
  br label %515

493:                                              ; preds = %489
  %494 = load i64, i64* %72, align 8
  %495 = icmp ugt i64 %494, 0
  br i1 %495, label %496, label %514

496:                                              ; preds = %493
  %497 = load %struct.mz_zip_array*, %struct.mz_zip_array** %70, align 8
  %498 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %497, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  %500 = load i64, i64* %73, align 8
  %501 = load %struct.mz_zip_array*, %struct.mz_zip_array** %70, align 8
  %502 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %501, i32 0, i32 3
  %503 = load i32, i32* %502, align 8
  %504 = zext i32 %503 to i64
  %505 = mul i64 %500, %504
  %506 = getelementptr inbounds i8, i8* %499, i64 %505
  %507 = load i8*, i8** %71, align 8
  %508 = load i64, i64* %72, align 8
  %509 = load %struct.mz_zip_array*, %struct.mz_zip_array** %70, align 8
  %510 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %509, i32 0, i32 3
  %511 = load i32, i32* %510, align 8
  %512 = zext i32 %511 to i64
  %513 = mul i64 %508, %512
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %506, i8* align 1 %507, i64 %513, i1 false) #7
  br label %514

514:                                              ; preds = %496, %493
  store i32 1, i32* %68, align 4
  br label %515

515:                                              ; preds = %492, %514
  %516 = load i32, i32* %68, align 4
  %517 = icmp ne i32 %516, 0
  br i1 %517, label %518, label %578

518:                                              ; preds = %515
  %519 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %520 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %521 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %520, i32 0, i32 1
  %522 = bitcast i32* %118 to i8*
  store %struct.mz_zip_archive* %519, %struct.mz_zip_archive** %80, align 8
  store %struct.mz_zip_array* %521, %struct.mz_zip_array** %81, align 8
  store i8* %522, i8** %82, align 8
  store i64 1, i64* %83, align 8
  %523 = load %struct.mz_zip_array*, %struct.mz_zip_array** %81, align 8
  %524 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %523, i32 0, i32 1
  %525 = load i64, i64* %524, align 8
  store i64 %525, i64* %84, align 8
  %526 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %80, align 8
  %527 = load %struct.mz_zip_array*, %struct.mz_zip_array** %81, align 8
  %528 = load i64, i64* %84, align 8
  %529 = load i64, i64* %83, align 8
  %530 = add i64 %528, %529
  store %struct.mz_zip_archive* %526, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_array* %527, %struct.mz_zip_array** %76, align 8
  store i64 %530, i64* %77, align 8
  store i32 1, i32* %78, align 4
  %531 = load i64, i64* %77, align 8
  %532 = load %struct.mz_zip_array*, %struct.mz_zip_array** %76, align 8
  %533 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %532, i32 0, i32 2
  %534 = load i64, i64* %533, align 8
  %535 = icmp ugt i64 %531, %534
  br i1 %535, label %536, label %545

536:                                              ; preds = %518
  %537 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %538 = load %struct.mz_zip_array*, %struct.mz_zip_array** %76, align 8
  %539 = load i64, i64* %77, align 8
  %540 = load i32, i32* %78, align 4
  %541 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %537, %struct.mz_zip_array* noundef %538, i64 noundef %539, i32 noundef %540) #7
  %542 = icmp ne i32 %541, 0
  br i1 %542, label %544, label %543

543:                                              ; preds = %536
  store i32 0, i32* %74, align 4
  br label %549

544:                                              ; preds = %536
  br label %545

545:                                              ; preds = %544, %518
  %546 = load i64, i64* %77, align 8
  %547 = load %struct.mz_zip_array*, %struct.mz_zip_array** %76, align 8
  %548 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %547, i32 0, i32 1
  store i64 %546, i64* %548, align 8
  store i32 1, i32* %74, align 4
  br label %549

549:                                              ; preds = %545, %543
  %550 = load i32, i32* %74, align 4
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %553, label %552

552:                                              ; preds = %549
  store i32 0, i32* %79, align 4
  br label %575

553:                                              ; preds = %549
  %554 = load i64, i64* %83, align 8
  %555 = icmp ugt i64 %554, 0
  br i1 %555, label %556, label %574

556:                                              ; preds = %553
  %557 = load %struct.mz_zip_array*, %struct.mz_zip_array** %81, align 8
  %558 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %557, i32 0, i32 0
  %559 = load i8*, i8** %558, align 8
  %560 = load i64, i64* %84, align 8
  %561 = load %struct.mz_zip_array*, %struct.mz_zip_array** %81, align 8
  %562 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %561, i32 0, i32 3
  %563 = load i32, i32* %562, align 8
  %564 = zext i32 %563 to i64
  %565 = mul i64 %560, %564
  %566 = getelementptr inbounds i8, i8* %559, i64 %565
  %567 = load i8*, i8** %82, align 8
  %568 = load i64, i64* %83, align 8
  %569 = load %struct.mz_zip_array*, %struct.mz_zip_array** %81, align 8
  %570 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %569, i32 0, i32 3
  %571 = load i32, i32* %570, align 8
  %572 = zext i32 %571 to i64
  %573 = mul i64 %568, %572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %566, i8* align 1 %567, i64 %573, i1 false) #7
  br label %574

574:                                              ; preds = %556, %553
  store i32 1, i32* %79, align 4
  br label %575

575:                                              ; preds = %552, %574
  %576 = load i32, i32* %79, align 4
  %577 = icmp ne i32 %576, 0
  br i1 %577, label %611, label %578

578:                                              ; preds = %575, %515, %453, %391, %329, %267
  %579 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  %580 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %117, align 8
  %581 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %580, i32 0, i32 0
  %582 = load i64, i64* %119, align 8
  store %struct.mz_zip_archive* %579, %struct.mz_zip_archive** %86, align 8
  store %struct.mz_zip_array* %581, %struct.mz_zip_array** %87, align 8
  store i64 %582, i64* %88, align 8
  store i32 0, i32* %89, align 4
  %583 = load i64, i64* %88, align 8
  %584 = load %struct.mz_zip_array*, %struct.mz_zip_array** %87, align 8
  %585 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %584, i32 0, i32 2
  %586 = load i64, i64* %585, align 8
  %587 = icmp ugt i64 %583, %586
  br i1 %587, label %588, label %597

588:                                              ; preds = %578
  %589 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %86, align 8
  %590 = load %struct.mz_zip_array*, %struct.mz_zip_array** %87, align 8
  %591 = load i64, i64* %88, align 8
  %592 = load i32, i32* %89, align 4
  %593 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %589, %struct.mz_zip_array* noundef %590, i64 noundef %591, i32 noundef %592) #7
  %594 = icmp ne i32 %593, 0
  br i1 %594, label %596, label %595

595:                                              ; preds = %588
  store i32 0, i32* %85, align 4
  br label %601

596:                                              ; preds = %588
  br label %597

597:                                              ; preds = %596, %578
  %598 = load i64, i64* %88, align 8
  %599 = load %struct.mz_zip_array*, %struct.mz_zip_array** %87, align 8
  %600 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %599, i32 0, i32 1
  store i64 %598, i64* %600, align 8
  store i32 1, i32* %85, align 4
  br label %601

601:                                              ; preds = %595, %597
  %602 = load i32, i32* %85, align 4
  %603 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %99, align 8
  store %struct.mz_zip_archive* %603, %struct.mz_zip_archive** %96, align 8
  store i32 16, i32* %97, align 4
  %604 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %96, align 8
  %605 = icmp ne %struct.mz_zip_archive* %604, null
  br i1 %605, label %606, label %610

606:                                              ; preds = %601
  %607 = load i32, i32* %97, align 4
  %608 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %96, align 8
  %609 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %608, i32 0, i32 5
  store i32 %607, i32* %609, align 4
  br label %610

610:                                              ; preds = %601, %606
  store i32 0, i32* %98, align 4
  br label %612

611:                                              ; preds = %575
  store i32 1, i32* %98, align 4
  br label %612

612:                                              ; preds = %611, %610, %209, %179, %150
  %613 = load i32, i32* %98, align 4
  ret i32 %613
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_read_buf_callback(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i64 (i8*, i64, i8*, i64)* noundef %2, i8* noundef %3, i64 noundef %4, i64* noundef %5, i8* noundef %6, i16 noundef zeroext %7, i32 noundef %8, i8* noundef %9, i32 noundef %10, i8* noundef %11, i32 noundef %12) #0 {
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca %struct.mz_zip_archive*, align 8
  %35 = alloca i32, align 4
  %36 = alloca %struct.mz_zip_archive*, align 8
  %37 = alloca i32, align 4
  %38 = alloca %struct.mz_zip_archive*, align 8
  %39 = alloca i32, align 4
  %40 = alloca %struct.mz_zip_archive*, align 8
  %41 = alloca i32, align 4
  %42 = alloca %struct.mz_zip_archive*, align 8
  %43 = alloca i32, align 4
  %44 = alloca %struct.mz_zip_archive*, align 8
  %45 = alloca i32, align 4
  %46 = alloca %struct.mz_zip_archive*, align 8
  %47 = alloca i32, align 4
  %48 = alloca %struct.mz_zip_archive*, align 8
  %49 = alloca i32, align 4
  %50 = alloca %struct.mz_zip_archive*, align 8
  %51 = alloca i32, align 4
  %52 = alloca %struct.mz_zip_archive*, align 8
  %53 = alloca i32, align 4
  %54 = alloca %struct.mz_zip_archive*, align 8
  %55 = alloca i32, align 4
  %56 = alloca %struct.mz_zip_archive*, align 8
  %57 = alloca i32, align 4
  %58 = alloca %struct.mz_zip_archive*, align 8
  %59 = alloca i32, align 4
  %60 = alloca %struct.mz_zip_archive*, align 8
  %61 = alloca i32, align 4
  %62 = alloca %struct.mz_zip_archive*, align 8
  %63 = alloca i32, align 4
  %64 = alloca %struct.mz_zip_archive*, align 8
  %65 = alloca i32, align 4
  %66 = alloca %struct.mz_zip_archive*, align 8
  %67 = alloca i32, align 4
  %68 = alloca %struct.mz_zip_archive*, align 8
  %69 = alloca i32, align 4
  %70 = alloca %struct.mz_zip_archive*, align 8
  %71 = alloca i32, align 4
  %72 = alloca %struct.mz_zip_archive*, align 8
  %73 = alloca i32, align 4
  %74 = alloca %struct.mz_zip_archive*, align 8
  %75 = alloca i32, align 4
  %76 = alloca %struct.mz_zip_archive*, align 8
  %77 = alloca i32, align 4
  %78 = alloca %struct.mz_zip_archive*, align 8
  %79 = alloca i32, align 4
  %80 = alloca %struct.mz_zip_archive*, align 8
  %81 = alloca i32, align 4
  %82 = alloca %struct.mz_zip_archive*, align 8
  %83 = alloca i32, align 4
  %84 = alloca %struct.mz_zip_archive*, align 8
  %85 = alloca i32, align 4
  %86 = alloca %struct.mz_zip_archive*, align 8
  %87 = alloca i32, align 4
  %88 = alloca %struct.mz_zip_archive*, align 8
  %89 = alloca i32, align 4
  %90 = alloca i32, align 4
  %91 = alloca %struct.mz_zip_archive*, align 8
  %92 = alloca i8*, align 8
  %93 = alloca i64 (i8*, i64, i8*, i64)*, align 8
  %94 = alloca i8*, align 8
  %95 = alloca i64, align 8
  %96 = alloca i64*, align 8
  %97 = alloca i8*, align 8
  %98 = alloca i16, align 2
  %99 = alloca i32, align 4
  %100 = alloca i8*, align 8
  %101 = alloca i32, align 4
  %102 = alloca i8*, align 8
  %103 = alloca i32, align 4
  %104 = alloca i16, align 2
  %105 = alloca i32, align 4
  %106 = alloca i32, align 4
  %107 = alloca i32, align 4
  %108 = alloca i16, align 2
  %109 = alloca i16, align 2
  %110 = alloca i16, align 2
  %111 = alloca i16, align 2
  %112 = alloca i64, align 8
  %113 = alloca i64, align 8
  %114 = alloca i64, align 8
  %115 = alloca i64, align 8
  %116 = alloca i64, align 8
  %117 = alloca [30 x i8], align 16
  %118 = alloca i8*, align 8
  %119 = alloca i32, align 4
  %120 = alloca [28 x i8], align 16
  %121 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %122 = alloca i64, align 8
  %123 = alloca i64, align 8
  %124 = alloca i8*, align 8
  %125 = alloca i64, align 8
  %126 = alloca i32, align 4
  %127 = alloca %struct.mz_zip_writer_add_state, align 8
  %128 = alloca %struct.tdefl_compressor*, align 8
  %129 = alloca i32, align 4
  %130 = alloca i32, align 4
  %131 = alloca i64, align 8
  %132 = alloca [24 x i8], align 16
  %133 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %91, align 8
  store i8* %1, i8** %92, align 8
  store i64 (i8*, i64, i8*, i64)* %2, i64 (i8*, i64, i8*, i64)** %93, align 8
  store i8* %3, i8** %94, align 8
  store i64 %4, i64* %95, align 8
  store i64* %5, i64** %96, align 8
  store i8* %6, i8** %97, align 8
  store i16 %7, i16* %98, align 2
  store i32 %8, i32* %99, align 4
  store i8* %9, i8** %100, align 8
  store i32 %10, i32* %101, align 4
  store i8* %11, i8** %102, align 8
  store i32 %12, i32* %103, align 4
  store i32 0, i32* %105, align 4
  store i16 0, i16* %108, align 2
  store i16 0, i16* %109, align 2
  store i16 0, i16* %110, align 2
  store i16 0, i16* %111, align 2
  %134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %135 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %134, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %113, align 8
  store i64 0, i64* %114, align 8
  store i64 0, i64* %115, align 8
  store i8* null, i8** %118, align 8
  store i32 0, i32* %119, align 4
  store i64 0, i64* %122, align 8
  %137 = load i32, i32* %99, align 4
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %13
  store i32 6, i32* %99, align 4
  br label %140

140:                                              ; preds = %139, %13
  %141 = load i32, i32* %99, align 4
  %142 = and i32 %141, 15
  store i32 %142, i32* %106, align 4
  %143 = load i32, i32* %99, align 4
  %144 = and i32 %143, 131072
  %145 = icmp ne i32 %144, 0
  %146 = zext i1 %145 to i64
  %147 = select i1 %145, i32 0, i32 8
  %148 = trunc i32 %147 to i16
  store i16 %148, i16* %104, align 2
  %149 = load i32, i32* %99, align 4
  %150 = and i32 %149, 65536
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %140
  %153 = load i16, i16* %104, align 2
  %154 = zext i16 %153 to i32
  %155 = or i32 %154, 2048
  %156 = trunc i32 %155 to i16
  store i16 %156, i16* %104, align 2
  br label %157

157:                                              ; preds = %152, %140
  %158 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %159 = icmp ne %struct.mz_zip_archive* %158, null
  br i1 %159, label %160, label %183

160:                                              ; preds = %157
  %161 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %162 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %161, i32 0, i32 15
  %163 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %162, align 8
  %164 = icmp ne %struct.mz_zip_internal_state_tag* %163, null
  br i1 %164, label %165, label %183

165:                                              ; preds = %160
  %166 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %166, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = icmp ne i32 %168, 2
  br i1 %169, label %183, label %170

170:                                              ; preds = %165
  %171 = load i8*, i8** %92, align 8
  %172 = icmp ne i8* %171, null
  br i1 %172, label %173, label %183

173:                                              ; preds = %170
  %174 = load i16, i16* %98, align 2
  %175 = zext i16 %174 to i32
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %173
  %178 = load i8*, i8** %97, align 8
  %179 = icmp ne i8* %178, null
  br i1 %179, label %180, label %183

180:                                              ; preds = %177, %173
  %181 = load i32, i32* %106, align 4
  %182 = icmp ugt i32 %181, 10
  br i1 %182, label %183, label %192

183:                                              ; preds = %180, %177, %170, %165, %160, %157
  %184 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %184, %struct.mz_zip_archive** %34, align 8
  store i32 24, i32* %35, align 4
  %185 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %186 = icmp ne %struct.mz_zip_archive* %185, null
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = load i32, i32* %35, align 4
  %189 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %34, align 8
  %190 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %189, i32 0, i32 5
  store i32 %188, i32* %190, align 4
  br label %191

191:                                              ; preds = %183, %187
  store i32 0, i32* %90, align 4
  br label %1359

192:                                              ; preds = %180
  %193 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %194 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %193, i32 0, i32 15
  %195 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %194, align 8
  store %struct.mz_zip_internal_state_tag* %195, %struct.mz_zip_internal_state_tag** %121, align 8
  %196 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %197 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %196, i32 0, i32 4
  %198 = load i32, i32* %197, align 4
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %206, label %200

200:                                              ; preds = %192
  %201 = load i64, i64* %95, align 8
  %202 = icmp ugt i64 %201, 4294967295
  br i1 %202, label %203, label %206

203:                                              ; preds = %200
  %204 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %205 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %204, i32 0, i32 4
  store i32 1, i32* %205, align 4
  br label %206

206:                                              ; preds = %203, %200, %192
  %207 = load i32, i32* %99, align 4
  %208 = and i32 %207, 1024
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %219

210:                                              ; preds = %206
  %211 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %211, %struct.mz_zip_archive** %36, align 8
  store i32 24, i32* %37, align 4
  %212 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %213 = icmp ne %struct.mz_zip_archive* %212, null
  br i1 %213, label %214, label %218

214:                                              ; preds = %210
  %215 = load i32, i32* %37, align 4
  %216 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %36, align 8
  %217 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %216, i32 0, i32 5
  store i32 %215, i32* %217, align 4
  br label %218

218:                                              ; preds = %210, %214
  store i32 0, i32* %90, align 4
  br label %1359

219:                                              ; preds = %206
  %220 = load i8*, i8** %92, align 8
  %221 = call i32 @mz_zip_writer_validate_archive_name(i8* noundef %220)
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %232, label %223

223:                                              ; preds = %219
  %224 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %224, %struct.mz_zip_archive** %38, align 8
  store i32 25, i32* %39, align 4
  %225 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %226 = icmp ne %struct.mz_zip_archive* %225, null
  br i1 %226, label %227, label %231

227:                                              ; preds = %223
  %228 = load i32, i32* %39, align 4
  %229 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %230 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %229, i32 0, i32 5
  store i32 %228, i32* %230, align 4
  br label %231

231:                                              ; preds = %223, %227
  store i32 0, i32* %90, align 4
  br label %1359

232:                                              ; preds = %219
  %233 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %234 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %233, i32 0, i32 4
  %235 = load i32, i32* %234, align 4
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %237, label %252

237:                                              ; preds = %232
  %238 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %239 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %238, i32 0, i32 2
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, -1
  br i1 %241, label %242, label %251

242:                                              ; preds = %237
  %243 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %243, %struct.mz_zip_archive** %40, align 8
  store i32 2, i32* %41, align 4
  %244 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %40, align 8
  %245 = icmp ne %struct.mz_zip_archive* %244, null
  br i1 %245, label %246, label %250

246:                                              ; preds = %242
  %247 = load i32, i32* %41, align 4
  %248 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %40, align 8
  %249 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %248, i32 0, i32 5
  store i32 %247, i32* %249, align 4
  br label %250

250:                                              ; preds = %242, %246
  store i32 0, i32* %90, align 4
  br label %1359

251:                                              ; preds = %237
  br label %261

252:                                              ; preds = %232
  %253 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %254 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %253, i32 0, i32 2
  %255 = load i32, i32* %254, align 8
  %256 = icmp eq i32 %255, 65535
  br i1 %256, label %257, label %260

257:                                              ; preds = %252
  %258 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %259 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %258, i32 0, i32 4
  store i32 1, i32* %259, align 4
  br label %260

260:                                              ; preds = %257, %252
  br label %261

261:                                              ; preds = %260, %251
  %262 = load i8*, i8** %92, align 8
  %263 = call i64 @strlen(i8* noundef %262) #9
  store i64 %263, i64* %116, align 8
  %264 = load i64, i64* %116, align 8
  %265 = icmp ugt i64 %264, 65535
  br i1 %265, label %266, label %275

266:                                              ; preds = %261
  %267 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %267, %struct.mz_zip_archive** %42, align 8
  store i32 25, i32* %43, align 4
  %268 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %269 = icmp ne %struct.mz_zip_archive* %268, null
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = load i32, i32* %43, align 4
  %272 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %42, align 8
  %273 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %272, i32 0, i32 5
  store i32 %271, i32* %273, align 4
  br label %274

274:                                              ; preds = %266, %270
  store i32 0, i32* %90, align 4
  br label %1359

275:                                              ; preds = %261
  %276 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %277 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive* noundef %276)
  store i32 %277, i32* %107, align 4
  %278 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %279 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %278, i32 0, i32 0
  %280 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %279, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = add i64 %281, 46
  %283 = load i64, i64* %116, align 8
  %284 = add i64 %282, %283
  %285 = add i64 %284, 28
  %286 = load i16, i16* %98, align 2
  %287 = zext i16 %286 to i64
  %288 = add i64 %285, %287
  %289 = icmp uge i64 %288, 4294967295
  br i1 %289, label %290, label %299

290:                                              ; preds = %275
  %291 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %291, %struct.mz_zip_archive** %44, align 8
  store i32 15, i32* %45, align 4
  %292 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %44, align 8
  %293 = icmp ne %struct.mz_zip_archive* %292, null
  br i1 %293, label %294, label %298

294:                                              ; preds = %290
  %295 = load i32, i32* %45, align 4
  %296 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %44, align 8
  %297 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %296, i32 0, i32 5
  store i32 %295, i32* %297, align 4
  br label %298

298:                                              ; preds = %290, %294
  store i32 0, i32* %90, align 4
  br label %1359

299:                                              ; preds = %275
  %300 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %301 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %300, i32 0, i32 4
  %302 = load i32, i32* %301, align 4
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %339, label %304

304:                                              ; preds = %299
  %305 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %306 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %305, i32 0, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = load i32, i32* %107, align 4
  %309 = zext i32 %308 to i64
  %310 = add i64 %307, %309
  %311 = add i64 %310, 30
  %312 = load i64, i64* %116, align 8
  %313 = add i64 %311, %312
  %314 = add i64 %313, 46
  %315 = load i64, i64* %116, align 8
  %316 = add i64 %314, %315
  %317 = load i16, i16* %98, align 2
  %318 = zext i16 %317 to i64
  %319 = add i64 %316, %318
  %320 = load i32, i32* %101, align 4
  %321 = zext i32 %320 to i64
  %322 = add i64 %319, %321
  %323 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %324 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %323, i32 0, i32 0
  %325 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %324, i32 0, i32 1
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %322, %326
  %328 = add i64 %327, 22
  %329 = add i64 %328, 1024
  %330 = add i64 %329, 16
  %331 = load i32, i32* %103, align 4
  %332 = zext i32 %331 to i64
  %333 = add i64 %330, %332
  %334 = icmp ugt i64 %333, 4294967295
  br i1 %334, label %335, label %338

335:                                              ; preds = %304
  %336 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %337 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %336, i32 0, i32 4
  store i32 1, i32* %337, align 4
  br label %338

338:                                              ; preds = %335, %304
  br label %339

339:                                              ; preds = %338, %299
  %340 = load i64*, i64** %96, align 8
  %341 = icmp ne i64* %340, null
  br i1 %341, label %342, label %345

342:                                              ; preds = %339
  %343 = load i64*, i64** %96, align 8
  %344 = load i64, i64* %343, align 8
  call void @mz_zip_time_t_to_dos_time(i64 noundef %344, i16* noundef %109, i16* noundef %110)
  br label %345

345:                                              ; preds = %342, %339
  %346 = load i64, i64* %95, align 8
  %347 = icmp ule i64 %346, 3
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  store i32 0, i32* %106, align 4
  br label %349

349:                                              ; preds = %348, %345
  %350 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %351 = load i64, i64* %113, align 8
  %352 = load i32, i32* %107, align 4
  %353 = call i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive* noundef %350, i64 noundef %351, i32 noundef %352)
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %364, label %355

355:                                              ; preds = %349
  %356 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %356, %struct.mz_zip_archive** %46, align 8
  store i32 19, i32* %47, align 4
  %357 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %358 = icmp ne %struct.mz_zip_archive* %357, null
  br i1 %358, label %359, label %363

359:                                              ; preds = %355
  %360 = load i32, i32* %47, align 4
  %361 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %362 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %361, i32 0, i32 5
  store i32 %360, i32* %362, align 4
  br label %363

363:                                              ; preds = %355, %359
  store i32 0, i32* %90, align 4
  br label %1359

364:                                              ; preds = %349
  %365 = load i32, i32* %107, align 4
  %366 = zext i32 %365 to i64
  %367 = load i64, i64* %113, align 8
  %368 = add i64 %367, %366
  store i64 %368, i64* %113, align 8
  %369 = load i64, i64* %113, align 8
  store i64 %369, i64* %112, align 8
  %370 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %371 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %370, i32 0, i32 6
  %372 = load i64, i64* %371, align 8
  %373 = icmp ne i64 %372, 0
  br i1 %373, label %374, label %385

374:                                              ; preds = %364
  %375 = load i64, i64* %113, align 8
  %376 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %377 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %376, i32 0, i32 6
  %378 = load i64, i64* %377, align 8
  %379 = sub i64 %378, 1
  %380 = and i64 %375, %379
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %374
  br label %384

383:                                              ; preds = %374
  call void @__assert_fail(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.24, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 6590, i8* noundef getelementptr inbounds ([210 x i8], [210 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_read_buf_callback, i64 0, i64 0)) #8
  unreachable

384:                                              ; preds = %382
  br label %385

385:                                              ; preds = %384, %364
  %386 = load i64, i64* %95, align 8
  %387 = icmp ne i64 %386, 0
  br i1 %387, label %388, label %392

388:                                              ; preds = %385
  %389 = load i32, i32* %106, align 4
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  store i16 8, i16* %108, align 2
  br label %392

392:                                              ; preds = %391, %388, %385
  %393 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %393, i8 0, i64 30, i1 false)
  %394 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %121, align 8
  %395 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %394, i32 0, i32 4
  %396 = load i32, i32* %395, align 4
  %397 = icmp ne i32 %396, 0
  br i1 %397, label %398, label %540

398:                                              ; preds = %392
  %399 = load i64, i64* %95, align 8
  %400 = icmp uge i64 %399, 4294967295
  br i1 %400, label %404, label %401

401:                                              ; preds = %398
  %402 = load i64, i64* %112, align 8
  %403 = icmp uge i64 %402, 4294967295
  br i1 %403, label %404, label %440

404:                                              ; preds = %401, %398
  %405 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  store i8* %405, i8** %118, align 8
  %406 = load i32, i32* %99, align 4
  %407 = and i32 %406, 131072
  %408 = icmp ne i32 %407, 0
  br i1 %408, label %409, label %430

409:                                              ; preds = %404
  %410 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  %411 = load i64, i64* %95, align 8
  %412 = icmp uge i64 %411, 4294967295
  br i1 %412, label %413, label %414

413:                                              ; preds = %409
  br label %415

414:                                              ; preds = %409
  br label %415

415:                                              ; preds = %414, %413
  %416 = phi i64* [ %114, %413 ], [ null, %414 ]
  %417 = load i64, i64* %95, align 8
  %418 = icmp uge i64 %417, 4294967295
  br i1 %418, label %419, label %420

419:                                              ; preds = %415
  br label %421

420:                                              ; preds = %415
  br label %421

421:                                              ; preds = %420, %419
  %422 = phi i64* [ %115, %419 ], [ null, %420 ]
  %423 = load i64, i64* %112, align 8
  %424 = icmp uge i64 %423, 4294967295
  br i1 %424, label %425, label %426

425:                                              ; preds = %421
  br label %427

426:                                              ; preds = %421
  br label %427

427:                                              ; preds = %426, %425
  %428 = phi i64* [ %112, %425 ], [ null, %426 ]
  %429 = call i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %410, i64* noundef %416, i64* noundef %422, i64* noundef %428)
  store i32 %429, i32* %119, align 4
  br label %439

430:                                              ; preds = %404
  %431 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  %432 = load i64, i64* %112, align 8
  %433 = icmp uge i64 %432, 4294967295
  br i1 %433, label %434, label %435

434:                                              ; preds = %430
  br label %436

435:                                              ; preds = %430
  br label %436

436:                                              ; preds = %435, %434
  %437 = phi i64* [ %112, %434 ], [ null, %435 ]
  %438 = call i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %431, i64* noundef null, i64* noundef null, i64* noundef %437)
  store i32 %438, i32* %119, align 4
  br label %439

439:                                              ; preds = %436, %427
  br label %440

440:                                              ; preds = %439, %401
  %441 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %442 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  %443 = load i64, i64* %116, align 8
  %444 = trunc i64 %443 to i16
  %445 = load i32, i32* %119, align 4
  %446 = load i32, i32* %101, align 4
  %447 = add i32 %445, %446
  %448 = trunc i32 %447 to i16
  %449 = load i16, i16* %108, align 2
  %450 = load i16, i16* %104, align 2
  %451 = load i16, i16* %109, align 2
  %452 = load i16, i16* %110, align 2
  %453 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive* noundef %441, i8* noundef %442, i16 noundef zeroext %444, i16 noundef zeroext %448, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %449, i16 noundef zeroext %450, i16 noundef zeroext %451, i16 noundef zeroext %452)
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %464, label %455

455:                                              ; preds = %440
  %456 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %456, %struct.mz_zip_archive** %48, align 8
  store i32 27, i32* %49, align 4
  %457 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %458 = icmp ne %struct.mz_zip_archive* %457, null
  br i1 %458, label %459, label %463

459:                                              ; preds = %455
  %460 = load i32, i32* %49, align 4
  %461 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %48, align 8
  %462 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %461, i32 0, i32 5
  store i32 %460, i32* %462, align 4
  br label %463

463:                                              ; preds = %455, %459
  store i32 0, i32* %90, align 4
  br label %1359

464:                                              ; preds = %440
  %465 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %466 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %465, i32 0, i32 12
  %467 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %466, align 8
  %468 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %469 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %468, i32 0, i32 14
  %470 = load i8*, i8** %469, align 8
  %471 = load i64, i64* %113, align 8
  %472 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  %473 = call i64 %467(i8* noundef %470, i64 noundef %471, i8* noundef %472, i64 noundef 30)
  %474 = icmp ne i64 %473, 30
  br i1 %474, label %475, label %484

475:                                              ; preds = %464
  %476 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %476, %struct.mz_zip_archive** %50, align 8
  store i32 19, i32* %51, align 4
  %477 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %50, align 8
  %478 = icmp ne %struct.mz_zip_archive* %477, null
  br i1 %478, label %479, label %483

479:                                              ; preds = %475
  %480 = load i32, i32* %51, align 4
  %481 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %50, align 8
  %482 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %481, i32 0, i32 5
  store i32 %480, i32* %482, align 4
  br label %483

483:                                              ; preds = %475, %479
  store i32 0, i32* %90, align 4
  br label %1359

484:                                              ; preds = %464
  %485 = load i64, i64* %113, align 8
  %486 = add i64 %485, 30
  store i64 %486, i64* %113, align 8
  %487 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %488 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %487, i32 0, i32 12
  %489 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %488, align 8
  %490 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %490, i32 0, i32 14
  %492 = load i8*, i8** %491, align 8
  %493 = load i64, i64* %113, align 8
  %494 = load i8*, i8** %92, align 8
  %495 = load i64, i64* %116, align 8
  %496 = call i64 %489(i8* noundef %492, i64 noundef %493, i8* noundef %494, i64 noundef %495)
  %497 = load i64, i64* %116, align 8
  %498 = icmp ne i64 %496, %497
  br i1 %498, label %499, label %508

499:                                              ; preds = %484
  %500 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %500, %struct.mz_zip_archive** %52, align 8
  store i32 19, i32* %53, align 4
  %501 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %52, align 8
  %502 = icmp ne %struct.mz_zip_archive* %501, null
  br i1 %502, label %503, label %507

503:                                              ; preds = %499
  %504 = load i32, i32* %53, align 4
  %505 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %52, align 8
  %506 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %505, i32 0, i32 5
  store i32 %504, i32* %506, align 4
  br label %507

507:                                              ; preds = %499, %503
  store i32 0, i32* %90, align 4
  br label %1359

508:                                              ; preds = %484
  %509 = load i64, i64* %116, align 8
  %510 = load i64, i64* %113, align 8
  %511 = add i64 %510, %509
  store i64 %511, i64* %113, align 8
  %512 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %513 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %512, i32 0, i32 12
  %514 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %513, align 8
  %515 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %516 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %515, i32 0, i32 14
  %517 = load i8*, i8** %516, align 8
  %518 = load i64, i64* %113, align 8
  %519 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  %520 = load i32, i32* %119, align 4
  %521 = zext i32 %520 to i64
  %522 = call i64 %514(i8* noundef %517, i64 noundef %518, i8* noundef %519, i64 noundef %521)
  %523 = load i32, i32* %119, align 4
  %524 = zext i32 %523 to i64
  %525 = icmp ne i64 %522, %524
  br i1 %525, label %526, label %535

526:                                              ; preds = %508
  %527 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %527, %struct.mz_zip_archive** %54, align 8
  store i32 19, i32* %55, align 4
  %528 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %529 = icmp ne %struct.mz_zip_archive* %528, null
  br i1 %529, label %530, label %534

530:                                              ; preds = %526
  %531 = load i32, i32* %55, align 4
  %532 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %533 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %532, i32 0, i32 5
  store i32 %531, i32* %533, align 4
  br label %534

534:                                              ; preds = %526, %530
  store i32 0, i32* %90, align 4
  br label %1359

535:                                              ; preds = %508
  %536 = load i32, i32* %119, align 4
  %537 = zext i32 %536 to i64
  %538 = load i64, i64* %113, align 8
  %539 = add i64 %538, %537
  store i64 %539, i64* %113, align 8
  br label %625

540:                                              ; preds = %392
  %541 = load i64, i64* %115, align 8
  %542 = icmp ugt i64 %541, 4294967295
  br i1 %542, label %546, label %543

543:                                              ; preds = %540
  %544 = load i64, i64* %113, align 8
  %545 = icmp ugt i64 %544, 4294967295
  br i1 %545, label %546, label %555

546:                                              ; preds = %543, %540
  %547 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %547, %struct.mz_zip_archive** %56, align 8
  store i32 29, i32* %57, align 4
  %548 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %56, align 8
  %549 = icmp ne %struct.mz_zip_archive* %548, null
  br i1 %549, label %550, label %554

550:                                              ; preds = %546
  %551 = load i32, i32* %57, align 4
  %552 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %56, align 8
  %553 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %552, i32 0, i32 5
  store i32 %551, i32* %553, align 4
  br label %554

554:                                              ; preds = %546, %550
  store i32 0, i32* %90, align 4
  br label %1359

555:                                              ; preds = %543
  %556 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %557 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  %558 = load i64, i64* %116, align 8
  %559 = trunc i64 %558 to i16
  %560 = load i32, i32* %101, align 4
  %561 = trunc i32 %560 to i16
  %562 = load i16, i16* %108, align 2
  %563 = load i16, i16* %104, align 2
  %564 = load i16, i16* %109, align 2
  %565 = load i16, i16* %110, align 2
  %566 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive* noundef %556, i8* noundef %557, i16 noundef zeroext %559, i16 noundef zeroext %561, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %562, i16 noundef zeroext %563, i16 noundef zeroext %564, i16 noundef zeroext %565)
  %567 = icmp ne i32 %566, 0
  br i1 %567, label %577, label %568

568:                                              ; preds = %555
  %569 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %569, %struct.mz_zip_archive** %58, align 8
  store i32 27, i32* %59, align 4
  %570 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %571 = icmp ne %struct.mz_zip_archive* %570, null
  br i1 %571, label %572, label %576

572:                                              ; preds = %568
  %573 = load i32, i32* %59, align 4
  %574 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %575 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %574, i32 0, i32 5
  store i32 %573, i32* %575, align 4
  br label %576

576:                                              ; preds = %568, %572
  store i32 0, i32* %90, align 4
  br label %1359

577:                                              ; preds = %555
  %578 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %579 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %578, i32 0, i32 12
  %580 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %579, align 8
  %581 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %582 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %581, i32 0, i32 14
  %583 = load i8*, i8** %582, align 8
  %584 = load i64, i64* %113, align 8
  %585 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  %586 = call i64 %580(i8* noundef %583, i64 noundef %584, i8* noundef %585, i64 noundef 30)
  %587 = icmp ne i64 %586, 30
  br i1 %587, label %588, label %597

588:                                              ; preds = %577
  %589 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %589, %struct.mz_zip_archive** %60, align 8
  store i32 19, i32* %61, align 4
  %590 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %591 = icmp ne %struct.mz_zip_archive* %590, null
  br i1 %591, label %592, label %596

592:                                              ; preds = %588
  %593 = load i32, i32* %61, align 4
  %594 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %595 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %594, i32 0, i32 5
  store i32 %593, i32* %595, align 4
  br label %596

596:                                              ; preds = %588, %592
  store i32 0, i32* %90, align 4
  br label %1359

597:                                              ; preds = %577
  %598 = load i64, i64* %113, align 8
  %599 = add i64 %598, 30
  store i64 %599, i64* %113, align 8
  %600 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %601 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %600, i32 0, i32 12
  %602 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %601, align 8
  %603 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %604 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %603, i32 0, i32 14
  %605 = load i8*, i8** %604, align 8
  %606 = load i64, i64* %113, align 8
  %607 = load i8*, i8** %92, align 8
  %608 = load i64, i64* %116, align 8
  %609 = call i64 %602(i8* noundef %605, i64 noundef %606, i8* noundef %607, i64 noundef %608)
  %610 = load i64, i64* %116, align 8
  %611 = icmp ne i64 %609, %610
  br i1 %611, label %612, label %621

612:                                              ; preds = %597
  %613 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %613, %struct.mz_zip_archive** %62, align 8
  store i32 19, i32* %63, align 4
  %614 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %62, align 8
  %615 = icmp ne %struct.mz_zip_archive* %614, null
  br i1 %615, label %616, label %620

616:                                              ; preds = %612
  %617 = load i32, i32* %63, align 4
  %618 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %62, align 8
  %619 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %618, i32 0, i32 5
  store i32 %617, i32* %619, align 4
  br label %620

620:                                              ; preds = %612, %616
  store i32 0, i32* %90, align 4
  br label %1359

621:                                              ; preds = %597
  %622 = load i64, i64* %116, align 8
  %623 = load i64, i64* %113, align 8
  %624 = add i64 %623, %622
  store i64 %624, i64* %113, align 8
  br label %625

625:                                              ; preds = %621, %535
  %626 = load i32, i32* %101, align 4
  %627 = icmp ugt i32 %626, 0
  br i1 %627, label %628, label %657

628:                                              ; preds = %625
  %629 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %630 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %629, i32 0, i32 12
  %631 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %630, align 8
  %632 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %633 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %632, i32 0, i32 14
  %634 = load i8*, i8** %633, align 8
  %635 = load i64, i64* %113, align 8
  %636 = load i8*, i8** %100, align 8
  %637 = load i32, i32* %101, align 4
  %638 = zext i32 %637 to i64
  %639 = call i64 %631(i8* noundef %634, i64 noundef %635, i8* noundef %636, i64 noundef %638)
  %640 = load i32, i32* %101, align 4
  %641 = zext i32 %640 to i64
  %642 = icmp ne i64 %639, %641
  br i1 %642, label %643, label %652

643:                                              ; preds = %628
  %644 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %644, %struct.mz_zip_archive** %64, align 8
  store i32 19, i32* %65, align 4
  %645 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %646 = icmp ne %struct.mz_zip_archive* %645, null
  br i1 %646, label %647, label %651

647:                                              ; preds = %643
  %648 = load i32, i32* %65, align 4
  %649 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %650 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %649, i32 0, i32 5
  store i32 %648, i32* %650, align 4
  br label %651

651:                                              ; preds = %643, %647
  store i32 0, i32* %90, align 4
  br label %1359

652:                                              ; preds = %628
  %653 = load i32, i32* %101, align 4
  %654 = zext i32 %653 to i64
  %655 = load i64, i64* %113, align 8
  %656 = add i64 %655, %654
  store i64 %656, i64* %113, align 8
  br label %657

657:                                              ; preds = %652, %625
  %658 = load i64, i64* %95, align 8
  %659 = icmp ne i64 %658, 0
  br i1 %659, label %660, label %933

660:                                              ; preds = %657
  %661 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %662 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %661, i32 0, i32 7
  %663 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %662, align 8
  %664 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %665 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %664, i32 0, i32 10
  %666 = load i8*, i8** %665, align 8
  %667 = call i8* %663(i8* noundef %666, i64 noundef 1, i64 noundef 65536)
  store i8* %667, i8** %124, align 8
  %668 = load i8*, i8** %124, align 8
  %669 = icmp ne i8* %668, null
  br i1 %669, label %679, label %670

670:                                              ; preds = %660
  %671 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %671, %struct.mz_zip_archive** %66, align 8
  store i32 16, i32* %67, align 4
  %672 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %66, align 8
  %673 = icmp ne %struct.mz_zip_archive* %672, null
  br i1 %673, label %674, label %678

674:                                              ; preds = %670
  %675 = load i32, i32* %67, align 4
  %676 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %66, align 8
  %677 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %676, i32 0, i32 5
  store i32 %675, i32* %677, align 4
  br label %678

678:                                              ; preds = %670, %674
  store i32 0, i32* %90, align 4
  br label %1359

679:                                              ; preds = %660
  %680 = load i32, i32* %106, align 4
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %762, label %682

682:                                              ; preds = %679
  br label %683

683:                                              ; preds = %682, %746
  %684 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %93, align 8
  %685 = load i8*, i8** %94, align 8
  %686 = load i64, i64* %122, align 8
  %687 = load i8*, i8** %124, align 8
  %688 = call i64 %684(i8* noundef %685, i64 noundef %686, i8* noundef %687, i64 noundef 65536)
  store i64 %688, i64* %125, align 8
  %689 = load i64, i64* %125, align 8
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %691, label %692

691:                                              ; preds = %683
  br label %759

692:                                              ; preds = %683
  %693 = load i64, i64* %125, align 8
  %694 = icmp ugt i64 %693, 65536
  br i1 %694, label %701, label %695

695:                                              ; preds = %692
  %696 = load i64, i64* %122, align 8
  %697 = load i64, i64* %125, align 8
  %698 = add i64 %696, %697
  %699 = load i64, i64* %95, align 8
  %700 = icmp ugt i64 %698, %699
  br i1 %700, label %701, label %717

701:                                              ; preds = %695, %692
  %702 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %703 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %702, i32 0, i32 8
  %704 = load void (i8*, i8*)*, void (i8*, i8*)** %703, align 8
  %705 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %706 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %705, i32 0, i32 10
  %707 = load i8*, i8** %706, align 8
  %708 = load i8*, i8** %124, align 8
  call void %704(i8* noundef %707, i8* noundef %708)
  %709 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %709, %struct.mz_zip_archive** %68, align 8
  store i32 20, i32* %69, align 4
  %710 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  %711 = icmp ne %struct.mz_zip_archive* %710, null
  br i1 %711, label %712, label %716

712:                                              ; preds = %701
  %713 = load i32, i32* %69, align 4
  %714 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  %715 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %714, i32 0, i32 5
  store i32 %713, i32* %715, align 4
  br label %716

716:                                              ; preds = %701, %712
  store i32 0, i32* %90, align 4
  br label %1359

717:                                              ; preds = %695
  %718 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %719 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %718, i32 0, i32 12
  %720 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %719, align 8
  %721 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %722 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %721, i32 0, i32 14
  %723 = load i8*, i8** %722, align 8
  %724 = load i64, i64* %113, align 8
  %725 = load i8*, i8** %124, align 8
  %726 = load i64, i64* %125, align 8
  %727 = call i64 %720(i8* noundef %723, i64 noundef %724, i8* noundef %725, i64 noundef %726)
  %728 = load i64, i64* %125, align 8
  %729 = icmp ne i64 %727, %728
  br i1 %729, label %730, label %746

730:                                              ; preds = %717
  %731 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %732 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %731, i32 0, i32 8
  %733 = load void (i8*, i8*)*, void (i8*, i8*)** %732, align 8
  %734 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %735 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %734, i32 0, i32 10
  %736 = load i8*, i8** %735, align 8
  %737 = load i8*, i8** %124, align 8
  call void %733(i8* noundef %736, i8* noundef %737)
  %738 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %738, %struct.mz_zip_archive** %70, align 8
  store i32 19, i32* %71, align 4
  %739 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %70, align 8
  %740 = icmp ne %struct.mz_zip_archive* %739, null
  br i1 %740, label %741, label %745

741:                                              ; preds = %730
  %742 = load i32, i32* %71, align 4
  %743 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %70, align 8
  %744 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %743, i32 0, i32 5
  store i32 %742, i32* %744, align 4
  br label %745

745:                                              ; preds = %730, %741
  store i32 0, i32* %90, align 4
  br label %1359

746:                                              ; preds = %717
  %747 = load i64, i64* %125, align 8
  %748 = load i64, i64* %122, align 8
  %749 = add i64 %748, %747
  store i64 %749, i64* %122, align 8
  %750 = load i32, i32* %105, align 4
  %751 = zext i32 %750 to i64
  %752 = load i8*, i8** %124, align 8
  %753 = load i64, i64* %125, align 8
  %754 = call i64 @mz_crc32(i64 noundef %751, i8* noundef %752, i64 noundef %753)
  %755 = trunc i64 %754 to i32
  store i32 %755, i32* %105, align 4
  %756 = load i64, i64* %125, align 8
  %757 = load i64, i64* %113, align 8
  %758 = add i64 %757, %756
  store i64 %758, i64* %113, align 8
  br label %683

759:                                              ; preds = %691
  %760 = load i64, i64* %122, align 8
  store i64 %760, i64* %114, align 8
  %761 = load i64, i64* %114, align 8
  store i64 %761, i64* %115, align 8
  br label %925

762:                                              ; preds = %679
  store i32 0, i32* %126, align 4
  %763 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %764 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %763, i32 0, i32 7
  %765 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %764, align 8
  %766 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %767 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %766, i32 0, i32 10
  %768 = load i8*, i8** %767, align 8
  %769 = call i8* %765(i8* noundef %768, i64 noundef 1, i64 noundef 319352)
  %770 = bitcast i8* %769 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %770, %struct.tdefl_compressor** %128, align 8
  %771 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %128, align 8
  %772 = icmp ne %struct.tdefl_compressor* %771, null
  br i1 %772, label %789, label %773

773:                                              ; preds = %762
  %774 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %775 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %774, i32 0, i32 8
  %776 = load void (i8*, i8*)*, void (i8*, i8*)** %775, align 8
  %777 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %778 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %777, i32 0, i32 10
  %779 = load i8*, i8** %778, align 8
  %780 = load i8*, i8** %124, align 8
  call void %776(i8* noundef %779, i8* noundef %780)
  %781 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %781, %struct.mz_zip_archive** %72, align 8
  store i32 16, i32* %73, align 4
  %782 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %72, align 8
  %783 = icmp ne %struct.mz_zip_archive* %782, null
  br i1 %783, label %784, label %788

784:                                              ; preds = %773
  %785 = load i32, i32* %73, align 4
  %786 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %72, align 8
  %787 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %786, i32 0, i32 5
  store i32 %785, i32* %787, align 4
  br label %788

788:                                              ; preds = %773, %784
  store i32 0, i32* %90, align 4
  br label %1359

789:                                              ; preds = %762
  %790 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %791 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 0
  store %struct.mz_zip_archive* %790, %struct.mz_zip_archive** %791, align 8
  %792 = load i64, i64* %113, align 8
  %793 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 1
  store i64 %792, i64* %793, align 8
  %794 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 2
  store i64 0, i64* %794, align 8
  %795 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %128, align 8
  %796 = bitcast %struct.mz_zip_writer_add_state* %127 to i8*
  %797 = load i32, i32* %106, align 4
  %798 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %797, i32 noundef -15, i32 noundef 0)
  %799 = call i32 @tdefl_init(%struct.tdefl_compressor* noundef %795, i32 (i8*, i32, i8*)* noundef @mz_zip_writer_add_put_buf_callback, i8* noundef %796, i32 noundef %798)
  %800 = icmp ne i32 %799, 0
  br i1 %800, label %801, label %825

801:                                              ; preds = %789
  %802 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %803 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %802, i32 0, i32 8
  %804 = load void (i8*, i8*)*, void (i8*, i8*)** %803, align 8
  %805 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %806 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %805, i32 0, i32 10
  %807 = load i8*, i8** %806, align 8
  %808 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %128, align 8
  %809 = bitcast %struct.tdefl_compressor* %808 to i8*
  call void %804(i8* noundef %807, i8* noundef %809)
  %810 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %811 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %810, i32 0, i32 8
  %812 = load void (i8*, i8*)*, void (i8*, i8*)** %811, align 8
  %813 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %814 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %813, i32 0, i32 10
  %815 = load i8*, i8** %814, align 8
  %816 = load i8*, i8** %124, align 8
  call void %812(i8* noundef %815, i8* noundef %816)
  %817 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %817, %struct.mz_zip_archive** %74, align 8
  store i32 27, i32* %75, align 4
  %818 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %74, align 8
  %819 = icmp ne %struct.mz_zip_archive* %818, null
  br i1 %819, label %820, label %824

820:                                              ; preds = %801
  %821 = load i32, i32* %75, align 4
  %822 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %74, align 8
  %823 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %822, i32 0, i32 5
  store i32 %821, i32* %823, align 4
  br label %824

824:                                              ; preds = %801, %820
  store i32 0, i32* %90, align 4
  br label %1359

825:                                              ; preds = %789
  br label %826

826:                                              ; preds = %899, %825
  store i32 0, i32* %130, align 4
  %827 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %93, align 8
  %828 = load i8*, i8** %94, align 8
  %829 = load i64, i64* %122, align 8
  %830 = load i8*, i8** %124, align 8
  %831 = call i64 %827(i8* noundef %828, i64 noundef %829, i8* noundef %830, i64 noundef 65536)
  store i64 %831, i64* %131, align 8
  %832 = load i64, i64* %131, align 8
  %833 = icmp ugt i64 %832, 65536
  br i1 %833, label %840, label %834

834:                                              ; preds = %826
  %835 = load i64, i64* %122, align 8
  %836 = load i64, i64* %131, align 8
  %837 = add i64 %835, %836
  %838 = load i64, i64* %95, align 8
  %839 = icmp ugt i64 %837, %838
  br i1 %839, label %840, label %849

840:                                              ; preds = %834, %826
  %841 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %841, %struct.mz_zip_archive** %76, align 8
  store i32 20, i32* %77, align 4
  %842 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %76, align 8
  %843 = icmp ne %struct.mz_zip_archive* %842, null
  br i1 %843, label %844, label %848

844:                                              ; preds = %840
  %845 = load i32, i32* %77, align 4
  %846 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %76, align 8
  %847 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %846, i32 0, i32 5
  store i32 %845, i32* %847, align 4
  br label %848

848:                                              ; preds = %840, %844
  br label %900

849:                                              ; preds = %834
  %850 = load i64, i64* %131, align 8
  %851 = load i64, i64* %122, align 8
  %852 = add i64 %851, %850
  store i64 %852, i64* %122, align 8
  %853 = load i32, i32* %105, align 4
  %854 = zext i32 %853 to i64
  %855 = load i8*, i8** %124, align 8
  %856 = load i64, i64* %131, align 8
  %857 = call i64 @mz_crc32(i64 noundef %854, i8* noundef %855, i64 noundef %856)
  %858 = trunc i64 %857 to i32
  store i32 %858, i32* %105, align 4
  %859 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %860 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %859, i32 0, i32 13
  %861 = load i32 (i8*)*, i32 (i8*)** %860, align 8
  %862 = icmp ne i32 (i8*)* %861, null
  br i1 %862, label %863, label %873

863:                                              ; preds = %849
  %864 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %865 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %864, i32 0, i32 13
  %866 = load i32 (i8*)*, i32 (i8*)** %865, align 8
  %867 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %868 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %867, i32 0, i32 14
  %869 = load i8*, i8** %868, align 8
  %870 = call i32 %866(i8* noundef %869)
  %871 = icmp ne i32 %870, 0
  br i1 %871, label %872, label %873

872:                                              ; preds = %863
  store i32 3, i32* %130, align 4
  br label %873

873:                                              ; preds = %872, %863, %849
  %874 = load i64, i64* %131, align 8
  %875 = icmp eq i64 %874, 0
  br i1 %875, label %876, label %877

876:                                              ; preds = %873
  store i32 4, i32* %130, align 4
  br label %877

877:                                              ; preds = %876, %873
  %878 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %128, align 8
  %879 = load i8*, i8** %124, align 8
  %880 = load i64, i64* %131, align 8
  %881 = load i32, i32* %130, align 4
  %882 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* noundef %878, i8* noundef %879, i64 noundef %880, i32 noundef %881)
  store i32 %882, i32* %129, align 4
  %883 = load i32, i32* %129, align 4
  %884 = icmp eq i32 %883, 1
  br i1 %884, label %885, label %886

885:                                              ; preds = %877
  store i32 1, i32* %126, align 4
  br label %900

886:                                              ; preds = %877
  %887 = load i32, i32* %129, align 4
  %888 = icmp ne i32 %887, 0
  br i1 %888, label %889, label %898

889:                                              ; preds = %886
  %890 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %890, %struct.mz_zip_archive** %78, align 8
  store i32 12, i32* %79, align 4
  %891 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %78, align 8
  %892 = icmp ne %struct.mz_zip_archive* %891, null
  br i1 %892, label %893, label %897

893:                                              ; preds = %889
  %894 = load i32, i32* %79, align 4
  %895 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %78, align 8
  %896 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %895, i32 0, i32 5
  store i32 %894, i32* %896, align 4
  br label %897

897:                                              ; preds = %889, %893
  br label %900

898:                                              ; preds = %886
  br label %899

899:                                              ; preds = %898
  br label %826

900:                                              ; preds = %897, %885, %848
  %901 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %902 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %901, i32 0, i32 8
  %903 = load void (i8*, i8*)*, void (i8*, i8*)** %902, align 8
  %904 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %905 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %904, i32 0, i32 10
  %906 = load i8*, i8** %905, align 8
  %907 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %128, align 8
  %908 = bitcast %struct.tdefl_compressor* %907 to i8*
  call void %903(i8* noundef %906, i8* noundef %908)
  %909 = load i32, i32* %126, align 4
  %910 = icmp ne i32 %909, 0
  br i1 %910, label %919, label %911

911:                                              ; preds = %900
  %912 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %913 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %912, i32 0, i32 8
  %914 = load void (i8*, i8*)*, void (i8*, i8*)** %913, align 8
  %915 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %916 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %915, i32 0, i32 10
  %917 = load i8*, i8** %916, align 8
  %918 = load i8*, i8** %124, align 8
  call void %914(i8* noundef %917, i8* noundef %918)
  store i32 0, i32* %90, align 4
  br label %1359

919:                                              ; preds = %900
  %920 = load i64, i64* %122, align 8
  store i64 %920, i64* %114, align 8
  %921 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 2
  %922 = load i64, i64* %921, align 8
  store i64 %922, i64* %115, align 8
  %923 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %127, i32 0, i32 1
  %924 = load i64, i64* %923, align 8
  store i64 %924, i64* %113, align 8
  br label %925

925:                                              ; preds = %919, %759
  %926 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %927 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %926, i32 0, i32 8
  %928 = load void (i8*, i8*)*, void (i8*, i8*)** %927, align 8
  %929 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %930 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %929, i32 0, i32 10
  %931 = load i8*, i8** %930, align 8
  %932 = load i8*, i8** %124, align 8
  call void %928(i8* noundef %931, i8* noundef %932)
  br label %933

933:                                              ; preds = %925, %657
  %934 = load i32, i32* %99, align 4
  %935 = and i32 %934, 131072
  %936 = icmp ne i32 %935, 0
  br i1 %936, label %1154, label %937

937:                                              ; preds = %933
  store i32 16, i32* %133, align 4
  %938 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %939 = getelementptr inbounds i8, i8* %938, i64 0
  store i8* %939, i8** %26, align 8
  store i32 134695760, i32* %27, align 4
  %940 = load i32, i32* %27, align 4
  %941 = trunc i32 %940 to i8
  %942 = load i8*, i8** %26, align 8
  store i8 %941, i8* %942, align 1
  %943 = load i32, i32* %27, align 4
  %944 = lshr i32 %943, 8
  %945 = trunc i32 %944 to i8
  %946 = load i8*, i8** %26, align 8
  %947 = getelementptr inbounds i8, i8* %946, i64 1
  store i8 %945, i8* %947, align 1
  %948 = load i32, i32* %27, align 4
  %949 = lshr i32 %948, 16
  %950 = trunc i32 %949 to i8
  %951 = load i8*, i8** %26, align 8
  %952 = getelementptr inbounds i8, i8* %951, i64 2
  store i8 %950, i8* %952, align 1
  %953 = load i32, i32* %27, align 4
  %954 = lshr i32 %953, 24
  %955 = trunc i32 %954 to i8
  %956 = load i8*, i8** %26, align 8
  %957 = getelementptr inbounds i8, i8* %956, i64 3
  store i8 %955, i8* %957, align 1
  %958 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %959 = getelementptr inbounds i8, i8* %958, i64 4
  %960 = load i32, i32* %105, align 4
  store i8* %959, i8** %28, align 8
  store i32 %960, i32* %29, align 4
  %961 = load i32, i32* %29, align 4
  %962 = trunc i32 %961 to i8
  %963 = load i8*, i8** %28, align 8
  store i8 %962, i8* %963, align 1
  %964 = load i32, i32* %29, align 4
  %965 = lshr i32 %964, 8
  %966 = trunc i32 %965 to i8
  %967 = load i8*, i8** %28, align 8
  %968 = getelementptr inbounds i8, i8* %967, i64 1
  store i8 %966, i8* %968, align 1
  %969 = load i32, i32* %29, align 4
  %970 = lshr i32 %969, 16
  %971 = trunc i32 %970 to i8
  %972 = load i8*, i8** %28, align 8
  %973 = getelementptr inbounds i8, i8* %972, i64 2
  store i8 %971, i8* %973, align 1
  %974 = load i32, i32* %29, align 4
  %975 = lshr i32 %974, 24
  %976 = trunc i32 %975 to i8
  %977 = load i8*, i8** %28, align 8
  %978 = getelementptr inbounds i8, i8* %977, i64 3
  store i8 %976, i8* %978, align 1
  %979 = load i8*, i8** %118, align 8
  %980 = icmp eq i8* %979, null
  br i1 %980, label %981, label %1038

981:                                              ; preds = %937
  %982 = load i64, i64* %115, align 8
  %983 = icmp ugt i64 %982, 4294967295
  br i1 %983, label %984, label %993

984:                                              ; preds = %981
  %985 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %985, %struct.mz_zip_archive** %80, align 8
  store i32 29, i32* %81, align 4
  %986 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %80, align 8
  %987 = icmp ne %struct.mz_zip_archive* %986, null
  br i1 %987, label %988, label %992

988:                                              ; preds = %984
  %989 = load i32, i32* %81, align 4
  %990 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %80, align 8
  %991 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %990, i32 0, i32 5
  store i32 %989, i32* %991, align 4
  br label %992

992:                                              ; preds = %984, %988
  store i32 0, i32* %90, align 4
  br label %1359

993:                                              ; preds = %981
  %994 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %995 = getelementptr inbounds i8, i8* %994, i64 8
  %996 = load i64, i64* %115, align 8
  %997 = trunc i64 %996 to i32
  store i8* %995, i8** %30, align 8
  store i32 %997, i32* %31, align 4
  %998 = load i32, i32* %31, align 4
  %999 = trunc i32 %998 to i8
  %1000 = load i8*, i8** %30, align 8
  store i8 %999, i8* %1000, align 1
  %1001 = load i32, i32* %31, align 4
  %1002 = lshr i32 %1001, 8
  %1003 = trunc i32 %1002 to i8
  %1004 = load i8*, i8** %30, align 8
  %1005 = getelementptr inbounds i8, i8* %1004, i64 1
  store i8 %1003, i8* %1005, align 1
  %1006 = load i32, i32* %31, align 4
  %1007 = lshr i32 %1006, 16
  %1008 = trunc i32 %1007 to i8
  %1009 = load i8*, i8** %30, align 8
  %1010 = getelementptr inbounds i8, i8* %1009, i64 2
  store i8 %1008, i8* %1010, align 1
  %1011 = load i32, i32* %31, align 4
  %1012 = lshr i32 %1011, 24
  %1013 = trunc i32 %1012 to i8
  %1014 = load i8*, i8** %30, align 8
  %1015 = getelementptr inbounds i8, i8* %1014, i64 3
  store i8 %1013, i8* %1015, align 1
  %1016 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %1017 = getelementptr inbounds i8, i8* %1016, i64 12
  %1018 = load i64, i64* %114, align 8
  %1019 = trunc i64 %1018 to i32
  store i8* %1017, i8** %32, align 8
  store i32 %1019, i32* %33, align 4
  %1020 = load i32, i32* %33, align 4
  %1021 = trunc i32 %1020 to i8
  %1022 = load i8*, i8** %32, align 8
  store i8 %1021, i8* %1022, align 1
  %1023 = load i32, i32* %33, align 4
  %1024 = lshr i32 %1023, 8
  %1025 = trunc i32 %1024 to i8
  %1026 = load i8*, i8** %32, align 8
  %1027 = getelementptr inbounds i8, i8* %1026, i64 1
  store i8 %1025, i8* %1027, align 1
  %1028 = load i32, i32* %33, align 4
  %1029 = lshr i32 %1028, 16
  %1030 = trunc i32 %1029 to i8
  %1031 = load i8*, i8** %32, align 8
  %1032 = getelementptr inbounds i8, i8* %1031, i64 2
  store i8 %1030, i8* %1032, align 1
  %1033 = load i32, i32* %33, align 4
  %1034 = lshr i32 %1033, 24
  %1035 = trunc i32 %1034 to i8
  %1036 = load i8*, i8** %32, align 8
  %1037 = getelementptr inbounds i8, i8* %1036, i64 3
  store i8 %1035, i8* %1037, align 1
  br label %1133

1038:                                             ; preds = %937
  %1039 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %1040 = getelementptr inbounds i8, i8* %1039, i64 8
  %1041 = load i64, i64* %115, align 8
  store i8* %1040, i8** %18, align 8
  store i64 %1041, i64* %19, align 8
  %1042 = load i8*, i8** %18, align 8
  %1043 = load i64, i64* %19, align 8
  %1044 = trunc i64 %1043 to i32
  store i8* %1042, i8** %14, align 8
  store i32 %1044, i32* %15, align 4
  %1045 = load i32, i32* %15, align 4
  %1046 = trunc i32 %1045 to i8
  %1047 = load i8*, i8** %14, align 8
  store i8 %1046, i8* %1047, align 1
  %1048 = load i32, i32* %15, align 4
  %1049 = lshr i32 %1048, 8
  %1050 = trunc i32 %1049 to i8
  %1051 = load i8*, i8** %14, align 8
  %1052 = getelementptr inbounds i8, i8* %1051, i64 1
  store i8 %1050, i8* %1052, align 1
  %1053 = load i32, i32* %15, align 4
  %1054 = lshr i32 %1053, 16
  %1055 = trunc i32 %1054 to i8
  %1056 = load i8*, i8** %14, align 8
  %1057 = getelementptr inbounds i8, i8* %1056, i64 2
  store i8 %1055, i8* %1057, align 1
  %1058 = load i32, i32* %15, align 4
  %1059 = lshr i32 %1058, 24
  %1060 = trunc i32 %1059 to i8
  %1061 = load i8*, i8** %14, align 8
  %1062 = getelementptr inbounds i8, i8* %1061, i64 3
  store i8 %1060, i8* %1062, align 1
  %1063 = load i8*, i8** %18, align 8
  %1064 = getelementptr inbounds i8, i8* %1063, i64 4
  %1065 = load i64, i64* %19, align 8
  %1066 = lshr i64 %1065, 32
  %1067 = trunc i64 %1066 to i32
  store i8* %1064, i8** %16, align 8
  store i32 %1067, i32* %17, align 4
  %1068 = load i32, i32* %17, align 4
  %1069 = trunc i32 %1068 to i8
  %1070 = load i8*, i8** %16, align 8
  store i8 %1069, i8* %1070, align 1
  %1071 = load i32, i32* %17, align 4
  %1072 = lshr i32 %1071, 8
  %1073 = trunc i32 %1072 to i8
  %1074 = load i8*, i8** %16, align 8
  %1075 = getelementptr inbounds i8, i8* %1074, i64 1
  store i8 %1073, i8* %1075, align 1
  %1076 = load i32, i32* %17, align 4
  %1077 = lshr i32 %1076, 16
  %1078 = trunc i32 %1077 to i8
  %1079 = load i8*, i8** %16, align 8
  %1080 = getelementptr inbounds i8, i8* %1079, i64 2
  store i8 %1078, i8* %1080, align 1
  %1081 = load i32, i32* %17, align 4
  %1082 = lshr i32 %1081, 24
  %1083 = trunc i32 %1082 to i8
  %1084 = load i8*, i8** %16, align 8
  %1085 = getelementptr inbounds i8, i8* %1084, i64 3
  store i8 %1083, i8* %1085, align 1
  %1086 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %1087 = getelementptr inbounds i8, i8* %1086, i64 16
  %1088 = load i64, i64* %114, align 8
  store i8* %1087, i8** %24, align 8
  store i64 %1088, i64* %25, align 8
  %1089 = load i8*, i8** %24, align 8
  %1090 = load i64, i64* %25, align 8
  %1091 = trunc i64 %1090 to i32
  store i8* %1089, i8** %20, align 8
  store i32 %1091, i32* %21, align 4
  %1092 = load i32, i32* %21, align 4
  %1093 = trunc i32 %1092 to i8
  %1094 = load i8*, i8** %20, align 8
  store i8 %1093, i8* %1094, align 1
  %1095 = load i32, i32* %21, align 4
  %1096 = lshr i32 %1095, 8
  %1097 = trunc i32 %1096 to i8
  %1098 = load i8*, i8** %20, align 8
  %1099 = getelementptr inbounds i8, i8* %1098, i64 1
  store i8 %1097, i8* %1099, align 1
  %1100 = load i32, i32* %21, align 4
  %1101 = lshr i32 %1100, 16
  %1102 = trunc i32 %1101 to i8
  %1103 = load i8*, i8** %20, align 8
  %1104 = getelementptr inbounds i8, i8* %1103, i64 2
  store i8 %1102, i8* %1104, align 1
  %1105 = load i32, i32* %21, align 4
  %1106 = lshr i32 %1105, 24
  %1107 = trunc i32 %1106 to i8
  %1108 = load i8*, i8** %20, align 8
  %1109 = getelementptr inbounds i8, i8* %1108, i64 3
  store i8 %1107, i8* %1109, align 1
  %1110 = load i8*, i8** %24, align 8
  %1111 = getelementptr inbounds i8, i8* %1110, i64 4
  %1112 = load i64, i64* %25, align 8
  %1113 = lshr i64 %1112, 32
  %1114 = trunc i64 %1113 to i32
  store i8* %1111, i8** %22, align 8
  store i32 %1114, i32* %23, align 4
  %1115 = load i32, i32* %23, align 4
  %1116 = trunc i32 %1115 to i8
  %1117 = load i8*, i8** %22, align 8
  store i8 %1116, i8* %1117, align 1
  %1118 = load i32, i32* %23, align 4
  %1119 = lshr i32 %1118, 8
  %1120 = trunc i32 %1119 to i8
  %1121 = load i8*, i8** %22, align 8
  %1122 = getelementptr inbounds i8, i8* %1121, i64 1
  store i8 %1120, i8* %1122, align 1
  %1123 = load i32, i32* %23, align 4
  %1124 = lshr i32 %1123, 16
  %1125 = trunc i32 %1124 to i8
  %1126 = load i8*, i8** %22, align 8
  %1127 = getelementptr inbounds i8, i8* %1126, i64 2
  store i8 %1125, i8* %1127, align 1
  %1128 = load i32, i32* %23, align 4
  %1129 = lshr i32 %1128, 24
  %1130 = trunc i32 %1129 to i8
  %1131 = load i8*, i8** %22, align 8
  %1132 = getelementptr inbounds i8, i8* %1131, i64 3
  store i8 %1130, i8* %1132, align 1
  store i32 24, i32* %133, align 4
  br label %1133

1133:                                             ; preds = %1038, %993
  %1134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1135 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1134, i32 0, i32 12
  %1136 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1135, align 8
  %1137 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1138 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1137, i32 0, i32 14
  %1139 = load i8*, i8** %1138, align 8
  %1140 = load i64, i64* %113, align 8
  %1141 = getelementptr inbounds [24 x i8], [24 x i8]* %132, i64 0, i64 0
  %1142 = load i32, i32* %133, align 4
  %1143 = zext i32 %1142 to i64
  %1144 = call i64 %1136(i8* noundef %1139, i64 noundef %1140, i8* noundef %1141, i64 noundef %1143)
  %1145 = load i32, i32* %133, align 4
  %1146 = zext i32 %1145 to i64
  %1147 = icmp ne i64 %1144, %1146
  br i1 %1147, label %1148, label %1149

1148:                                             ; preds = %1133
  store i32 0, i32* %90, align 4
  br label %1359

1149:                                             ; preds = %1133
  %1150 = load i32, i32* %133, align 4
  %1151 = zext i32 %1150 to i64
  %1152 = load i64, i64* %113, align 8
  %1153 = add i64 %1152, %1151
  store i64 %1153, i64* %113, align 8
  br label %1154

1154:                                             ; preds = %1149, %933
  %1155 = load i32, i32* %99, align 4
  %1156 = and i32 %1155, 131072
  %1157 = icmp ne i32 %1156, 0
  br i1 %1157, label %1158, label %1302

1158:                                             ; preds = %1154
  %1159 = load i8*, i8** %118, align 8
  %1160 = icmp ne i8* %1159, null
  br i1 %1160, label %1161, label %1182

1161:                                             ; preds = %1158
  %1162 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  %1163 = load i64, i64* %95, align 8
  %1164 = icmp uge i64 %1163, 4294967295
  br i1 %1164, label %1165, label %1166

1165:                                             ; preds = %1161
  br label %1167

1166:                                             ; preds = %1161
  br label %1167

1167:                                             ; preds = %1166, %1165
  %1168 = phi i64* [ %114, %1165 ], [ null, %1166 ]
  %1169 = load i64, i64* %95, align 8
  %1170 = icmp uge i64 %1169, 4294967295
  br i1 %1170, label %1171, label %1172

1171:                                             ; preds = %1167
  br label %1173

1172:                                             ; preds = %1167
  br label %1173

1173:                                             ; preds = %1172, %1171
  %1174 = phi i64* [ %115, %1171 ], [ null, %1172 ]
  %1175 = load i64, i64* %112, align 8
  %1176 = icmp uge i64 %1175, 4294967295
  br i1 %1176, label %1177, label %1178

1177:                                             ; preds = %1173
  br label %1179

1178:                                             ; preds = %1173
  br label %1179

1179:                                             ; preds = %1178, %1177
  %1180 = phi i64* [ %112, %1177 ], [ null, %1178 ]
  %1181 = call i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %1162, i64* noundef %1168, i64* noundef %1174, i64* noundef %1180)
  store i32 %1181, i32* %119, align 4
  br label %1182

1182:                                             ; preds = %1179, %1158
  %1183 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1184 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  %1185 = load i64, i64* %116, align 8
  %1186 = trunc i64 %1185 to i16
  %1187 = load i32, i32* %119, align 4
  %1188 = load i32, i32* %101, align 4
  %1189 = add i32 %1187, %1188
  %1190 = trunc i32 %1189 to i16
  %1191 = load i64, i64* %95, align 8
  %1192 = icmp uge i64 %1191, 4294967295
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1182
  br label %1196

1194:                                             ; preds = %1182
  %1195 = load i64, i64* %114, align 8
  br label %1196

1196:                                             ; preds = %1194, %1193
  %1197 = phi i64 [ 4294967295, %1193 ], [ %1195, %1194 ]
  %1198 = load i64, i64* %95, align 8
  %1199 = icmp uge i64 %1198, 4294967295
  br i1 %1199, label %1200, label %1201

1200:                                             ; preds = %1196
  br label %1203

1201:                                             ; preds = %1196
  %1202 = load i64, i64* %115, align 8
  br label %1203

1203:                                             ; preds = %1201, %1200
  %1204 = phi i64 [ 4294967295, %1200 ], [ %1202, %1201 ]
  %1205 = load i32, i32* %105, align 4
  %1206 = load i16, i16* %108, align 2
  %1207 = load i16, i16* %104, align 2
  %1208 = load i16, i16* %109, align 2
  %1209 = load i16, i16* %110, align 2
  %1210 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive* noundef %1183, i8* noundef %1184, i16 noundef zeroext %1186, i16 noundef zeroext %1190, i64 noundef %1197, i64 noundef %1204, i32 noundef %1205, i16 noundef zeroext %1206, i16 noundef zeroext %1207, i16 noundef zeroext %1208, i16 noundef zeroext %1209)
  %1211 = icmp ne i32 %1210, 0
  br i1 %1211, label %1221, label %1212

1212:                                             ; preds = %1203
  %1213 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %1213, %struct.mz_zip_archive** %82, align 8
  store i32 27, i32* %83, align 4
  %1214 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %82, align 8
  %1215 = icmp ne %struct.mz_zip_archive* %1214, null
  br i1 %1215, label %1216, label %1220

1216:                                             ; preds = %1212
  %1217 = load i32, i32* %83, align 4
  %1218 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %82, align 8
  %1219 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1218, i32 0, i32 5
  store i32 %1217, i32* %1219, align 4
  br label %1220

1220:                                             ; preds = %1212, %1216
  store i32 0, i32* %90, align 4
  br label %1359

1221:                                             ; preds = %1203
  %1222 = load i64, i64* %112, align 8
  store i64 %1222, i64* %123, align 8
  %1223 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1224 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1223, i32 0, i32 12
  %1225 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1224, align 8
  %1226 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1227 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1226, i32 0, i32 14
  %1228 = load i8*, i8** %1227, align 8
  %1229 = load i64, i64* %123, align 8
  %1230 = getelementptr inbounds [30 x i8], [30 x i8]* %117, i64 0, i64 0
  %1231 = call i64 %1225(i8* noundef %1228, i64 noundef %1229, i8* noundef %1230, i64 noundef 30)
  %1232 = icmp ne i64 %1231, 30
  br i1 %1232, label %1233, label %1242

1233:                                             ; preds = %1221
  %1234 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %1234, %struct.mz_zip_archive** %84, align 8
  store i32 19, i32* %85, align 4
  %1235 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %84, align 8
  %1236 = icmp ne %struct.mz_zip_archive* %1235, null
  br i1 %1236, label %1237, label %1241

1237:                                             ; preds = %1233
  %1238 = load i32, i32* %85, align 4
  %1239 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %84, align 8
  %1240 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1239, i32 0, i32 5
  store i32 %1238, i32* %1240, align 4
  br label %1241

1241:                                             ; preds = %1233, %1237
  store i32 0, i32* %90, align 4
  br label %1359

1242:                                             ; preds = %1221
  %1243 = load i8*, i8** %118, align 8
  %1244 = icmp ne i8* %1243, null
  br i1 %1244, label %1245, label %1301

1245:                                             ; preds = %1242
  %1246 = load i64, i64* %123, align 8
  %1247 = add i64 %1246, 30
  store i64 %1247, i64* %123, align 8
  %1248 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1249 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1248, i32 0, i32 12
  %1250 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1249, align 8
  %1251 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1252 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1251, i32 0, i32 14
  %1253 = load i8*, i8** %1252, align 8
  %1254 = load i64, i64* %123, align 8
  %1255 = load i8*, i8** %92, align 8
  %1256 = load i64, i64* %116, align 8
  %1257 = call i64 %1250(i8* noundef %1253, i64 noundef %1254, i8* noundef %1255, i64 noundef %1256)
  %1258 = load i64, i64* %116, align 8
  %1259 = icmp ne i64 %1257, %1258
  br i1 %1259, label %1260, label %1269

1260:                                             ; preds = %1245
  %1261 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %1261, %struct.mz_zip_archive** %86, align 8
  store i32 19, i32* %87, align 4
  %1262 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %86, align 8
  %1263 = icmp ne %struct.mz_zip_archive* %1262, null
  br i1 %1263, label %1264, label %1268

1264:                                             ; preds = %1260
  %1265 = load i32, i32* %87, align 4
  %1266 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %86, align 8
  %1267 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1266, i32 0, i32 5
  store i32 %1265, i32* %1267, align 4
  br label %1268

1268:                                             ; preds = %1260, %1264
  store i32 0, i32* %90, align 4
  br label %1359

1269:                                             ; preds = %1245
  %1270 = load i64, i64* %116, align 8
  %1271 = load i64, i64* %123, align 8
  %1272 = add i64 %1271, %1270
  store i64 %1272, i64* %123, align 8
  %1273 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1274 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1273, i32 0, i32 12
  %1275 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1274, align 8
  %1276 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1277 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1276, i32 0, i32 14
  %1278 = load i8*, i8** %1277, align 8
  %1279 = load i64, i64* %123, align 8
  %1280 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  %1281 = load i32, i32* %119, align 4
  %1282 = zext i32 %1281 to i64
  %1283 = call i64 %1275(i8* noundef %1278, i64 noundef %1279, i8* noundef %1280, i64 noundef %1282)
  %1284 = load i32, i32* %119, align 4
  %1285 = zext i32 %1284 to i64
  %1286 = icmp ne i64 %1283, %1285
  br i1 %1286, label %1287, label %1296

1287:                                             ; preds = %1269
  %1288 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  store %struct.mz_zip_archive* %1288, %struct.mz_zip_archive** %88, align 8
  store i32 19, i32* %89, align 4
  %1289 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %88, align 8
  %1290 = icmp ne %struct.mz_zip_archive* %1289, null
  br i1 %1290, label %1291, label %1295

1291:                                             ; preds = %1287
  %1292 = load i32, i32* %89, align 4
  %1293 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %88, align 8
  %1294 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1293, i32 0, i32 5
  store i32 %1292, i32* %1294, align 4
  br label %1295

1295:                                             ; preds = %1287, %1291
  store i32 0, i32* %90, align 4
  br label %1359

1296:                                             ; preds = %1269
  %1297 = load i32, i32* %119, align 4
  %1298 = zext i32 %1297 to i64
  %1299 = load i64, i64* %123, align 8
  %1300 = add i64 %1299, %1298
  store i64 %1300, i64* %123, align 8
  br label %1301

1301:                                             ; preds = %1296, %1242
  br label %1302

1302:                                             ; preds = %1301, %1154
  %1303 = load i8*, i8** %118, align 8
  %1304 = icmp ne i8* %1303, null
  br i1 %1304, label %1305, label %1326

1305:                                             ; preds = %1302
  %1306 = getelementptr inbounds [28 x i8], [28 x i8]* %120, i64 0, i64 0
  %1307 = load i64, i64* %114, align 8
  %1308 = icmp uge i64 %1307, 4294967295
  br i1 %1308, label %1309, label %1310

1309:                                             ; preds = %1305
  br label %1311

1310:                                             ; preds = %1305
  br label %1311

1311:                                             ; preds = %1310, %1309
  %1312 = phi i64* [ %114, %1309 ], [ null, %1310 ]
  %1313 = load i64, i64* %114, align 8
  %1314 = icmp uge i64 %1313, 4294967295
  br i1 %1314, label %1315, label %1316

1315:                                             ; preds = %1311
  br label %1317

1316:                                             ; preds = %1311
  br label %1317

1317:                                             ; preds = %1316, %1315
  %1318 = phi i64* [ %115, %1315 ], [ null, %1316 ]
  %1319 = load i64, i64* %112, align 8
  %1320 = icmp uge i64 %1319, 4294967295
  br i1 %1320, label %1321, label %1322

1321:                                             ; preds = %1317
  br label %1323

1322:                                             ; preds = %1317
  br label %1323

1323:                                             ; preds = %1322, %1321
  %1324 = phi i64* [ %112, %1321 ], [ null, %1322 ]
  %1325 = call i32 @mz_zip_writer_create_zip64_extra_data(i8* noundef %1306, i64* noundef %1312, i64* noundef %1318, i64* noundef %1324)
  store i32 %1325, i32* %119, align 4
  br label %1326

1326:                                             ; preds = %1323, %1302
  %1327 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1328 = load i8*, i8** %92, align 8
  %1329 = load i64, i64* %116, align 8
  %1330 = trunc i64 %1329 to i16
  %1331 = load i8*, i8** %118, align 8
  %1332 = load i32, i32* %119, align 4
  %1333 = trunc i32 %1332 to i16
  %1334 = load i8*, i8** %97, align 8
  %1335 = load i16, i16* %98, align 2
  %1336 = load i64, i64* %114, align 8
  %1337 = load i64, i64* %115, align 8
  %1338 = load i32, i32* %105, align 4
  %1339 = load i16, i16* %108, align 2
  %1340 = load i16, i16* %104, align 2
  %1341 = load i16, i16* %109, align 2
  %1342 = load i16, i16* %110, align 2
  %1343 = load i64, i64* %112, align 8
  %1344 = load i16, i16* %111, align 2
  %1345 = zext i16 %1344 to i32
  %1346 = load i8*, i8** %102, align 8
  %1347 = load i32, i32* %103, align 4
  %1348 = call i32 @mz_zip_writer_add_to_central_dir(%struct.mz_zip_archive* noundef %1327, i8* noundef %1328, i16 noundef zeroext %1330, i8* noundef %1331, i16 noundef zeroext %1333, i8* noundef %1334, i16 noundef zeroext %1335, i64 noundef %1336, i64 noundef %1337, i32 noundef %1338, i16 noundef zeroext %1339, i16 noundef zeroext %1340, i16 noundef zeroext %1341, i16 noundef zeroext %1342, i64 noundef %1343, i32 noundef %1345, i8* noundef %1346, i32 noundef %1347)
  %1349 = icmp ne i32 %1348, 0
  br i1 %1349, label %1351, label %1350

1350:                                             ; preds = %1326
  store i32 0, i32* %90, align 4
  br label %1359

1351:                                             ; preds = %1326
  %1352 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1353 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1352, i32 0, i32 2
  %1354 = load i32, i32* %1353, align 8
  %1355 = add i32 %1354, 1
  store i32 %1355, i32* %1353, align 8
  %1356 = load i64, i64* %113, align 8
  %1357 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %91, align 8
  %1358 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1357, i32 0, i32 0
  store i64 %1356, i64* %1358, align 8
  store i32 1, i32* %90, align 4
  br label %1359

1359:                                             ; preds = %1351, %1350, %1295, %1268, %1241, %1220, %1148, %992, %911, %824, %788, %745, %716, %678, %651, %620, %596, %576, %554, %534, %507, %483, %463, %363, %298, %274, %250, %231, %218, %191
  %1360 = load i32, i32* %90, align 4
  ret i32 %1360
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_cfile(%struct.mz_zip_archive* noundef %0, i8* noundef %1, %struct._IO_FILE* noundef %2, i64 noundef %3, i64* noundef %4, i8* noundef %5, i16 noundef zeroext %6, i32 noundef %7, i8* noundef %8, i32 noundef %9, i8* noundef %10, i32 noundef %11) #0 {
  %13 = alloca %struct.mz_zip_archive*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i16, align 2
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %13, align 8
  store i8* %1, i8** %14, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %15, align 8
  store i64 %3, i64* %16, align 8
  store i64* %4, i64** %17, align 8
  store i8* %5, i8** %18, align 8
  store i16 %6, i16* %19, align 2
  store i32 %7, i32* %20, align 4
  store i8* %8, i8** %21, align 8
  store i32 %9, i32* %22, align 4
  store i8* %10, i8** %23, align 8
  store i32 %11, i32* %24, align 4
  %25 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %13, align 8
  %26 = load i8*, i8** %14, align 8
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %28 = bitcast %struct._IO_FILE* %27 to i8*
  %29 = load i64, i64* %16, align 8
  %30 = load i64*, i64** %17, align 8
  %31 = load i8*, i8** %18, align 8
  %32 = load i16, i16* %19, align 2
  %33 = load i32, i32* %20, align 4
  %34 = load i8*, i8** %21, align 8
  %35 = load i32, i32* %22, align 4
  %36 = load i8*, i8** %23, align 8
  %37 = load i32, i32* %24, align 4
  %38 = call i32 @mz_zip_writer_add_read_buf_callback(%struct.mz_zip_archive* noundef %25, i8* noundef %26, i64 (i8*, i64, i8*, i64)* noundef @mz_file_read_func_stdio, i8* noundef %28, i64 noundef %29, i64* noundef %30, i8* noundef %31, i16 noundef zeroext %32, i32 noundef %33, i8* noundef %34, i32 noundef %35, i8* noundef %36, i32 noundef %37)
  ret i32 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_file_read_func_stdio(i8* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = bitcast i8* %12 to %struct._IO_FILE*
  store %struct._IO_FILE* %13, %struct._IO_FILE** %10, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %15 = call i64 @ftello(%struct._IO_FILE* noundef %14)
  store i64 %15, i64* %11, align 8
  %16 = load i64, i64* %7, align 8
  %17 = icmp slt i64 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %4
  %19 = load i64, i64* %11, align 8
  %20 = load i64, i64* %7, align 8
  %21 = icmp ne i64 %19, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %24 = load i64, i64* %7, align 8
  %25 = call i32 @fseeko(%struct._IO_FILE* noundef %23, i64 noundef %24, i32 noundef 0)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %22, %4
  store i64 0, i64* %5, align 8
  br label %33

28:                                               ; preds = %22, %18
  %29 = load i8*, i8** %8, align 8
  %30 = load i64, i64* %9, align 8
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %32 = call i64 @fread(i8* noundef %29, i64 noundef 1, i64 noundef %30, %struct._IO_FILE* noundef %31)
  store i64 %32, i64* %5, align 8
  br label %33

33:                                               ; preds = %28, %27
  %34 = load i64, i64* %5, align 8
  ret i64 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_file(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3, i16 noundef zeroext %4, i32 noundef %5) #0 {
  %7 = alloca %struct.mz_zip_archive*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.mz_zip_archive*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i16, align 2
  %17 = alloca i32, align 4
  %18 = alloca %struct._IO_FILE*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64*, align 8
  %22 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %12, align 8
  store i8* %1, i8** %13, align 8
  store i8* %2, i8** %14, align 8
  store i8* %3, i8** %15, align 8
  store i16 %4, i16* %16, align 2
  store i32 %5, i32* %17, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** %18, align 8
  store i64 0, i64* %19, align 8
  store i64* null, i64** %21, align 8
  %23 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 8, i1 false)
  store i64* %20, i64** %21, align 8
  %24 = load i8*, i8** %14, align 8
  %25 = call i32 @mz_zip_get_file_modified_time(i8* noundef %24, i64* noundef %20)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %6
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %28, %struct.mz_zip_archive** %7, align 8
  store i32 23, i32* %8, align 4
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %30 = icmp ne %struct.mz_zip_archive* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = load i32, i32* %8, align 4
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %7, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %33, i32 0, i32 5
  store i32 %32, i32* %34, align 4
  br label %35

35:                                               ; preds = %27, %31
  store i32 0, i32* %11, align 4
  br label %69

36:                                               ; preds = %6
  %37 = load i8*, i8** %14, align 8
  %38 = call noalias %struct._IO_FILE* @fopen(i8* noundef %37, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  store %struct._IO_FILE* %38, %struct._IO_FILE** %18, align 8
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %40 = icmp ne %struct._IO_FILE* %39, null
  br i1 %40, label %50, label %41

41:                                               ; preds = %36
  %42 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  store %struct.mz_zip_archive* %42, %struct.mz_zip_archive** %9, align 8
  store i32 17, i32* %10, align 4
  %43 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %44 = icmp ne %struct.mz_zip_archive* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = load i32, i32* %10, align 4
  %47 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %9, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %47, i32 0, i32 5
  store i32 %46, i32* %48, align 4
  br label %49

49:                                               ; preds = %41, %45
  store i32 0, i32* %11, align 4
  br label %69

50:                                               ; preds = %36
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %52 = call i32 @fseeko(%struct._IO_FILE* noundef %51, i64 noundef 0, i32 noundef 2)
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %54 = call i64 @ftello(%struct._IO_FILE* noundef %53)
  store i64 %54, i64* %19, align 8
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %56 = call i32 @fseeko(%struct._IO_FILE* noundef %55, i64 noundef 0, i32 noundef 0)
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %12, align 8
  %58 = load i8*, i8** %13, align 8
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %60 = load i64, i64* %19, align 8
  %61 = load i64*, i64** %21, align 8
  %62 = load i8*, i8** %15, align 8
  %63 = load i16, i16* %16, align 2
  %64 = load i32, i32* %17, align 4
  %65 = call i32 @mz_zip_writer_add_cfile(%struct.mz_zip_archive* noundef %57, i8* noundef %58, %struct._IO_FILE* noundef %59, i64 noundef %60, i64* noundef %61, i8* noundef %62, i16 noundef zeroext %63, i32 noundef %64, i8* noundef null, i32 noundef 0, i8* noundef null, i32 noundef 0)
  store i32 %65, i32* %22, align 4
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %67 = call i32 @fclose(%struct._IO_FILE* noundef %66)
  %68 = load i32, i32* %22, align 4
  store i32 %68, i32* %11, align 4
  br label %69

69:                                               ; preds = %50, %49, %35
  %70 = load i32, i32* %11, align 4
  ret i32 %70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_get_file_modified_time(i8* noundef %0, i64* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %struct.stat, align 8
  store i8* %0, i8** %4, align 8
  store i64* %1, i64** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i32 @stat(i8* noundef %7, %struct.stat* noundef %6) #7
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 12
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %5, align 8
  store i64 %14, i64* %15, align 8
  store i32 1, i32* %3, align 4
  br label %16

16:                                               ; preds = %11, %10
  %17 = load i32, i32* %3, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_add_from_zip_reader(%struct.mz_zip_archive* noundef %0, %struct.mz_zip_archive* noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca %struct.mz_zip_array*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca %struct.mz_zip_array*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.mz_zip_archive*, align 8
  %17 = alloca %struct.mz_zip_array*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.mz_zip_archive*, align 8
  %22 = alloca %struct.mz_zip_array*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i32, align 4
  %27 = alloca %struct.mz_zip_archive*, align 8
  %28 = alloca %struct.mz_zip_array*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %struct.mz_zip_archive*, align 8
  %33 = alloca %struct.mz_zip_array*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca i32, align 4
  %38 = alloca %struct.mz_zip_archive*, align 8
  %39 = alloca %struct.mz_zip_array*, align 8
  %40 = alloca i64, align 8
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca %struct.mz_zip_archive*, align 8
  %44 = alloca %struct.mz_zip_array*, align 8
  %45 = alloca i8*, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i32, align 4
  %49 = alloca %struct.mz_zip_archive*, align 8
  %50 = alloca %struct.mz_zip_array*, align 8
  %51 = alloca i64, align 8
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca %struct.mz_zip_archive*, align 8
  %55 = alloca %struct.mz_zip_array*, align 8
  %56 = alloca i8*, align 8
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32, align 4
  %60 = alloca %struct.mz_zip_archive*, align 8
  %61 = alloca %struct.mz_zip_array*, align 8
  %62 = alloca i64, align 8
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca %struct.mz_zip_archive*, align 8
  %66 = alloca %struct.mz_zip_array*, align 8
  %67 = alloca i8*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  %70 = alloca i32, align 4
  %71 = alloca %struct.mz_zip_archive*, align 8
  %72 = alloca %struct.mz_zip_array*, align 8
  %73 = alloca i64, align 8
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca %struct.mz_zip_archive*, align 8
  %77 = alloca %struct.mz_zip_array*, align 8
  %78 = alloca i8*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca i8*, align 8
  %82 = alloca i16, align 2
  %83 = alloca i8*, align 8
  %84 = alloca i32, align 4
  %85 = alloca i8*, align 8
  %86 = alloca i32, align 4
  %87 = alloca i8*, align 8
  %88 = alloca i64, align 8
  %89 = alloca i8*, align 8
  %90 = alloca i32, align 4
  %91 = alloca i8*, align 8
  %92 = alloca i32, align 4
  %93 = alloca i8*, align 8
  %94 = alloca i64, align 8
  %95 = alloca i8*, align 8
  %96 = alloca i32, align 4
  %97 = alloca i8*, align 8
  %98 = alloca i32, align 4
  %99 = alloca i8*, align 8
  %100 = alloca i32, align 4
  %101 = alloca i8*, align 8
  %102 = alloca i32, align 4
  %103 = alloca i8*, align 8
  %104 = alloca i32, align 4
  %105 = alloca i8*, align 8
  %106 = alloca i32, align 4
  %107 = alloca %struct.mz_zip_archive*, align 8
  %108 = alloca %struct.mz_zip_array*, align 8
  %109 = alloca %struct.mz_zip_archive*, align 8
  %110 = alloca %struct.mz_zip_array*, align 8
  %111 = alloca %struct.mz_zip_archive*, align 8
  %112 = alloca %struct.mz_zip_array*, align 8
  %113 = alloca %struct.mz_zip_archive*, align 8
  %114 = alloca %struct.mz_zip_array*, align 8
  %115 = alloca %struct.mz_zip_archive*, align 8
  %116 = alloca %struct.mz_zip_array*, align 8
  %117 = alloca %struct.mz_zip_archive*, align 8
  %118 = alloca %struct.mz_zip_array*, align 8
  %119 = alloca %struct.mz_zip_archive*, align 8
  %120 = alloca %struct.mz_zip_array*, align 8
  %121 = alloca %struct.mz_zip_archive*, align 8
  %122 = alloca %struct.mz_zip_array*, align 8
  %123 = alloca %struct.mz_zip_archive*, align 8
  %124 = alloca %struct.mz_zip_array*, align 8
  %125 = alloca %struct.mz_zip_archive*, align 8
  %126 = alloca %struct.mz_zip_array*, align 8
  %127 = alloca %struct.mz_zip_archive*, align 8
  %128 = alloca %struct.mz_zip_array*, align 8
  %129 = alloca i32, align 4
  %130 = alloca %struct.mz_zip_archive*, align 8
  %131 = alloca %struct.mz_zip_array*, align 8
  %132 = alloca i64, align 8
  %133 = alloca i32, align 4
  %134 = alloca i32, align 4
  %135 = alloca %struct.mz_zip_archive*, align 8
  %136 = alloca %struct.mz_zip_array*, align 8
  %137 = alloca i64, align 8
  %138 = alloca i32, align 4
  %139 = alloca i32, align 4
  %140 = alloca %struct.mz_zip_archive*, align 8
  %141 = alloca %struct.mz_zip_array*, align 8
  %142 = alloca i64, align 8
  %143 = alloca i32, align 4
  %144 = alloca i32, align 4
  %145 = alloca %struct.mz_zip_archive*, align 8
  %146 = alloca %struct.mz_zip_array*, align 8
  %147 = alloca i64, align 8
  %148 = alloca i32, align 4
  %149 = alloca i32, align 4
  %150 = alloca %struct.mz_zip_archive*, align 8
  %151 = alloca %struct.mz_zip_array*, align 8
  %152 = alloca i64, align 8
  %153 = alloca i32, align 4
  %154 = alloca i32, align 4
  %155 = alloca %struct.mz_zip_archive*, align 8
  %156 = alloca %struct.mz_zip_array*, align 8
  %157 = alloca i64, align 8
  %158 = alloca i32, align 4
  %159 = alloca i32, align 4
  %160 = alloca %struct.mz_zip_archive*, align 8
  %161 = alloca %struct.mz_zip_array*, align 8
  %162 = alloca i64, align 8
  %163 = alloca i32, align 4
  %164 = alloca %struct.mz_zip_array*, align 8
  %165 = alloca i32, align 4
  %166 = alloca %struct.mz_zip_array*, align 8
  %167 = alloca i32, align 4
  %168 = alloca i8*, align 8
  %169 = alloca %struct.mz_zip_archive*, align 8
  %170 = alloca i32, align 4
  %171 = alloca %struct.mz_zip_archive*, align 8
  %172 = alloca i32, align 4
  %173 = alloca %struct.mz_zip_archive*, align 8
  %174 = alloca i32, align 4
  %175 = alloca %struct.mz_zip_archive*, align 8
  %176 = alloca i32, align 4
  %177 = alloca %struct.mz_zip_archive*, align 8
  %178 = alloca i32, align 4
  %179 = alloca %struct.mz_zip_archive*, align 8
  %180 = alloca i32, align 4
  %181 = alloca %struct.mz_zip_archive*, align 8
  %182 = alloca i32, align 4
  %183 = alloca %struct.mz_zip_archive*, align 8
  %184 = alloca i32, align 4
  %185 = alloca %struct.mz_zip_archive*, align 8
  %186 = alloca i32, align 4
  %187 = alloca %struct.mz_zip_archive*, align 8
  %188 = alloca i32, align 4
  %189 = alloca %struct.mz_zip_archive*, align 8
  %190 = alloca i32, align 4
  %191 = alloca %struct.mz_zip_archive*, align 8
  %192 = alloca i32, align 4
  %193 = alloca %struct.mz_zip_archive*, align 8
  %194 = alloca i32, align 4
  %195 = alloca %struct.mz_zip_archive*, align 8
  %196 = alloca i32, align 4
  %197 = alloca %struct.mz_zip_archive*, align 8
  %198 = alloca i32, align 4
  %199 = alloca %struct.mz_zip_archive*, align 8
  %200 = alloca i32, align 4
  %201 = alloca %struct.mz_zip_archive*, align 8
  %202 = alloca i32, align 4
  %203 = alloca %struct.mz_zip_archive*, align 8
  %204 = alloca i32, align 4
  %205 = alloca %struct.mz_zip_archive*, align 8
  %206 = alloca i32, align 4
  %207 = alloca %struct.mz_zip_archive*, align 8
  %208 = alloca i32, align 4
  %209 = alloca %struct.mz_zip_archive*, align 8
  %210 = alloca i32, align 4
  %211 = alloca %struct.mz_zip_archive*, align 8
  %212 = alloca i32, align 4
  %213 = alloca %struct.mz_zip_archive*, align 8
  %214 = alloca i32, align 4
  %215 = alloca %struct.mz_zip_archive*, align 8
  %216 = alloca i32, align 4
  %217 = alloca %struct.mz_zip_archive*, align 8
  %218 = alloca i32, align 4
  %219 = alloca %struct.mz_zip_archive*, align 8
  %220 = alloca i32, align 4
  %221 = alloca %struct.mz_zip_archive*, align 8
  %222 = alloca i32, align 4
  %223 = alloca %struct.mz_zip_archive*, align 8
  %224 = alloca i32, align 4
  %225 = alloca %struct.mz_zip_archive*, align 8
  %226 = alloca i32, align 4
  %227 = alloca %struct.mz_zip_archive*, align 8
  %228 = alloca i32, align 4
  %229 = alloca %struct.mz_zip_archive*, align 8
  %230 = alloca i32, align 4
  %231 = alloca %struct.mz_zip_archive*, align 8
  %232 = alloca i32, align 4
  %233 = alloca %struct.mz_zip_archive*, align 8
  %234 = alloca i32, align 4
  %235 = alloca i32, align 4
  %236 = alloca %struct.mz_zip_archive*, align 8
  %237 = alloca %struct.mz_zip_archive*, align 8
  %238 = alloca i32, align 4
  %239 = alloca i32, align 4
  %240 = alloca i32, align 4
  %241 = alloca i32, align 4
  %242 = alloca i32, align 4
  %243 = alloca i64, align 8
  %244 = alloca i64, align 8
  %245 = alloca i64, align 8
  %246 = alloca i64, align 8
  %247 = alloca [8 x i32], align 16
  %248 = alloca i8*, align 8
  %249 = alloca [46 x i8], align 16
  %250 = alloca i64, align 8
  %251 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %252 = alloca i8*, align 8
  %253 = alloca i8*, align 8
  %254 = alloca %struct.mz_zip_archive_file_stat, align 8
  %255 = alloca i32, align 4
  %256 = alloca i32, align 4
  %257 = alloca i32, align 4
  %258 = alloca i32, align 4
  %259 = alloca i32, align 4
  %260 = alloca i64, align 8
  %261 = alloca i64, align 8
  %262 = alloca i32, align 4
  %263 = alloca %struct.mz_zip_array, align 8
  %264 = alloca i8*, align 8
  %265 = alloca i32, align 4
  %266 = alloca i32, align 4
  %267 = alloca i32, align 4
  %268 = alloca i32, align 4
  %269 = alloca i8*, align 8
  %270 = alloca i64, align 8
  %271 = alloca i32, align 4
  %272 = alloca i8*, align 8
  %273 = alloca i32, align 4
  %274 = alloca i64, align 8
  %275 = alloca i64, align 8
  %276 = alloca i8*, align 8
  %277 = alloca %struct.mz_zip_array, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1, %struct.mz_zip_archive** %237, align 8
  store i32 %2, i32* %238, align 4
  %278 = getelementptr inbounds [8 x i32], [8 x i32]* %247, i64 0, i64 0
  %279 = bitcast i32* %278 to i8*
  store i8* %279, i8** %248, align 8
  store i32 0, i32* %262, align 4
  %280 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %281 = icmp ne %struct.mz_zip_archive* %280, null
  br i1 %281, label %282, label %297

282:                                              ; preds = %3
  %283 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %284 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %283, i32 0, i32 15
  %285 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %284, align 8
  %286 = icmp ne %struct.mz_zip_internal_state_tag* %285, null
  br i1 %286, label %287, label %297

287:                                              ; preds = %282
  %288 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %289 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %288, i32 0, i32 3
  %290 = load i32, i32* %289, align 4
  %291 = icmp ne i32 %290, 2
  br i1 %291, label %297, label %292

292:                                              ; preds = %287
  %293 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %294 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %293, i32 0, i32 11
  %295 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %294, align 8
  %296 = icmp ne i64 (i8*, i64, i8*, i64)* %295, null
  br i1 %296, label %306, label %297

297:                                              ; preds = %292, %287, %282, %3
  %298 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %298, %struct.mz_zip_archive** %171, align 8
  store i32 24, i32* %172, align 4
  %299 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %171, align 8
  %300 = icmp ne %struct.mz_zip_archive* %299, null
  br i1 %300, label %301, label %305

301:                                              ; preds = %297
  %302 = load i32, i32* %172, align 4
  %303 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %171, align 8
  %304 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %303, i32 0, i32 5
  store i32 %302, i32* %304, align 4
  br label %305

305:                                              ; preds = %297, %301
  store i32 0, i32* %235, align 4
  br label %2523

306:                                              ; preds = %292
  %307 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %308 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %307, i32 0, i32 15
  %309 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %308, align 8
  store %struct.mz_zip_internal_state_tag* %309, %struct.mz_zip_internal_state_tag** %251, align 8
  %310 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %311 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %310, i32 0, i32 15
  %312 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %311, align 8
  %313 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %312, i32 0, i32 4
  %314 = load i32, i32* %313, align 4
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %316, label %332

316:                                              ; preds = %306
  %317 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %318 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %317, i32 0, i32 15
  %319 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %318, align 8
  %320 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %319, i32 0, i32 4
  %321 = load i32, i32* %320, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %332, label %323

323:                                              ; preds = %316
  %324 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %324, %struct.mz_zip_archive** %173, align 8
  store i32 24, i32* %174, align 4
  %325 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %173, align 8
  %326 = icmp ne %struct.mz_zip_archive* %325, null
  br i1 %326, label %327, label %331

327:                                              ; preds = %323
  %328 = load i32, i32* %174, align 4
  %329 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %173, align 8
  %330 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %329, i32 0, i32 5
  store i32 %328, i32* %330, align 4
  br label %331

331:                                              ; preds = %323, %327
  store i32 0, i32* %235, align 4
  br label %2523

332:                                              ; preds = %316, %306
  %333 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %334 = load i32, i32* %238, align 4
  store %struct.mz_zip_archive* %333, %struct.mz_zip_archive** %169, align 8
  store i32 %334, i32* %170, align 4
  %335 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %169, align 8
  %336 = icmp ne %struct.mz_zip_archive* %335, null
  br i1 %336, label %337, label %348

337:                                              ; preds = %332
  %338 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %169, align 8
  %339 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %338, i32 0, i32 15
  %340 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %339, align 8
  %341 = icmp ne %struct.mz_zip_internal_state_tag* %340, null
  br i1 %341, label %342, label %348

342:                                              ; preds = %337
  %343 = load i32, i32* %170, align 4
  %344 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %169, align 8
  %345 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %344, i32 0, i32 2
  %346 = load i32, i32* %345, align 8
  %347 = icmp uge i32 %343, %346
  br i1 %347, label %348, label %349

348:                                              ; preds = %342, %337, %332
  store i8* null, i8** %168, align 8
  br label %369

349:                                              ; preds = %342
  %350 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %169, align 8
  %351 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %350, i32 0, i32 15
  %352 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %351, align 8
  %353 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %352, i32 0, i32 0
  %354 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %353, i32 0, i32 0
  %355 = load i8*, i8** %354, align 8
  %356 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %169, align 8
  %357 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %356, i32 0, i32 15
  %358 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %357, align 8
  %359 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %358, i32 0, i32 1
  %360 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %359, i32 0, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = bitcast i8* %361 to i32*
  %363 = load i32, i32* %170, align 4
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds i32, i32* %362, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds i8, i8* %355, i64 %367
  store i8* %368, i8** %168, align 8
  br label %369

369:                                              ; preds = %348, %349
  %370 = load i8*, i8** %168, align 8
  store i8* %370, i8** %253, align 8
  %371 = icmp eq i8* null, %370
  br i1 %371, label %372, label %381

372:                                              ; preds = %369
  %373 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %373, %struct.mz_zip_archive** %175, align 8
  store i32 24, i32* %176, align 4
  %374 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %175, align 8
  %375 = icmp ne %struct.mz_zip_archive* %374, null
  br i1 %375, label %376, label %380

376:                                              ; preds = %372
  %377 = load i32, i32* %176, align 4
  %378 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %175, align 8
  %379 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %378, i32 0, i32 5
  store i32 %377, i32* %379, align 4
  br label %380

380:                                              ; preds = %372, %376
  store i32 0, i32* %235, align 4
  br label %2523

381:                                              ; preds = %369
  %382 = load i8*, i8** %253, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 0
  %384 = getelementptr inbounds i8, i8* %383, i64 0
  %385 = load i8, i8* %384, align 1
  %386 = zext i8 %385 to i32
  %387 = load i8*, i8** %253, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 0
  %389 = getelementptr inbounds i8, i8* %388, i64 1
  %390 = load i8, i8* %389, align 1
  %391 = zext i8 %390 to i32
  %392 = shl i32 %391, 8
  %393 = or i32 %386, %392
  %394 = load i8*, i8** %253, align 8
  %395 = getelementptr inbounds i8, i8* %394, i64 0
  %396 = getelementptr inbounds i8, i8* %395, i64 2
  %397 = load i8, i8* %396, align 1
  %398 = zext i8 %397 to i32
  %399 = shl i32 %398, 16
  %400 = or i32 %393, %399
  %401 = load i8*, i8** %253, align 8
  %402 = getelementptr inbounds i8, i8* %401, i64 0
  %403 = getelementptr inbounds i8, i8* %402, i64 3
  %404 = load i8, i8* %403, align 1
  %405 = zext i8 %404 to i32
  %406 = shl i32 %405, 24
  %407 = or i32 %400, %406
  %408 = icmp ne i32 %407, 33639248
  br i1 %408, label %409, label %418

409:                                              ; preds = %381
  %410 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %410, %struct.mz_zip_archive** %177, align 8
  store i32 9, i32* %178, align 4
  %411 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %177, align 8
  %412 = icmp ne %struct.mz_zip_archive* %411, null
  br i1 %412, label %413, label %417

413:                                              ; preds = %409
  %414 = load i32, i32* %178, align 4
  %415 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %177, align 8
  %416 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %415, i32 0, i32 5
  store i32 %414, i32* %416, align 4
  br label %417

417:                                              ; preds = %409, %413
  store i32 0, i32* %235, align 4
  br label %2523

418:                                              ; preds = %381
  %419 = load i8*, i8** %253, align 8
  %420 = getelementptr inbounds i8, i8* %419, i64 28
  %421 = getelementptr inbounds i8, i8* %420, i64 0
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = load i8*, i8** %253, align 8
  %425 = getelementptr inbounds i8, i8* %424, i64 28
  %426 = getelementptr inbounds i8, i8* %425, i64 1
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  %429 = shl i32 %428, 8
  %430 = or i32 %423, %429
  store i32 %430, i32* %255, align 4
  %431 = load i8*, i8** %253, align 8
  %432 = getelementptr inbounds i8, i8* %431, i64 32
  %433 = getelementptr inbounds i8, i8* %432, i64 0
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = load i8*, i8** %253, align 8
  %437 = getelementptr inbounds i8, i8* %436, i64 32
  %438 = getelementptr inbounds i8, i8* %437, i64 1
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i32
  %441 = shl i32 %440, 8
  %442 = or i32 %435, %441
  store i32 %442, i32* %256, align 4
  %443 = load i8*, i8** %253, align 8
  %444 = getelementptr inbounds i8, i8* %443, i64 30
  %445 = getelementptr inbounds i8, i8* %444, i64 0
  %446 = load i8, i8* %445, align 1
  %447 = zext i8 %446 to i32
  %448 = load i8*, i8** %253, align 8
  %449 = getelementptr inbounds i8, i8* %448, i64 30
  %450 = getelementptr inbounds i8, i8* %449, i64 1
  %451 = load i8, i8* %450, align 1
  %452 = zext i8 %451 to i32
  %453 = shl i32 %452, 8
  %454 = or i32 %447, %453
  store i32 %454, i32* %257, align 4
  %455 = load i32, i32* %255, align 4
  %456 = load i32, i32* %257, align 4
  %457 = add i32 %455, %456
  %458 = load i32, i32* %256, align 4
  %459 = add i32 %457, %458
  store i32 %459, i32* %242, align 4
  %460 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %461 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %460, i32 0, i32 0
  %462 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %461, i32 0, i32 1
  %463 = load i64, i64* %462, align 8
  %464 = add i64 %463, 46
  %465 = load i32, i32* %242, align 4
  %466 = zext i32 %465 to i64
  %467 = add i64 %464, %466
  %468 = add i64 %467, 32
  %469 = icmp uge i64 %468, 4294967295
  br i1 %469, label %470, label %479

470:                                              ; preds = %418
  %471 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %471, %struct.mz_zip_archive** %179, align 8
  store i32 15, i32* %180, align 4
  %472 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %179, align 8
  %473 = icmp ne %struct.mz_zip_archive* %472, null
  br i1 %473, label %474, label %478

474:                                              ; preds = %470
  %475 = load i32, i32* %180, align 4
  %476 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %179, align 8
  %477 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %476, i32 0, i32 5
  store i32 %475, i32* %477, align 4
  br label %478

478:                                              ; preds = %470, %474
  store i32 0, i32* %235, align 4
  br label %2523

479:                                              ; preds = %418
  %480 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %481 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive* noundef %480)
  store i32 %481, i32* %241, align 4
  %482 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %483 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %482, i32 0, i32 4
  %484 = load i32, i32* %483, align 4
  %485 = icmp ne i32 %484, 0
  br i1 %485, label %501, label %486

486:                                              ; preds = %479
  %487 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %488 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %487, i32 0, i32 2
  %489 = load i32, i32* %488, align 8
  %490 = icmp eq i32 %489, 65535
  br i1 %490, label %491, label %500

491:                                              ; preds = %486
  %492 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %492, %struct.mz_zip_archive** %181, align 8
  store i32 2, i32* %182, align 4
  %493 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %181, align 8
  %494 = icmp ne %struct.mz_zip_archive* %493, null
  br i1 %494, label %495, label %499

495:                                              ; preds = %491
  %496 = load i32, i32* %182, align 4
  %497 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %181, align 8
  %498 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %497, i32 0, i32 5
  store i32 %496, i32* %498, align 4
  br label %499

499:                                              ; preds = %491, %495
  store i32 0, i32* %235, align 4
  br label %2523

500:                                              ; preds = %486
  br label %516

501:                                              ; preds = %479
  %502 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %503 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %502, i32 0, i32 2
  %504 = load i32, i32* %503, align 8
  %505 = icmp eq i32 %504, -1
  br i1 %505, label %506, label %515

506:                                              ; preds = %501
  %507 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %507, %struct.mz_zip_archive** %183, align 8
  store i32 2, i32* %184, align 4
  %508 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %183, align 8
  %509 = icmp ne %struct.mz_zip_archive* %508, null
  br i1 %509, label %510, label %514

510:                                              ; preds = %506
  %511 = load i32, i32* %184, align 4
  %512 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %183, align 8
  %513 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %512, i32 0, i32 5
  store i32 %511, i32* %513, align 4
  br label %514

514:                                              ; preds = %506, %510
  store i32 0, i32* %235, align 4
  br label %2523

515:                                              ; preds = %501
  br label %516

516:                                              ; preds = %515, %500
  %517 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %518 = load i32, i32* %238, align 4
  %519 = load i8*, i8** %253, align 8
  %520 = call i32 @mz_zip_file_stat_internal(%struct.mz_zip_archive* noundef %517, i32 noundef %518, i8* noundef %519, %struct.mz_zip_archive_file_stat* noundef %254, i32* noundef null)
  %521 = icmp ne i32 %520, 0
  br i1 %521, label %523, label %522

522:                                              ; preds = %516
  store i32 0, i32* %235, align 4
  br label %2523

523:                                              ; preds = %516
  %524 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %254, i32 0, i32 11
  %525 = load i64, i64* %524, align 8
  store i64 %525, i64* %245, align 8
  %526 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %527 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %526, i32 0, i32 0
  %528 = load i64, i64* %527, align 8
  store i64 %528, i64* %246, align 8
  %529 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %530 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %529, i32 0, i32 11
  %531 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %530, align 8
  %532 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %533 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %532, i32 0, i32 14
  %534 = load i8*, i8** %533, align 8
  %535 = load i64, i64* %245, align 8
  %536 = load i8*, i8** %248, align 8
  %537 = call i64 %531(i8* noundef %534, i64 noundef %535, i8* noundef %536, i64 noundef 30)
  %538 = icmp ne i64 %537, 30
  br i1 %538, label %539, label %548

539:                                              ; preds = %523
  %540 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %540, %struct.mz_zip_archive** %185, align 8
  store i32 20, i32* %186, align 4
  %541 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %185, align 8
  %542 = icmp ne %struct.mz_zip_archive* %541, null
  br i1 %542, label %543, label %547

543:                                              ; preds = %539
  %544 = load i32, i32* %186, align 4
  %545 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %185, align 8
  %546 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %545, i32 0, i32 5
  store i32 %544, i32* %546, align 4
  br label %547

547:                                              ; preds = %539, %543
  store i32 0, i32* %235, align 4
  br label %2523

548:                                              ; preds = %523
  %549 = load i8*, i8** %248, align 8
  %550 = getelementptr inbounds i8, i8* %549, i64 0
  %551 = load i8, i8* %550, align 1
  %552 = zext i8 %551 to i32
  %553 = load i8*, i8** %248, align 8
  %554 = getelementptr inbounds i8, i8* %553, i64 1
  %555 = load i8, i8* %554, align 1
  %556 = zext i8 %555 to i32
  %557 = shl i32 %556, 8
  %558 = or i32 %552, %557
  %559 = load i8*, i8** %248, align 8
  %560 = getelementptr inbounds i8, i8* %559, i64 2
  %561 = load i8, i8* %560, align 1
  %562 = zext i8 %561 to i32
  %563 = shl i32 %562, 16
  %564 = or i32 %558, %563
  %565 = load i8*, i8** %248, align 8
  %566 = getelementptr inbounds i8, i8* %565, i64 3
  %567 = load i8, i8* %566, align 1
  %568 = zext i8 %567 to i32
  %569 = shl i32 %568, 24
  %570 = or i32 %564, %569
  %571 = icmp ne i32 %570, 67324752
  br i1 %571, label %572, label %581

572:                                              ; preds = %548
  %573 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %573, %struct.mz_zip_archive** %187, align 8
  store i32 9, i32* %188, align 4
  %574 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %187, align 8
  %575 = icmp ne %struct.mz_zip_archive* %574, null
  br i1 %575, label %576, label %580

576:                                              ; preds = %572
  %577 = load i32, i32* %188, align 4
  %578 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %187, align 8
  %579 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %578, i32 0, i32 5
  store i32 %577, i32* %579, align 4
  br label %580

580:                                              ; preds = %572, %576
  store i32 0, i32* %235, align 4
  br label %2523

581:                                              ; preds = %548
  %582 = load i64, i64* %245, align 8
  %583 = add i64 %582, 30
  store i64 %583, i64* %245, align 8
  %584 = load i8*, i8** %248, align 8
  %585 = getelementptr inbounds i8, i8* %584, i64 26
  %586 = getelementptr inbounds i8, i8* %585, i64 0
  %587 = load i8, i8* %586, align 1
  %588 = zext i8 %587 to i32
  %589 = load i8*, i8** %248, align 8
  %590 = getelementptr inbounds i8, i8* %589, i64 26
  %591 = getelementptr inbounds i8, i8* %590, i64 1
  %592 = load i8, i8* %591, align 1
  %593 = zext i8 %592 to i32
  %594 = shl i32 %593, 8
  %595 = or i32 %588, %594
  store i32 %595, i32* %258, align 4
  %596 = load i8*, i8** %248, align 8
  %597 = getelementptr inbounds i8, i8* %596, i64 28
  %598 = getelementptr inbounds i8, i8* %597, i64 0
  %599 = load i8, i8* %598, align 1
  %600 = zext i8 %599 to i32
  %601 = load i8*, i8** %248, align 8
  %602 = getelementptr inbounds i8, i8* %601, i64 28
  %603 = getelementptr inbounds i8, i8* %602, i64 1
  %604 = load i8, i8* %603, align 1
  %605 = zext i8 %604 to i32
  %606 = shl i32 %605, 8
  %607 = or i32 %600, %606
  store i32 %607, i32* %259, align 4
  %608 = load i8*, i8** %248, align 8
  %609 = getelementptr inbounds i8, i8* %608, i64 18
  %610 = getelementptr inbounds i8, i8* %609, i64 0
  %611 = load i8, i8* %610, align 1
  %612 = zext i8 %611 to i32
  %613 = load i8*, i8** %248, align 8
  %614 = getelementptr inbounds i8, i8* %613, i64 18
  %615 = getelementptr inbounds i8, i8* %614, i64 1
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl i32 %617, 8
  %619 = or i32 %612, %618
  %620 = load i8*, i8** %248, align 8
  %621 = getelementptr inbounds i8, i8* %620, i64 18
  %622 = getelementptr inbounds i8, i8* %621, i64 2
  %623 = load i8, i8* %622, align 1
  %624 = zext i8 %623 to i32
  %625 = shl i32 %624, 16
  %626 = or i32 %619, %625
  %627 = load i8*, i8** %248, align 8
  %628 = getelementptr inbounds i8, i8* %627, i64 18
  %629 = getelementptr inbounds i8, i8* %628, i64 3
  %630 = load i8, i8* %629, align 1
  %631 = zext i8 %630 to i32
  %632 = shl i32 %631, 24
  %633 = or i32 %626, %632
  %634 = zext i32 %633 to i64
  store i64 %634, i64* %260, align 8
  %635 = load i8*, i8** %248, align 8
  %636 = getelementptr inbounds i8, i8* %635, i64 22
  %637 = getelementptr inbounds i8, i8* %636, i64 0
  %638 = load i8, i8* %637, align 1
  %639 = zext i8 %638 to i32
  %640 = load i8*, i8** %248, align 8
  %641 = getelementptr inbounds i8, i8* %640, i64 22
  %642 = getelementptr inbounds i8, i8* %641, i64 1
  %643 = load i8, i8* %642, align 1
  %644 = zext i8 %643 to i32
  %645 = shl i32 %644, 8
  %646 = or i32 %639, %645
  %647 = load i8*, i8** %248, align 8
  %648 = getelementptr inbounds i8, i8* %647, i64 22
  %649 = getelementptr inbounds i8, i8* %648, i64 2
  %650 = load i8, i8* %649, align 1
  %651 = zext i8 %650 to i32
  %652 = shl i32 %651, 16
  %653 = or i32 %646, %652
  %654 = load i8*, i8** %248, align 8
  %655 = getelementptr inbounds i8, i8* %654, i64 22
  %656 = getelementptr inbounds i8, i8* %655, i64 3
  %657 = load i8, i8* %656, align 1
  %658 = zext i8 %657 to i32
  %659 = shl i32 %658, 24
  %660 = or i32 %653, %659
  %661 = zext i32 %660 to i64
  store i64 %661, i64* %261, align 8
  %662 = load i32, i32* %258, align 4
  %663 = load i32, i32* %259, align 4
  %664 = add i32 %662, %663
  %665 = zext i32 %664 to i64
  %666 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %254, i32 0, i32 7
  %667 = load i64, i64* %666, align 8
  %668 = add i64 %665, %667
  store i64 %668, i64* %243, align 8
  %669 = load i32, i32* %259, align 4
  %670 = icmp ne i32 %669, 0
  br i1 %670, label %671, label %1005

671:                                              ; preds = %581
  %672 = load i64, i64* %260, align 8
  %673 = icmp eq i64 %672, 4294967295
  br i1 %673, label %677, label %674

674:                                              ; preds = %671
  %675 = load i64, i64* %261, align 8
  %676 = icmp eq i64 %675, 4294967295
  br i1 %676, label %677, label %1005

677:                                              ; preds = %674, %671
  %678 = load i32, i32* %259, align 4
  store i32 %678, i32* %265, align 4
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %164, align 8
  store i32 1, i32* %165, align 4
  %679 = load %struct.mz_zip_array*, %struct.mz_zip_array** %164, align 8
  %680 = bitcast %struct.mz_zip_array* %679 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %680, i8 0, i64 32, i1 false) #7
  %681 = load i32, i32* %165, align 4
  %682 = load %struct.mz_zip_array*, %struct.mz_zip_array** %164, align 8
  %683 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %682, i32 0, i32 3
  store i32 %681, i32* %683, align 8
  %684 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %685 = load i32, i32* %259, align 4
  %686 = zext i32 %685 to i64
  store %struct.mz_zip_archive* %684, %struct.mz_zip_archive** %130, align 8
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %131, align 8
  store i64 %686, i64* %132, align 8
  store i32 0, i32* %133, align 4
  %687 = load i64, i64* %132, align 8
  %688 = load %struct.mz_zip_array*, %struct.mz_zip_array** %131, align 8
  %689 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %688, i32 0, i32 2
  %690 = load i64, i64* %689, align 8
  %691 = icmp ugt i64 %687, %690
  br i1 %691, label %692, label %701

692:                                              ; preds = %677
  %693 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %130, align 8
  %694 = load %struct.mz_zip_array*, %struct.mz_zip_array** %131, align 8
  %695 = load i64, i64* %132, align 8
  %696 = load i32, i32* %133, align 4
  %697 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %693, %struct.mz_zip_array* noundef %694, i64 noundef %695, i32 noundef %696) #7
  %698 = icmp ne i32 %697, 0
  br i1 %698, label %700, label %699

699:                                              ; preds = %692
  store i32 0, i32* %129, align 4
  br label %705

700:                                              ; preds = %692
  br label %701

701:                                              ; preds = %700, %677
  %702 = load i64, i64* %132, align 8
  %703 = load %struct.mz_zip_array*, %struct.mz_zip_array** %131, align 8
  %704 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %703, i32 0, i32 1
  store i64 %702, i64* %704, align 8
  store i32 1, i32* %129, align 4
  br label %705

705:                                              ; preds = %699, %701
  %706 = load i32, i32* %129, align 4
  %707 = icmp ne i32 %706, 0
  br i1 %707, label %717, label %708

708:                                              ; preds = %705
  %709 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %709, %struct.mz_zip_archive** %189, align 8
  store i32 16, i32* %190, align 4
  %710 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %189, align 8
  %711 = icmp ne %struct.mz_zip_archive* %710, null
  br i1 %711, label %712, label %716

712:                                              ; preds = %708
  %713 = load i32, i32* %190, align 4
  %714 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %189, align 8
  %715 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %714, i32 0, i32 5
  store i32 %713, i32* %715, align 4
  br label %716

716:                                              ; preds = %708, %712
  store i32 0, i32* %235, align 4
  br label %2523

717:                                              ; preds = %705
  %718 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %719 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %718, i32 0, i32 11
  %720 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %719, align 8
  %721 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %722 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %721, i32 0, i32 14
  %723 = load i8*, i8** %722, align 8
  %724 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %254, i32 0, i32 11
  %725 = load i64, i64* %724, align 8
  %726 = add i64 %725, 30
  %727 = load i32, i32* %258, align 4
  %728 = zext i32 %727 to i64
  %729 = add i64 %726, %728
  %730 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %263, i32 0, i32 0
  %731 = load i8*, i8** %730, align 8
  %732 = load i32, i32* %259, align 4
  %733 = zext i32 %732 to i64
  %734 = call i64 %720(i8* noundef %723, i64 noundef %729, i8* noundef %731, i64 noundef %733)
  %735 = load i32, i32* %259, align 4
  %736 = zext i32 %735 to i64
  %737 = icmp ne i64 %734, %736
  br i1 %737, label %738, label %759

738:                                              ; preds = %717
  %739 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %739, %struct.mz_zip_archive** %107, align 8
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %108, align 8
  %740 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %107, align 8
  %741 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %740, i32 0, i32 8
  %742 = load void (i8*, i8*)*, void (i8*, i8*)** %741, align 8
  %743 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %107, align 8
  %744 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %743, i32 0, i32 10
  %745 = load i8*, i8** %744, align 8
  %746 = load %struct.mz_zip_array*, %struct.mz_zip_array** %108, align 8
  %747 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %746, i32 0, i32 0
  %748 = load i8*, i8** %747, align 8
  call void %742(i8* noundef %745, i8* noundef %748) #7
  %749 = load %struct.mz_zip_array*, %struct.mz_zip_array** %108, align 8
  %750 = bitcast %struct.mz_zip_array* %749 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %750, i8 0, i64 32, i1 false) #7
  %751 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %751, %struct.mz_zip_archive** %191, align 8
  store i32 20, i32* %192, align 4
  %752 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %191, align 8
  %753 = icmp ne %struct.mz_zip_archive* %752, null
  br i1 %753, label %754, label %758

754:                                              ; preds = %738
  %755 = load i32, i32* %192, align 4
  %756 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %191, align 8
  %757 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %756, i32 0, i32 5
  store i32 %755, i32* %757, align 4
  br label %758

758:                                              ; preds = %738, %754
  store i32 0, i32* %235, align 4
  br label %2523

759:                                              ; preds = %717
  %760 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %263, i32 0, i32 0
  %761 = load i8*, i8** %760, align 8
  store i8* %761, i8** %264, align 8
  br label %762

762:                                              ; preds = %989, %759
  %763 = load i32, i32* %265, align 4
  %764 = zext i32 %763 to i64
  %765 = icmp ult i64 %764, 4
  br i1 %765, label %766, label %787

766:                                              ; preds = %762
  %767 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %767, %struct.mz_zip_archive** %109, align 8
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %110, align 8
  %768 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %109, align 8
  %769 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %768, i32 0, i32 8
  %770 = load void (i8*, i8*)*, void (i8*, i8*)** %769, align 8
  %771 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %109, align 8
  %772 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %771, i32 0, i32 10
  %773 = load i8*, i8** %772, align 8
  %774 = load %struct.mz_zip_array*, %struct.mz_zip_array** %110, align 8
  %775 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %774, i32 0, i32 0
  %776 = load i8*, i8** %775, align 8
  call void %770(i8* noundef %773, i8* noundef %776) #7
  %777 = load %struct.mz_zip_array*, %struct.mz_zip_array** %110, align 8
  %778 = bitcast %struct.mz_zip_array* %777 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %778, i8 0, i64 32, i1 false) #7
  %779 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %779, %struct.mz_zip_archive** %193, align 8
  store i32 9, i32* %194, align 4
  %780 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %193, align 8
  %781 = icmp ne %struct.mz_zip_archive* %780, null
  br i1 %781, label %782, label %786

782:                                              ; preds = %766
  %783 = load i32, i32* %194, align 4
  %784 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %193, align 8
  %785 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %784, i32 0, i32 5
  store i32 %783, i32* %785, align 4
  br label %786

786:                                              ; preds = %766, %782
  store i32 0, i32* %235, align 4
  br label %2523

787:                                              ; preds = %762
  %788 = load i8*, i8** %264, align 8
  %789 = getelementptr inbounds i8, i8* %788, i64 0
  %790 = load i8, i8* %789, align 1
  %791 = zext i8 %790 to i32
  %792 = load i8*, i8** %264, align 8
  %793 = getelementptr inbounds i8, i8* %792, i64 1
  %794 = load i8, i8* %793, align 1
  %795 = zext i8 %794 to i32
  %796 = shl i32 %795, 8
  %797 = or i32 %791, %796
  store i32 %797, i32* %266, align 4
  %798 = load i8*, i8** %264, align 8
  %799 = getelementptr inbounds i8, i8* %798, i64 2
  %800 = getelementptr inbounds i8, i8* %799, i64 0
  %801 = load i8, i8* %800, align 1
  %802 = zext i8 %801 to i32
  %803 = load i8*, i8** %264, align 8
  %804 = getelementptr inbounds i8, i8* %803, i64 2
  %805 = getelementptr inbounds i8, i8* %804, i64 1
  %806 = load i8, i8* %805, align 1
  %807 = zext i8 %806 to i32
  %808 = shl i32 %807, 8
  %809 = or i32 %802, %808
  store i32 %809, i32* %267, align 4
  %810 = load i32, i32* %267, align 4
  %811 = zext i32 %810 to i64
  %812 = add i64 %811, 4
  %813 = trunc i64 %812 to i32
  store i32 %813, i32* %268, align 4
  %814 = load i32, i32* %268, align 4
  %815 = load i32, i32* %265, align 4
  %816 = icmp ugt i32 %814, %815
  br i1 %816, label %817, label %838

817:                                              ; preds = %787
  %818 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %818, %struct.mz_zip_archive** %111, align 8
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %112, align 8
  %819 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %111, align 8
  %820 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %819, i32 0, i32 8
  %821 = load void (i8*, i8*)*, void (i8*, i8*)** %820, align 8
  %822 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %111, align 8
  %823 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %822, i32 0, i32 10
  %824 = load i8*, i8** %823, align 8
  %825 = load %struct.mz_zip_array*, %struct.mz_zip_array** %112, align 8
  %826 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %825, i32 0, i32 0
  %827 = load i8*, i8** %826, align 8
  call void %821(i8* noundef %824, i8* noundef %827) #7
  %828 = load %struct.mz_zip_array*, %struct.mz_zip_array** %112, align 8
  %829 = bitcast %struct.mz_zip_array* %828 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %829, i8 0, i64 32, i1 false) #7
  %830 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %830, %struct.mz_zip_archive** %195, align 8
  store i32 9, i32* %196, align 4
  %831 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %195, align 8
  %832 = icmp ne %struct.mz_zip_archive* %831, null
  br i1 %832, label %833, label %837

833:                                              ; preds = %817
  %834 = load i32, i32* %196, align 4
  %835 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %195, align 8
  %836 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %835, i32 0, i32 5
  store i32 %834, i32* %836, align 4
  br label %837

837:                                              ; preds = %817, %833
  store i32 0, i32* %235, align 4
  br label %2523

838:                                              ; preds = %787
  %839 = load i32, i32* %266, align 4
  %840 = icmp eq i32 %839, 1
  br i1 %840, label %841, label %981

841:                                              ; preds = %838
  %842 = load i8*, i8** %264, align 8
  %843 = getelementptr inbounds i8, i8* %842, i64 4
  store i8* %843, i8** %269, align 8
  %844 = load i32, i32* %267, align 4
  %845 = zext i32 %844 to i64
  %846 = icmp ult i64 %845, 16
  br i1 %846, label %847, label %868

847:                                              ; preds = %841
  %848 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %848, %struct.mz_zip_archive** %113, align 8
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %114, align 8
  %849 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %113, align 8
  %850 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %849, i32 0, i32 8
  %851 = load void (i8*, i8*)*, void (i8*, i8*)** %850, align 8
  %852 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %113, align 8
  %853 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %852, i32 0, i32 10
  %854 = load i8*, i8** %853, align 8
  %855 = load %struct.mz_zip_array*, %struct.mz_zip_array** %114, align 8
  %856 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %855, i32 0, i32 0
  %857 = load i8*, i8** %856, align 8
  call void %851(i8* noundef %854, i8* noundef %857) #7
  %858 = load %struct.mz_zip_array*, %struct.mz_zip_array** %114, align 8
  %859 = bitcast %struct.mz_zip_array* %858 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %859, i8 0, i64 32, i1 false) #7
  %860 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %860, %struct.mz_zip_archive** %197, align 8
  store i32 9, i32* %198, align 4
  %861 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %197, align 8
  %862 = icmp ne %struct.mz_zip_archive* %861, null
  br i1 %862, label %863, label %867

863:                                              ; preds = %847
  %864 = load i32, i32* %198, align 4
  %865 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %197, align 8
  %866 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %865, i32 0, i32 5
  store i32 %864, i32* %866, align 4
  br label %867

867:                                              ; preds = %847, %863
  store i32 0, i32* %235, align 4
  br label %2523

868:                                              ; preds = %841
  %869 = load i8*, i8** %269, align 8
  %870 = getelementptr inbounds i8, i8* %869, i64 0
  %871 = load i8, i8* %870, align 1
  %872 = zext i8 %871 to i32
  %873 = load i8*, i8** %269, align 8
  %874 = getelementptr inbounds i8, i8* %873, i64 1
  %875 = load i8, i8* %874, align 1
  %876 = zext i8 %875 to i32
  %877 = shl i32 %876, 8
  %878 = or i32 %872, %877
  %879 = load i8*, i8** %269, align 8
  %880 = getelementptr inbounds i8, i8* %879, i64 2
  %881 = load i8, i8* %880, align 1
  %882 = zext i8 %881 to i32
  %883 = shl i32 %882, 16
  %884 = or i32 %878, %883
  %885 = load i8*, i8** %269, align 8
  %886 = getelementptr inbounds i8, i8* %885, i64 3
  %887 = load i8, i8* %886, align 1
  %888 = zext i8 %887 to i32
  %889 = shl i32 %888, 24
  %890 = or i32 %884, %889
  %891 = zext i32 %890 to i64
  %892 = load i8*, i8** %269, align 8
  %893 = getelementptr inbounds i8, i8* %892, i64 4
  %894 = getelementptr inbounds i8, i8* %893, i64 0
  %895 = load i8, i8* %894, align 1
  %896 = zext i8 %895 to i32
  %897 = load i8*, i8** %269, align 8
  %898 = getelementptr inbounds i8, i8* %897, i64 4
  %899 = getelementptr inbounds i8, i8* %898, i64 1
  %900 = load i8, i8* %899, align 1
  %901 = zext i8 %900 to i32
  %902 = shl i32 %901, 8
  %903 = or i32 %896, %902
  %904 = load i8*, i8** %269, align 8
  %905 = getelementptr inbounds i8, i8* %904, i64 4
  %906 = getelementptr inbounds i8, i8* %905, i64 2
  %907 = load i8, i8* %906, align 1
  %908 = zext i8 %907 to i32
  %909 = shl i32 %908, 16
  %910 = or i32 %903, %909
  %911 = load i8*, i8** %269, align 8
  %912 = getelementptr inbounds i8, i8* %911, i64 4
  %913 = getelementptr inbounds i8, i8* %912, i64 3
  %914 = load i8, i8* %913, align 1
  %915 = zext i8 %914 to i32
  %916 = shl i32 %915, 24
  %917 = or i32 %910, %916
  %918 = zext i32 %917 to i64
  %919 = shl i64 %918, 32
  %920 = or i64 %891, %919
  store i64 %920, i64* %261, align 8
  %921 = load i8*, i8** %269, align 8
  %922 = getelementptr inbounds i8, i8* %921, i64 8
  %923 = getelementptr inbounds i8, i8* %922, i64 0
  %924 = load i8, i8* %923, align 1
  %925 = zext i8 %924 to i32
  %926 = load i8*, i8** %269, align 8
  %927 = getelementptr inbounds i8, i8* %926, i64 8
  %928 = getelementptr inbounds i8, i8* %927, i64 1
  %929 = load i8, i8* %928, align 1
  %930 = zext i8 %929 to i32
  %931 = shl i32 %930, 8
  %932 = or i32 %925, %931
  %933 = load i8*, i8** %269, align 8
  %934 = getelementptr inbounds i8, i8* %933, i64 8
  %935 = getelementptr inbounds i8, i8* %934, i64 2
  %936 = load i8, i8* %935, align 1
  %937 = zext i8 %936 to i32
  %938 = shl i32 %937, 16
  %939 = or i32 %932, %938
  %940 = load i8*, i8** %269, align 8
  %941 = getelementptr inbounds i8, i8* %940, i64 8
  %942 = getelementptr inbounds i8, i8* %941, i64 3
  %943 = load i8, i8* %942, align 1
  %944 = zext i8 %943 to i32
  %945 = shl i32 %944, 24
  %946 = or i32 %939, %945
  %947 = zext i32 %946 to i64
  %948 = load i8*, i8** %269, align 8
  %949 = getelementptr inbounds i8, i8* %948, i64 8
  %950 = getelementptr inbounds i8, i8* %949, i64 4
  %951 = getelementptr inbounds i8, i8* %950, i64 0
  %952 = load i8, i8* %951, align 1
  %953 = zext i8 %952 to i32
  %954 = load i8*, i8** %269, align 8
  %955 = getelementptr inbounds i8, i8* %954, i64 8
  %956 = getelementptr inbounds i8, i8* %955, i64 4
  %957 = getelementptr inbounds i8, i8* %956, i64 1
  %958 = load i8, i8* %957, align 1
  %959 = zext i8 %958 to i32
  %960 = shl i32 %959, 8
  %961 = or i32 %953, %960
  %962 = load i8*, i8** %269, align 8
  %963 = getelementptr inbounds i8, i8* %962, i64 8
  %964 = getelementptr inbounds i8, i8* %963, i64 4
  %965 = getelementptr inbounds i8, i8* %964, i64 2
  %966 = load i8, i8* %965, align 1
  %967 = zext i8 %966 to i32
  %968 = shl i32 %967, 16
  %969 = or i32 %961, %968
  %970 = load i8*, i8** %269, align 8
  %971 = getelementptr inbounds i8, i8* %970, i64 8
  %972 = getelementptr inbounds i8, i8* %971, i64 4
  %973 = getelementptr inbounds i8, i8* %972, i64 3
  %974 = load i8, i8* %973, align 1
  %975 = zext i8 %974 to i32
  %976 = shl i32 %975, 24
  %977 = or i32 %969, %976
  %978 = zext i32 %977 to i64
  %979 = shl i64 %978, 32
  %980 = or i64 %947, %979
  store i64 %980, i64* %260, align 8
  store i32 1, i32* %262, align 4
  br label %992

981:                                              ; preds = %838
  %982 = load i32, i32* %268, align 4
  %983 = load i8*, i8** %264, align 8
  %984 = zext i32 %982 to i64
  %985 = getelementptr inbounds i8, i8* %983, i64 %984
  store i8* %985, i8** %264, align 8
  %986 = load i32, i32* %268, align 4
  %987 = load i32, i32* %265, align 4
  %988 = sub i32 %987, %986
  store i32 %988, i32* %265, align 4
  br label %989

989:                                              ; preds = %981
  %990 = load i32, i32* %265, align 4
  %991 = icmp ne i32 %990, 0
  br i1 %991, label %762, label %992, !llvm.loop !126

992:                                              ; preds = %989, %868
  %993 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %993, %struct.mz_zip_archive** %115, align 8
  store %struct.mz_zip_array* %263, %struct.mz_zip_array** %116, align 8
  %994 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %115, align 8
  %995 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %994, i32 0, i32 8
  %996 = load void (i8*, i8*)*, void (i8*, i8*)** %995, align 8
  %997 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %115, align 8
  %998 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %997, i32 0, i32 10
  %999 = load i8*, i8** %998, align 8
  %1000 = load %struct.mz_zip_array*, %struct.mz_zip_array** %116, align 8
  %1001 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1000, i32 0, i32 0
  %1002 = load i8*, i8** %1001, align 8
  call void %996(i8* noundef %999, i8* noundef %1002) #7
  %1003 = load %struct.mz_zip_array*, %struct.mz_zip_array** %116, align 8
  %1004 = bitcast %struct.mz_zip_array* %1003 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1004, i8 0, i64 32, i1 false) #7
  br label %1005

1005:                                             ; preds = %992, %674, %581
  %1006 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1007 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1006, i32 0, i32 4
  %1008 = load i32, i32* %1007, align 4
  %1009 = icmp ne i32 %1008, 0
  br i1 %1009, label %1042, label %1010

1010:                                             ; preds = %1005
  %1011 = load i64, i64* %246, align 8
  %1012 = load i32, i32* %241, align 4
  %1013 = zext i32 %1012 to i64
  %1014 = add i64 %1011, %1013
  %1015 = add i64 %1014, 30
  %1016 = load i64, i64* %243, align 8
  %1017 = add i64 %1015, %1016
  %1018 = add i64 %1017, 16
  %1019 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1020 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1019, i32 0, i32 0
  %1021 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1020, i32 0, i32 1
  %1022 = load i64, i64* %1021, align 8
  %1023 = add i64 %1018, %1022
  %1024 = add i64 %1023, 46
  %1025 = load i32, i32* %242, align 4
  %1026 = zext i32 %1025 to i64
  %1027 = add i64 %1024, %1026
  %1028 = add i64 %1027, 22
  %1029 = add i64 %1028, 64
  store i64 %1029, i64* %270, align 8
  %1030 = load i64, i64* %270, align 8
  %1031 = icmp uge i64 %1030, 4294967295
  br i1 %1031, label %1032, label %1041

1032:                                             ; preds = %1010
  %1033 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1033, %struct.mz_zip_archive** %199, align 8
  store i32 29, i32* %200, align 4
  %1034 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %199, align 8
  %1035 = icmp ne %struct.mz_zip_archive* %1034, null
  br i1 %1035, label %1036, label %1040

1036:                                             ; preds = %1032
  %1037 = load i32, i32* %200, align 4
  %1038 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %199, align 8
  %1039 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1038, i32 0, i32 5
  store i32 %1037, i32* %1039, align 4
  br label %1040

1040:                                             ; preds = %1032, %1036
  store i32 0, i32* %235, align 4
  br label %2523

1041:                                             ; preds = %1010
  br label %1042

1042:                                             ; preds = %1041, %1005
  %1043 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1044 = load i64, i64* %246, align 8
  %1045 = load i32, i32* %241, align 4
  %1046 = call i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive* noundef %1043, i64 noundef %1044, i32 noundef %1045)
  %1047 = icmp ne i32 %1046, 0
  br i1 %1047, label %1049, label %1048

1048:                                             ; preds = %1042
  store i32 0, i32* %235, align 4
  br label %2523

1049:                                             ; preds = %1042
  %1050 = load i32, i32* %241, align 4
  %1051 = zext i32 %1050 to i64
  %1052 = load i64, i64* %246, align 8
  %1053 = add i64 %1052, %1051
  store i64 %1053, i64* %246, align 8
  %1054 = load i64, i64* %246, align 8
  store i64 %1054, i64* %244, align 8
  %1055 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1056 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1055, i32 0, i32 6
  %1057 = load i64, i64* %1056, align 8
  %1058 = icmp ne i64 %1057, 0
  br i1 %1058, label %1059, label %1070

1059:                                             ; preds = %1049
  %1060 = load i64, i64* %244, align 8
  %1061 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1062 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1061, i32 0, i32 6
  %1063 = load i64, i64* %1062, align 8
  %1064 = sub i64 %1063, 1
  %1065 = and i64 %1060, %1064
  %1066 = icmp eq i64 %1065, 0
  br i1 %1066, label %1067, label %1068

1067:                                             ; preds = %1059
  br label %1069

1068:                                             ; preds = %1059
  call void @__assert_fail(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.22, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 7147, i8* noundef getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_from_zip_reader, i64 0, i64 0)) #8
  unreachable

1069:                                             ; preds = %1067
  br label %1070

1070:                                             ; preds = %1069, %1049
  %1071 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1072 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1071, i32 0, i32 12
  %1073 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1072, align 8
  %1074 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1075 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1074, i32 0, i32 14
  %1076 = load i8*, i8** %1075, align 8
  %1077 = load i64, i64* %246, align 8
  %1078 = load i8*, i8** %248, align 8
  %1079 = call i64 %1073(i8* noundef %1076, i64 noundef %1077, i8* noundef %1078, i64 noundef 30)
  %1080 = icmp ne i64 %1079, 30
  br i1 %1080, label %1081, label %1090

1081:                                             ; preds = %1070
  %1082 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1082, %struct.mz_zip_archive** %201, align 8
  store i32 19, i32* %202, align 4
  %1083 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %201, align 8
  %1084 = icmp ne %struct.mz_zip_archive* %1083, null
  br i1 %1084, label %1085, label %1089

1085:                                             ; preds = %1081
  %1086 = load i32, i32* %202, align 4
  %1087 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %201, align 8
  %1088 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1087, i32 0, i32 5
  store i32 %1086, i32* %1088, align 4
  br label %1089

1089:                                             ; preds = %1081, %1085
  store i32 0, i32* %235, align 4
  br label %2523

1090:                                             ; preds = %1070
  %1091 = load i64, i64* %246, align 8
  %1092 = add i64 %1091, 30
  store i64 %1092, i64* %246, align 8
  %1093 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1094 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1093, i32 0, i32 7
  %1095 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %1094, align 8
  %1096 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1097 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1096, i32 0, i32 10
  %1098 = load i8*, i8** %1097, align 8
  %1099 = load i64, i64* %243, align 8
  %1100 = icmp ult i64 65536, %1099
  br i1 %1100, label %1101, label %1102

1101:                                             ; preds = %1090
  br label %1104

1102:                                             ; preds = %1090
  %1103 = load i64, i64* %243, align 8
  br label %1104

1104:                                             ; preds = %1102, %1101
  %1105 = phi i64 [ 65536, %1101 ], [ %1103, %1102 ]
  %1106 = icmp ugt i64 32, %1105
  br i1 %1106, label %1107, label %1108

1107:                                             ; preds = %1104
  br label %1116

1108:                                             ; preds = %1104
  %1109 = load i64, i64* %243, align 8
  %1110 = icmp ult i64 65536, %1109
  br i1 %1110, label %1111, label %1112

1111:                                             ; preds = %1108
  br label %1114

1112:                                             ; preds = %1108
  %1113 = load i64, i64* %243, align 8
  br label %1114

1114:                                             ; preds = %1112, %1111
  %1115 = phi i64 [ 65536, %1111 ], [ %1113, %1112 ]
  br label %1116

1116:                                             ; preds = %1114, %1107
  %1117 = phi i64 [ 32, %1107 ], [ %1115, %1114 ]
  %1118 = call i8* %1095(i8* noundef %1098, i64 noundef 1, i64 noundef %1117)
  store i8* %1118, i8** %252, align 8
  %1119 = icmp eq i8* null, %1118
  br i1 %1119, label %1120, label %1129

1120:                                             ; preds = %1116
  %1121 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1121, %struct.mz_zip_archive** %203, align 8
  store i32 16, i32* %204, align 4
  %1122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %203, align 8
  %1123 = icmp ne %struct.mz_zip_archive* %1122, null
  br i1 %1123, label %1124, label %1128

1124:                                             ; preds = %1120
  %1125 = load i32, i32* %204, align 4
  %1126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %203, align 8
  %1127 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1126, i32 0, i32 5
  store i32 %1125, i32* %1127, align 4
  br label %1128

1128:                                             ; preds = %1120, %1124
  store i32 0, i32* %235, align 4
  br label %2523

1129:                                             ; preds = %1116
  br label %1130

1130:                                             ; preds = %1207, %1129
  %1131 = load i64, i64* %243, align 8
  %1132 = icmp ne i64 %1131, 0
  br i1 %1132, label %1133, label %1216

1133:                                             ; preds = %1130
  %1134 = load i64, i64* %243, align 8
  %1135 = icmp ult i64 65536, %1134
  br i1 %1135, label %1136, label %1137

1136:                                             ; preds = %1133
  br label %1139

1137:                                             ; preds = %1133
  %1138 = load i64, i64* %243, align 8
  br label %1139

1139:                                             ; preds = %1137, %1136
  %1140 = phi i64 [ 65536, %1136 ], [ %1138, %1137 ]
  %1141 = trunc i64 %1140 to i32
  store i32 %1141, i32* %239, align 4
  %1142 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1143 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1142, i32 0, i32 11
  %1144 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1143, align 8
  %1145 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1146 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1145, i32 0, i32 14
  %1147 = load i8*, i8** %1146, align 8
  %1148 = load i64, i64* %245, align 8
  %1149 = load i8*, i8** %252, align 8
  %1150 = load i32, i32* %239, align 4
  %1151 = zext i32 %1150 to i64
  %1152 = call i64 %1144(i8* noundef %1147, i64 noundef %1148, i8* noundef %1149, i64 noundef %1151)
  %1153 = load i32, i32* %239, align 4
  %1154 = zext i32 %1153 to i64
  %1155 = icmp ne i64 %1152, %1154
  br i1 %1155, label %1156, label %1172

1156:                                             ; preds = %1139
  %1157 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1158 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1157, i32 0, i32 8
  %1159 = load void (i8*, i8*)*, void (i8*, i8*)** %1158, align 8
  %1160 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1161 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1160, i32 0, i32 10
  %1162 = load i8*, i8** %1161, align 8
  %1163 = load i8*, i8** %252, align 8
  call void %1159(i8* noundef %1162, i8* noundef %1163)
  %1164 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1164, %struct.mz_zip_archive** %205, align 8
  store i32 20, i32* %206, align 4
  %1165 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %205, align 8
  %1166 = icmp ne %struct.mz_zip_archive* %1165, null
  br i1 %1166, label %1167, label %1171

1167:                                             ; preds = %1156
  %1168 = load i32, i32* %206, align 4
  %1169 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %205, align 8
  %1170 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1169, i32 0, i32 5
  store i32 %1168, i32* %1170, align 4
  br label %1171

1171:                                             ; preds = %1156, %1167
  store i32 0, i32* %235, align 4
  br label %2523

1172:                                             ; preds = %1139
  %1173 = load i32, i32* %239, align 4
  %1174 = zext i32 %1173 to i64
  %1175 = load i64, i64* %245, align 8
  %1176 = add i64 %1175, %1174
  store i64 %1176, i64* %245, align 8
  %1177 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1178 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1177, i32 0, i32 12
  %1179 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1178, align 8
  %1180 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1181 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1180, i32 0, i32 14
  %1182 = load i8*, i8** %1181, align 8
  %1183 = load i64, i64* %246, align 8
  %1184 = load i8*, i8** %252, align 8
  %1185 = load i32, i32* %239, align 4
  %1186 = zext i32 %1185 to i64
  %1187 = call i64 %1179(i8* noundef %1182, i64 noundef %1183, i8* noundef %1184, i64 noundef %1186)
  %1188 = load i32, i32* %239, align 4
  %1189 = zext i32 %1188 to i64
  %1190 = icmp ne i64 %1187, %1189
  br i1 %1190, label %1191, label %1207

1191:                                             ; preds = %1172
  %1192 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1193 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1192, i32 0, i32 8
  %1194 = load void (i8*, i8*)*, void (i8*, i8*)** %1193, align 8
  %1195 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1196 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1195, i32 0, i32 10
  %1197 = load i8*, i8** %1196, align 8
  %1198 = load i8*, i8** %252, align 8
  call void %1194(i8* noundef %1197, i8* noundef %1198)
  %1199 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1199, %struct.mz_zip_archive** %207, align 8
  store i32 19, i32* %208, align 4
  %1200 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %207, align 8
  %1201 = icmp ne %struct.mz_zip_archive* %1200, null
  br i1 %1201, label %1202, label %1206

1202:                                             ; preds = %1191
  %1203 = load i32, i32* %208, align 4
  %1204 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %207, align 8
  %1205 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1204, i32 0, i32 5
  store i32 %1203, i32* %1205, align 4
  br label %1206

1206:                                             ; preds = %1191, %1202
  store i32 0, i32* %235, align 4
  br label %2523

1207:                                             ; preds = %1172
  %1208 = load i32, i32* %239, align 4
  %1209 = zext i32 %1208 to i64
  %1210 = load i64, i64* %246, align 8
  %1211 = add i64 %1210, %1209
  store i64 %1211, i64* %246, align 8
  %1212 = load i32, i32* %239, align 4
  %1213 = zext i32 %1212 to i64
  %1214 = load i64, i64* %243, align 8
  %1215 = sub i64 %1214, %1213
  store i64 %1215, i64* %243, align 8
  br label %1130, !llvm.loop !127

1216:                                             ; preds = %1130
  %1217 = load i8*, i8** %248, align 8
  %1218 = getelementptr inbounds i8, i8* %1217, i64 6
  %1219 = getelementptr inbounds i8, i8* %1218, i64 0
  %1220 = load i8, i8* %1219, align 1
  %1221 = zext i8 %1220 to i32
  %1222 = load i8*, i8** %248, align 8
  %1223 = getelementptr inbounds i8, i8* %1222, i64 6
  %1224 = getelementptr inbounds i8, i8* %1223, i64 1
  %1225 = load i8, i8* %1224, align 1
  %1226 = zext i8 %1225 to i32
  %1227 = shl i32 %1226, 8
  %1228 = or i32 %1221, %1227
  store i32 %1228, i32* %240, align 4
  %1229 = load i32, i32* %240, align 4
  %1230 = and i32 %1229, 8
  %1231 = icmp ne i32 %1230, 0
  br i1 %1231, label %1232, label %1622

1232:                                             ; preds = %1216
  %1233 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1234 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1233, i32 0, i32 15
  %1235 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1234, align 8
  %1236 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1235, i32 0, i32 4
  %1237 = load i32, i32* %1236, align 4
  %1238 = icmp ne i32 %1237, 0
  br i1 %1238, label %1242, label %1239

1239:                                             ; preds = %1232
  %1240 = load i32, i32* %262, align 4
  %1241 = icmp ne i32 %1240, 0
  br i1 %1241, label %1242, label %1298

1242:                                             ; preds = %1239, %1232
  %1243 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1244 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1243, i32 0, i32 11
  %1245 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1244, align 8
  %1246 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1247 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1246, i32 0, i32 14
  %1248 = load i8*, i8** %1247, align 8
  %1249 = load i64, i64* %245, align 8
  %1250 = load i8*, i8** %252, align 8
  %1251 = call i64 %1245(i8* noundef %1248, i64 noundef %1249, i8* noundef %1250, i64 noundef 24)
  %1252 = icmp ne i64 %1251, 24
  br i1 %1252, label %1253, label %1269

1253:                                             ; preds = %1242
  %1254 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1255 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1254, i32 0, i32 8
  %1256 = load void (i8*, i8*)*, void (i8*, i8*)** %1255, align 8
  %1257 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1258 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1257, i32 0, i32 10
  %1259 = load i8*, i8** %1258, align 8
  %1260 = load i8*, i8** %252, align 8
  call void %1256(i8* noundef %1259, i8* noundef %1260)
  %1261 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1261, %struct.mz_zip_archive** %209, align 8
  store i32 20, i32* %210, align 4
  %1262 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %209, align 8
  %1263 = icmp ne %struct.mz_zip_archive* %1262, null
  br i1 %1263, label %1264, label %1268

1264:                                             ; preds = %1253
  %1265 = load i32, i32* %210, align 4
  %1266 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %209, align 8
  %1267 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1266, i32 0, i32 5
  store i32 %1265, i32* %1267, align 4
  br label %1268

1268:                                             ; preds = %1253, %1264
  store i32 0, i32* %235, align 4
  br label %2523

1269:                                             ; preds = %1242
  %1270 = load i8*, i8** %252, align 8
  %1271 = getelementptr inbounds i8, i8* %1270, i64 0
  %1272 = load i8, i8* %1271, align 1
  %1273 = zext i8 %1272 to i32
  %1274 = load i8*, i8** %252, align 8
  %1275 = getelementptr inbounds i8, i8* %1274, i64 1
  %1276 = load i8, i8* %1275, align 1
  %1277 = zext i8 %1276 to i32
  %1278 = shl i32 %1277, 8
  %1279 = or i32 %1273, %1278
  %1280 = load i8*, i8** %252, align 8
  %1281 = getelementptr inbounds i8, i8* %1280, i64 2
  %1282 = load i8, i8* %1281, align 1
  %1283 = zext i8 %1282 to i32
  %1284 = shl i32 %1283, 16
  %1285 = or i32 %1279, %1284
  %1286 = load i8*, i8** %252, align 8
  %1287 = getelementptr inbounds i8, i8* %1286, i64 3
  %1288 = load i8, i8* %1287, align 1
  %1289 = zext i8 %1288 to i32
  %1290 = shl i32 %1289, 24
  %1291 = or i32 %1285, %1290
  %1292 = icmp eq i32 %1291, 134695760
  %1293 = zext i1 %1292 to i64
  %1294 = select i1 %1292, i32 6, i32 5
  %1295 = sext i32 %1294 to i64
  %1296 = mul i64 4, %1295
  %1297 = trunc i64 %1296 to i32
  store i32 %1297, i32* %239, align 4
  br label %1582

1298:                                             ; preds = %1239
  %1299 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1300 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1299, i32 0, i32 11
  %1301 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1300, align 8
  %1302 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %237, align 8
  %1303 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1302, i32 0, i32 14
  %1304 = load i8*, i8** %1303, align 8
  %1305 = load i64, i64* %245, align 8
  %1306 = load i8*, i8** %252, align 8
  %1307 = call i64 %1301(i8* noundef %1304, i64 noundef %1305, i8* noundef %1306, i64 noundef 16)
  %1308 = icmp ne i64 %1307, 16
  br i1 %1308, label %1309, label %1325

1309:                                             ; preds = %1298
  %1310 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1311 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1310, i32 0, i32 8
  %1312 = load void (i8*, i8*)*, void (i8*, i8*)** %1311, align 8
  %1313 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1314 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1313, i32 0, i32 10
  %1315 = load i8*, i8** %1314, align 8
  %1316 = load i8*, i8** %252, align 8
  call void %1312(i8* noundef %1315, i8* noundef %1316)
  %1317 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1317, %struct.mz_zip_archive** %211, align 8
  store i32 20, i32* %212, align 4
  %1318 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %211, align 8
  %1319 = icmp ne %struct.mz_zip_archive* %1318, null
  br i1 %1319, label %1320, label %1324

1320:                                             ; preds = %1309
  %1321 = load i32, i32* %212, align 4
  %1322 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %211, align 8
  %1323 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1322, i32 0, i32 5
  store i32 %1321, i32* %1323, align 4
  br label %1324

1324:                                             ; preds = %1309, %1320
  store i32 0, i32* %235, align 4
  br label %2523

1325:                                             ; preds = %1298
  %1326 = load i8*, i8** %252, align 8
  %1327 = getelementptr inbounds i8, i8* %1326, i64 0
  %1328 = load i8, i8* %1327, align 1
  %1329 = zext i8 %1328 to i32
  %1330 = load i8*, i8** %252, align 8
  %1331 = getelementptr inbounds i8, i8* %1330, i64 1
  %1332 = load i8, i8* %1331, align 1
  %1333 = zext i8 %1332 to i32
  %1334 = shl i32 %1333, 8
  %1335 = or i32 %1329, %1334
  %1336 = load i8*, i8** %252, align 8
  %1337 = getelementptr inbounds i8, i8* %1336, i64 2
  %1338 = load i8, i8* %1337, align 1
  %1339 = zext i8 %1338 to i32
  %1340 = shl i32 %1339, 16
  %1341 = or i32 %1335, %1340
  %1342 = load i8*, i8** %252, align 8
  %1343 = getelementptr inbounds i8, i8* %1342, i64 3
  %1344 = load i8, i8* %1343, align 1
  %1345 = zext i8 %1344 to i32
  %1346 = shl i32 %1345, 24
  %1347 = or i32 %1341, %1346
  %1348 = icmp eq i32 %1347, 134695760
  %1349 = zext i1 %1348 to i32
  store i32 %1349, i32* %271, align 4
  %1350 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1351 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1350, i32 0, i32 15
  %1352 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %1351, align 8
  %1353 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1352, i32 0, i32 4
  %1354 = load i32, i32* %1353, align 4
  %1355 = icmp ne i32 %1354, 0
  br i1 %1355, label %1356, label %1573

1356:                                             ; preds = %1325
  %1357 = load i8*, i8** %252, align 8
  %1358 = load i32, i32* %271, align 4
  %1359 = icmp ne i32 %1358, 0
  %1360 = zext i1 %1359 to i64
  %1361 = select i1 %1359, i64 4, i64 0
  %1362 = getelementptr inbounds i8, i8* %1357, i64 %1361
  store i8* %1362, i8** %272, align 8
  %1363 = load i8*, i8** %272, align 8
  %1364 = getelementptr inbounds i8, i8* %1363, i64 0
  %1365 = load i8, i8* %1364, align 1
  %1366 = zext i8 %1365 to i32
  %1367 = load i8*, i8** %272, align 8
  %1368 = getelementptr inbounds i8, i8* %1367, i64 1
  %1369 = load i8, i8* %1368, align 1
  %1370 = zext i8 %1369 to i32
  %1371 = shl i32 %1370, 8
  %1372 = or i32 %1366, %1371
  %1373 = load i8*, i8** %272, align 8
  %1374 = getelementptr inbounds i8, i8* %1373, i64 2
  %1375 = load i8, i8* %1374, align 1
  %1376 = zext i8 %1375 to i32
  %1377 = shl i32 %1376, 16
  %1378 = or i32 %1372, %1377
  %1379 = load i8*, i8** %272, align 8
  %1380 = getelementptr inbounds i8, i8* %1379, i64 3
  %1381 = load i8, i8* %1380, align 1
  %1382 = zext i8 %1381 to i32
  %1383 = shl i32 %1382, 24
  %1384 = or i32 %1378, %1383
  store i32 %1384, i32* %273, align 4
  %1385 = load i8*, i8** %272, align 8
  %1386 = getelementptr inbounds i8, i8* %1385, i64 4
  %1387 = getelementptr inbounds i8, i8* %1386, i64 0
  %1388 = load i8, i8* %1387, align 1
  %1389 = zext i8 %1388 to i32
  %1390 = load i8*, i8** %272, align 8
  %1391 = getelementptr inbounds i8, i8* %1390, i64 4
  %1392 = getelementptr inbounds i8, i8* %1391, i64 1
  %1393 = load i8, i8* %1392, align 1
  %1394 = zext i8 %1393 to i32
  %1395 = shl i32 %1394, 8
  %1396 = or i32 %1389, %1395
  %1397 = load i8*, i8** %272, align 8
  %1398 = getelementptr inbounds i8, i8* %1397, i64 4
  %1399 = getelementptr inbounds i8, i8* %1398, i64 2
  %1400 = load i8, i8* %1399, align 1
  %1401 = zext i8 %1400 to i32
  %1402 = shl i32 %1401, 16
  %1403 = or i32 %1396, %1402
  %1404 = load i8*, i8** %272, align 8
  %1405 = getelementptr inbounds i8, i8* %1404, i64 4
  %1406 = getelementptr inbounds i8, i8* %1405, i64 3
  %1407 = load i8, i8* %1406, align 1
  %1408 = zext i8 %1407 to i32
  %1409 = shl i32 %1408, 24
  %1410 = or i32 %1403, %1409
  %1411 = zext i32 %1410 to i64
  store i64 %1411, i64* %274, align 8
  %1412 = load i8*, i8** %272, align 8
  %1413 = getelementptr inbounds i8, i8* %1412, i64 8
  %1414 = getelementptr inbounds i8, i8* %1413, i64 0
  %1415 = load i8, i8* %1414, align 1
  %1416 = zext i8 %1415 to i32
  %1417 = load i8*, i8** %272, align 8
  %1418 = getelementptr inbounds i8, i8* %1417, i64 8
  %1419 = getelementptr inbounds i8, i8* %1418, i64 1
  %1420 = load i8, i8* %1419, align 1
  %1421 = zext i8 %1420 to i32
  %1422 = shl i32 %1421, 8
  %1423 = or i32 %1416, %1422
  %1424 = load i8*, i8** %272, align 8
  %1425 = getelementptr inbounds i8, i8* %1424, i64 8
  %1426 = getelementptr inbounds i8, i8* %1425, i64 2
  %1427 = load i8, i8* %1426, align 1
  %1428 = zext i8 %1427 to i32
  %1429 = shl i32 %1428, 16
  %1430 = or i32 %1423, %1429
  %1431 = load i8*, i8** %272, align 8
  %1432 = getelementptr inbounds i8, i8* %1431, i64 8
  %1433 = getelementptr inbounds i8, i8* %1432, i64 3
  %1434 = load i8, i8* %1433, align 1
  %1435 = zext i8 %1434 to i32
  %1436 = shl i32 %1435, 24
  %1437 = or i32 %1430, %1436
  %1438 = zext i32 %1437 to i64
  store i64 %1438, i64* %275, align 8
  %1439 = load i8*, i8** %252, align 8
  store i8* %1439, i8** %95, align 8
  store i32 134695760, i32* %96, align 4
  %1440 = load i32, i32* %96, align 4
  %1441 = trunc i32 %1440 to i8
  %1442 = load i8*, i8** %95, align 8
  store i8 %1441, i8* %1442, align 1
  %1443 = load i32, i32* %96, align 4
  %1444 = lshr i32 %1443, 8
  %1445 = trunc i32 %1444 to i8
  %1446 = load i8*, i8** %95, align 8
  %1447 = getelementptr inbounds i8, i8* %1446, i64 1
  store i8 %1445, i8* %1447, align 1
  %1448 = load i32, i32* %96, align 4
  %1449 = lshr i32 %1448, 16
  %1450 = trunc i32 %1449 to i8
  %1451 = load i8*, i8** %95, align 8
  %1452 = getelementptr inbounds i8, i8* %1451, i64 2
  store i8 %1450, i8* %1452, align 1
  %1453 = load i32, i32* %96, align 4
  %1454 = lshr i32 %1453, 24
  %1455 = trunc i32 %1454 to i8
  %1456 = load i8*, i8** %95, align 8
  %1457 = getelementptr inbounds i8, i8* %1456, i64 3
  store i8 %1455, i8* %1457, align 1
  %1458 = load i8*, i8** %252, align 8
  %1459 = getelementptr inbounds i8, i8* %1458, i64 4
  %1460 = load i32, i32* %273, align 4
  store i8* %1459, i8** %97, align 8
  store i32 %1460, i32* %98, align 4
  %1461 = load i32, i32* %98, align 4
  %1462 = trunc i32 %1461 to i8
  %1463 = load i8*, i8** %97, align 8
  store i8 %1462, i8* %1463, align 1
  %1464 = load i32, i32* %98, align 4
  %1465 = lshr i32 %1464, 8
  %1466 = trunc i32 %1465 to i8
  %1467 = load i8*, i8** %97, align 8
  %1468 = getelementptr inbounds i8, i8* %1467, i64 1
  store i8 %1466, i8* %1468, align 1
  %1469 = load i32, i32* %98, align 4
  %1470 = lshr i32 %1469, 16
  %1471 = trunc i32 %1470 to i8
  %1472 = load i8*, i8** %97, align 8
  %1473 = getelementptr inbounds i8, i8* %1472, i64 2
  store i8 %1471, i8* %1473, align 1
  %1474 = load i32, i32* %98, align 4
  %1475 = lshr i32 %1474, 24
  %1476 = trunc i32 %1475 to i8
  %1477 = load i8*, i8** %97, align 8
  %1478 = getelementptr inbounds i8, i8* %1477, i64 3
  store i8 %1476, i8* %1478, align 1
  %1479 = load i8*, i8** %252, align 8
  %1480 = getelementptr inbounds i8, i8* %1479, i64 8
  %1481 = load i64, i64* %274, align 8
  store i8* %1480, i8** %87, align 8
  store i64 %1481, i64* %88, align 8
  %1482 = load i8*, i8** %87, align 8
  %1483 = load i64, i64* %88, align 8
  %1484 = trunc i64 %1483 to i32
  store i8* %1482, i8** %83, align 8
  store i32 %1484, i32* %84, align 4
  %1485 = load i32, i32* %84, align 4
  %1486 = trunc i32 %1485 to i8
  %1487 = load i8*, i8** %83, align 8
  store i8 %1486, i8* %1487, align 1
  %1488 = load i32, i32* %84, align 4
  %1489 = lshr i32 %1488, 8
  %1490 = trunc i32 %1489 to i8
  %1491 = load i8*, i8** %83, align 8
  %1492 = getelementptr inbounds i8, i8* %1491, i64 1
  store i8 %1490, i8* %1492, align 1
  %1493 = load i32, i32* %84, align 4
  %1494 = lshr i32 %1493, 16
  %1495 = trunc i32 %1494 to i8
  %1496 = load i8*, i8** %83, align 8
  %1497 = getelementptr inbounds i8, i8* %1496, i64 2
  store i8 %1495, i8* %1497, align 1
  %1498 = load i32, i32* %84, align 4
  %1499 = lshr i32 %1498, 24
  %1500 = trunc i32 %1499 to i8
  %1501 = load i8*, i8** %83, align 8
  %1502 = getelementptr inbounds i8, i8* %1501, i64 3
  store i8 %1500, i8* %1502, align 1
  %1503 = load i8*, i8** %87, align 8
  %1504 = getelementptr inbounds i8, i8* %1503, i64 4
  %1505 = load i64, i64* %88, align 8
  %1506 = lshr i64 %1505, 32
  %1507 = trunc i64 %1506 to i32
  store i8* %1504, i8** %85, align 8
  store i32 %1507, i32* %86, align 4
  %1508 = load i32, i32* %86, align 4
  %1509 = trunc i32 %1508 to i8
  %1510 = load i8*, i8** %85, align 8
  store i8 %1509, i8* %1510, align 1
  %1511 = load i32, i32* %86, align 4
  %1512 = lshr i32 %1511, 8
  %1513 = trunc i32 %1512 to i8
  %1514 = load i8*, i8** %85, align 8
  %1515 = getelementptr inbounds i8, i8* %1514, i64 1
  store i8 %1513, i8* %1515, align 1
  %1516 = load i32, i32* %86, align 4
  %1517 = lshr i32 %1516, 16
  %1518 = trunc i32 %1517 to i8
  %1519 = load i8*, i8** %85, align 8
  %1520 = getelementptr inbounds i8, i8* %1519, i64 2
  store i8 %1518, i8* %1520, align 1
  %1521 = load i32, i32* %86, align 4
  %1522 = lshr i32 %1521, 24
  %1523 = trunc i32 %1522 to i8
  %1524 = load i8*, i8** %85, align 8
  %1525 = getelementptr inbounds i8, i8* %1524, i64 3
  store i8 %1523, i8* %1525, align 1
  %1526 = load i8*, i8** %252, align 8
  %1527 = getelementptr inbounds i8, i8* %1526, i64 16
  %1528 = load i64, i64* %275, align 8
  store i8* %1527, i8** %93, align 8
  store i64 %1528, i64* %94, align 8
  %1529 = load i8*, i8** %93, align 8
  %1530 = load i64, i64* %94, align 8
  %1531 = trunc i64 %1530 to i32
  store i8* %1529, i8** %89, align 8
  store i32 %1531, i32* %90, align 4
  %1532 = load i32, i32* %90, align 4
  %1533 = trunc i32 %1532 to i8
  %1534 = load i8*, i8** %89, align 8
  store i8 %1533, i8* %1534, align 1
  %1535 = load i32, i32* %90, align 4
  %1536 = lshr i32 %1535, 8
  %1537 = trunc i32 %1536 to i8
  %1538 = load i8*, i8** %89, align 8
  %1539 = getelementptr inbounds i8, i8* %1538, i64 1
  store i8 %1537, i8* %1539, align 1
  %1540 = load i32, i32* %90, align 4
  %1541 = lshr i32 %1540, 16
  %1542 = trunc i32 %1541 to i8
  %1543 = load i8*, i8** %89, align 8
  %1544 = getelementptr inbounds i8, i8* %1543, i64 2
  store i8 %1542, i8* %1544, align 1
  %1545 = load i32, i32* %90, align 4
  %1546 = lshr i32 %1545, 24
  %1547 = trunc i32 %1546 to i8
  %1548 = load i8*, i8** %89, align 8
  %1549 = getelementptr inbounds i8, i8* %1548, i64 3
  store i8 %1547, i8* %1549, align 1
  %1550 = load i8*, i8** %93, align 8
  %1551 = getelementptr inbounds i8, i8* %1550, i64 4
  %1552 = load i64, i64* %94, align 8
  %1553 = lshr i64 %1552, 32
  %1554 = trunc i64 %1553 to i32
  store i8* %1551, i8** %91, align 8
  store i32 %1554, i32* %92, align 4
  %1555 = load i32, i32* %92, align 4
  %1556 = trunc i32 %1555 to i8
  %1557 = load i8*, i8** %91, align 8
  store i8 %1556, i8* %1557, align 1
  %1558 = load i32, i32* %92, align 4
  %1559 = lshr i32 %1558, 8
  %1560 = trunc i32 %1559 to i8
  %1561 = load i8*, i8** %91, align 8
  %1562 = getelementptr inbounds i8, i8* %1561, i64 1
  store i8 %1560, i8* %1562, align 1
  %1563 = load i32, i32* %92, align 4
  %1564 = lshr i32 %1563, 16
  %1565 = trunc i32 %1564 to i8
  %1566 = load i8*, i8** %91, align 8
  %1567 = getelementptr inbounds i8, i8* %1566, i64 2
  store i8 %1565, i8* %1567, align 1
  %1568 = load i32, i32* %92, align 4
  %1569 = lshr i32 %1568, 24
  %1570 = trunc i32 %1569 to i8
  %1571 = load i8*, i8** %91, align 8
  %1572 = getelementptr inbounds i8, i8* %1571, i64 3
  store i8 %1570, i8* %1572, align 1
  store i32 24, i32* %239, align 4
  br label %1581

1573:                                             ; preds = %1325
  %1574 = load i32, i32* %271, align 4
  %1575 = icmp ne i32 %1574, 0
  %1576 = zext i1 %1575 to i64
  %1577 = select i1 %1575, i32 4, i32 3
  %1578 = sext i32 %1577 to i64
  %1579 = mul i64 4, %1578
  %1580 = trunc i64 %1579 to i32
  store i32 %1580, i32* %239, align 4
  br label %1581

1581:                                             ; preds = %1573, %1356
  br label %1582

1582:                                             ; preds = %1581, %1269
  %1583 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1584 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1583, i32 0, i32 12
  %1585 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %1584, align 8
  %1586 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1587 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1586, i32 0, i32 14
  %1588 = load i8*, i8** %1587, align 8
  %1589 = load i64, i64* %246, align 8
  %1590 = load i8*, i8** %252, align 8
  %1591 = load i32, i32* %239, align 4
  %1592 = zext i32 %1591 to i64
  %1593 = call i64 %1585(i8* noundef %1588, i64 noundef %1589, i8* noundef %1590, i64 noundef %1592)
  %1594 = load i32, i32* %239, align 4
  %1595 = zext i32 %1594 to i64
  %1596 = icmp ne i64 %1593, %1595
  br i1 %1596, label %1597, label %1613

1597:                                             ; preds = %1582
  %1598 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1599 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1598, i32 0, i32 8
  %1600 = load void (i8*, i8*)*, void (i8*, i8*)** %1599, align 8
  %1601 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1602 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1601, i32 0, i32 10
  %1603 = load i8*, i8** %1602, align 8
  %1604 = load i8*, i8** %252, align 8
  call void %1600(i8* noundef %1603, i8* noundef %1604)
  %1605 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1605, %struct.mz_zip_archive** %213, align 8
  store i32 19, i32* %214, align 4
  %1606 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %213, align 8
  %1607 = icmp ne %struct.mz_zip_archive* %1606, null
  br i1 %1607, label %1608, label %1612

1608:                                             ; preds = %1597
  %1609 = load i32, i32* %214, align 4
  %1610 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %213, align 8
  %1611 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1610, i32 0, i32 5
  store i32 %1609, i32* %1611, align 4
  br label %1612

1612:                                             ; preds = %1597, %1608
  store i32 0, i32* %235, align 4
  br label %2523

1613:                                             ; preds = %1582
  %1614 = load i32, i32* %239, align 4
  %1615 = zext i32 %1614 to i64
  %1616 = load i64, i64* %245, align 8
  %1617 = add i64 %1616, %1615
  store i64 %1617, i64* %245, align 8
  %1618 = load i32, i32* %239, align 4
  %1619 = zext i32 %1618 to i64
  %1620 = load i64, i64* %246, align 8
  %1621 = add i64 %1620, %1619
  store i64 %1621, i64* %246, align 8
  br label %1622

1622:                                             ; preds = %1613, %1216
  %1623 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1624 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1623, i32 0, i32 8
  %1625 = load void (i8*, i8*)*, void (i8*, i8*)** %1624, align 8
  %1626 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1627 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1626, i32 0, i32 10
  %1628 = load i8*, i8** %1627, align 8
  %1629 = load i8*, i8** %252, align 8
  call void %1625(i8* noundef %1628, i8* noundef %1629)
  %1630 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1631 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1630, i32 0, i32 0
  %1632 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1631, i32 0, i32 1
  %1633 = load i64, i64* %1632, align 8
  store i64 %1633, i64* %250, align 8
  %1634 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  %1635 = load i8*, i8** %253, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1634, i8* align 1 %1635, i64 46, i1 false)
  %1636 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1637 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1636, i32 0, i32 4
  %1638 = load i32, i32* %1637, align 4
  %1639 = icmp ne i32 %1638, 0
  br i1 %1639, label %1640, label %2169

1640:                                             ; preds = %1622
  %1641 = load i8*, i8** %253, align 8
  %1642 = getelementptr inbounds i8, i8* %1641, i64 46
  %1643 = load i32, i32* %255, align 4
  %1644 = zext i32 %1643 to i64
  %1645 = getelementptr inbounds i8, i8* %1642, i64 %1644
  store i8* %1645, i8** %276, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %166, align 8
  store i32 1, i32* %167, align 4
  %1646 = load %struct.mz_zip_array*, %struct.mz_zip_array** %166, align 8
  %1647 = bitcast %struct.mz_zip_array* %1646 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1647, i8 0, i64 32, i1 false) #7
  %1648 = load i32, i32* %167, align 4
  %1649 = load %struct.mz_zip_array*, %struct.mz_zip_array** %166, align 8
  %1650 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1649, i32 0, i32 3
  store i32 %1648, i32* %1650, align 8
  %1651 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  %1652 = getelementptr inbounds i8, i8* %1651, i64 20
  store i8* %1652, i8** %99, align 8
  store i32 -1, i32* %100, align 4
  %1653 = load i32, i32* %100, align 4
  %1654 = trunc i32 %1653 to i8
  %1655 = load i8*, i8** %99, align 8
  store i8 %1654, i8* %1655, align 1
  %1656 = load i32, i32* %100, align 4
  %1657 = lshr i32 %1656, 8
  %1658 = trunc i32 %1657 to i8
  %1659 = load i8*, i8** %99, align 8
  %1660 = getelementptr inbounds i8, i8* %1659, i64 1
  store i8 %1658, i8* %1660, align 1
  %1661 = load i32, i32* %100, align 4
  %1662 = lshr i32 %1661, 16
  %1663 = trunc i32 %1662 to i8
  %1664 = load i8*, i8** %99, align 8
  %1665 = getelementptr inbounds i8, i8* %1664, i64 2
  store i8 %1663, i8* %1665, align 1
  %1666 = load i32, i32* %100, align 4
  %1667 = lshr i32 %1666, 24
  %1668 = trunc i32 %1667 to i8
  %1669 = load i8*, i8** %99, align 8
  %1670 = getelementptr inbounds i8, i8* %1669, i64 3
  store i8 %1668, i8* %1670, align 1
  %1671 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  %1672 = getelementptr inbounds i8, i8* %1671, i64 24
  store i8* %1672, i8** %101, align 8
  store i32 -1, i32* %102, align 4
  %1673 = load i32, i32* %102, align 4
  %1674 = trunc i32 %1673 to i8
  %1675 = load i8*, i8** %101, align 8
  store i8 %1674, i8* %1675, align 1
  %1676 = load i32, i32* %102, align 4
  %1677 = lshr i32 %1676, 8
  %1678 = trunc i32 %1677 to i8
  %1679 = load i8*, i8** %101, align 8
  %1680 = getelementptr inbounds i8, i8* %1679, i64 1
  store i8 %1678, i8* %1680, align 1
  %1681 = load i32, i32* %102, align 4
  %1682 = lshr i32 %1681, 16
  %1683 = trunc i32 %1682 to i8
  %1684 = load i8*, i8** %101, align 8
  %1685 = getelementptr inbounds i8, i8* %1684, i64 2
  store i8 %1683, i8* %1685, align 1
  %1686 = load i32, i32* %102, align 4
  %1687 = lshr i32 %1686, 24
  %1688 = trunc i32 %1687 to i8
  %1689 = load i8*, i8** %101, align 8
  %1690 = getelementptr inbounds i8, i8* %1689, i64 3
  store i8 %1688, i8* %1690, align 1
  %1691 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  %1692 = getelementptr inbounds i8, i8* %1691, i64 42
  store i8* %1692, i8** %103, align 8
  store i32 -1, i32* %104, align 4
  %1693 = load i32, i32* %104, align 4
  %1694 = trunc i32 %1693 to i8
  %1695 = load i8*, i8** %103, align 8
  store i8 %1694, i8* %1695, align 1
  %1696 = load i32, i32* %104, align 4
  %1697 = lshr i32 %1696, 8
  %1698 = trunc i32 %1697 to i8
  %1699 = load i8*, i8** %103, align 8
  %1700 = getelementptr inbounds i8, i8* %1699, i64 1
  store i8 %1698, i8* %1700, align 1
  %1701 = load i32, i32* %104, align 4
  %1702 = lshr i32 %1701, 16
  %1703 = trunc i32 %1702 to i8
  %1704 = load i8*, i8** %103, align 8
  %1705 = getelementptr inbounds i8, i8* %1704, i64 2
  store i8 %1703, i8* %1705, align 1
  %1706 = load i32, i32* %104, align 4
  %1707 = lshr i32 %1706, 24
  %1708 = trunc i32 %1707 to i8
  %1709 = load i8*, i8** %103, align 8
  %1710 = getelementptr inbounds i8, i8* %1709, i64 3
  store i8 %1708, i8* %1710, align 1
  %1711 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1712 = load i8*, i8** %276, align 8
  %1713 = load i32, i32* %257, align 4
  %1714 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %254, i32 0, i32 7
  %1715 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %254, i32 0, i32 8
  %1716 = call i32 @mz_zip_writer_update_zip64_extension_block(%struct.mz_zip_array* noundef %277, %struct.mz_zip_archive* noundef %1711, i8* noundef %1712, i32 noundef %1713, i64* noundef %1714, i64* noundef %1715, i64* noundef %244, i32* noundef null)
  %1717 = icmp ne i32 %1716, 0
  br i1 %1717, label %1731, label %1718

1718:                                             ; preds = %1640
  %1719 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1719, %struct.mz_zip_archive** %117, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %118, align 8
  %1720 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %117, align 8
  %1721 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1720, i32 0, i32 8
  %1722 = load void (i8*, i8*)*, void (i8*, i8*)** %1721, align 8
  %1723 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %117, align 8
  %1724 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1723, i32 0, i32 10
  %1725 = load i8*, i8** %1724, align 8
  %1726 = load %struct.mz_zip_array*, %struct.mz_zip_array** %118, align 8
  %1727 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1726, i32 0, i32 0
  %1728 = load i8*, i8** %1727, align 8
  call void %1722(i8* noundef %1725, i8* noundef %1728) #7
  %1729 = load %struct.mz_zip_array*, %struct.mz_zip_array** %118, align 8
  %1730 = bitcast %struct.mz_zip_array* %1729 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1730, i8 0, i64 32, i1 false) #7
  store i32 0, i32* %235, align 4
  br label %2523

1731:                                             ; preds = %1640
  %1732 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  %1733 = getelementptr inbounds i8, i8* %1732, i64 30
  %1734 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %277, i32 0, i32 1
  %1735 = load i64, i64* %1734, align 8
  %1736 = trunc i64 %1735 to i16
  store i8* %1733, i8** %81, align 8
  store i16 %1736, i16* %82, align 2
  %1737 = load i16, i16* %82, align 2
  %1738 = trunc i16 %1737 to i8
  %1739 = load i8*, i8** %81, align 8
  store i8 %1738, i8* %1739, align 1
  %1740 = load i16, i16* %82, align 2
  %1741 = zext i16 %1740 to i32
  %1742 = ashr i32 %1741, 8
  %1743 = trunc i32 %1742 to i8
  %1744 = load i8*, i8** %81, align 8
  %1745 = getelementptr inbounds i8, i8* %1744, i64 1
  store i8 %1743, i8* %1745, align 1
  %1746 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1747 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1748 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1747, i32 0, i32 0
  %1749 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  store %struct.mz_zip_archive* %1746, %struct.mz_zip_archive** %10, align 8
  store %struct.mz_zip_array* %1748, %struct.mz_zip_array** %11, align 8
  store i8* %1749, i8** %12, align 8
  store i64 46, i64* %13, align 8
  %1750 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %1751 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1750, i32 0, i32 1
  %1752 = load i64, i64* %1751, align 8
  store i64 %1752, i64* %14, align 8
  %1753 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %1754 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %1755 = load i64, i64* %14, align 8
  %1756 = load i64, i64* %13, align 8
  %1757 = add i64 %1755, %1756
  store %struct.mz_zip_archive* %1753, %struct.mz_zip_archive** %5, align 8
  store %struct.mz_zip_array* %1754, %struct.mz_zip_array** %6, align 8
  store i64 %1757, i64* %7, align 8
  store i32 1, i32* %8, align 4
  %1758 = load i64, i64* %7, align 8
  %1759 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %1760 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1759, i32 0, i32 2
  %1761 = load i64, i64* %1760, align 8
  %1762 = icmp ugt i64 %1758, %1761
  br i1 %1762, label %1763, label %1772

1763:                                             ; preds = %1731
  %1764 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %1765 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %1766 = load i64, i64* %7, align 8
  %1767 = load i32, i32* %8, align 4
  %1768 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1764, %struct.mz_zip_array* noundef %1765, i64 noundef %1766, i32 noundef %1767) #7
  %1769 = icmp ne i32 %1768, 0
  br i1 %1769, label %1771, label %1770

1770:                                             ; preds = %1763
  store i32 0, i32* %4, align 4
  br label %1776

1771:                                             ; preds = %1763
  br label %1772

1772:                                             ; preds = %1771, %1731
  %1773 = load i64, i64* %7, align 8
  %1774 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %1775 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1774, i32 0, i32 1
  store i64 %1773, i64* %1775, align 8
  store i32 1, i32* %4, align 4
  br label %1776

1776:                                             ; preds = %1772, %1770
  %1777 = load i32, i32* %4, align 4
  %1778 = icmp ne i32 %1777, 0
  br i1 %1778, label %1780, label %1779

1779:                                             ; preds = %1776
  store i32 0, i32* %9, align 4
  br label %1802

1780:                                             ; preds = %1776
  %1781 = load i64, i64* %13, align 8
  %1782 = icmp ugt i64 %1781, 0
  br i1 %1782, label %1783, label %1801

1783:                                             ; preds = %1780
  %1784 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %1785 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1784, i32 0, i32 0
  %1786 = load i8*, i8** %1785, align 8
  %1787 = load i64, i64* %14, align 8
  %1788 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %1789 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1788, i32 0, i32 3
  %1790 = load i32, i32* %1789, align 8
  %1791 = zext i32 %1790 to i64
  %1792 = mul i64 %1787, %1791
  %1793 = getelementptr inbounds i8, i8* %1786, i64 %1792
  %1794 = load i8*, i8** %12, align 8
  %1795 = load i64, i64* %13, align 8
  %1796 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %1797 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1796, i32 0, i32 3
  %1798 = load i32, i32* %1797, align 8
  %1799 = zext i32 %1798 to i64
  %1800 = mul i64 %1795, %1799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1793, i8* align 1 %1794, i64 %1800, i1 false) #7
  br label %1801

1801:                                             ; preds = %1783, %1780
  store i32 1, i32* %9, align 4
  br label %1802

1802:                                             ; preds = %1779, %1801
  %1803 = load i32, i32* %9, align 4
  %1804 = icmp ne i32 %1803, 0
  br i1 %1804, label %1826, label %1805

1805:                                             ; preds = %1802
  %1806 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1806, %struct.mz_zip_archive** %119, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %120, align 8
  %1807 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %119, align 8
  %1808 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1807, i32 0, i32 8
  %1809 = load void (i8*, i8*)*, void (i8*, i8*)** %1808, align 8
  %1810 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %119, align 8
  %1811 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1810, i32 0, i32 10
  %1812 = load i8*, i8** %1811, align 8
  %1813 = load %struct.mz_zip_array*, %struct.mz_zip_array** %120, align 8
  %1814 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1813, i32 0, i32 0
  %1815 = load i8*, i8** %1814, align 8
  call void %1809(i8* noundef %1812, i8* noundef %1815) #7
  %1816 = load %struct.mz_zip_array*, %struct.mz_zip_array** %120, align 8
  %1817 = bitcast %struct.mz_zip_array* %1816 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1817, i8 0, i64 32, i1 false) #7
  %1818 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1818, %struct.mz_zip_archive** %215, align 8
  store i32 16, i32* %216, align 4
  %1819 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %215, align 8
  %1820 = icmp ne %struct.mz_zip_archive* %1819, null
  br i1 %1820, label %1821, label %1825

1821:                                             ; preds = %1805
  %1822 = load i32, i32* %216, align 4
  %1823 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %215, align 8
  %1824 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1823, i32 0, i32 5
  store i32 %1822, i32* %1824, align 4
  br label %1825

1825:                                             ; preds = %1805, %1821
  store i32 0, i32* %235, align 4
  br label %2523

1826:                                             ; preds = %1802
  %1827 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1828 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1829 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1828, i32 0, i32 0
  %1830 = load i8*, i8** %253, align 8
  %1831 = getelementptr inbounds i8, i8* %1830, i64 46
  %1832 = load i32, i32* %255, align 4
  %1833 = zext i32 %1832 to i64
  store %struct.mz_zip_archive* %1827, %struct.mz_zip_archive** %21, align 8
  store %struct.mz_zip_array* %1829, %struct.mz_zip_array** %22, align 8
  store i8* %1831, i8** %23, align 8
  store i64 %1833, i64* %24, align 8
  %1834 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %1835 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1834, i32 0, i32 1
  %1836 = load i64, i64* %1835, align 8
  store i64 %1836, i64* %25, align 8
  %1837 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %21, align 8
  %1838 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %1839 = load i64, i64* %25, align 8
  %1840 = load i64, i64* %24, align 8
  %1841 = add i64 %1839, %1840
  store %struct.mz_zip_archive* %1837, %struct.mz_zip_archive** %16, align 8
  store %struct.mz_zip_array* %1838, %struct.mz_zip_array** %17, align 8
  store i64 %1841, i64* %18, align 8
  store i32 1, i32* %19, align 4
  %1842 = load i64, i64* %18, align 8
  %1843 = load %struct.mz_zip_array*, %struct.mz_zip_array** %17, align 8
  %1844 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1843, i32 0, i32 2
  %1845 = load i64, i64* %1844, align 8
  %1846 = icmp ugt i64 %1842, %1845
  br i1 %1846, label %1847, label %1856

1847:                                             ; preds = %1826
  %1848 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %16, align 8
  %1849 = load %struct.mz_zip_array*, %struct.mz_zip_array** %17, align 8
  %1850 = load i64, i64* %18, align 8
  %1851 = load i32, i32* %19, align 4
  %1852 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1848, %struct.mz_zip_array* noundef %1849, i64 noundef %1850, i32 noundef %1851) #7
  %1853 = icmp ne i32 %1852, 0
  br i1 %1853, label %1855, label %1854

1854:                                             ; preds = %1847
  store i32 0, i32* %15, align 4
  br label %1860

1855:                                             ; preds = %1847
  br label %1856

1856:                                             ; preds = %1855, %1826
  %1857 = load i64, i64* %18, align 8
  %1858 = load %struct.mz_zip_array*, %struct.mz_zip_array** %17, align 8
  %1859 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1858, i32 0, i32 1
  store i64 %1857, i64* %1859, align 8
  store i32 1, i32* %15, align 4
  br label %1860

1860:                                             ; preds = %1856, %1854
  %1861 = load i32, i32* %15, align 4
  %1862 = icmp ne i32 %1861, 0
  br i1 %1862, label %1864, label %1863

1863:                                             ; preds = %1860
  store i32 0, i32* %20, align 4
  br label %1886

1864:                                             ; preds = %1860
  %1865 = load i64, i64* %24, align 8
  %1866 = icmp ugt i64 %1865, 0
  br i1 %1866, label %1867, label %1885

1867:                                             ; preds = %1864
  %1868 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %1869 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1868, i32 0, i32 0
  %1870 = load i8*, i8** %1869, align 8
  %1871 = load i64, i64* %25, align 8
  %1872 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %1873 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1872, i32 0, i32 3
  %1874 = load i32, i32* %1873, align 8
  %1875 = zext i32 %1874 to i64
  %1876 = mul i64 %1871, %1875
  %1877 = getelementptr inbounds i8, i8* %1870, i64 %1876
  %1878 = load i8*, i8** %23, align 8
  %1879 = load i64, i64* %24, align 8
  %1880 = load %struct.mz_zip_array*, %struct.mz_zip_array** %22, align 8
  %1881 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1880, i32 0, i32 3
  %1882 = load i32, i32* %1881, align 8
  %1883 = zext i32 %1882 to i64
  %1884 = mul i64 %1879, %1883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1877, i8* align 1 %1878, i64 %1884, i1 false) #7
  br label %1885

1885:                                             ; preds = %1867, %1864
  store i32 1, i32* %20, align 4
  br label %1886

1886:                                             ; preds = %1863, %1885
  %1887 = load i32, i32* %20, align 4
  %1888 = icmp ne i32 %1887, 0
  br i1 %1888, label %1934, label %1889

1889:                                             ; preds = %1886
  %1890 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1890, %struct.mz_zip_archive** %121, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %122, align 8
  %1891 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %121, align 8
  %1892 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1891, i32 0, i32 8
  %1893 = load void (i8*, i8*)*, void (i8*, i8*)** %1892, align 8
  %1894 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %121, align 8
  %1895 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1894, i32 0, i32 10
  %1896 = load i8*, i8** %1895, align 8
  %1897 = load %struct.mz_zip_array*, %struct.mz_zip_array** %122, align 8
  %1898 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1897, i32 0, i32 0
  %1899 = load i8*, i8** %1898, align 8
  call void %1893(i8* noundef %1896, i8* noundef %1899) #7
  %1900 = load %struct.mz_zip_array*, %struct.mz_zip_array** %122, align 8
  %1901 = bitcast %struct.mz_zip_array* %1900 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1901, i8 0, i64 32, i1 false) #7
  %1902 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1903 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1904 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1903, i32 0, i32 0
  %1905 = load i64, i64* %250, align 8
  store %struct.mz_zip_archive* %1902, %struct.mz_zip_archive** %135, align 8
  store %struct.mz_zip_array* %1904, %struct.mz_zip_array** %136, align 8
  store i64 %1905, i64* %137, align 8
  store i32 0, i32* %138, align 4
  %1906 = load i64, i64* %137, align 8
  %1907 = load %struct.mz_zip_array*, %struct.mz_zip_array** %136, align 8
  %1908 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1907, i32 0, i32 2
  %1909 = load i64, i64* %1908, align 8
  %1910 = icmp ugt i64 %1906, %1909
  br i1 %1910, label %1911, label %1920

1911:                                             ; preds = %1889
  %1912 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %135, align 8
  %1913 = load %struct.mz_zip_array*, %struct.mz_zip_array** %136, align 8
  %1914 = load i64, i64* %137, align 8
  %1915 = load i32, i32* %138, align 4
  %1916 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1912, %struct.mz_zip_array* noundef %1913, i64 noundef %1914, i32 noundef %1915) #7
  %1917 = icmp ne i32 %1916, 0
  br i1 %1917, label %1919, label %1918

1918:                                             ; preds = %1911
  store i32 0, i32* %134, align 4
  br label %1924

1919:                                             ; preds = %1911
  br label %1920

1920:                                             ; preds = %1919, %1889
  %1921 = load i64, i64* %137, align 8
  %1922 = load %struct.mz_zip_array*, %struct.mz_zip_array** %136, align 8
  %1923 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1922, i32 0, i32 1
  store i64 %1921, i64* %1923, align 8
  store i32 1, i32* %134, align 4
  br label %1924

1924:                                             ; preds = %1918, %1920
  %1925 = load i32, i32* %134, align 4
  %1926 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1926, %struct.mz_zip_archive** %217, align 8
  store i32 16, i32* %218, align 4
  %1927 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %217, align 8
  %1928 = icmp ne %struct.mz_zip_archive* %1927, null
  br i1 %1928, label %1929, label %1933

1929:                                             ; preds = %1924
  %1930 = load i32, i32* %218, align 4
  %1931 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %217, align 8
  %1932 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1931, i32 0, i32 5
  store i32 %1930, i32* %1932, align 4
  br label %1933

1933:                                             ; preds = %1924, %1929
  store i32 0, i32* %235, align 4
  br label %2523

1934:                                             ; preds = %1886
  %1935 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %1936 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %1937 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %1936, i32 0, i32 0
  %1938 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %277, i32 0, i32 0
  %1939 = load i8*, i8** %1938, align 8
  %1940 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %277, i32 0, i32 1
  %1941 = load i64, i64* %1940, align 8
  store %struct.mz_zip_archive* %1935, %struct.mz_zip_archive** %32, align 8
  store %struct.mz_zip_array* %1937, %struct.mz_zip_array** %33, align 8
  store i8* %1939, i8** %34, align 8
  store i64 %1941, i64* %35, align 8
  %1942 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %1943 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1942, i32 0, i32 1
  %1944 = load i64, i64* %1943, align 8
  store i64 %1944, i64* %36, align 8
  %1945 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %32, align 8
  %1946 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %1947 = load i64, i64* %36, align 8
  %1948 = load i64, i64* %35, align 8
  %1949 = add i64 %1947, %1948
  store %struct.mz_zip_archive* %1945, %struct.mz_zip_archive** %27, align 8
  store %struct.mz_zip_array* %1946, %struct.mz_zip_array** %28, align 8
  store i64 %1949, i64* %29, align 8
  store i32 1, i32* %30, align 4
  %1950 = load i64, i64* %29, align 8
  %1951 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %1952 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1951, i32 0, i32 2
  %1953 = load i64, i64* %1952, align 8
  %1954 = icmp ugt i64 %1950, %1953
  br i1 %1954, label %1955, label %1964

1955:                                             ; preds = %1934
  %1956 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %27, align 8
  %1957 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %1958 = load i64, i64* %29, align 8
  %1959 = load i32, i32* %30, align 4
  %1960 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %1956, %struct.mz_zip_array* noundef %1957, i64 noundef %1958, i32 noundef %1959) #7
  %1961 = icmp ne i32 %1960, 0
  br i1 %1961, label %1963, label %1962

1962:                                             ; preds = %1955
  store i32 0, i32* %26, align 4
  br label %1968

1963:                                             ; preds = %1955
  br label %1964

1964:                                             ; preds = %1963, %1934
  %1965 = load i64, i64* %29, align 8
  %1966 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %1967 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1966, i32 0, i32 1
  store i64 %1965, i64* %1967, align 8
  store i32 1, i32* %26, align 4
  br label %1968

1968:                                             ; preds = %1964, %1962
  %1969 = load i32, i32* %26, align 4
  %1970 = icmp ne i32 %1969, 0
  br i1 %1970, label %1972, label %1971

1971:                                             ; preds = %1968
  store i32 0, i32* %31, align 4
  br label %1994

1972:                                             ; preds = %1968
  %1973 = load i64, i64* %35, align 8
  %1974 = icmp ugt i64 %1973, 0
  br i1 %1974, label %1975, label %1993

1975:                                             ; preds = %1972
  %1976 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %1977 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1976, i32 0, i32 0
  %1978 = load i8*, i8** %1977, align 8
  %1979 = load i64, i64* %36, align 8
  %1980 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %1981 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1980, i32 0, i32 3
  %1982 = load i32, i32* %1981, align 8
  %1983 = zext i32 %1982 to i64
  %1984 = mul i64 %1979, %1983
  %1985 = getelementptr inbounds i8, i8* %1978, i64 %1984
  %1986 = load i8*, i8** %34, align 8
  %1987 = load i64, i64* %35, align 8
  %1988 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %1989 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %1988, i32 0, i32 3
  %1990 = load i32, i32* %1989, align 8
  %1991 = zext i32 %1990 to i64
  %1992 = mul i64 %1987, %1991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1985, i8* align 1 %1986, i64 %1992, i1 false) #7
  br label %1993

1993:                                             ; preds = %1975, %1972
  store i32 1, i32* %31, align 4
  br label %1994

1994:                                             ; preds = %1971, %1993
  %1995 = load i32, i32* %31, align 4
  %1996 = icmp ne i32 %1995, 0
  br i1 %1996, label %2042, label %1997

1997:                                             ; preds = %1994
  %1998 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %1998, %struct.mz_zip_archive** %123, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %124, align 8
  %1999 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %123, align 8
  %2000 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %1999, i32 0, i32 8
  %2001 = load void (i8*, i8*)*, void (i8*, i8*)** %2000, align 8
  %2002 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %123, align 8
  %2003 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2002, i32 0, i32 10
  %2004 = load i8*, i8** %2003, align 8
  %2005 = load %struct.mz_zip_array*, %struct.mz_zip_array** %124, align 8
  %2006 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2005, i32 0, i32 0
  %2007 = load i8*, i8** %2006, align 8
  call void %2001(i8* noundef %2004, i8* noundef %2007) #7
  %2008 = load %struct.mz_zip_array*, %struct.mz_zip_array** %124, align 8
  %2009 = bitcast %struct.mz_zip_array* %2008 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2009, i8 0, i64 32, i1 false) #7
  %2010 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2011 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2012 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2011, i32 0, i32 0
  %2013 = load i64, i64* %250, align 8
  store %struct.mz_zip_archive* %2010, %struct.mz_zip_archive** %140, align 8
  store %struct.mz_zip_array* %2012, %struct.mz_zip_array** %141, align 8
  store i64 %2013, i64* %142, align 8
  store i32 0, i32* %143, align 4
  %2014 = load i64, i64* %142, align 8
  %2015 = load %struct.mz_zip_array*, %struct.mz_zip_array** %141, align 8
  %2016 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2015, i32 0, i32 2
  %2017 = load i64, i64* %2016, align 8
  %2018 = icmp ugt i64 %2014, %2017
  br i1 %2018, label %2019, label %2028

2019:                                             ; preds = %1997
  %2020 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %140, align 8
  %2021 = load %struct.mz_zip_array*, %struct.mz_zip_array** %141, align 8
  %2022 = load i64, i64* %142, align 8
  %2023 = load i32, i32* %143, align 4
  %2024 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2020, %struct.mz_zip_array* noundef %2021, i64 noundef %2022, i32 noundef %2023) #7
  %2025 = icmp ne i32 %2024, 0
  br i1 %2025, label %2027, label %2026

2026:                                             ; preds = %2019
  store i32 0, i32* %139, align 4
  br label %2032

2027:                                             ; preds = %2019
  br label %2028

2028:                                             ; preds = %2027, %1997
  %2029 = load i64, i64* %142, align 8
  %2030 = load %struct.mz_zip_array*, %struct.mz_zip_array** %141, align 8
  %2031 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2030, i32 0, i32 1
  store i64 %2029, i64* %2031, align 8
  store i32 1, i32* %139, align 4
  br label %2032

2032:                                             ; preds = %2026, %2028
  %2033 = load i32, i32* %139, align 4
  %2034 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2034, %struct.mz_zip_archive** %219, align 8
  store i32 16, i32* %220, align 4
  %2035 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %219, align 8
  %2036 = icmp ne %struct.mz_zip_archive* %2035, null
  br i1 %2036, label %2037, label %2041

2037:                                             ; preds = %2032
  %2038 = load i32, i32* %220, align 4
  %2039 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %219, align 8
  %2040 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2039, i32 0, i32 5
  store i32 %2038, i32* %2040, align 4
  br label %2041

2041:                                             ; preds = %2032, %2037
  store i32 0, i32* %235, align 4
  br label %2523

2042:                                             ; preds = %1994
  %2043 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2044 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2045 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2044, i32 0, i32 0
  %2046 = load i8*, i8** %253, align 8
  %2047 = getelementptr inbounds i8, i8* %2046, i64 46
  %2048 = load i32, i32* %255, align 4
  %2049 = zext i32 %2048 to i64
  %2050 = getelementptr inbounds i8, i8* %2047, i64 %2049
  %2051 = load i32, i32* %257, align 4
  %2052 = zext i32 %2051 to i64
  %2053 = getelementptr inbounds i8, i8* %2050, i64 %2052
  %2054 = load i32, i32* %256, align 4
  %2055 = zext i32 %2054 to i64
  store %struct.mz_zip_archive* %2043, %struct.mz_zip_archive** %43, align 8
  store %struct.mz_zip_array* %2045, %struct.mz_zip_array** %44, align 8
  store i8* %2053, i8** %45, align 8
  store i64 %2055, i64* %46, align 8
  %2056 = load %struct.mz_zip_array*, %struct.mz_zip_array** %44, align 8
  %2057 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2056, i32 0, i32 1
  %2058 = load i64, i64* %2057, align 8
  store i64 %2058, i64* %47, align 8
  %2059 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %43, align 8
  %2060 = load %struct.mz_zip_array*, %struct.mz_zip_array** %44, align 8
  %2061 = load i64, i64* %47, align 8
  %2062 = load i64, i64* %46, align 8
  %2063 = add i64 %2061, %2062
  store %struct.mz_zip_archive* %2059, %struct.mz_zip_archive** %38, align 8
  store %struct.mz_zip_array* %2060, %struct.mz_zip_array** %39, align 8
  store i64 %2063, i64* %40, align 8
  store i32 1, i32* %41, align 4
  %2064 = load i64, i64* %40, align 8
  %2065 = load %struct.mz_zip_array*, %struct.mz_zip_array** %39, align 8
  %2066 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2065, i32 0, i32 2
  %2067 = load i64, i64* %2066, align 8
  %2068 = icmp ugt i64 %2064, %2067
  br i1 %2068, label %2069, label %2078

2069:                                             ; preds = %2042
  %2070 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %38, align 8
  %2071 = load %struct.mz_zip_array*, %struct.mz_zip_array** %39, align 8
  %2072 = load i64, i64* %40, align 8
  %2073 = load i32, i32* %41, align 4
  %2074 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2070, %struct.mz_zip_array* noundef %2071, i64 noundef %2072, i32 noundef %2073) #7
  %2075 = icmp ne i32 %2074, 0
  br i1 %2075, label %2077, label %2076

2076:                                             ; preds = %2069
  store i32 0, i32* %37, align 4
  br label %2082

2077:                                             ; preds = %2069
  br label %2078

2078:                                             ; preds = %2077, %2042
  %2079 = load i64, i64* %40, align 8
  %2080 = load %struct.mz_zip_array*, %struct.mz_zip_array** %39, align 8
  %2081 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2080, i32 0, i32 1
  store i64 %2079, i64* %2081, align 8
  store i32 1, i32* %37, align 4
  br label %2082

2082:                                             ; preds = %2078, %2076
  %2083 = load i32, i32* %37, align 4
  %2084 = icmp ne i32 %2083, 0
  br i1 %2084, label %2086, label %2085

2085:                                             ; preds = %2082
  store i32 0, i32* %42, align 4
  br label %2108

2086:                                             ; preds = %2082
  %2087 = load i64, i64* %46, align 8
  %2088 = icmp ugt i64 %2087, 0
  br i1 %2088, label %2089, label %2107

2089:                                             ; preds = %2086
  %2090 = load %struct.mz_zip_array*, %struct.mz_zip_array** %44, align 8
  %2091 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2090, i32 0, i32 0
  %2092 = load i8*, i8** %2091, align 8
  %2093 = load i64, i64* %47, align 8
  %2094 = load %struct.mz_zip_array*, %struct.mz_zip_array** %44, align 8
  %2095 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2094, i32 0, i32 3
  %2096 = load i32, i32* %2095, align 8
  %2097 = zext i32 %2096 to i64
  %2098 = mul i64 %2093, %2097
  %2099 = getelementptr inbounds i8, i8* %2092, i64 %2098
  %2100 = load i8*, i8** %45, align 8
  %2101 = load i64, i64* %46, align 8
  %2102 = load %struct.mz_zip_array*, %struct.mz_zip_array** %44, align 8
  %2103 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2102, i32 0, i32 3
  %2104 = load i32, i32* %2103, align 8
  %2105 = zext i32 %2104 to i64
  %2106 = mul i64 %2101, %2105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2099, i8* align 1 %2100, i64 %2106, i1 false) #7
  br label %2107

2107:                                             ; preds = %2089, %2086
  store i32 1, i32* %42, align 4
  br label %2108

2108:                                             ; preds = %2085, %2107
  %2109 = load i32, i32* %42, align 4
  %2110 = icmp ne i32 %2109, 0
  br i1 %2110, label %2156, label %2111

2111:                                             ; preds = %2108
  %2112 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2112, %struct.mz_zip_archive** %125, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %126, align 8
  %2113 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %125, align 8
  %2114 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2113, i32 0, i32 8
  %2115 = load void (i8*, i8*)*, void (i8*, i8*)** %2114, align 8
  %2116 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %125, align 8
  %2117 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2116, i32 0, i32 10
  %2118 = load i8*, i8** %2117, align 8
  %2119 = load %struct.mz_zip_array*, %struct.mz_zip_array** %126, align 8
  %2120 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2119, i32 0, i32 0
  %2121 = load i8*, i8** %2120, align 8
  call void %2115(i8* noundef %2118, i8* noundef %2121) #7
  %2122 = load %struct.mz_zip_array*, %struct.mz_zip_array** %126, align 8
  %2123 = bitcast %struct.mz_zip_array* %2122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2123, i8 0, i64 32, i1 false) #7
  %2124 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2125 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2126 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2125, i32 0, i32 0
  %2127 = load i64, i64* %250, align 8
  store %struct.mz_zip_archive* %2124, %struct.mz_zip_archive** %145, align 8
  store %struct.mz_zip_array* %2126, %struct.mz_zip_array** %146, align 8
  store i64 %2127, i64* %147, align 8
  store i32 0, i32* %148, align 4
  %2128 = load i64, i64* %147, align 8
  %2129 = load %struct.mz_zip_array*, %struct.mz_zip_array** %146, align 8
  %2130 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2129, i32 0, i32 2
  %2131 = load i64, i64* %2130, align 8
  %2132 = icmp ugt i64 %2128, %2131
  br i1 %2132, label %2133, label %2142

2133:                                             ; preds = %2111
  %2134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %145, align 8
  %2135 = load %struct.mz_zip_array*, %struct.mz_zip_array** %146, align 8
  %2136 = load i64, i64* %147, align 8
  %2137 = load i32, i32* %148, align 4
  %2138 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2134, %struct.mz_zip_array* noundef %2135, i64 noundef %2136, i32 noundef %2137) #7
  %2139 = icmp ne i32 %2138, 0
  br i1 %2139, label %2141, label %2140

2140:                                             ; preds = %2133
  store i32 0, i32* %144, align 4
  br label %2146

2141:                                             ; preds = %2133
  br label %2142

2142:                                             ; preds = %2141, %2111
  %2143 = load i64, i64* %147, align 8
  %2144 = load %struct.mz_zip_array*, %struct.mz_zip_array** %146, align 8
  %2145 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2144, i32 0, i32 1
  store i64 %2143, i64* %2145, align 8
  store i32 1, i32* %144, align 4
  br label %2146

2146:                                             ; preds = %2140, %2142
  %2147 = load i32, i32* %144, align 4
  %2148 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2148, %struct.mz_zip_archive** %221, align 8
  store i32 16, i32* %222, align 4
  %2149 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %221, align 8
  %2150 = icmp ne %struct.mz_zip_archive* %2149, null
  br i1 %2150, label %2151, label %2155

2151:                                             ; preds = %2146
  %2152 = load i32, i32* %222, align 4
  %2153 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %221, align 8
  %2154 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2153, i32 0, i32 5
  store i32 %2152, i32* %2154, align 4
  br label %2155

2155:                                             ; preds = %2146, %2151
  store i32 0, i32* %235, align 4
  br label %2523

2156:                                             ; preds = %2108
  %2157 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2157, %struct.mz_zip_archive** %127, align 8
  store %struct.mz_zip_array* %277, %struct.mz_zip_array** %128, align 8
  %2158 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %127, align 8
  %2159 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2158, i32 0, i32 8
  %2160 = load void (i8*, i8*)*, void (i8*, i8*)** %2159, align 8
  %2161 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %127, align 8
  %2162 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2161, i32 0, i32 10
  %2163 = load i8*, i8** %2162, align 8
  %2164 = load %struct.mz_zip_array*, %struct.mz_zip_array** %128, align 8
  %2165 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2164, i32 0, i32 0
  %2166 = load i8*, i8** %2165, align 8
  call void %2160(i8* noundef %2163, i8* noundef %2166) #7
  %2167 = load %struct.mz_zip_array*, %struct.mz_zip_array** %128, align 8
  %2168 = bitcast %struct.mz_zip_array* %2167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2168, i8 0, i64 32, i1 false) #7
  br label %2381

2169:                                             ; preds = %1622
  %2170 = load i64, i64* %246, align 8
  %2171 = icmp ugt i64 %2170, 4294967295
  br i1 %2171, label %2172, label %2181

2172:                                             ; preds = %2169
  %2173 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2173, %struct.mz_zip_archive** %223, align 8
  store i32 29, i32* %224, align 4
  %2174 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %223, align 8
  %2175 = icmp ne %struct.mz_zip_archive* %2174, null
  br i1 %2175, label %2176, label %2180

2176:                                             ; preds = %2172
  %2177 = load i32, i32* %224, align 4
  %2178 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %223, align 8
  %2179 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2178, i32 0, i32 5
  store i32 %2177, i32* %2179, align 4
  br label %2180

2180:                                             ; preds = %2172, %2176
  store i32 0, i32* %235, align 4
  br label %2523

2181:                                             ; preds = %2169
  %2182 = load i64, i64* %244, align 8
  %2183 = icmp uge i64 %2182, 4294967295
  br i1 %2183, label %2184, label %2193

2184:                                             ; preds = %2181
  %2185 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2185, %struct.mz_zip_archive** %225, align 8
  store i32 29, i32* %226, align 4
  %2186 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %225, align 8
  %2187 = icmp ne %struct.mz_zip_archive* %2186, null
  br i1 %2187, label %2188, label %2192

2188:                                             ; preds = %2184
  %2189 = load i32, i32* %226, align 4
  %2190 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %225, align 8
  %2191 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2190, i32 0, i32 5
  store i32 %2189, i32* %2191, align 4
  br label %2192

2192:                                             ; preds = %2184, %2188
  store i32 0, i32* %235, align 4
  br label %2523

2193:                                             ; preds = %2181
  %2194 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  %2195 = getelementptr inbounds i8, i8* %2194, i64 42
  %2196 = load i64, i64* %244, align 8
  %2197 = trunc i64 %2196 to i32
  store i8* %2195, i8** %105, align 8
  store i32 %2197, i32* %106, align 4
  %2198 = load i32, i32* %106, align 4
  %2199 = trunc i32 %2198 to i8
  %2200 = load i8*, i8** %105, align 8
  store i8 %2199, i8* %2200, align 1
  %2201 = load i32, i32* %106, align 4
  %2202 = lshr i32 %2201, 8
  %2203 = trunc i32 %2202 to i8
  %2204 = load i8*, i8** %105, align 8
  %2205 = getelementptr inbounds i8, i8* %2204, i64 1
  store i8 %2203, i8* %2205, align 1
  %2206 = load i32, i32* %106, align 4
  %2207 = lshr i32 %2206, 16
  %2208 = trunc i32 %2207 to i8
  %2209 = load i8*, i8** %105, align 8
  %2210 = getelementptr inbounds i8, i8* %2209, i64 2
  store i8 %2208, i8* %2210, align 1
  %2211 = load i32, i32* %106, align 4
  %2212 = lshr i32 %2211, 24
  %2213 = trunc i32 %2212 to i8
  %2214 = load i8*, i8** %105, align 8
  %2215 = getelementptr inbounds i8, i8* %2214, i64 3
  store i8 %2213, i8* %2215, align 1
  %2216 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2217 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2218 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2217, i32 0, i32 0
  %2219 = getelementptr inbounds [46 x i8], [46 x i8]* %249, i64 0, i64 0
  store %struct.mz_zip_archive* %2216, %struct.mz_zip_archive** %54, align 8
  store %struct.mz_zip_array* %2218, %struct.mz_zip_array** %55, align 8
  store i8* %2219, i8** %56, align 8
  store i64 46, i64* %57, align 8
  %2220 = load %struct.mz_zip_array*, %struct.mz_zip_array** %55, align 8
  %2221 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2220, i32 0, i32 1
  %2222 = load i64, i64* %2221, align 8
  store i64 %2222, i64* %58, align 8
  %2223 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %54, align 8
  %2224 = load %struct.mz_zip_array*, %struct.mz_zip_array** %55, align 8
  %2225 = load i64, i64* %58, align 8
  %2226 = load i64, i64* %57, align 8
  %2227 = add i64 %2225, %2226
  store %struct.mz_zip_archive* %2223, %struct.mz_zip_archive** %49, align 8
  store %struct.mz_zip_array* %2224, %struct.mz_zip_array** %50, align 8
  store i64 %2227, i64* %51, align 8
  store i32 1, i32* %52, align 4
  %2228 = load i64, i64* %51, align 8
  %2229 = load %struct.mz_zip_array*, %struct.mz_zip_array** %50, align 8
  %2230 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2229, i32 0, i32 2
  %2231 = load i64, i64* %2230, align 8
  %2232 = icmp ugt i64 %2228, %2231
  br i1 %2232, label %2233, label %2242

2233:                                             ; preds = %2193
  %2234 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %49, align 8
  %2235 = load %struct.mz_zip_array*, %struct.mz_zip_array** %50, align 8
  %2236 = load i64, i64* %51, align 8
  %2237 = load i32, i32* %52, align 4
  %2238 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2234, %struct.mz_zip_array* noundef %2235, i64 noundef %2236, i32 noundef %2237) #7
  %2239 = icmp ne i32 %2238, 0
  br i1 %2239, label %2241, label %2240

2240:                                             ; preds = %2233
  store i32 0, i32* %48, align 4
  br label %2246

2241:                                             ; preds = %2233
  br label %2242

2242:                                             ; preds = %2241, %2193
  %2243 = load i64, i64* %51, align 8
  %2244 = load %struct.mz_zip_array*, %struct.mz_zip_array** %50, align 8
  %2245 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2244, i32 0, i32 1
  store i64 %2243, i64* %2245, align 8
  store i32 1, i32* %48, align 4
  br label %2246

2246:                                             ; preds = %2242, %2240
  %2247 = load i32, i32* %48, align 4
  %2248 = icmp ne i32 %2247, 0
  br i1 %2248, label %2250, label %2249

2249:                                             ; preds = %2246
  store i32 0, i32* %53, align 4
  br label %2272

2250:                                             ; preds = %2246
  %2251 = load i64, i64* %57, align 8
  %2252 = icmp ugt i64 %2251, 0
  br i1 %2252, label %2253, label %2271

2253:                                             ; preds = %2250
  %2254 = load %struct.mz_zip_array*, %struct.mz_zip_array** %55, align 8
  %2255 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2254, i32 0, i32 0
  %2256 = load i8*, i8** %2255, align 8
  %2257 = load i64, i64* %58, align 8
  %2258 = load %struct.mz_zip_array*, %struct.mz_zip_array** %55, align 8
  %2259 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2258, i32 0, i32 3
  %2260 = load i32, i32* %2259, align 8
  %2261 = zext i32 %2260 to i64
  %2262 = mul i64 %2257, %2261
  %2263 = getelementptr inbounds i8, i8* %2256, i64 %2262
  %2264 = load i8*, i8** %56, align 8
  %2265 = load i64, i64* %57, align 8
  %2266 = load %struct.mz_zip_array*, %struct.mz_zip_array** %55, align 8
  %2267 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2266, i32 0, i32 3
  %2268 = load i32, i32* %2267, align 8
  %2269 = zext i32 %2268 to i64
  %2270 = mul i64 %2265, %2269
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2263, i8* align 1 %2264, i64 %2270, i1 false) #7
  br label %2271

2271:                                             ; preds = %2253, %2250
  store i32 1, i32* %53, align 4
  br label %2272

2272:                                             ; preds = %2249, %2271
  %2273 = load i32, i32* %53, align 4
  %2274 = icmp ne i32 %2273, 0
  br i1 %2274, label %2284, label %2275

2275:                                             ; preds = %2272
  %2276 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2276, %struct.mz_zip_archive** %227, align 8
  store i32 16, i32* %228, align 4
  %2277 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %227, align 8
  %2278 = icmp ne %struct.mz_zip_archive* %2277, null
  br i1 %2278, label %2279, label %2283

2279:                                             ; preds = %2275
  %2280 = load i32, i32* %228, align 4
  %2281 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %227, align 8
  %2282 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2281, i32 0, i32 5
  store i32 %2280, i32* %2282, align 4
  br label %2283

2283:                                             ; preds = %2275, %2279
  store i32 0, i32* %235, align 4
  br label %2523

2284:                                             ; preds = %2272
  %2285 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2286 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2287 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2286, i32 0, i32 0
  %2288 = load i8*, i8** %253, align 8
  %2289 = getelementptr inbounds i8, i8* %2288, i64 46
  %2290 = load i32, i32* %242, align 4
  %2291 = zext i32 %2290 to i64
  store %struct.mz_zip_archive* %2285, %struct.mz_zip_archive** %65, align 8
  store %struct.mz_zip_array* %2287, %struct.mz_zip_array** %66, align 8
  store i8* %2289, i8** %67, align 8
  store i64 %2291, i64* %68, align 8
  %2292 = load %struct.mz_zip_array*, %struct.mz_zip_array** %66, align 8
  %2293 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2292, i32 0, i32 1
  %2294 = load i64, i64* %2293, align 8
  store i64 %2294, i64* %69, align 8
  %2295 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %65, align 8
  %2296 = load %struct.mz_zip_array*, %struct.mz_zip_array** %66, align 8
  %2297 = load i64, i64* %69, align 8
  %2298 = load i64, i64* %68, align 8
  %2299 = add i64 %2297, %2298
  store %struct.mz_zip_archive* %2295, %struct.mz_zip_archive** %60, align 8
  store %struct.mz_zip_array* %2296, %struct.mz_zip_array** %61, align 8
  store i64 %2299, i64* %62, align 8
  store i32 1, i32* %63, align 4
  %2300 = load i64, i64* %62, align 8
  %2301 = load %struct.mz_zip_array*, %struct.mz_zip_array** %61, align 8
  %2302 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2301, i32 0, i32 2
  %2303 = load i64, i64* %2302, align 8
  %2304 = icmp ugt i64 %2300, %2303
  br i1 %2304, label %2305, label %2314

2305:                                             ; preds = %2284
  %2306 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %2307 = load %struct.mz_zip_array*, %struct.mz_zip_array** %61, align 8
  %2308 = load i64, i64* %62, align 8
  %2309 = load i32, i32* %63, align 4
  %2310 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2306, %struct.mz_zip_array* noundef %2307, i64 noundef %2308, i32 noundef %2309) #7
  %2311 = icmp ne i32 %2310, 0
  br i1 %2311, label %2313, label %2312

2312:                                             ; preds = %2305
  store i32 0, i32* %59, align 4
  br label %2318

2313:                                             ; preds = %2305
  br label %2314

2314:                                             ; preds = %2313, %2284
  %2315 = load i64, i64* %62, align 8
  %2316 = load %struct.mz_zip_array*, %struct.mz_zip_array** %61, align 8
  %2317 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2316, i32 0, i32 1
  store i64 %2315, i64* %2317, align 8
  store i32 1, i32* %59, align 4
  br label %2318

2318:                                             ; preds = %2314, %2312
  %2319 = load i32, i32* %59, align 4
  %2320 = icmp ne i32 %2319, 0
  br i1 %2320, label %2322, label %2321

2321:                                             ; preds = %2318
  store i32 0, i32* %64, align 4
  br label %2344

2322:                                             ; preds = %2318
  %2323 = load i64, i64* %68, align 8
  %2324 = icmp ugt i64 %2323, 0
  br i1 %2324, label %2325, label %2343

2325:                                             ; preds = %2322
  %2326 = load %struct.mz_zip_array*, %struct.mz_zip_array** %66, align 8
  %2327 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2326, i32 0, i32 0
  %2328 = load i8*, i8** %2327, align 8
  %2329 = load i64, i64* %69, align 8
  %2330 = load %struct.mz_zip_array*, %struct.mz_zip_array** %66, align 8
  %2331 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2330, i32 0, i32 3
  %2332 = load i32, i32* %2331, align 8
  %2333 = zext i32 %2332 to i64
  %2334 = mul i64 %2329, %2333
  %2335 = getelementptr inbounds i8, i8* %2328, i64 %2334
  %2336 = load i8*, i8** %67, align 8
  %2337 = load i64, i64* %68, align 8
  %2338 = load %struct.mz_zip_array*, %struct.mz_zip_array** %66, align 8
  %2339 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2338, i32 0, i32 3
  %2340 = load i32, i32* %2339, align 8
  %2341 = zext i32 %2340 to i64
  %2342 = mul i64 %2337, %2341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2335, i8* align 1 %2336, i64 %2342, i1 false) #7
  br label %2343

2343:                                             ; preds = %2325, %2322
  store i32 1, i32* %64, align 4
  br label %2344

2344:                                             ; preds = %2321, %2343
  %2345 = load i32, i32* %64, align 4
  %2346 = icmp ne i32 %2345, 0
  br i1 %2346, label %2380, label %2347

2347:                                             ; preds = %2344
  %2348 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2349 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2350 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2349, i32 0, i32 0
  %2351 = load i64, i64* %250, align 8
  store %struct.mz_zip_archive* %2348, %struct.mz_zip_archive** %150, align 8
  store %struct.mz_zip_array* %2350, %struct.mz_zip_array** %151, align 8
  store i64 %2351, i64* %152, align 8
  store i32 0, i32* %153, align 4
  %2352 = load i64, i64* %152, align 8
  %2353 = load %struct.mz_zip_array*, %struct.mz_zip_array** %151, align 8
  %2354 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2353, i32 0, i32 2
  %2355 = load i64, i64* %2354, align 8
  %2356 = icmp ugt i64 %2352, %2355
  br i1 %2356, label %2357, label %2366

2357:                                             ; preds = %2347
  %2358 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %150, align 8
  %2359 = load %struct.mz_zip_array*, %struct.mz_zip_array** %151, align 8
  %2360 = load i64, i64* %152, align 8
  %2361 = load i32, i32* %153, align 4
  %2362 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2358, %struct.mz_zip_array* noundef %2359, i64 noundef %2360, i32 noundef %2361) #7
  %2363 = icmp ne i32 %2362, 0
  br i1 %2363, label %2365, label %2364

2364:                                             ; preds = %2357
  store i32 0, i32* %149, align 4
  br label %2370

2365:                                             ; preds = %2357
  br label %2366

2366:                                             ; preds = %2365, %2347
  %2367 = load i64, i64* %152, align 8
  %2368 = load %struct.mz_zip_array*, %struct.mz_zip_array** %151, align 8
  %2369 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2368, i32 0, i32 1
  store i64 %2367, i64* %2369, align 8
  store i32 1, i32* %149, align 4
  br label %2370

2370:                                             ; preds = %2364, %2366
  %2371 = load i32, i32* %149, align 4
  %2372 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2372, %struct.mz_zip_archive** %229, align 8
  store i32 16, i32* %230, align 4
  %2373 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %229, align 8
  %2374 = icmp ne %struct.mz_zip_archive* %2373, null
  br i1 %2374, label %2375, label %2379

2375:                                             ; preds = %2370
  %2376 = load i32, i32* %230, align 4
  %2377 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %229, align 8
  %2378 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2377, i32 0, i32 5
  store i32 %2376, i32* %2378, align 4
  br label %2379

2379:                                             ; preds = %2370, %2375
  store i32 0, i32* %235, align 4
  br label %2523

2380:                                             ; preds = %2344
  br label %2381

2381:                                             ; preds = %2380, %2156
  %2382 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2383 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2382, i32 0, i32 0
  %2384 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2383, i32 0, i32 1
  %2385 = load i64, i64* %2384, align 8
  %2386 = icmp uge i64 %2385, 4294967295
  br i1 %2386, label %2387, label %2420

2387:                                             ; preds = %2381
  %2388 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2389 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2390 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2389, i32 0, i32 0
  %2391 = load i64, i64* %250, align 8
  store %struct.mz_zip_archive* %2388, %struct.mz_zip_archive** %155, align 8
  store %struct.mz_zip_array* %2390, %struct.mz_zip_array** %156, align 8
  store i64 %2391, i64* %157, align 8
  store i32 0, i32* %158, align 4
  %2392 = load i64, i64* %157, align 8
  %2393 = load %struct.mz_zip_array*, %struct.mz_zip_array** %156, align 8
  %2394 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2393, i32 0, i32 2
  %2395 = load i64, i64* %2394, align 8
  %2396 = icmp ugt i64 %2392, %2395
  br i1 %2396, label %2397, label %2406

2397:                                             ; preds = %2387
  %2398 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %155, align 8
  %2399 = load %struct.mz_zip_array*, %struct.mz_zip_array** %156, align 8
  %2400 = load i64, i64* %157, align 8
  %2401 = load i32, i32* %158, align 4
  %2402 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2398, %struct.mz_zip_array* noundef %2399, i64 noundef %2400, i32 noundef %2401) #7
  %2403 = icmp ne i32 %2402, 0
  br i1 %2403, label %2405, label %2404

2404:                                             ; preds = %2397
  store i32 0, i32* %154, align 4
  br label %2410

2405:                                             ; preds = %2397
  br label %2406

2406:                                             ; preds = %2405, %2387
  %2407 = load i64, i64* %157, align 8
  %2408 = load %struct.mz_zip_array*, %struct.mz_zip_array** %156, align 8
  %2409 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2408, i32 0, i32 1
  store i64 %2407, i64* %2409, align 8
  store i32 1, i32* %154, align 4
  br label %2410

2410:                                             ; preds = %2404, %2406
  %2411 = load i32, i32* %154, align 4
  %2412 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2412, %struct.mz_zip_archive** %231, align 8
  store i32 15, i32* %232, align 4
  %2413 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %231, align 8
  %2414 = icmp ne %struct.mz_zip_archive* %2413, null
  br i1 %2414, label %2415, label %2419

2415:                                             ; preds = %2410
  %2416 = load i32, i32* %232, align 4
  %2417 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %231, align 8
  %2418 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2417, i32 0, i32 5
  store i32 %2416, i32* %2418, align 4
  br label %2419

2419:                                             ; preds = %2410, %2415
  store i32 0, i32* %235, align 4
  br label %2523

2420:                                             ; preds = %2381
  %2421 = load i64, i64* %250, align 8
  %2422 = trunc i64 %2421 to i32
  store i32 %2422, i32* %239, align 4
  %2423 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2424 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2425 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2424, i32 0, i32 1
  %2426 = bitcast i32* %239 to i8*
  store %struct.mz_zip_archive* %2423, %struct.mz_zip_archive** %76, align 8
  store %struct.mz_zip_array* %2425, %struct.mz_zip_array** %77, align 8
  store i8* %2426, i8** %78, align 8
  store i64 1, i64* %79, align 8
  %2427 = load %struct.mz_zip_array*, %struct.mz_zip_array** %77, align 8
  %2428 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2427, i32 0, i32 1
  %2429 = load i64, i64* %2428, align 8
  store i64 %2429, i64* %80, align 8
  %2430 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %76, align 8
  %2431 = load %struct.mz_zip_array*, %struct.mz_zip_array** %77, align 8
  %2432 = load i64, i64* %80, align 8
  %2433 = load i64, i64* %79, align 8
  %2434 = add i64 %2432, %2433
  store %struct.mz_zip_archive* %2430, %struct.mz_zip_archive** %71, align 8
  store %struct.mz_zip_array* %2431, %struct.mz_zip_array** %72, align 8
  store i64 %2434, i64* %73, align 8
  store i32 1, i32* %74, align 4
  %2435 = load i64, i64* %73, align 8
  %2436 = load %struct.mz_zip_array*, %struct.mz_zip_array** %72, align 8
  %2437 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2436, i32 0, i32 2
  %2438 = load i64, i64* %2437, align 8
  %2439 = icmp ugt i64 %2435, %2438
  br i1 %2439, label %2440, label %2449

2440:                                             ; preds = %2420
  %2441 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %71, align 8
  %2442 = load %struct.mz_zip_array*, %struct.mz_zip_array** %72, align 8
  %2443 = load i64, i64* %73, align 8
  %2444 = load i32, i32* %74, align 4
  %2445 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2441, %struct.mz_zip_array* noundef %2442, i64 noundef %2443, i32 noundef %2444) #7
  %2446 = icmp ne i32 %2445, 0
  br i1 %2446, label %2448, label %2447

2447:                                             ; preds = %2440
  store i32 0, i32* %70, align 4
  br label %2453

2448:                                             ; preds = %2440
  br label %2449

2449:                                             ; preds = %2448, %2420
  %2450 = load i64, i64* %73, align 8
  %2451 = load %struct.mz_zip_array*, %struct.mz_zip_array** %72, align 8
  %2452 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2451, i32 0, i32 1
  store i64 %2450, i64* %2452, align 8
  store i32 1, i32* %70, align 4
  br label %2453

2453:                                             ; preds = %2449, %2447
  %2454 = load i32, i32* %70, align 4
  %2455 = icmp ne i32 %2454, 0
  br i1 %2455, label %2457, label %2456

2456:                                             ; preds = %2453
  store i32 0, i32* %75, align 4
  br label %2479

2457:                                             ; preds = %2453
  %2458 = load i64, i64* %79, align 8
  %2459 = icmp ugt i64 %2458, 0
  br i1 %2459, label %2460, label %2478

2460:                                             ; preds = %2457
  %2461 = load %struct.mz_zip_array*, %struct.mz_zip_array** %77, align 8
  %2462 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2461, i32 0, i32 0
  %2463 = load i8*, i8** %2462, align 8
  %2464 = load i64, i64* %80, align 8
  %2465 = load %struct.mz_zip_array*, %struct.mz_zip_array** %77, align 8
  %2466 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2465, i32 0, i32 3
  %2467 = load i32, i32* %2466, align 8
  %2468 = zext i32 %2467 to i64
  %2469 = mul i64 %2464, %2468
  %2470 = getelementptr inbounds i8, i8* %2463, i64 %2469
  %2471 = load i8*, i8** %78, align 8
  %2472 = load i64, i64* %79, align 8
  %2473 = load %struct.mz_zip_array*, %struct.mz_zip_array** %77, align 8
  %2474 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2473, i32 0, i32 3
  %2475 = load i32, i32* %2474, align 8
  %2476 = zext i32 %2475 to i64
  %2477 = mul i64 %2472, %2476
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2470, i8* align 1 %2471, i64 %2477, i1 false) #7
  br label %2478

2478:                                             ; preds = %2460, %2457
  store i32 1, i32* %75, align 4
  br label %2479

2479:                                             ; preds = %2456, %2478
  %2480 = load i32, i32* %75, align 4
  %2481 = icmp ne i32 %2480, 0
  br i1 %2481, label %2515, label %2482

2482:                                             ; preds = %2479
  %2483 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2484 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %251, align 8
  %2485 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %2484, i32 0, i32 0
  %2486 = load i64, i64* %250, align 8
  store %struct.mz_zip_archive* %2483, %struct.mz_zip_archive** %160, align 8
  store %struct.mz_zip_array* %2485, %struct.mz_zip_array** %161, align 8
  store i64 %2486, i64* %162, align 8
  store i32 0, i32* %163, align 4
  %2487 = load i64, i64* %162, align 8
  %2488 = load %struct.mz_zip_array*, %struct.mz_zip_array** %161, align 8
  %2489 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2488, i32 0, i32 2
  %2490 = load i64, i64* %2489, align 8
  %2491 = icmp ugt i64 %2487, %2490
  br i1 %2491, label %2492, label %2501

2492:                                             ; preds = %2482
  %2493 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %160, align 8
  %2494 = load %struct.mz_zip_array*, %struct.mz_zip_array** %161, align 8
  %2495 = load i64, i64* %162, align 8
  %2496 = load i32, i32* %163, align 4
  %2497 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %2493, %struct.mz_zip_array* noundef %2494, i64 noundef %2495, i32 noundef %2496) #7
  %2498 = icmp ne i32 %2497, 0
  br i1 %2498, label %2500, label %2499

2499:                                             ; preds = %2492
  store i32 0, i32* %159, align 4
  br label %2505

2500:                                             ; preds = %2492
  br label %2501

2501:                                             ; preds = %2500, %2482
  %2502 = load i64, i64* %162, align 8
  %2503 = load %struct.mz_zip_array*, %struct.mz_zip_array** %161, align 8
  %2504 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %2503, i32 0, i32 1
  store i64 %2502, i64* %2504, align 8
  store i32 1, i32* %159, align 4
  br label %2505

2505:                                             ; preds = %2499, %2501
  %2506 = load i32, i32* %159, align 4
  %2507 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  store %struct.mz_zip_archive* %2507, %struct.mz_zip_archive** %233, align 8
  store i32 16, i32* %234, align 4
  %2508 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %233, align 8
  %2509 = icmp ne %struct.mz_zip_archive* %2508, null
  br i1 %2509, label %2510, label %2514

2510:                                             ; preds = %2505
  %2511 = load i32, i32* %234, align 4
  %2512 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %233, align 8
  %2513 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2512, i32 0, i32 5
  store i32 %2511, i32* %2513, align 4
  br label %2514

2514:                                             ; preds = %2505, %2510
  store i32 0, i32* %235, align 4
  br label %2523

2515:                                             ; preds = %2479
  %2516 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2517 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2516, i32 0, i32 2
  %2518 = load i32, i32* %2517, align 8
  %2519 = add i32 %2518, 1
  store i32 %2519, i32* %2517, align 8
  %2520 = load i64, i64* %246, align 8
  %2521 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %236, align 8
  %2522 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %2521, i32 0, i32 0
  store i64 %2520, i64* %2522, align 8
  store i32 1, i32* %235, align 4
  br label %2523

2523:                                             ; preds = %2515, %2514, %2419, %2379, %2283, %2192, %2180, %2155, %2041, %1933, %1825, %1718, %1612, %1324, %1268, %1206, %1171, %1128, %1089, %1048, %1040, %867, %837, %786, %758, %716, %580, %547, %522, %514, %499, %478, %417, %380, %331, %305
  %2524 = load i32, i32* %235, align 4
  ret i32 %2524
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_update_zip64_extension_block(%struct.mz_zip_array* noundef %0, %struct.mz_zip_archive* noundef %1, i8* noundef %2, i32 noundef %3, i64* noundef %4, i64* noundef %5, i64* noundef %6, i32* noundef %7) #0 {
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive*, align 8
  %11 = alloca %struct.mz_zip_array*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.mz_zip_archive*, align 8
  %16 = alloca %struct.mz_zip_array*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive*, align 8
  %21 = alloca %struct.mz_zip_array*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct.mz_zip_archive*, align 8
  %27 = alloca %struct.mz_zip_array*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %struct.mz_zip_archive*, align 8
  %32 = alloca %struct.mz_zip_array*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i16, align 2
  %38 = alloca i8*, align 8
  %39 = alloca i16, align 2
  %40 = alloca i8*, align 8
  %41 = alloca i16, align 2
  %42 = alloca i8*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i8*, align 8
  %45 = alloca i32, align 4
  %46 = alloca i8*, align 8
  %47 = alloca i64, align 8
  %48 = alloca i8*, align 8
  %49 = alloca i32, align 4
  %50 = alloca i8*, align 8
  %51 = alloca i32, align 4
  %52 = alloca i8*, align 8
  %53 = alloca i64, align 8
  %54 = alloca i8*, align 8
  %55 = alloca i32, align 4
  %56 = alloca i8*, align 8
  %57 = alloca i32, align 4
  %58 = alloca i8*, align 8
  %59 = alloca i64, align 8
  %60 = alloca i8*, align 8
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca %struct.mz_zip_archive*, align 8
  %64 = alloca %struct.mz_zip_array*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i32, align 4
  %67 = alloca %struct.mz_zip_archive*, align 8
  %68 = alloca i32, align 4
  %69 = alloca %struct.mz_zip_archive*, align 8
  %70 = alloca i32, align 4
  %71 = alloca %struct.mz_zip_archive*, align 8
  %72 = alloca i32, align 4
  %73 = alloca %struct.mz_zip_archive*, align 8
  %74 = alloca i32, align 4
  %75 = alloca %struct.mz_zip_archive*, align 8
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca %struct.mz_zip_array*, align 8
  %79 = alloca %struct.mz_zip_archive*, align 8
  %80 = alloca i8*, align 8
  %81 = alloca i32, align 4
  %82 = alloca i64*, align 8
  %83 = alloca i64*, align 8
  %84 = alloca i64*, align 8
  %85 = alloca i32*, align 8
  %86 = alloca [64 x i8], align 16
  %87 = alloca i8*, align 8
  %88 = alloca i32, align 4
  %89 = alloca i8*, align 8
  %90 = alloca i32, align 4
  %91 = alloca i32, align 4
  %92 = alloca i32, align 4
  store %struct.mz_zip_array* %0, %struct.mz_zip_array** %78, align 8
  store %struct.mz_zip_archive* %1, %struct.mz_zip_archive** %79, align 8
  store i8* %2, i8** %80, align 8
  store i32 %3, i32* %81, align 4
  store i64* %4, i64** %82, align 8
  store i64* %5, i64** %83, align 8
  store i64* %6, i64** %84, align 8
  store i32* %7, i32** %85, align 8
  %93 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  %94 = load %struct.mz_zip_array*, %struct.mz_zip_array** %78, align 8
  %95 = load i32, i32* %81, align 4
  %96 = add i32 %95, 64
  %97 = zext i32 %96 to i64
  store %struct.mz_zip_archive* %93, %struct.mz_zip_archive** %10, align 8
  store %struct.mz_zip_array* %94, %struct.mz_zip_array** %11, align 8
  store i64 %97, i64* %12, align 8
  store i32 0, i32* %13, align 4
  %98 = load i64, i64* %12, align 8
  %99 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %100 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %99, i32 0, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = icmp ugt i64 %98, %101
  br i1 %102, label %103, label %112

103:                                              ; preds = %8
  %104 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %10, align 8
  %105 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %106 = load i64, i64* %12, align 8
  %107 = load i32, i32* %13, align 4
  %108 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %104, %struct.mz_zip_array* noundef %105, i64 noundef %106, i32 noundef %107) #7
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %103
  store i32 0, i32* %9, align 4
  br label %113

111:                                              ; preds = %103
  br label %112

112:                                              ; preds = %111, %8
  store i32 1, i32* %9, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = load i32, i32* %9, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %125, label %116

116:                                              ; preds = %113
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  store %struct.mz_zip_archive* %117, %struct.mz_zip_archive** %67, align 8
  store i32 16, i32* %68, align 4
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %67, align 8
  %119 = icmp ne %struct.mz_zip_archive* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, i32* %68, align 4
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %67, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %122, i32 0, i32 5
  store i32 %121, i32* %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 0, i32* %77, align 4
  br label %609

125:                                              ; preds = %113
  %126 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  %127 = load %struct.mz_zip_array*, %struct.mz_zip_array** %78, align 8
  store %struct.mz_zip_archive* %126, %struct.mz_zip_archive** %63, align 8
  store %struct.mz_zip_array* %127, %struct.mz_zip_array** %64, align 8
  store i64 0, i64* %65, align 8
  store i32 0, i32* %66, align 4
  %128 = load i64, i64* %65, align 8
  %129 = load %struct.mz_zip_array*, %struct.mz_zip_array** %64, align 8
  %130 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %129, i32 0, i32 2
  %131 = load i64, i64* %130, align 8
  %132 = icmp ugt i64 %128, %131
  br i1 %132, label %133, label %142

133:                                              ; preds = %125
  %134 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %63, align 8
  %135 = load %struct.mz_zip_array*, %struct.mz_zip_array** %64, align 8
  %136 = load i64, i64* %65, align 8
  %137 = load i32, i32* %66, align 4
  %138 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %134, %struct.mz_zip_array* noundef %135, i64 noundef %136, i32 noundef %137) #7
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %133
  store i32 0, i32* %62, align 4
  br label %146

141:                                              ; preds = %133
  br label %142

142:                                              ; preds = %141, %125
  %143 = load i64, i64* %65, align 8
  %144 = load %struct.mz_zip_array*, %struct.mz_zip_array** %64, align 8
  %145 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %144, i32 0, i32 1
  store i64 %143, i64* %145, align 8
  store i32 1, i32* %62, align 4
  br label %146

146:                                              ; preds = %140, %142
  %147 = load i32, i32* %62, align 4
  %148 = load i64*, i64** %83, align 8
  %149 = icmp ne i64* %148, null
  br i1 %149, label %159, label %150

150:                                              ; preds = %146
  %151 = load i64*, i64** %82, align 8
  %152 = icmp ne i64* %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = load i64*, i64** %84, align 8
  %155 = icmp ne i64* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = load i32*, i32** %85, align 8
  %158 = icmp ne i32* %157, null
  br i1 %158, label %159, label %461

159:                                              ; preds = %156, %153, %150, %146
  %160 = getelementptr inbounds [64 x i8], [64 x i8]* %86, i64 0, i64 0
  store i8* %160, i8** %87, align 8
  %161 = load i8*, i8** %87, align 8
  store i8* %161, i8** %36, align 8
  store i16 1, i16* %37, align 2
  %162 = load i16, i16* %37, align 2
  %163 = trunc i16 %162 to i8
  %164 = load i8*, i8** %36, align 8
  store i8 %163, i8* %164, align 1
  %165 = load i16, i16* %37, align 2
  %166 = zext i16 %165 to i32
  %167 = ashr i32 %166, 8
  %168 = trunc i32 %167 to i8
  %169 = load i8*, i8** %36, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 1
  store i8 %168, i8* %170, align 1
  %171 = load i8*, i8** %87, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 2
  store i8* %172, i8** %38, align 8
  store i16 0, i16* %39, align 2
  %173 = load i16, i16* %39, align 2
  %174 = trunc i16 %173 to i8
  %175 = load i8*, i8** %38, align 8
  store i8 %174, i8* %175, align 1
  %176 = load i16, i16* %39, align 2
  %177 = zext i16 %176 to i32
  %178 = ashr i32 %177, 8
  %179 = trunc i32 %178 to i8
  %180 = load i8*, i8** %38, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 1
  store i8 %179, i8* %181, align 1
  %182 = load i8*, i8** %87, align 8
  %183 = getelementptr inbounds i8, i8* %182, i64 4
  store i8* %183, i8** %87, align 8
  %184 = load i64*, i64** %83, align 8
  %185 = icmp ne i64* %184, null
  br i1 %185, label %186, label %236

186:                                              ; preds = %159
  %187 = load i8*, i8** %87, align 8
  %188 = load i64*, i64** %83, align 8
  %189 = load i64, i64* %188, align 8
  store i8* %187, i8** %46, align 8
  store i64 %189, i64* %47, align 8
  %190 = load i8*, i8** %46, align 8
  %191 = load i64, i64* %47, align 8
  %192 = trunc i64 %191 to i32
  store i8* %190, i8** %42, align 8
  store i32 %192, i32* %43, align 4
  %193 = load i32, i32* %43, align 4
  %194 = trunc i32 %193 to i8
  %195 = load i8*, i8** %42, align 8
  store i8 %194, i8* %195, align 1
  %196 = load i32, i32* %43, align 4
  %197 = lshr i32 %196, 8
  %198 = trunc i32 %197 to i8
  %199 = load i8*, i8** %42, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 1
  store i8 %198, i8* %200, align 1
  %201 = load i32, i32* %43, align 4
  %202 = lshr i32 %201, 16
  %203 = trunc i32 %202 to i8
  %204 = load i8*, i8** %42, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 2
  store i8 %203, i8* %205, align 1
  %206 = load i32, i32* %43, align 4
  %207 = lshr i32 %206, 24
  %208 = trunc i32 %207 to i8
  %209 = load i8*, i8** %42, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 3
  store i8 %208, i8* %210, align 1
  %211 = load i8*, i8** %46, align 8
  %212 = getelementptr inbounds i8, i8* %211, i64 4
  %213 = load i64, i64* %47, align 8
  %214 = lshr i64 %213, 32
  %215 = trunc i64 %214 to i32
  store i8* %212, i8** %44, align 8
  store i32 %215, i32* %45, align 4
  %216 = load i32, i32* %45, align 4
  %217 = trunc i32 %216 to i8
  %218 = load i8*, i8** %44, align 8
  store i8 %217, i8* %218, align 1
  %219 = load i32, i32* %45, align 4
  %220 = lshr i32 %219, 8
  %221 = trunc i32 %220 to i8
  %222 = load i8*, i8** %44, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 1
  store i8 %221, i8* %223, align 1
  %224 = load i32, i32* %45, align 4
  %225 = lshr i32 %224, 16
  %226 = trunc i32 %225 to i8
  %227 = load i8*, i8** %44, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 2
  store i8 %226, i8* %228, align 1
  %229 = load i32, i32* %45, align 4
  %230 = lshr i32 %229, 24
  %231 = trunc i32 %230 to i8
  %232 = load i8*, i8** %44, align 8
  %233 = getelementptr inbounds i8, i8* %232, i64 3
  store i8 %231, i8* %233, align 1
  %234 = load i8*, i8** %87, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 8
  store i8* %235, i8** %87, align 8
  br label %236

236:                                              ; preds = %186, %159
  %237 = load i64*, i64** %82, align 8
  %238 = icmp ne i64* %237, null
  br i1 %238, label %239, label %289

239:                                              ; preds = %236
  %240 = load i8*, i8** %87, align 8
  %241 = load i64*, i64** %82, align 8
  %242 = load i64, i64* %241, align 8
  store i8* %240, i8** %52, align 8
  store i64 %242, i64* %53, align 8
  %243 = load i8*, i8** %52, align 8
  %244 = load i64, i64* %53, align 8
  %245 = trunc i64 %244 to i32
  store i8* %243, i8** %48, align 8
  store i32 %245, i32* %49, align 4
  %246 = load i32, i32* %49, align 4
  %247 = trunc i32 %246 to i8
  %248 = load i8*, i8** %48, align 8
  store i8 %247, i8* %248, align 1
  %249 = load i32, i32* %49, align 4
  %250 = lshr i32 %249, 8
  %251 = trunc i32 %250 to i8
  %252 = load i8*, i8** %48, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 1
  store i8 %251, i8* %253, align 1
  %254 = load i32, i32* %49, align 4
  %255 = lshr i32 %254, 16
  %256 = trunc i32 %255 to i8
  %257 = load i8*, i8** %48, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 2
  store i8 %256, i8* %258, align 1
  %259 = load i32, i32* %49, align 4
  %260 = lshr i32 %259, 24
  %261 = trunc i32 %260 to i8
  %262 = load i8*, i8** %48, align 8
  %263 = getelementptr inbounds i8, i8* %262, i64 3
  store i8 %261, i8* %263, align 1
  %264 = load i8*, i8** %52, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 4
  %266 = load i64, i64* %53, align 8
  %267 = lshr i64 %266, 32
  %268 = trunc i64 %267 to i32
  store i8* %265, i8** %50, align 8
  store i32 %268, i32* %51, align 4
  %269 = load i32, i32* %51, align 4
  %270 = trunc i32 %269 to i8
  %271 = load i8*, i8** %50, align 8
  store i8 %270, i8* %271, align 1
  %272 = load i32, i32* %51, align 4
  %273 = lshr i32 %272, 8
  %274 = trunc i32 %273 to i8
  %275 = load i8*, i8** %50, align 8
  %276 = getelementptr inbounds i8, i8* %275, i64 1
  store i8 %274, i8* %276, align 1
  %277 = load i32, i32* %51, align 4
  %278 = lshr i32 %277, 16
  %279 = trunc i32 %278 to i8
  %280 = load i8*, i8** %50, align 8
  %281 = getelementptr inbounds i8, i8* %280, i64 2
  store i8 %279, i8* %281, align 1
  %282 = load i32, i32* %51, align 4
  %283 = lshr i32 %282, 24
  %284 = trunc i32 %283 to i8
  %285 = load i8*, i8** %50, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 3
  store i8 %284, i8* %286, align 1
  %287 = load i8*, i8** %87, align 8
  %288 = getelementptr inbounds i8, i8* %287, i64 8
  store i8* %288, i8** %87, align 8
  br label %289

289:                                              ; preds = %239, %236
  %290 = load i64*, i64** %84, align 8
  %291 = icmp ne i64* %290, null
  br i1 %291, label %292, label %342

292:                                              ; preds = %289
  %293 = load i8*, i8** %87, align 8
  %294 = load i64*, i64** %84, align 8
  %295 = load i64, i64* %294, align 8
  store i8* %293, i8** %58, align 8
  store i64 %295, i64* %59, align 8
  %296 = load i8*, i8** %58, align 8
  %297 = load i64, i64* %59, align 8
  %298 = trunc i64 %297 to i32
  store i8* %296, i8** %54, align 8
  store i32 %298, i32* %55, align 4
  %299 = load i32, i32* %55, align 4
  %300 = trunc i32 %299 to i8
  %301 = load i8*, i8** %54, align 8
  store i8 %300, i8* %301, align 1
  %302 = load i32, i32* %55, align 4
  %303 = lshr i32 %302, 8
  %304 = trunc i32 %303 to i8
  %305 = load i8*, i8** %54, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  store i8 %304, i8* %306, align 1
  %307 = load i32, i32* %55, align 4
  %308 = lshr i32 %307, 16
  %309 = trunc i32 %308 to i8
  %310 = load i8*, i8** %54, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 2
  store i8 %309, i8* %311, align 1
  %312 = load i32, i32* %55, align 4
  %313 = lshr i32 %312, 24
  %314 = trunc i32 %313 to i8
  %315 = load i8*, i8** %54, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 3
  store i8 %314, i8* %316, align 1
  %317 = load i8*, i8** %58, align 8
  %318 = getelementptr inbounds i8, i8* %317, i64 4
  %319 = load i64, i64* %59, align 8
  %320 = lshr i64 %319, 32
  %321 = trunc i64 %320 to i32
  store i8* %318, i8** %56, align 8
  store i32 %321, i32* %57, align 4
  %322 = load i32, i32* %57, align 4
  %323 = trunc i32 %322 to i8
  %324 = load i8*, i8** %56, align 8
  store i8 %323, i8* %324, align 1
  %325 = load i32, i32* %57, align 4
  %326 = lshr i32 %325, 8
  %327 = trunc i32 %326 to i8
  %328 = load i8*, i8** %56, align 8
  %329 = getelementptr inbounds i8, i8* %328, i64 1
  store i8 %327, i8* %329, align 1
  %330 = load i32, i32* %57, align 4
  %331 = lshr i32 %330, 16
  %332 = trunc i32 %331 to i8
  %333 = load i8*, i8** %56, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 2
  store i8 %332, i8* %334, align 1
  %335 = load i32, i32* %57, align 4
  %336 = lshr i32 %335, 24
  %337 = trunc i32 %336 to i8
  %338 = load i8*, i8** %56, align 8
  %339 = getelementptr inbounds i8, i8* %338, i64 3
  store i8 %337, i8* %339, align 1
  %340 = load i8*, i8** %87, align 8
  %341 = getelementptr inbounds i8, i8* %340, i64 8
  store i8* %341, i8** %87, align 8
  br label %342

342:                                              ; preds = %292, %289
  %343 = load i32*, i32** %85, align 8
  %344 = icmp ne i32* %343, null
  br i1 %344, label %345, label %369

345:                                              ; preds = %342
  %346 = load i8*, i8** %87, align 8
  %347 = load i32*, i32** %85, align 8
  %348 = load i32, i32* %347, align 4
  store i8* %346, i8** %60, align 8
  store i32 %348, i32* %61, align 4
  %349 = load i32, i32* %61, align 4
  %350 = trunc i32 %349 to i8
  %351 = load i8*, i8** %60, align 8
  store i8 %350, i8* %351, align 1
  %352 = load i32, i32* %61, align 4
  %353 = lshr i32 %352, 8
  %354 = trunc i32 %353 to i8
  %355 = load i8*, i8** %60, align 8
  %356 = getelementptr inbounds i8, i8* %355, i64 1
  store i8 %354, i8* %356, align 1
  %357 = load i32, i32* %61, align 4
  %358 = lshr i32 %357, 16
  %359 = trunc i32 %358 to i8
  %360 = load i8*, i8** %60, align 8
  %361 = getelementptr inbounds i8, i8* %360, i64 2
  store i8 %359, i8* %361, align 1
  %362 = load i32, i32* %61, align 4
  %363 = lshr i32 %362, 24
  %364 = trunc i32 %363 to i8
  %365 = load i8*, i8** %60, align 8
  %366 = getelementptr inbounds i8, i8* %365, i64 3
  store i8 %364, i8* %366, align 1
  %367 = load i8*, i8** %87, align 8
  %368 = getelementptr inbounds i8, i8* %367, i64 4
  store i8* %368, i8** %87, align 8
  br label %369

369:                                              ; preds = %345, %342
  %370 = getelementptr inbounds [64 x i8], [64 x i8]* %86, i64 0, i64 0
  %371 = getelementptr inbounds i8, i8* %370, i64 2
  %372 = load i8*, i8** %87, align 8
  %373 = getelementptr inbounds [64 x i8], [64 x i8]* %86, i64 0, i64 0
  %374 = ptrtoint i8* %372 to i64
  %375 = ptrtoint i8* %373 to i64
  %376 = sub i64 %374, %375
  %377 = sub i64 %376, 4
  %378 = trunc i64 %377 to i16
  store i8* %371, i8** %40, align 8
  store i16 %378, i16* %41, align 2
  %379 = load i16, i16* %41, align 2
  %380 = trunc i16 %379 to i8
  %381 = load i8*, i8** %40, align 8
  store i8 %380, i8* %381, align 1
  %382 = load i16, i16* %41, align 2
  %383 = zext i16 %382 to i32
  %384 = ashr i32 %383, 8
  %385 = trunc i32 %384 to i8
  %386 = load i8*, i8** %40, align 8
  %387 = getelementptr inbounds i8, i8* %386, i64 1
  store i8 %385, i8* %387, align 1
  %388 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  %389 = load %struct.mz_zip_array*, %struct.mz_zip_array** %78, align 8
  %390 = getelementptr inbounds [64 x i8], [64 x i8]* %86, i64 0, i64 0
  %391 = load i8*, i8** %87, align 8
  %392 = getelementptr inbounds [64 x i8], [64 x i8]* %86, i64 0, i64 0
  %393 = ptrtoint i8* %391 to i64
  %394 = ptrtoint i8* %392 to i64
  %395 = sub i64 %393, %394
  store %struct.mz_zip_archive* %388, %struct.mz_zip_archive** %20, align 8
  store %struct.mz_zip_array* %389, %struct.mz_zip_array** %21, align 8
  store i8* %390, i8** %22, align 8
  store i64 %395, i64* %23, align 8
  %396 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %397 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %396, i32 0, i32 1
  %398 = load i64, i64* %397, align 8
  store i64 %398, i64* %24, align 8
  %399 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %20, align 8
  %400 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %401 = load i64, i64* %24, align 8
  %402 = load i64, i64* %23, align 8
  %403 = add i64 %401, %402
  store %struct.mz_zip_archive* %399, %struct.mz_zip_archive** %15, align 8
  store %struct.mz_zip_array* %400, %struct.mz_zip_array** %16, align 8
  store i64 %403, i64* %17, align 8
  store i32 1, i32* %18, align 4
  %404 = load i64, i64* %17, align 8
  %405 = load %struct.mz_zip_array*, %struct.mz_zip_array** %16, align 8
  %406 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %405, i32 0, i32 2
  %407 = load i64, i64* %406, align 8
  %408 = icmp ugt i64 %404, %407
  br i1 %408, label %409, label %418

409:                                              ; preds = %369
  %410 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %15, align 8
  %411 = load %struct.mz_zip_array*, %struct.mz_zip_array** %16, align 8
  %412 = load i64, i64* %17, align 8
  %413 = load i32, i32* %18, align 4
  %414 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %410, %struct.mz_zip_array* noundef %411, i64 noundef %412, i32 noundef %413) #7
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %417, label %416

416:                                              ; preds = %409
  store i32 0, i32* %14, align 4
  br label %422

417:                                              ; preds = %409
  br label %418

418:                                              ; preds = %417, %369
  %419 = load i64, i64* %17, align 8
  %420 = load %struct.mz_zip_array*, %struct.mz_zip_array** %16, align 8
  %421 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %420, i32 0, i32 1
  store i64 %419, i64* %421, align 8
  store i32 1, i32* %14, align 4
  br label %422

422:                                              ; preds = %418, %416
  %423 = load i32, i32* %14, align 4
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %426, label %425

425:                                              ; preds = %422
  store i32 0, i32* %19, align 4
  br label %448

426:                                              ; preds = %422
  %427 = load i64, i64* %23, align 8
  %428 = icmp ugt i64 %427, 0
  br i1 %428, label %429, label %447

429:                                              ; preds = %426
  %430 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %431 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %430, i32 0, i32 0
  %432 = load i8*, i8** %431, align 8
  %433 = load i64, i64* %24, align 8
  %434 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %435 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %434, i32 0, i32 3
  %436 = load i32, i32* %435, align 8
  %437 = zext i32 %436 to i64
  %438 = mul i64 %433, %437
  %439 = getelementptr inbounds i8, i8* %432, i64 %438
  %440 = load i8*, i8** %22, align 8
  %441 = load i64, i64* %23, align 8
  %442 = load %struct.mz_zip_array*, %struct.mz_zip_array** %21, align 8
  %443 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %442, i32 0, i32 3
  %444 = load i32, i32* %443, align 8
  %445 = zext i32 %444 to i64
  %446 = mul i64 %441, %445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %439, i8* align 1 %440, i64 %446, i1 false) #7
  br label %447

447:                                              ; preds = %429, %426
  store i32 1, i32* %19, align 4
  br label %448

448:                                              ; preds = %425, %447
  %449 = load i32, i32* %19, align 4
  %450 = icmp ne i32 %449, 0
  br i1 %450, label %460, label %451

451:                                              ; preds = %448
  %452 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  store %struct.mz_zip_archive* %452, %struct.mz_zip_archive** %69, align 8
  store i32 16, i32* %70, align 4
  %453 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %69, align 8
  %454 = icmp ne %struct.mz_zip_archive* %453, null
  br i1 %454, label %455, label %459

455:                                              ; preds = %451
  %456 = load i32, i32* %70, align 4
  %457 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %69, align 8
  %458 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %457, i32 0, i32 5
  store i32 %456, i32* %458, align 4
  br label %459

459:                                              ; preds = %451, %455
  store i32 0, i32* %77, align 4
  br label %609

460:                                              ; preds = %448
  br label %461

461:                                              ; preds = %460, %156
  %462 = load i8*, i8** %80, align 8
  %463 = icmp ne i8* %462, null
  br i1 %463, label %464, label %608

464:                                              ; preds = %461
  %465 = load i32, i32* %81, align 4
  %466 = icmp ne i32 %465, 0
  br i1 %466, label %467, label %608

467:                                              ; preds = %464
  %468 = load i32, i32* %81, align 4
  store i32 %468, i32* %88, align 4
  %469 = load i8*, i8** %80, align 8
  store i8* %469, i8** %89, align 8
  br label %470

470:                                              ; preds = %604, %467
  %471 = load i32, i32* %88, align 4
  %472 = zext i32 %471 to i64
  %473 = icmp ult i64 %472, 4
  br i1 %473, label %474, label %483

474:                                              ; preds = %470
  %475 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  store %struct.mz_zip_archive* %475, %struct.mz_zip_archive** %71, align 8
  store i32 9, i32* %72, align 4
  %476 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %71, align 8
  %477 = icmp ne %struct.mz_zip_archive* %476, null
  br i1 %477, label %478, label %482

478:                                              ; preds = %474
  %479 = load i32, i32* %72, align 4
  %480 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %71, align 8
  %481 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %480, i32 0, i32 5
  store i32 %479, i32* %481, align 4
  br label %482

482:                                              ; preds = %474, %478
  store i32 0, i32* %77, align 4
  br label %609

483:                                              ; preds = %470
  %484 = load i8*, i8** %89, align 8
  %485 = getelementptr inbounds i8, i8* %484, i64 0
  %486 = load i8, i8* %485, align 1
  %487 = zext i8 %486 to i32
  %488 = load i8*, i8** %89, align 8
  %489 = getelementptr inbounds i8, i8* %488, i64 1
  %490 = load i8, i8* %489, align 1
  %491 = zext i8 %490 to i32
  %492 = shl i32 %491, 8
  %493 = or i32 %487, %492
  store i32 %493, i32* %90, align 4
  %494 = load i8*, i8** %89, align 8
  %495 = getelementptr inbounds i8, i8* %494, i64 2
  %496 = getelementptr inbounds i8, i8* %495, i64 0
  %497 = load i8, i8* %496, align 1
  %498 = zext i8 %497 to i32
  %499 = load i8*, i8** %89, align 8
  %500 = getelementptr inbounds i8, i8* %499, i64 2
  %501 = getelementptr inbounds i8, i8* %500, i64 1
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i32
  %504 = shl i32 %503, 8
  %505 = or i32 %498, %504
  store i32 %505, i32* %91, align 4
  %506 = load i32, i32* %91, align 4
  %507 = zext i32 %506 to i64
  %508 = add i64 %507, 4
  %509 = trunc i64 %508 to i32
  store i32 %509, i32* %92, align 4
  %510 = load i32, i32* %92, align 4
  %511 = load i32, i32* %88, align 4
  %512 = icmp ugt i32 %510, %511
  br i1 %512, label %513, label %522

513:                                              ; preds = %483
  %514 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  store %struct.mz_zip_archive* %514, %struct.mz_zip_archive** %73, align 8
  store i32 9, i32* %74, align 4
  %515 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %516 = icmp ne %struct.mz_zip_archive* %515, null
  br i1 %516, label %517, label %521

517:                                              ; preds = %513
  %518 = load i32, i32* %74, align 4
  %519 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %73, align 8
  %520 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %519, i32 0, i32 5
  store i32 %518, i32* %520, align 4
  br label %521

521:                                              ; preds = %513, %517
  store i32 0, i32* %77, align 4
  br label %609

522:                                              ; preds = %483
  %523 = load i32, i32* %90, align 4
  %524 = icmp ne i32 %523, 1
  br i1 %524, label %525, label %596

525:                                              ; preds = %522
  %526 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  %527 = load %struct.mz_zip_array*, %struct.mz_zip_array** %78, align 8
  %528 = load i8*, i8** %89, align 8
  %529 = load i32, i32* %92, align 4
  %530 = zext i32 %529 to i64
  store %struct.mz_zip_archive* %526, %struct.mz_zip_archive** %31, align 8
  store %struct.mz_zip_array* %527, %struct.mz_zip_array** %32, align 8
  store i8* %528, i8** %33, align 8
  store i64 %530, i64* %34, align 8
  %531 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %532 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %531, i32 0, i32 1
  %533 = load i64, i64* %532, align 8
  store i64 %533, i64* %35, align 8
  %534 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %31, align 8
  %535 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %536 = load i64, i64* %35, align 8
  %537 = load i64, i64* %34, align 8
  %538 = add i64 %536, %537
  store %struct.mz_zip_archive* %534, %struct.mz_zip_archive** %26, align 8
  store %struct.mz_zip_array* %535, %struct.mz_zip_array** %27, align 8
  store i64 %538, i64* %28, align 8
  store i32 1, i32* %29, align 4
  %539 = load i64, i64* %28, align 8
  %540 = load %struct.mz_zip_array*, %struct.mz_zip_array** %27, align 8
  %541 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %540, i32 0, i32 2
  %542 = load i64, i64* %541, align 8
  %543 = icmp ugt i64 %539, %542
  br i1 %543, label %544, label %553

544:                                              ; preds = %525
  %545 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %26, align 8
  %546 = load %struct.mz_zip_array*, %struct.mz_zip_array** %27, align 8
  %547 = load i64, i64* %28, align 8
  %548 = load i32, i32* %29, align 4
  %549 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %545, %struct.mz_zip_array* noundef %546, i64 noundef %547, i32 noundef %548) #7
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %552, label %551

551:                                              ; preds = %544
  store i32 0, i32* %25, align 4
  br label %557

552:                                              ; preds = %544
  br label %553

553:                                              ; preds = %552, %525
  %554 = load i64, i64* %28, align 8
  %555 = load %struct.mz_zip_array*, %struct.mz_zip_array** %27, align 8
  %556 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %555, i32 0, i32 1
  store i64 %554, i64* %556, align 8
  store i32 1, i32* %25, align 4
  br label %557

557:                                              ; preds = %553, %551
  %558 = load i32, i32* %25, align 4
  %559 = icmp ne i32 %558, 0
  br i1 %559, label %561, label %560

560:                                              ; preds = %557
  store i32 0, i32* %30, align 4
  br label %583

561:                                              ; preds = %557
  %562 = load i64, i64* %34, align 8
  %563 = icmp ugt i64 %562, 0
  br i1 %563, label %564, label %582

564:                                              ; preds = %561
  %565 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %566 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %565, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  %568 = load i64, i64* %35, align 8
  %569 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %570 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %569, i32 0, i32 3
  %571 = load i32, i32* %570, align 8
  %572 = zext i32 %571 to i64
  %573 = mul i64 %568, %572
  %574 = getelementptr inbounds i8, i8* %567, i64 %573
  %575 = load i8*, i8** %33, align 8
  %576 = load i64, i64* %34, align 8
  %577 = load %struct.mz_zip_array*, %struct.mz_zip_array** %32, align 8
  %578 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %577, i32 0, i32 3
  %579 = load i32, i32* %578, align 8
  %580 = zext i32 %579 to i64
  %581 = mul i64 %576, %580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %574, i8* align 1 %575, i64 %581, i1 false) #7
  br label %582

582:                                              ; preds = %564, %561
  store i32 1, i32* %30, align 4
  br label %583

583:                                              ; preds = %560, %582
  %584 = load i32, i32* %30, align 4
  %585 = icmp ne i32 %584, 0
  br i1 %585, label %595, label %586

586:                                              ; preds = %583
  %587 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %79, align 8
  store %struct.mz_zip_archive* %587, %struct.mz_zip_archive** %75, align 8
  store i32 16, i32* %76, align 4
  %588 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %589 = icmp ne %struct.mz_zip_archive* %588, null
  br i1 %589, label %590, label %594

590:                                              ; preds = %586
  %591 = load i32, i32* %76, align 4
  %592 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %593 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %592, i32 0, i32 5
  store i32 %591, i32* %593, align 4
  br label %594

594:                                              ; preds = %586, %590
  store i32 0, i32* %77, align 4
  br label %609

595:                                              ; preds = %583
  br label %596

596:                                              ; preds = %595, %522
  %597 = load i32, i32* %92, align 4
  %598 = load i8*, i8** %89, align 8
  %599 = zext i32 %597 to i64
  %600 = getelementptr inbounds i8, i8* %598, i64 %599
  store i8* %600, i8** %89, align 8
  %601 = load i32, i32* %92, align 4
  %602 = load i32, i32* %88, align 4
  %603 = sub i32 %602, %601
  store i32 %603, i32* %88, align 4
  br label %604

604:                                              ; preds = %596
  %605 = load i32, i32* %88, align 4
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %470, label %607, !llvm.loop !128

607:                                              ; preds = %604
  br label %608

608:                                              ; preds = %607, %464, %461
  store i32 1, i32* %77, align 4
  br label %609

609:                                              ; preds = %608, %594, %521, %482, %459, %124
  %610 = load i32, i32* %77, align 4
  ret i32 %610
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_finalize_archive(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i16, align 2
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca i64, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i64, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i8*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i8*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i8*, align 8
  %41 = alloca i32, align 4
  %42 = alloca i8*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i8*, align 8
  %45 = alloca i64, align 8
  %46 = alloca i8*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i8*, align 8
  %49 = alloca i32, align 4
  %50 = alloca i8*, align 8
  %51 = alloca i32, align 4
  %52 = alloca i8*, align 8
  %53 = alloca i32, align 4
  %54 = alloca i8*, align 8
  %55 = alloca i32, align 4
  %56 = alloca i8*, align 8
  %57 = alloca i32, align 4
  %58 = alloca %struct.mz_zip_archive*, align 8
  %59 = alloca i32, align 4
  %60 = alloca %struct.mz_zip_archive*, align 8
  %61 = alloca i32, align 4
  %62 = alloca %struct.mz_zip_archive*, align 8
  %63 = alloca i32, align 4
  %64 = alloca %struct.mz_zip_archive*, align 8
  %65 = alloca i32, align 4
  %66 = alloca %struct.mz_zip_archive*, align 8
  %67 = alloca i32, align 4
  %68 = alloca %struct.mz_zip_archive*, align 8
  %69 = alloca i32, align 4
  %70 = alloca %struct.mz_zip_archive*, align 8
  %71 = alloca i32, align 4
  %72 = alloca %struct.mz_zip_archive*, align 8
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca %struct.mz_zip_archive*, align 8
  %76 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i64, align 8
  %79 = alloca [256 x i8], align 16
  %80 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %75, align 8
  %81 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %82 = icmp ne %struct.mz_zip_archive* %81, null
  br i1 %82, label %83, label %93

83:                                               ; preds = %1
  %84 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %84, i32 0, i32 15
  %86 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %85, align 8
  %87 = icmp ne %struct.mz_zip_internal_state_tag* %86, null
  br i1 %87, label %88, label %93

88:                                               ; preds = %83
  %89 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %89, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = icmp ne i32 %91, 2
  br i1 %92, label %93, label %102

93:                                               ; preds = %88, %83, %1
  %94 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %94, %struct.mz_zip_archive** %58, align 8
  store i32 24, i32* %59, align 4
  %95 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %96 = icmp ne %struct.mz_zip_archive* %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = load i32, i32* %59, align 4
  %99 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %58, align 8
  %100 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %99, i32 0, i32 5
  store i32 %98, i32* %100, align 4
  br label %101

101:                                              ; preds = %93, %97
  store i32 0, i32* %74, align 4
  br label %802

102:                                              ; preds = %88
  %103 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %104 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %103, i32 0, i32 15
  %105 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %104, align 8
  store %struct.mz_zip_internal_state_tag* %105, %struct.mz_zip_internal_state_tag** %76, align 8
  %106 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %107 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %106, i32 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %102
  %111 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %112 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %111, i32 0, i32 0
  %113 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %112, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp uge i64 %114, 4294967295
  br i1 %115, label %116, label %125

116:                                              ; preds = %110
  %117 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %117, %struct.mz_zip_archive** %60, align 8
  store i32 2, i32* %61, align 4
  %118 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %119 = icmp ne %struct.mz_zip_archive* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = load i32, i32* %61, align 4
  %122 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %60, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %122, i32 0, i32 5
  store i32 %121, i32* %123, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 0, i32* %74, align 4
  br label %802

125:                                              ; preds = %110
  br label %152

126:                                              ; preds = %102
  %127 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %127, i32 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = icmp ugt i32 %129, 65535
  br i1 %130, label %142, label %131

131:                                              ; preds = %126
  %132 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %133 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %132, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %136 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %135, i32 0, i32 0
  %137 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %136, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %134, %138
  %140 = add i64 %139, 22
  %141 = icmp ugt i64 %140, 4294967295
  br i1 %141, label %142, label %151

142:                                              ; preds = %131, %126
  %143 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %143, %struct.mz_zip_archive** %62, align 8
  store i32 2, i32* %63, align 4
  %144 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %62, align 8
  %145 = icmp ne %struct.mz_zip_archive* %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = load i32, i32* %63, align 4
  %148 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %62, align 8
  %149 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %148, i32 0, i32 5
  store i32 %147, i32* %149, align 4
  br label %150

150:                                              ; preds = %142, %146
  store i32 0, i32* %74, align 4
  br label %802

151:                                              ; preds = %131
  br label %152

152:                                              ; preds = %151, %125
  store i64 0, i64* %77, align 8
  store i64 0, i64* %78, align 8
  %153 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %154 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %153, i32 0, i32 2
  %155 = load i32, i32* %154, align 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %198

157:                                              ; preds = %152
  %158 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %159 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %158, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  store i64 %160, i64* %77, align 8
  %161 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %162 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %161, i32 0, i32 0
  %163 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %162, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  store i64 %164, i64* %78, align 8
  %165 = load i64, i64* %77, align 8
  %166 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %166, i32 0, i32 1
  store i64 %165, i64* %167, align 8
  %168 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %169 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %168, i32 0, i32 12
  %170 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %169, align 8
  %171 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %172 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %171, i32 0, i32 14
  %173 = load i8*, i8** %172, align 8
  %174 = load i64, i64* %77, align 8
  %175 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %176 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %175, i32 0, i32 0
  %177 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %176, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = load i64, i64* %78, align 8
  %180 = call i64 %170(i8* noundef %173, i64 noundef %174, i8* noundef %178, i64 noundef %179)
  %181 = load i64, i64* %78, align 8
  %182 = icmp ne i64 %180, %181
  br i1 %182, label %183, label %192

183:                                              ; preds = %157
  %184 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %184, %struct.mz_zip_archive** %64, align 8
  store i32 19, i32* %65, align 4
  %185 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %186 = icmp ne %struct.mz_zip_archive* %185, null
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = load i32, i32* %65, align 4
  %189 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %64, align 8
  %190 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %189, i32 0, i32 5
  store i32 %188, i32* %190, align 4
  br label %191

191:                                              ; preds = %183, %187
  store i32 0, i32* %74, align 4
  br label %802

192:                                              ; preds = %157
  %193 = load i64, i64* %78, align 8
  %194 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %195 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %194, i32 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %196, %193
  store i64 %197, i64* %195, align 8
  br label %198

198:                                              ; preds = %192, %152
  %199 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %200 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %199, i32 0, i32 4
  %201 = load i32, i32* %200, align 4
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %630

203:                                              ; preds = %198
  %204 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %205 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %204, i32 0, i32 0
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %80, align 8
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %207, i8 0, i64 256, i1 false)
  %208 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %209 = getelementptr inbounds i8, i8* %208, i64 0
  store i8* %209, i8** %46, align 8
  store i32 101075792, i32* %47, align 4
  %210 = load i32, i32* %47, align 4
  %211 = trunc i32 %210 to i8
  %212 = load i8*, i8** %46, align 8
  store i8 %211, i8* %212, align 1
  %213 = load i32, i32* %47, align 4
  %214 = lshr i32 %213, 8
  %215 = trunc i32 %214 to i8
  %216 = load i8*, i8** %46, align 8
  %217 = getelementptr inbounds i8, i8* %216, i64 1
  store i8 %215, i8* %217, align 1
  %218 = load i32, i32* %47, align 4
  %219 = lshr i32 %218, 16
  %220 = trunc i32 %219 to i8
  %221 = load i8*, i8** %46, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 2
  store i8 %220, i8* %222, align 1
  %223 = load i32, i32* %47, align 4
  %224 = lshr i32 %223, 24
  %225 = trunc i32 %224 to i8
  %226 = load i8*, i8** %46, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 3
  store i8 %225, i8* %227, align 1
  %228 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %229 = getelementptr inbounds i8, i8* %228, i64 4
  store i8* %229, i8** %14, align 8
  store i64 44, i64* %15, align 8
  %230 = load i8*, i8** %14, align 8
  %231 = load i64, i64* %15, align 8
  %232 = trunc i64 %231 to i32
  store i8* %230, i8** %10, align 8
  store i32 %232, i32* %11, align 4
  %233 = load i32, i32* %11, align 4
  %234 = trunc i32 %233 to i8
  %235 = load i8*, i8** %10, align 8
  store i8 %234, i8* %235, align 1
  %236 = load i32, i32* %11, align 4
  %237 = lshr i32 %236, 8
  %238 = trunc i32 %237 to i8
  %239 = load i8*, i8** %10, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 1
  store i8 %238, i8* %240, align 1
  %241 = load i32, i32* %11, align 4
  %242 = lshr i32 %241, 16
  %243 = trunc i32 %242 to i8
  %244 = load i8*, i8** %10, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 2
  store i8 %243, i8* %245, align 1
  %246 = load i32, i32* %11, align 4
  %247 = lshr i32 %246, 24
  %248 = trunc i32 %247 to i8
  %249 = load i8*, i8** %10, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 3
  store i8 %248, i8* %250, align 1
  %251 = load i8*, i8** %14, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 4
  %253 = load i64, i64* %15, align 8
  %254 = lshr i64 %253, 32
  %255 = trunc i64 %254 to i32
  store i8* %252, i8** %12, align 8
  store i32 %255, i32* %13, align 4
  %256 = load i32, i32* %13, align 4
  %257 = trunc i32 %256 to i8
  %258 = load i8*, i8** %12, align 8
  store i8 %257, i8* %258, align 1
  %259 = load i32, i32* %13, align 4
  %260 = lshr i32 %259, 8
  %261 = trunc i32 %260 to i8
  %262 = load i8*, i8** %12, align 8
  %263 = getelementptr inbounds i8, i8* %262, i64 1
  store i8 %261, i8* %263, align 1
  %264 = load i32, i32* %13, align 4
  %265 = lshr i32 %264, 16
  %266 = trunc i32 %265 to i8
  %267 = load i8*, i8** %12, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 2
  store i8 %266, i8* %268, align 1
  %269 = load i32, i32* %13, align 4
  %270 = lshr i32 %269, 24
  %271 = trunc i32 %270 to i8
  %272 = load i8*, i8** %12, align 8
  %273 = getelementptr inbounds i8, i8* %272, i64 3
  store i8 %271, i8* %273, align 1
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %275 = getelementptr inbounds i8, i8* %274, i64 12
  store i8* %275, i8** %2, align 8
  store i16 798, i16* %3, align 2
  %276 = load i16, i16* %3, align 2
  %277 = trunc i16 %276 to i8
  %278 = load i8*, i8** %2, align 8
  store i8 %277, i8* %278, align 1
  %279 = load i16, i16* %3, align 2
  %280 = zext i16 %279 to i32
  %281 = ashr i32 %280, 8
  %282 = trunc i32 %281 to i8
  %283 = load i8*, i8** %2, align 8
  %284 = getelementptr inbounds i8, i8* %283, i64 1
  store i8 %282, i8* %284, align 1
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %286 = getelementptr inbounds i8, i8* %285, i64 14
  store i8* %286, i8** %4, align 8
  store i16 45, i16* %5, align 2
  %287 = load i16, i16* %5, align 2
  %288 = trunc i16 %287 to i8
  %289 = load i8*, i8** %4, align 8
  store i8 %288, i8* %289, align 1
  %290 = load i16, i16* %5, align 2
  %291 = zext i16 %290 to i32
  %292 = ashr i32 %291, 8
  %293 = trunc i32 %292 to i8
  %294 = load i8*, i8** %4, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  store i8 %293, i8* %295, align 1
  %296 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %297 = getelementptr inbounds i8, i8* %296, i64 24
  %298 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %299 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %298, i32 0, i32 2
  %300 = load i32, i32* %299, align 8
  %301 = zext i32 %300 to i64
  store i8* %297, i8** %20, align 8
  store i64 %301, i64* %21, align 8
  %302 = load i8*, i8** %20, align 8
  %303 = load i64, i64* %21, align 8
  %304 = trunc i64 %303 to i32
  store i8* %302, i8** %16, align 8
  store i32 %304, i32* %17, align 4
  %305 = load i32, i32* %17, align 4
  %306 = trunc i32 %305 to i8
  %307 = load i8*, i8** %16, align 8
  store i8 %306, i8* %307, align 1
  %308 = load i32, i32* %17, align 4
  %309 = lshr i32 %308, 8
  %310 = trunc i32 %309 to i8
  %311 = load i8*, i8** %16, align 8
  %312 = getelementptr inbounds i8, i8* %311, i64 1
  store i8 %310, i8* %312, align 1
  %313 = load i32, i32* %17, align 4
  %314 = lshr i32 %313, 16
  %315 = trunc i32 %314 to i8
  %316 = load i8*, i8** %16, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 2
  store i8 %315, i8* %317, align 1
  %318 = load i32, i32* %17, align 4
  %319 = lshr i32 %318, 24
  %320 = trunc i32 %319 to i8
  %321 = load i8*, i8** %16, align 8
  %322 = getelementptr inbounds i8, i8* %321, i64 3
  store i8 %320, i8* %322, align 1
  %323 = load i8*, i8** %20, align 8
  %324 = getelementptr inbounds i8, i8* %323, i64 4
  %325 = load i64, i64* %21, align 8
  %326 = lshr i64 %325, 32
  %327 = trunc i64 %326 to i32
  store i8* %324, i8** %18, align 8
  store i32 %327, i32* %19, align 4
  %328 = load i32, i32* %19, align 4
  %329 = trunc i32 %328 to i8
  %330 = load i8*, i8** %18, align 8
  store i8 %329, i8* %330, align 1
  %331 = load i32, i32* %19, align 4
  %332 = lshr i32 %331, 8
  %333 = trunc i32 %332 to i8
  %334 = load i8*, i8** %18, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 1
  store i8 %333, i8* %335, align 1
  %336 = load i32, i32* %19, align 4
  %337 = lshr i32 %336, 16
  %338 = trunc i32 %337 to i8
  %339 = load i8*, i8** %18, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 2
  store i8 %338, i8* %340, align 1
  %341 = load i32, i32* %19, align 4
  %342 = lshr i32 %341, 24
  %343 = trunc i32 %342 to i8
  %344 = load i8*, i8** %18, align 8
  %345 = getelementptr inbounds i8, i8* %344, i64 3
  store i8 %343, i8* %345, align 1
  %346 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %347 = getelementptr inbounds i8, i8* %346, i64 32
  %348 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %349 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %348, i32 0, i32 2
  %350 = load i32, i32* %349, align 8
  %351 = zext i32 %350 to i64
  store i8* %347, i8** %26, align 8
  store i64 %351, i64* %27, align 8
  %352 = load i8*, i8** %26, align 8
  %353 = load i64, i64* %27, align 8
  %354 = trunc i64 %353 to i32
  store i8* %352, i8** %22, align 8
  store i32 %354, i32* %23, align 4
  %355 = load i32, i32* %23, align 4
  %356 = trunc i32 %355 to i8
  %357 = load i8*, i8** %22, align 8
  store i8 %356, i8* %357, align 1
  %358 = load i32, i32* %23, align 4
  %359 = lshr i32 %358, 8
  %360 = trunc i32 %359 to i8
  %361 = load i8*, i8** %22, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 1
  store i8 %360, i8* %362, align 1
  %363 = load i32, i32* %23, align 4
  %364 = lshr i32 %363, 16
  %365 = trunc i32 %364 to i8
  %366 = load i8*, i8** %22, align 8
  %367 = getelementptr inbounds i8, i8* %366, i64 2
  store i8 %365, i8* %367, align 1
  %368 = load i32, i32* %23, align 4
  %369 = lshr i32 %368, 24
  %370 = trunc i32 %369 to i8
  %371 = load i8*, i8** %22, align 8
  %372 = getelementptr inbounds i8, i8* %371, i64 3
  store i8 %370, i8* %372, align 1
  %373 = load i8*, i8** %26, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 4
  %375 = load i64, i64* %27, align 8
  %376 = lshr i64 %375, 32
  %377 = trunc i64 %376 to i32
  store i8* %374, i8** %24, align 8
  store i32 %377, i32* %25, align 4
  %378 = load i32, i32* %25, align 4
  %379 = trunc i32 %378 to i8
  %380 = load i8*, i8** %24, align 8
  store i8 %379, i8* %380, align 1
  %381 = load i32, i32* %25, align 4
  %382 = lshr i32 %381, 8
  %383 = trunc i32 %382 to i8
  %384 = load i8*, i8** %24, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 1
  store i8 %383, i8* %385, align 1
  %386 = load i32, i32* %25, align 4
  %387 = lshr i32 %386, 16
  %388 = trunc i32 %387 to i8
  %389 = load i8*, i8** %24, align 8
  %390 = getelementptr inbounds i8, i8* %389, i64 2
  store i8 %388, i8* %390, align 1
  %391 = load i32, i32* %25, align 4
  %392 = lshr i32 %391, 24
  %393 = trunc i32 %392 to i8
  %394 = load i8*, i8** %24, align 8
  %395 = getelementptr inbounds i8, i8* %394, i64 3
  store i8 %393, i8* %395, align 1
  %396 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %397 = getelementptr inbounds i8, i8* %396, i64 40
  %398 = load i64, i64* %78, align 8
  store i8* %397, i8** %32, align 8
  store i64 %398, i64* %33, align 8
  %399 = load i8*, i8** %32, align 8
  %400 = load i64, i64* %33, align 8
  %401 = trunc i64 %400 to i32
  store i8* %399, i8** %28, align 8
  store i32 %401, i32* %29, align 4
  %402 = load i32, i32* %29, align 4
  %403 = trunc i32 %402 to i8
  %404 = load i8*, i8** %28, align 8
  store i8 %403, i8* %404, align 1
  %405 = load i32, i32* %29, align 4
  %406 = lshr i32 %405, 8
  %407 = trunc i32 %406 to i8
  %408 = load i8*, i8** %28, align 8
  %409 = getelementptr inbounds i8, i8* %408, i64 1
  store i8 %407, i8* %409, align 1
  %410 = load i32, i32* %29, align 4
  %411 = lshr i32 %410, 16
  %412 = trunc i32 %411 to i8
  %413 = load i8*, i8** %28, align 8
  %414 = getelementptr inbounds i8, i8* %413, i64 2
  store i8 %412, i8* %414, align 1
  %415 = load i32, i32* %29, align 4
  %416 = lshr i32 %415, 24
  %417 = trunc i32 %416 to i8
  %418 = load i8*, i8** %28, align 8
  %419 = getelementptr inbounds i8, i8* %418, i64 3
  store i8 %417, i8* %419, align 1
  %420 = load i8*, i8** %32, align 8
  %421 = getelementptr inbounds i8, i8* %420, i64 4
  %422 = load i64, i64* %33, align 8
  %423 = lshr i64 %422, 32
  %424 = trunc i64 %423 to i32
  store i8* %421, i8** %30, align 8
  store i32 %424, i32* %31, align 4
  %425 = load i32, i32* %31, align 4
  %426 = trunc i32 %425 to i8
  %427 = load i8*, i8** %30, align 8
  store i8 %426, i8* %427, align 1
  %428 = load i32, i32* %31, align 4
  %429 = lshr i32 %428, 8
  %430 = trunc i32 %429 to i8
  %431 = load i8*, i8** %30, align 8
  %432 = getelementptr inbounds i8, i8* %431, i64 1
  store i8 %430, i8* %432, align 1
  %433 = load i32, i32* %31, align 4
  %434 = lshr i32 %433, 16
  %435 = trunc i32 %434 to i8
  %436 = load i8*, i8** %30, align 8
  %437 = getelementptr inbounds i8, i8* %436, i64 2
  store i8 %435, i8* %437, align 1
  %438 = load i32, i32* %31, align 4
  %439 = lshr i32 %438, 24
  %440 = trunc i32 %439 to i8
  %441 = load i8*, i8** %30, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 3
  store i8 %440, i8* %442, align 1
  %443 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %444 = getelementptr inbounds i8, i8* %443, i64 48
  %445 = load i64, i64* %77, align 8
  store i8* %444, i8** %38, align 8
  store i64 %445, i64* %39, align 8
  %446 = load i8*, i8** %38, align 8
  %447 = load i64, i64* %39, align 8
  %448 = trunc i64 %447 to i32
  store i8* %446, i8** %34, align 8
  store i32 %448, i32* %35, align 4
  %449 = load i32, i32* %35, align 4
  %450 = trunc i32 %449 to i8
  %451 = load i8*, i8** %34, align 8
  store i8 %450, i8* %451, align 1
  %452 = load i32, i32* %35, align 4
  %453 = lshr i32 %452, 8
  %454 = trunc i32 %453 to i8
  %455 = load i8*, i8** %34, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 1
  store i8 %454, i8* %456, align 1
  %457 = load i32, i32* %35, align 4
  %458 = lshr i32 %457, 16
  %459 = trunc i32 %458 to i8
  %460 = load i8*, i8** %34, align 8
  %461 = getelementptr inbounds i8, i8* %460, i64 2
  store i8 %459, i8* %461, align 1
  %462 = load i32, i32* %35, align 4
  %463 = lshr i32 %462, 24
  %464 = trunc i32 %463 to i8
  %465 = load i8*, i8** %34, align 8
  %466 = getelementptr inbounds i8, i8* %465, i64 3
  store i8 %464, i8* %466, align 1
  %467 = load i8*, i8** %38, align 8
  %468 = getelementptr inbounds i8, i8* %467, i64 4
  %469 = load i64, i64* %39, align 8
  %470 = lshr i64 %469, 32
  %471 = trunc i64 %470 to i32
  store i8* %468, i8** %36, align 8
  store i32 %471, i32* %37, align 4
  %472 = load i32, i32* %37, align 4
  %473 = trunc i32 %472 to i8
  %474 = load i8*, i8** %36, align 8
  store i8 %473, i8* %474, align 1
  %475 = load i32, i32* %37, align 4
  %476 = lshr i32 %475, 8
  %477 = trunc i32 %476 to i8
  %478 = load i8*, i8** %36, align 8
  %479 = getelementptr inbounds i8, i8* %478, i64 1
  store i8 %477, i8* %479, align 1
  %480 = load i32, i32* %37, align 4
  %481 = lshr i32 %480, 16
  %482 = trunc i32 %481 to i8
  %483 = load i8*, i8** %36, align 8
  %484 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 %482, i8* %484, align 1
  %485 = load i32, i32* %37, align 4
  %486 = lshr i32 %485, 24
  %487 = trunc i32 %486 to i8
  %488 = load i8*, i8** %36, align 8
  %489 = getelementptr inbounds i8, i8* %488, i64 3
  store i8 %487, i8* %489, align 1
  %490 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %491 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %490, i32 0, i32 12
  %492 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %491, align 8
  %493 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %494 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %493, i32 0, i32 14
  %495 = load i8*, i8** %494, align 8
  %496 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %497 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %496, i32 0, i32 0
  %498 = load i64, i64* %497, align 8
  %499 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %500 = call i64 %492(i8* noundef %495, i64 noundef %498, i8* noundef %499, i64 noundef 56)
  %501 = icmp ne i64 %500, 56
  br i1 %501, label %502, label %511

502:                                              ; preds = %203
  %503 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %503, %struct.mz_zip_archive** %66, align 8
  store i32 19, i32* %67, align 4
  %504 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %66, align 8
  %505 = icmp ne %struct.mz_zip_archive* %504, null
  br i1 %505, label %506, label %510

506:                                              ; preds = %502
  %507 = load i32, i32* %67, align 4
  %508 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %66, align 8
  %509 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %508, i32 0, i32 5
  store i32 %507, i32* %509, align 4
  br label %510

510:                                              ; preds = %502, %506
  store i32 0, i32* %74, align 4
  br label %802

511:                                              ; preds = %203
  %512 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %513 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %512, i32 0, i32 0
  %514 = load i64, i64* %513, align 8
  %515 = add i64 %514, 56
  store i64 %515, i64* %513, align 8
  %516 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %516, i8 0, i64 256, i1 false)
  %517 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %518 = getelementptr inbounds i8, i8* %517, i64 0
  store i8* %518, i8** %48, align 8
  store i32 117853008, i32* %49, align 4
  %519 = load i32, i32* %49, align 4
  %520 = trunc i32 %519 to i8
  %521 = load i8*, i8** %48, align 8
  store i8 %520, i8* %521, align 1
  %522 = load i32, i32* %49, align 4
  %523 = lshr i32 %522, 8
  %524 = trunc i32 %523 to i8
  %525 = load i8*, i8** %48, align 8
  %526 = getelementptr inbounds i8, i8* %525, i64 1
  store i8 %524, i8* %526, align 1
  %527 = load i32, i32* %49, align 4
  %528 = lshr i32 %527, 16
  %529 = trunc i32 %528 to i8
  %530 = load i8*, i8** %48, align 8
  %531 = getelementptr inbounds i8, i8* %530, i64 2
  store i8 %529, i8* %531, align 1
  %532 = load i32, i32* %49, align 4
  %533 = lshr i32 %532, 24
  %534 = trunc i32 %533 to i8
  %535 = load i8*, i8** %48, align 8
  %536 = getelementptr inbounds i8, i8* %535, i64 3
  store i8 %534, i8* %536, align 1
  %537 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %538 = getelementptr inbounds i8, i8* %537, i64 8
  %539 = load i64, i64* %80, align 8
  store i8* %538, i8** %44, align 8
  store i64 %539, i64* %45, align 8
  %540 = load i8*, i8** %44, align 8
  %541 = load i64, i64* %45, align 8
  %542 = trunc i64 %541 to i32
  store i8* %540, i8** %40, align 8
  store i32 %542, i32* %41, align 4
  %543 = load i32, i32* %41, align 4
  %544 = trunc i32 %543 to i8
  %545 = load i8*, i8** %40, align 8
  store i8 %544, i8* %545, align 1
  %546 = load i32, i32* %41, align 4
  %547 = lshr i32 %546, 8
  %548 = trunc i32 %547 to i8
  %549 = load i8*, i8** %40, align 8
  %550 = getelementptr inbounds i8, i8* %549, i64 1
  store i8 %548, i8* %550, align 1
  %551 = load i32, i32* %41, align 4
  %552 = lshr i32 %551, 16
  %553 = trunc i32 %552 to i8
  %554 = load i8*, i8** %40, align 8
  %555 = getelementptr inbounds i8, i8* %554, i64 2
  store i8 %553, i8* %555, align 1
  %556 = load i32, i32* %41, align 4
  %557 = lshr i32 %556, 24
  %558 = trunc i32 %557 to i8
  %559 = load i8*, i8** %40, align 8
  %560 = getelementptr inbounds i8, i8* %559, i64 3
  store i8 %558, i8* %560, align 1
  %561 = load i8*, i8** %44, align 8
  %562 = getelementptr inbounds i8, i8* %561, i64 4
  %563 = load i64, i64* %45, align 8
  %564 = lshr i64 %563, 32
  %565 = trunc i64 %564 to i32
  store i8* %562, i8** %42, align 8
  store i32 %565, i32* %43, align 4
  %566 = load i32, i32* %43, align 4
  %567 = trunc i32 %566 to i8
  %568 = load i8*, i8** %42, align 8
  store i8 %567, i8* %568, align 1
  %569 = load i32, i32* %43, align 4
  %570 = lshr i32 %569, 8
  %571 = trunc i32 %570 to i8
  %572 = load i8*, i8** %42, align 8
  %573 = getelementptr inbounds i8, i8* %572, i64 1
  store i8 %571, i8* %573, align 1
  %574 = load i32, i32* %43, align 4
  %575 = lshr i32 %574, 16
  %576 = trunc i32 %575 to i8
  %577 = load i8*, i8** %42, align 8
  %578 = getelementptr inbounds i8, i8* %577, i64 2
  store i8 %576, i8* %578, align 1
  %579 = load i32, i32* %43, align 4
  %580 = lshr i32 %579, 24
  %581 = trunc i32 %580 to i8
  %582 = load i8*, i8** %42, align 8
  %583 = getelementptr inbounds i8, i8* %582, i64 3
  store i8 %581, i8* %583, align 1
  %584 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %585 = getelementptr inbounds i8, i8* %584, i64 16
  store i8* %585, i8** %50, align 8
  store i32 1, i32* %51, align 4
  %586 = load i32, i32* %51, align 4
  %587 = trunc i32 %586 to i8
  %588 = load i8*, i8** %50, align 8
  store i8 %587, i8* %588, align 1
  %589 = load i32, i32* %51, align 4
  %590 = lshr i32 %589, 8
  %591 = trunc i32 %590 to i8
  %592 = load i8*, i8** %50, align 8
  %593 = getelementptr inbounds i8, i8* %592, i64 1
  store i8 %591, i8* %593, align 1
  %594 = load i32, i32* %51, align 4
  %595 = lshr i32 %594, 16
  %596 = trunc i32 %595 to i8
  %597 = load i8*, i8** %50, align 8
  %598 = getelementptr inbounds i8, i8* %597, i64 2
  store i8 %596, i8* %598, align 1
  %599 = load i32, i32* %51, align 4
  %600 = lshr i32 %599, 24
  %601 = trunc i32 %600 to i8
  %602 = load i8*, i8** %50, align 8
  %603 = getelementptr inbounds i8, i8* %602, i64 3
  store i8 %601, i8* %603, align 1
  %604 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %605 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %604, i32 0, i32 12
  %606 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %605, align 8
  %607 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %608 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %607, i32 0, i32 14
  %609 = load i8*, i8** %608, align 8
  %610 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %611 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %610, i32 0, i32 0
  %612 = load i64, i64* %611, align 8
  %613 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %614 = call i64 %606(i8* noundef %609, i64 noundef %612, i8* noundef %613, i64 noundef 20)
  %615 = icmp ne i64 %614, 20
  br i1 %615, label %616, label %625

616:                                              ; preds = %511
  %617 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %617, %struct.mz_zip_archive** %68, align 8
  store i32 19, i32* %69, align 4
  %618 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  %619 = icmp ne %struct.mz_zip_archive* %618, null
  br i1 %619, label %620, label %624

620:                                              ; preds = %616
  %621 = load i32, i32* %69, align 4
  %622 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %68, align 8
  %623 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %622, i32 0, i32 5
  store i32 %621, i32* %623, align 4
  br label %624

624:                                              ; preds = %616, %620
  store i32 0, i32* %74, align 4
  br label %802

625:                                              ; preds = %511
  %626 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %627 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %626, i32 0, i32 0
  %628 = load i64, i64* %627, align 8
  %629 = add i64 %628, 20
  store i64 %629, i64* %627, align 8
  br label %630

630:                                              ; preds = %625, %198
  %631 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %631, i8 0, i64 256, i1 false)
  %632 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %633 = getelementptr inbounds i8, i8* %632, i64 0
  store i8* %633, i8** %52, align 8
  store i32 101010256, i32* %53, align 4
  %634 = load i32, i32* %53, align 4
  %635 = trunc i32 %634 to i8
  %636 = load i8*, i8** %52, align 8
  store i8 %635, i8* %636, align 1
  %637 = load i32, i32* %53, align 4
  %638 = lshr i32 %637, 8
  %639 = trunc i32 %638 to i8
  %640 = load i8*, i8** %52, align 8
  %641 = getelementptr inbounds i8, i8* %640, i64 1
  store i8 %639, i8* %641, align 1
  %642 = load i32, i32* %53, align 4
  %643 = lshr i32 %642, 16
  %644 = trunc i32 %643 to i8
  %645 = load i8*, i8** %52, align 8
  %646 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 %644, i8* %646, align 1
  %647 = load i32, i32* %53, align 4
  %648 = lshr i32 %647, 24
  %649 = trunc i32 %648 to i8
  %650 = load i8*, i8** %52, align 8
  %651 = getelementptr inbounds i8, i8* %650, i64 3
  store i8 %649, i8* %651, align 1
  %652 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %653 = getelementptr inbounds i8, i8* %652, i64 8
  %654 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %655 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %654, i32 0, i32 2
  %656 = load i32, i32* %655, align 8
  %657 = icmp ult i32 65535, %656
  br i1 %657, label %658, label %659

658:                                              ; preds = %630
  br label %663

659:                                              ; preds = %630
  %660 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %661 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %660, i32 0, i32 2
  %662 = load i32, i32* %661, align 8
  br label %663

663:                                              ; preds = %659, %658
  %664 = phi i32 [ 65535, %658 ], [ %662, %659 ]
  %665 = trunc i32 %664 to i16
  store i8* %653, i8** %6, align 8
  store i16 %665, i16* %7, align 2
  %666 = load i16, i16* %7, align 2
  %667 = trunc i16 %666 to i8
  %668 = load i8*, i8** %6, align 8
  store i8 %667, i8* %668, align 1
  %669 = load i16, i16* %7, align 2
  %670 = zext i16 %669 to i32
  %671 = ashr i32 %670, 8
  %672 = trunc i32 %671 to i8
  %673 = load i8*, i8** %6, align 8
  %674 = getelementptr inbounds i8, i8* %673, i64 1
  store i8 %672, i8* %674, align 1
  %675 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %676 = getelementptr inbounds i8, i8* %675, i64 10
  %677 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %678 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %677, i32 0, i32 2
  %679 = load i32, i32* %678, align 8
  %680 = icmp ult i32 65535, %679
  br i1 %680, label %681, label %682

681:                                              ; preds = %663
  br label %686

682:                                              ; preds = %663
  %683 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %684 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %683, i32 0, i32 2
  %685 = load i32, i32* %684, align 8
  br label %686

686:                                              ; preds = %682, %681
  %687 = phi i32 [ 65535, %681 ], [ %685, %682 ]
  %688 = trunc i32 %687 to i16
  store i8* %676, i8** %8, align 8
  store i16 %688, i16* %9, align 2
  %689 = load i16, i16* %9, align 2
  %690 = trunc i16 %689 to i8
  %691 = load i8*, i8** %8, align 8
  store i8 %690, i8* %691, align 1
  %692 = load i16, i16* %9, align 2
  %693 = zext i16 %692 to i32
  %694 = ashr i32 %693, 8
  %695 = trunc i32 %694 to i8
  %696 = load i8*, i8** %8, align 8
  %697 = getelementptr inbounds i8, i8* %696, i64 1
  store i8 %695, i8* %697, align 1
  %698 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %699 = getelementptr inbounds i8, i8* %698, i64 12
  %700 = load i64, i64* %78, align 8
  %701 = icmp ult i64 4294967295, %700
  br i1 %701, label %702, label %703

702:                                              ; preds = %686
  br label %705

703:                                              ; preds = %686
  %704 = load i64, i64* %78, align 8
  br label %705

705:                                              ; preds = %703, %702
  %706 = phi i64 [ 4294967295, %702 ], [ %704, %703 ]
  %707 = trunc i64 %706 to i32
  store i8* %699, i8** %54, align 8
  store i32 %707, i32* %55, align 4
  %708 = load i32, i32* %55, align 4
  %709 = trunc i32 %708 to i8
  %710 = load i8*, i8** %54, align 8
  store i8 %709, i8* %710, align 1
  %711 = load i32, i32* %55, align 4
  %712 = lshr i32 %711, 8
  %713 = trunc i32 %712 to i8
  %714 = load i8*, i8** %54, align 8
  %715 = getelementptr inbounds i8, i8* %714, i64 1
  store i8 %713, i8* %715, align 1
  %716 = load i32, i32* %55, align 4
  %717 = lshr i32 %716, 16
  %718 = trunc i32 %717 to i8
  %719 = load i8*, i8** %54, align 8
  %720 = getelementptr inbounds i8, i8* %719, i64 2
  store i8 %718, i8* %720, align 1
  %721 = load i32, i32* %55, align 4
  %722 = lshr i32 %721, 24
  %723 = trunc i32 %722 to i8
  %724 = load i8*, i8** %54, align 8
  %725 = getelementptr inbounds i8, i8* %724, i64 3
  store i8 %723, i8* %725, align 1
  %726 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %727 = getelementptr inbounds i8, i8* %726, i64 16
  %728 = load i64, i64* %77, align 8
  %729 = icmp ult i64 4294967295, %728
  br i1 %729, label %730, label %731

730:                                              ; preds = %705
  br label %733

731:                                              ; preds = %705
  %732 = load i64, i64* %77, align 8
  br label %733

733:                                              ; preds = %731, %730
  %734 = phi i64 [ 4294967295, %730 ], [ %732, %731 ]
  %735 = trunc i64 %734 to i32
  store i8* %727, i8** %56, align 8
  store i32 %735, i32* %57, align 4
  %736 = load i32, i32* %57, align 4
  %737 = trunc i32 %736 to i8
  %738 = load i8*, i8** %56, align 8
  store i8 %737, i8* %738, align 1
  %739 = load i32, i32* %57, align 4
  %740 = lshr i32 %739, 8
  %741 = trunc i32 %740 to i8
  %742 = load i8*, i8** %56, align 8
  %743 = getelementptr inbounds i8, i8* %742, i64 1
  store i8 %741, i8* %743, align 1
  %744 = load i32, i32* %57, align 4
  %745 = lshr i32 %744, 16
  %746 = trunc i32 %745 to i8
  %747 = load i8*, i8** %56, align 8
  %748 = getelementptr inbounds i8, i8* %747, i64 2
  store i8 %746, i8* %748, align 1
  %749 = load i32, i32* %57, align 4
  %750 = lshr i32 %749, 24
  %751 = trunc i32 %750 to i8
  %752 = load i8*, i8** %56, align 8
  %753 = getelementptr inbounds i8, i8* %752, i64 3
  store i8 %751, i8* %753, align 1
  %754 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %755 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %754, i32 0, i32 12
  %756 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %755, align 8
  %757 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %758 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %757, i32 0, i32 14
  %759 = load i8*, i8** %758, align 8
  %760 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %761 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %760, i32 0, i32 0
  %762 = load i64, i64* %761, align 8
  %763 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i64 0, i64 0
  %764 = call i64 %756(i8* noundef %759, i64 noundef %762, i8* noundef %763, i64 noundef 22)
  %765 = icmp ne i64 %764, 22
  br i1 %765, label %766, label %775

766:                                              ; preds = %733
  %767 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %767, %struct.mz_zip_archive** %70, align 8
  store i32 19, i32* %71, align 4
  %768 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %70, align 8
  %769 = icmp ne %struct.mz_zip_archive* %768, null
  br i1 %769, label %770, label %774

770:                                              ; preds = %766
  %771 = load i32, i32* %71, align 4
  %772 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %70, align 8
  %773 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %772, i32 0, i32 5
  store i32 %771, i32* %773, align 4
  br label %774

774:                                              ; preds = %766, %770
  store i32 0, i32* %74, align 4
  br label %802

775:                                              ; preds = %733
  %776 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %777 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %776, i32 0, i32 6
  %778 = load %struct._IO_FILE*, %struct._IO_FILE** %777, align 8
  %779 = icmp ne %struct._IO_FILE* %778, null
  br i1 %779, label %780, label %795

780:                                              ; preds = %775
  %781 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %76, align 8
  %782 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %781, i32 0, i32 6
  %783 = load %struct._IO_FILE*, %struct._IO_FILE** %782, align 8
  %784 = call i32 @fflush(%struct._IO_FILE* noundef %783)
  %785 = icmp eq i32 %784, -1
  br i1 %785, label %786, label %795

786:                                              ; preds = %780
  %787 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  store %struct.mz_zip_archive* %787, %struct.mz_zip_archive** %72, align 8
  store i32 21, i32* %73, align 4
  %788 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %72, align 8
  %789 = icmp ne %struct.mz_zip_archive* %788, null
  br i1 %789, label %790, label %794

790:                                              ; preds = %786
  %791 = load i32, i32* %73, align 4
  %792 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %72, align 8
  %793 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %792, i32 0, i32 5
  store i32 %791, i32* %793, align 4
  br label %794

794:                                              ; preds = %786, %790
  store i32 0, i32* %74, align 4
  br label %802

795:                                              ; preds = %780, %775
  %796 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %797 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %796, i32 0, i32 0
  %798 = load i64, i64* %797, align 8
  %799 = add i64 %798, 22
  store i64 %799, i64* %797, align 8
  %800 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %75, align 8
  %801 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %800, i32 0, i32 3
  store i32 3, i32* %801, align 4
  store i32 1, i32* %74, align 4
  br label %802

802:                                              ; preds = %795, %794, %774, %624, %510, %191, %150, %124, %101
  %803 = load i32, i32* %74, align 4
  ret i32 %803
}

declare dso_local i32 @fflush(%struct._IO_FILE* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_writer_finalize_heap_archive(%struct.mz_zip_archive* noundef %0, i8** noundef %1, i64* noundef %2) #0 {
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i64*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %11, align 8
  store i8** %1, i8*** %12, align 8
  store i64* %2, i64** %13, align 8
  %14 = load i8**, i8*** %12, align 8
  %15 = icmp ne i8** %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = load i64*, i64** %13, align 8
  %18 = icmp ne i64* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %3
  %20 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  store %struct.mz_zip_archive* %20, %struct.mz_zip_archive** %4, align 8
  store i32 24, i32* %5, align 4
  %21 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %22 = icmp ne %struct.mz_zip_archive* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4
  %25 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %25, i32 0, i32 5
  store i32 %24, i32* %26, align 4
  br label %27

27:                                               ; preds = %19, %23
  store i32 0, i32* %10, align 4
  br label %91

28:                                               ; preds = %16
  %29 = load i8**, i8*** %12, align 8
  store i8* null, i8** %29, align 8
  %30 = load i64*, i64** %13, align 8
  store i64 0, i64* %30, align 8
  %31 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %32 = icmp ne %struct.mz_zip_archive* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 15
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %35, align 8
  %37 = icmp ne %struct.mz_zip_internal_state_tag* %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %33, %28
  %39 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  store %struct.mz_zip_archive* %39, %struct.mz_zip_archive** %6, align 8
  store i32 24, i32* %7, align 4
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %41 = icmp ne %struct.mz_zip_archive* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load i32, i32* %7, align 4
  %44 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %44, i32 0, i32 5
  store i32 %43, i32* %45, align 4
  br label %46

46:                                               ; preds = %38, %42
  store i32 0, i32* %10, align 4
  br label %91

47:                                               ; preds = %33
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %48, i32 0, i32 12
  %50 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %49, align 8
  %51 = icmp ne i64 (i8*, i64, i8*, i64)* %50, @mz_zip_heap_write_func
  br i1 %51, label %52, label %61

52:                                               ; preds = %47
  %53 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  store %struct.mz_zip_archive* %53, %struct.mz_zip_archive** %8, align 8
  store i32 24, i32* %9, align 4
  %54 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %55 = icmp ne %struct.mz_zip_archive* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = load i32, i32* %9, align 4
  %58 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %58, i32 0, i32 5
  store i32 %57, i32* %59, align 4
  br label %60

60:                                               ; preds = %52, %56
  store i32 0, i32* %10, align 4
  br label %91

61:                                               ; preds = %47
  %62 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %63 = call i32 @mz_zip_writer_finalize_archive(%struct.mz_zip_archive* noundef %62)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  store i32 0, i32* %10, align 4
  br label %91

66:                                               ; preds = %61
  %67 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %67, i32 0, i32 15
  %69 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %68, align 8
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %69, i32 0, i32 8
  %71 = load i8*, i8** %70, align 8
  %72 = load i8**, i8*** %12, align 8
  store i8* %71, i8** %72, align 8
  %73 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %73, i32 0, i32 15
  %75 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %74, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %75, i32 0, i32 9
  %77 = load i64, i64* %76, align 8
  %78 = load i64*, i64** %13, align 8
  store i64 %77, i64* %78, align 8
  %79 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %80 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %79, i32 0, i32 15
  %81 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %80, align 8
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %81, i32 0, i32 8
  store i8* null, i8** %82, align 8
  %83 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %83, i32 0, i32 15
  %85 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %84, align 8
  %86 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %85, i32 0, i32 10
  store i64 0, i64* %86, align 8
  %87 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %87, i32 0, i32 15
  %89 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %88, align 8
  %90 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %89, i32 0, i32 9
  store i64 0, i64* %90, align 8
  store i32 1, i32* %10, align 4
  br label %91

91:                                               ; preds = %66, %65, %60, %46, %27
  %92 = load i32, i32* %10, align 4
  ret i32 %92
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_add_mem_to_archive_file_in_place(i8* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i8* noundef %4, i16 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i16, align 2
  %14 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  store i8* %4, i8** %12, align 8
  store i16 %5, i16* %13, align 2
  store i32 %6, i32* %14, align 4
  %15 = load i8*, i8** %8, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = load i8*, i8** %10, align 8
  %18 = load i64, i64* %11, align 8
  %19 = load i8*, i8** %12, align 8
  %20 = load i16, i16* %13, align 2
  %21 = load i32, i32* %14, align 4
  %22 = call i32 @mz_zip_add_mem_to_archive_file_in_place_v2(i8* noundef %15, i8* noundef %16, i8* noundef %17, i64 noundef %18, i8* noundef %19, i16 noundef zeroext %20, i32 noundef %21, i32* noundef null)
  ret i32 %22
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_add_mem_to_archive_file_in_place_v2(i8* noundef %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i8* noundef %4, i16 noundef zeroext %5, i32 noundef %6, i32* noundef %7) #0 {
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.mz_zip_archive, align 8
  %21 = alloca %struct.stat, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i8* %0, i8** %10, align 8
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %12, align 8
  store i64 %3, i64* %13, align 8
  store i8* %4, i8** %14, align 8
  store i16 %5, i16* %15, align 2
  store i32 %6, i32* %16, align 4
  store i32* %7, i32** %17, align 8
  store i32 0, i32* %19, align 4
  store i32 0, i32* %22, align 4
  call void @mz_zip_zero_struct(%struct.mz_zip_archive* noundef %20)
  %24 = load i32, i32* %16, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %8
  store i32 6, i32* %16, align 4
  br label %27

27:                                               ; preds = %26, %8
  %28 = load i8*, i8** %10, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %50

30:                                               ; preds = %27
  %31 = load i8*, i8** %11, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %30
  %34 = load i64, i64* %13, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = load i8*, i8** %12, align 8
  %38 = icmp ne i8* %37, null
  br i1 %38, label %39, label %50

39:                                               ; preds = %36, %33
  %40 = load i16, i16* %15, align 2
  %41 = zext i16 %40 to i32
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = load i8*, i8** %14, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %43, %39
  %47 = load i32, i32* %16, align 4
  %48 = and i32 %47, 15
  %49 = icmp ugt i32 %48, 10
  br i1 %49, label %50, label %56

50:                                               ; preds = %46, %43, %36, %30, %27
  %51 = load i32*, i32** %17, align 8
  %52 = icmp ne i32* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load i32*, i32** %17, align 8
  store i32 24, i32* %54, align 4
  br label %55

55:                                               ; preds = %53, %50
  store i32 0, i32* %9, align 4
  br label %161

56:                                               ; preds = %46
  %57 = load i8*, i8** %11, align 8
  %58 = call i32 @mz_zip_writer_validate_archive_name(i8* noundef %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = load i32*, i32** %17, align 8
  %62 = icmp ne i32* %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i32*, i32** %17, align 8
  store i32 25, i32* %64, align 4
  br label %65

65:                                               ; preds = %63, %60
  store i32 0, i32* %9, align 4
  br label %161

66:                                               ; preds = %56
  %67 = load i8*, i8** %10, align 8
  %68 = call i32 @stat(i8* noundef %67, %struct.stat* noundef %21) #7
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %66
  %71 = load i8*, i8** %10, align 8
  %72 = load i32, i32* %16, align 4
  %73 = call i32 @mz_zip_writer_init_file_v2(%struct.mz_zip_archive* noundef %20, i8* noundef %71, i64 noundef 0, i32 noundef %72)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = load i32*, i32** %17, align 8
  %77 = icmp ne i32* %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 5
  %80 = load i32, i32* %79, align 4
  %81 = load i32*, i32** %17, align 8
  store i32 %80, i32* %81, align 4
  br label %82

82:                                               ; preds = %78, %75
  store i32 0, i32* %9, align 4
  br label %161

83:                                               ; preds = %70
  store i32 1, i32* %19, align 4
  br label %113

84:                                               ; preds = %66
  %85 = load i8*, i8** %10, align 8
  %86 = load i32, i32* %16, align 4
  %87 = or i32 %86, 2048
  %88 = call i32 @mz_zip_reader_init_file_v2(%struct.mz_zip_archive* noundef %20, i8* noundef %85, i32 noundef %87, i64 noundef 0, i64 noundef 0)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %84
  %91 = load i32*, i32** %17, align 8
  %92 = icmp ne i32* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 5
  %95 = load i32, i32* %94, align 4
  %96 = load i32*, i32** %17, align 8
  store i32 %95, i32* %96, align 4
  br label %97

97:                                               ; preds = %93, %90
  store i32 0, i32* %9, align 4
  br label %161

98:                                               ; preds = %84
  %99 = load i8*, i8** %10, align 8
  %100 = load i32, i32* %16, align 4
  %101 = call i32 @mz_zip_writer_init_from_reader_v2(%struct.mz_zip_archive* noundef %20, i8* noundef %99, i32 noundef %100)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %98
  %104 = load i32*, i32** %17, align 8
  %105 = icmp ne i32* %104, null
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 5
  %108 = load i32, i32* %107, align 4
  %109 = load i32*, i32** %17, align 8
  store i32 %108, i32* %109, align 4
  br label %110

110:                                              ; preds = %106, %103
  %111 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %20, i32 noundef 0)
  store i32 0, i32* %9, align 4
  br label %161

112:                                              ; preds = %98
  br label %113

113:                                              ; preds = %112, %83
  %114 = load i8*, i8** %11, align 8
  %115 = load i8*, i8** %12, align 8
  %116 = load i64, i64* %13, align 8
  %117 = load i8*, i8** %14, align 8
  %118 = load i16, i16* %15, align 2
  %119 = load i32, i32* %16, align 4
  %120 = call i32 @mz_zip_writer_add_mem_ex(%struct.mz_zip_archive* noundef %20, i8* noundef %114, i8* noundef %115, i64 noundef %116, i8* noundef %117, i16 noundef zeroext %118, i32 noundef %119, i64 noundef 0, i32 noundef 0)
  store i32 %120, i32* %18, align 4
  %121 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 5
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %22, align 4
  %123 = call i32 @mz_zip_writer_finalize_archive(%struct.mz_zip_archive* noundef %20)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %113
  %126 = load i32, i32* %22, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 5
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %22, align 4
  br label %131

131:                                              ; preds = %128, %125
  store i32 0, i32* %18, align 4
  br label %132

132:                                              ; preds = %131, %113
  %133 = load i32, i32* %18, align 4
  %134 = call i32 @mz_zip_writer_end_internal(%struct.mz_zip_archive* noundef %20, i32 noundef %133)
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %132
  %137 = load i32, i32* %22, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %20, i32 0, i32 5
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %22, align 4
  br label %142

142:                                              ; preds = %139, %136
  store i32 0, i32* %18, align 4
  br label %143

143:                                              ; preds = %142, %132
  %144 = load i32, i32* %18, align 4
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %143
  %147 = load i32, i32* %19, align 4
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = load i8*, i8** %10, align 8
  %151 = call i32 @remove(i8* noundef %150) #7
  store i32 %151, i32* %23, align 4
  %152 = load i32, i32* %23, align 4
  br label %153

153:                                              ; preds = %149, %146, %143
  %154 = load i32*, i32** %17, align 8
  %155 = icmp ne i32* %154, null
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = load i32, i32* %22, align 4
  %158 = load i32*, i32** %17, align 8
  store i32 %157, i32* %158, align 4
  br label %159

159:                                              ; preds = %156, %153
  %160 = load i32, i32* %18, align 4
  store i32 %160, i32* %9, align 4
  br label %161

161:                                              ; preds = %159, %110, %97, %82, %65, %55
  %162 = load i32, i32* %9, align 4
  ret i32 %162
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8* noundef, %struct.stat* noundef) #1

; Function Attrs: nounwind
declare dso_local i32 @remove(i8* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_zip_extract_archive_file_to_heap_v2(i8* noundef %0, i8* noundef %1, i8* noundef %2, i64* noundef %3, i32 noundef %4, i32* noundef %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.mz_zip_archive, align 8
  %16 = alloca i8*, align 8
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8* %2, i8** %10, align 8
  store i64* %3, i64** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32* %5, i32** %13, align 8
  store i8* null, i8** %16, align 8
  %17 = load i64*, i64** %11, align 8
  %18 = icmp ne i64* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  %20 = load i64*, i64** %11, align 8
  store i64 0, i64* %20, align 8
  br label %21

21:                                               ; preds = %19, %6
  %22 = load i8*, i8** %8, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = load i8*, i8** %9, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24, %21
  %28 = load i32*, i32** %13, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = load i32*, i32** %13, align 8
  store i32 24, i32* %31, align 4
  br label %32

32:                                               ; preds = %30, %27
  store i8* null, i8** %7, align 8
  br label %71

33:                                               ; preds = %24
  call void @mz_zip_zero_struct(%struct.mz_zip_archive* noundef %15)
  %34 = load i8*, i8** %8, align 8
  %35 = load i32, i32* %12, align 4
  %36 = or i32 %35, 2048
  %37 = call i32 @mz_zip_reader_init_file_v2(%struct.mz_zip_archive* noundef %15, i8* noundef %34, i32 noundef %36, i64 noundef 0, i64 noundef 0)
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %33
  %40 = load i32*, i32** %13, align 8
  %41 = icmp ne i32* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %15, i32 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = load i32*, i32** %13, align 8
  store i32 %44, i32* %45, align 4
  br label %46

46:                                               ; preds = %42, %39
  store i8* null, i8** %7, align 8
  br label %71

47:                                               ; preds = %33
  %48 = load i8*, i8** %9, align 8
  %49 = load i8*, i8** %10, align 8
  %50 = load i32, i32* %12, align 4
  %51 = call i32 @mz_zip_reader_locate_file_v2(%struct.mz_zip_archive* noundef %15, i8* noundef %48, i8* noundef %49, i32 noundef %50, i32* noundef %14)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = load i32, i32* %14, align 4
  %55 = load i64*, i64** %11, align 8
  %56 = load i32, i32* %12, align 4
  %57 = call i8* @mz_zip_reader_extract_to_heap(%struct.mz_zip_archive* noundef %15, i32 noundef %54, i64* noundef %55, i32 noundef %56)
  store i8* %57, i8** %16, align 8
  br label %58

58:                                               ; preds = %53, %47
  %59 = load i8*, i8** %16, align 8
  %60 = icmp ne i8* %59, null
  %61 = zext i1 %60 to i32
  %62 = call i32 @mz_zip_reader_end_internal(%struct.mz_zip_archive* noundef %15, i32 noundef %61)
  %63 = load i32*, i32** %13, align 8
  %64 = icmp ne i32* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %15, i32 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = load i32*, i32** %13, align 8
  store i32 %67, i32* %68, align 4
  br label %69

69:                                               ; preds = %65, %58
  %70 = load i8*, i8** %16, align 8
  store i8* %70, i8** %7, align 8
  br label %71

71:                                               ; preds = %69, %46, %32
  %72 = load i8*, i8** %7, align 8
  ret i8* %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_zip_extract_archive_file_to_heap(i8* noundef %0, i8* noundef %1, i64* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64* %2, i64** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = call i8* @mz_zip_extract_archive_file_to_heap_v2(i8* noundef %9, i8* noundef %10, i8* noundef null, i64* noundef %11, i32 noundef %12, i32* noundef null)
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_get_mode(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = icmp ne %struct.mz_zip_archive* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_get_type(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = icmp ne %struct.mz_zip_archive* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %6, i32 0, i32 4
  %8 = load i32, i32* %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_set_last_error(%struct.mz_zip_archive* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_zip_archive*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %8 = icmp ne %struct.mz_zip_archive* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i32 24, i32* %3, align 4
  br label %18

10:                                               ; preds = %2
  %11 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %12 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %6, align 4
  %14 = load i32, i32* %5, align 4
  %15 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %4, align 8
  %16 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %15, i32 0, i32 5
  store i32 %14, i32* %16, align 4
  %17 = load i32, i32* %6, align 4
  store i32 %17, i32* %3, align 4
  br label %18

18:                                               ; preds = %10, %9
  %19 = load i32, i32* %3, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_peek_last_error(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 24, i32* %2, align 4
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %8, i32 0, i32 5
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i32, i32* %2, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_clear_last_error(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = call i32 @mz_zip_set_last_error(%struct.mz_zip_archive* noundef %3, i32 noundef 0)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_get_last_error(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_zip_archive*, align 8
  %4 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %5 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %6 = icmp ne %struct.mz_zip_archive* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store i32 24, i32* %2, align 4
  br label %15

8:                                                ; preds = %1
  %9 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %9, i32 0, i32 5
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %4, align 4
  %12 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %12, i32 0, i32 5
  store i32 0, i32* %13, align 4
  %14 = load i32, i32* %4, align 4
  store i32 %14, i32* %2, align 4
  br label %15

15:                                               ; preds = %8, %7
  %16 = load i32, i32* %2, align 4
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mz_zip_get_error_string(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %38 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
    i32 10, label %15
    i32 11, label %16
    i32 12, label %17
    i32 13, label %18
    i32 14, label %19
    i32 15, label %20
    i32 16, label %21
    i32 17, label %22
    i32 18, label %23
    i32 19, label %24
    i32 20, label %25
    i32 21, label %26
    i32 22, label %27
    i32 23, label %28
    i32 24, label %29
    i32 25, label %30
    i32 26, label %31
    i32 27, label %32
    i32 28, label %33
    i32 29, label %34
    i32 30, label %35
    i32 31, label %36
    i32 32, label %37
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i8** %2, align 8
  br label %40

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i8** %2, align 8
  br label %40

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8** %2, align 8
  br label %40

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i8** %2, align 8
  br label %40

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i8** %2, align 8
  br label %40

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8** %2, align 8
  br label %40

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0), i8** %2, align 8
  br label %40

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0), i8** %2, align 8
  br label %40

13:                                               ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8** %2, align 8
  br label %40

14:                                               ; preds = %1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.34, i64 0, i64 0), i8** %2, align 8
  br label %40

15:                                               ; preds = %1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i8** %2, align 8
  br label %40

16:                                               ; preds = %1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8** %2, align 8
  br label %40

17:                                               ; preds = %1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0), i8** %2, align 8
  br label %40

18:                                               ; preds = %1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i64 0, i64 0), i8** %2, align 8
  br label %40

19:                                               ; preds = %1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0), i8** %2, align 8
  br label %40

20:                                               ; preds = %1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0), i8** %2, align 8
  br label %40

21:                                               ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i8** %2, align 8
  br label %40

22:                                               ; preds = %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0), i8** %2, align 8
  br label %40

23:                                               ; preds = %1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0), i8** %2, align 8
  br label %40

24:                                               ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i64 0, i64 0), i8** %2, align 8
  br label %40

25:                                               ; preds = %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0), i8** %2, align 8
  br label %40

26:                                               ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i8** %2, align 8
  br label %40

27:                                               ; preds = %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0), i8** %2, align 8
  br label %40

28:                                               ; preds = %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0), i8** %2, align 8
  br label %40

29:                                               ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0), i8** %2, align 8
  br label %40

30:                                               ; preds = %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i64 0, i64 0), i8** %2, align 8
  br label %40

31:                                               ; preds = %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i64 0, i64 0), i8** %2, align 8
  br label %40

32:                                               ; preds = %1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0), i8** %2, align 8
  br label %40

33:                                               ; preds = %1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i64 0, i64 0), i8** %2, align 8
  br label %40

34:                                               ; preds = %1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i8** %2, align 8
  br label %40

35:                                               ; preds = %1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0), i8** %2, align 8
  br label %40

36:                                               ; preds = %1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.56, i64 0, i64 0), i8** %2, align 8
  br label %40

37:                                               ; preds = %1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), i8** %2, align 8
  br label %40

38:                                               ; preds = %1
  br label %39

39:                                               ; preds = %38
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i8** %2, align 8
  br label %40

40:                                               ; preds = %39, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %41 = load i8*, i8** %2, align 8
  ret i8* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_is_zip64(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %7, i32 0, i32 15
  %9 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_internal_state_tag* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store i32 0, i32* %2, align 4
  br label %18

12:                                               ; preds = %6
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %13, i32 0, i32 15
  %15 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %15, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %2, align 4
  br label %18

18:                                               ; preds = %12, %11
  %19 = load i32, i32* %2, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_zip_get_central_dir_size(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %7, i32 0, i32 15
  %9 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_internal_state_tag* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store i64 0, i64* %2, align 8
  br label %19

12:                                               ; preds = %6
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %13, i32 0, i32 15
  %15 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %2, align 8
  br label %19

19:                                               ; preds = %12, %11
  %20 = load i64, i64* %2, align 8
  ret i64 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_get_num_files(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %2, align 8
  %3 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %4 = icmp ne %struct.mz_zip_archive* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %6, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i32 [ %8, %5 ], [ 0, %9 ]
  ret i32 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_zip_get_archive_size(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i64 0, i64* %2, align 8
  br label %11

7:                                                ; preds = %1
  %8 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %2, align 8
  br label %11

11:                                               ; preds = %7, %6
  %12 = load i64, i64* %2, align 8
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_zip_get_archive_file_start_offset(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %7, i32 0, i32 15
  %9 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_internal_state_tag* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store i64 0, i64* %2, align 8
  br label %18

12:                                               ; preds = %6
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %13, i32 0, i32 15
  %15 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %15, i32 0, i32 7
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %2, align 8
  br label %18

18:                                               ; preds = %12, %11
  %19 = load i64, i64* %2, align 8
  ret i64 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @mz_zip_get_cfile(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %7, i32 0, i32 15
  %9 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_internal_state_tag* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6, %1
  store %struct._IO_FILE* null, %struct._IO_FILE** %2, align 8
  br label %18

12:                                               ; preds = %6
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %13, i32 0, i32 15
  %15 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %14, align 8
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %15, i32 0, i32 6
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %16, align 8
  store %struct._IO_FILE* %17, %struct._IO_FILE** %2, align 8
  br label %18

18:                                               ; preds = %12, %11
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  ret %struct._IO_FILE* %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mz_zip_read_archive_data(%struct.mz_zip_archive* noundef %0, i64 noundef %1, i8* noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.mz_zip_archive*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  %12 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %13 = icmp ne %struct.mz_zip_archive* %12, null
  br i1 %13, label %14, label %27

14:                                               ; preds = %4
  %15 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %16 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %15, i32 0, i32 15
  %17 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %16, align 8
  %18 = icmp ne %struct.mz_zip_internal_state_tag* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %14
  %20 = load i8*, i8** %10, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %23, i32 0, i32 11
  %25 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %24, align 8
  %26 = icmp ne i64 (i8*, i64, i8*, i64)* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %22, %19, %14, %4
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  store %struct.mz_zip_archive* %28, %struct.mz_zip_archive** %5, align 8
  store i32 24, i32* %6, align 4
  %29 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %30 = icmp ne %struct.mz_zip_archive* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = load i32, i32* %6, align 4
  %33 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %5, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %33, i32 0, i32 5
  store i32 %32, i32* %34, align 4
  br label %35

35:                                               ; preds = %27, %31
  %36 = sext i32 0 to i64
  store i64 %36, i64* %7, align 8
  br label %48

37:                                               ; preds = %22
  %38 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %38, i32 0, i32 11
  %40 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %39, align 8
  %41 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %41, i32 0, i32 14
  %43 = load i8*, i8** %42, align 8
  %44 = load i64, i64* %9, align 8
  %45 = load i8*, i8** %10, align 8
  %46 = load i64, i64* %11, align 8
  %47 = call i64 %40(i8* noundef %43, i64 noundef %44, i8* noundef %45, i64 noundef %46)
  store i64 %47, i64* %7, align 8
  br label %48

48:                                               ; preds = %37, %35
  %49 = load i64, i64* %7, align 8
  ret i64 %49
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_reader_get_filename(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.mz_zip_archive*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %11, align 8
  store i32 %1, i32* %12, align 4
  store i8* %2, i8** %13, align 8
  store i32 %3, i32* %14, align 4
  %17 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  %18 = load i32, i32* %12, align 4
  store %struct.mz_zip_archive* %17, %struct.mz_zip_archive** %6, align 8
  store i32 %18, i32* %7, align 4
  %19 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %20 = icmp ne %struct.mz_zip_archive* %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %4
  %22 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %22, i32 0, i32 15
  %24 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %23, align 8
  %25 = icmp ne %struct.mz_zip_internal_state_tag* %24, null
  br i1 %25, label %26, label %32

26:                                               ; preds = %21
  %27 = load i32, i32* %7, align 4
  %28 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp uge i32 %27, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %21, %4
  store i8* null, i8** %5, align 8
  br label %53

33:                                               ; preds = %26
  %34 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %34, i32 0, i32 15
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %35, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %40, i32 0, i32 15
  %42 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %41, align 8
  %43 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %42, i32 0, i32 1
  %44 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %43, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %7, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %39, i64 %51
  store i8* %52, i8** %5, align 8
  br label %53

53:                                               ; preds = %32, %33
  %54 = load i8*, i8** %5, align 8
  store i8* %54, i8** %16, align 8
  %55 = load i8*, i8** %16, align 8
  %56 = icmp ne i8* %55, null
  br i1 %56, label %72, label %57

57:                                               ; preds = %53
  %58 = load i32, i32* %14, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = load i8*, i8** %13, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  store i8 0, i8* %62, align 1
  br label %63

63:                                               ; preds = %60, %57
  %64 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %11, align 8
  store %struct.mz_zip_archive* %64, %struct.mz_zip_archive** %8, align 8
  store i32 24, i32* %9, align 4
  %65 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %66 = icmp ne %struct.mz_zip_archive* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = load i32, i32* %9, align 4
  %69 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %8, align 8
  %70 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %69, i32 0, i32 5
  store i32 %68, i32* %70, align 4
  br label %71

71:                                               ; preds = %63, %67
  store i32 0, i32* %10, align 4
  br label %111

72:                                               ; preds = %53
  %73 = load i8*, i8** %16, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 28
  %75 = getelementptr inbounds i8, i8* %74, i64 0
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = load i8*, i8** %16, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 28
  %80 = getelementptr inbounds i8, i8* %79, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl i32 %82, 8
  %84 = or i32 %77, %83
  store i32 %84, i32* %15, align 4
  %85 = load i32, i32* %14, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %108

87:                                               ; preds = %72
  %88 = load i32, i32* %15, align 4
  %89 = load i32, i32* %14, align 4
  %90 = sub i32 %89, 1
  %91 = icmp ult i32 %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = load i32, i32* %15, align 4
  br label %97

94:                                               ; preds = %87
  %95 = load i32, i32* %14, align 4
  %96 = sub i32 %95, 1
  br label %97

97:                                               ; preds = %94, %92
  %98 = phi i32 [ %93, %92 ], [ %96, %94 ]
  store i32 %98, i32* %15, align 4
  %99 = load i8*, i8** %13, align 8
  %100 = load i8*, i8** %16, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 46
  %102 = load i32, i32* %15, align 4
  %103 = zext i32 %102 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %101, i64 %103, i1 false)
  %104 = load i8*, i8** %13, align 8
  %105 = load i32, i32* %15, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  store i8 0, i8* %107, align 1
  br label %108

108:                                              ; preds = %97, %72
  %109 = load i32, i32* %15, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %10, align 4
  br label %111

111:                                              ; preds = %108, %71
  %112 = load i32, i32* %10, align 4
  ret i32 %112
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mz_zip_end(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.mz_zip_archive*, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %3, align 8
  %4 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %5 = icmp ne %struct.mz_zip_archive* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %30

7:                                                ; preds = %1
  %8 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %14 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive* noundef %13)
  store i32 %14, i32* %2, align 4
  br label %30

15:                                               ; preds = %7
  %16 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %17 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 3
  br i1 %24, label %25, label %28

25:                                               ; preds = %20, %15
  %26 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %3, align 8
  %27 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive* noundef %26)
  store i32 %27, i32* %2, align 4
  br label %30

28:                                               ; preds = %20
  br label %29

29:                                               ; preds = %28
  store i32 0, i32* %2, align 4
  br label %30

30:                                               ; preds = %29, %25, %12, %6
  %31 = load i32, i32* %2, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @tdefl_compress_block(%struct.tdefl_compressor* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.tdefl_compressor*, align 8
  %4 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %3, align 8
  call void @tdefl_start_static_block(%struct.tdefl_compressor* noundef %8)
  br label %11

9:                                                ; preds = %2
  %10 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %3, align 8
  call void @tdefl_start_dynamic_block(%struct.tdefl_compressor* noundef %10)
  br label %11

11:                                               ; preds = %9, %7
  %12 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %3, align 8
  %13 = call i32 @tdefl_compress_lz_codes(%struct.tdefl_compressor* noundef %12)
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tdefl_start_static_block(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  %7 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %8 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %7, i32 0, i32 38
  %9 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %8, i64 0, i64 0
  %10 = getelementptr inbounds [288 x i8], [288 x i8]* %9, i64 0, i64 0
  store i8* %10, i8** %4, align 8
  store i32 0, i32* %3, align 4
  br label %11

11:                                               ; preds = %17, %1
  %12 = load i32, i32* %3, align 4
  %13 = icmp ule i32 %12, 143
  br i1 %13, label %14, label %20

14:                                               ; preds = %11
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %16, i8** %4, align 8
  store i8 8, i8* %15, align 1
  br label %17

17:                                               ; preds = %14
  %18 = load i32, i32* %3, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %3, align 4
  br label %11, !llvm.loop !129

20:                                               ; preds = %11
  br label %21

21:                                               ; preds = %27, %20
  %22 = load i32, i32* %3, align 4
  %23 = icmp ule i32 %22, 255
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = load i8*, i8** %4, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %4, align 8
  store i8 9, i8* %25, align 1
  br label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  br label %21, !llvm.loop !130

30:                                               ; preds = %21
  br label %31

31:                                               ; preds = %37, %30
  %32 = load i32, i32* %3, align 4
  %33 = icmp ule i32 %32, 279
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load i8*, i8** %4, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %4, align 8
  store i8 7, i8* %35, align 1
  br label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %3, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %3, align 4
  br label %31, !llvm.loop !131

40:                                               ; preds = %31
  br label %41

41:                                               ; preds = %47, %40
  %42 = load i32, i32* %3, align 4
  %43 = icmp ule i32 %42, 287
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %4, align 8
  store i8 8, i8* %45, align 1
  br label %47

47:                                               ; preds = %44
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  br label %41, !llvm.loop !132

50:                                               ; preds = %41
  %51 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %52 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %51, i32 0, i32 38
  %53 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %52, i64 0, i64 1
  %54 = getelementptr inbounds [288 x i8], [288 x i8]* %53, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 2 %54, i8 5, i64 32, i1 false)
  %55 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* noundef %55, i32 noundef 0, i32 noundef 288, i32 noundef 15, i32 noundef 1)
  %56 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* noundef %56, i32 noundef 1, i32 noundef 32, i32 noundef 15, i32 noundef 1)
  br label %57

57:                                               ; preds = %50
  store i32 1, i32* %5, align 4
  store i32 2, i32* %6, align 4
  %58 = load i32, i32* %5, align 4
  %59 = load i32, i32* %6, align 4
  %60 = shl i32 1, %59
  %61 = sub i32 %60, 1
  %62 = icmp ule i32 %58, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  br label %65

64:                                               ; preds = %57
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1096, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.tdefl_start_static_block, i64 0, i64 0)) #8
  unreachable

65:                                               ; preds = %63
  %66 = load i32, i32* %5, align 4
  %67 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %68 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %67, i32 0, i32 16
  %69 = load i32, i32* %68, align 4
  %70 = shl i32 %66, %69
  %71 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %72 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %71, i32 0, i32 17
  %73 = load i32, i32* %72, align 8
  %74 = or i32 %73, %70
  store i32 %74, i32* %72, align 8
  %75 = load i32, i32* %6, align 4
  %76 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %76, i32 0, i32 16
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, %75
  store i32 %79, i32* %77, align 4
  br label %80

80:                                               ; preds = %102, %65
  %81 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %82 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %81, i32 0, i32 16
  %83 = load i32, i32* %82, align 4
  %84 = icmp uge i32 %83, 8
  br i1 %84, label %85, label %111

85:                                               ; preds = %80
  %86 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %87 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %86, i32 0, i32 11
  %88 = load i8*, i8** %87, align 8
  %89 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %90 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %89, i32 0, i32 12
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ult i8* %88, %91
  br i1 %92, label %93, label %102

93:                                               ; preds = %85
  %94 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %94, i32 0, i32 17
  %96 = load i32, i32* %95, align 8
  %97 = trunc i32 %96 to i8
  %98 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %98, i32 0, i32 11
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %99, align 8
  store i8 %97, i8* %100, align 1
  br label %102

102:                                              ; preds = %93, %85
  %103 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %104 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %103, i32 0, i32 17
  %105 = load i32, i32* %104, align 8
  %106 = lshr i32 %105, 8
  store i32 %106, i32* %104, align 8
  %107 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %108 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %107, i32 0, i32 16
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %109, 8
  store i32 %110, i32* %108, align 4
  br label %80, !llvm.loop !133

111:                                              ; preds = %80
  br label %112

112:                                              ; preds = %111
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tdefl_start_dynamic_block(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [320 x i8], align 16
  %13 = alloca [320 x i8], align 16
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  store i8 -1, i8* %14, align 1
  %31 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %32 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %31, i32 0, i32 36
  %33 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %32, i64 0, i64 0
  %34 = getelementptr inbounds [288 x i16], [288 x i16]* %33, i64 0, i64 256
  store i16 1, i16* %34, align 2
  %35 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* noundef %35, i32 noundef 0, i32 noundef 288, i32 noundef 15, i32 noundef 0)
  %36 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* noundef %36, i32 noundef 1, i32 noundef 32, i32 noundef 15, i32 noundef 0)
  store i32 286, i32* %3, align 4
  br label %37

37:                                               ; preds = %52, %1
  %38 = load i32, i32* %3, align 4
  %39 = icmp sgt i32 %38, 257
  br i1 %39, label %40, label %55

40:                                               ; preds = %37
  %41 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %41, i32 0, i32 38
  %43 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %42, i64 0, i64 0
  %44 = load i32, i32* %3, align 4
  %45 = sub nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [288 x i8], [288 x i8]* %43, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %40
  br label %55

51:                                               ; preds = %40
  br label %52

52:                                               ; preds = %51
  %53 = load i32, i32* %3, align 4
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %3, align 4
  br label %37, !llvm.loop !134

55:                                               ; preds = %50, %37
  store i32 30, i32* %4, align 4
  br label %56

56:                                               ; preds = %71, %55
  %57 = load i32, i32* %4, align 4
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %59, label %74

59:                                               ; preds = %56
  %60 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %60, i32 0, i32 38
  %62 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %61, i64 0, i64 1
  %63 = load i32, i32* %4, align 4
  %64 = sub nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [288 x i8], [288 x i8]* %62, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = icmp ne i8 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %59
  br label %74

70:                                               ; preds = %59
  br label %71

71:                                               ; preds = %70
  %72 = load i32, i32* %4, align 4
  %73 = add nsw i32 %72, -1
  store i32 %73, i32* %4, align 4
  br label %56, !llvm.loop !135

74:                                               ; preds = %69, %56
  %75 = getelementptr inbounds [320 x i8], [320 x i8]* %12, i64 0, i64 0
  %76 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %76, i32 0, i32 38
  %78 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %77, i64 0, i64 0
  %79 = getelementptr inbounds [288 x i8], [288 x i8]* %78, i64 0, i64 0
  %80 = load i32, i32* %3, align 4
  %81 = sext i32 %80 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %75, i8* align 2 %79, i64 %81, i1 false)
  %82 = getelementptr inbounds [320 x i8], [320 x i8]* %12, i64 0, i64 0
  %83 = load i32, i32* %3, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %87 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %86, i32 0, i32 38
  %88 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %87, i64 0, i64 1
  %89 = getelementptr inbounds [288 x i8], [288 x i8]* %88, i64 0, i64 0
  %90 = load i32, i32* %4, align 4
  %91 = sext i32 %90 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 2 %89, i64 %91, i1 false)
  %92 = load i32, i32* %3, align 4
  %93 = load i32, i32* %4, align 4
  %94 = add nsw i32 %92, %93
  store i32 %94, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %95 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %96 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %95, i32 0, i32 36
  %97 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %96, i64 0, i64 2
  %98 = getelementptr inbounds [288 x i16], [288 x i16]* %97, i64 0, i64 0
  %99 = bitcast i16* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %99, i8 0, i64 38, i1 false)
  store i32 0, i32* %6, align 4
  br label %100

100:                                              ; preds = %500, %74
  %101 = load i32, i32* %6, align 4
  %102 = load i32, i32* %7, align 4
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %104, label %503

104:                                              ; preds = %100
  %105 = load i32, i32* %6, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [320 x i8], [320 x i8]* %12, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  store i8 %108, i8* %15, align 1
  %109 = load i8, i8* %15, align 1
  %110 = icmp ne i8 %109, 0
  br i1 %110, label %260, label %111

111:                                              ; preds = %104
  %112 = load i32, i32* %10, align 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %171

114:                                              ; preds = %111
  %115 = load i32, i32* %10, align 4
  %116 = icmp ult i32 %115, 3
  br i1 %116, label %117, label %146

117:                                              ; preds = %114
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %118, i32 0, i32 36
  %120 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %119, i64 0, i64 2
  %121 = load i8, i8* %14, align 1
  %122 = zext i8 %121 to i64
  %123 = getelementptr inbounds [288 x i16], [288 x i16]* %120, i64 0, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = load i32, i32* %10, align 4
  %127 = add i32 %125, %126
  %128 = trunc i32 %127 to i16
  %129 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %130 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %129, i32 0, i32 36
  %131 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %130, i64 0, i64 2
  %132 = load i8, i8* %14, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [288 x i16], [288 x i16]* %131, i64 0, i64 %133
  store i16 %128, i16* %134, align 2
  br label %135

135:                                              ; preds = %139, %117
  %136 = load i32, i32* %10, align 4
  %137 = add i32 %136, -1
  store i32 %137, i32* %10, align 4
  %138 = icmp ne i32 %136, 0
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = load i8, i8* %14, align 1
  %141 = load i32, i32* %8, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %8, align 4
  %143 = zext i32 %141 to i64
  %144 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %143
  store i8 %140, i8* %144, align 1
  br label %135, !llvm.loop !136

145:                                              ; preds = %135
  br label %170

146:                                              ; preds = %114
  %147 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %148 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %147, i32 0, i32 36
  %149 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %148, i64 0, i64 2
  %150 = getelementptr inbounds [288 x i16], [288 x i16]* %149, i64 0, i64 16
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = add nsw i32 %152, 1
  %154 = trunc i32 %153 to i16
  %155 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %156 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %155, i32 0, i32 36
  %157 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %156, i64 0, i64 2
  %158 = getelementptr inbounds [288 x i16], [288 x i16]* %157, i64 0, i64 16
  store i16 %154, i16* %158, align 2
  %159 = load i32, i32* %8, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %8, align 4
  %161 = zext i32 %159 to i64
  %162 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %161
  store i8 16, i8* %162, align 1
  %163 = load i32, i32* %10, align 4
  %164 = sub i32 %163, 3
  %165 = trunc i32 %164 to i8
  %166 = load i32, i32* %8, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %8, align 4
  %168 = zext i32 %166 to i64
  %169 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %168
  store i8 %165, i8* %169, align 1
  br label %170

170:                                              ; preds = %146, %145
  store i32 0, i32* %10, align 4
  br label %171

171:                                              ; preds = %170, %111
  %172 = load i32, i32* %9, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %9, align 4
  %174 = icmp eq i32 %173, 138
  br i1 %174, label %175, label %259

175:                                              ; preds = %171
  %176 = load i32, i32* %9, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %258

178:                                              ; preds = %175
  %179 = load i32, i32* %9, align 4
  %180 = icmp ult i32 %179, 3
  br i1 %180, label %181, label %205

181:                                              ; preds = %178
  %182 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %183 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %182, i32 0, i32 36
  %184 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %183, i64 0, i64 2
  %185 = getelementptr inbounds [288 x i16], [288 x i16]* %184, i64 0, i64 0
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = load i32, i32* %9, align 4
  %189 = add i32 %187, %188
  %190 = trunc i32 %189 to i16
  %191 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %192 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %191, i32 0, i32 36
  %193 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %192, i64 0, i64 2
  %194 = getelementptr inbounds [288 x i16], [288 x i16]* %193, i64 0, i64 0
  store i16 %190, i16* %194, align 2
  br label %195

195:                                              ; preds = %199, %181
  %196 = load i32, i32* %9, align 4
  %197 = add i32 %196, -1
  store i32 %197, i32* %9, align 4
  %198 = icmp ne i32 %196, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %195
  %200 = load i32, i32* %8, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %8, align 4
  %202 = zext i32 %200 to i64
  %203 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %202
  store i8 0, i8* %203, align 1
  br label %195, !llvm.loop !137

204:                                              ; preds = %195
  br label %257

205:                                              ; preds = %178
  %206 = load i32, i32* %9, align 4
  %207 = icmp ule i32 %206, 10
  br i1 %207, label %208, label %232

208:                                              ; preds = %205
  %209 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %210 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %209, i32 0, i32 36
  %211 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %210, i64 0, i64 2
  %212 = getelementptr inbounds [288 x i16], [288 x i16]* %211, i64 0, i64 17
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = add nsw i32 %214, 1
  %216 = trunc i32 %215 to i16
  %217 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %218 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %217, i32 0, i32 36
  %219 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %218, i64 0, i64 2
  %220 = getelementptr inbounds [288 x i16], [288 x i16]* %219, i64 0, i64 17
  store i16 %216, i16* %220, align 2
  %221 = load i32, i32* %8, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %8, align 4
  %223 = zext i32 %221 to i64
  %224 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %223
  store i8 17, i8* %224, align 1
  %225 = load i32, i32* %9, align 4
  %226 = sub i32 %225, 3
  %227 = trunc i32 %226 to i8
  %228 = load i32, i32* %8, align 4
  %229 = add i32 %228, 1
  store i32 %229, i32* %8, align 4
  %230 = zext i32 %228 to i64
  %231 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %230
  store i8 %227, i8* %231, align 1
  br label %256

232:                                              ; preds = %205
  %233 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %234 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %233, i32 0, i32 36
  %235 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %234, i64 0, i64 2
  %236 = getelementptr inbounds [288 x i16], [288 x i16]* %235, i64 0, i64 18
  %237 = load i16, i16* %236, align 2
  %238 = zext i16 %237 to i32
  %239 = add nsw i32 %238, 1
  %240 = trunc i32 %239 to i16
  %241 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %242 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %241, i32 0, i32 36
  %243 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %242, i64 0, i64 2
  %244 = getelementptr inbounds [288 x i16], [288 x i16]* %243, i64 0, i64 18
  store i16 %240, i16* %244, align 2
  %245 = load i32, i32* %8, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %8, align 4
  %247 = zext i32 %245 to i64
  %248 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %247
  store i8 18, i8* %248, align 1
  %249 = load i32, i32* %9, align 4
  %250 = sub i32 %249, 11
  %251 = trunc i32 %250 to i8
  %252 = load i32, i32* %8, align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %8, align 4
  %254 = zext i32 %252 to i64
  %255 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %254
  store i8 %251, i8* %255, align 1
  br label %256

256:                                              ; preds = %232, %208
  br label %257

257:                                              ; preds = %256, %204
  store i32 0, i32* %9, align 4
  br label %258

258:                                              ; preds = %257, %175
  br label %259

259:                                              ; preds = %258, %171
  br label %498

260:                                              ; preds = %104
  %261 = load i32, i32* %9, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %343

263:                                              ; preds = %260
  %264 = load i32, i32* %9, align 4
  %265 = icmp ult i32 %264, 3
  br i1 %265, label %266, label %290

266:                                              ; preds = %263
  %267 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %268 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %267, i32 0, i32 36
  %269 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %268, i64 0, i64 2
  %270 = getelementptr inbounds [288 x i16], [288 x i16]* %269, i64 0, i64 0
  %271 = load i16, i16* %270, align 2
  %272 = zext i16 %271 to i32
  %273 = load i32, i32* %9, align 4
  %274 = add i32 %272, %273
  %275 = trunc i32 %274 to i16
  %276 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %277 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %276, i32 0, i32 36
  %278 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %277, i64 0, i64 2
  %279 = getelementptr inbounds [288 x i16], [288 x i16]* %278, i64 0, i64 0
  store i16 %275, i16* %279, align 2
  br label %280

280:                                              ; preds = %284, %266
  %281 = load i32, i32* %9, align 4
  %282 = add i32 %281, -1
  store i32 %282, i32* %9, align 4
  %283 = icmp ne i32 %281, 0
  br i1 %283, label %284, label %289

284:                                              ; preds = %280
  %285 = load i32, i32* %8, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %8, align 4
  %287 = zext i32 %285 to i64
  %288 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %287
  store i8 0, i8* %288, align 1
  br label %280, !llvm.loop !138

289:                                              ; preds = %280
  br label %342

290:                                              ; preds = %263
  %291 = load i32, i32* %9, align 4
  %292 = icmp ule i32 %291, 10
  br i1 %292, label %293, label %317

293:                                              ; preds = %290
  %294 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %295 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %294, i32 0, i32 36
  %296 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %295, i64 0, i64 2
  %297 = getelementptr inbounds [288 x i16], [288 x i16]* %296, i64 0, i64 17
  %298 = load i16, i16* %297, align 2
  %299 = zext i16 %298 to i32
  %300 = add nsw i32 %299, 1
  %301 = trunc i32 %300 to i16
  %302 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %303 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %302, i32 0, i32 36
  %304 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %303, i64 0, i64 2
  %305 = getelementptr inbounds [288 x i16], [288 x i16]* %304, i64 0, i64 17
  store i16 %301, i16* %305, align 2
  %306 = load i32, i32* %8, align 4
  %307 = add i32 %306, 1
  store i32 %307, i32* %8, align 4
  %308 = zext i32 %306 to i64
  %309 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %308
  store i8 17, i8* %309, align 1
  %310 = load i32, i32* %9, align 4
  %311 = sub i32 %310, 3
  %312 = trunc i32 %311 to i8
  %313 = load i32, i32* %8, align 4
  %314 = add i32 %313, 1
  store i32 %314, i32* %8, align 4
  %315 = zext i32 %313 to i64
  %316 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %315
  store i8 %312, i8* %316, align 1
  br label %341

317:                                              ; preds = %290
  %318 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %319 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %318, i32 0, i32 36
  %320 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %319, i64 0, i64 2
  %321 = getelementptr inbounds [288 x i16], [288 x i16]* %320, i64 0, i64 18
  %322 = load i16, i16* %321, align 2
  %323 = zext i16 %322 to i32
  %324 = add nsw i32 %323, 1
  %325 = trunc i32 %324 to i16
  %326 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %327 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %326, i32 0, i32 36
  %328 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %327, i64 0, i64 2
  %329 = getelementptr inbounds [288 x i16], [288 x i16]* %328, i64 0, i64 18
  store i16 %325, i16* %329, align 2
  %330 = load i32, i32* %8, align 4
  %331 = add i32 %330, 1
  store i32 %331, i32* %8, align 4
  %332 = zext i32 %330 to i64
  %333 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %332
  store i8 18, i8* %333, align 1
  %334 = load i32, i32* %9, align 4
  %335 = sub i32 %334, 11
  %336 = trunc i32 %335 to i8
  %337 = load i32, i32* %8, align 4
  %338 = add i32 %337, 1
  store i32 %338, i32* %8, align 4
  %339 = zext i32 %337 to i64
  %340 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %339
  store i8 %336, i8* %340, align 1
  br label %341

341:                                              ; preds = %317, %293
  br label %342

342:                                              ; preds = %341, %289
  store i32 0, i32* %9, align 4
  br label %343

343:                                              ; preds = %342, %260
  %344 = load i8, i8* %15, align 1
  %345 = zext i8 %344 to i32
  %346 = load i8, i8* %14, align 1
  %347 = zext i8 %346 to i32
  %348 = icmp ne i32 %345, %347
  br i1 %348, label %349, label %431

349:                                              ; preds = %343
  %350 = load i32, i32* %10, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %352, label %409

352:                                              ; preds = %349
  %353 = load i32, i32* %10, align 4
  %354 = icmp ult i32 %353, 3
  br i1 %354, label %355, label %384

355:                                              ; preds = %352
  %356 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %357 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %356, i32 0, i32 36
  %358 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %357, i64 0, i64 2
  %359 = load i8, i8* %14, align 1
  %360 = zext i8 %359 to i64
  %361 = getelementptr inbounds [288 x i16], [288 x i16]* %358, i64 0, i64 %360
  %362 = load i16, i16* %361, align 2
  %363 = zext i16 %362 to i32
  %364 = load i32, i32* %10, align 4
  %365 = add i32 %363, %364
  %366 = trunc i32 %365 to i16
  %367 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %368 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %367, i32 0, i32 36
  %369 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %368, i64 0, i64 2
  %370 = load i8, i8* %14, align 1
  %371 = zext i8 %370 to i64
  %372 = getelementptr inbounds [288 x i16], [288 x i16]* %369, i64 0, i64 %371
  store i16 %366, i16* %372, align 2
  br label %373

373:                                              ; preds = %377, %355
  %374 = load i32, i32* %10, align 4
  %375 = add i32 %374, -1
  store i32 %375, i32* %10, align 4
  %376 = icmp ne i32 %374, 0
  br i1 %376, label %377, label %383

377:                                              ; preds = %373
  %378 = load i8, i8* %14, align 1
  %379 = load i32, i32* %8, align 4
  %380 = add i32 %379, 1
  store i32 %380, i32* %8, align 4
  %381 = zext i32 %379 to i64
  %382 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %381
  store i8 %378, i8* %382, align 1
  br label %373, !llvm.loop !139

383:                                              ; preds = %373
  br label %408

384:                                              ; preds = %352
  %385 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %386 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %385, i32 0, i32 36
  %387 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %386, i64 0, i64 2
  %388 = getelementptr inbounds [288 x i16], [288 x i16]* %387, i64 0, i64 16
  %389 = load i16, i16* %388, align 2
  %390 = zext i16 %389 to i32
  %391 = add nsw i32 %390, 1
  %392 = trunc i32 %391 to i16
  %393 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %394 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %393, i32 0, i32 36
  %395 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %394, i64 0, i64 2
  %396 = getelementptr inbounds [288 x i16], [288 x i16]* %395, i64 0, i64 16
  store i16 %392, i16* %396, align 2
  %397 = load i32, i32* %8, align 4
  %398 = add i32 %397, 1
  store i32 %398, i32* %8, align 4
  %399 = zext i32 %397 to i64
  %400 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %399
  store i8 16, i8* %400, align 1
  %401 = load i32, i32* %10, align 4
  %402 = sub i32 %401, 3
  %403 = trunc i32 %402 to i8
  %404 = load i32, i32* %8, align 4
  %405 = add i32 %404, 1
  store i32 %405, i32* %8, align 4
  %406 = zext i32 %404 to i64
  %407 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %406
  store i8 %403, i8* %407, align 1
  br label %408

408:                                              ; preds = %384, %383
  store i32 0, i32* %10, align 4
  br label %409

409:                                              ; preds = %408, %349
  %410 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %411 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %410, i32 0, i32 36
  %412 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %411, i64 0, i64 2
  %413 = load i8, i8* %15, align 1
  %414 = zext i8 %413 to i64
  %415 = getelementptr inbounds [288 x i16], [288 x i16]* %412, i64 0, i64 %414
  %416 = load i16, i16* %415, align 2
  %417 = zext i16 %416 to i32
  %418 = add nsw i32 %417, 1
  %419 = trunc i32 %418 to i16
  %420 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %421 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %420, i32 0, i32 36
  %422 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %421, i64 0, i64 2
  %423 = load i8, i8* %15, align 1
  %424 = zext i8 %423 to i64
  %425 = getelementptr inbounds [288 x i16], [288 x i16]* %422, i64 0, i64 %424
  store i16 %419, i16* %425, align 2
  %426 = load i8, i8* %15, align 1
  %427 = load i32, i32* %8, align 4
  %428 = add i32 %427, 1
  store i32 %428, i32* %8, align 4
  %429 = zext i32 %427 to i64
  %430 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %429
  store i8 %426, i8* %430, align 1
  br label %497

431:                                              ; preds = %343
  %432 = load i32, i32* %10, align 4
  %433 = add i32 %432, 1
  store i32 %433, i32* %10, align 4
  %434 = icmp eq i32 %433, 6
  br i1 %434, label %435, label %496

435:                                              ; preds = %431
  %436 = load i32, i32* %10, align 4
  %437 = icmp ne i32 %436, 0
  br i1 %437, label %438, label %495

438:                                              ; preds = %435
  %439 = load i32, i32* %10, align 4
  %440 = icmp ult i32 %439, 3
  br i1 %440, label %441, label %470

441:                                              ; preds = %438
  %442 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %443 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %442, i32 0, i32 36
  %444 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %443, i64 0, i64 2
  %445 = load i8, i8* %14, align 1
  %446 = zext i8 %445 to i64
  %447 = getelementptr inbounds [288 x i16], [288 x i16]* %444, i64 0, i64 %446
  %448 = load i16, i16* %447, align 2
  %449 = zext i16 %448 to i32
  %450 = load i32, i32* %10, align 4
  %451 = add i32 %449, %450
  %452 = trunc i32 %451 to i16
  %453 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %454 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %453, i32 0, i32 36
  %455 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %454, i64 0, i64 2
  %456 = load i8, i8* %14, align 1
  %457 = zext i8 %456 to i64
  %458 = getelementptr inbounds [288 x i16], [288 x i16]* %455, i64 0, i64 %457
  store i16 %452, i16* %458, align 2
  br label %459

459:                                              ; preds = %463, %441
  %460 = load i32, i32* %10, align 4
  %461 = add i32 %460, -1
  store i32 %461, i32* %10, align 4
  %462 = icmp ne i32 %460, 0
  br i1 %462, label %463, label %469

463:                                              ; preds = %459
  %464 = load i8, i8* %14, align 1
  %465 = load i32, i32* %8, align 4
  %466 = add i32 %465, 1
  store i32 %466, i32* %8, align 4
  %467 = zext i32 %465 to i64
  %468 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %467
  store i8 %464, i8* %468, align 1
  br label %459, !llvm.loop !140

469:                                              ; preds = %459
  br label %494

470:                                              ; preds = %438
  %471 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %472 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %471, i32 0, i32 36
  %473 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %472, i64 0, i64 2
  %474 = getelementptr inbounds [288 x i16], [288 x i16]* %473, i64 0, i64 16
  %475 = load i16, i16* %474, align 2
  %476 = zext i16 %475 to i32
  %477 = add nsw i32 %476, 1
  %478 = trunc i32 %477 to i16
  %479 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %480 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %479, i32 0, i32 36
  %481 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %480, i64 0, i64 2
  %482 = getelementptr inbounds [288 x i16], [288 x i16]* %481, i64 0, i64 16
  store i16 %478, i16* %482, align 2
  %483 = load i32, i32* %8, align 4
  %484 = add i32 %483, 1
  store i32 %484, i32* %8, align 4
  %485 = zext i32 %483 to i64
  %486 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %485
  store i8 16, i8* %486, align 1
  %487 = load i32, i32* %10, align 4
  %488 = sub i32 %487, 3
  %489 = trunc i32 %488 to i8
  %490 = load i32, i32* %8, align 4
  %491 = add i32 %490, 1
  store i32 %491, i32* %8, align 4
  %492 = zext i32 %490 to i64
  %493 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %492
  store i8 %489, i8* %493, align 1
  br label %494

494:                                              ; preds = %470, %469
  store i32 0, i32* %10, align 4
  br label %495

495:                                              ; preds = %494, %435
  br label %496

496:                                              ; preds = %495, %431
  br label %497

497:                                              ; preds = %496, %409
  br label %498

498:                                              ; preds = %497, %259
  %499 = load i8, i8* %15, align 1
  store i8 %499, i8* %14, align 1
  br label %500

500:                                              ; preds = %498
  %501 = load i32, i32* %6, align 4
  %502 = add i32 %501, 1
  store i32 %502, i32* %6, align 4
  br label %100, !llvm.loop !141

503:                                              ; preds = %100
  %504 = load i32, i32* %10, align 4
  %505 = icmp ne i32 %504, 0
  br i1 %505, label %506, label %567

506:                                              ; preds = %503
  %507 = load i32, i32* %10, align 4
  %508 = icmp ne i32 %507, 0
  br i1 %508, label %509, label %566

509:                                              ; preds = %506
  %510 = load i32, i32* %10, align 4
  %511 = icmp ult i32 %510, 3
  br i1 %511, label %512, label %541

512:                                              ; preds = %509
  %513 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %514 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %513, i32 0, i32 36
  %515 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %514, i64 0, i64 2
  %516 = load i8, i8* %14, align 1
  %517 = zext i8 %516 to i64
  %518 = getelementptr inbounds [288 x i16], [288 x i16]* %515, i64 0, i64 %517
  %519 = load i16, i16* %518, align 2
  %520 = zext i16 %519 to i32
  %521 = load i32, i32* %10, align 4
  %522 = add i32 %520, %521
  %523 = trunc i32 %522 to i16
  %524 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %525 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %524, i32 0, i32 36
  %526 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %525, i64 0, i64 2
  %527 = load i8, i8* %14, align 1
  %528 = zext i8 %527 to i64
  %529 = getelementptr inbounds [288 x i16], [288 x i16]* %526, i64 0, i64 %528
  store i16 %523, i16* %529, align 2
  br label %530

530:                                              ; preds = %534, %512
  %531 = load i32, i32* %10, align 4
  %532 = add i32 %531, -1
  store i32 %532, i32* %10, align 4
  %533 = icmp ne i32 %531, 0
  br i1 %533, label %534, label %540

534:                                              ; preds = %530
  %535 = load i8, i8* %14, align 1
  %536 = load i32, i32* %8, align 4
  %537 = add i32 %536, 1
  store i32 %537, i32* %8, align 4
  %538 = zext i32 %536 to i64
  %539 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %538
  store i8 %535, i8* %539, align 1
  br label %530, !llvm.loop !142

540:                                              ; preds = %530
  br label %565

541:                                              ; preds = %509
  %542 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %543 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %542, i32 0, i32 36
  %544 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %543, i64 0, i64 2
  %545 = getelementptr inbounds [288 x i16], [288 x i16]* %544, i64 0, i64 16
  %546 = load i16, i16* %545, align 2
  %547 = zext i16 %546 to i32
  %548 = add nsw i32 %547, 1
  %549 = trunc i32 %548 to i16
  %550 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %551 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %550, i32 0, i32 36
  %552 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %551, i64 0, i64 2
  %553 = getelementptr inbounds [288 x i16], [288 x i16]* %552, i64 0, i64 16
  store i16 %549, i16* %553, align 2
  %554 = load i32, i32* %8, align 4
  %555 = add i32 %554, 1
  store i32 %555, i32* %8, align 4
  %556 = zext i32 %554 to i64
  %557 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %556
  store i8 16, i8* %557, align 1
  %558 = load i32, i32* %10, align 4
  %559 = sub i32 %558, 3
  %560 = trunc i32 %559 to i8
  %561 = load i32, i32* %8, align 4
  %562 = add i32 %561, 1
  store i32 %562, i32* %8, align 4
  %563 = zext i32 %561 to i64
  %564 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %563
  store i8 %560, i8* %564, align 1
  br label %565

565:                                              ; preds = %541, %540
  store i32 0, i32* %10, align 4
  br label %566

566:                                              ; preds = %565, %506
  br label %651

567:                                              ; preds = %503
  %568 = load i32, i32* %9, align 4
  %569 = icmp ne i32 %568, 0
  br i1 %569, label %570, label %650

570:                                              ; preds = %567
  %571 = load i32, i32* %9, align 4
  %572 = icmp ult i32 %571, 3
  br i1 %572, label %573, label %597

573:                                              ; preds = %570
  %574 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %575 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %574, i32 0, i32 36
  %576 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %575, i64 0, i64 2
  %577 = getelementptr inbounds [288 x i16], [288 x i16]* %576, i64 0, i64 0
  %578 = load i16, i16* %577, align 2
  %579 = zext i16 %578 to i32
  %580 = load i32, i32* %9, align 4
  %581 = add i32 %579, %580
  %582 = trunc i32 %581 to i16
  %583 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %584 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %583, i32 0, i32 36
  %585 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %584, i64 0, i64 2
  %586 = getelementptr inbounds [288 x i16], [288 x i16]* %585, i64 0, i64 0
  store i16 %582, i16* %586, align 2
  br label %587

587:                                              ; preds = %591, %573
  %588 = load i32, i32* %9, align 4
  %589 = add i32 %588, -1
  store i32 %589, i32* %9, align 4
  %590 = icmp ne i32 %588, 0
  br i1 %590, label %591, label %596

591:                                              ; preds = %587
  %592 = load i32, i32* %8, align 4
  %593 = add i32 %592, 1
  store i32 %593, i32* %8, align 4
  %594 = zext i32 %592 to i64
  %595 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %594
  store i8 0, i8* %595, align 1
  br label %587, !llvm.loop !143

596:                                              ; preds = %587
  br label %649

597:                                              ; preds = %570
  %598 = load i32, i32* %9, align 4
  %599 = icmp ule i32 %598, 10
  br i1 %599, label %600, label %624

600:                                              ; preds = %597
  %601 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %602 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %601, i32 0, i32 36
  %603 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %602, i64 0, i64 2
  %604 = getelementptr inbounds [288 x i16], [288 x i16]* %603, i64 0, i64 17
  %605 = load i16, i16* %604, align 2
  %606 = zext i16 %605 to i32
  %607 = add nsw i32 %606, 1
  %608 = trunc i32 %607 to i16
  %609 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %610 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %609, i32 0, i32 36
  %611 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %610, i64 0, i64 2
  %612 = getelementptr inbounds [288 x i16], [288 x i16]* %611, i64 0, i64 17
  store i16 %608, i16* %612, align 2
  %613 = load i32, i32* %8, align 4
  %614 = add i32 %613, 1
  store i32 %614, i32* %8, align 4
  %615 = zext i32 %613 to i64
  %616 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %615
  store i8 17, i8* %616, align 1
  %617 = load i32, i32* %9, align 4
  %618 = sub i32 %617, 3
  %619 = trunc i32 %618 to i8
  %620 = load i32, i32* %8, align 4
  %621 = add i32 %620, 1
  store i32 %621, i32* %8, align 4
  %622 = zext i32 %620 to i64
  %623 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %622
  store i8 %619, i8* %623, align 1
  br label %648

624:                                              ; preds = %597
  %625 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %626 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %625, i32 0, i32 36
  %627 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %626, i64 0, i64 2
  %628 = getelementptr inbounds [288 x i16], [288 x i16]* %627, i64 0, i64 18
  %629 = load i16, i16* %628, align 2
  %630 = zext i16 %629 to i32
  %631 = add nsw i32 %630, 1
  %632 = trunc i32 %631 to i16
  %633 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %634 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %633, i32 0, i32 36
  %635 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %634, i64 0, i64 2
  %636 = getelementptr inbounds [288 x i16], [288 x i16]* %635, i64 0, i64 18
  store i16 %632, i16* %636, align 2
  %637 = load i32, i32* %8, align 4
  %638 = add i32 %637, 1
  store i32 %638, i32* %8, align 4
  %639 = zext i32 %637 to i64
  %640 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %639
  store i8 18, i8* %640, align 1
  %641 = load i32, i32* %9, align 4
  %642 = sub i32 %641, 11
  %643 = trunc i32 %642 to i8
  %644 = load i32, i32* %8, align 4
  %645 = add i32 %644, 1
  store i32 %645, i32* %8, align 4
  %646 = zext i32 %644 to i64
  %647 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %646
  store i8 %643, i8* %647, align 1
  br label %648

648:                                              ; preds = %624, %600
  br label %649

649:                                              ; preds = %648, %596
  store i32 0, i32* %9, align 4
  br label %650

650:                                              ; preds = %649, %567
  br label %651

651:                                              ; preds = %650, %566
  %652 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* noundef %652, i32 noundef 2, i32 noundef 19, i32 noundef 7, i32 noundef 0)
  br label %653

653:                                              ; preds = %651
  store i32 2, i32* %16, align 4
  store i32 2, i32* %17, align 4
  %654 = load i32, i32* %16, align 4
  %655 = load i32, i32* %17, align 4
  %656 = shl i32 1, %655
  %657 = sub i32 %656, 1
  %658 = icmp ule i32 %654, %657
  br i1 %658, label %659, label %660

659:                                              ; preds = %653
  br label %661

660:                                              ; preds = %653
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1054, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

661:                                              ; preds = %659
  %662 = load i32, i32* %16, align 4
  %663 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %664 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %663, i32 0, i32 16
  %665 = load i32, i32* %664, align 4
  %666 = shl i32 %662, %665
  %667 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %668 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %667, i32 0, i32 17
  %669 = load i32, i32* %668, align 8
  %670 = or i32 %669, %666
  store i32 %670, i32* %668, align 8
  %671 = load i32, i32* %17, align 4
  %672 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %673 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %672, i32 0, i32 16
  %674 = load i32, i32* %673, align 4
  %675 = add i32 %674, %671
  store i32 %675, i32* %673, align 4
  br label %676

676:                                              ; preds = %698, %661
  %677 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %678 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %677, i32 0, i32 16
  %679 = load i32, i32* %678, align 4
  %680 = icmp uge i32 %679, 8
  br i1 %680, label %681, label %707

681:                                              ; preds = %676
  %682 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %683 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %682, i32 0, i32 11
  %684 = load i8*, i8** %683, align 8
  %685 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %686 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %685, i32 0, i32 12
  %687 = load i8*, i8** %686, align 8
  %688 = icmp ult i8* %684, %687
  br i1 %688, label %689, label %698

689:                                              ; preds = %681
  %690 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %691 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %690, i32 0, i32 17
  %692 = load i32, i32* %691, align 8
  %693 = trunc i32 %692 to i8
  %694 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %695 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %694, i32 0, i32 11
  %696 = load i8*, i8** %695, align 8
  %697 = getelementptr inbounds i8, i8* %696, i32 1
  store i8* %697, i8** %695, align 8
  store i8 %693, i8* %696, align 1
  br label %698

698:                                              ; preds = %689, %681
  %699 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %700 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %699, i32 0, i32 17
  %701 = load i32, i32* %700, align 8
  %702 = lshr i32 %701, 8
  store i32 %702, i32* %700, align 8
  %703 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %704 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %703, i32 0, i32 16
  %705 = load i32, i32* %704, align 4
  %706 = sub i32 %705, 8
  store i32 %706, i32* %704, align 4
  br label %676, !llvm.loop !144

707:                                              ; preds = %676
  br label %708

708:                                              ; preds = %707
  br label %709

709:                                              ; preds = %708
  %710 = load i32, i32* %3, align 4
  %711 = sub nsw i32 %710, 257
  store i32 %711, i32* %18, align 4
  store i32 5, i32* %19, align 4
  %712 = load i32, i32* %18, align 4
  %713 = load i32, i32* %19, align 4
  %714 = shl i32 1, %713
  %715 = sub i32 %714, 1
  %716 = icmp ule i32 %712, %715
  br i1 %716, label %717, label %718

717:                                              ; preds = %709
  br label %719

718:                                              ; preds = %709
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1056, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

719:                                              ; preds = %717
  %720 = load i32, i32* %18, align 4
  %721 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %722 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %721, i32 0, i32 16
  %723 = load i32, i32* %722, align 4
  %724 = shl i32 %720, %723
  %725 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %726 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %725, i32 0, i32 17
  %727 = load i32, i32* %726, align 8
  %728 = or i32 %727, %724
  store i32 %728, i32* %726, align 8
  %729 = load i32, i32* %19, align 4
  %730 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %731 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %730, i32 0, i32 16
  %732 = load i32, i32* %731, align 4
  %733 = add i32 %732, %729
  store i32 %733, i32* %731, align 4
  br label %734

734:                                              ; preds = %756, %719
  %735 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %736 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %735, i32 0, i32 16
  %737 = load i32, i32* %736, align 4
  %738 = icmp uge i32 %737, 8
  br i1 %738, label %739, label %765

739:                                              ; preds = %734
  %740 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %741 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %740, i32 0, i32 11
  %742 = load i8*, i8** %741, align 8
  %743 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %744 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %743, i32 0, i32 12
  %745 = load i8*, i8** %744, align 8
  %746 = icmp ult i8* %742, %745
  br i1 %746, label %747, label %756

747:                                              ; preds = %739
  %748 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %749 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %748, i32 0, i32 17
  %750 = load i32, i32* %749, align 8
  %751 = trunc i32 %750 to i8
  %752 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %753 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %752, i32 0, i32 11
  %754 = load i8*, i8** %753, align 8
  %755 = getelementptr inbounds i8, i8* %754, i32 1
  store i8* %755, i8** %753, align 8
  store i8 %751, i8* %754, align 1
  br label %756

756:                                              ; preds = %747, %739
  %757 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %758 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %757, i32 0, i32 17
  %759 = load i32, i32* %758, align 8
  %760 = lshr i32 %759, 8
  store i32 %760, i32* %758, align 8
  %761 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %762 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %761, i32 0, i32 16
  %763 = load i32, i32* %762, align 4
  %764 = sub i32 %763, 8
  store i32 %764, i32* %762, align 4
  br label %734, !llvm.loop !145

765:                                              ; preds = %734
  br label %766

766:                                              ; preds = %765
  br label %767

767:                                              ; preds = %766
  %768 = load i32, i32* %4, align 4
  %769 = sub nsw i32 %768, 1
  store i32 %769, i32* %20, align 4
  store i32 5, i32* %21, align 4
  %770 = load i32, i32* %20, align 4
  %771 = load i32, i32* %21, align 4
  %772 = shl i32 1, %771
  %773 = sub i32 %772, 1
  %774 = icmp ule i32 %770, %773
  br i1 %774, label %775, label %776

775:                                              ; preds = %767
  br label %777

776:                                              ; preds = %767
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1057, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

777:                                              ; preds = %775
  %778 = load i32, i32* %20, align 4
  %779 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %780 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %779, i32 0, i32 16
  %781 = load i32, i32* %780, align 4
  %782 = shl i32 %778, %781
  %783 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %784 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %783, i32 0, i32 17
  %785 = load i32, i32* %784, align 8
  %786 = or i32 %785, %782
  store i32 %786, i32* %784, align 8
  %787 = load i32, i32* %21, align 4
  %788 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %789 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %788, i32 0, i32 16
  %790 = load i32, i32* %789, align 4
  %791 = add i32 %790, %787
  store i32 %791, i32* %789, align 4
  br label %792

792:                                              ; preds = %814, %777
  %793 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %794 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %793, i32 0, i32 16
  %795 = load i32, i32* %794, align 4
  %796 = icmp uge i32 %795, 8
  br i1 %796, label %797, label %823

797:                                              ; preds = %792
  %798 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %799 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %798, i32 0, i32 11
  %800 = load i8*, i8** %799, align 8
  %801 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %802 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %801, i32 0, i32 12
  %803 = load i8*, i8** %802, align 8
  %804 = icmp ult i8* %800, %803
  br i1 %804, label %805, label %814

805:                                              ; preds = %797
  %806 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %807 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %806, i32 0, i32 17
  %808 = load i32, i32* %807, align 8
  %809 = trunc i32 %808 to i8
  %810 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %811 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %810, i32 0, i32 11
  %812 = load i8*, i8** %811, align 8
  %813 = getelementptr inbounds i8, i8* %812, i32 1
  store i8* %813, i8** %811, align 8
  store i8 %809, i8* %812, align 1
  br label %814

814:                                              ; preds = %805, %797
  %815 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %816 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %815, i32 0, i32 17
  %817 = load i32, i32* %816, align 8
  %818 = lshr i32 %817, 8
  store i32 %818, i32* %816, align 8
  %819 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %820 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %819, i32 0, i32 16
  %821 = load i32, i32* %820, align 4
  %822 = sub i32 %821, 8
  store i32 %822, i32* %820, align 4
  br label %792, !llvm.loop !146

823:                                              ; preds = %792
  br label %824

824:                                              ; preds = %823
  store i32 18, i32* %5, align 4
  br label %825

825:                                              ; preds = %842, %824
  %826 = load i32, i32* %5, align 4
  %827 = icmp sge i32 %826, 0
  br i1 %827, label %828, label %845

828:                                              ; preds = %825
  %829 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %830 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %829, i32 0, i32 38
  %831 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %830, i64 0, i64 2
  %832 = load i32, i32* %5, align 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds [19 x i8], [19 x i8]* @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %833
  %835 = load i8, i8* %834, align 1
  %836 = zext i8 %835 to i64
  %837 = getelementptr inbounds [288 x i8], [288 x i8]* %831, i64 0, i64 %836
  %838 = load i8, i8* %837, align 1
  %839 = icmp ne i8 %838, 0
  br i1 %839, label %840, label %841

840:                                              ; preds = %828
  br label %845

841:                                              ; preds = %828
  br label %842

842:                                              ; preds = %841
  %843 = load i32, i32* %5, align 4
  %844 = add nsw i32 %843, -1
  store i32 %844, i32* %5, align 4
  br label %825, !llvm.loop !147

845:                                              ; preds = %840, %825
  %846 = load i32, i32* %5, align 4
  %847 = add nsw i32 %846, 1
  %848 = icmp sgt i32 4, %847
  br i1 %848, label %849, label %850

849:                                              ; preds = %845
  br label %853

850:                                              ; preds = %845
  %851 = load i32, i32* %5, align 4
  %852 = add nsw i32 %851, 1
  br label %853

853:                                              ; preds = %850, %849
  %854 = phi i32 [ 4, %849 ], [ %852, %850 ]
  store i32 %854, i32* %5, align 4
  br label %855

855:                                              ; preds = %853
  %856 = load i32, i32* %5, align 4
  %857 = sub nsw i32 %856, 4
  store i32 %857, i32* %22, align 4
  store i32 4, i32* %23, align 4
  %858 = load i32, i32* %22, align 4
  %859 = load i32, i32* %23, align 4
  %860 = shl i32 1, %859
  %861 = sub i32 %860, 1
  %862 = icmp ule i32 %858, %861
  br i1 %862, label %863, label %864

863:                                              ; preds = %855
  br label %865

864:                                              ; preds = %855
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

865:                                              ; preds = %863
  %866 = load i32, i32* %22, align 4
  %867 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %868 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %867, i32 0, i32 16
  %869 = load i32, i32* %868, align 4
  %870 = shl i32 %866, %869
  %871 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %872 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %871, i32 0, i32 17
  %873 = load i32, i32* %872, align 8
  %874 = or i32 %873, %870
  store i32 %874, i32* %872, align 8
  %875 = load i32, i32* %23, align 4
  %876 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %877 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %876, i32 0, i32 16
  %878 = load i32, i32* %877, align 4
  %879 = add i32 %878, %875
  store i32 %879, i32* %877, align 4
  br label %880

880:                                              ; preds = %902, %865
  %881 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %882 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %881, i32 0, i32 16
  %883 = load i32, i32* %882, align 4
  %884 = icmp uge i32 %883, 8
  br i1 %884, label %885, label %911

885:                                              ; preds = %880
  %886 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %887 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %886, i32 0, i32 11
  %888 = load i8*, i8** %887, align 8
  %889 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %890 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %889, i32 0, i32 12
  %891 = load i8*, i8** %890, align 8
  %892 = icmp ult i8* %888, %891
  br i1 %892, label %893, label %902

893:                                              ; preds = %885
  %894 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %895 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %894, i32 0, i32 17
  %896 = load i32, i32* %895, align 8
  %897 = trunc i32 %896 to i8
  %898 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %899 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %898, i32 0, i32 11
  %900 = load i8*, i8** %899, align 8
  %901 = getelementptr inbounds i8, i8* %900, i32 1
  store i8* %901, i8** %899, align 8
  store i8 %897, i8* %900, align 1
  br label %902

902:                                              ; preds = %893, %885
  %903 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %904 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %903, i32 0, i32 17
  %905 = load i32, i32* %904, align 8
  %906 = lshr i32 %905, 8
  store i32 %906, i32* %904, align 8
  %907 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %908 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %907, i32 0, i32 16
  %909 = load i32, i32* %908, align 4
  %910 = sub i32 %909, 8
  store i32 %910, i32* %908, align 4
  br label %880, !llvm.loop !148

911:                                              ; preds = %880
  br label %912

912:                                              ; preds = %911
  store i32 0, i32* %6, align 4
  br label %913

913:                                              ; preds = %985, %912
  %914 = load i32, i32* %6, align 4
  %915 = load i32, i32* %5, align 4
  %916 = icmp slt i32 %914, %915
  br i1 %916, label %917, label %988

917:                                              ; preds = %913
  br label %918

918:                                              ; preds = %917
  %919 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %920 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %919, i32 0, i32 38
  %921 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %920, i64 0, i64 2
  %922 = load i32, i32* %6, align 4
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds [19 x i8], [19 x i8]* @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %923
  %925 = load i8, i8* %924, align 1
  %926 = zext i8 %925 to i64
  %927 = getelementptr inbounds [288 x i8], [288 x i8]* %921, i64 0, i64 %926
  %928 = load i8, i8* %927, align 1
  %929 = zext i8 %928 to i32
  store i32 %929, i32* %24, align 4
  store i32 3, i32* %25, align 4
  %930 = load i32, i32* %24, align 4
  %931 = load i32, i32* %25, align 4
  %932 = shl i32 1, %931
  %933 = sub i32 %932, 1
  %934 = icmp ule i32 %930, %933
  br i1 %934, label %935, label %936

935:                                              ; preds = %918
  br label %937

936:                                              ; preds = %918
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1065, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

937:                                              ; preds = %935
  %938 = load i32, i32* %24, align 4
  %939 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %940 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %939, i32 0, i32 16
  %941 = load i32, i32* %940, align 4
  %942 = shl i32 %938, %941
  %943 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %944 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %943, i32 0, i32 17
  %945 = load i32, i32* %944, align 8
  %946 = or i32 %945, %942
  store i32 %946, i32* %944, align 8
  %947 = load i32, i32* %25, align 4
  %948 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %949 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %948, i32 0, i32 16
  %950 = load i32, i32* %949, align 4
  %951 = add i32 %950, %947
  store i32 %951, i32* %949, align 4
  br label %952

952:                                              ; preds = %974, %937
  %953 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %954 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %953, i32 0, i32 16
  %955 = load i32, i32* %954, align 4
  %956 = icmp uge i32 %955, 8
  br i1 %956, label %957, label %983

957:                                              ; preds = %952
  %958 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %959 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %958, i32 0, i32 11
  %960 = load i8*, i8** %959, align 8
  %961 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %962 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %961, i32 0, i32 12
  %963 = load i8*, i8** %962, align 8
  %964 = icmp ult i8* %960, %963
  br i1 %964, label %965, label %974

965:                                              ; preds = %957
  %966 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %967 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %966, i32 0, i32 17
  %968 = load i32, i32* %967, align 8
  %969 = trunc i32 %968 to i8
  %970 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %971 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %970, i32 0, i32 11
  %972 = load i8*, i8** %971, align 8
  %973 = getelementptr inbounds i8, i8* %972, i32 1
  store i8* %973, i8** %971, align 8
  store i8 %969, i8* %972, align 1
  br label %974

974:                                              ; preds = %965, %957
  %975 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %976 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %975, i32 0, i32 17
  %977 = load i32, i32* %976, align 8
  %978 = lshr i32 %977, 8
  store i32 %978, i32* %976, align 8
  %979 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %980 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %979, i32 0, i32 16
  %981 = load i32, i32* %980, align 4
  %982 = sub i32 %981, 8
  store i32 %982, i32* %980, align 4
  br label %952, !llvm.loop !149

983:                                              ; preds = %952
  br label %984

984:                                              ; preds = %983
  br label %985

985:                                              ; preds = %984
  %986 = load i32, i32* %6, align 4
  %987 = add i32 %986, 1
  store i32 %987, i32* %6, align 4
  br label %913, !llvm.loop !150

988:                                              ; preds = %913
  store i32 0, i32* %11, align 4
  br label %989

989:                                              ; preds = %1148, %988
  %990 = load i32, i32* %11, align 4
  %991 = load i32, i32* %8, align 4
  %992 = icmp ult i32 %990, %991
  br i1 %992, label %993, label %1149

993:                                              ; preds = %989
  %994 = load i32, i32* %11, align 4
  %995 = add i32 %994, 1
  store i32 %995, i32* %11, align 4
  %996 = zext i32 %994 to i64
  %997 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %996
  %998 = load i8, i8* %997, align 1
  %999 = zext i8 %998 to i32
  store i32 %999, i32* %26, align 4
  %1000 = load i32, i32* %26, align 4
  %1001 = icmp ult i32 %1000, 19
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %993
  br label %1004

1003:                                             ; preds = %993
  call void @__assert_fail(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.65, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1070, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

1004:                                             ; preds = %1002
  br label %1005

1005:                                             ; preds = %1004
  %1006 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1007 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1006, i32 0, i32 37
  %1008 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1007, i64 0, i64 2
  %1009 = load i32, i32* %26, align 4
  %1010 = zext i32 %1009 to i64
  %1011 = getelementptr inbounds [288 x i16], [288 x i16]* %1008, i64 0, i64 %1010
  %1012 = load i16, i16* %1011, align 2
  %1013 = zext i16 %1012 to i32
  store i32 %1013, i32* %27, align 4
  %1014 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1015 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1014, i32 0, i32 38
  %1016 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %1015, i64 0, i64 2
  %1017 = load i32, i32* %26, align 4
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [288 x i8], [288 x i8]* %1016, i64 0, i64 %1018
  %1020 = load i8, i8* %1019, align 1
  %1021 = zext i8 %1020 to i32
  store i32 %1021, i32* %28, align 4
  %1022 = load i32, i32* %27, align 4
  %1023 = load i32, i32* %28, align 4
  %1024 = shl i32 1, %1023
  %1025 = sub i32 %1024, 1
  %1026 = icmp ule i32 %1022, %1025
  br i1 %1026, label %1027, label %1028

1027:                                             ; preds = %1005
  br label %1029

1028:                                             ; preds = %1005
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1071, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

1029:                                             ; preds = %1027
  %1030 = load i32, i32* %27, align 4
  %1031 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1032 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1031, i32 0, i32 16
  %1033 = load i32, i32* %1032, align 4
  %1034 = shl i32 %1030, %1033
  %1035 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1036 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1035, i32 0, i32 17
  %1037 = load i32, i32* %1036, align 8
  %1038 = or i32 %1037, %1034
  store i32 %1038, i32* %1036, align 8
  %1039 = load i32, i32* %28, align 4
  %1040 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1041 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1040, i32 0, i32 16
  %1042 = load i32, i32* %1041, align 4
  %1043 = add i32 %1042, %1039
  store i32 %1043, i32* %1041, align 4
  br label %1044

1044:                                             ; preds = %1066, %1029
  %1045 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1046 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1045, i32 0, i32 16
  %1047 = load i32, i32* %1046, align 4
  %1048 = icmp uge i32 %1047, 8
  br i1 %1048, label %1049, label %1075

1049:                                             ; preds = %1044
  %1050 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1051 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1050, i32 0, i32 11
  %1052 = load i8*, i8** %1051, align 8
  %1053 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1054 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1053, i32 0, i32 12
  %1055 = load i8*, i8** %1054, align 8
  %1056 = icmp ult i8* %1052, %1055
  br i1 %1056, label %1057, label %1066

1057:                                             ; preds = %1049
  %1058 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1059 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1058, i32 0, i32 17
  %1060 = load i32, i32* %1059, align 8
  %1061 = trunc i32 %1060 to i8
  %1062 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1063 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1062, i32 0, i32 11
  %1064 = load i8*, i8** %1063, align 8
  %1065 = getelementptr inbounds i8, i8* %1064, i32 1
  store i8* %1065, i8** %1063, align 8
  store i8 %1061, i8* %1064, align 1
  br label %1066

1066:                                             ; preds = %1057, %1049
  %1067 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1068 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1067, i32 0, i32 17
  %1069 = load i32, i32* %1068, align 8
  %1070 = lshr i32 %1069, 8
  store i32 %1070, i32* %1068, align 8
  %1071 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1072 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1071, i32 0, i32 16
  %1073 = load i32, i32* %1072, align 4
  %1074 = sub i32 %1073, 8
  store i32 %1074, i32* %1072, align 4
  br label %1044, !llvm.loop !151

1075:                                             ; preds = %1044
  br label %1076

1076:                                             ; preds = %1075
  %1077 = load i32, i32* %26, align 4
  %1078 = icmp uge i32 %1077, 16
  br i1 %1078, label %1079, label %1148

1079:                                             ; preds = %1076
  br label %1080

1080:                                             ; preds = %1079
  %1081 = load i32, i32* %11, align 4
  %1082 = add i32 %1081, 1
  store i32 %1082, i32* %11, align 4
  %1083 = zext i32 %1081 to i64
  %1084 = getelementptr inbounds [320 x i8], [320 x i8]* %13, i64 0, i64 %1083
  %1085 = load i8, i8* %1084, align 1
  %1086 = zext i8 %1085 to i32
  store i32 %1086, i32* %29, align 4
  %1087 = load i32, i32* %26, align 4
  %1088 = sub i32 %1087, 16
  %1089 = zext i32 %1088 to i64
  %1090 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.15, i64 0, i64 %1089
  %1091 = load i8, i8* %1090, align 1
  %1092 = sext i8 %1091 to i32
  store i32 %1092, i32* %30, align 4
  %1093 = load i32, i32* %29, align 4
  %1094 = load i32, i32* %30, align 4
  %1095 = shl i32 1, %1094
  %1096 = sub i32 %1095, 1
  %1097 = icmp ule i32 %1093, %1096
  br i1 %1097, label %1098, label %1099

1098:                                             ; preds = %1080
  br label %1100

1099:                                             ; preds = %1080
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1073, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i64 0, i64 0)) #8
  unreachable

1100:                                             ; preds = %1098
  %1101 = load i32, i32* %29, align 4
  %1102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1102, i32 0, i32 16
  %1104 = load i32, i32* %1103, align 4
  %1105 = shl i32 %1101, %1104
  %1106 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1107 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1106, i32 0, i32 17
  %1108 = load i32, i32* %1107, align 8
  %1109 = or i32 %1108, %1105
  store i32 %1109, i32* %1107, align 8
  %1110 = load i32, i32* %30, align 4
  %1111 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1112 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1111, i32 0, i32 16
  %1113 = load i32, i32* %1112, align 4
  %1114 = add i32 %1113, %1110
  store i32 %1114, i32* %1112, align 4
  br label %1115

1115:                                             ; preds = %1137, %1100
  %1116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1116, i32 0, i32 16
  %1118 = load i32, i32* %1117, align 4
  %1119 = icmp uge i32 %1118, 8
  br i1 %1119, label %1120, label %1146

1120:                                             ; preds = %1115
  %1121 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1122 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1121, i32 0, i32 11
  %1123 = load i8*, i8** %1122, align 8
  %1124 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1125 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1124, i32 0, i32 12
  %1126 = load i8*, i8** %1125, align 8
  %1127 = icmp ult i8* %1123, %1126
  br i1 %1127, label %1128, label %1137

1128:                                             ; preds = %1120
  %1129 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1130 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1129, i32 0, i32 17
  %1131 = load i32, i32* %1130, align 8
  %1132 = trunc i32 %1131 to i8
  %1133 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1134 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1133, i32 0, i32 11
  %1135 = load i8*, i8** %1134, align 8
  %1136 = getelementptr inbounds i8, i8* %1135, i32 1
  store i8* %1136, i8** %1134, align 8
  store i8 %1132, i8* %1135, align 1
  br label %1137

1137:                                             ; preds = %1128, %1120
  %1138 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1139 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1138, i32 0, i32 17
  %1140 = load i32, i32* %1139, align 8
  %1141 = lshr i32 %1140, 8
  store i32 %1141, i32* %1139, align 8
  %1142 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1143 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1142, i32 0, i32 16
  %1144 = load i32, i32* %1143, align 4
  %1145 = sub i32 %1144, 8
  store i32 %1145, i32* %1143, align 4
  br label %1115, !llvm.loop !152

1146:                                             ; preds = %1115
  br label %1147

1147:                                             ; preds = %1146
  br label %1148

1148:                                             ; preds = %1147, %1076
  br label %989, !llvm.loop !153

1149:                                             ; preds = %989
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @tdefl_compress_lz_codes(%struct.tdefl_compressor* noundef %0) #0 {
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %2, align 8
  store i32 1, i32* %3, align 4
  %22 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %23 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %22, i32 0, i32 39
  %24 = getelementptr inbounds [65536 x i8], [65536 x i8]* %23, i64 0, i64 0
  store i8* %24, i8** %4, align 8
  br label %25

25:                                               ; preds = %485, %1
  %26 = load i8*, i8** %4, align 8
  %27 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %28 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %27, i32 0, i32 9
  %29 = load i8*, i8** %28, align 8
  %30 = icmp ult i8* %26, %29
  br i1 %30, label %31, label %488

31:                                               ; preds = %25
  %32 = load i32, i32* %3, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load i8*, i8** %4, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %4, align 8
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %38, 256
  store i32 %39, i32* %3, align 4
  br label %40

40:                                               ; preds = %34, %31
  %41 = load i32, i32* %3, align 4
  %42 = and i32 %41, 1
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %396

44:                                               ; preds = %40
  %45 = load i8*, i8** %4, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  store i32 %48, i32* %7, align 4
  %49 = load i8*, i8** %4, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = load i8*, i8** %4, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl i32 %56, 8
  %58 = or i32 %52, %57
  store i32 %58, i32* %8, align 4
  %59 = load i8*, i8** %4, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 3
  store i8* %60, i8** %4, align 8
  %61 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %62 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %61, i32 0, i32 38
  %63 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %62, i64 0, i64 0
  %64 = load i32, i32* %7, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds [288 x i8], [288 x i8]* %63, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = icmp ne i8 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %44
  br label %74

73:                                               ; preds = %44
  call void @__assert_fail(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.66, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1213, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

74:                                               ; preds = %72
  br label %75

75:                                               ; preds = %74
  %76 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %77 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %76, i32 0, i32 37
  %78 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %77, i64 0, i64 0
  %79 = load i32, i32* %7, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i64
  %84 = getelementptr inbounds [288 x i16], [288 x i16]* %78, i64 0, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  store i32 %86, i32* %9, align 4
  %87 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %87, i32 0, i32 38
  %89 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %88, i64 0, i64 0
  %90 = load i32, i32* %7, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %91
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds [288 x i8], [288 x i8]* %89, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  store i32 %97, i32* %10, align 4
  %98 = load i32, i32* %9, align 4
  %99 = load i32, i32* %10, align 4
  %100 = shl i32 1, %99
  %101 = sub i32 %100, 1
  %102 = icmp ule i32 %98, %101
  br i1 %102, label %103, label %104

103:                                              ; preds = %75
  br label %105

104:                                              ; preds = %75
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1214, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

105:                                              ; preds = %103
  %106 = load i32, i32* %9, align 4
  %107 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %108 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %107, i32 0, i32 16
  %109 = load i32, i32* %108, align 4
  %110 = shl i32 %106, %109
  %111 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %112 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %111, i32 0, i32 17
  %113 = load i32, i32* %112, align 8
  %114 = or i32 %113, %110
  store i32 %114, i32* %112, align 8
  %115 = load i32, i32* %10, align 4
  %116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %116, i32 0, i32 16
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %115
  store i32 %119, i32* %117, align 4
  br label %120

120:                                              ; preds = %142, %105
  %121 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %122 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %121, i32 0, i32 16
  %123 = load i32, i32* %122, align 4
  %124 = icmp uge i32 %123, 8
  br i1 %124, label %125, label %151

125:                                              ; preds = %120
  %126 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %127 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %126, i32 0, i32 11
  %128 = load i8*, i8** %127, align 8
  %129 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %130 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %129, i32 0, i32 12
  %131 = load i8*, i8** %130, align 8
  %132 = icmp ult i8* %128, %131
  br i1 %132, label %133, label %142

133:                                              ; preds = %125
  %134 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %135 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %134, i32 0, i32 17
  %136 = load i32, i32* %135, align 8
  %137 = trunc i32 %136 to i8
  %138 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %139 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %138, i32 0, i32 11
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %141, i8** %139, align 8
  store i8 %137, i8* %140, align 1
  br label %142

142:                                              ; preds = %133, %125
  %143 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %144 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %143, i32 0, i32 17
  %145 = load i32, i32* %144, align 8
  %146 = lshr i32 %145, 8
  store i32 %146, i32* %144, align 8
  %147 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %148 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %147, i32 0, i32 16
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 %149, 8
  store i32 %150, i32* %148, align 4
  br label %120, !llvm.loop !154

151:                                              ; preds = %120
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152
  %154 = load i32, i32* %7, align 4
  %155 = load i32, i32* %7, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @s_tdefl_len_extra, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i64
  %160 = getelementptr inbounds [17 x i32], [17 x i32]* @mz_bitmasks, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %154, %161
  store i32 %162, i32* %11, align 4
  %163 = load i32, i32* %7, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @s_tdefl_len_extra, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  store i32 %167, i32* %12, align 4
  %168 = load i32, i32* %11, align 4
  %169 = load i32, i32* %12, align 4
  %170 = shl i32 1, %169
  %171 = sub i32 %170, 1
  %172 = icmp ule i32 %168, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %153
  br label %175

174:                                              ; preds = %153
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1215, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

175:                                              ; preds = %173
  %176 = load i32, i32* %11, align 4
  %177 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %178 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %177, i32 0, i32 16
  %179 = load i32, i32* %178, align 4
  %180 = shl i32 %176, %179
  %181 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %182 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %181, i32 0, i32 17
  %183 = load i32, i32* %182, align 8
  %184 = or i32 %183, %180
  store i32 %184, i32* %182, align 8
  %185 = load i32, i32* %12, align 4
  %186 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %187 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %186, i32 0, i32 16
  %188 = load i32, i32* %187, align 4
  %189 = add i32 %188, %185
  store i32 %189, i32* %187, align 4
  br label %190

190:                                              ; preds = %212, %175
  %191 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %192 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %191, i32 0, i32 16
  %193 = load i32, i32* %192, align 4
  %194 = icmp uge i32 %193, 8
  br i1 %194, label %195, label %221

195:                                              ; preds = %190
  %196 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %197 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %196, i32 0, i32 11
  %198 = load i8*, i8** %197, align 8
  %199 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %200 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %199, i32 0, i32 12
  %201 = load i8*, i8** %200, align 8
  %202 = icmp ult i8* %198, %201
  br i1 %202, label %203, label %212

203:                                              ; preds = %195
  %204 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %205 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %204, i32 0, i32 17
  %206 = load i32, i32* %205, align 8
  %207 = trunc i32 %206 to i8
  %208 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %209 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %208, i32 0, i32 11
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds i8, i8* %210, i32 1
  store i8* %211, i8** %209, align 8
  store i8 %207, i8* %210, align 1
  br label %212

212:                                              ; preds = %203, %195
  %213 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %214 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %213, i32 0, i32 17
  %215 = load i32, i32* %214, align 8
  %216 = lshr i32 %215, 8
  store i32 %216, i32* %214, align 8
  %217 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %218 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %217, i32 0, i32 16
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %219, 8
  store i32 %220, i32* %218, align 4
  br label %190, !llvm.loop !155

221:                                              ; preds = %190
  br label %222

222:                                              ; preds = %221
  %223 = load i32, i32* %8, align 4
  %224 = icmp ult i32 %223, 512
  br i1 %224, label %225, label %236

225:                                              ; preds = %222
  %226 = load i32, i32* %8, align 4
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  store i32 %230, i32* %5, align 4
  %231 = load i32, i32* %8, align 4
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_extra, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  store i32 %235, i32* %6, align 4
  br label %249

236:                                              ; preds = %222
  %237 = load i32, i32* %8, align 4
  %238 = lshr i32 %237, 8
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  store i32 %242, i32* %5, align 4
  %243 = load i32, i32* %8, align 4
  %244 = lshr i32 %243, 8
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_extra, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  store i32 %248, i32* %6, align 4
  br label %249

249:                                              ; preds = %236, %225
  %250 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %251 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %250, i32 0, i32 38
  %252 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %251, i64 0, i64 1
  %253 = load i32, i32* %5, align 4
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds [288 x i8], [288 x i8]* %252, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = icmp ne i8 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %249
  br label %260

259:                                              ; preds = %249
  call void @__assert_fail(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1227, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

260:                                              ; preds = %258
  br label %261

261:                                              ; preds = %260
  %262 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %263 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %262, i32 0, i32 37
  %264 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %263, i64 0, i64 1
  %265 = load i32, i32* %5, align 4
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds [288 x i16], [288 x i16]* %264, i64 0, i64 %266
  %268 = load i16, i16* %267, align 2
  %269 = zext i16 %268 to i32
  store i32 %269, i32* %13, align 4
  %270 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %271 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %270, i32 0, i32 38
  %272 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %271, i64 0, i64 1
  %273 = load i32, i32* %5, align 4
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds [288 x i8], [288 x i8]* %272, i64 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  store i32 %277, i32* %14, align 4
  %278 = load i32, i32* %13, align 4
  %279 = load i32, i32* %14, align 4
  %280 = shl i32 1, %279
  %281 = sub i32 %280, 1
  %282 = icmp ule i32 %278, %281
  br i1 %282, label %283, label %284

283:                                              ; preds = %261
  br label %285

284:                                              ; preds = %261
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1228, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

285:                                              ; preds = %283
  %286 = load i32, i32* %13, align 4
  %287 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %288 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %287, i32 0, i32 16
  %289 = load i32, i32* %288, align 4
  %290 = shl i32 %286, %289
  %291 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %292 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %291, i32 0, i32 17
  %293 = load i32, i32* %292, align 8
  %294 = or i32 %293, %290
  store i32 %294, i32* %292, align 8
  %295 = load i32, i32* %14, align 4
  %296 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %297 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %296, i32 0, i32 16
  %298 = load i32, i32* %297, align 4
  %299 = add i32 %298, %295
  store i32 %299, i32* %297, align 4
  br label %300

300:                                              ; preds = %322, %285
  %301 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %302 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %301, i32 0, i32 16
  %303 = load i32, i32* %302, align 4
  %304 = icmp uge i32 %303, 8
  br i1 %304, label %305, label %331

305:                                              ; preds = %300
  %306 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %307 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %306, i32 0, i32 11
  %308 = load i8*, i8** %307, align 8
  %309 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %310 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %309, i32 0, i32 12
  %311 = load i8*, i8** %310, align 8
  %312 = icmp ult i8* %308, %311
  br i1 %312, label %313, label %322

313:                                              ; preds = %305
  %314 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %315 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %314, i32 0, i32 17
  %316 = load i32, i32* %315, align 8
  %317 = trunc i32 %316 to i8
  %318 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %319 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %318, i32 0, i32 11
  %320 = load i8*, i8** %319, align 8
  %321 = getelementptr inbounds i8, i8* %320, i32 1
  store i8* %321, i8** %319, align 8
  store i8 %317, i8* %320, align 1
  br label %322

322:                                              ; preds = %313, %305
  %323 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %324 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %323, i32 0, i32 17
  %325 = load i32, i32* %324, align 8
  %326 = lshr i32 %325, 8
  store i32 %326, i32* %324, align 8
  %327 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %328 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %327, i32 0, i32 16
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 %329, 8
  store i32 %330, i32* %328, align 4
  br label %300, !llvm.loop !156

331:                                              ; preds = %300
  br label %332

332:                                              ; preds = %331
  br label %333

333:                                              ; preds = %332
  %334 = load i32, i32* %8, align 4
  %335 = load i32, i32* %6, align 4
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds [17 x i32], [17 x i32]* @mz_bitmasks, i64 0, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = and i32 %334, %338
  store i32 %339, i32* %15, align 4
  %340 = load i32, i32* %6, align 4
  store i32 %340, i32* %16, align 4
  %341 = load i32, i32* %15, align 4
  %342 = load i32, i32* %16, align 4
  %343 = shl i32 1, %342
  %344 = sub i32 %343, 1
  %345 = icmp ule i32 %341, %344
  br i1 %345, label %346, label %347

346:                                              ; preds = %333
  br label %348

347:                                              ; preds = %333
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1229, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

348:                                              ; preds = %346
  %349 = load i32, i32* %15, align 4
  %350 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %351 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %350, i32 0, i32 16
  %352 = load i32, i32* %351, align 4
  %353 = shl i32 %349, %352
  %354 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %355 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %354, i32 0, i32 17
  %356 = load i32, i32* %355, align 8
  %357 = or i32 %356, %353
  store i32 %357, i32* %355, align 8
  %358 = load i32, i32* %16, align 4
  %359 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %360 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %359, i32 0, i32 16
  %361 = load i32, i32* %360, align 4
  %362 = add i32 %361, %358
  store i32 %362, i32* %360, align 4
  br label %363

363:                                              ; preds = %385, %348
  %364 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %365 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %364, i32 0, i32 16
  %366 = load i32, i32* %365, align 4
  %367 = icmp uge i32 %366, 8
  br i1 %367, label %368, label %394

368:                                              ; preds = %363
  %369 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %370 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %369, i32 0, i32 11
  %371 = load i8*, i8** %370, align 8
  %372 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %373 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %372, i32 0, i32 12
  %374 = load i8*, i8** %373, align 8
  %375 = icmp ult i8* %371, %374
  br i1 %375, label %376, label %385

376:                                              ; preds = %368
  %377 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %378 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %377, i32 0, i32 17
  %379 = load i32, i32* %378, align 8
  %380 = trunc i32 %379 to i8
  %381 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %382 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %381, i32 0, i32 11
  %383 = load i8*, i8** %382, align 8
  %384 = getelementptr inbounds i8, i8* %383, i32 1
  store i8* %384, i8** %382, align 8
  store i8 %380, i8* %383, align 1
  br label %385

385:                                              ; preds = %376, %368
  %386 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %387 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %386, i32 0, i32 17
  %388 = load i32, i32* %387, align 8
  %389 = lshr i32 %388, 8
  store i32 %389, i32* %387, align 8
  %390 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %391 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %390, i32 0, i32 16
  %392 = load i32, i32* %391, align 4
  %393 = sub i32 %392, 8
  store i32 %393, i32* %391, align 4
  br label %363, !llvm.loop !157

394:                                              ; preds = %363
  br label %395

395:                                              ; preds = %394
  br label %484

396:                                              ; preds = %40
  %397 = load i8*, i8** %4, align 8
  %398 = getelementptr inbounds i8, i8* %397, i32 1
  store i8* %398, i8** %4, align 8
  %399 = load i8, i8* %397, align 1
  %400 = zext i8 %399 to i32
  store i32 %400, i32* %17, align 4
  %401 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %402 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %401, i32 0, i32 38
  %403 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %402, i64 0, i64 0
  %404 = load i32, i32* %17, align 4
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds [288 x i8], [288 x i8]* %403, i64 0, i64 %405
  %407 = load i8, i8* %406, align 1
  %408 = icmp ne i8 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %396
  br label %411

410:                                              ; preds = %396
  call void @__assert_fail(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1234, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

411:                                              ; preds = %409
  br label %412

412:                                              ; preds = %411
  %413 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %414 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %413, i32 0, i32 37
  %415 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %414, i64 0, i64 0
  %416 = load i32, i32* %17, align 4
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds [288 x i16], [288 x i16]* %415, i64 0, i64 %417
  %419 = load i16, i16* %418, align 2
  %420 = zext i16 %419 to i32
  store i32 %420, i32* %18, align 4
  %421 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %422 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %421, i32 0, i32 38
  %423 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %422, i64 0, i64 0
  %424 = load i32, i32* %17, align 4
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [288 x i8], [288 x i8]* %423, i64 0, i64 %425
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  store i32 %428, i32* %19, align 4
  %429 = load i32, i32* %18, align 4
  %430 = load i32, i32* %19, align 4
  %431 = shl i32 1, %430
  %432 = sub i32 %431, 1
  %433 = icmp ule i32 %429, %432
  br i1 %433, label %434, label %435

434:                                              ; preds = %412
  br label %436

435:                                              ; preds = %412
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1235, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

436:                                              ; preds = %434
  %437 = load i32, i32* %18, align 4
  %438 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %439 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %438, i32 0, i32 16
  %440 = load i32, i32* %439, align 4
  %441 = shl i32 %437, %440
  %442 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %443 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %442, i32 0, i32 17
  %444 = load i32, i32* %443, align 8
  %445 = or i32 %444, %441
  store i32 %445, i32* %443, align 8
  %446 = load i32, i32* %19, align 4
  %447 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %448 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %447, i32 0, i32 16
  %449 = load i32, i32* %448, align 4
  %450 = add i32 %449, %446
  store i32 %450, i32* %448, align 4
  br label %451

451:                                              ; preds = %473, %436
  %452 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %453 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %452, i32 0, i32 16
  %454 = load i32, i32* %453, align 4
  %455 = icmp uge i32 %454, 8
  br i1 %455, label %456, label %482

456:                                              ; preds = %451
  %457 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %458 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %457, i32 0, i32 11
  %459 = load i8*, i8** %458, align 8
  %460 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %461 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %460, i32 0, i32 12
  %462 = load i8*, i8** %461, align 8
  %463 = icmp ult i8* %459, %462
  br i1 %463, label %464, label %473

464:                                              ; preds = %456
  %465 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %466 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %465, i32 0, i32 17
  %467 = load i32, i32* %466, align 8
  %468 = trunc i32 %467 to i8
  %469 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %470 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %469, i32 0, i32 11
  %471 = load i8*, i8** %470, align 8
  %472 = getelementptr inbounds i8, i8* %471, i32 1
  store i8* %472, i8** %470, align 8
  store i8 %468, i8* %471, align 1
  br label %473

473:                                              ; preds = %464, %456
  %474 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %475 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %474, i32 0, i32 17
  %476 = load i32, i32* %475, align 8
  %477 = lshr i32 %476, 8
  store i32 %477, i32* %475, align 8
  %478 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %479 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %478, i32 0, i32 16
  %480 = load i32, i32* %479, align 4
  %481 = sub i32 %480, 8
  store i32 %481, i32* %479, align 4
  br label %451, !llvm.loop !158

482:                                              ; preds = %451
  br label %483

483:                                              ; preds = %482
  br label %484

484:                                              ; preds = %483, %395
  br label %485

485:                                              ; preds = %484
  %486 = load i32, i32* %3, align 4
  %487 = lshr i32 %486, 1
  store i32 %487, i32* %3, align 4
  br label %25, !llvm.loop !159

488:                                              ; preds = %25
  br label %489

489:                                              ; preds = %488
  %490 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %491 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %490, i32 0, i32 37
  %492 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %491, i64 0, i64 0
  %493 = getelementptr inbounds [288 x i16], [288 x i16]* %492, i64 0, i64 256
  %494 = load i16, i16* %493, align 2
  %495 = zext i16 %494 to i32
  store i32 %495, i32* %20, align 4
  %496 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %497 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %496, i32 0, i32 38
  %498 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %497, i64 0, i64 0
  %499 = getelementptr inbounds [288 x i8], [288 x i8]* %498, i64 0, i64 256
  %500 = load i8, i8* %499, align 2
  %501 = zext i8 %500 to i32
  store i32 %501, i32* %21, align 4
  %502 = load i32, i32* %20, align 4
  %503 = load i32, i32* %21, align 4
  %504 = shl i32 1, %503
  %505 = sub i32 %504, 1
  %506 = icmp ule i32 %502, %505
  br i1 %506, label %507, label %508

507:                                              ; preds = %489
  br label %509

508:                                              ; preds = %489
  call void @__assert_fail(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 1239, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i64 0, i64 0)) #8
  unreachable

509:                                              ; preds = %507
  %510 = load i32, i32* %20, align 4
  %511 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %512 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %511, i32 0, i32 16
  %513 = load i32, i32* %512, align 4
  %514 = shl i32 %510, %513
  %515 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %516 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %515, i32 0, i32 17
  %517 = load i32, i32* %516, align 8
  %518 = or i32 %517, %514
  store i32 %518, i32* %516, align 8
  %519 = load i32, i32* %21, align 4
  %520 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %521 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %520, i32 0, i32 16
  %522 = load i32, i32* %521, align 4
  %523 = add i32 %522, %519
  store i32 %523, i32* %521, align 4
  br label %524

524:                                              ; preds = %546, %509
  %525 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %526 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %525, i32 0, i32 16
  %527 = load i32, i32* %526, align 4
  %528 = icmp uge i32 %527, 8
  br i1 %528, label %529, label %555

529:                                              ; preds = %524
  %530 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %531 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %530, i32 0, i32 11
  %532 = load i8*, i8** %531, align 8
  %533 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %534 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %533, i32 0, i32 12
  %535 = load i8*, i8** %534, align 8
  %536 = icmp ult i8* %532, %535
  br i1 %536, label %537, label %546

537:                                              ; preds = %529
  %538 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %539 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %538, i32 0, i32 17
  %540 = load i32, i32* %539, align 8
  %541 = trunc i32 %540 to i8
  %542 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %543 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %542, i32 0, i32 11
  %544 = load i8*, i8** %543, align 8
  %545 = getelementptr inbounds i8, i8* %544, i32 1
  store i8* %545, i8** %543, align 8
  store i8 %541, i8* %544, align 1
  br label %546

546:                                              ; preds = %537, %529
  %547 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %548 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %547, i32 0, i32 17
  %549 = load i32, i32* %548, align 8
  %550 = lshr i32 %549, 8
  store i32 %550, i32* %548, align 8
  %551 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %552 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %551, i32 0, i32 16
  %553 = load i32, i32* %552, align 4
  %554 = sub i32 %553, 8
  store i32 %554, i32* %552, align 4
  br label %524, !llvm.loop !160

555:                                              ; preds = %524
  br label %556

556:                                              ; preds = %555
  %557 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %558 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %557, i32 0, i32 11
  %559 = load i8*, i8** %558, align 8
  %560 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %561 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %560, i32 0, i32 12
  %562 = load i8*, i8** %561, align 8
  %563 = icmp ult i8* %559, %562
  %564 = zext i1 %563 to i32
  ret i32 %564
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.tdefl_compressor*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [33 x i32], align 16
  %15 = alloca [33 x i32], align 16
  %16 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %17 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %18 = alloca %struct.tdefl_sym_freq*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i16*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %struct.tdefl_compressor* %0, %struct.tdefl_compressor** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %24 = getelementptr inbounds [33 x i32], [33 x i32]* %14, i64 0, i64 0
  %25 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 0, i64 132, i1 false)
  %26 = load i32, i32* %10, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %51

28:                                               ; preds = %5
  store i32 0, i32* %11, align 4
  br label %29

29:                                               ; preds = %47, %28
  %30 = load i32, i32* %11, align 4
  %31 = load i32, i32* %8, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %50

33:                                               ; preds = %29
  %34 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %35 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %34, i32 0, i32 38
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %35, i64 0, i64 %37
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [288 x i8], [288 x i8]* %38, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [33 x i32], [33 x i32]* %14, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %44, align 4
  br label %47

47:                                               ; preds = %33
  %48 = load i32, i32* %11, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %11, align 4
  br label %29, !llvm.loop !161

50:                                               ; preds = %29
  br label %170

51:                                               ; preds = %5
  store i32 0, i32* %19, align 4
  %52 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %53 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %52, i32 0, i32 36
  %54 = load i32, i32* %7, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %53, i64 0, i64 %55
  %57 = getelementptr inbounds [288 x i16], [288 x i16]* %56, i64 0, i64 0
  store i16* %57, i16** %20, align 8
  store i32 0, i32* %11, align 4
  br label %58

58:                                               ; preds = %87, %51
  %59 = load i32, i32* %11, align 4
  %60 = load i32, i32* %8, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %90

62:                                               ; preds = %58
  %63 = load i16*, i16** %20, align 8
  %64 = load i32, i32* %11, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %63, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = icmp ne i16 %67, 0
  br i1 %68, label %69, label %86

69:                                               ; preds = %62
  %70 = load i16*, i16** %20, align 8
  %71 = load i32, i32* %11, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %70, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = load i32, i32* %19, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %16, i64 0, i64 %76
  %78 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %77, i32 0, i32 0
  store i16 %74, i16* %78, align 4
  %79 = load i32, i32* %11, align 4
  %80 = trunc i32 %79 to i16
  %81 = load i32, i32* %19, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %19, align 4
  %83 = sext i32 %81 to i64
  %84 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %16, i64 0, i64 %83
  %85 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %84, i32 0, i32 1
  store i16 %80, i16* %85, align 2
  br label %86

86:                                               ; preds = %69, %62
  br label %87

87:                                               ; preds = %86
  %88 = load i32, i32* %11, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %11, align 4
  br label %58, !llvm.loop !162

90:                                               ; preds = %58
  %91 = load i32, i32* %19, align 4
  %92 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %16, i64 0, i64 0
  %93 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %17, i64 0, i64 0
  %94 = call %struct.tdefl_sym_freq* @tdefl_radix_sort_syms(i32 noundef %91, %struct.tdefl_sym_freq* noundef %92, %struct.tdefl_sym_freq* noundef %93)
  store %struct.tdefl_sym_freq* %94, %struct.tdefl_sym_freq** %18, align 8
  %95 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %18, align 8
  %96 = load i32, i32* %19, align 4
  call void @tdefl_calculate_minimum_redundancy(%struct.tdefl_sym_freq* noundef %95, i32 noundef %96)
  store i32 0, i32* %11, align 4
  br label %97

97:                                               ; preds = %112, %90
  %98 = load i32, i32* %11, align 4
  %99 = load i32, i32* %19, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %115

101:                                              ; preds = %97
  %102 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %18, align 8
  %103 = load i32, i32* %11, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %102, i64 %104
  %106 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %105, i32 0, i32 0
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i64
  %109 = getelementptr inbounds [33 x i32], [33 x i32]* %14, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %109, align 4
  br label %112

112:                                              ; preds = %101
  %113 = load i32, i32* %11, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %11, align 4
  br label %97, !llvm.loop !163

115:                                              ; preds = %97
  %116 = getelementptr inbounds [33 x i32], [33 x i32]* %14, i64 0, i64 0
  %117 = load i32, i32* %19, align 4
  %118 = load i32, i32* %9, align 4
  call void @tdefl_huffman_enforce_max_code_size(i32* noundef %116, i32 noundef %117, i32 noundef %118)
  %119 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %120 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %119, i32 0, i32 38
  %121 = load i32, i32* %7, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %120, i64 0, i64 %122
  %124 = getelementptr inbounds [288 x i8], [288 x i8]* %123, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 2 %124, i8 0, i64 288, i1 false)
  %125 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %126 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %125, i32 0, i32 37
  %127 = load i32, i32* %7, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %126, i64 0, i64 %128
  %130 = getelementptr inbounds [288 x i16], [288 x i16]* %129, i64 0, i64 0
  %131 = bitcast i16* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %131, i8 0, i64 576, i1 false)
  store i32 1, i32* %11, align 4
  %132 = load i32, i32* %19, align 4
  store i32 %132, i32* %12, align 4
  br label %133

133:                                              ; preds = %166, %115
  %134 = load i32, i32* %11, align 4
  %135 = load i32, i32* %9, align 4
  %136 = icmp sle i32 %134, %135
  br i1 %136, label %137, label %169

137:                                              ; preds = %133
  %138 = load i32, i32* %11, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [33 x i32], [33 x i32]* %14, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %13, align 4
  br label %142

142:                                              ; preds = %162, %137
  %143 = load i32, i32* %13, align 4
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %145, label %165

145:                                              ; preds = %142
  %146 = load i32, i32* %11, align 4
  %147 = trunc i32 %146 to i8
  %148 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %149 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %148, i32 0, i32 38
  %150 = load i32, i32* %7, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %149, i64 0, i64 %151
  %153 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %18, align 8
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, -1
  store i32 %155, i32* %12, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %153, i64 %156
  %158 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %157, i32 0, i32 1
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i64
  %161 = getelementptr inbounds [288 x i8], [288 x i8]* %152, i64 0, i64 %160
  store i8 %147, i8* %161, align 1
  br label %162

162:                                              ; preds = %145
  %163 = load i32, i32* %13, align 4
  %164 = add nsw i32 %163, -1
  store i32 %164, i32* %13, align 4
  br label %142, !llvm.loop !164

165:                                              ; preds = %142
  br label %166

166:                                              ; preds = %165
  %167 = load i32, i32* %11, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %11, align 4
  br label %133, !llvm.loop !165

169:                                              ; preds = %133
  br label %170

170:                                              ; preds = %169, %50
  %171 = getelementptr inbounds [33 x i32], [33 x i32]* %15, i64 0, i64 1
  store i32 0, i32* %171, align 4
  store i32 0, i32* %12, align 4
  store i32 2, i32* %11, align 4
  br label %172

172:                                              ; preds = %188, %170
  %173 = load i32, i32* %11, align 4
  %174 = load i32, i32* %9, align 4
  %175 = icmp sle i32 %173, %174
  br i1 %175, label %176, label %191

176:                                              ; preds = %172
  %177 = load i32, i32* %12, align 4
  %178 = load i32, i32* %11, align 4
  %179 = sub nsw i32 %178, 1
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [33 x i32], [33 x i32]* %14, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = add nsw i32 %177, %182
  %184 = shl i32 %183, 1
  store i32 %184, i32* %12, align 4
  %185 = load i32, i32* %11, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [33 x i32], [33 x i32]* %15, i64 0, i64 %186
  store i32 %184, i32* %187, align 4
  br label %188

188:                                              ; preds = %176
  %189 = load i32, i32* %11, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %11, align 4
  br label %172, !llvm.loop !166

191:                                              ; preds = %172
  store i32 0, i32* %11, align 4
  br label %192

192:                                              ; preds = %241, %191
  %193 = load i32, i32* %11, align 4
  %194 = load i32, i32* %8, align 4
  %195 = icmp slt i32 %193, %194
  br i1 %195, label %196, label %244

196:                                              ; preds = %192
  store i32 0, i32* %21, align 4
  %197 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %198 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %197, i32 0, i32 38
  %199 = load i32, i32* %7, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %198, i64 0, i64 %200
  %202 = load i32, i32* %11, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [288 x i8], [288 x i8]* %201, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  store i32 %206, i32* %23, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %196
  br label %241

209:                                              ; preds = %196
  %210 = load i32, i32* %23, align 4
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [33 x i32], [33 x i32]* %15, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = add i32 %213, 1
  store i32 %214, i32* %212, align 4
  store i32 %213, i32* %22, align 4
  %215 = load i32, i32* %23, align 4
  store i32 %215, i32* %13, align 4
  br label %216

216:                                              ; preds = %225, %209
  %217 = load i32, i32* %13, align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %219, label %230

219:                                              ; preds = %216
  %220 = load i32, i32* %21, align 4
  %221 = shl i32 %220, 1
  %222 = load i32, i32* %22, align 4
  %223 = and i32 %222, 1
  %224 = or i32 %221, %223
  store i32 %224, i32* %21, align 4
  br label %225

225:                                              ; preds = %219
  %226 = load i32, i32* %13, align 4
  %227 = add nsw i32 %226, -1
  store i32 %227, i32* %13, align 4
  %228 = load i32, i32* %22, align 4
  %229 = lshr i32 %228, 1
  store i32 %229, i32* %22, align 4
  br label %216, !llvm.loop !167

230:                                              ; preds = %216
  %231 = load i32, i32* %21, align 4
  %232 = trunc i32 %231 to i16
  %233 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %234 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %233, i32 0, i32 37
  %235 = load i32, i32* %7, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %234, i64 0, i64 %236
  %238 = load i32, i32* %11, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [288 x i16], [288 x i16]* %237, i64 0, i64 %239
  store i16 %232, i16* %240, align 2
  br label %241

241:                                              ; preds = %230, %208
  %242 = load i32, i32* %11, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %11, align 4
  br label %192, !llvm.loop !168

244:                                              ; preds = %192
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tdefl_sym_freq* @tdefl_radix_sort_syms(i32 noundef %0, %struct.tdefl_sym_freq* noundef %1, %struct.tdefl_sym_freq* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.tdefl_sym_freq*, align 8
  %6 = alloca %struct.tdefl_sym_freq*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [512 x i32], align 16
  %12 = alloca %struct.tdefl_sym_freq*, align 8
  %13 = alloca %struct.tdefl_sym_freq*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  %16 = alloca [256 x i32], align 16
  %17 = alloca i32, align 4
  %18 = alloca %struct.tdefl_sym_freq*, align 8
  store i32 %0, i32* %4, align 4
  store %struct.tdefl_sym_freq* %1, %struct.tdefl_sym_freq** %5, align 8
  store %struct.tdefl_sym_freq* %2, %struct.tdefl_sym_freq** %6, align 8
  store i32 2, i32* %7, align 4
  %19 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %5, align 8
  store %struct.tdefl_sym_freq* %19, %struct.tdefl_sym_freq** %12, align 8
  %20 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %6, align 8
  store %struct.tdefl_sym_freq* %20, %struct.tdefl_sym_freq** %13, align 8
  %21 = getelementptr inbounds [512 x i32], [512 x i32]* %11, i64 0, i64 0
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %22, i8 0, i64 2048, i1 false)
  store i32 0, i32* %10, align 4
  br label %23

23:                                               ; preds = %49, %3
  %24 = load i32, i32* %10, align 4
  %25 = load i32, i32* %4, align 4
  %26 = icmp ult i32 %24, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %5, align 8
  %29 = load i32, i32* %10, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %28, i64 %30
  %32 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %31, i32 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  store i32 %34, i32* %14, align 4
  %35 = load i32, i32* %14, align 4
  %36 = and i32 %35, 255
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [512 x i32], [512 x i32]* %11, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = load i32, i32* %14, align 4
  %42 = lshr i32 %41, 8
  %43 = and i32 %42, 255
  %44 = add i32 256, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [512 x i32], [512 x i32]* %11, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %46, align 4
  br label %49

49:                                               ; preds = %27
  %50 = load i32, i32* %10, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %10, align 4
  br label %23, !llvm.loop !169

52:                                               ; preds = %23
  br label %53

53:                                               ; preds = %67, %52
  %54 = load i32, i32* %7, align 4
  %55 = icmp ugt i32 %54, 1
  br i1 %55, label %56, label %65

56:                                               ; preds = %53
  %57 = load i32, i32* %4, align 4
  %58 = load i32, i32* %7, align 4
  %59 = sub i32 %58, 1
  %60 = mul i32 %59, 256
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [512 x i32], [512 x i32]* %11, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %57, %63
  br label %65

65:                                               ; preds = %56, %53
  %66 = phi i1 [ false, %53 ], [ %64, %56 ]
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = load i32, i32* %7, align 4
  %69 = add i32 %68, -1
  store i32 %69, i32* %7, align 4
  br label %53, !llvm.loop !170

70:                                               ; preds = %65
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %71

71:                                               ; preds = %134, %70
  %72 = load i32, i32* %9, align 4
  %73 = load i32, i32* %7, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %75, label %139

75:                                               ; preds = %71
  %76 = load i32, i32* %9, align 4
  %77 = shl i32 %76, 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds [512 x i32], [512 x i32]* %11, i64 0, i64 %78
  store i32* %79, i32** %15, align 8
  store i32 0, i32* %17, align 4
  store i32 0, i32* %10, align 4
  br label %80

80:                                               ; preds = %95, %75
  %81 = load i32, i32* %10, align 4
  %82 = icmp ult i32 %81, 256
  br i1 %82, label %83, label %98

83:                                               ; preds = %80
  %84 = load i32, i32* %17, align 4
  %85 = load i32, i32* %10, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds [256 x i32], [256 x i32]* %16, i64 0, i64 %86
  store i32 %84, i32* %87, align 4
  %88 = load i32*, i32** %15, align 8
  %89 = load i32, i32* %10, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* %17, align 4
  %94 = add i32 %93, %92
  store i32 %94, i32* %17, align 4
  br label %95

95:                                               ; preds = %83
  %96 = load i32, i32* %10, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %10, align 4
  br label %80, !llvm.loop !171

98:                                               ; preds = %80
  store i32 0, i32* %10, align 4
  br label %99

99:                                               ; preds = %127, %98
  %100 = load i32, i32* %10, align 4
  %101 = load i32, i32* %4, align 4
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %103, label %130

103:                                              ; preds = %99
  %104 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %13, align 8
  %105 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %12, align 8
  %106 = load i32, i32* %10, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %105, i64 %107
  %109 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %108, i32 0, i32 0
  %110 = load i16, i16* %109, align 2
  %111 = zext i16 %110 to i32
  %112 = load i32, i32* %8, align 4
  %113 = ashr i32 %111, %112
  %114 = and i32 %113, 255
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* %16, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %116, align 4
  %119 = zext i32 %117 to i64
  %120 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %104, i64 %119
  %121 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %12, align 8
  %122 = load i32, i32* %10, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %121, i64 %123
  %125 = bitcast %struct.tdefl_sym_freq* %120 to i8*
  %126 = bitcast %struct.tdefl_sym_freq* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %125, i8* align 2 %126, i64 4, i1 false)
  br label %127

127:                                              ; preds = %103
  %128 = load i32, i32* %10, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %10, align 4
  br label %99, !llvm.loop !172

130:                                              ; preds = %99
  %131 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %12, align 8
  store %struct.tdefl_sym_freq* %131, %struct.tdefl_sym_freq** %18, align 8
  %132 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %13, align 8
  store %struct.tdefl_sym_freq* %132, %struct.tdefl_sym_freq** %12, align 8
  %133 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %18, align 8
  store %struct.tdefl_sym_freq* %133, %struct.tdefl_sym_freq** %13, align 8
  br label %134

134:                                              ; preds = %130
  %135 = load i32, i32* %9, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %9, align 4
  %137 = load i32, i32* %8, align 4
  %138 = add i32 %137, 8
  store i32 %138, i32* %8, align 4
  br label %71, !llvm.loop !173

139:                                              ; preds = %71
  %140 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %12, align 8
  ret %struct.tdefl_sym_freq* %140
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tdefl_calculate_minimum_redundancy(%struct.tdefl_sym_freq* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.tdefl_sym_freq*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.tdefl_sym_freq* %0, %struct.tdefl_sym_freq** %3, align 8
  store i32 %1, i32* %4, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  br label %259

14:                                               ; preds = %2
  %15 = load i32, i32* %4, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %19 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %18, i64 0
  %20 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %19, i32 0, i32 0
  store i16 1, i16* %20, align 2
  br label %259

21:                                               ; preds = %14
  br label %22

22:                                               ; preds = %21
  %23 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %24 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %23, i64 1
  %25 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %24, i32 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %29 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %28, i64 0
  %30 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %29, i32 0, i32 0
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nsw i32 %32, %27
  %34 = trunc i32 %33 to i16
  store i16 %34, i16* %30, align 2
  store i32 0, i32* %5, align 4
  store i32 2, i32* %6, align 4
  store i32 1, i32* %7, align 4
  br label %35

35:                                               ; preds = %171, %22
  %36 = load i32, i32* %7, align 4
  %37 = load i32, i32* %4, align 4
  %38 = sub nsw i32 %37, 1
  %39 = icmp slt i32 %36, %38
  br i1 %39, label %40, label %174

40:                                               ; preds = %35
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %4, align 4
  %43 = icmp sge i32 %41, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %46 = load i32, i32* %5, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %45, i64 %47
  %49 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %48, i32 0, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %53 = load i32, i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %52, i64 %54
  %56 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %55, i32 0, i32 0
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp slt i32 %51, %58
  br i1 %59, label %60, label %80

60:                                               ; preds = %44, %40
  %61 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %62 = load i32, i32* %5, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %61, i64 %63
  %65 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %64, i32 0, i32 0
  %66 = load i16, i16* %65, align 2
  %67 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %68 = load i32, i32* %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %67, i64 %69
  %71 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %70, i32 0, i32 0
  store i16 %66, i16* %71, align 2
  %72 = load i32, i32* %7, align 4
  %73 = trunc i32 %72 to i16
  %74 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %75 = load i32, i32* %5, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %5, align 4
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %74, i64 %77
  %79 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %78, i32 0, i32 0
  store i16 %73, i16* %79, align 2
  br label %93

80:                                               ; preds = %44
  %81 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %82 = load i32, i32* %6, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %6, align 4
  %84 = sext i32 %82 to i64
  %85 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %81, i64 %84
  %86 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %85, i32 0, i32 0
  %87 = load i16, i16* %86, align 2
  %88 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %89 = load i32, i32* %7, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %88, i64 %90
  %92 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %91, i32 0, i32 0
  store i16 %87, i16* %92, align 2
  br label %93

93:                                               ; preds = %80, %60
  %94 = load i32, i32* %6, align 4
  %95 = load i32, i32* %4, align 4
  %96 = icmp sge i32 %94, %95
  br i1 %96, label %117, label %97

97:                                               ; preds = %93
  %98 = load i32, i32* %5, align 4
  %99 = load i32, i32* %7, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %147

101:                                              ; preds = %97
  %102 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %103 = load i32, i32* %5, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %102, i64 %104
  %106 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %105, i32 0, i32 0
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %110 = load i32, i32* %6, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %109, i64 %111
  %113 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %112, i32 0, i32 0
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp slt i32 %108, %115
  br i1 %116, label %117, label %147

117:                                              ; preds = %101, %93
  %118 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %119 = load i32, i32* %7, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %118, i64 %120
  %122 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %121, i32 0, i32 0
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %126 = load i32, i32* %5, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %125, i64 %127
  %129 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %128, i32 0, i32 0
  %130 = load i16, i16* %129, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %124, %131
  %133 = trunc i32 %132 to i16
  %134 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %135 = load i32, i32* %7, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %134, i64 %136
  %138 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %137, i32 0, i32 0
  store i16 %133, i16* %138, align 2
  %139 = load i32, i32* %7, align 4
  %140 = trunc i32 %139 to i16
  %141 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %142 = load i32, i32* %5, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %5, align 4
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %141, i64 %144
  %146 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %145, i32 0, i32 0
  store i16 %140, i16* %146, align 2
  br label %170

147:                                              ; preds = %101, %97
  %148 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %149 = load i32, i32* %7, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %148, i64 %150
  %152 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %151, i32 0, i32 0
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  %155 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %156 = load i32, i32* %6, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %6, align 4
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %155, i64 %158
  %160 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %159, i32 0, i32 0
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = add nsw i32 %154, %162
  %164 = trunc i32 %163 to i16
  %165 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %166 = load i32, i32* %7, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %165, i64 %167
  %169 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %168, i32 0, i32 0
  store i16 %164, i16* %169, align 2
  br label %170

170:                                              ; preds = %147, %117
  br label %171

171:                                              ; preds = %170
  %172 = load i32, i32* %7, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %7, align 4
  br label %35, !llvm.loop !174

174:                                              ; preds = %35
  %175 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %176 = load i32, i32* %4, align 4
  %177 = sub nsw i32 %176, 2
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %175, i64 %178
  %180 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %179, i32 0, i32 0
  store i16 0, i16* %180, align 2
  %181 = load i32, i32* %4, align 4
  %182 = sub nsw i32 %181, 3
  store i32 %182, i32* %7, align 4
  br label %183

183:                                              ; preds = %206, %174
  %184 = load i32, i32* %7, align 4
  %185 = icmp sge i32 %184, 0
  br i1 %185, label %186, label %209

186:                                              ; preds = %183
  %187 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %188 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %189 = load i32, i32* %7, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %188, i64 %190
  %192 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %191, i32 0, i32 0
  %193 = load i16, i16* %192, align 2
  %194 = zext i16 %193 to i64
  %195 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %187, i64 %194
  %196 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %195, i32 0, i32 0
  %197 = load i16, i16* %196, align 2
  %198 = zext i16 %197 to i32
  %199 = add nsw i32 %198, 1
  %200 = trunc i32 %199 to i16
  %201 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %202 = load i32, i32* %7, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %201, i64 %203
  %205 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %204, i32 0, i32 0
  store i16 %200, i16* %205, align 2
  br label %206

206:                                              ; preds = %186
  %207 = load i32, i32* %7, align 4
  %208 = add nsw i32 %207, -1
  store i32 %208, i32* %7, align 4
  br label %183, !llvm.loop !175

209:                                              ; preds = %183
  store i32 1, i32* %8, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %9, align 4
  %210 = load i32, i32* %4, align 4
  %211 = sub nsw i32 %210, 2
  store i32 %211, i32* %5, align 4
  %212 = load i32, i32* %4, align 4
  %213 = sub nsw i32 %212, 1
  store i32 %213, i32* %7, align 4
  br label %214

214:                                              ; preds = %254, %209
  %215 = load i32, i32* %8, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %259

217:                                              ; preds = %214
  br label %218

218:                                              ; preds = %233, %217
  %219 = load i32, i32* %5, align 4
  %220 = icmp sge i32 %219, 0
  br i1 %220, label %221, label %231

221:                                              ; preds = %218
  %222 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %223 = load i32, i32* %5, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %222, i64 %224
  %226 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %225, i32 0, i32 0
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = load i32, i32* %10, align 4
  %230 = icmp eq i32 %228, %229
  br label %231

231:                                              ; preds = %221, %218
  %232 = phi i1 [ false, %218 ], [ %230, %221 ]
  br i1 %232, label %233, label %238

233:                                              ; preds = %231
  %234 = load i32, i32* %9, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %9, align 4
  %236 = load i32, i32* %5, align 4
  %237 = add nsw i32 %236, -1
  store i32 %237, i32* %5, align 4
  br label %218, !llvm.loop !176

238:                                              ; preds = %231
  br label %239

239:                                              ; preds = %243, %238
  %240 = load i32, i32* %8, align 4
  %241 = load i32, i32* %9, align 4
  %242 = icmp sgt i32 %240, %241
  br i1 %242, label %243, label %254

243:                                              ; preds = %239
  %244 = load i32, i32* %10, align 4
  %245 = trunc i32 %244 to i16
  %246 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  %247 = load i32, i32* %7, align 4
  %248 = add nsw i32 %247, -1
  store i32 %248, i32* %7, align 4
  %249 = sext i32 %247 to i64
  %250 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %246, i64 %249
  %251 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %250, i32 0, i32 0
  store i16 %245, i16* %251, align 2
  %252 = load i32, i32* %8, align 4
  %253 = add nsw i32 %252, -1
  store i32 %253, i32* %8, align 4
  br label %239, !llvm.loop !177

254:                                              ; preds = %239
  %255 = load i32, i32* %9, align 4
  %256 = mul nsw i32 2, %255
  store i32 %256, i32* %8, align 4
  %257 = load i32, i32* %10, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %10, align 4
  store i32 0, i32* %9, align 4
  br label %214, !llvm.loop !178

259:                                              ; preds = %13, %17, %214
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tdefl_huffman_enforce_max_code_size(i32* noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %8, align 4
  %9 = load i32, i32* %5, align 4
  %10 = icmp sle i32 %9, 1
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %101

12:                                               ; preds = %3
  %13 = load i32, i32* %6, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %7, align 4
  br label %15

15:                                               ; preds = %30, %12
  %16 = load i32, i32* %7, align 4
  %17 = icmp sle i32 %16, 32
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = load i32*, i32** %4, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32*, i32** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %24, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, %23
  store i32 %29, i32* %27, align 4
  br label %30

30:                                               ; preds = %18
  %31 = load i32, i32* %7, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %7, align 4
  br label %15, !llvm.loop !179

33:                                               ; preds = %15
  %34 = load i32, i32* %6, align 4
  store i32 %34, i32* %7, align 4
  br label %35

35:                                               ; preds = %50, %33
  %36 = load i32, i32* %7, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %53

38:                                               ; preds = %35
  %39 = load i32*, i32** %4, align 8
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %39, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %6, align 4
  %45 = load i32, i32* %7, align 4
  %46 = sub nsw i32 %44, %45
  %47 = shl i32 %43, %46
  %48 = load i32, i32* %8, align 4
  %49 = add i32 %48, %47
  store i32 %49, i32* %8, align 4
  br label %50

50:                                               ; preds = %38
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, -1
  store i32 %52, i32* %7, align 4
  br label %35, !llvm.loop !180

53:                                               ; preds = %35
  br label %54

54:                                               ; preds = %98, %53
  %55 = load i32, i32* %8, align 4
  %56 = zext i32 %55 to i64
  %57 = load i32, i32* %6, align 4
  %58 = zext i32 %57 to i64
  %59 = shl i64 1, %58
  %60 = icmp ne i64 %56, %59
  br i1 %60, label %61, label %101

61:                                               ; preds = %54
  %62 = load i32*, i32** %4, align 8
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, -1
  store i32 %67, i32* %65, align 4
  %68 = load i32, i32* %6, align 4
  %69 = sub nsw i32 %68, 1
  store i32 %69, i32* %7, align 4
  br label %70

70:                                               ; preds = %95, %61
  %71 = load i32, i32* %7, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %98

73:                                               ; preds = %70
  %74 = load i32*, i32** %4, align 8
  %75 = load i32, i32* %7, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %94

80:                                               ; preds = %73
  %81 = load i32*, i32** %4, align 8
  %82 = load i32, i32* %7, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %81, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %85, -1
  store i32 %86, i32* %84, align 4
  %87 = load i32*, i32** %4, align 8
  %88 = load i32, i32* %7, align 4
  %89 = add nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %87, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, 2
  store i32 %93, i32* %91, align 4
  br label %98

94:                                               ; preds = %73
  br label %95

95:                                               ; preds = %94
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, -1
  store i32 %97, i32* %7, align 4
  br label %70, !llvm.loop !181

98:                                               ; preds = %80, %70
  %99 = load i32, i32* %8, align 4
  %100 = add i32 %99, -1
  store i32 %100, i32* %8, align 4
  br label %54, !llvm.loop !182

101:                                              ; preds = %11, %54
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_reader_locate_header_sig(%struct.mz_zip_archive* noundef %0, i32 noundef %1, i32 noundef %2, i64* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64*, align 8
  %10 = alloca i64, align 8
  %11 = alloca [1024 x i32], align 16
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i64* %3, i64** %9, align 8
  %16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %11, i64 0, i64 0
  %17 = bitcast i32* %16 to i8*
  store i8* %17, i8** %12, align 8
  %18 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = load i32, i32* %8, align 4
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  br label %168

25:                                               ; preds = %4
  %26 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %27 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = sub nsw i64 %28, 4096
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = sub nsw i64 %34, 4096
  br label %37

36:                                               ; preds = %25
  br label %37

37:                                               ; preds = %36, %31
  %38 = phi i64 [ %35, %31 ], [ 0, %36 ]
  store i64 %38, i64* %10, align 8
  br label %39

39:                                               ; preds = %163, %37
  %40 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %40, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %10, align 8
  %44 = sub i64 %42, %43
  %45 = icmp ult i64 4096, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %39
  br label %53

47:                                               ; preds = %39
  %48 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %48, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = load i64, i64* %10, align 8
  %52 = sub i64 %50, %51
  br label %53

53:                                               ; preds = %47, %46
  %54 = phi i64 [ 4096, %46 ], [ %52, %47 ]
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %14, align 4
  %56 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %56, i32 0, i32 11
  %58 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %57, align 8
  %59 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %59, i32 0, i32 14
  %61 = load i8*, i8** %60, align 8
  %62 = load i64, i64* %10, align 8
  %63 = load i8*, i8** %12, align 8
  %64 = load i32, i32* %14, align 4
  %65 = sext i32 %64 to i64
  %66 = call i64 %58(i8* noundef %61, i64 noundef %62, i8* noundef %63, i64 noundef %65)
  %67 = load i32, i32* %14, align 4
  %68 = zext i32 %67 to i64
  %69 = icmp ne i64 %66, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %53
  store i32 0, i32* %5, align 4
  br label %168

71:                                               ; preds = %53
  %72 = load i32, i32* %14, align 4
  %73 = sub nsw i32 %72, 4
  store i32 %73, i32* %13, align 4
  br label %74

74:                                               ; preds = %130, %71
  %75 = load i32, i32* %13, align 4
  %76 = icmp sge i32 %75, 0
  br i1 %76, label %77, label %133

77:                                               ; preds = %74
  %78 = load i8*, i8** %12, align 8
  %79 = load i32, i32* %13, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = load i8*, i8** %12, align 8
  %86 = load i32, i32* %13, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = getelementptr inbounds i8, i8* %88, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl i32 %91, 8
  %93 = or i32 %84, %92
  %94 = load i8*, i8** %12, align 8
  %95 = load i32, i32* %13, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = getelementptr inbounds i8, i8* %97, i64 2
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl i32 %100, 16
  %102 = or i32 %93, %101
  %103 = load i8*, i8** %12, align 8
  %104 = load i32, i32* %13, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %103, i64 %105
  %107 = getelementptr inbounds i8, i8* %106, i64 3
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl i32 %109, 24
  %111 = or i32 %102, %110
  store i32 %111, i32* %15, align 4
  %112 = load i32, i32* %15, align 4
  %113 = load i32, i32* %7, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %115, label %129

115:                                              ; preds = %77
  %116 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %117 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %116, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %10, align 8
  %120 = load i32, i32* %13, align 4
  %121 = sext i32 %120 to i64
  %122 = add nsw i64 %119, %121
  %123 = sub i64 %118, %122
  %124 = load i32, i32* %8, align 4
  %125 = zext i32 %124 to i64
  %126 = icmp uge i64 %123, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %115
  br label %133

128:                                              ; preds = %115
  br label %129

129:                                              ; preds = %128, %77
  br label %130

130:                                              ; preds = %129
  %131 = load i32, i32* %13, align 4
  %132 = add nsw i32 %131, -1
  store i32 %132, i32* %13, align 4
  br label %74, !llvm.loop !183

133:                                              ; preds = %127, %74
  %134 = load i32, i32* %13, align 4
  %135 = icmp sge i32 %134, 0
  br i1 %135, label %136, label %141

136:                                              ; preds = %133
  %137 = load i32, i32* %13, align 4
  %138 = sext i32 %137 to i64
  %139 = load i64, i64* %10, align 8
  %140 = add nsw i64 %139, %138
  store i64 %140, i64* %10, align 8
  br label %165

141:                                              ; preds = %133
  %142 = load i64, i64* %10, align 8
  %143 = icmp ne i64 %142, 0
  br i1 %143, label %144, label %154

144:                                              ; preds = %141
  %145 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %146 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %145, i32 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = load i64, i64* %10, align 8
  %149 = sub i64 %147, %148
  %150 = load i32, i32* %8, align 4
  %151 = add i32 65535, %150
  %152 = zext i32 %151 to i64
  %153 = icmp uge i64 %149, %152
  br i1 %153, label %154, label %155

154:                                              ; preds = %144, %141
  store i32 0, i32* %5, align 4
  br label %168

155:                                              ; preds = %144
  %156 = load i64, i64* %10, align 8
  %157 = sub i64 %156, 4093
  %158 = icmp ugt i64 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = load i64, i64* %10, align 8
  %161 = sub i64 %160, 4093
  br label %163

162:                                              ; preds = %155
  br label %163

163:                                              ; preds = %162, %159
  %164 = phi i64 [ %161, %159 ], [ 0, %162 ]
  store i64 %164, i64* %10, align 8
  br label %39

165:                                              ; preds = %136
  %166 = load i64, i64* %10, align 8
  %167 = load i64*, i64** %9, align 8
  store i64 %166, i64* %167, align 8
  store i32 1, i32* %5, align 4
  br label %168

168:                                              ; preds = %165, %154, %70, %24
  %169 = load i32, i32* %5, align 4
  ret i32 %169
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mz_zip_reader_sort_central_dir_offsets_by_filename(%struct.mz_zip_archive* noundef %0) #0 {
  %2 = alloca %struct.mz_zip_array*, align 8
  %3 = alloca %struct.mz_zip_array*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca %struct.mz_zip_array*, align 8
  %14 = alloca %struct.mz_zip_array*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca %struct.mz_zip_array*, align 8
  %25 = alloca %struct.mz_zip_array*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca %struct.mz_zip_array*, align 8
  %36 = alloca %struct.mz_zip_array*, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i8*, align 8
  %40 = alloca i8*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i8, align 1
  %45 = alloca i8, align 1
  %46 = alloca %struct.mz_zip_archive*, align 8
  %47 = alloca %struct.mz_zip_internal_state_tag*, align 8
  %48 = alloca %struct.mz_zip_array*, align 8
  %49 = alloca %struct.mz_zip_array*, align 8
  %50 = alloca i32*, align 8
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i32, align 4
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %46, align 8
  %61 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %61, i32 0, i32 15
  %63 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %62, align 8
  store %struct.mz_zip_internal_state_tag* %63, %struct.mz_zip_internal_state_tag** %47, align 8
  %64 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %47, align 8
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %64, i32 0, i32 1
  store %struct.mz_zip_array* %65, %struct.mz_zip_array** %48, align 8
  %66 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %47, align 8
  %67 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %66, i32 0, i32 0
  store %struct.mz_zip_array* %67, %struct.mz_zip_array** %49, align 8
  %68 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %46, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %68, i32 0, i32 2
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %53, align 4
  %71 = load i32, i32* %53, align 4
  %72 = icmp ule i32 %71, 1
  br i1 %72, label %73, label %74

73:                                               ; preds = %1
  br label %809

74:                                               ; preds = %1
  %75 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %47, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %75, i32 0, i32 2
  %77 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %76, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast i8* %78 to i32*
  %80 = getelementptr inbounds i32, i32* %79, i64 0
  store i32* %80, i32** %50, align 8
  %81 = load i32, i32* %53, align 4
  %82 = sub i32 %81, 2
  %83 = lshr i32 %82, 1
  store i32 %83, i32* %51, align 4
  br label %84

84:                                               ; preds = %435, %74
  %85 = load i32, i32* %51, align 4
  %86 = zext i32 %85 to i64
  store i64 %86, i64* %55, align 8
  br label %87

87:                                               ; preds = %429, %84
  %88 = load i64, i64* %55, align 8
  %89 = shl i64 %88, 1
  %90 = add i64 %89, 1
  store i64 %90, i64* %54, align 8
  %91 = load i32, i32* %53, align 4
  %92 = zext i32 %91 to i64
  %93 = icmp uge i64 %90, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %87
  br label %431

95:                                               ; preds = %87
  %96 = load i64, i64* %54, align 8
  %97 = add i64 %96, 1
  %98 = load i32, i32* %53, align 4
  %99 = zext i32 %98 to i64
  %100 = icmp ult i64 %97, %99
  br i1 %100, label %101, label %254

101:                                              ; preds = %95
  %102 = load %struct.mz_zip_array*, %struct.mz_zip_array** %49, align 8
  %103 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %104 = load i32*, i32** %50, align 8
  %105 = load i64, i64* %54, align 8
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = load i32*, i32** %50, align 8
  %109 = load i64, i64* %54, align 8
  %110 = add i64 %109, 1
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  store %struct.mz_zip_array* %102, %struct.mz_zip_array** %2, align 8
  store %struct.mz_zip_array* %103, %struct.mz_zip_array** %3, align 8
  store i32 %107, i32* %4, align 4
  store i32 %112, i32* %5, align 4
  %113 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %114 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %113, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %117 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %116, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %4, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %119, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %115, i64 %124
  store i8* %125, i8** %6, align 8
  %126 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %127 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %130 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %129, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %5, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %132, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %128, i64 %137
  store i8* %138, i8** %8, align 8
  %139 = load i8*, i8** %6, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 28
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = load i8*, i8** %6, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 28
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = shl i32 %147, 8
  %149 = or i32 %142, %148
  store i32 %149, i32* %9, align 4
  %150 = load i8*, i8** %8, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 28
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = load i8*, i8** %8, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 28
  %156 = getelementptr inbounds i8, i8* %155, i64 1
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = shl i32 %158, 8
  %160 = or i32 %153, %159
  store i32 %160, i32* %10, align 4
  store i8 0, i8* %11, align 1
  store i8 0, i8* %12, align 1
  %161 = load i8*, i8** %6, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 46
  store i8* %162, i8** %6, align 8
  %163 = load i8*, i8** %8, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 46
  store i8* %164, i8** %8, align 8
  %165 = load i8*, i8** %6, align 8
  %166 = load i32, i32* %9, align 4
  %167 = load i32, i32* %10, align 4
  %168 = icmp ult i32 %166, %167
  br i1 %168, label %169, label %171

169:                                              ; preds = %101
  %170 = load i32, i32* %9, align 4
  br label %173

171:                                              ; preds = %101
  %172 = load i32, i32* %10, align 4
  br label %173

173:                                              ; preds = %171, %169
  %174 = phi i32 [ %170, %169 ], [ %172, %171 ]
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %165, i64 %175
  store i8* %176, i8** %7, align 8
  br label %177

177:                                              ; preds = %230, %173
  %178 = load i8*, i8** %6, align 8
  %179 = load i8*, i8** %7, align 8
  %180 = icmp ult i8* %178, %179
  br i1 %180, label %181, label %235

181:                                              ; preds = %177
  %182 = load i8*, i8** %6, align 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = icmp sge i32 %184, 65
  br i1 %185, label %186, label %197

186:                                              ; preds = %181
  %187 = load i8*, i8** %6, align 8
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp sle i32 %189, 90
  br i1 %190, label %191, label %197

191:                                              ; preds = %186
  %192 = load i8*, i8** %6, align 8
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = sub nsw i32 %194, 65
  %196 = add nsw i32 %195, 97
  br label %201

197:                                              ; preds = %186, %181
  %198 = load i8*, i8** %6, align 8
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  br label %201

201:                                              ; preds = %197, %191
  %202 = phi i32 [ %196, %191 ], [ %200, %197 ]
  %203 = trunc i32 %202 to i8
  store i8 %203, i8* %11, align 1
  %204 = zext i8 %203 to i32
  %205 = load i8*, i8** %8, align 8
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = icmp sge i32 %207, 65
  br i1 %208, label %209, label %220

209:                                              ; preds = %201
  %210 = load i8*, i8** %8, align 8
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = icmp sle i32 %212, 90
  br i1 %213, label %214, label %220

214:                                              ; preds = %209
  %215 = load i8*, i8** %8, align 8
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = sub nsw i32 %217, 65
  %219 = add nsw i32 %218, 97
  br label %224

220:                                              ; preds = %209, %201
  %221 = load i8*, i8** %8, align 8
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  br label %224

224:                                              ; preds = %220, %214
  %225 = phi i32 [ %219, %214 ], [ %223, %220 ]
  %226 = trunc i32 %225 to i8
  store i8 %226, i8* %12, align 1
  %227 = zext i8 %226 to i32
  %228 = icmp ne i32 %204, %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %224
  br label %235

230:                                              ; preds = %224
  %231 = load i8*, i8** %6, align 8
  %232 = getelementptr inbounds i8, i8* %231, i32 1
  store i8* %232, i8** %6, align 8
  %233 = load i8*, i8** %8, align 8
  %234 = getelementptr inbounds i8, i8* %233, i32 1
  store i8* %234, i8** %8, align 8
  br label %177, !llvm.loop !184

235:                                              ; preds = %229, %177
  %236 = load i8*, i8** %6, align 8
  %237 = load i8*, i8** %7, align 8
  %238 = icmp eq i8* %236, %237
  br i1 %238, label %239, label %244

239:                                              ; preds = %235
  %240 = load i32, i32* %9, align 4
  %241 = load i32, i32* %10, align 4
  %242 = icmp ult i32 %240, %241
  %243 = zext i1 %242 to i32
  br label %251

244:                                              ; preds = %235
  %245 = load i8, i8* %11, align 1
  %246 = zext i8 %245 to i32
  %247 = load i8, i8* %12, align 1
  %248 = zext i8 %247 to i32
  %249 = icmp slt i32 %246, %248
  %250 = zext i1 %249 to i32
  br label %251

251:                                              ; preds = %239, %244
  %252 = phi i32 [ %243, %239 ], [ %250, %244 ]
  %253 = icmp ne i32 %252, 0
  br label %254

254:                                              ; preds = %251, %95
  %255 = phi i1 [ false, %95 ], [ %253, %251 ]
  %256 = zext i1 %255 to i32
  %257 = sext i32 %256 to i64
  %258 = load i64, i64* %54, align 8
  %259 = add i64 %258, %257
  store i64 %259, i64* %54, align 8
  %260 = load %struct.mz_zip_array*, %struct.mz_zip_array** %49, align 8
  %261 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %262 = load i32*, i32** %50, align 8
  %263 = load i64, i64* %55, align 8
  %264 = getelementptr inbounds i32, i32* %262, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = load i32*, i32** %50, align 8
  %267 = load i64, i64* %54, align 8
  %268 = getelementptr inbounds i32, i32* %266, i64 %267
  %269 = load i32, i32* %268, align 4
  store %struct.mz_zip_array* %260, %struct.mz_zip_array** %13, align 8
  store %struct.mz_zip_array* %261, %struct.mz_zip_array** %14, align 8
  store i32 %265, i32* %15, align 4
  store i32 %269, i32* %16, align 4
  %270 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %271 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %270, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = load %struct.mz_zip_array*, %struct.mz_zip_array** %14, align 8
  %274 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %273, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = bitcast i8* %275 to i32*
  %277 = load i32, i32* %15, align 4
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %276, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds i8, i8* %272, i64 %281
  store i8* %282, i8** %17, align 8
  %283 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %284 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %283, i32 0, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = load %struct.mz_zip_array*, %struct.mz_zip_array** %14, align 8
  %287 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %286, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  %289 = bitcast i8* %288 to i32*
  %290 = load i32, i32* %16, align 4
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds i32, i32* %289, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds i8, i8* %285, i64 %294
  store i8* %295, i8** %19, align 8
  %296 = load i8*, i8** %17, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 28
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = load i8*, i8** %17, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 28
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i32
  %305 = shl i32 %304, 8
  %306 = or i32 %299, %305
  store i32 %306, i32* %20, align 4
  %307 = load i8*, i8** %19, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 28
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i32
  %311 = load i8*, i8** %19, align 8
  %312 = getelementptr inbounds i8, i8* %311, i64 28
  %313 = getelementptr inbounds i8, i8* %312, i64 1
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = shl i32 %315, 8
  %317 = or i32 %310, %316
  store i32 %317, i32* %21, align 4
  store i8 0, i8* %22, align 1
  store i8 0, i8* %23, align 1
  %318 = load i8*, i8** %17, align 8
  %319 = getelementptr inbounds i8, i8* %318, i64 46
  store i8* %319, i8** %17, align 8
  %320 = load i8*, i8** %19, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 46
  store i8* %321, i8** %19, align 8
  %322 = load i8*, i8** %17, align 8
  %323 = load i32, i32* %20, align 4
  %324 = load i32, i32* %21, align 4
  %325 = icmp ult i32 %323, %324
  br i1 %325, label %326, label %328

326:                                              ; preds = %254
  %327 = load i32, i32* %20, align 4
  br label %330

328:                                              ; preds = %254
  %329 = load i32, i32* %21, align 4
  br label %330

330:                                              ; preds = %328, %326
  %331 = phi i32 [ %327, %326 ], [ %329, %328 ]
  %332 = zext i32 %331 to i64
  %333 = getelementptr inbounds i8, i8* %322, i64 %332
  store i8* %333, i8** %18, align 8
  br label %334

334:                                              ; preds = %387, %330
  %335 = load i8*, i8** %17, align 8
  %336 = load i8*, i8** %18, align 8
  %337 = icmp ult i8* %335, %336
  br i1 %337, label %338, label %392

338:                                              ; preds = %334
  %339 = load i8*, i8** %17, align 8
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  %342 = icmp sge i32 %341, 65
  br i1 %342, label %343, label %354

343:                                              ; preds = %338
  %344 = load i8*, i8** %17, align 8
  %345 = load i8, i8* %344, align 1
  %346 = zext i8 %345 to i32
  %347 = icmp sle i32 %346, 90
  br i1 %347, label %348, label %354

348:                                              ; preds = %343
  %349 = load i8*, i8** %17, align 8
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = sub nsw i32 %351, 65
  %353 = add nsw i32 %352, 97
  br label %358

354:                                              ; preds = %343, %338
  %355 = load i8*, i8** %17, align 8
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  br label %358

358:                                              ; preds = %354, %348
  %359 = phi i32 [ %353, %348 ], [ %357, %354 ]
  %360 = trunc i32 %359 to i8
  store i8 %360, i8* %22, align 1
  %361 = zext i8 %360 to i32
  %362 = load i8*, i8** %19, align 8
  %363 = load i8, i8* %362, align 1
  %364 = zext i8 %363 to i32
  %365 = icmp sge i32 %364, 65
  br i1 %365, label %366, label %377

366:                                              ; preds = %358
  %367 = load i8*, i8** %19, align 8
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = icmp sle i32 %369, 90
  br i1 %370, label %371, label %377

371:                                              ; preds = %366
  %372 = load i8*, i8** %19, align 8
  %373 = load i8, i8* %372, align 1
  %374 = zext i8 %373 to i32
  %375 = sub nsw i32 %374, 65
  %376 = add nsw i32 %375, 97
  br label %381

377:                                              ; preds = %366, %358
  %378 = load i8*, i8** %19, align 8
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i32
  br label %381

381:                                              ; preds = %377, %371
  %382 = phi i32 [ %376, %371 ], [ %380, %377 ]
  %383 = trunc i32 %382 to i8
  store i8 %383, i8* %23, align 1
  %384 = zext i8 %383 to i32
  %385 = icmp ne i32 %361, %384
  br i1 %385, label %386, label %387

386:                                              ; preds = %381
  br label %392

387:                                              ; preds = %381
  %388 = load i8*, i8** %17, align 8
  %389 = getelementptr inbounds i8, i8* %388, i32 1
  store i8* %389, i8** %17, align 8
  %390 = load i8*, i8** %19, align 8
  %391 = getelementptr inbounds i8, i8* %390, i32 1
  store i8* %391, i8** %19, align 8
  br label %334, !llvm.loop !184

392:                                              ; preds = %386, %334
  %393 = load i8*, i8** %17, align 8
  %394 = load i8*, i8** %18, align 8
  %395 = icmp eq i8* %393, %394
  br i1 %395, label %396, label %401

396:                                              ; preds = %392
  %397 = load i32, i32* %20, align 4
  %398 = load i32, i32* %21, align 4
  %399 = icmp ult i32 %397, %398
  %400 = zext i1 %399 to i32
  br label %408

401:                                              ; preds = %392
  %402 = load i8, i8* %22, align 1
  %403 = zext i8 %402 to i32
  %404 = load i8, i8* %23, align 1
  %405 = zext i8 %404 to i32
  %406 = icmp slt i32 %403, %405
  %407 = zext i1 %406 to i32
  br label %408

408:                                              ; preds = %396, %401
  %409 = phi i32 [ %400, %396 ], [ %407, %401 ]
  %410 = icmp ne i32 %409, 0
  br i1 %410, label %412, label %411

411:                                              ; preds = %408
  br label %431

412:                                              ; preds = %408
  br label %413

413:                                              ; preds = %412
  %414 = load i32*, i32** %50, align 8
  %415 = load i64, i64* %55, align 8
  %416 = getelementptr inbounds i32, i32* %414, i64 %415
  %417 = load i32, i32* %416, align 4
  store i32 %417, i32* %56, align 4
  %418 = load i32*, i32** %50, align 8
  %419 = load i64, i64* %54, align 8
  %420 = getelementptr inbounds i32, i32* %418, i64 %419
  %421 = load i32, i32* %420, align 4
  %422 = load i32*, i32** %50, align 8
  %423 = load i64, i64* %55, align 8
  %424 = getelementptr inbounds i32, i32* %422, i64 %423
  store i32 %421, i32* %424, align 4
  %425 = load i32, i32* %56, align 4
  %426 = load i32*, i32** %50, align 8
  %427 = load i64, i64* %54, align 8
  %428 = getelementptr inbounds i32, i32* %426, i64 %427
  store i32 %425, i32* %428, align 4
  br label %429

429:                                              ; preds = %413
  %430 = load i64, i64* %54, align 8
  store i64 %430, i64* %55, align 8
  br label %87

431:                                              ; preds = %411, %94
  %432 = load i32, i32* %51, align 4
  %433 = icmp ne i32 %432, 0
  br i1 %433, label %435, label %434

434:                                              ; preds = %431
  br label %438

435:                                              ; preds = %431
  %436 = load i32, i32* %51, align 4
  %437 = add i32 %436, -1
  store i32 %437, i32* %51, align 4
  br label %84

438:                                              ; preds = %434
  %439 = load i32, i32* %53, align 4
  %440 = sub i32 %439, 1
  store i32 %440, i32* %52, align 4
  br label %441

441:                                              ; preds = %806, %438
  %442 = load i32, i32* %52, align 4
  %443 = icmp ugt i32 %442, 0
  br i1 %443, label %444, label %809

444:                                              ; preds = %441
  store i64 0, i64* %58, align 8
  br label %445

445:                                              ; preds = %444
  %446 = load i32*, i32** %50, align 8
  %447 = load i32, i32* %52, align 4
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds i32, i32* %446, i64 %448
  %450 = load i32, i32* %449, align 4
  store i32 %450, i32* %59, align 4
  %451 = load i32*, i32** %50, align 8
  %452 = getelementptr inbounds i32, i32* %451, i64 0
  %453 = load i32, i32* %452, align 4
  %454 = load i32*, i32** %50, align 8
  %455 = load i32, i32* %52, align 4
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds i32, i32* %454, i64 %456
  store i32 %453, i32* %457, align 4
  %458 = load i32, i32* %59, align 4
  %459 = load i32*, i32** %50, align 8
  %460 = getelementptr inbounds i32, i32* %459, i64 0
  store i32 %458, i32* %460, align 4
  br label %461

461:                                              ; preds = %445
  br label %462

462:                                              ; preds = %804, %461
  %463 = load i64, i64* %58, align 8
  %464 = shl i64 %463, 1
  %465 = add i64 %464, 1
  store i64 %465, i64* %57, align 8
  %466 = load i32, i32* %52, align 4
  %467 = zext i32 %466 to i64
  %468 = icmp uge i64 %465, %467
  br i1 %468, label %469, label %470

469:                                              ; preds = %462
  br label %806

470:                                              ; preds = %462
  %471 = load i64, i64* %57, align 8
  %472 = add i64 %471, 1
  %473 = load i32, i32* %52, align 4
  %474 = zext i32 %473 to i64
  %475 = icmp ult i64 %472, %474
  br i1 %475, label %476, label %629

476:                                              ; preds = %470
  %477 = load %struct.mz_zip_array*, %struct.mz_zip_array** %49, align 8
  %478 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %479 = load i32*, i32** %50, align 8
  %480 = load i64, i64* %57, align 8
  %481 = getelementptr inbounds i32, i32* %479, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = load i32*, i32** %50, align 8
  %484 = load i64, i64* %57, align 8
  %485 = add i64 %484, 1
  %486 = getelementptr inbounds i32, i32* %483, i64 %485
  %487 = load i32, i32* %486, align 4
  store %struct.mz_zip_array* %477, %struct.mz_zip_array** %24, align 8
  store %struct.mz_zip_array* %478, %struct.mz_zip_array** %25, align 8
  store i32 %482, i32* %26, align 4
  store i32 %487, i32* %27, align 4
  %488 = load %struct.mz_zip_array*, %struct.mz_zip_array** %24, align 8
  %489 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %488, i32 0, i32 0
  %490 = load i8*, i8** %489, align 8
  %491 = load %struct.mz_zip_array*, %struct.mz_zip_array** %25, align 8
  %492 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %491, i32 0, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = bitcast i8* %493 to i32*
  %495 = load i32, i32* %26, align 4
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds i32, i32* %494, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %490, i64 %499
  store i8* %500, i8** %28, align 8
  %501 = load %struct.mz_zip_array*, %struct.mz_zip_array** %24, align 8
  %502 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %501, i32 0, i32 0
  %503 = load i8*, i8** %502, align 8
  %504 = load %struct.mz_zip_array*, %struct.mz_zip_array** %25, align 8
  %505 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %504, i32 0, i32 0
  %506 = load i8*, i8** %505, align 8
  %507 = bitcast i8* %506 to i32*
  %508 = load i32, i32* %27, align 4
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds i32, i32* %507, i64 %509
  %511 = load i32, i32* %510, align 4
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds i8, i8* %503, i64 %512
  store i8* %513, i8** %30, align 8
  %514 = load i8*, i8** %28, align 8
  %515 = getelementptr inbounds i8, i8* %514, i64 28
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = load i8*, i8** %28, align 8
  %519 = getelementptr inbounds i8, i8* %518, i64 28
  %520 = getelementptr inbounds i8, i8* %519, i64 1
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = shl i32 %522, 8
  %524 = or i32 %517, %523
  store i32 %524, i32* %31, align 4
  %525 = load i8*, i8** %30, align 8
  %526 = getelementptr inbounds i8, i8* %525, i64 28
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i32
  %529 = load i8*, i8** %30, align 8
  %530 = getelementptr inbounds i8, i8* %529, i64 28
  %531 = getelementptr inbounds i8, i8* %530, i64 1
  %532 = load i8, i8* %531, align 1
  %533 = zext i8 %532 to i32
  %534 = shl i32 %533, 8
  %535 = or i32 %528, %534
  store i32 %535, i32* %32, align 4
  store i8 0, i8* %33, align 1
  store i8 0, i8* %34, align 1
  %536 = load i8*, i8** %28, align 8
  %537 = getelementptr inbounds i8, i8* %536, i64 46
  store i8* %537, i8** %28, align 8
  %538 = load i8*, i8** %30, align 8
  %539 = getelementptr inbounds i8, i8* %538, i64 46
  store i8* %539, i8** %30, align 8
  %540 = load i8*, i8** %28, align 8
  %541 = load i32, i32* %31, align 4
  %542 = load i32, i32* %32, align 4
  %543 = icmp ult i32 %541, %542
  br i1 %543, label %544, label %546

544:                                              ; preds = %476
  %545 = load i32, i32* %31, align 4
  br label %548

546:                                              ; preds = %476
  %547 = load i32, i32* %32, align 4
  br label %548

548:                                              ; preds = %546, %544
  %549 = phi i32 [ %545, %544 ], [ %547, %546 ]
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds i8, i8* %540, i64 %550
  store i8* %551, i8** %29, align 8
  br label %552

552:                                              ; preds = %605, %548
  %553 = load i8*, i8** %28, align 8
  %554 = load i8*, i8** %29, align 8
  %555 = icmp ult i8* %553, %554
  br i1 %555, label %556, label %610

556:                                              ; preds = %552
  %557 = load i8*, i8** %28, align 8
  %558 = load i8, i8* %557, align 1
  %559 = zext i8 %558 to i32
  %560 = icmp sge i32 %559, 65
  br i1 %560, label %561, label %572

561:                                              ; preds = %556
  %562 = load i8*, i8** %28, align 8
  %563 = load i8, i8* %562, align 1
  %564 = zext i8 %563 to i32
  %565 = icmp sle i32 %564, 90
  br i1 %565, label %566, label %572

566:                                              ; preds = %561
  %567 = load i8*, i8** %28, align 8
  %568 = load i8, i8* %567, align 1
  %569 = zext i8 %568 to i32
  %570 = sub nsw i32 %569, 65
  %571 = add nsw i32 %570, 97
  br label %576

572:                                              ; preds = %561, %556
  %573 = load i8*, i8** %28, align 8
  %574 = load i8, i8* %573, align 1
  %575 = zext i8 %574 to i32
  br label %576

576:                                              ; preds = %572, %566
  %577 = phi i32 [ %571, %566 ], [ %575, %572 ]
  %578 = trunc i32 %577 to i8
  store i8 %578, i8* %33, align 1
  %579 = zext i8 %578 to i32
  %580 = load i8*, i8** %30, align 8
  %581 = load i8, i8* %580, align 1
  %582 = zext i8 %581 to i32
  %583 = icmp sge i32 %582, 65
  br i1 %583, label %584, label %595

584:                                              ; preds = %576
  %585 = load i8*, i8** %30, align 8
  %586 = load i8, i8* %585, align 1
  %587 = zext i8 %586 to i32
  %588 = icmp sle i32 %587, 90
  br i1 %588, label %589, label %595

589:                                              ; preds = %584
  %590 = load i8*, i8** %30, align 8
  %591 = load i8, i8* %590, align 1
  %592 = zext i8 %591 to i32
  %593 = sub nsw i32 %592, 65
  %594 = add nsw i32 %593, 97
  br label %599

595:                                              ; preds = %584, %576
  %596 = load i8*, i8** %30, align 8
  %597 = load i8, i8* %596, align 1
  %598 = zext i8 %597 to i32
  br label %599

599:                                              ; preds = %595, %589
  %600 = phi i32 [ %594, %589 ], [ %598, %595 ]
  %601 = trunc i32 %600 to i8
  store i8 %601, i8* %34, align 1
  %602 = zext i8 %601 to i32
  %603 = icmp ne i32 %579, %602
  br i1 %603, label %604, label %605

604:                                              ; preds = %599
  br label %610

605:                                              ; preds = %599
  %606 = load i8*, i8** %28, align 8
  %607 = getelementptr inbounds i8, i8* %606, i32 1
  store i8* %607, i8** %28, align 8
  %608 = load i8*, i8** %30, align 8
  %609 = getelementptr inbounds i8, i8* %608, i32 1
  store i8* %609, i8** %30, align 8
  br label %552, !llvm.loop !184

610:                                              ; preds = %604, %552
  %611 = load i8*, i8** %28, align 8
  %612 = load i8*, i8** %29, align 8
  %613 = icmp eq i8* %611, %612
  br i1 %613, label %614, label %619

614:                                              ; preds = %610
  %615 = load i32, i32* %31, align 4
  %616 = load i32, i32* %32, align 4
  %617 = icmp ult i32 %615, %616
  %618 = zext i1 %617 to i32
  br label %626

619:                                              ; preds = %610
  %620 = load i8, i8* %33, align 1
  %621 = zext i8 %620 to i32
  %622 = load i8, i8* %34, align 1
  %623 = zext i8 %622 to i32
  %624 = icmp slt i32 %621, %623
  %625 = zext i1 %624 to i32
  br label %626

626:                                              ; preds = %614, %619
  %627 = phi i32 [ %618, %614 ], [ %625, %619 ]
  %628 = icmp ne i32 %627, 0
  br label %629

629:                                              ; preds = %626, %470
  %630 = phi i1 [ false, %470 ], [ %628, %626 ]
  %631 = zext i1 %630 to i32
  %632 = sext i32 %631 to i64
  %633 = load i64, i64* %57, align 8
  %634 = add i64 %633, %632
  store i64 %634, i64* %57, align 8
  %635 = load %struct.mz_zip_array*, %struct.mz_zip_array** %49, align 8
  %636 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %637 = load i32*, i32** %50, align 8
  %638 = load i64, i64* %58, align 8
  %639 = getelementptr inbounds i32, i32* %637, i64 %638
  %640 = load i32, i32* %639, align 4
  %641 = load i32*, i32** %50, align 8
  %642 = load i64, i64* %57, align 8
  %643 = getelementptr inbounds i32, i32* %641, i64 %642
  %644 = load i32, i32* %643, align 4
  store %struct.mz_zip_array* %635, %struct.mz_zip_array** %35, align 8
  store %struct.mz_zip_array* %636, %struct.mz_zip_array** %36, align 8
  store i32 %640, i32* %37, align 4
  store i32 %644, i32* %38, align 4
  %645 = load %struct.mz_zip_array*, %struct.mz_zip_array** %35, align 8
  %646 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %645, i32 0, i32 0
  %647 = load i8*, i8** %646, align 8
  %648 = load %struct.mz_zip_array*, %struct.mz_zip_array** %36, align 8
  %649 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %648, i32 0, i32 0
  %650 = load i8*, i8** %649, align 8
  %651 = bitcast i8* %650 to i32*
  %652 = load i32, i32* %37, align 4
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds i32, i32* %651, i64 %653
  %655 = load i32, i32* %654, align 4
  %656 = zext i32 %655 to i64
  %657 = getelementptr inbounds i8, i8* %647, i64 %656
  store i8* %657, i8** %39, align 8
  %658 = load %struct.mz_zip_array*, %struct.mz_zip_array** %35, align 8
  %659 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %658, i32 0, i32 0
  %660 = load i8*, i8** %659, align 8
  %661 = load %struct.mz_zip_array*, %struct.mz_zip_array** %36, align 8
  %662 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %661, i32 0, i32 0
  %663 = load i8*, i8** %662, align 8
  %664 = bitcast i8* %663 to i32*
  %665 = load i32, i32* %38, align 4
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds i32, i32* %664, i64 %666
  %668 = load i32, i32* %667, align 4
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds i8, i8* %660, i64 %669
  store i8* %670, i8** %41, align 8
  %671 = load i8*, i8** %39, align 8
  %672 = getelementptr inbounds i8, i8* %671, i64 28
  %673 = load i8, i8* %672, align 1
  %674 = zext i8 %673 to i32
  %675 = load i8*, i8** %39, align 8
  %676 = getelementptr inbounds i8, i8* %675, i64 28
  %677 = getelementptr inbounds i8, i8* %676, i64 1
  %678 = load i8, i8* %677, align 1
  %679 = zext i8 %678 to i32
  %680 = shl i32 %679, 8
  %681 = or i32 %674, %680
  store i32 %681, i32* %42, align 4
  %682 = load i8*, i8** %41, align 8
  %683 = getelementptr inbounds i8, i8* %682, i64 28
  %684 = load i8, i8* %683, align 1
  %685 = zext i8 %684 to i32
  %686 = load i8*, i8** %41, align 8
  %687 = getelementptr inbounds i8, i8* %686, i64 28
  %688 = getelementptr inbounds i8, i8* %687, i64 1
  %689 = load i8, i8* %688, align 1
  %690 = zext i8 %689 to i32
  %691 = shl i32 %690, 8
  %692 = or i32 %685, %691
  store i32 %692, i32* %43, align 4
  store i8 0, i8* %44, align 1
  store i8 0, i8* %45, align 1
  %693 = load i8*, i8** %39, align 8
  %694 = getelementptr inbounds i8, i8* %693, i64 46
  store i8* %694, i8** %39, align 8
  %695 = load i8*, i8** %41, align 8
  %696 = getelementptr inbounds i8, i8* %695, i64 46
  store i8* %696, i8** %41, align 8
  %697 = load i8*, i8** %39, align 8
  %698 = load i32, i32* %42, align 4
  %699 = load i32, i32* %43, align 4
  %700 = icmp ult i32 %698, %699
  br i1 %700, label %701, label %703

701:                                              ; preds = %629
  %702 = load i32, i32* %42, align 4
  br label %705

703:                                              ; preds = %629
  %704 = load i32, i32* %43, align 4
  br label %705

705:                                              ; preds = %703, %701
  %706 = phi i32 [ %702, %701 ], [ %704, %703 ]
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds i8, i8* %697, i64 %707
  store i8* %708, i8** %40, align 8
  br label %709

709:                                              ; preds = %762, %705
  %710 = load i8*, i8** %39, align 8
  %711 = load i8*, i8** %40, align 8
  %712 = icmp ult i8* %710, %711
  br i1 %712, label %713, label %767

713:                                              ; preds = %709
  %714 = load i8*, i8** %39, align 8
  %715 = load i8, i8* %714, align 1
  %716 = zext i8 %715 to i32
  %717 = icmp sge i32 %716, 65
  br i1 %717, label %718, label %729

718:                                              ; preds = %713
  %719 = load i8*, i8** %39, align 8
  %720 = load i8, i8* %719, align 1
  %721 = zext i8 %720 to i32
  %722 = icmp sle i32 %721, 90
  br i1 %722, label %723, label %729

723:                                              ; preds = %718
  %724 = load i8*, i8** %39, align 8
  %725 = load i8, i8* %724, align 1
  %726 = zext i8 %725 to i32
  %727 = sub nsw i32 %726, 65
  %728 = add nsw i32 %727, 97
  br label %733

729:                                              ; preds = %718, %713
  %730 = load i8*, i8** %39, align 8
  %731 = load i8, i8* %730, align 1
  %732 = zext i8 %731 to i32
  br label %733

733:                                              ; preds = %729, %723
  %734 = phi i32 [ %728, %723 ], [ %732, %729 ]
  %735 = trunc i32 %734 to i8
  store i8 %735, i8* %44, align 1
  %736 = zext i8 %735 to i32
  %737 = load i8*, i8** %41, align 8
  %738 = load i8, i8* %737, align 1
  %739 = zext i8 %738 to i32
  %740 = icmp sge i32 %739, 65
  br i1 %740, label %741, label %752

741:                                              ; preds = %733
  %742 = load i8*, i8** %41, align 8
  %743 = load i8, i8* %742, align 1
  %744 = zext i8 %743 to i32
  %745 = icmp sle i32 %744, 90
  br i1 %745, label %746, label %752

746:                                              ; preds = %741
  %747 = load i8*, i8** %41, align 8
  %748 = load i8, i8* %747, align 1
  %749 = zext i8 %748 to i32
  %750 = sub nsw i32 %749, 65
  %751 = add nsw i32 %750, 97
  br label %756

752:                                              ; preds = %741, %733
  %753 = load i8*, i8** %41, align 8
  %754 = load i8, i8* %753, align 1
  %755 = zext i8 %754 to i32
  br label %756

756:                                              ; preds = %752, %746
  %757 = phi i32 [ %751, %746 ], [ %755, %752 ]
  %758 = trunc i32 %757 to i8
  store i8 %758, i8* %45, align 1
  %759 = zext i8 %758 to i32
  %760 = icmp ne i32 %736, %759
  br i1 %760, label %761, label %762

761:                                              ; preds = %756
  br label %767

762:                                              ; preds = %756
  %763 = load i8*, i8** %39, align 8
  %764 = getelementptr inbounds i8, i8* %763, i32 1
  store i8* %764, i8** %39, align 8
  %765 = load i8*, i8** %41, align 8
  %766 = getelementptr inbounds i8, i8* %765, i32 1
  store i8* %766, i8** %41, align 8
  br label %709, !llvm.loop !184

767:                                              ; preds = %761, %709
  %768 = load i8*, i8** %39, align 8
  %769 = load i8*, i8** %40, align 8
  %770 = icmp eq i8* %768, %769
  br i1 %770, label %771, label %776

771:                                              ; preds = %767
  %772 = load i32, i32* %42, align 4
  %773 = load i32, i32* %43, align 4
  %774 = icmp ult i32 %772, %773
  %775 = zext i1 %774 to i32
  br label %783

776:                                              ; preds = %767
  %777 = load i8, i8* %44, align 1
  %778 = zext i8 %777 to i32
  %779 = load i8, i8* %45, align 1
  %780 = zext i8 %779 to i32
  %781 = icmp slt i32 %778, %780
  %782 = zext i1 %781 to i32
  br label %783

783:                                              ; preds = %771, %776
  %784 = phi i32 [ %775, %771 ], [ %782, %776 ]
  %785 = icmp ne i32 %784, 0
  br i1 %785, label %787, label %786

786:                                              ; preds = %783
  br label %806

787:                                              ; preds = %783
  br label %788

788:                                              ; preds = %787
  %789 = load i32*, i32** %50, align 8
  %790 = load i64, i64* %58, align 8
  %791 = getelementptr inbounds i32, i32* %789, i64 %790
  %792 = load i32, i32* %791, align 4
  store i32 %792, i32* %60, align 4
  %793 = load i32*, i32** %50, align 8
  %794 = load i64, i64* %57, align 8
  %795 = getelementptr inbounds i32, i32* %793, i64 %794
  %796 = load i32, i32* %795, align 4
  %797 = load i32*, i32** %50, align 8
  %798 = load i64, i64* %58, align 8
  %799 = getelementptr inbounds i32, i32* %797, i64 %798
  store i32 %796, i32* %799, align 4
  %800 = load i32, i32* %60, align 4
  %801 = load i32*, i32** %50, align 8
  %802 = load i64, i64* %57, align 8
  %803 = getelementptr inbounds i32, i32* %801, i64 %802
  store i32 %800, i32* %803, align 4
  br label %804

804:                                              ; preds = %788
  %805 = load i64, i64* %57, align 8
  store i64 %805, i64* %58, align 8
  br label %462

806:                                              ; preds = %786, %469
  %807 = load i32, i32* %52, align 4
  %808 = add i32 %807, -1
  store i32 %808, i32* %52, align 4
  br label %441, !llvm.loop !185

809:                                              ; preds = %73, %441
  ret void
}

declare dso_local i64 @fread(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) #5

declare dso_local i64 @fwrite(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) #5

; Function Attrs: nounwind
declare dso_local i32 @utime(i8* noundef, %struct.utimbuf* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mz_zip_dos_to_time_t(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.tm, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %6 = bitcast %struct.tm* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false)
  %7 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 8
  store i32 -1, i32* %7, align 8
  %8 = load i32, i32* %4, align 4
  %9 = ashr i32 %8, 9
  %10 = and i32 %9, 127
  %11 = add nsw i32 %10, 1980
  %12 = sub nsw i32 %11, 1900
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 5
  store i32 %12, i32* %13, align 4
  %14 = load i32, i32* %4, align 4
  %15 = ashr i32 %14, 5
  %16 = and i32 %15, 15
  %17 = sub nsw i32 %16, 1
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 4
  store i32 %17, i32* %18, align 8
  %19 = load i32, i32* %4, align 4
  %20 = and i32 %19, 31
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 3
  store i32 %20, i32* %21, align 4
  %22 = load i32, i32* %3, align 4
  %23 = ashr i32 %22, 11
  %24 = and i32 %23, 31
  %25 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = load i32, i32* %3, align 4
  %27 = ashr i32 %26, 5
  %28 = and i32 %27, 63
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 1
  store i32 %28, i32* %29, align 4
  %30 = load i32, i32* %3, align 4
  %31 = shl i32 %30, 1
  %32 = and i32 %31, 62
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 0
  store i32 %32, i32* %33, align 8
  %34 = call i64 @mktime(%struct.tm* noundef %5) #7
  ret i64 %34
}

; Function Attrs: nounwind
declare dso_local i64 @mktime(%struct.tm* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive* noundef %0, %struct.mz_zip_array* noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive*, align 8
  %7 = alloca %struct.mz_zip_array*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %6, align 8
  store %struct.mz_zip_array* %1, %struct.mz_zip_array** %7, align 8
  store i64 %2, i64* %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = load i64, i64* %8, align 8
  store i64 %12, i64* %11, align 8
  %13 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %14 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  br label %19

18:                                               ; preds = %4
  call void @__assert_fail(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 noundef 3360, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity, i64 0, i64 0)) #8
  unreachable

19:                                               ; preds = %17
  %20 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %21 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %20, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = load i64, i64* %8, align 8
  %24 = icmp uge i64 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  store i32 1, i32* %5, align 4
  br label %74

26:                                               ; preds = %19
  %27 = load i32, i32* %9, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %49

29:                                               ; preds = %26
  %30 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %31 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %30, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 1, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  br label %39

35:                                               ; preds = %29
  %36 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %37 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %36, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %35, %34
  %40 = phi i64 [ 1, %34 ], [ %38, %35 ]
  store i64 %40, i64* %11, align 8
  br label %41

41:                                               ; preds = %45, %39
  %42 = load i64, i64* %11, align 8
  %43 = load i64, i64* %8, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = load i64, i64* %11, align 8
  %47 = mul i64 %46, 2
  store i64 %47, i64* %11, align 8
  br label %41, !llvm.loop !186

48:                                               ; preds = %41
  br label %49

49:                                               ; preds = %48, %26
  %50 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %50, i32 0, i32 9
  %52 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %51, align 8
  %53 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %6, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive, %struct.mz_zip_archive* %53, i32 0, i32 10
  %55 = load i8*, i8** %54, align 8
  %56 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %57 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %56, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %60 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = zext i32 %61 to i64
  %63 = load i64, i64* %11, align 8
  %64 = call i8* %52(i8* noundef %55, i8* noundef %58, i64 noundef %62, i64 noundef %63)
  store i8* %64, i8** %10, align 8
  %65 = icmp eq i8* null, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %49
  store i32 0, i32* %5, align 4
  br label %74

67:                                               ; preds = %49
  %68 = load i8*, i8** %10, align 8
  %69 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %70 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %69, i32 0, i32 0
  store i8* %68, i8** %70, align 8
  %71 = load i64, i64* %11, align 8
  %72 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %73 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %72, i32 0, i32 2
  store i64 %71, i64* %73, align 8
  store i32 1, i32* %5, align 4
  br label %74

74:                                               ; preds = %67, %66, %25
  %75 = load i32, i32* %5, align 4
  ret i32 %75
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mz_zip_writer_create_central_dir_header(%struct.mz_zip_archive* noundef %0, i8* noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4, i64 noundef %5, i64 noundef %6, i32 noundef %7, i16 noundef zeroext %8, i16 noundef zeroext %9, i16 noundef zeroext %10, i16 noundef zeroext %11, i64 noundef %12, i32 noundef %13) #0 {
  %15 = alloca i8*, align 8
  %16 = alloca i16, align 2
  %17 = alloca i8*, align 8
  %18 = alloca i16, align 2
  %19 = alloca i8*, align 8
  %20 = alloca i16, align 2
  %21 = alloca i8*, align 8
  %22 = alloca i16, align 2
  %23 = alloca i8*, align 8
  %24 = alloca i16, align 2
  %25 = alloca i8*, align 8
  %26 = alloca i16, align 2
  %27 = alloca i8*, align 8
  %28 = alloca i16, align 2
  %29 = alloca i8*, align 8
  %30 = alloca i16, align 2
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i8*, align 8
  %40 = alloca i32, align 4
  %41 = alloca i8*, align 8
  %42 = alloca i32, align 4
  %43 = alloca %struct.mz_zip_archive*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca i16, align 2
  %46 = alloca i16, align 2
  %47 = alloca i16, align 2
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i32, align 4
  %51 = alloca i16, align 2
  %52 = alloca i16, align 2
  %53 = alloca i16, align 2
  %54 = alloca i16, align 2
  %55 = alloca i64, align 8
  %56 = alloca i32, align 4
  store %struct.mz_zip_archive* %0, %struct.mz_zip_archive** %43, align 8
  store i8* %1, i8** %44, align 8
  store i16 %2, i16* %45, align 2
  store i16 %3, i16* %46, align 2
  store i16 %4, i16* %47, align 2
  store i64 %5, i64* %48, align 8
  store i64 %6, i64* %49, align 8
  store i32 %7, i32* %50, align 4
  store i16 %8, i16* %51, align 2
  store i16 %9, i16* %52, align 2
  store i16 %10, i16* %53, align 2
  store i16 %11, i16* %54, align 2
  store i64 %12, i64* %55, align 8
  store i32 %13, i32* %56, align 4
  %57 = load %struct.mz_zip_archive*, %struct.mz_zip_archive** %43, align 8
  %58 = load i8*, i8** %44, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 0, i64 46, i1 false)
  %59 = load i8*, i8** %44, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 0
  store i8* %60, i8** %31, align 8
  store i32 33639248, i32* %32, align 4
  %61 = load i32, i32* %32, align 4
  %62 = trunc i32 %61 to i8
  %63 = load i8*, i8** %31, align 8
  store i8 %62, i8* %63, align 1
  %64 = load i32, i32* %32, align 4
  %65 = lshr i32 %64, 8
  %66 = trunc i32 %65 to i8
  %67 = load i8*, i8** %31, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 1
  store i8 %66, i8* %68, align 1
  %69 = load i32, i32* %32, align 4
  %70 = lshr i32 %69, 16
  %71 = trunc i32 %70 to i8
  %72 = load i8*, i8** %31, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 2
  store i8 %71, i8* %73, align 1
  %74 = load i32, i32* %32, align 4
  %75 = lshr i32 %74, 24
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %31, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 3
  store i8 %76, i8* %78, align 1
  %79 = load i8*, i8** %44, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 6
  %81 = load i16, i16* %51, align 2
  %82 = zext i16 %81 to i32
  %83 = icmp ne i32 %82, 0
  %84 = zext i1 %83 to i64
  %85 = select i1 %83, i32 20, i32 0
  %86 = trunc i32 %85 to i16
  store i8* %80, i8** %15, align 8
  store i16 %86, i16* %16, align 2
  %87 = load i16, i16* %16, align 2
  %88 = trunc i16 %87 to i8
  %89 = load i8*, i8** %15, align 8
  store i8 %88, i8* %89, align 1
  %90 = load i16, i16* %16, align 2
  %91 = zext i16 %90 to i32
  %92 = ashr i32 %91, 8
  %93 = trunc i32 %92 to i8
  %94 = load i8*, i8** %15, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  store i8 %93, i8* %95, align 1
  %96 = load i8*, i8** %44, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 8
  %98 = load i16, i16* %52, align 2
  store i8* %97, i8** %17, align 8
  store i16 %98, i16* %18, align 2
  %99 = load i16, i16* %18, align 2
  %100 = trunc i16 %99 to i8
  %101 = load i8*, i8** %17, align 8
  store i8 %100, i8* %101, align 1
  %102 = load i16, i16* %18, align 2
  %103 = zext i16 %102 to i32
  %104 = ashr i32 %103, 8
  %105 = trunc i32 %104 to i8
  %106 = load i8*, i8** %17, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  store i8 %105, i8* %107, align 1
  %108 = load i8*, i8** %44, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 10
  %110 = load i16, i16* %51, align 2
  store i8* %109, i8** %19, align 8
  store i16 %110, i16* %20, align 2
  %111 = load i16, i16* %20, align 2
  %112 = trunc i16 %111 to i8
  %113 = load i8*, i8** %19, align 8
  store i8 %112, i8* %113, align 1
  %114 = load i16, i16* %20, align 2
  %115 = zext i16 %114 to i32
  %116 = ashr i32 %115, 8
  %117 = trunc i32 %116 to i8
  %118 = load i8*, i8** %19, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  store i8 %117, i8* %119, align 1
  %120 = load i8*, i8** %44, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 12
  %122 = load i16, i16* %53, align 2
  store i8* %121, i8** %21, align 8
  store i16 %122, i16* %22, align 2
  %123 = load i16, i16* %22, align 2
  %124 = trunc i16 %123 to i8
  %125 = load i8*, i8** %21, align 8
  store i8 %124, i8* %125, align 1
  %126 = load i16, i16* %22, align 2
  %127 = zext i16 %126 to i32
  %128 = ashr i32 %127, 8
  %129 = trunc i32 %128 to i8
  %130 = load i8*, i8** %21, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  store i8 %129, i8* %131, align 1
  %132 = load i8*, i8** %44, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 14
  %134 = load i16, i16* %54, align 2
  store i8* %133, i8** %23, align 8
  store i16 %134, i16* %24, align 2
  %135 = load i16, i16* %24, align 2
  %136 = trunc i16 %135 to i8
  %137 = load i8*, i8** %23, align 8
  store i8 %136, i8* %137, align 1
  %138 = load i16, i16* %24, align 2
  %139 = zext i16 %138 to i32
  %140 = ashr i32 %139, 8
  %141 = trunc i32 %140 to i8
  %142 = load i8*, i8** %23, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  store i8 %141, i8* %143, align 1
  %144 = load i8*, i8** %44, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 16
  %146 = load i32, i32* %50, align 4
  store i8* %145, i8** %33, align 8
  store i32 %146, i32* %34, align 4
  %147 = load i32, i32* %34, align 4
  %148 = trunc i32 %147 to i8
  %149 = load i8*, i8** %33, align 8
  store i8 %148, i8* %149, align 1
  %150 = load i32, i32* %34, align 4
  %151 = lshr i32 %150, 8
  %152 = trunc i32 %151 to i8
  %153 = load i8*, i8** %33, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 1
  store i8 %152, i8* %154, align 1
  %155 = load i32, i32* %34, align 4
  %156 = lshr i32 %155, 16
  %157 = trunc i32 %156 to i8
  %158 = load i8*, i8** %33, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 2
  store i8 %157, i8* %159, align 1
  %160 = load i32, i32* %34, align 4
  %161 = lshr i32 %160, 24
  %162 = trunc i32 %161 to i8
  %163 = load i8*, i8** %33, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 3
  store i8 %162, i8* %164, align 1
  %165 = load i8*, i8** %44, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 20
  %167 = load i64, i64* %49, align 8
  %168 = icmp ult i64 %167, 4294967295
  br i1 %168, label %169, label %171

169:                                              ; preds = %14
  %170 = load i64, i64* %49, align 8
  br label %172

171:                                              ; preds = %14
  br label %172

172:                                              ; preds = %171, %169
  %173 = phi i64 [ %170, %169 ], [ 4294967295, %171 ]
  %174 = trunc i64 %173 to i32
  store i8* %166, i8** %35, align 8
  store i32 %174, i32* %36, align 4
  %175 = load i32, i32* %36, align 4
  %176 = trunc i32 %175 to i8
  %177 = load i8*, i8** %35, align 8
  store i8 %176, i8* %177, align 1
  %178 = load i32, i32* %36, align 4
  %179 = lshr i32 %178, 8
  %180 = trunc i32 %179 to i8
  %181 = load i8*, i8** %35, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 1
  store i8 %180, i8* %182, align 1
  %183 = load i32, i32* %36, align 4
  %184 = lshr i32 %183, 16
  %185 = trunc i32 %184 to i8
  %186 = load i8*, i8** %35, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 2
  store i8 %185, i8* %187, align 1
  %188 = load i32, i32* %36, align 4
  %189 = lshr i32 %188, 24
  %190 = trunc i32 %189 to i8
  %191 = load i8*, i8** %35, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 3
  store i8 %190, i8* %192, align 1
  %193 = load i8*, i8** %44, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 24
  %195 = load i64, i64* %48, align 8
  %196 = icmp ult i64 %195, 4294967295
  br i1 %196, label %197, label %199

197:                                              ; preds = %172
  %198 = load i64, i64* %48, align 8
  br label %200

199:                                              ; preds = %172
  br label %200

200:                                              ; preds = %199, %197
  %201 = phi i64 [ %198, %197 ], [ 4294967295, %199 ]
  %202 = trunc i64 %201 to i32
  store i8* %194, i8** %37, align 8
  store i32 %202, i32* %38, align 4
  %203 = load i32, i32* %38, align 4
  %204 = trunc i32 %203 to i8
  %205 = load i8*, i8** %37, align 8
  store i8 %204, i8* %205, align 1
  %206 = load i32, i32* %38, align 4
  %207 = lshr i32 %206, 8
  %208 = trunc i32 %207 to i8
  %209 = load i8*, i8** %37, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 1
  store i8 %208, i8* %210, align 1
  %211 = load i32, i32* %38, align 4
  %212 = lshr i32 %211, 16
  %213 = trunc i32 %212 to i8
  %214 = load i8*, i8** %37, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 2
  store i8 %213, i8* %215, align 1
  %216 = load i32, i32* %38, align 4
  %217 = lshr i32 %216, 24
  %218 = trunc i32 %217 to i8
  %219 = load i8*, i8** %37, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 3
  store i8 %218, i8* %220, align 1
  %221 = load i8*, i8** %44, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 28
  %223 = load i16, i16* %45, align 2
  store i8* %222, i8** %25, align 8
  store i16 %223, i16* %26, align 2
  %224 = load i16, i16* %26, align 2
  %225 = trunc i16 %224 to i8
  %226 = load i8*, i8** %25, align 8
  store i8 %225, i8* %226, align 1
  %227 = load i16, i16* %26, align 2
  %228 = zext i16 %227 to i32
  %229 = ashr i32 %228, 8
  %230 = trunc i32 %229 to i8
  %231 = load i8*, i8** %25, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 1
  store i8 %230, i8* %232, align 1
  %233 = load i8*, i8** %44, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 30
  %235 = load i16, i16* %46, align 2
  store i8* %234, i8** %27, align 8
  store i16 %235, i16* %28, align 2
  %236 = load i16, i16* %28, align 2
  %237 = trunc i16 %236 to i8
  %238 = load i8*, i8** %27, align 8
  store i8 %237, i8* %238, align 1
  %239 = load i16, i16* %28, align 2
  %240 = zext i16 %239 to i32
  %241 = ashr i32 %240, 8
  %242 = trunc i32 %241 to i8
  %243 = load i8*, i8** %27, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 1
  store i8 %242, i8* %244, align 1
  %245 = load i8*, i8** %44, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 32
  %247 = load i16, i16* %47, align 2
  store i8* %246, i8** %29, align 8
  store i16 %247, i16* %30, align 2
  %248 = load i16, i16* %30, align 2
  %249 = trunc i16 %248 to i8
  %250 = load i8*, i8** %29, align 8
  store i8 %249, i8* %250, align 1
  %251 = load i16, i16* %30, align 2
  %252 = zext i16 %251 to i32
  %253 = ashr i32 %252, 8
  %254 = trunc i32 %253 to i8
  %255 = load i8*, i8** %29, align 8
  %256 = getelementptr inbounds i8, i8* %255, i64 1
  store i8 %254, i8* %256, align 1
  %257 = load i8*, i8** %44, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 38
  %259 = load i32, i32* %56, align 4
  store i8* %258, i8** %39, align 8
  store i32 %259, i32* %40, align 4
  %260 = load i32, i32* %40, align 4
  %261 = trunc i32 %260 to i8
  %262 = load i8*, i8** %39, align 8
  store i8 %261, i8* %262, align 1
  %263 = load i32, i32* %40, align 4
  %264 = lshr i32 %263, 8
  %265 = trunc i32 %264 to i8
  %266 = load i8*, i8** %39, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 1
  store i8 %265, i8* %267, align 1
  %268 = load i32, i32* %40, align 4
  %269 = lshr i32 %268, 16
  %270 = trunc i32 %269 to i8
  %271 = load i8*, i8** %39, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 2
  store i8 %270, i8* %272, align 1
  %273 = load i32, i32* %40, align 4
  %274 = lshr i32 %273, 24
  %275 = trunc i32 %274 to i8
  %276 = load i8*, i8** %39, align 8
  %277 = getelementptr inbounds i8, i8* %276, i64 3
  store i8 %275, i8* %277, align 1
  %278 = load i8*, i8** %44, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 42
  %280 = load i64, i64* %55, align 8
  %281 = icmp ult i64 %280, 4294967295
  br i1 %281, label %282, label %284

282:                                              ; preds = %200
  %283 = load i64, i64* %55, align 8
  br label %285

284:                                              ; preds = %200
  br label %285

285:                                              ; preds = %284, %282
  %286 = phi i64 [ %283, %282 ], [ 4294967295, %284 ]
  %287 = trunc i64 %286 to i32
  store i8* %279, i8** %41, align 8
  store i32 %287, i32* %42, align 4
  %288 = load i32, i32* %42, align 4
  %289 = trunc i32 %288 to i8
  %290 = load i8*, i8** %41, align 8
  store i8 %289, i8* %290, align 1
  %291 = load i32, i32* %42, align 4
  %292 = lshr i32 %291, 8
  %293 = trunc i32 %292 to i8
  %294 = load i8*, i8** %41, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  store i8 %293, i8* %295, align 1
  %296 = load i32, i32* %42, align 4
  %297 = lshr i32 %296, 16
  %298 = trunc i32 %297 to i8
  %299 = load i8*, i8** %41, align 8
  %300 = getelementptr inbounds i8, i8* %299, i64 2
  store i8 %298, i8* %300, align 1
  %301 = load i32, i32* %42, align 4
  %302 = lshr i32 %301, 24
  %303 = trunc i32 %302 to i8
  %304 = load i8*, i8** %41, align 8
  %305 = getelementptr inbounds i8, i8* %304, i64 3
  store i8 %303, i8* %305, align 1
  ret i32 1
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { argmemonly nofree nounwind willreturn writeonly }
attributes #3 = { argmemonly nofree nounwind willreturn }
attributes #4 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.0"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.mustprogress"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !5}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !5}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !5}
!17 = distinct !{!17, !5}
!18 = distinct !{!18, !5}
!19 = distinct !{!19, !5}
!20 = distinct !{!20, !5}
!21 = distinct !{!21, !5}
!22 = distinct !{!22, !5}
!23 = distinct !{!23, !5}
!24 = distinct !{!24, !5}
!25 = distinct !{!25, !5}
!26 = distinct !{!26, !5}
!27 = distinct !{!27, !5}
!28 = distinct !{!28, !5}
!29 = distinct !{!29, !5}
!30 = distinct !{!30, !5}
!31 = distinct !{!31, !5}
!32 = distinct !{!32, !5}
!33 = distinct !{!33, !5}
!34 = distinct !{!34, !5}
!35 = distinct !{!35, !5}
!36 = distinct !{!36, !5}
!37 = distinct !{!37, !5}
!38 = distinct !{!38, !5}
!39 = distinct !{!39, !5}
!40 = distinct !{!40, !5}
!41 = distinct !{!41, !5}
!42 = distinct !{!42, !5}
!43 = distinct !{!43, !5}
!44 = distinct !{!44, !5}
!45 = distinct !{!45, !5}
!46 = distinct !{!46, !5}
!47 = distinct !{!47, !5}
!48 = distinct !{!48, !5}
!49 = distinct !{!49, !5}
!50 = distinct !{!50, !5}
!51 = distinct !{!51, !5}
!52 = distinct !{!52, !5}
!53 = distinct !{!53, !5}
!54 = distinct !{!54, !5}
!55 = distinct !{!55, !5}
!56 = distinct !{!56, !5}
!57 = distinct !{!57, !5}
!58 = distinct !{!58, !5}
!59 = distinct !{!59, !5}
!60 = distinct !{!60, !5}
!61 = distinct !{!61, !5}
!62 = distinct !{!62, !5}
!63 = distinct !{!63, !5}
!64 = distinct !{!64, !5}
!65 = distinct !{!65, !5}
!66 = distinct !{!66, !5}
!67 = distinct !{!67, !5}
!68 = distinct !{!68, !5}
!69 = distinct !{!69, !5}
!70 = distinct !{!70, !5}
!71 = distinct !{!71, !5}
!72 = distinct !{!72, !5}
!73 = distinct !{!73, !5}
!74 = distinct !{!74, !5}
!75 = distinct !{!75, !5}
!76 = distinct !{!76, !5}
!77 = distinct !{!77, !5}
!78 = distinct !{!78, !5}
!79 = distinct !{!79, !5}
!80 = distinct !{!80, !5}
!81 = distinct !{!81, !5}
!82 = distinct !{!82, !5}
!83 = distinct !{!83, !5}
!84 = distinct !{!84, !5}
!85 = distinct !{!85, !5}
!86 = distinct !{!86, !5}
!87 = distinct !{!87, !5}
!88 = distinct !{!88, !5}
!89 = distinct !{!89, !5}
!90 = distinct !{!90, !5}
!91 = distinct !{!91, !5}
!92 = distinct !{!92, !5}
!93 = distinct !{!93, !5}
!94 = distinct !{!94, !5}
!95 = distinct !{!95, !5}
!96 = distinct !{!96, !5}
!97 = distinct !{!97, !5}
!98 = distinct !{!98, !5}
!99 = distinct !{!99, !5}
!100 = distinct !{!100, !5}
!101 = distinct !{!101, !5}
!102 = distinct !{!102, !5}
!103 = distinct !{!103, !5}
!104 = distinct !{!104, !5}
!105 = distinct !{!105, !5}
!106 = distinct !{!106, !5}
!107 = distinct !{!107, !5}
!108 = distinct !{!108, !5}
!109 = distinct !{!109, !5}
!110 = distinct !{!110, !5}
!111 = distinct !{!111, !5}
!112 = distinct !{!112, !5}
!113 = distinct !{!113, !5}
!114 = distinct !{!114, !5}
!115 = distinct !{!115, !5}
!116 = distinct !{!116, !5}
!117 = distinct !{!117, !5}
!118 = distinct !{!118, !5}
!119 = distinct !{!119, !5}
!120 = distinct !{!120, !5}
!121 = distinct !{!121, !5}
!122 = distinct !{!122, !5}
!123 = distinct !{!123, !5}
!124 = distinct !{!124, !5}
!125 = distinct !{!125, !5}
!126 = distinct !{!126, !5}
!127 = distinct !{!127, !5}
!128 = distinct !{!128, !5}
!129 = distinct !{!129, !5}
!130 = distinct !{!130, !5}
!131 = distinct !{!131, !5}
!132 = distinct !{!132, !5}
!133 = distinct !{!133, !5}
!134 = distinct !{!134, !5}
!135 = distinct !{!135, !5}
!136 = distinct !{!136, !5}
!137 = distinct !{!137, !5}
!138 = distinct !{!138, !5}
!139 = distinct !{!139, !5}
!140 = distinct !{!140, !5}
!141 = distinct !{!141, !5}
!142 = distinct !{!142, !5}
!143 = distinct !{!143, !5}
!144 = distinct !{!144, !5}
!145 = distinct !{!145, !5}
!146 = distinct !{!146, !5}
!147 = distinct !{!147, !5}
!148 = distinct !{!148, !5}
!149 = distinct !{!149, !5}
!150 = distinct !{!150, !5}
!151 = distinct !{!151, !5}
!152 = distinct !{!152, !5}
!153 = distinct !{!153, !5}
!154 = distinct !{!154, !5}
!155 = distinct !{!155, !5}
!156 = distinct !{!156, !5}
!157 = distinct !{!157, !5}
!158 = distinct !{!158, !5}
!159 = distinct !{!159, !5}
!160 = distinct !{!160, !5}
!161 = distinct !{!161, !5}
!162 = distinct !{!162, !5}
!163 = distinct !{!163, !5}
!164 = distinct !{!164, !5}
!165 = distinct !{!165, !5}
!166 = distinct !{!166, !5}
!167 = distinct !{!167, !5}
!168 = distinct !{!168, !5}
!169 = distinct !{!169, !5}
!170 = distinct !{!170, !5}
!171 = distinct !{!171, !5}
!172 = distinct !{!172, !5}
!173 = distinct !{!173, !5}
!174 = distinct !{!174, !5}
!175 = distinct !{!175, !5}
!176 = distinct !{!176, !5}
!177 = distinct !{!177, !5}
!178 = distinct !{!178, !5}
!179 = distinct !{!179, !5}
!180 = distinct !{!180, !5}
!181 = distinct !{!181, !5}
!182 = distinct !{!182, !5}
!183 = distinct !{!183, !5}
!184 = distinct !{!184, !5}
!185 = distinct !{!185, !5}
!186 = distinct !{!186, !5}
